+:00041 loop_start counter=5 jit-addr=00007fb48d1e8133
 :00042 _%18 = %12 > %17                     [Integer][Integer]
 :00043 condbr _%18 =>:00066
 1a6:  mov    rdi,QWORD PTR [rbp-0x70]
 1aa:  mov    rsi,QWORD PTR [rbp-0x98]
 1b1:  test   rdi,0x1
 1b8:  je     0xfffbc5dc
 1be:  test   rsi,0x1
 1c5:  je     0xfffbc5dc
 1cb:  cmp    rdi,rsi
 1ce:  jg     0xfffbc5d7

:00044 %18 = %7 * %7                        [Float][Float]
 1d4:  mov    rdi,QWORD PTR [rbp-0x48]  ;%7
 1d8:  test   rdi,0x1
 1df:  jne    0xfffbc5fb
 1e5:  test   rdi,0x2
 1ec:  je     0xfffbc5fb
 1f2:  xorps  xmm2,xmm2
 1f5:  movabs rax,0x8000000000000002
 1ff:  cmp    rdi,rax
 202:  je     0x223
 208:  mov    rax,rdi
 20b:  sar    rax,0x3f
 20f:  add    rax,0x2
 213:  and    rdi,0xfffffffffffffffc
 217:  or     rdi,rax
 21a:  rol    rdi,0x3d
 21e:  movq   xmm2,rdi
 223:  movq   xmm3,xmm2
 227:  mulsd  xmm3,xmm2

:00045 %19 = %8 * %8                        [Float][Float]
 22b:  mov    rdi,QWORD PTR [rbp-0x50]  ;%8
 22f:  test   rdi,0x1
 236:  jne    0xfffbc60a
 23c:  test   rdi,0x2
 243:  je     0xfffbc60a
 249:  xorps  xmm4,xmm4
 24c:  movabs rax,0x8000000000000002
 256:  cmp    rdi,rax
 259:  je     0x27a
 25f:  mov    rax,rdi
 262:  sar    rax,0x3f
 266:  add    rax,0x2
 26a:  and    rdi,0xfffffffffffffffc
 26e:  or     rdi,rax
 271:  rol    rdi,0x3d
 275:  movq   xmm4,rdi
 27a:  movq   xmm5,xmm4
 27e:  mulsd  xmm5,xmm4

:00046 %18 = %18 - %19                      [Float][Float]
 282:  subsd  xmm3,xmm5

:00047 %13 = %18 + %9                       [Float][Float]
 286:  mov    rdi,QWORD PTR [rbp-0x58]  ;%9
 28a:  test   rdi,0x1
 291:  jne    0xfffbc629
 297:  test   rdi,0x2
 29e:  je     0xfffbc629
 2a4:  xorps  xmm6,xmm6
 2a7:  movabs rax,0x8000000000000002
 2b1:  cmp    rdi,rax
 2b4:  je     0x2d5
 2ba:  mov    rax,rdi
 2bd:  sar    rax,0x3f
 2c1:  add    rax,0x2
 2c5:  and    rdi,0xfffffffffffffffc
 2c9:  or     rdi,rax
 2cc:  rol    rdi,0x3d
 2d0:  movq   xmm6,rdi
 2d5:  movq   xmm7,xmm3
 2d9:  addsd  xmm7,xmm6

:00048 %18 = 2: i16 * %7                    [Integer][Float]
 2dd:  movq   xmm3,QWORD PTR [rip+0x56d]        # 0x852
 2e5:  mulsd  xmm3,xmm2

:00049 %18 = %18 * %8                       [Float][Float]
 2e9:  mulsd  xmm3,xmm4

:00050 %14 = %18 + %10                      [Float][Float]
 2ed:  mov    rdi,QWORD PTR [rbp-0x60]  ;%10
 2f1:  test   rdi,0x1
 2f8:  jne    0xfffbc658
 2fe:  test   rdi,0x2
 305:  je     0xfffbc658
 30b:  xorps  xmm8,xmm8
 30f:  movabs rax,0x8000000000000002
 319:  cmp    rdi,rax
 31c:  je     0x33d
 322:  mov    rax,rdi
 325:  sar    rax,0x3f
 329:  add    rax,0x2
 32d:  and    rdi,0xfffffffffffffffc
 331:  or     rdi,rax
 334:  rol    rdi,0x3d
 338:  movq   xmm8,rdi
 33d:  movq   xmm9,xmm3
 342:  addsd  xmm9,xmm8

:00051 %18 = %13
:00052 %19 = %14
:00053 %7 = %18
:00054 %8 = %19
:00055 %18 = %7 * %7   
 347:  movq   xmm2,xmm7
 34b:  mulsd  xmm2,xmm7

:00056 %19 = %8 * %8                        [Float][Float]
 34f:  movq   xmm3,xmm9
 354:  mulsd  xmm3,xmm9

:00057 %18 = %18 + %19                      [Float][Float]
 359:  addsd  xmm2,xmm3

:00058 %19 = const[LIMIT_SQUARED]           [4.0]
 35d:  mov    rax,QWORD PTR [rip+0xfffffffffffff06e]        # 0xfffff3d2
 364:  cmp    rax,QWORD PTR [rip+0x507]        # 0x872
 36b:  jne    0xfffbc6d6
 371:  movq   xmm3,QWORD PTR [rip+0x509]        # 0x882
 379:  mov    rax,QWORD PTR [rip+0x4e2]        # 0x862
 380:  mov    QWORD PTR [rbp-0xa8],rax

:00059 _%18 = %18 > %19                     [Float][Float]
:00060 condbr _%18 =>:00062
 387:  ucomisd xmm2,xmm3
 38b:  ja     0xfffbc7b8

:00061 br =>:00064
 391:  movq   xmm0,xmm2
 395:  call   0xffffd392
 39a:  mov    QWORD PTR [rbp-0xa0],rax  %18
 3a1:  movq   xmm0,xmm7
 3a5:  call   0xffffd392
 3aa:  mov    QWORD PTR [rbp-0x78],rax  ;%13
 3ae:  mov    QWORD PTR [rbp-0x48],rax  ;%7
 3b2:  movq   xmm0,xmm9
 3b7:  call   0xffffd392
 3bc:  mov    QWORD PTR [rbp-0x80],rax  ;%14
 3c0:  mov    QWORD PTR [rbp-0x50],rax  ;%8
 3c4:  jmp    0x3d9

+:00062 %11 = literal[true]
 3c9:  mov    rax,0x1c
 3d0:  mov    QWORD PTR [rbp-0x68],rax

:00063 br =>:00066
 3d4:  jmp    0x3fd

+:00064 %12 = %12 + 1: i16                   [Integer][Integer]
 3d9:  mov    rdi,QWORD PTR [rbp-0x70]
 3dd:  test   rdi,0x1
 3e4:  je     0xfffbc861
 3ea:  add    rdi,0x2
 3ee:  jo     0xfffbc861
 3f4:  mov    QWORD PTR [rbp-0x70],rdi

:00065 br =>:00041
 3f8:  jmp    0x1a6

+:00066 loop_end
