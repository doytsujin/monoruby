==> start whole compile: initialize FuncId(61) self_class:Vec start:[00000] bytecode:0x563184ca4b10
<== finished compile. elapsed:7.9µs
offset:Pos(12585) code: 93 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x48],0x4
  00010: mov    rdi,QWORD PTR [rbp-0x28]
  00014: test   rdi,0x7
  0001b: jne    0x3d443
  00021: cmp    DWORD PTR [rdi+0x4],0x28
  00025: jne    0x3d443
:00000 @x: Vec[IvarId(0)] = %1
  0002b: mov    rdi,QWORD PTR [rbp-0x28]
  0002f: mov    rax,QWORD PTR [rbp-0x30]
  00033: mov    QWORD PTR [rdi+0x10],rax
:00001 @y: Vec[IvarId(1)] = %2
  00037: mov    rdi,QWORD PTR [rbp-0x28]
  0003b: mov    rax,QWORD PTR [rbp-0x38]
  0003f: mov    QWORD PTR [rdi+0x18],rax
:00002 @z: Vec[IvarId(2)] = %3
  00043: mov    rdi,QWORD PTR [rbp-0x28]
  00047: mov    rax,QWORD PTR [rbp-0x40]
  0004b: mov    QWORD PTR [rdi+0x20],rax
:00003 %4 = %3
  0004f: mov    rax,QWORD PTR [rbp-0x40]
  00053: mov    QWORD PTR [rbp-0x48],rax
:00004 ret %4
  00057: mov    rax,QWORD PTR [rbp-0x48]
  0005b: leave  
  0005c: ret    
==> start whole compile: vdot FuncId(65) self_class:Vec start:[00000] bytecode:0x563184c66dc0
<== finished compile. elapsed:25.8µs
offset:Pos(14484) code: 1080 bytes  data: 24 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    rdi,QWORD PTR [rbp-0x28]
  0001f: test   rdi,0x7
  00026: jne    0x3cce7
  0002c: cmp    DWORD PTR [rdi+0x4],0x28
  00030: jne    0x3cce7
:00000 %2 = @x: Vec[IvarId(0)]
  00036: mov    rdi,QWORD PTR [rbp-0x28]
  0003a: mov    rax,QWORD PTR [rdi+0x10]
  0003e: mov    QWORD PTR [rbp-0x38],rax
:00001 %3 = %1.call x()                     [Vec]
  00042: mov    rdi,QWORD PTR [rbp-0x30]
  00046: test   rdi,0x7
  0004d: jne    0x3ccf6
  00053: cmp    DWORD PTR [rdi+0x4],0x28
  00057: jne    0x3ccf6
  0005d: cmp    DWORD PTR [rip+0xfffffffffffff221],0x26        # 0xfffff285
  00064: jne    0x3ccf6
  0006a: mov    esi,DWORD PTR [rip+0x3cc]        # 0x43c
  00070: cmp    esi,0xffffffff
  00073: je     0x3cd05
  00079: cmp    WORD PTR [rdi+0x2],0x3
  0007e: jne    0x97
  00084: cmp    esi,0x6
  00087: jge    0x97
  0008d: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00092: jmp    0xa3
  00097: movabs rax,0x563184053740
  000a1: call   rax
  000a3: mov    QWORD PTR [rbp-0x40],rax
:00002 
:00004 %2 = %2 * %3                         [Float][Float]
  000a7: mov    rdi,QWORD PTR [rbp-0x38]
  000ab: test   rdi,0x1
  000b2: jne    0x3cd2e
  000b8: test   rdi,0x2
  000bf: je     0xfb
  000c5: xorps  xmm2,xmm2
  000c8: movabs rax,0x8000000000000002
  000d2: cmp    rdi,rax
  000d5: je     0x10d
  000db: mov    rax,rdi
  000de: sar    rax,0x3f
  000e2: add    rax,0x2
  000e6: and    rdi,0xfffffffffffffffc
  000ea: or     rdi,rax
  000ed: rol    rdi,0x3d
  000f1: movq   xmm2,rdi
  000f6: jmp    0x10d
  000fb: call   0xffffc7e0
  00100: test   rax,rax
  00103: je     0x3cd2e
  00109: movq   xmm2,xmm0
  0010d: mov    rdi,QWORD PTR [rbp-0x40]
  00111: test   rdi,0x1
  00118: jne    0x3cd3d
  0011e: test   rdi,0x2
  00125: je     0x161
  0012b: xorps  xmm3,xmm3
  0012e: movabs rax,0x8000000000000002
  00138: cmp    rdi,rax
  0013b: je     0x173
  00141: mov    rax,rdi
  00144: sar    rax,0x3f
  00148: add    rax,0x2
  0014c: and    rdi,0xfffffffffffffffc
  00150: or     rdi,rax
  00153: rol    rdi,0x3d
  00157: movq   xmm3,rdi
  0015c: jmp    0x173
  00161: call   0xffffc7e0
  00166: test   rax,rax
  00169: je     0x3cd3d
  0016f: movq   xmm3,xmm0
  00173: mulsd  xmm2,xmm3
:00005 %3 = @y: Vec[IvarId(1)]
  00177: mov    rdi,QWORD PTR [rbp-0x28]
  0017b: mov    rax,QWORD PTR [rdi+0x18]
  0017f: mov    QWORD PTR [rbp-0x40],rax
:00006 %4 = %1.call y()                     [Vec]
  00183: mov    rdi,QWORD PTR [rbp-0x30]
  00187: test   rdi,0x7
  0018e: jne    0x3cd4c
  00194: cmp    DWORD PTR [rdi+0x4],0x28
  00198: jne    0x3cd4c
  0019e: cmp    DWORD PTR [rip+0xfffffffffffff0e0],0x26        # 0xfffff285
  001a5: jne    0x3cd4c
  001ab: mov    esi,DWORD PTR [rip+0x293]        # 0x444
  001b1: cmp    esi,0xffffffff
  001b4: je     0x3cd68
  001ba: cmp    WORD PTR [rdi+0x2],0x3
  001bf: jne    0x1d8
  001c5: cmp    esi,0x6
  001c8: jge    0x1d8
  001ce: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d3: jmp    0x1f6
  001d8: sub    rsp,0x10
  001dc: movq   QWORD PTR [rsp],xmm2
  001e1: movabs rax,0x563184053740
  001eb: call   rax
  001ed: movq   xmm2,QWORD PTR [rsp]
  001f2: add    rsp,0x10
  001f6: mov    QWORD PTR [rbp-0x48],rax
:00007 
:00009 %3 = %3 * %4                         [Float][Float]
  001fa: mov    rdi,QWORD PTR [rbp-0x40]
  001fe: test   rdi,0x1
  00205: jne    0x3cda3
  0020b: test   rdi,0x2
  00212: je     0x24e
  00218: xorps  xmm3,xmm3
  0021b: movabs rax,0x8000000000000002
  00225: cmp    rdi,rax
  00228: je     0x260
  0022e: mov    rax,rdi
  00231: sar    rax,0x3f
  00235: add    rax,0x2
  00239: and    rdi,0xfffffffffffffffc
  0023d: or     rdi,rax
  00240: rol    rdi,0x3d
  00244: movq   xmm3,rdi
  00249: jmp    0x260
  0024e: call   0xffffc7e0
  00253: test   rax,rax
  00256: je     0x3cda3
  0025c: movq   xmm3,xmm0
  00260: mov    rdi,QWORD PTR [rbp-0x48]
  00264: test   rdi,0x1
  0026b: jne    0x3cdbf
  00271: test   rdi,0x2
  00278: je     0x2b4
  0027e: xorps  xmm4,xmm4
  00281: movabs rax,0x8000000000000002
  0028b: cmp    rdi,rax
  0028e: je     0x2c6
  00294: mov    rax,rdi
  00297: sar    rax,0x3f
  0029b: add    rax,0x2
  0029f: and    rdi,0xfffffffffffffffc
  002a3: or     rdi,rax
  002a6: rol    rdi,0x3d
  002aa: movq   xmm4,rdi
  002af: jmp    0x2c6
  002b4: call   0xffffc7e0
  002b9: test   rax,rax
  002bc: je     0x3cdbf
  002c2: movq   xmm4,xmm0
  002c6: mulsd  xmm3,xmm4
:00010 %2 = %2 + %3                         [Float][Float]
  002ca: addsd  xmm2,xmm3
:00011 %3 = @z: Vec[IvarId(2)]
  002ce: mov    rdi,QWORD PTR [rbp-0x28]
  002d2: mov    rax,QWORD PTR [rdi+0x20]
  002d6: mov    QWORD PTR [rbp-0x40],rax
:00012 %4 = %1.call z()                     [Vec]
  002da: mov    rdi,QWORD PTR [rbp-0x30]
  002de: test   rdi,0x7
  002e5: jne    0x3cddb
  002eb: cmp    DWORD PTR [rdi+0x4],0x28
  002ef: jne    0x3cddb
  002f5: cmp    DWORD PTR [rip+0xffffffffffffef89],0x26        # 0xfffff285
  002fc: jne    0x3cddb
  00302: mov    esi,DWORD PTR [rip+0x144]        # 0x44c
  00308: cmp    esi,0xffffffff
  0030b: je     0x3cdf7
  00311: cmp    WORD PTR [rdi+0x2],0x3
  00316: jne    0x32f
  0031c: cmp    esi,0x6
  0031f: jge    0x32f
  00325: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0032a: jmp    0x34d
  0032f: sub    rsp,0x10
  00333: movq   QWORD PTR [rsp],xmm2
  00338: movabs rax,0x563184053740
  00342: call   rax
  00344: movq   xmm2,QWORD PTR [rsp]
  00349: add    rsp,0x10
  0034d: mov    QWORD PTR [rbp-0x48],rax
:00013 
:00015 %3 = %3 * %4                         [Float][Float]
  00351: mov    rdi,QWORD PTR [rbp-0x40]
  00355: test   rdi,0x1
  0035c: jne    0x3ce32
  00362: test   rdi,0x2
  00369: je     0x3a5
  0036f: xorps  xmm3,xmm3
  00372: movabs rax,0x8000000000000002
  0037c: cmp    rdi,rax
  0037f: je     0x3b7
  00385: mov    rax,rdi
  00388: sar    rax,0x3f
  0038c: add    rax,0x2
  00390: and    rdi,0xfffffffffffffffc
  00394: or     rdi,rax
  00397: rol    rdi,0x3d
  0039b: movq   xmm3,rdi
  003a0: jmp    0x3b7
  003a5: call   0xffffc7e0
  003aa: test   rax,rax
  003ad: je     0x3ce32
  003b3: movq   xmm3,xmm0
  003b7: mov    rdi,QWORD PTR [rbp-0x48]
  003bb: test   rdi,0x1
  003c2: jne    0x3ce4e
  003c8: test   rdi,0x2
  003cf: je     0x40b
  003d5: xorps  xmm4,xmm4
  003d8: movabs rax,0x8000000000000002
  003e2: cmp    rdi,rax
  003e5: je     0x41d
  003eb: mov    rax,rdi
  003ee: sar    rax,0x3f
  003f2: add    rax,0x2
  003f6: and    rdi,0xfffffffffffffffc
  003fa: or     rdi,rax
  003fd: rol    rdi,0x3d
  00401: movq   xmm4,rdi
  00406: jmp    0x41d
  0040b: call   0xffffc7e0
  00410: test   rax,rax
  00413: je     0x3ce4e
  00419: movq   xmm4,xmm0
  0041d: mulsd  xmm3,xmm4
:00016 %2 = %2 + %3                         [Float][Float]
  00421: addsd  xmm2,xmm3
:00017 ret %2
  00425: movq   xmm0,xmm2
  00429: call   0xffffc8d3
  0042e: mov    QWORD PTR [rbp-0x38],rax
  00432: mov    rax,QWORD PTR [rbp-0x38]
  00436: leave  
  00437: ret    
==> start whole compile: intersect FuncId(69) self_class:Sphere start:[00000] bytecode:0x563184c85400
<== finished compile. elapsed:137.7µs
offset:Pos(15734) code: 7270 bytes  data: 396 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004b: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00052:    	mov    rdi,QWORD PTR [rbp-0x28]
  00056: 00 	test   rdi,0x7
  0005d:    	jne    0x3c988
  00063:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00067:    	jne    0x3c988
:00000 %9 = %1.call org()                   [Ray]
  0006d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00071: 00 	test   rdi,0x7
  00078:    	jne    0x3c997
  0007e:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00082:    	jne    0x3c997
  00088: 26 	cmp    DWORD PTR [rip+0xffffffffffffed14],0x26        # 0xffffeda3
  0008f:    	jne    0x3c997
  00095:    	mov    esi,DWORD PTR [rip+0x1bcf]        # 0x1c6a
  0009b:    	cmp    esi,0xffffffff
  0009e:    	je     0x3c9a6
  000a4:    	cmp    WORD PTR [rdi+0x2],0x3
  000a9:    	jne    0xc2
  000af:    	cmp    esi,0x6
  000b2:    	jge    0xc2
  000b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd:    	jmp    0xce
  000c2: 31 	movabs rax,0x563184053740
  000cc:    	call   rax
  000ce:    	mov    QWORD PTR [rbp-0x70],rax
:00001 
:00003 %10 = @center: Sphere[IvarId(0)]
  000d2:    	mov    rdi,QWORD PTR [rbp-0x28]
  000d6:    	mov    rax,QWORD PTR [rdi+0x10]
  000da:    	mov    QWORD PTR [rbp-0x78],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
  000de:    	mov    rdi,QWORD PTR [rbp-0x70]
  000e2: 00 	test   rdi,0x7
  000e9:    	jne    0x3c9cf
  000ef:    	cmp    DWORD PTR [rdi+0x4],0x28
  000f3:    	jne    0x3c9cf
  000f9: 26 	cmp    DWORD PTR [rip+0xffffffffffffeca3],0x26        # 0xffffeda3
  00100:    	jne    0x3c9cf
  00106:    	mov    rax,QWORD PTR [rbx]
  00109:    	lea    rdi,[rsp-0x18]
  0010e:    	mov    QWORD PTR [rdi],rax
  00111:    	mov    QWORD PTR [rbx],rdi
  00114: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0011d:    	mov    QWORD PTR [rsp-0x38],rcx
  00122:    	mov    rax,QWORD PTR [rbp-0x70]
  00126:    	mov    QWORD PTR [rsp-0x38],rax
  0012b: 00 	mov    rdi,0x1
  00132:    	mov    rax,QWORD PTR [rbp-0x78]
  00136:    	mov    QWORD PTR [rsp-0x40],rax
  0013b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00144: 08 	movabs rax,0x80000003f
  0014e:    	mov    QWORD PTR [rsp-0x28],rax
  00153: 31 	movabs r13,0x563184c81a90
  0015d:    	call   0xfffffa34
  00162:    	lea    rdi,[rbp-0x8]
  00166:    	mov    QWORD PTR [rbx],rdi
  00169: 31 	movabs r13,0x563184c85460
  00173:    	test   rax,rax
  00176:    	je     0xffffc2c5
  0017c:    	mov    QWORD PTR [rbp-0x40],rax
:00005 
:00007 %9 = %1.call dir()                   [Ray]
  00180:    	mov    rdi,QWORD PTR [rbp-0x30]
  00184: 00 	test   rdi,0x7
  0018b:    	jne    0x3c9de
  00191:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00195:    	jne    0x3c9de
  0019b: 26 	cmp    DWORD PTR [rip+0xffffffffffffec01],0x26        # 0xffffeda3
  001a2:    	jne    0x3c9de
  001a8:    	mov    esi,DWORD PTR [rip+0x1ac4]        # 0x1c72
  001ae:    	cmp    esi,0xffffffff
  001b1:    	je     0x3c9ed
  001b7:    	cmp    WORD PTR [rdi+0x2],0x3
  001bc:    	jne    0x1d5
  001c2:    	cmp    esi,0x6
  001c5:    	jge    0x1d5
  001cb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d0:    	jmp    0x1e1
  001d5: 31 	movabs rax,0x563184053740
  001df:    	call   rax
  001e1:    	mov    QWORD PTR [rbp-0x70],rax
:00008 
:00010 %4 = %3.call vdot(%9; 1)             [Vec]
  001e5:    	mov    rdi,QWORD PTR [rbp-0x40]
  001e9: 00 	test   rdi,0x7
  001f0:    	jne    0x3ca16
  001f6:    	cmp    DWORD PTR [rdi+0x4],0x28
  001fa:    	jne    0x3ca16
  00200: 26 	cmp    DWORD PTR [rip+0xffffffffffffeb9c],0x26        # 0xffffeda3
  00207:    	jne    0x3ca16
  0020d:    	mov    rax,QWORD PTR [rbx]
  00210:    	lea    rdi,[rsp-0x18]
  00215:    	mov    QWORD PTR [rdi],rax
  00218:    	mov    QWORD PTR [rbx],rdi
  0021b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00224:    	mov    QWORD PTR [rsp-0x38],rcx
  00229:    	mov    rax,QWORD PTR [rbp-0x40]
  0022d:    	mov    QWORD PTR [rsp-0x38],rax
  00232: 00 	mov    rdi,0x1
  00239:    	mov    rax,QWORD PTR [rbp-0x70]
  0023d:    	mov    QWORD PTR [rsp-0x40],rax
  00242: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0024b: 05 	movabs rax,0x500000041
  00255:    	mov    QWORD PTR [rsp-0x28],rax
  0025a: 31 	movabs r13,0x563184c66dc0
  00264:    	call   0xfffffac6
  00269:    	lea    rdi,[rbp-0x8]
  0026d:    	mov    QWORD PTR [rbx],rdi
  00270: 31 	movabs r13,0x563184c854c0
  0027a:    	test   rax,rax
  0027d:    	je     0xffffc2c5
  00283:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %10 = %3
  00287:    	mov    rax,QWORD PTR [rbp-0x40]
  0028b:    	mov    QWORD PTR [rbp-0x78],rax
:00014 %9 = %3.call vdot(%10; 1)            [Vec]
  0028f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00293: 00 	test   rdi,0x7
  0029a:    	jne    0x3ca25
  002a0:    	cmp    DWORD PTR [rdi+0x4],0x28
  002a4:    	jne    0x3ca25
  002aa: 26 	cmp    DWORD PTR [rip+0xffffffffffffeaf2],0x26        # 0xffffeda3
  002b1:    	jne    0x3ca25
  002b7:    	mov    rax,QWORD PTR [rbx]
  002ba:    	lea    rdi,[rsp-0x18]
  002bf:    	mov    QWORD PTR [rdi],rax
  002c2:    	mov    QWORD PTR [rbx],rdi
  002c5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  002ce:    	mov    QWORD PTR [rsp-0x38],rcx
  002d3:    	mov    rax,QWORD PTR [rbp-0x40]
  002d7:    	mov    QWORD PTR [rsp-0x38],rax
  002dc: 00 	mov    rdi,0x1
  002e3:    	mov    rax,QWORD PTR [rbp-0x78]
  002e7:    	mov    QWORD PTR [rsp-0x40],rax
  002ec: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002f5: 05 	movabs rax,0x500000041
  002ff:    	mov    QWORD PTR [rsp-0x28],rax
  00304: 31 	movabs r13,0x563184c66dc0
  0030e:    	call   0xfffffac6
  00313:    	lea    rdi,[rbp-0x8]
  00317:    	mov    QWORD PTR [rbx],rdi
  0031a: 31 	movabs r13,0x563184c85500
  00324:    	test   rax,rax
  00327:    	je     0xffffc2c5
  0032d:    	mov    QWORD PTR [rbp-0x70],rax
:00015 
:00017 %10 = @radius: Sphere[IvarId(1)]
  00331:    	mov    rdi,QWORD PTR [rbp-0x28]
  00335:    	mov    rax,QWORD PTR [rdi+0x18]
  00339:    	mov    QWORD PTR [rbp-0x78],rax
:00018 %11 = @radius: Sphere[IvarId(1)]
  0033d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00341:    	mov    rax,QWORD PTR [rdi+0x18]
  00345:    	mov    QWORD PTR [rbp-0x80],rax
:00019 %10 = %10 * %11                      [Float][Float]
  00349:    	mov    rdi,QWORD PTR [rbp-0x78]
  0034d: 00 	test   rdi,0x1
  00354:    	jne    0x3ca34
  0035a: 00 	test   rdi,0x2
  00361:    	je     0x39d
  00367:    	xorps  xmm2,xmm2
  0036a: 00 	movabs rax,0x8000000000000002
  00374:    	cmp    rdi,rax
  00377:    	je     0x3af
  0037d:    	mov    rax,rdi
  00380:    	sar    rax,0x3f
  00384:    	add    rax,0x2
  00388:    	and    rdi,0xfffffffffffffffc
  0038c:    	or     rdi,rax
  0038f:    	rol    rdi,0x3d
  00393:    	movq   xmm2,rdi
  00398:    	jmp    0x3af
  0039d:    	call   0xffffc2fe
  003a2:    	test   rax,rax
  003a5:    	je     0x3ca34
  003ab:    	movq   xmm2,xmm0
  003af:    	mov    rdi,QWORD PTR [rbp-0x80]
  003b3: 00 	test   rdi,0x1
  003ba:    	jne    0x3ca43
  003c0: 00 	test   rdi,0x2
  003c7:    	je     0x403
  003cd:    	xorps  xmm3,xmm3
  003d0: 00 	movabs rax,0x8000000000000002
  003da:    	cmp    rdi,rax
  003dd:    	je     0x415
  003e3:    	mov    rax,rdi
  003e6:    	sar    rax,0x3f
  003ea:    	add    rax,0x2
  003ee:    	and    rdi,0xfffffffffffffffc
  003f2:    	or     rdi,rax
  003f5:    	rol    rdi,0x3d
  003f9:    	movq   xmm3,rdi
  003fe:    	jmp    0x415
  00403:    	call   0xffffc2fe
  00408:    	test   rax,rax
  0040b:    	je     0x3ca43
  00411:    	movq   xmm3,xmm0
  00415:    	mulsd  xmm2,xmm3
:00020 %5 = %9 - %10                        [Float][Float]
  00419:    	mov    rdi,QWORD PTR [rbp-0x70]
  0041d: 00 	test   rdi,0x1
  00424:    	jne    0x3ca52
  0042a: 00 	test   rdi,0x2
  00431:    	je     0x46d
  00437:    	xorps  xmm4,xmm4
  0043a: 00 	movabs rax,0x8000000000000002
  00444:    	cmp    rdi,rax
  00447:    	je     0x47f
  0044d:    	mov    rax,rdi
  00450:    	sar    rax,0x3f
  00454:    	add    rax,0x2
  00458:    	and    rdi,0xfffffffffffffffc
  0045c:    	or     rdi,rax
  0045f:    	rol    rdi,0x3d
  00463:    	movq   xmm4,rdi
  00468:    	jmp    0x47f
  0046d:    	call   0xffffc2fe
  00472:    	test   rax,rax
  00475:    	je     0x3ca52
  0047b:    	movq   xmm4,xmm0
  0047f:    	movq   xmm5,xmm4
  00483:    	subsd  xmm5,xmm2
:00021 %9 = %4 * %4                         [Float][Float]
  00487:    	mov    rdi,QWORD PTR [rbp-0x48]
  0048b: 00 	test   rdi,0x1
  00492:    	jne    0x3ca6e
  00498: 00 	test   rdi,0x2
  0049f:    	je     0x4db
  004a5:    	xorps  xmm6,xmm6
  004a8: 00 	movabs rax,0x8000000000000002
  004b2:    	cmp    rdi,rax
  004b5:    	je     0x4ed
  004bb:    	mov    rax,rdi
  004be:    	sar    rax,0x3f
  004c2:    	add    rax,0x2
  004c6:    	and    rdi,0xfffffffffffffffc
  004ca:    	or     rdi,rax
  004cd:    	rol    rdi,0x3d
  004d1:    	movq   xmm6,rdi
  004d6:    	jmp    0x4ed
  004db:    	call   0xffffc2fe
  004e0:    	test   rax,rax
  004e3:    	je     0x3ca6e
  004e9:    	movq   xmm6,xmm0
  004ed:    	movq   xmm4,xmm6
  004f1:    	mulsd  xmm4,xmm6
:00022 %6 = %9 - %5                         [Float][Float]
  004f5:    	movq   xmm7,xmm4
  004f9:    	subsd  xmm7,xmm5
:00023 %9 = literal[0.0]
  004fd: 00 	movq   xmm4,QWORD PTR [rip+0x1775]        # 0x1c7a
  00505: 00 	movabs rax,0x8000000000000002
  0050f:    	mov    QWORD PTR [rbp-0x70],rax
:00024 _%9 = %6 > %9                        [Float][Float]
:00025 condnotbr _%9 =>:00113
  00513:    	ucomisd xmm7,xmm4
  00517:    	jbe    0x3e04a
:00026 %9 = %4
:00027 %9 = neg %9                          [<INVALID>]
  0051d: 01 	sub    DWORD PTR [rip+0x175e],0x1        # 0x1c82
  00524:    	je     0x3cada
  0052a:    	movq   xmm0,xmm6
  0052e:    	call   0xffffc3f1
  00533:    	mov    QWORD PTR [rbp-0x70],rax
  00537:    	sub    rsp,0x30
  0053b:    	movq   QWORD PTR [rsp],xmm2
  00540:    	movq   QWORD PTR [rsp+0x8],xmm3
  00546:    	movq   QWORD PTR [rsp+0x10],xmm5
  0054c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00552:    	movq   QWORD PTR [rsp+0x20],xmm7
  00558:    	mov    rdi,QWORD PTR [rbp-0x70]
  0055c:    	mov    rdx,rdi
  0055f:    	mov    rdi,rbx
  00562:    	mov    rsi,r12
  00565: 31 	movabs rax,0x5631840873b0
  0056f:    	call   rax
  00571:    	movq   xmm2,QWORD PTR [rsp]
  00576:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0057c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00582:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00588:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0058e:    	add    rsp,0x30
  00592: 31 	movabs r13,0x563184c855c0
  0059c:    	test   rax,rax
  0059f:    	je     0xffffc2c5
  005a5:    	mov    QWORD PTR [rbp-0x70],rax
:00028 %11 = const[Math]                    [<INVALID>]
  005a9: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffe7fa]        # 0xffffedaa
  005b0: 00 	cmp    rax,QWORD PTR [rip+0x16e3]        # 0x1c9a
  005b7:    	jne    0x3cafc
  005bd: 00 	mov    rax,QWORD PTR [rip+0x16c6]        # 0x1c8a
  005c4:    	mov    QWORD PTR [rbp-0x80],rax
:00029 %12 = %6
:00030 %10 = %11.call sqrt(%12; 1)          [<INVALID>]
  005c8: 01 	sub    DWORD PTR [rip+0x16d3],0x1        # 0x1ca2
  005cf:    	je     0x3cbb5
  005d5:    	movq   xmm0,xmm7
  005d9:    	call   0xffffc3f1
  005de: ff 	mov    QWORD PTR [rbp-0x88],rax
  005e5:    	sub    rsp,0x20
  005e9:    	movq   QWORD PTR [rsp],xmm5
  005ee:    	movq   QWORD PTR [rsp+0x8],xmm6
  005f4:    	movq   QWORD PTR [rsp+0x10],xmm7
  005fa:    	mov    rdi,QWORD PTR [rbp-0x80]
  005fe: 31 	movabs rax,0x5631840958d0
  00608:    	call   rax
  0060a:    	mov    r15d,eax
  0060d: 00 	cmp    r15d,DWORD PTR [rip+0x1696]        # 0x1caa
  00614:    	jne    0x3cbd7
  0061a:    	mov    eax,DWORD PTR [rip+0xffffffffffffe783]        # 0xffffeda3
  00620:    	cmp    DWORD PTR [rip+0x1680],eax        # 0x1ca6
  00626:    	jne    0x3cbd7
  0062c:    	mov    rax,QWORD PTR [rbx]
  0062f:    	lea    rdi,[rsp-0x18]
  00634:    	mov    QWORD PTR [rdi],rax
  00637:    	mov    QWORD PTR [rbx],rdi
  0063a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00643:    	mov    QWORD PTR [rsp-0x38],rcx
  00648:    	mov    rax,QWORD PTR [rbp-0x80]
  0064c:    	mov    QWORD PTR [rsp-0x38],rax
  00651: 00 	mov    rdi,0x1
  00658: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0065f:    	mov    QWORD PTR [rsp-0x40],rax
  00664: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0066d: 00 	movabs rax,0x0
  00677:    	mov    QWORD PTR [rsp-0x28],rax
  0067c: 00 	movabs r13,0x0
  00686:    	call   0xffffc28a
  0068b:    	lea    rdi,[rbp-0x8]
  0068f:    	mov    QWORD PTR [rbx],rdi
  00692:    	movq   xmm5,QWORD PTR [rsp]
  00697:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0069d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  006a3:    	add    rsp,0x20
  006a7:    	test   rax,rax
  006aa:    	je     0x3cc43
  006b0:    	mov    QWORD PTR [rbp-0x78],rax
:00031 
:00033 %7 = %9 - %10                        [<INVALID>][<INVALID>]
  006b4: 01 	sub    DWORD PTR [rip+0x15f3],0x1        # 0x1cae
  006bb:    	je     0x3cc7b
  006c1:    	mov    rdi,QWORD PTR [rbp-0x70]
  006c5:    	mov    rsi,QWORD PTR [rbp-0x78]
  006c9:    	sub    rsp,0x20
  006cd:    	movq   QWORD PTR [rsp],xmm5
  006d2:    	movq   QWORD PTR [rsp+0x8],xmm6
  006d8:    	movq   QWORD PTR [rsp+0x10],xmm7
  006de:    	mov    rdx,rdi
  006e1:    	mov    rcx,rsi
  006e4:    	mov    rdi,rbx
  006e7:    	mov    rsi,r12
  006ea: 31 	movabs rax,0x563184088ea0
  006f4:    	call   rax
  006f6:    	movq   xmm5,QWORD PTR [rsp]
  006fb:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00701:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00707:    	add    rsp,0x20
  0070b: 31 	movabs r13,0x563184c85620
  00715:    	test   rax,rax
  00718:    	je     0xffffc2c5
  0071e:    	mov    QWORD PTR [rbp-0x60],rax
:00034 %9 = literal[0.0]
  00722: 00 	movq   xmm2,QWORD PTR [rip+0x1590]        # 0x1cba
  0072a: 00 	movabs rax,0x8000000000000002
  00734:    	mov    QWORD PTR [rbp-0x70],rax
:00035 _%9 = %7 > %9                        [<INVALID>][<INVALID>]
:00036 condnotbr _%9 =>:00112
  00738:    	mov    rdi,QWORD PTR [rbp-0x60]
  0073c:    	mov    rsi,QWORD PTR [rbp-0x70]
  00740: 00 	test   rdi,0x1
  00747:    	je     0x3cc9d
  0074d: 00 	test   rsi,0x1
  00754:    	je     0x3cc9d
  0075a:    	cmp    rdi,rsi
  0075d:    	jle    0x3dfb1
:00037 %9 = %2.call t()                     [<INVALID>]
  00763: 01 	sub    DWORD PTR [rip+0x1558],0x1        # 0x1cc2
  0076a:    	je     0x3cd0f
  00770:    	sub    rsp,0x20
  00774:    	movq   QWORD PTR [rsp],xmm5
  00779:    	movq   QWORD PTR [rsp+0x8],xmm6
  0077f:    	movq   QWORD PTR [rsp+0x10],xmm7
  00785:    	mov    rdi,QWORD PTR [rbp-0x38]
  00789: 31 	movabs rax,0x5631840958d0
  00793:    	call   rax
  00795:    	mov    r15d,eax
  00798: 00 	cmp    r15d,DWORD PTR [rip+0x152b]        # 0x1cca
  0079f:    	jne    0x3cd31
  007a5:    	mov    eax,DWORD PTR [rip+0xffffffffffffe5f8]        # 0xffffeda3
  007ab:    	cmp    DWORD PTR [rip+0x1515],eax        # 0x1cc6
  007b1:    	jne    0x3cd31
  007b7:    	mov    rax,QWORD PTR [rbx]
  007ba:    	lea    rdi,[rsp-0x18]
  007bf:    	mov    QWORD PTR [rdi],rax
  007c2:    	mov    QWORD PTR [rbx],rdi
  007c5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  007ce:    	mov    QWORD PTR [rsp-0x38],rcx
  007d3:    	mov    rax,QWORD PTR [rbp-0x38]
  007d7:    	mov    QWORD PTR [rsp-0x38],rax
  007dc: 00 	mov    rdi,0x0
  007e3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007ec: 00 	movabs rax,0x0
  007f6:    	mov    QWORD PTR [rsp-0x28],rax
  007fb: 00 	movabs r13,0x0
  00805:    	call   0xffffc28a
  0080a:    	lea    rdi,[rbp-0x8]
  0080e:    	mov    QWORD PTR [rbx],rdi
  00811:    	movq   xmm5,QWORD PTR [rsp]
  00816:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0081c:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00822:    	add    rsp,0x20
  00826:    	test   rax,rax
  00829:    	je     0x3cd9d
  0082f:    	mov    QWORD PTR [rbp-0x70],rax
:00038 
:00040 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00041 condnotbr _%9 =>:00112
  00833:    	mov    rdi,QWORD PTR [rbp-0x60]
  00837:    	mov    rsi,QWORD PTR [rbp-0x70]
  0083b: 00 	test   rdi,0x1
  00842:    	je     0x3cdac
  00848: 00 	test   rsi,0x1
  0084f:    	je     0x3cdac
  00855:    	cmp    rdi,rsi
  00858:    	jge    0x3dfe4
:00042 _ = %2.call t=(%7; 1)                [<INVALID>]
  0085e: 01 	sub    DWORD PTR [rip+0x1469],0x1        # 0x1cce
  00865:    	je     0x3ce1e
  0086b:    	sub    rsp,0x20
  0086f:    	movq   QWORD PTR [rsp],xmm5
  00874:    	movq   QWORD PTR [rsp+0x8],xmm6
  0087a:    	movq   QWORD PTR [rsp+0x10],xmm7
  00880:    	mov    rdi,QWORD PTR [rbp-0x38]
  00884: 31 	movabs rax,0x5631840958d0
  0088e:    	call   rax
  00890:    	mov    r15d,eax
  00893: 00 	cmp    r15d,DWORD PTR [rip+0x143c]        # 0x1cd6
  0089a:    	jne    0x3ce40
  008a0:    	mov    eax,DWORD PTR [rip+0xffffffffffffe4fd]        # 0xffffeda3
  008a6:    	cmp    DWORD PTR [rip+0x1426],eax        # 0x1cd2
  008ac:    	jne    0x3ce40
  008b2:    	mov    rax,QWORD PTR [rbx]
  008b5:    	lea    rdi,[rsp-0x18]
  008ba:    	mov    QWORD PTR [rdi],rax
  008bd:    	mov    QWORD PTR [rbx],rdi
  008c0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008c9:    	mov    QWORD PTR [rsp-0x38],rcx
  008ce:    	mov    rax,QWORD PTR [rbp-0x38]
  008d2:    	mov    QWORD PTR [rsp-0x38],rax
  008d7: 00 	mov    rdi,0x1
  008de:    	mov    rax,QWORD PTR [rbp-0x60]
  008e2:    	mov    QWORD PTR [rsp-0x40],rax
  008e7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008f0: 00 	movabs rax,0x0
  008fa:    	mov    QWORD PTR [rsp-0x28],rax
  008ff: 00 	movabs r13,0x0
  00909:    	call   0xffffc28a
  0090e:    	lea    rdi,[rbp-0x8]
  00912:    	mov    QWORD PTR [rbx],rdi
  00915:    	movq   xmm5,QWORD PTR [rsp]
  0091a:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00920:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00926:    	add    rsp,0x20
  0092a:    	test   rax,rax
  0092d:    	je     0x3ceac
:00043 
:00045 %9 = literal[true]
  00933: 00 	mov    rax,0x1c
  0093a:    	mov    QWORD PTR [rbp-0x70],rax
:00046 _ = %2.call hit=(%9; 1)              [<INVALID>]
  0093e: 01 	sub    DWORD PTR [rip+0x1395],0x1        # 0x1cda
  00945:    	je     0x3cee4
  0094b:    	sub    rsp,0x20
  0094f:    	movq   QWORD PTR [rsp],xmm5
  00954:    	movq   QWORD PTR [rsp+0x8],xmm6
  0095a:    	movq   QWORD PTR [rsp+0x10],xmm7
  00960:    	mov    rdi,QWORD PTR [rbp-0x38]
  00964: 31 	movabs rax,0x5631840958d0
  0096e:    	call   rax
  00970:    	mov    r15d,eax
  00973: 00 	cmp    r15d,DWORD PTR [rip+0x1368]        # 0x1ce2
  0097a:    	jne    0x3cf06
  00980:    	mov    eax,DWORD PTR [rip+0xffffffffffffe41d]        # 0xffffeda3
  00986:    	cmp    DWORD PTR [rip+0x1352],eax        # 0x1cde
  0098c:    	jne    0x3cf06
  00992:    	mov    rax,QWORD PTR [rbx]
  00995:    	lea    rdi,[rsp-0x18]
  0099a:    	mov    QWORD PTR [rdi],rax
  0099d:    	mov    QWORD PTR [rbx],rdi
  009a0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009a9:    	mov    QWORD PTR [rsp-0x38],rcx
  009ae:    	mov    rax,QWORD PTR [rbp-0x38]
  009b2:    	mov    QWORD PTR [rsp-0x38],rax
  009b7: 00 	mov    rdi,0x1
  009be:    	mov    rax,QWORD PTR [rbp-0x70]
  009c2:    	mov    QWORD PTR [rsp-0x40],rax
  009c7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  009d0: 00 	movabs rax,0x0
  009da:    	mov    QWORD PTR [rsp-0x28],rax
  009df: 00 	movabs r13,0x0
  009e9:    	call   0xffffc28a
  009ee:    	lea    rdi,[rbp-0x8]
  009f2:    	mov    QWORD PTR [rbx],rdi
  009f5:    	movq   xmm5,QWORD PTR [rsp]
  009fa:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00a00:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00a06:    	add    rsp,0x20
  00a0a:    	test   rax,rax
  00a0d:    	je     0x3cf72
:00047 
:00049 %10 = const[Vec]                     [<INVALID>]
  00a13: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffe390]        # 0xffffedaa
  00a1a: 00 	cmp    rax,QWORD PTR [rip+0x12d9]        # 0x1cfa
  00a21:    	jne    0x3cf81
  00a27: 00 	mov    rax,QWORD PTR [rip+0x12bc]        # 0x1cea
  00a2e:    	mov    QWORD PTR [rbp-0x78],rax
:00050 %12 = %1.call org()                  [<INVALID>]
  00a32: 01 	sub    DWORD PTR [rip+0x12c9],0x1        # 0x1d02
  00a39:    	je     0x3d01a
  00a3f:    	sub    rsp,0x20
  00a43:    	movq   QWORD PTR [rsp],xmm5
  00a48:    	movq   QWORD PTR [rsp+0x8],xmm6
  00a4e:    	movq   QWORD PTR [rsp+0x10],xmm7
  00a54:    	mov    rdi,QWORD PTR [rbp-0x30]
  00a58: 31 	movabs rax,0x5631840958d0
  00a62:    	call   rax
  00a64:    	mov    r15d,eax
  00a67: 00 	cmp    r15d,DWORD PTR [rip+0x129c]        # 0x1d0a
  00a6e:    	jne    0x3d03c
  00a74:    	mov    eax,DWORD PTR [rip+0xffffffffffffe329]        # 0xffffeda3
  00a7a:    	cmp    DWORD PTR [rip+0x1286],eax        # 0x1d06
  00a80:    	jne    0x3d03c
  00a86:    	mov    rax,QWORD PTR [rbx]
  00a89:    	lea    rdi,[rsp-0x18]
  00a8e:    	mov    QWORD PTR [rdi],rax
  00a91:    	mov    QWORD PTR [rbx],rdi
  00a94: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a9d:    	mov    QWORD PTR [rsp-0x38],rcx
  00aa2:    	mov    rax,QWORD PTR [rbp-0x30]
  00aa6:    	mov    QWORD PTR [rsp-0x38],rax
  00aab: 00 	mov    rdi,0x0
  00ab2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00abb: 00 	movabs rax,0x0
  00ac5:    	mov    QWORD PTR [rsp-0x28],rax
  00aca: 00 	movabs r13,0x0
  00ad4:    	call   0xffffc28a
  00ad9:    	lea    rdi,[rbp-0x8]
  00add:    	mov    QWORD PTR [rbx],rdi
  00ae0:    	movq   xmm5,QWORD PTR [rsp]
  00ae5:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00aeb:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00af1:    	add    rsp,0x20
  00af5:    	test   rax,rax
  00af8:    	je     0x3d0a8
  00afe: ff 	mov    QWORD PTR [rbp-0x88],rax
:00051 
:00053 %11 = %12.call x()                   [<INVALID>]
  00b05: 01 	sub    DWORD PTR [rip+0x1202],0x1        # 0x1d0e
  00b0c:    	je     0x3d0e0
  00b12:    	sub    rsp,0x20
  00b16:    	movq   QWORD PTR [rsp],xmm5
  00b1b:    	movq   QWORD PTR [rsp+0x8],xmm6
  00b21:    	movq   QWORD PTR [rsp+0x10],xmm7
  00b27: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00b2e: 31 	movabs rax,0x5631840958d0
  00b38:    	call   rax
  00b3a:    	mov    r15d,eax
  00b3d: 00 	cmp    r15d,DWORD PTR [rip+0x11d2]        # 0x1d16
  00b44:    	jne    0x3d102
  00b4a:    	mov    eax,DWORD PTR [rip+0xffffffffffffe253]        # 0xffffeda3
  00b50:    	cmp    DWORD PTR [rip+0x11bc],eax        # 0x1d12
  00b56:    	jne    0x3d102
  00b5c:    	mov    rax,QWORD PTR [rbx]
  00b5f:    	lea    rdi,[rsp-0x18]
  00b64:    	mov    QWORD PTR [rdi],rax
  00b67:    	mov    QWORD PTR [rbx],rdi
  00b6a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b73:    	mov    QWORD PTR [rsp-0x38],rcx
  00b78: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00b7f:    	mov    QWORD PTR [rsp-0x38],rax
  00b84: 00 	mov    rdi,0x0
  00b8b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b94: 00 	movabs rax,0x0
  00b9e:    	mov    QWORD PTR [rsp-0x28],rax
  00ba3: 00 	movabs r13,0x0
  00bad:    	call   0xffffc28a
  00bb2:    	lea    rdi,[rbp-0x8]
  00bb6:    	mov    QWORD PTR [rbx],rdi
  00bb9:    	movq   xmm5,QWORD PTR [rsp]
  00bbe:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00bc4:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00bca:    	add    rsp,0x20
  00bce:    	test   rax,rax
  00bd1:    	je     0x3d171
  00bd7:    	mov    QWORD PTR [rbp-0x80],rax
:00054 
:00056 %13 = %1.call dir()                  [<INVALID>]
  00bdb: 01 	sub    DWORD PTR [rip+0x1138],0x1        # 0x1d1a
  00be2:    	je     0x3d1a9
  00be8:    	sub    rsp,0x20
  00bec:    	movq   QWORD PTR [rsp],xmm5
  00bf1:    	movq   QWORD PTR [rsp+0x8],xmm6
  00bf7:    	movq   QWORD PTR [rsp+0x10],xmm7
  00bfd:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c01: 31 	movabs rax,0x5631840958d0
  00c0b:    	call   rax
  00c0d:    	mov    r15d,eax
  00c10: 00 	cmp    r15d,DWORD PTR [rip+0x110b]        # 0x1d22
  00c17:    	jne    0x3d1cb
  00c1d:    	mov    eax,DWORD PTR [rip+0xffffffffffffe180]        # 0xffffeda3
  00c23:    	cmp    DWORD PTR [rip+0x10f5],eax        # 0x1d1e
  00c29:    	jne    0x3d1cb
  00c2f:    	mov    rax,QWORD PTR [rbx]
  00c32:    	lea    rdi,[rsp-0x18]
  00c37:    	mov    QWORD PTR [rdi],rax
  00c3a:    	mov    QWORD PTR [rbx],rdi
  00c3d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c46:    	mov    QWORD PTR [rsp-0x38],rcx
  00c4b:    	mov    rax,QWORD PTR [rbp-0x30]
  00c4f:    	mov    QWORD PTR [rsp-0x38],rax
  00c54: 00 	mov    rdi,0x0
  00c5b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c64: 00 	movabs rax,0x0
  00c6e:    	mov    QWORD PTR [rsp-0x28],rax
  00c73: 00 	movabs r13,0x0
  00c7d:    	call   0xffffc28a
  00c82:    	lea    rdi,[rbp-0x8]
  00c86:    	mov    QWORD PTR [rbx],rdi
  00c89:    	movq   xmm5,QWORD PTR [rsp]
  00c8e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00c94:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00c9a:    	add    rsp,0x20
  00c9e:    	test   rax,rax
  00ca1:    	je     0x3d237
  00ca7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00057 
:00059 %12 = %13.call x()                   [<INVALID>]
  00cae: 01 	sub    DWORD PTR [rip+0x1071],0x1        # 0x1d26
  00cb5:    	je     0x3d26f
  00cbb:    	sub    rsp,0x20
  00cbf:    	movq   QWORD PTR [rsp],xmm5
  00cc4:    	movq   QWORD PTR [rsp+0x8],xmm6
  00cca:    	movq   QWORD PTR [rsp+0x10],xmm7
  00cd0: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00cd7: 31 	movabs rax,0x5631840958d0
  00ce1:    	call   rax
  00ce3:    	mov    r15d,eax
  00ce6: 00 	cmp    r15d,DWORD PTR [rip+0x1041]        # 0x1d2e
  00ced:    	jne    0x3d291
  00cf3:    	mov    eax,DWORD PTR [rip+0xffffffffffffe0aa]        # 0xffffeda3
  00cf9:    	cmp    DWORD PTR [rip+0x102b],eax        # 0x1d2a
  00cff:    	jne    0x3d291
  00d05:    	mov    rax,QWORD PTR [rbx]
  00d08:    	lea    rdi,[rsp-0x18]
  00d0d:    	mov    QWORD PTR [rdi],rax
  00d10:    	mov    QWORD PTR [rbx],rdi
  00d13: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d1c:    	mov    QWORD PTR [rsp-0x38],rcx
  00d21: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00d28:    	mov    QWORD PTR [rsp-0x38],rax
  00d2d: 00 	mov    rdi,0x0
  00d34: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d3d: 00 	movabs rax,0x0
  00d47:    	mov    QWORD PTR [rsp-0x28],rax
  00d4c: 00 	movabs r13,0x0
  00d56:    	call   0xffffc28a
  00d5b:    	lea    rdi,[rbp-0x8]
  00d5f:    	mov    QWORD PTR [rbx],rdi
  00d62:    	movq   xmm5,QWORD PTR [rsp]
  00d67:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00d6d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00d73:    	add    rsp,0x20
  00d77:    	test   rax,rax
  00d7a:    	je     0x3d300
  00d80: ff 	mov    QWORD PTR [rbp-0x88],rax
:00060 
:00062 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00d87: 01 	sub    DWORD PTR [rip+0xfa4],0x1        # 0x1d32
  00d8e:    	je     0x3d338
  00d94: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00d9b:    	mov    rsi,QWORD PTR [rbp-0x60]
  00d9f:    	sub    rsp,0x20
  00da3:    	movq   QWORD PTR [rsp],xmm5
  00da8:    	movq   QWORD PTR [rsp+0x8],xmm6
  00dae:    	movq   QWORD PTR [rsp+0x10],xmm7
  00db4:    	mov    rdx,rdi
  00db7:    	mov    rcx,rsi
  00dba:    	mov    rdi,rbx
  00dbd:    	mov    rsi,r12
  00dc0: 31 	movabs rax,0x563184089e00
  00dca:    	call   rax
  00dcc:    	movq   xmm5,QWORD PTR [rsp]
  00dd1:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00dd7:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00ddd:    	add    rsp,0x20
  00de1: 31 	movabs r13,0x563184c857f0
  00deb:    	test   rax,rax
  00dee:    	je     0xffffc2c5
  00df4: ff 	mov    QWORD PTR [rbp-0x88],rax
:00063 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00dfb: 01 	sub    DWORD PTR [rip+0xf34],0x1        # 0x1d36
  00e02:    	je     0x3d383
  00e08:    	mov    rdi,QWORD PTR [rbp-0x80]
  00e0c: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00e13:    	sub    rsp,0x20
  00e17:    	movq   QWORD PTR [rsp],xmm5
  00e1c:    	movq   QWORD PTR [rsp+0x8],xmm6
  00e22:    	movq   QWORD PTR [rsp+0x10],xmm7
  00e28:    	mov    rdx,rdi
  00e2b:    	mov    rcx,rsi
  00e2e:    	mov    rdi,rbx
  00e31:    	mov    rsi,r12
  00e34: 31 	movabs rax,0x563184087f80
  00e3e:    	call   rax
  00e40:    	movq   xmm5,QWORD PTR [rsp]
  00e45:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e4b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e51:    	add    rsp,0x20
  00e55: 31 	movabs r13,0x563184c85800
  00e5f:    	test   rax,rax
  00e62:    	je     0xffffc2c5
  00e68:    	mov    QWORD PTR [rbp-0x80],rax
:00064 %13 = %1.call org()                  [<INVALID>]
  00e6c: 01 	sub    DWORD PTR [rip+0xec7],0x1        # 0x1d3a
  00e73:    	je     0x3d3ce
  00e79:    	sub    rsp,0x20
  00e7d:    	movq   QWORD PTR [rsp],xmm5
  00e82:    	movq   QWORD PTR [rsp+0x8],xmm6
  00e88:    	movq   QWORD PTR [rsp+0x10],xmm7
  00e8e:    	mov    rdi,QWORD PTR [rbp-0x30]
  00e92: 31 	movabs rax,0x5631840958d0
  00e9c:    	call   rax
  00e9e:    	mov    r15d,eax
  00ea1: 00 	cmp    r15d,DWORD PTR [rip+0xe9a]        # 0x1d42
  00ea8:    	jne    0x3d3f0
  00eae:    	mov    eax,DWORD PTR [rip+0xffffffffffffdeef]        # 0xffffeda3
  00eb4:    	cmp    DWORD PTR [rip+0xe84],eax        # 0x1d3e
  00eba:    	jne    0x3d3f0
  00ec0:    	mov    rax,QWORD PTR [rbx]
  00ec3:    	lea    rdi,[rsp-0x18]
  00ec8:    	mov    QWORD PTR [rdi],rax
  00ecb:    	mov    QWORD PTR [rbx],rdi
  00ece: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ed7:    	mov    QWORD PTR [rsp-0x38],rcx
  00edc:    	mov    rax,QWORD PTR [rbp-0x30]
  00ee0:    	mov    QWORD PTR [rsp-0x38],rax
  00ee5: 00 	mov    rdi,0x0
  00eec: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ef5: 00 	movabs rax,0x0
  00eff:    	mov    QWORD PTR [rsp-0x28],rax
  00f04: 00 	movabs r13,0x0
  00f0e:    	call   0xffffc28a
  00f13:    	lea    rdi,[rbp-0x8]
  00f17:    	mov    QWORD PTR [rbx],rdi
  00f1a:    	movq   xmm5,QWORD PTR [rsp]
  00f1f:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00f25:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00f2b:    	add    rsp,0x20
  00f2f:    	test   rax,rax
  00f32:    	je     0x3d45c
  00f38: ff 	mov    QWORD PTR [rbp-0x90],rax
:00065 
:00067 %12 = %13.call y()                   [<INVALID>]
  00f3f: 01 	sub    DWORD PTR [rip+0xe00],0x1        # 0x1d46
  00f46:    	je     0x3d494
  00f4c:    	sub    rsp,0x20
  00f50:    	movq   QWORD PTR [rsp],xmm5
  00f55:    	movq   QWORD PTR [rsp+0x8],xmm6
  00f5b:    	movq   QWORD PTR [rsp+0x10],xmm7
  00f61: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00f68: 31 	movabs rax,0x5631840958d0
  00f72:    	call   rax
  00f74:    	mov    r15d,eax
  00f77: 00 	cmp    r15d,DWORD PTR [rip+0xdd0]        # 0x1d4e
  00f7e:    	jne    0x3d4b6
  00f84:    	mov    eax,DWORD PTR [rip+0xffffffffffffde19]        # 0xffffeda3
  00f8a:    	cmp    DWORD PTR [rip+0xdba],eax        # 0x1d4a
  00f90:    	jne    0x3d4b6
  00f96:    	mov    rax,QWORD PTR [rbx]
  00f99:    	lea    rdi,[rsp-0x18]
  00f9e:    	mov    QWORD PTR [rdi],rax
  00fa1:    	mov    QWORD PTR [rbx],rdi
  00fa4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fad:    	mov    QWORD PTR [rsp-0x38],rcx
  00fb2: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00fb9:    	mov    QWORD PTR [rsp-0x38],rax
  00fbe: 00 	mov    rdi,0x0
  00fc5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fce: 00 	movabs rax,0x0
  00fd8:    	mov    QWORD PTR [rsp-0x28],rax
  00fdd: 00 	movabs r13,0x0
  00fe7:    	call   0xffffc28a
  00fec:    	lea    rdi,[rbp-0x8]
  00ff0:    	mov    QWORD PTR [rbx],rdi
  00ff3:    	movq   xmm5,QWORD PTR [rsp]
  00ff8:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00ffe:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01004:    	add    rsp,0x20
  01008:    	test   rax,rax
  0100b:    	je     0x3d525
  01011: ff 	mov    QWORD PTR [rbp-0x88],rax
:00068 
:00070 %14 = %1.call dir()                  [<INVALID>]
  01018: 01 	sub    DWORD PTR [rip+0xd33],0x1        # 0x1d52
  0101f:    	je     0x3d55d
  01025:    	sub    rsp,0x20
  01029:    	movq   QWORD PTR [rsp],xmm5
  0102e:    	movq   QWORD PTR [rsp+0x8],xmm6
  01034:    	movq   QWORD PTR [rsp+0x10],xmm7
  0103a:    	mov    rdi,QWORD PTR [rbp-0x30]
  0103e: 31 	movabs rax,0x5631840958d0
  01048:    	call   rax
  0104a:    	mov    r15d,eax
  0104d: 00 	cmp    r15d,DWORD PTR [rip+0xd06]        # 0x1d5a
  01054:    	jne    0x3d57f
  0105a:    	mov    eax,DWORD PTR [rip+0xffffffffffffdd43]        # 0xffffeda3
  01060:    	cmp    DWORD PTR [rip+0xcf0],eax        # 0x1d56
  01066:    	jne    0x3d57f
  0106c:    	mov    rax,QWORD PTR [rbx]
  0106f:    	lea    rdi,[rsp-0x18]
  01074:    	mov    QWORD PTR [rdi],rax
  01077:    	mov    QWORD PTR [rbx],rdi
  0107a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01083:    	mov    QWORD PTR [rsp-0x38],rcx
  01088:    	mov    rax,QWORD PTR [rbp-0x30]
  0108c:    	mov    QWORD PTR [rsp-0x38],rax
  01091: 00 	mov    rdi,0x0
  01098: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010a1: 00 	movabs rax,0x0
  010ab:    	mov    QWORD PTR [rsp-0x28],rax
  010b0: 00 	movabs r13,0x0
  010ba:    	call   0xffffc28a
  010bf:    	lea    rdi,[rbp-0x8]
  010c3:    	mov    QWORD PTR [rbx],rdi
  010c6:    	movq   xmm5,QWORD PTR [rsp]
  010cb:    	movq   xmm6,QWORD PTR [rsp+0x8]
  010d1:    	movq   xmm7,QWORD PTR [rsp+0x10]
  010d7:    	add    rsp,0x20
  010db:    	test   rax,rax
  010de:    	je     0x3d5eb
  010e4: ff 	mov    QWORD PTR [rbp-0x98],rax
:00071 
:00073 %13 = %14.call y()                   [<INVALID>]
  010eb: 01 	sub    DWORD PTR [rip+0xc6c],0x1        # 0x1d5e
  010f2:    	je     0x3d623
  010f8:    	sub    rsp,0x20
  010fc:    	movq   QWORD PTR [rsp],xmm5
  01101:    	movq   QWORD PTR [rsp+0x8],xmm6
  01107:    	movq   QWORD PTR [rsp+0x10],xmm7
  0110d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01114: 31 	movabs rax,0x5631840958d0
  0111e:    	call   rax
  01120:    	mov    r15d,eax
  01123: 00 	cmp    r15d,DWORD PTR [rip+0xc3c]        # 0x1d66
  0112a:    	jne    0x3d645
  01130:    	mov    eax,DWORD PTR [rip+0xffffffffffffdc6d]        # 0xffffeda3
  01136:    	cmp    DWORD PTR [rip+0xc26],eax        # 0x1d62
  0113c:    	jne    0x3d645
  01142:    	mov    rax,QWORD PTR [rbx]
  01145:    	lea    rdi,[rsp-0x18]
  0114a:    	mov    QWORD PTR [rdi],rax
  0114d:    	mov    QWORD PTR [rbx],rdi
  01150: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01159:    	mov    QWORD PTR [rsp-0x38],rcx
  0115e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01165:    	mov    QWORD PTR [rsp-0x38],rax
  0116a: 00 	mov    rdi,0x0
  01171: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0117a: 00 	movabs rax,0x0
  01184:    	mov    QWORD PTR [rsp-0x28],rax
  01189: 00 	movabs r13,0x0
  01193:    	call   0xffffc28a
  01198:    	lea    rdi,[rbp-0x8]
  0119c:    	mov    QWORD PTR [rbx],rdi
  0119f:    	movq   xmm5,QWORD PTR [rsp]
  011a4:    	movq   xmm6,QWORD PTR [rsp+0x8]
  011aa:    	movq   xmm7,QWORD PTR [rsp+0x10]
  011b0:    	add    rsp,0x20
  011b4:    	test   rax,rax
  011b7:    	je     0x3d6b4
  011bd: ff 	mov    QWORD PTR [rbp-0x90],rax
:00074 
:00076 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  011c4: 01 	sub    DWORD PTR [rip+0xb9f],0x1        # 0x1d6a
  011cb:    	je     0x3d6ec
  011d1: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  011d8:    	mov    rsi,QWORD PTR [rbp-0x60]
  011dc:    	sub    rsp,0x20
  011e0:    	movq   QWORD PTR [rsp],xmm5
  011e5:    	movq   QWORD PTR [rsp+0x8],xmm6
  011eb:    	movq   QWORD PTR [rsp+0x10],xmm7
  011f1:    	mov    rdx,rdi
  011f4:    	mov    rcx,rsi
  011f7:    	mov    rdi,rbx
  011fa:    	mov    rsi,r12
  011fd: 31 	movabs rax,0x563184089e00
  01207:    	call   rax
  01209:    	movq   xmm5,QWORD PTR [rsp]
  0120e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01214:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0121a:    	add    rsp,0x20
  0121e: 31 	movabs r13,0x563184c858d0
  01228:    	test   rax,rax
  0122b:    	je     0xffffc2c5
  01231: ff 	mov    QWORD PTR [rbp-0x90],rax
:00077 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  01238: 01 	sub    DWORD PTR [rip+0xb2f],0x1        # 0x1d6e
  0123f:    	je     0x3d737
  01245: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0124c: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  01253:    	sub    rsp,0x20
  01257:    	movq   QWORD PTR [rsp],xmm5
  0125c:    	movq   QWORD PTR [rsp+0x8],xmm6
  01262:    	movq   QWORD PTR [rsp+0x10],xmm7
  01268:    	mov    rdx,rdi
  0126b:    	mov    rcx,rsi
  0126e:    	mov    rdi,rbx
  01271:    	mov    rsi,r12
  01274: 31 	movabs rax,0x563184087f80
  0127e:    	call   rax
  01280:    	movq   xmm5,QWORD PTR [rsp]
  01285:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0128b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01291:    	add    rsp,0x20
  01295: 31 	movabs r13,0x563184c858e0
  0129f:    	test   rax,rax
  012a2:    	je     0xffffc2c5
  012a8: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 %14 = %1.call org()                  [<INVALID>]
  012af: 01 	sub    DWORD PTR [rip+0xabc],0x1        # 0x1d72
  012b6:    	je     0x3d782
  012bc:    	sub    rsp,0x20
  012c0:    	movq   QWORD PTR [rsp],xmm5
  012c5:    	movq   QWORD PTR [rsp+0x8],xmm6
  012cb:    	movq   QWORD PTR [rsp+0x10],xmm7
  012d1:    	mov    rdi,QWORD PTR [rbp-0x30]
  012d5: 31 	movabs rax,0x5631840958d0
  012df:    	call   rax
  012e1:    	mov    r15d,eax
  012e4: 00 	cmp    r15d,DWORD PTR [rip+0xa8f]        # 0x1d7a
  012eb:    	jne    0x3d7a4
  012f1:    	mov    eax,DWORD PTR [rip+0xffffffffffffdaac]        # 0xffffeda3
  012f7:    	cmp    DWORD PTR [rip+0xa79],eax        # 0x1d76
  012fd:    	jne    0x3d7a4
  01303:    	mov    rax,QWORD PTR [rbx]
  01306:    	lea    rdi,[rsp-0x18]
  0130b:    	mov    QWORD PTR [rdi],rax
  0130e:    	mov    QWORD PTR [rbx],rdi
  01311: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0131a:    	mov    QWORD PTR [rsp-0x38],rcx
  0131f:    	mov    rax,QWORD PTR [rbp-0x30]
  01323:    	mov    QWORD PTR [rsp-0x38],rax
  01328: 00 	mov    rdi,0x0
  0132f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01338: 00 	movabs rax,0x0
  01342:    	mov    QWORD PTR [rsp-0x28],rax
  01347: 00 	movabs r13,0x0
  01351:    	call   0xffffc28a
  01356:    	lea    rdi,[rbp-0x8]
  0135a:    	mov    QWORD PTR [rbx],rdi
  0135d:    	movq   xmm5,QWORD PTR [rsp]
  01362:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01368:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0136e:    	add    rsp,0x20
  01372:    	test   rax,rax
  01375:    	je     0x3d810
  0137b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00079 
:00081 %13 = %14.call z()                   [<INVALID>]
  01382: 01 	sub    DWORD PTR [rip+0x9f5],0x1        # 0x1d7e
  01389:    	je     0x3d848
  0138f:    	sub    rsp,0x20
  01393:    	movq   QWORD PTR [rsp],xmm5
  01398:    	movq   QWORD PTR [rsp+0x8],xmm6
  0139e:    	movq   QWORD PTR [rsp+0x10],xmm7
  013a4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  013ab: 31 	movabs rax,0x5631840958d0
  013b5:    	call   rax
  013b7:    	mov    r15d,eax
  013ba: 00 	cmp    r15d,DWORD PTR [rip+0x9c5]        # 0x1d86
  013c1:    	jne    0x3d86a
  013c7:    	mov    eax,DWORD PTR [rip+0xffffffffffffd9d6]        # 0xffffeda3
  013cd:    	cmp    DWORD PTR [rip+0x9af],eax        # 0x1d82
  013d3:    	jne    0x3d86a
  013d9:    	mov    rax,QWORD PTR [rbx]
  013dc:    	lea    rdi,[rsp-0x18]
  013e1:    	mov    QWORD PTR [rdi],rax
  013e4:    	mov    QWORD PTR [rbx],rdi
  013e7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013f0:    	mov    QWORD PTR [rsp-0x38],rcx
  013f5: ff 	mov    rax,QWORD PTR [rbp-0x98]
  013fc:    	mov    QWORD PTR [rsp-0x38],rax
  01401: 00 	mov    rdi,0x0
  01408: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01411: 00 	movabs rax,0x0
  0141b:    	mov    QWORD PTR [rsp-0x28],rax
  01420: 00 	movabs r13,0x0
  0142a:    	call   0xffffc28a
  0142f:    	lea    rdi,[rbp-0x8]
  01433:    	mov    QWORD PTR [rbx],rdi
  01436:    	movq   xmm5,QWORD PTR [rsp]
  0143b:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01441:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01447:    	add    rsp,0x20
  0144b:    	test   rax,rax
  0144e:    	je     0x3d8d9
  01454: ff 	mov    QWORD PTR [rbp-0x90],rax
:00082 
:00084 %15 = %1.call dir()                  [<INVALID>]
  0145b: 01 	sub    DWORD PTR [rip+0x928],0x1        # 0x1d8a
  01462:    	je     0x3d911
  01468:    	sub    rsp,0x20
  0146c:    	movq   QWORD PTR [rsp],xmm5
  01471:    	movq   QWORD PTR [rsp+0x8],xmm6
  01477:    	movq   QWORD PTR [rsp+0x10],xmm7
  0147d:    	mov    rdi,QWORD PTR [rbp-0x30]
  01481: 31 	movabs rax,0x5631840958d0
  0148b:    	call   rax
  0148d:    	mov    r15d,eax
  01490: 00 	cmp    r15d,DWORD PTR [rip+0x8fb]        # 0x1d92
  01497:    	jne    0x3d933
  0149d:    	mov    eax,DWORD PTR [rip+0xffffffffffffd900]        # 0xffffeda3
  014a3:    	cmp    DWORD PTR [rip+0x8e5],eax        # 0x1d8e
  014a9:    	jne    0x3d933
  014af:    	mov    rax,QWORD PTR [rbx]
  014b2:    	lea    rdi,[rsp-0x18]
  014b7:    	mov    QWORD PTR [rdi],rax
  014ba:    	mov    QWORD PTR [rbx],rdi
  014bd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014c6:    	mov    QWORD PTR [rsp-0x38],rcx
  014cb:    	mov    rax,QWORD PTR [rbp-0x30]
  014cf:    	mov    QWORD PTR [rsp-0x38],rax
  014d4: 00 	mov    rdi,0x0
  014db: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014e4: 00 	movabs rax,0x0
  014ee:    	mov    QWORD PTR [rsp-0x28],rax
  014f3: 00 	movabs r13,0x0
  014fd:    	call   0xffffc28a
  01502:    	lea    rdi,[rbp-0x8]
  01506:    	mov    QWORD PTR [rbx],rdi
  01509:    	movq   xmm5,QWORD PTR [rsp]
  0150e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01514:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0151a:    	add    rsp,0x20
  0151e:    	test   rax,rax
  01521:    	je     0x3d99f
  01527: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00085 
:00087 %14 = %15.call z()                   [<INVALID>]
  0152e: 01 	sub    DWORD PTR [rip+0x861],0x1        # 0x1d96
  01535:    	je     0x3d9d7
  0153b:    	sub    rsp,0x20
  0153f:    	movq   QWORD PTR [rsp],xmm5
  01544:    	movq   QWORD PTR [rsp+0x8],xmm6
  0154a:    	movq   QWORD PTR [rsp+0x10],xmm7
  01550: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01557: 31 	movabs rax,0x5631840958d0
  01561:    	call   rax
  01563:    	mov    r15d,eax
  01566: 00 	cmp    r15d,DWORD PTR [rip+0x831]        # 0x1d9e
  0156d:    	jne    0x3d9f9
  01573:    	mov    eax,DWORD PTR [rip+0xffffffffffffd82a]        # 0xffffeda3
  01579:    	cmp    DWORD PTR [rip+0x81b],eax        # 0x1d9a
  0157f:    	jne    0x3d9f9
  01585:    	mov    rax,QWORD PTR [rbx]
  01588:    	lea    rdi,[rsp-0x18]
  0158d:    	mov    QWORD PTR [rdi],rax
  01590:    	mov    QWORD PTR [rbx],rdi
  01593: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0159c:    	mov    QWORD PTR [rsp-0x38],rcx
  015a1: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  015a8:    	mov    QWORD PTR [rsp-0x38],rax
  015ad: 00 	mov    rdi,0x0
  015b4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015bd: 00 	movabs rax,0x0
  015c7:    	mov    QWORD PTR [rsp-0x28],rax
  015cc: 00 	movabs r13,0x0
  015d6:    	call   0xffffc28a
  015db:    	lea    rdi,[rbp-0x8]
  015df:    	mov    QWORD PTR [rbx],rdi
  015e2:    	movq   xmm5,QWORD PTR [rsp]
  015e7:    	movq   xmm6,QWORD PTR [rsp+0x8]
  015ed:    	movq   xmm7,QWORD PTR [rsp+0x10]
  015f3:    	add    rsp,0x20
  015f7:    	test   rax,rax
  015fa:    	je     0x3da68
  01600: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 
:00090 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01607: 01 	sub    DWORD PTR [rip+0x794],0x1        # 0x1da2
  0160e:    	je     0x3daa0
  01614: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0161b:    	mov    rsi,QWORD PTR [rbp-0x60]
  0161f:    	sub    rsp,0x20
  01623:    	movq   QWORD PTR [rsp],xmm5
  01628:    	movq   QWORD PTR [rsp+0x8],xmm6
  0162e:    	movq   QWORD PTR [rsp+0x10],xmm7
  01634:    	mov    rdx,rdi
  01637:    	mov    rcx,rsi
  0163a:    	mov    rdi,rbx
  0163d:    	mov    rsi,r12
  01640: 31 	movabs rax,0x563184089e00
  0164a:    	call   rax
  0164c:    	movq   xmm5,QWORD PTR [rsp]
  01651:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01657:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0165d:    	add    rsp,0x20
  01661: 31 	movabs r13,0x563184c859b0
  0166b:    	test   rax,rax
  0166e:    	je     0xffffc2c5
  01674: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  0167b: 01 	sub    DWORD PTR [rip+0x724],0x1        # 0x1da6
  01682:    	je     0x3daeb
  01688: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0168f: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  01696:    	sub    rsp,0x20
  0169a:    	movq   QWORD PTR [rsp],xmm5
  0169f:    	movq   QWORD PTR [rsp+0x8],xmm6
  016a5:    	movq   QWORD PTR [rsp+0x10],xmm7
  016ab:    	mov    rdx,rdi
  016ae:    	mov    rcx,rsi
  016b1:    	mov    rdi,rbx
  016b4:    	mov    rsi,r12
  016b7: 31 	movabs rax,0x563184087f80
  016c1:    	call   rax
  016c3:    	movq   xmm5,QWORD PTR [rsp]
  016c8:    	movq   xmm6,QWORD PTR [rsp+0x8]
  016ce:    	movq   xmm7,QWORD PTR [rsp+0x10]
  016d4:    	add    rsp,0x20
  016d8: 31 	movabs r13,0x563184c859c0
  016e2:    	test   rax,rax
  016e5:    	je     0xffffc2c5
  016eb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 %9 = %10.call new(%11; 3)            [<INVALID>]
  016f2: 01 	sub    DWORD PTR [rip+0x6b1],0x1        # 0x1daa
  016f9:    	je     0x3db36
  016ff:    	sub    rsp,0x20
  01703:    	movq   QWORD PTR [rsp],xmm5
  01708:    	movq   QWORD PTR [rsp+0x8],xmm6
  0170e:    	movq   QWORD PTR [rsp+0x10],xmm7
  01714:    	mov    rdi,QWORD PTR [rbp-0x78]
  01718: 31 	movabs rax,0x5631840958d0
  01722:    	call   rax
  01724:    	mov    r15d,eax
  01727: 00 	cmp    r15d,DWORD PTR [rip+0x684]        # 0x1db2
  0172e:    	jne    0x3db58
  01734:    	mov    eax,DWORD PTR [rip+0xffffffffffffd669]        # 0xffffeda3
  0173a:    	cmp    DWORD PTR [rip+0x66e],eax        # 0x1dae
  01740:    	jne    0x3db58
  01746:    	mov    rax,QWORD PTR [rbx]
  01749:    	lea    rdi,[rsp-0x18]
  0174e:    	mov    QWORD PTR [rdi],rax
  01751:    	mov    QWORD PTR [rbx],rdi
  01754: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0175d:    	mov    QWORD PTR [rsp-0x38],rcx
  01762:    	mov    rax,QWORD PTR [rbp-0x78]
  01766:    	mov    QWORD PTR [rsp-0x38],rax
  0176b: 00 	mov    rdi,0x3
  01772:    	mov    rax,QWORD PTR [rbp-0x80]
  01776:    	mov    QWORD PTR [rsp-0x40],rax
  0177b: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01782:    	mov    QWORD PTR [rsp-0x48],rax
  01787: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0178e:    	mov    QWORD PTR [rsp-0x50],rax
  01793: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0179c: 00 	movabs rax,0x0
  017a6:    	mov    QWORD PTR [rsp-0x28],rax
  017ab: 00 	movabs r13,0x0
  017b5:    	call   0xffffc28a
  017ba:    	lea    rdi,[rbp-0x8]
  017be:    	mov    QWORD PTR [rbx],rdi
  017c1:    	movq   xmm5,QWORD PTR [rsp]
  017c6:    	movq   xmm6,QWORD PTR [rsp+0x8]
  017cc:    	movq   xmm7,QWORD PTR [rsp+0x10]
  017d2:    	add    rsp,0x20
  017d6:    	test   rax,rax
  017d9:    	je     0x3dbc4
  017df:    	mov    QWORD PTR [rbp-0x70],rax
:00093 
:00095 _ = %2.call pl=(%9; 1)               [<INVALID>]
  017e3: 01 	sub    DWORD PTR [rip+0x5cc],0x1        # 0x1db6
  017ea:    	je     0x3dbfc
  017f0:    	sub    rsp,0x20
  017f4:    	movq   QWORD PTR [rsp],xmm5
  017f9:    	movq   QWORD PTR [rsp+0x8],xmm6
  017ff:    	movq   QWORD PTR [rsp+0x10],xmm7
  01805:    	mov    rdi,QWORD PTR [rbp-0x38]
  01809: 31 	movabs rax,0x5631840958d0
  01813:    	call   rax
  01815:    	mov    r15d,eax
  01818: 00 	cmp    r15d,DWORD PTR [rip+0x59f]        # 0x1dbe
  0181f:    	jne    0x3dc1e
  01825:    	mov    eax,DWORD PTR [rip+0xffffffffffffd578]        # 0xffffeda3
  0182b:    	cmp    DWORD PTR [rip+0x589],eax        # 0x1dba
  01831:    	jne    0x3dc1e
  01837:    	mov    rax,QWORD PTR [rbx]
  0183a:    	lea    rdi,[rsp-0x18]
  0183f:    	mov    QWORD PTR [rdi],rax
  01842:    	mov    QWORD PTR [rbx],rdi
  01845: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0184e:    	mov    QWORD PTR [rsp-0x38],rcx
  01853:    	mov    rax,QWORD PTR [rbp-0x38]
  01857:    	mov    QWORD PTR [rsp-0x38],rax
  0185c: 00 	mov    rdi,0x1
  01863:    	mov    rax,QWORD PTR [rbp-0x70]
  01867:    	mov    QWORD PTR [rsp-0x40],rax
  0186c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01875: 00 	movabs rax,0x0
  0187f:    	mov    QWORD PTR [rsp-0x28],rax
  01884: 00 	movabs r13,0x0
  0188e:    	call   0xffffc28a
  01893:    	lea    rdi,[rbp-0x8]
  01897:    	mov    QWORD PTR [rbx],rdi
  0189a:    	movq   xmm5,QWORD PTR [rsp]
  0189f:    	movq   xmm6,QWORD PTR [rsp+0x8]
  018a5:    	movq   xmm7,QWORD PTR [rsp+0x10]
  018ab:    	add    rsp,0x20
  018af:    	test   rax,rax
  018b2:    	je     0x3dc8a
:00096 
:00098 %9 = %2.call pl()                    [<INVALID>]
  018b8: 01 	sub    DWORD PTR [rip+0x503],0x1        # 0x1dc2
  018bf:    	je     0x3dcc2
  018c5:    	sub    rsp,0x20
  018c9:    	movq   QWORD PTR [rsp],xmm5
  018ce:    	movq   QWORD PTR [rsp+0x8],xmm6
  018d4:    	movq   QWORD PTR [rsp+0x10],xmm7
  018da:    	mov    rdi,QWORD PTR [rbp-0x38]
  018de: 31 	movabs rax,0x5631840958d0
  018e8:    	call   rax
  018ea:    	mov    r15d,eax
  018ed: 00 	cmp    r15d,DWORD PTR [rip+0x4d6]        # 0x1dca
  018f4:    	jne    0x3dce4
  018fa:    	mov    eax,DWORD PTR [rip+0xffffffffffffd4a3]        # 0xffffeda3
  01900:    	cmp    DWORD PTR [rip+0x4c0],eax        # 0x1dc6
  01906:    	jne    0x3dce4
  0190c:    	mov    rax,QWORD PTR [rbx]
  0190f:    	lea    rdi,[rsp-0x18]
  01914:    	mov    QWORD PTR [rdi],rax
  01917:    	mov    QWORD PTR [rbx],rdi
  0191a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01923:    	mov    QWORD PTR [rsp-0x38],rcx
  01928:    	mov    rax,QWORD PTR [rbp-0x38]
  0192c:    	mov    QWORD PTR [rsp-0x38],rax
  01931: 00 	mov    rdi,0x0
  01938: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01941: 00 	movabs rax,0x0
  0194b:    	mov    QWORD PTR [rsp-0x28],rax
  01950: 00 	movabs r13,0x0
  0195a:    	call   0xffffc28a
  0195f:    	lea    rdi,[rbp-0x8]
  01963:    	mov    QWORD PTR [rbx],rdi
  01966:    	movq   xmm5,QWORD PTR [rsp]
  0196b:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01971:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01977:    	add    rsp,0x20
  0197b:    	test   rax,rax
  0197e:    	je     0x3dd50
  01984:    	mov    QWORD PTR [rbp-0x70],rax
:00099 
:00101 %10 = @center: <INVALID>[IvarId(0)]
  01988:    	mov    rdi,QWORD PTR [rbp-0x28]
  0198c:    	sub    rsp,0x20
  01990:    	movq   QWORD PTR [rsp],xmm5
  01995:    	movq   QWORD PTR [rsp+0x8],xmm6
  0199b:    	movq   QWORD PTR [rsp+0x10],xmm7
  019a1: 00 	mov    rsi,0x85
  019a8:    	mov    rdx,r12
  019ab: 31 	movabs rax,0x5631840b8770
  019b5:    	call   rax
  019b7:    	movq   xmm5,QWORD PTR [rsp]
  019bc:    	movq   xmm6,QWORD PTR [rsp+0x8]
  019c2:    	movq   xmm7,QWORD PTR [rsp+0x10]
  019c8:    	add    rsp,0x20
  019cc:    	mov    QWORD PTR [rbp-0x78],rax
:00102 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  019d0: 01 	sub    DWORD PTR [rip+0x3f7],0x1        # 0x1dce
  019d7:    	je     0x3dd88
  019dd:    	sub    rsp,0x20
  019e1:    	movq   QWORD PTR [rsp],xmm5
  019e6:    	movq   QWORD PTR [rsp+0x8],xmm6
  019ec:    	movq   QWORD PTR [rsp+0x10],xmm7
  019f2:    	mov    rdi,QWORD PTR [rbp-0x70]
  019f6: 31 	movabs rax,0x5631840958d0
  01a00:    	call   rax
  01a02:    	mov    r15d,eax
  01a05: 00 	cmp    r15d,DWORD PTR [rip+0x3ca]        # 0x1dd6
  01a0c:    	jne    0x3ddaa
  01a12:    	mov    eax,DWORD PTR [rip+0xffffffffffffd38b]        # 0xffffeda3
  01a18:    	cmp    DWORD PTR [rip+0x3b4],eax        # 0x1dd2
  01a1e:    	jne    0x3ddaa
  01a24:    	mov    rax,QWORD PTR [rbx]
  01a27:    	lea    rdi,[rsp-0x18]
  01a2c:    	mov    QWORD PTR [rdi],rax
  01a2f:    	mov    QWORD PTR [rbx],rdi
  01a32: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a3b:    	mov    QWORD PTR [rsp-0x38],rcx
  01a40:    	mov    rax,QWORD PTR [rbp-0x70]
  01a44:    	mov    QWORD PTR [rsp-0x38],rax
  01a49: 00 	mov    rdi,0x1
  01a50:    	mov    rax,QWORD PTR [rbp-0x78]
  01a54:    	mov    QWORD PTR [rsp-0x40],rax
  01a59: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a62: 00 	movabs rax,0x0
  01a6c:    	mov    QWORD PTR [rsp-0x28],rax
  01a71: 00 	movabs r13,0x0
  01a7b:    	call   0xffffc28a
  01a80:    	lea    rdi,[rbp-0x8]
  01a84:    	mov    QWORD PTR [rbx],rdi
  01a87:    	movq   xmm5,QWORD PTR [rsp]
  01a8c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01a92:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01a98:    	add    rsp,0x20
  01a9c:    	test   rax,rax
  01a9f:    	je     0x3de16
  01aa5:    	mov    QWORD PTR [rbp-0x68],rax
:00103 
:00105 %9 = %8.call vnormalize()            [<INVALID>]
  01aa9: 01 	sub    DWORD PTR [rip+0x32a],0x1        # 0x1dda
  01ab0:    	je     0x3de4e
  01ab6:    	sub    rsp,0x20
  01aba:    	movq   QWORD PTR [rsp],xmm5
  01abf:    	movq   QWORD PTR [rsp+0x8],xmm6
  01ac5:    	movq   QWORD PTR [rsp+0x10],xmm7
  01acb:    	mov    rdi,QWORD PTR [rbp-0x68]
  01acf: 31 	movabs rax,0x5631840958d0
  01ad9:    	call   rax
  01adb:    	mov    r15d,eax
  01ade: 00 	cmp    r15d,DWORD PTR [rip+0x2fd]        # 0x1de2
  01ae5:    	jne    0x3de70
  01aeb:    	mov    eax,DWORD PTR [rip+0xffffffffffffd2b2]        # 0xffffeda3
  01af1:    	cmp    DWORD PTR [rip+0x2e7],eax        # 0x1dde
  01af7:    	jne    0x3de70
  01afd:    	mov    rax,QWORD PTR [rbx]
  01b00:    	lea    rdi,[rsp-0x18]
  01b05:    	mov    QWORD PTR [rdi],rax
  01b08:    	mov    QWORD PTR [rbx],rdi
  01b0b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b14:    	mov    QWORD PTR [rsp-0x38],rcx
  01b19:    	mov    rax,QWORD PTR [rbp-0x68]
  01b1d:    	mov    QWORD PTR [rsp-0x38],rax
  01b22: 00 	mov    rdi,0x0
  01b29: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b32: 00 	movabs rax,0x0
  01b3c:    	mov    QWORD PTR [rsp-0x28],rax
  01b41: 00 	movabs r13,0x0
  01b4b:    	call   0xffffc28a
  01b50:    	lea    rdi,[rbp-0x8]
  01b54:    	mov    QWORD PTR [rbx],rdi
  01b57:    	movq   xmm5,QWORD PTR [rsp]
  01b5c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01b62:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01b68:    	add    rsp,0x20
  01b6c:    	test   rax,rax
  01b6f:    	je     0x3dedc
  01b75:    	mov    QWORD PTR [rbp-0x70],rax
:00106 
:00108 _ = %2.call n=(%9; 1)                [<INVALID>]
  01b79: 01 	sub    DWORD PTR [rip+0x266],0x1        # 0x1de6
  01b80:    	je     0x3df14
  01b86:    	sub    rsp,0x20
  01b8a:    	movq   QWORD PTR [rsp],xmm5
  01b8f:    	movq   QWORD PTR [rsp+0x8],xmm6
  01b95:    	movq   QWORD PTR [rsp+0x10],xmm7
  01b9b:    	mov    rdi,QWORD PTR [rbp-0x38]
  01b9f: 31 	movabs rax,0x5631840958d0
  01ba9:    	call   rax
  01bab:    	mov    r15d,eax
  01bae: 00 	cmp    r15d,DWORD PTR [rip+0x239]        # 0x1dee
  01bb5:    	jne    0x3df36
  01bbb:    	mov    eax,DWORD PTR [rip+0xffffffffffffd1e2]        # 0xffffeda3
  01bc1:    	cmp    DWORD PTR [rip+0x223],eax        # 0x1dea
  01bc7:    	jne    0x3df36
  01bcd:    	mov    rax,QWORD PTR [rbx]
  01bd0:    	lea    rdi,[rsp-0x18]
  01bd5:    	mov    QWORD PTR [rdi],rax
  01bd8:    	mov    QWORD PTR [rbx],rdi
  01bdb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01be4:    	mov    QWORD PTR [rsp-0x38],rcx
  01be9:    	mov    rax,QWORD PTR [rbp-0x38]
  01bed:    	mov    QWORD PTR [rsp-0x38],rax
  01bf2: 00 	mov    rdi,0x1
  01bf9:    	mov    rax,QWORD PTR [rbp-0x70]
  01bfd:    	mov    QWORD PTR [rsp-0x40],rax
  01c02: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c0b: 00 	movabs rax,0x0
  01c15:    	mov    QWORD PTR [rsp-0x28],rax
  01c1a: 00 	movabs r13,0x0
  01c24:    	call   0xffffc28a
  01c29:    	lea    rdi,[rbp-0x8]
  01c2d:    	mov    QWORD PTR [rbx],rdi
  01c30:    	movq   xmm5,QWORD PTR [rsp]
  01c35:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01c3b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01c41:    	add    rsp,0x20
  01c45:    	test   rax,rax
  01c48:    	je     0x3dfa2
:00109 
:00111 br =>:00112
  01c4e:    	jmp    0x3e017
:00112 br =>:00113
  01c53:    	jmp    0x3e08a
:00113 %9 = nil
  01c58: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00114 ret %9
  01c60:    	mov    rax,QWORD PTR [rbp-0x70]
  01c64:    	leave  
  01c65:    	ret    
==> start whole compile: vsub FuncId(63) self_class:Vec start:[00000] bytecode:0x563184c81a90
<== finished compile. elapsed:39.8µs
offset:Pos(23400) code: 1331 bytes  data: 53 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x70
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    QWORD PTR [rbp-0x50],rax
  0001f: mov    QWORD PTR [rbp-0x58],rax
  00023: mov    QWORD PTR [rbp-0x60],rax
  00027: mov    rdi,QWORD PTR [rbp-0x28]
  0002b: test   rdi,0x7
  00032: jne    0x3c2cb
  00038: cmp    DWORD PTR [rdi+0x4],0x28
  0003c: jne    0x3c2cb
:00000 %3 = const[Vec]                      [Vec]
  00042: mov    rax,QWORD PTR [rip+0xffffffffffffcf6f]        # 0xffffcfb8
  00049: cmp    rax,QWORD PTR [rip+0x4f8]        # 0x548
  00050: jne    0x3c2da
  00056: mov    rax,QWORD PTR [rip+0x4db]        # 0x538
  0005d: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = @x: Vec[IvarId(0)]
  00061: mov    rdi,QWORD PTR [rbp-0x28]
  00065: mov    rax,QWORD PTR [rdi+0x10]
  00069: mov    QWORD PTR [rbp-0x48],rax
:00002 %5 = %1.call x()                     [Vec]
  0006d: mov    rdi,QWORD PTR [rbp-0x30]
  00071: test   rdi,0x7
  00078: jne    0x3c320
  0007e: cmp    DWORD PTR [rdi+0x4],0x28
  00082: jne    0x3c320
  00088: cmp    DWORD PTR [rip+0xffffffffffffcf22],0x26        # 0xffffcfb1
  0008f: jne    0x3c320
  00095: mov    esi,DWORD PTR [rip+0x4b9]        # 0x554
  0009b: cmp    esi,0xffffffff
  0009e: je     0x3c32f
  000a4: cmp    WORD PTR [rdi+0x2],0x3
  000a9: jne    0xc2
  000af: cmp    esi,0x6
  000b2: jge    0xc2
  000b8: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd: jmp    0xce
  000c2: movabs rax,0x563184053740
  000cc: call   rax
  000ce: mov    QWORD PTR [rbp-0x50],rax
:00003 
:00005 %4 = %4 - %5                         [Float][Float]
  000d2: mov    rdi,QWORD PTR [rbp-0x48]
  000d6: test   rdi,0x1
  000dd: jne    0x3c358
  000e3: test   rdi,0x2
  000ea: je     0x126
  000f0: xorps  xmm2,xmm2
  000f3: movabs rax,0x8000000000000002
  000fd: cmp    rdi,rax
  00100: je     0x138
  00106: mov    rax,rdi
  00109: sar    rax,0x3f
  0010d: add    rax,0x2
  00111: and    rdi,0xfffffffffffffffc
  00115: or     rdi,rax
  00118: rol    rdi,0x3d
  0011c: movq   xmm2,rdi
  00121: jmp    0x138
  00126: call   0xffffa50c
  0012b: test   rax,rax
  0012e: je     0x3c358
  00134: movq   xmm2,xmm0
  00138: mov    rdi,QWORD PTR [rbp-0x50]
  0013c: test   rdi,0x1
  00143: jne    0x3c367
  00149: test   rdi,0x2
  00150: je     0x18c
  00156: xorps  xmm3,xmm3
  00159: movabs rax,0x8000000000000002
  00163: cmp    rdi,rax
  00166: je     0x19e
  0016c: mov    rax,rdi
  0016f: sar    rax,0x3f
  00173: add    rax,0x2
  00177: and    rdi,0xfffffffffffffffc
  0017b: or     rdi,rax
  0017e: rol    rdi,0x3d
  00182: movq   xmm3,rdi
  00187: jmp    0x19e
  0018c: call   0xffffa50c
  00191: test   rax,rax
  00194: je     0x3c367
  0019a: movq   xmm3,xmm0
  0019e: subsd  xmm2,xmm3
:00006 %5 = @y: Vec[IvarId(1)]
  001a2: mov    rdi,QWORD PTR [rbp-0x28]
  001a6: mov    rax,QWORD PTR [rdi+0x18]
  001aa: mov    QWORD PTR [rbp-0x50],rax
:00007 %6 = %1.call y()                     [Vec]
  001ae: mov    rdi,QWORD PTR [rbp-0x30]
  001b2: test   rdi,0x7
  001b9: jne    0x3c376
  001bf: cmp    DWORD PTR [rdi+0x4],0x28
  001c3: jne    0x3c376
  001c9: cmp    DWORD PTR [rip+0xffffffffffffcde1],0x26        # 0xffffcfb1
  001d0: jne    0x3c376
  001d6: mov    esi,DWORD PTR [rip+0x380]        # 0x55c
  001dc: cmp    esi,0xffffffff
  001df: je     0x3c392
  001e5: cmp    WORD PTR [rdi+0x2],0x3
  001ea: jne    0x203
  001f0: cmp    esi,0x6
  001f3: jge    0x203
  001f9: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001fe: jmp    0x221
  00203: sub    rsp,0x10
  00207: movq   QWORD PTR [rsp],xmm2
  0020c: movabs rax,0x563184053740
  00216: call   rax
  00218: movq   xmm2,QWORD PTR [rsp]
  0021d: add    rsp,0x10
  00221: mov    QWORD PTR [rbp-0x58],rax
:00008 
:00010 %5 = %5 - %6                         [Float][Float]
  00225: mov    rdi,QWORD PTR [rbp-0x50]
  00229: test   rdi,0x1
  00230: jne    0x3c3cd
  00236: test   rdi,0x2
  0023d: je     0x279
  00243: xorps  xmm3,xmm3
  00246: movabs rax,0x8000000000000002
  00250: cmp    rdi,rax
  00253: je     0x28b
  00259: mov    rax,rdi
  0025c: sar    rax,0x3f
  00260: add    rax,0x2
  00264: and    rdi,0xfffffffffffffffc
  00268: or     rdi,rax
  0026b: rol    rdi,0x3d
  0026f: movq   xmm3,rdi
  00274: jmp    0x28b
  00279: call   0xffffa50c
  0027e: test   rax,rax
  00281: je     0x3c3cd
  00287: movq   xmm3,xmm0
  0028b: mov    rdi,QWORD PTR [rbp-0x58]
  0028f: test   rdi,0x1
  00296: jne    0x3c3e9
  0029c: test   rdi,0x2
  002a3: je     0x2df
  002a9: xorps  xmm4,xmm4
  002ac: movabs rax,0x8000000000000002
  002b6: cmp    rdi,rax
  002b9: je     0x2f1
  002bf: mov    rax,rdi
  002c2: sar    rax,0x3f
  002c6: add    rax,0x2
  002ca: and    rdi,0xfffffffffffffffc
  002ce: or     rdi,rax
  002d1: rol    rdi,0x3d
  002d5: movq   xmm4,rdi
  002da: jmp    0x2f1
  002df: call   0xffffa50c
  002e4: test   rax,rax
  002e7: je     0x3c3e9
  002ed: movq   xmm4,xmm0
  002f1: subsd  xmm3,xmm4
:00011 %6 = @z: Vec[IvarId(2)]
  002f5: mov    rdi,QWORD PTR [rbp-0x28]
  002f9: mov    rax,QWORD PTR [rdi+0x20]
  002fd: mov    QWORD PTR [rbp-0x58],rax
:00012 %7 = %1.call z()                     [Vec]
  00301: mov    rdi,QWORD PTR [rbp-0x30]
  00305: test   rdi,0x7
  0030c: jne    0x3c405
  00312: cmp    DWORD PTR [rdi+0x4],0x28
  00316: jne    0x3c405
  0031c: cmp    DWORD PTR [rip+0xffffffffffffcc8e],0x26        # 0xffffcfb1
  00323: jne    0x3c405
  00329: mov    esi,DWORD PTR [rip+0x235]        # 0x564
  0032f: cmp    esi,0xffffffff
  00332: je     0x3c42e
  00338: cmp    WORD PTR [rdi+0x2],0x3
  0033d: jne    0x356
  00343: cmp    esi,0x6
  00346: jge    0x356
  0034c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00351: jmp    0x380
  00356: sub    rsp,0x10
  0035a: movq   QWORD PTR [rsp],xmm2
  0035f: movq   QWORD PTR [rsp+0x8],xmm3
  00365: movabs rax,0x563184053740
  0036f: call   rax
  00371: movq   xmm2,QWORD PTR [rsp]
  00376: movq   xmm3,QWORD PTR [rsp+0x8]
  0037c: add    rsp,0x10
  00380: mov    QWORD PTR [rbp-0x60],rax
:00013 
:00015 %6 = %6 - %7                         [Float][Float]
  00384: mov    rdi,QWORD PTR [rbp-0x58]
  00388: test   rdi,0x1
  0038f: jne    0x3c475
  00395: test   rdi,0x2
  0039c: je     0x3d8
  003a2: xorps  xmm4,xmm4
  003a5: movabs rax,0x8000000000000002
  003af: cmp    rdi,rax
  003b2: je     0x3ea
  003b8: mov    rax,rdi
  003bb: sar    rax,0x3f
  003bf: add    rax,0x2
  003c3: and    rdi,0xfffffffffffffffc
  003c7: or     rdi,rax
  003ca: rol    rdi,0x3d
  003ce: movq   xmm4,rdi
  003d3: jmp    0x3ea
  003d8: call   0xffffa50c
  003dd: test   rax,rax
  003e0: je     0x3c475
  003e6: movq   xmm4,xmm0
  003ea: mov    rdi,QWORD PTR [rbp-0x60]
  003ee: test   rdi,0x1
  003f5: jne    0x3c49e
  003fb: test   rdi,0x2
  00402: je     0x43e
  00408: xorps  xmm5,xmm5
  0040b: movabs rax,0x8000000000000002
  00415: cmp    rdi,rax
  00418: je     0x450
  0041e: mov    rax,rdi
  00421: sar    rax,0x3f
  00425: add    rax,0x2
  00429: and    rdi,0xfffffffffffffffc
  0042d: or     rdi,rax
  00430: rol    rdi,0x3d
  00434: movq   xmm5,rdi
  00439: jmp    0x450
  0043e: call   0xffffa50c
  00443: test   rax,rax
  00446: je     0x3c49e
  0044c: movq   xmm5,xmm0
  00450: subsd  xmm4,xmm5
:00016 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
  00454: movq   xmm0,xmm2
  00458: call   0xffffa5ff
  0045d: mov    QWORD PTR [rbp-0x48],rax
  00461: movq   xmm0,xmm3
  00465: call   0xffffa5ff
  0046a: mov    QWORD PTR [rbp-0x50],rax
  0046e: movq   xmm0,xmm4
  00472: call   0xffffa5ff
  00477: mov    QWORD PTR [rbp-0x58],rax
  0047b: mov    rdi,QWORD PTR [rbp-0x40]
  0047f: test   rdi,0x7
  00486: jne    0x3c4c7
  0048c: cmp    DWORD PTR [rdi+0x4],0x29
  00490: jne    0x3c4c7
  00496: cmp    DWORD PTR [rip+0xffffffffffffcb14],0x26        # 0xffffcfb1
  0049d: jne    0x3c4c7
  004a3: mov    r9,0x0
  004aa: sub    rsp,0x20
  004ae: movq   QWORD PTR [rsp],xmm2
  004b3: movq   QWORD PTR [rsp+0x8],xmm3
  004b9: movq   QWORD PTR [rsp+0x10],xmm4
  004bf: movq   QWORD PTR [rsp+0x18],xmm5
  004c5: mov    rdx,rdi
  004c8: mov    rax,QWORD PTR [rbx]
  004cb: lea    rdi,[rsp-0x18]
  004d0: mov    QWORD PTR [rdi],rax
  004d3: mov    QWORD PTR [rbx],rdi
  004d6: mov    QWORD PTR [rsp-0x20],0x0
  004df: mov    QWORD PTR [rsp-0x38],rcx
  004e4: lea    rcx,[rbp-0x48]
  004e8: mov    r8,0x3
  004ef: call   0x3c4d6
  004f4: lea    rdi,[rbp-0x8]
  004f8: mov    QWORD PTR [rbx],rdi
  004fb: movq   xmm2,QWORD PTR [rsp]
  00500: movq   xmm3,QWORD PTR [rsp+0x8]
  00506: movq   xmm4,QWORD PTR [rsp+0x10]
  0050c: movq   xmm5,QWORD PTR [rsp+0x18]
  00512: add    rsp,0x20
  00516: movabs r13,0x563184c81bb0
  00520: test   rax,rax
  00523: je     0xffffa4d3
  00529: mov    QWORD PTR [rbp-0x38],rax
:00017 
:00019 ret %2
  0052d: mov    rax,QWORD PTR [rbp-0x38]
  00531: leave  
  00532: ret    
==> start whole compile: <unnamed> FuncId(82) self_class:Scene start:[00000] bytecode:0x563184ccb970
<== finished compile. elapsed:150.6µs
offset:Pos(25055) code: 9329 bytes  data: 404 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xd0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00064: ff 	mov    QWORD PTR [rbp-0xb8],rax
  0006b: ff 	mov    QWORD PTR [rbp-0xc0],rax
  00072:    	mov    rdi,QWORD PTR [rbp-0x28]
  00076: 00 	test   rdi,0x7
  0007d:    	jne    0x3be91
  00083:    	cmp    DWORD PTR [rdi+0x4],0x32
  00087:    	jne    0x3be91
:00000 %14 = dynvar(4, %4)
  0008d:    	mov    rax,QWORD PTR [rbp-0x10]
  00091:    	mov    rax,QWORD PTR [rax]
  00094:    	mov    rax,QWORD PTR [rax]
  00097:    	mov    rax,QWORD PTR [rax]
  0009a:    	mov    rax,QWORD PTR [rax-0x38]
  0009e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00001 %14 = %14 + 1: i16                   [Integer][Integer]
  000a5: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000ac: 00 	test   rdi,0x1
  000b3:    	je     0x3bea0
  000b9:    	add    rdi,0x2
  000bd:    	jo     0x3bea0
  000c3: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00002 dynvar(4, %4) = %14
  000ca:    	mov    rax,QWORD PTR [rbp-0x10]
  000ce:    	mov    rax,QWORD PTR [rax]
  000d1:    	mov    rax,QWORD PTR [rax]
  000d4:    	mov    rax,QWORD PTR [rax]
  000d7: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000de:    	mov    QWORD PTR [rax-0x38],rdi
:00003 %14 = dynvar(4, %1)
  000e2:    	mov    rax,QWORD PTR [rbp-0x10]
  000e6:    	mov    rax,QWORD PTR [rax]
  000e9:    	mov    rax,QWORD PTR [rax]
  000ec:    	mov    rax,QWORD PTR [rax]
  000ef:    	mov    rax,QWORD PTR [rax-0x20]
  000f3: ff 	mov    QWORD PTR [rbp-0x98],rax
:00004 %2 = %14.call to_f()                 [Integer]
  000fa: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00101: 00 	test   rdi,0x1
  00108:    	je     0x3beaf
  0010e: 26 	cmp    DWORD PTR [rip+0xffffffffffffc825],0x26        # 0xffffc93a
  00115:    	jne    0x3beaf
  0011b:    	sar    rdi,1
  0011e:    	cvtsi2sd xmm2,rdi
:00005 
:00007 %14 = dynvar(4, %2)
  00123:    	mov    rax,QWORD PTR [rbp-0x10]
  00127:    	mov    rax,QWORD PTR [rax]
  0012a:    	mov    rax,QWORD PTR [rax]
  0012d:    	mov    rax,QWORD PTR [rax]
  00130:    	mov    rax,QWORD PTR [rax-0x28]
  00134: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 %3 = %14.call to_f()                 [Integer]
  0013b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00142: 00 	test   rdi,0x1
  00149:    	je     0x3bebe
  0014f: 26 	cmp    DWORD PTR [rip+0xffffffffffffc7e4],0x26        # 0xffffc93a
  00156:    	jne    0x3bebe
  0015c:    	sar    rdi,1
  0015f:    	cvtsi2sd xmm3,rdi
:00009 
:00011 %14 = dynvar(2, %1)
  00164:    	mov    rax,QWORD PTR [rbp-0x10]
  00168:    	mov    rax,QWORD PTR [rax]
  0016b:    	mov    rax,QWORD PTR [rax-0x20]
  0016f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %4 = %14.call to_f()                 [Integer]
  00176: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0017d: 00 	test   rdi,0x1
  00184:    	je     0x3beda
  0018a: 26 	cmp    DWORD PTR [rip+0xffffffffffffc7a9],0x26        # 0xffffc93a
  00191:    	jne    0x3beda
  00197:    	sar    rdi,1
  0019a:    	cvtsi2sd xmm4,rdi
:00013 
:00015 %14 = dynvar(3, %1)
  0019f:    	mov    rax,QWORD PTR [rbp-0x10]
  001a3:    	mov    rax,QWORD PTR [rax]
  001a6:    	mov    rax,QWORD PTR [rax]
  001a9:    	mov    rax,QWORD PTR [rax-0x20]
  001ad: ff 	mov    QWORD PTR [rbp-0x98],rax
:00016 %5 = %14.call to_f()                 [Integer]
  001b4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001bb: 00 	test   rdi,0x1
  001c2:    	je     0x3bf03
  001c8: 26 	cmp    DWORD PTR [rip+0xffffffffffffc76b],0x26        # 0xffffc93a
  001cf:    	jne    0x3bf03
  001d5:    	sar    rdi,1
  001d8:    	cvtsi2sd xmm5,rdi
:00017 
:00019 %6 = %1.call to_f()                  [Integer]
  001dd:    	mov    rdi,QWORD PTR [rbp-0x30]
  001e1: 00 	test   rdi,0x1
  001e8:    	je     0x3bf39
  001ee: 26 	cmp    DWORD PTR [rip+0xffffffffffffc745],0x26        # 0xffffc93a
  001f5:    	jne    0x3bf39
  001fb:    	sar    rdi,1
  001fe:    	cvtsi2sd xmm6,rdi
:00020 
:00022 %14 = dynvar(1, %1)
  00203:    	mov    rax,QWORD PTR [rbp-0x10]
  00207:    	mov    rax,QWORD PTR [rax-0x20]
  0020b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00023 %7 = %14.call to_f()                 [Integer]
  00212: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00219: 00 	test   rdi,0x1
  00220:    	je     0x3bf7c
  00226: 26 	cmp    DWORD PTR [rip+0xffffffffffffc70d],0x26        # 0xffffc93a
  0022d:    	jne    0x3bf7c
  00233:    	sar    rdi,1
  00236:    	cvtsi2sd xmm7,rdi
:00024 
:00026 %14 = dynvar(4, %5)
  0023b:    	mov    rax,QWORD PTR [rbp-0x10]
  0023f:    	mov    rax,QWORD PTR [rax]
  00242:    	mov    rax,QWORD PTR [rax]
  00245:    	mov    rax,QWORD PTR [rax]
  00248:    	mov    rax,QWORD PTR [rax-0x40]
  0024c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00027 %14 = %6 / %14                       [Float][Float]
  00253: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0025a: 00 	test   rdi,0x1
  00261:    	jne    0x3bfcc
  00267: 00 	test   rdi,0x2
  0026e:    	je     0x2ab
  00274:    	xorps  xmm8,xmm8
  00278: 00 	movabs rax,0x8000000000000002
  00282:    	cmp    rdi,rax
  00285:    	je     0x2be
  0028b:    	mov    rax,rdi
  0028e:    	sar    rax,0x3f
  00292:    	add    rax,0x2
  00296:    	and    rdi,0xfffffffffffffffc
  0029a:    	or     rdi,rax
  0029d:    	rol    rdi,0x3d
  002a1:    	movq   xmm8,rdi
  002a6:    	jmp    0x2be
  002ab:    	call   0xffff9e95
  002b0:    	test   rax,rax
  002b3:    	je     0x3bfcc
  002b9:    	movq   xmm8,xmm0
  002be:    	movq   rax,xmm8
  002c3:    	test   rax,rax
  002c6:    	je     0xffff9e81
  002cc:    	movq   xmm0,xmm6
  002d0:    	divsd  xmm0,xmm8
  002d5:    	movq   xmm8,xmm0
:00028 %14 = %4 + %14                       [Float][Float]
  002da:    	addsd  xmm8,xmm4
:00029 %15 = literal[2.0]
  002df: 21 	movq   xmm9,QWORD PTR [rip+0x2189]        # 0x2471
  002e8: 00 	mov    rax,0x2
  002ef: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00030 %15 = %2 / %15                       [Float][Float]
  002f6:    	movq   rax,xmm9
  002fb:    	test   rax,rax
  002fe:    	je     0xffff9e81
  00304:    	movq   xmm0,xmm2
  00308:    	divsd  xmm0,xmm9
  0030d:    	movq   xmm9,xmm0
:00031 %14 = %14 - %15                      [Float][Float]
  00312:    	subsd  xmm8,xmm9
:00032 %15 = literal[2.0]
  00317: 21 	movq   xmm9,QWORD PTR [rip+0x2161]        # 0x2481
  00320: 00 	mov    rax,0x2
  00327: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00033 %15 = %2 / %15                       [Float][Float]
  0032e:    	movq   rax,xmm9
  00333:    	test   rax,rax
  00336:    	je     0xffff9e81
  0033c:    	movq   xmm0,xmm2
  00340:    	divsd  xmm0,xmm9
  00345:    	movq   xmm9,xmm0
:00034 %8 = %14 / %15                       [Float][Float]
  0034a:    	movq   xmm10,xmm8
  0034f:    	movq   rax,xmm9
  00354:    	test   rax,rax
  00357:    	je     0xffff9e81
  0035d:    	divsd  xmm10,xmm9
:00035 %14 = dynvar(4, %5)
  00362:    	mov    rax,QWORD PTR [rbp-0x10]
  00366:    	mov    rax,QWORD PTR [rax]
  00369:    	mov    rax,QWORD PTR [rax]
  0036c:    	mov    rax,QWORD PTR [rax]
  0036f:    	mov    rax,QWORD PTR [rax-0x40]
  00373: ff 	mov    QWORD PTR [rbp-0x98],rax
:00036 %14 = %7 / %14                       [Float][Float]
  0037a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00381: 00 	test   rdi,0x1
  00388:    	jne    0x3c029
  0038e: 00 	test   rdi,0x2
  00395:    	je     0x3d2
  0039b:    	xorps  xmm8,xmm8
  0039f: 00 	movabs rax,0x8000000000000002
  003a9:    	cmp    rdi,rax
  003ac:    	je     0x3e5
  003b2:    	mov    rax,rdi
  003b5:    	sar    rax,0x3f
  003b9:    	add    rax,0x2
  003bd:    	and    rdi,0xfffffffffffffffc
  003c1:    	or     rdi,rax
  003c4:    	rol    rdi,0x3d
  003c8:    	movq   xmm8,rdi
  003cd:    	jmp    0x3e5
  003d2:    	call   0xffff9e95
  003d7:    	test   rax,rax
  003da:    	je     0x3c029
  003e0:    	movq   xmm8,xmm0
  003e5:    	movq   rax,xmm8
  003ea:    	test   rax,rax
  003ed:    	je     0xffff9e81
  003f3:    	movq   xmm0,xmm7
  003f7:    	divsd  xmm0,xmm8
  003fc:    	movq   xmm8,xmm0
:00037 %14 = %5 + %14                       [Float][Float]
  00401:    	addsd  xmm8,xmm5
:00038 %15 = literal[2.0]
  00406: 20 	movq   xmm9,QWORD PTR [rip+0x2082]        # 0x2491
  0040f: 00 	mov    rax,0x2
  00416: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00039 %15 = %3 / %15                       [Float][Float]
  0041d:    	movq   rax,xmm9
  00422:    	test   rax,rax
  00425:    	je     0xffff9e81
  0042b:    	movq   xmm0,xmm3
  0042f:    	divsd  xmm0,xmm9
  00434:    	movq   xmm9,xmm0
:00040 %14 = %14 - %15                      [Float][Float]
  00439:    	subsd  xmm8,xmm9
:00041 %14 = neg %14                        [Float]
  0043e: 00 	xorps  xmm8,XMMWORD PTR [rip+0x205b]        # 0x24a1
:00042 %15 = literal[2.0]
  00446: 20 	movq   xmm9,QWORD PTR [rip+0x2062]        # 0x24b1
  0044f: 00 	mov    rax,0x2
  00456: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00043 %15 = %3 / %15                       [Float][Float]
  0045d:    	movq   rax,xmm9
  00462:    	test   rax,rax
  00465:    	je     0xffff9e81
  0046b:    	movq   xmm0,xmm3
  0046f:    	divsd  xmm0,xmm9
  00474:    	movq   xmm9,xmm0
:00044 %9 = %14 / %15                       [Float][Float]
  00479:    	movq   xmm11,xmm8
  0047e:    	movq   rax,xmm9
  00483:    	test   rax,rax
  00486:    	je     0xffff9e81
  0048c:    	divsd  xmm11,xmm9
:00045 %15 = const[Vec]                     [Vec]
  00491: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc4a9]        # 0xffffc941
  00498: 00 	cmp    rax,QWORD PTR [rip+0x2032]        # 0x24d1
  0049f:    	jne    0x3c0a5
  004a5: 00 	mov    rax,QWORD PTR [rip+0x2015]        # 0x24c1
  004ac: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00046 %16 = %8
:00047 %17 = %9
:00048 %18 = literal[-1.0]
  004b3: 20 	movq   xmm9,QWORD PTR [rip+0x2025]        # 0x24e1
  004bc: 00 	movabs rax,0xff80000000000006
  004c6: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00049 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
  004cd:    	movq   xmm0,xmm10
  004d2:    	call   0xffff9f88
  004d7: ff 	mov    QWORD PTR [rbp-0xa8],rax
  004de:    	movq   xmm0,xmm11
  004e3:    	call   0xffff9f88
  004e8: ff 	mov    QWORD PTR [rbp-0xb0],rax
  004ef: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  004f6: 00 	test   rdi,0x7
  004fd:    	jne    0x3c163
  00503:    	cmp    DWORD PTR [rdi+0x4],0x29
  00507:    	jne    0x3c163
  0050d: 26 	cmp    DWORD PTR [rip+0xffffffffffffc426],0x26        # 0xffffc93a
  00514:    	jne    0x3c163
  0051a: 00 	mov    r9,0x0
  00521:    	sub    rsp,0x50
  00525:    	movq   QWORD PTR [rsp],xmm2
  0052a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00530:    	movq   QWORD PTR [rsp+0x10],xmm4
  00536:    	movq   QWORD PTR [rsp+0x18],xmm5
  0053c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00542:    	movq   QWORD PTR [rsp+0x28],xmm7
  00548: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0054f: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00556: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0055d:    	mov    rdx,rdi
  00560:    	mov    rax,QWORD PTR [rbx]
  00563:    	lea    rdi,[rsp-0x18]
  00568:    	mov    QWORD PTR [rdi],rax
  0056b:    	mov    QWORD PTR [rbx],rdi
  0056e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00577:    	mov    QWORD PTR [rsp-0x38],rcx
  0057c: ff 	lea    rcx,[rbp-0xa8]
  00583: 00 	mov    r8,0x3
  0058a:    	call   0x3c1dc
  0058f:    	lea    rdi,[rbp-0x8]
  00593:    	mov    QWORD PTR [rbx],rdi
  00596:    	movq   xmm2,QWORD PTR [rsp]
  0059b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005a1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005a7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005ad:    	movq   xmm6,QWORD PTR [rsp+0x20]
  005b3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  005b9: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  005c0: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  005c7: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  005ce:    	add    rsp,0x50
  005d2: 31 	movabs r13,0x563184ccbca0
  005dc:    	test   rax,rax
  005df:    	je     0xffff9e5c
  005e5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00050 
:00052 %10 = %14.call vnormalize()          [Vec]
  005ec: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  005f3: 00 	test   rdi,0x7
  005fa:    	jne    0x3c20e
  00600:    	cmp    DWORD PTR [rdi+0x4],0x28
  00604:    	jne    0x3c20e
  0060a: 26 	cmp    DWORD PTR [rip+0xffffffffffffc329],0x26        # 0xffffc93a
  00611:    	jne    0x3c20e
  00617:    	sub    rsp,0x50
  0061b:    	movq   QWORD PTR [rsp],xmm2
  00620:    	movq   QWORD PTR [rsp+0x8],xmm3
  00626:    	movq   QWORD PTR [rsp+0x10],xmm4
  0062c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00632:    	movq   QWORD PTR [rsp+0x20],xmm6
  00638:    	movq   QWORD PTR [rsp+0x28],xmm7
  0063e: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00645: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0064c: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00653:    	mov    rax,QWORD PTR [rbx]
  00656:    	lea    rdi,[rsp-0x18]
  0065b:    	mov    QWORD PTR [rdi],rax
  0065e:    	mov    QWORD PTR [rbx],rdi
  00661: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0066a:    	mov    QWORD PTR [rsp-0x38],rcx
  0066f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00676:    	mov    QWORD PTR [rsp-0x38],rax
  0067b: 00 	mov    rdi,0x0
  00682: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0068b: 07 	movabs rax,0x700000043
  00695:    	mov    QWORD PTR [rsp-0x28],rax
  0069a: 31 	movabs r13,0x563184c828e0
  006a4:    	call   0xffffd231
  006a9:    	lea    rdi,[rbp-0x8]
  006ad:    	mov    QWORD PTR [rbx],rdi
  006b0:    	movq   xmm2,QWORD PTR [rsp]
  006b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  006c7:    	movq   xmm6,QWORD PTR [rsp+0x20]
  006cd:    	movq   xmm7,QWORD PTR [rsp+0x28]
  006d3: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  006da: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  006e1: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  006e8:    	add    rsp,0x50
  006ec: 31 	movabs r13,0x563184ccbcd0
  006f6:    	test   rax,rax
  006f9:    	je     0xffff9e5c
  006ff:    	mov    QWORD PTR [rbp-0x78],rax
:00053 
:00055 %14 = const[Ray]                     [Ray]
  00703: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc237]        # 0xffffc941
  0070a: 00 	cmp    rax,QWORD PTR [rip+0x1df0]        # 0x2501
  00711:    	jne    0x3c287
  00717: 00 	mov    rax,QWORD PTR [rip+0x1dd3]        # 0x24f1
  0071e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00056 %16 = const[Vec]                     [Vec]
  00725: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc215]        # 0xffffc941
  0072c: 00 	cmp    rax,QWORD PTR [rip+0x1dee]        # 0x2521
  00733:    	jne    0x3c345
  00739: 00 	mov    rax,QWORD PTR [rip+0x1dd1]        # 0x2511
  00740: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00057 %17 = literal[0.0]
  00747: 1d 	movq   xmm8,QWORD PTR [rip+0x1de1]        # 0x2531
  00750: 00 	movabs rax,0x8000000000000002
  0075a: ff 	mov    QWORD PTR [rbp-0xb0],rax
:00058 %18 = literal[0.0]
  00761: 1d 	movq   xmm9,QWORD PTR [rip+0x1dd7]        # 0x2541
  0076a: 00 	movabs rax,0x8000000000000002
  00774: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00059 %19 = literal[0.0]
  0077b: 1d 	movq   xmm12,QWORD PTR [rip+0x1dcd]        # 0x2551
  00784: 00 	movabs rax,0x8000000000000002
  0078e: ff 	mov    QWORD PTR [rbp-0xc0],rax
:00060 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
  00795: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0079c: 00 	test   rdi,0x7
  007a3:    	jne    0x3c403
  007a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  007ad:    	jne    0x3c403
  007b3: 26 	cmp    DWORD PTR [rip+0xffffffffffffc180],0x26        # 0xffffc93a
  007ba:    	jne    0x3c403
  007c0: 00 	mov    r9,0x0
  007c7:    	sub    rsp,0x60
  007cb:    	movq   QWORD PTR [rsp],xmm2
  007d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  007d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  007dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  007e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  007e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  007ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  007f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  007fc: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00803: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0080a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00811:    	mov    rdx,rdi
  00814:    	mov    rax,QWORD PTR [rbx]
  00817:    	lea    rdi,[rsp-0x18]
  0081c:    	mov    QWORD PTR [rdi],rax
  0081f:    	mov    QWORD PTR [rbx],rdi
  00822: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0082b:    	mov    QWORD PTR [rsp-0x38],rcx
  00830: ff 	lea    rcx,[rbp-0xb0]
  00837: 00 	mov    r8,0x3
  0083e:    	call   0x3c47c
  00843:    	lea    rdi,[rbp-0x8]
  00847:    	mov    QWORD PTR [rbx],rdi
  0084a:    	movq   xmm2,QWORD PTR [rsp]
  0084f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00855:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0085b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00861:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00867:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0086d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00874: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0087b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00882: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00889: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00890:    	add    rsp,0x60
  00894: 31 	movabs r13,0x563184ccbd50
  0089e:    	test   rax,rax
  008a1:    	je     0xffff9e5c
  008a7: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00061 
:00063 %16 = %10
  008ae:    	mov    rax,QWORD PTR [rbp-0x78]
  008b2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00064 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  008b9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  008c0: 00 	test   rdi,0x7
  008c7:    	jne    0x3c4ae
  008cd:    	cmp    DWORD PTR [rdi+0x4],0x2f
  008d1:    	jne    0x3c4ae
  008d7: 26 	cmp    DWORD PTR [rip+0xffffffffffffc05c],0x26        # 0xffffc93a
  008de:    	jne    0x3c4ae
  008e4: 00 	mov    r9,0x0
  008eb:    	sub    rsp,0x60
  008ef:    	movq   QWORD PTR [rsp],xmm2
  008f4:    	movq   QWORD PTR [rsp+0x8],xmm3
  008fa:    	movq   QWORD PTR [rsp+0x10],xmm4
  00900:    	movq   QWORD PTR [rsp+0x18],xmm5
  00906:    	movq   QWORD PTR [rsp+0x20],xmm6
  0090c:    	movq   QWORD PTR [rsp+0x28],xmm7
  00912: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00919: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00920: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00927: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0092e: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00935:    	mov    rdx,rdi
  00938:    	mov    rax,QWORD PTR [rbx]
  0093b:    	lea    rdi,[rsp-0x18]
  00940:    	mov    QWORD PTR [rdi],rax
  00943:    	mov    QWORD PTR [rbx],rdi
  00946: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0094f:    	mov    QWORD PTR [rsp-0x38],rcx
  00954: ff 	lea    rcx,[rbp-0xa0]
  0095b: 00 	mov    r8,0x2
  00962:    	call   0x3c527
  00967:    	lea    rdi,[rbp-0x8]
  0096b:    	mov    QWORD PTR [rbx],rdi
  0096e:    	movq   xmm2,QWORD PTR [rsp]
  00973:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00979:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0097f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00985:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0098b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00991: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00998: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0099f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  009a6: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  009ad: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  009b4:    	add    rsp,0x60
  009b8: 31 	movabs r13,0x563184ccbd90
  009c2:    	test   rax,rax
  009c5:    	je     0xffff9e5c
  009cb:    	mov    QWORD PTR [rbp-0x80],rax
:00065 
:00067 %14 = const[Isect]                   [Isect]
  009cf: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffbf6b]        # 0xffffc941
  009d6: 00 	cmp    rax,QWORD PTR [rip+0x1b94]        # 0x2571
  009dd:    	jne    0x3c559
  009e3: 00 	mov    rax,QWORD PTR [rip+0x1b77]        # 0x2561
  009ea: ff 	mov    QWORD PTR [rbp-0x98],rax
:00068 %12 = %14.call new()                 [#<Class:Isect>]
  009f1: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  009f8: 00 	test   rdi,0x7
  009ff:    	jne    0x3c633
  00a05:    	cmp    DWORD PTR [rdi+0x4],0x31
  00a09:    	jne    0x3c633
  00a0f: 26 	cmp    DWORD PTR [rip+0xffffffffffffbf24],0x26        # 0xffffc93a
  00a16:    	jne    0x3c633
  00a1c: 00 	mov    r9,0x0
  00a23:    	sub    rsp,0x60
  00a27:    	movq   QWORD PTR [rsp],xmm2
  00a2c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a32:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a38:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a3e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a44:    	movq   QWORD PTR [rsp+0x28],xmm7
  00a4a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00a51: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00a58: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00a5f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00a66: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00a6d:    	mov    rdx,rdi
  00a70:    	mov    rax,QWORD PTR [rbx]
  00a73:    	lea    rdi,[rsp-0x18]
  00a78:    	mov    QWORD PTR [rdi],rax
  00a7b:    	mov    QWORD PTR [rbx],rdi
  00a7e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a87:    	mov    QWORD PTR [rsp-0x38],rcx
  00a8c: ff 	lea    rcx,[rbp-0xa0]
  00a93: 00 	mov    r8,0x0
  00a9a:    	call   0x3c6ac
  00a9f:    	lea    rdi,[rbp-0x8]
  00aa3:    	mov    QWORD PTR [rbx],rdi
  00aa6:    	movq   xmm2,QWORD PTR [rsp]
  00aab:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ab1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ab7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00abd:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ac3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00ac9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00ad0: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00ad7: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00ade: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00ae5: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00aec:    	add    rsp,0x60
  00af0: 31 	movabs r13,0x563184ccbdd0
  00afa:    	test   rax,rax
  00afd:    	je     0xffff9e5c
  00b03: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = @spheres: Scene[IvarId(0)]
  00b0a:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b0e:    	mov    rax,QWORD PTR [rdi+0x10]
  00b12: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 %15 = 0: i32
  00b19: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00073 %14 = %14.[%15]                      [Array][Integer]
  00b24:    	sub    rsp,0x60
  00b28:    	movq   QWORD PTR [rsp],xmm2
  00b2d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b33:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b39:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b3f:    	movq   QWORD PTR [rsp+0x20],xmm6
  00b45:    	movq   QWORD PTR [rsp+0x28],xmm7
  00b4b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00b52: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00b59: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00b60: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00b67: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00b6e: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00b75: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00b7c:    	mov    rdi,rbx
  00b7f:    	mov    rsi,r12
  00b82: 31 	movabs r8,0x563184ccbe08
  00b8c: 31 	movabs rax,0x5631840b8230
  00b96:    	call   rax
  00b98:    	movq   xmm2,QWORD PTR [rsp]
  00b9d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ba3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ba9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00baf:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00bb5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00bbb: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00bc2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00bc9: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00bd0: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00bd7: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00bde:    	add    rsp,0x60
  00be2: 31 	movabs r13,0x563184ccbe10
  00bec:    	test   rax,rax
  00bef:    	je     0xffff9e5c
  00bf5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 %15 = %11
  00bfc:    	mov    rax,QWORD PTR [rbp-0x80]
  00c00: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00075 %16 = %12
  00c07: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c0e: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00076 _ = %14.call intersect(%15; 2)       [Sphere]
  00c15: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c1c: 00 	test   rdi,0x7
  00c23:    	jne    0x3c6de
  00c29:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00c2d:    	jne    0x3c6de
  00c33: 26 	cmp    DWORD PTR [rip+0xffffffffffffbd00],0x26        # 0xffffc93a
  00c3a:    	jne    0x3c6de
  00c40:    	sub    rsp,0x60
  00c44:    	movq   QWORD PTR [rsp],xmm2
  00c49:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c4f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c55:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c5b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c61:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c67: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00c6e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00c75: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00c7c: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00c83: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00c8a:    	mov    rax,QWORD PTR [rbx]
  00c8d:    	lea    rdi,[rsp-0x18]
  00c92:    	mov    QWORD PTR [rdi],rax
  00c95:    	mov    QWORD PTR [rbx],rdi
  00c98: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ca1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ca6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00cad:    	mov    QWORD PTR [rsp-0x38],rax
  00cb2: 00 	mov    rdi,0x2
  00cb9: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00cc0:    	mov    QWORD PTR [rsp-0x40],rax
  00cc5: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00ccc:    	mov    QWORD PTR [rsp-0x48],rax
  00cd1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cda: 10 	movabs rax,0x1000000045
  00ce4:    	mov    QWORD PTR [rsp-0x28],rax
  00ce9: 31 	movabs r13,0x563184c85400
  00cf3:    	call   0xffffd539
  00cf8:    	lea    rdi,[rbp-0x8]
  00cfc:    	mov    QWORD PTR [rbx],rdi
  00cff:    	movq   xmm2,QWORD PTR [rsp]
  00d04:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d0a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d10:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d16:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d1c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d22: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d29: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d30: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d37: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00d3e: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00d45:    	add    rsp,0x60
  00d49: 31 	movabs r13,0x563184ccbe50
  00d53:    	test   rax,rax
  00d56:    	je     0xffff9e5c
:00077 
:00079 %14 = @spheres: Scene[IvarId(0)]
  00d5c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00d60:    	mov    rax,QWORD PTR [rdi+0x10]
  00d64: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 %15 = 1: i32
  00d6b: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00081 %14 = %14.[%15]                      [Array][Integer]
  00d76:    	sub    rsp,0x60
  00d7a:    	movq   QWORD PTR [rsp],xmm2
  00d7f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d85:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d8b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d91:    	movq   QWORD PTR [rsp+0x20],xmm6
  00d97:    	movq   QWORD PTR [rsp+0x28],xmm7
  00d9d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00da4: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00dab: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00db2: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00db9: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00dc0: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00dc7: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00dce:    	mov    rdi,rbx
  00dd1:    	mov    rsi,r12
  00dd4: 31 	movabs r8,0x563184ccbe88
  00dde: 31 	movabs rax,0x5631840b8230
  00de8:    	call   rax
  00dea:    	movq   xmm2,QWORD PTR [rsp]
  00def:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00df5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dfb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e01:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e07:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e0d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e14: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e1b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e22: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e29: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e30:    	add    rsp,0x60
  00e34: 31 	movabs r13,0x563184ccbe90
  00e3e:    	test   rax,rax
  00e41:    	je     0xffff9e5c
  00e47: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 %15 = %11
  00e4e:    	mov    rax,QWORD PTR [rbp-0x80]
  00e52: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00083 %16 = %12
  00e59: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00e60: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00084 _ = %14.call intersect(%15; 2)       [Sphere]
  00e67: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e6e: 00 	test   rdi,0x7
  00e75:    	jne    0x3c757
  00e7b:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00e7f:    	jne    0x3c757
  00e85: 26 	cmp    DWORD PTR [rip+0xffffffffffffbaae],0x26        # 0xffffc93a
  00e8c:    	jne    0x3c757
  00e92:    	sub    rsp,0x60
  00e96:    	movq   QWORD PTR [rsp],xmm2
  00e9b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ea1:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ea7:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ead:    	movq   QWORD PTR [rsp+0x20],xmm6
  00eb3:    	movq   QWORD PTR [rsp+0x28],xmm7
  00eb9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ec0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ec7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ece: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ed5: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00edc:    	mov    rax,QWORD PTR [rbx]
  00edf:    	lea    rdi,[rsp-0x18]
  00ee4:    	mov    QWORD PTR [rdi],rax
  00ee7:    	mov    QWORD PTR [rbx],rdi
  00eea: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ef3:    	mov    QWORD PTR [rsp-0x38],rcx
  00ef8: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00eff:    	mov    QWORD PTR [rsp-0x38],rax
  00f04: 00 	mov    rdi,0x2
  00f0b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f12:    	mov    QWORD PTR [rsp-0x40],rax
  00f17: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f1e:    	mov    QWORD PTR [rsp-0x48],rax
  00f23: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f2c: 10 	movabs rax,0x1000000045
  00f36:    	mov    QWORD PTR [rsp-0x28],rax
  00f3b: 31 	movabs r13,0x563184c85400
  00f45:    	call   0xffffd539
  00f4a:    	lea    rdi,[rbp-0x8]
  00f4e:    	mov    QWORD PTR [rbx],rdi
  00f51:    	movq   xmm2,QWORD PTR [rsp]
  00f56:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f5c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f62:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f68:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f6e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f74: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f7b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f82: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00f89: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00f90: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00f97:    	add    rsp,0x60
  00f9b: 31 	movabs r13,0x563184ccbed0
  00fa5:    	test   rax,rax
  00fa8:    	je     0xffff9e5c
:00085 
:00087 %14 = @spheres: Scene[IvarId(0)]
  00fae:    	mov    rdi,QWORD PTR [rbp-0x28]
  00fb2:    	mov    rax,QWORD PTR [rdi+0x10]
  00fb6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 2: i32
  00fbd: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00089 %14 = %14.[%15]                      [Array][Integer]
  00fc8:    	sub    rsp,0x60
  00fcc:    	movq   QWORD PTR [rsp],xmm2
  00fd1:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fd7:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fdd:    	movq   QWORD PTR [rsp+0x18],xmm5
  00fe3:    	movq   QWORD PTR [rsp+0x20],xmm6
  00fe9:    	movq   QWORD PTR [rsp+0x28],xmm7
  00fef: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ff6: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ffd: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01004: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0100b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01012: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01019: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01020:    	mov    rdi,rbx
  01023:    	mov    rsi,r12
  01026: 31 	movabs r8,0x563184ccbf08
  01030: 31 	movabs rax,0x5631840b8230
  0103a:    	call   rax
  0103c:    	movq   xmm2,QWORD PTR [rsp]
  01041:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01047:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0104d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01053:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01059:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0105f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01066: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0106d: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01074: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0107b: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01082:    	add    rsp,0x60
  01086: 31 	movabs r13,0x563184ccbf10
  01090:    	test   rax,rax
  01093:    	je     0xffff9e5c
  01099: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %15 = %11
  010a0:    	mov    rax,QWORD PTR [rbp-0x80]
  010a4: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00091 %16 = %12
  010ab: ff 	mov    rax,QWORD PTR [rbp-0x88]
  010b2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00092 _ = %14.call intersect(%15; 2)       [Sphere]
  010b9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  010c0: 00 	test   rdi,0x7
  010c7:    	jne    0x3c7d0
  010cd:    	cmp    DWORD PTR [rdi+0x4],0x2a
  010d1:    	jne    0x3c7d0
  010d7: 26 	cmp    DWORD PTR [rip+0xffffffffffffb85c],0x26        # 0xffffc93a
  010de:    	jne    0x3c7d0
  010e4:    	sub    rsp,0x60
  010e8:    	movq   QWORD PTR [rsp],xmm2
  010ed:    	movq   QWORD PTR [rsp+0x8],xmm3
  010f3:    	movq   QWORD PTR [rsp+0x10],xmm4
  010f9:    	movq   QWORD PTR [rsp+0x18],xmm5
  010ff:    	movq   QWORD PTR [rsp+0x20],xmm6
  01105:    	movq   QWORD PTR [rsp+0x28],xmm7
  0110b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01112: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01119: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01120: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01127: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0112e:    	mov    rax,QWORD PTR [rbx]
  01131:    	lea    rdi,[rsp-0x18]
  01136:    	mov    QWORD PTR [rdi],rax
  01139:    	mov    QWORD PTR [rbx],rdi
  0113c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01145:    	mov    QWORD PTR [rsp-0x38],rcx
  0114a: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01151:    	mov    QWORD PTR [rsp-0x38],rax
  01156: 00 	mov    rdi,0x2
  0115d: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01164:    	mov    QWORD PTR [rsp-0x40],rax
  01169: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01170:    	mov    QWORD PTR [rsp-0x48],rax
  01175: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0117e: 10 	movabs rax,0x1000000045
  01188:    	mov    QWORD PTR [rsp-0x28],rax
  0118d: 31 	movabs r13,0x563184c85400
  01197:    	call   0xffffd539
  0119c:    	lea    rdi,[rbp-0x8]
  011a0:    	mov    QWORD PTR [rbx],rdi
  011a3:    	movq   xmm2,QWORD PTR [rsp]
  011a8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  011ae:    	movq   xmm4,QWORD PTR [rsp+0x10]
  011b4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  011ba:    	movq   xmm6,QWORD PTR [rsp+0x20]
  011c0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  011c6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  011cd: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  011d4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  011db: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  011e2: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  011e9:    	add    rsp,0x60
  011ed: 31 	movabs r13,0x563184ccbf50
  011f7:    	test   rax,rax
  011fa:    	je     0xffff9e5c
:00093 
:00095 %14 = @plane: Scene[IvarId(1)]
  01200:    	mov    rdi,QWORD PTR [rbp-0x28]
  01204:    	mov    rax,QWORD PTR [rdi+0x18]
  01208: ff 	mov    QWORD PTR [rbp-0x98],rax
:00096 %15 = %11
  0120f:    	mov    rax,QWORD PTR [rbp-0x80]
  01213: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %16 = %12
  0121a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01221: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00098 _ = %14.call intersect(%15; 2)       [Plane]
  01228: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0122f: 00 	test   rdi,0x7
  01236:    	jne    0x3c849
  0123c:    	cmp    DWORD PTR [rdi+0x4],0x2c
  01240:    	jne    0x3c849
  01246: 26 	cmp    DWORD PTR [rip+0xffffffffffffb6ed],0x26        # 0xffffc93a
  0124d:    	jne    0x3c849
  01253:    	sub    rsp,0x60
  01257:    	movq   QWORD PTR [rsp],xmm2
  0125c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01262:    	movq   QWORD PTR [rsp+0x10],xmm4
  01268:    	movq   QWORD PTR [rsp+0x18],xmm5
  0126e:    	movq   QWORD PTR [rsp+0x20],xmm6
  01274:    	movq   QWORD PTR [rsp+0x28],xmm7
  0127a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01281: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01288: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0128f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01296: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0129d:    	mov    rax,QWORD PTR [rbx]
  012a0:    	lea    rdi,[rsp-0x18]
  012a5:    	mov    QWORD PTR [rdi],rax
  012a8:    	mov    QWORD PTR [rbx],rdi
  012ab: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012b4:    	mov    QWORD PTR [rsp-0x38],rcx
  012b9: ff 	mov    rax,QWORD PTR [rbp-0x98]
  012c0:    	mov    QWORD PTR [rsp-0x38],rax
  012c5: 00 	mov    rdi,0x2
  012cc: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  012d3:    	mov    QWORD PTR [rsp-0x40],rax
  012d8: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  012df:    	mov    QWORD PTR [rsp-0x48],rax
  012e4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012ed: 0e 	movabs rax,0xe00000047
  012f7:    	mov    QWORD PTR [rsp-0x28],rax
  012fc: 31 	movabs r13,0x563184c872a0
  01306:    	call   0xffffdb05
  0130b:    	lea    rdi,[rbp-0x8]
  0130f:    	mov    QWORD PTR [rbx],rdi
  01312:    	movq   xmm2,QWORD PTR [rsp]
  01317:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0131d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01323:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01329:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0132f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01335: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0133c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01343: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0134a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01351: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01358:    	add    rsp,0x60
  0135c: 31 	movabs r13,0x563184ccbfb0
  01366:    	test   rax,rax
  01369:    	je     0xffff9e5c
:00099 
:00101 %14 = %12.call hit()                 [Isect]
  0136f: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01376: 00 	test   rdi,0x7
  0137d:    	jne    0x3c8c2
  01383:    	cmp    DWORD PTR [rdi+0x4],0x30
  01387:    	jne    0x3c8c2
  0138d: 26 	cmp    DWORD PTR [rip+0xffffffffffffb5a6],0x26        # 0xffffc93a
  01394:    	jne    0x3c8c2
  0139a:    	mov    esi,DWORD PTR [rip+0x11dd]        # 0x257d
  013a0:    	cmp    esi,0xffffffff
  013a3:    	je     0x3c93b
  013a9:    	cmp    WORD PTR [rdi+0x2],0x3
  013ae:    	jne    0x13c7
  013b4:    	cmp    esi,0x6
  013b7:    	jge    0x13c7
  013bd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  013c2:    	jmp    0x1467
  013c7:    	sub    rsp,0x60
  013cb:    	movq   QWORD PTR [rsp],xmm2
  013d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  013d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  013dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  013e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  013e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  013ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  013f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  013fc: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01403: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0140a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01411: 31 	movabs rax,0x563184053740
  0141b:    	call   rax
  0141d:    	movq   xmm2,QWORD PTR [rsp]
  01422:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01428:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0142e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01434:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0143a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01440: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01447: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0144e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01455: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0145c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01463:    	add    rsp,0x60
  01467: ff 	mov    QWORD PTR [rbp-0x98],rax
:00102 
:00104 condnotbr %14 =>:00147
  0146e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01475:    	or     rax,0x10
  01479:    	cmp    rax,0x14
  0147d:    	je     0x245d
:00105 %14 = %12
  01483: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0148a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 %13 = %0.call ambient_occlusion(%14; 1) [<INVALID>]
  01491: 01 	sub    DWORD PTR [rip+0x10e9],0x1        # 0x2581
  01498:    	je     0x3ca71
  0149e:    	sub    rsp,0x60
  014a2:    	movq   QWORD PTR [rsp],xmm2
  014a7:    	movq   QWORD PTR [rsp+0x8],xmm3
  014ad:    	movq   QWORD PTR [rsp+0x10],xmm4
  014b3:    	movq   QWORD PTR [rsp+0x18],xmm5
  014b9:    	movq   QWORD PTR [rsp+0x20],xmm6
  014bf:    	movq   QWORD PTR [rsp+0x28],xmm7
  014c5: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014cc: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014d3: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  014da: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  014e1: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  014e8:    	mov    r15d,0x32
  014ee: 00 	cmp    r15d,DWORD PTR [rip+0x1094]        # 0x2589
  014f5:    	jne    0x3ca93
  014fb:    	mov    eax,DWORD PTR [rip+0xffffffffffffb439]        # 0xffffc93a
  01501:    	cmp    DWORD PTR [rip+0x107e],eax        # 0x2585
  01507:    	jne    0x3ca93
  0150d:    	mov    rax,QWORD PTR [rbx]
  01510:    	lea    rdi,[rsp-0x18]
  01515:    	mov    QWORD PTR [rdi],rax
  01518:    	mov    QWORD PTR [rbx],rdi
  0151b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01524:    	mov    QWORD PTR [rsp-0x38],rcx
  01529:    	mov    rax,QWORD PTR [rbp-0x28]
  0152d:    	mov    QWORD PTR [rsp-0x38],rax
  01532: 00 	mov    rdi,0x1
  01539: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01540:    	mov    QWORD PTR [rsp-0x40],rax
  01545: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0154e: 00 	movabs rax,0x0
  01558:    	mov    QWORD PTR [rsp-0x28],rax
  0155d: 00 	movabs r13,0x0
  01567:    	call   0xffff9e21
  0156c:    	lea    rdi,[rbp-0x8]
  01570:    	mov    QWORD PTR [rbx],rdi
  01573:    	movq   xmm2,QWORD PTR [rsp]
  01578:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0157e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01584:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0158a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01590:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01596: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0159d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015a4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015ab: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  015b2: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  015b9:    	add    rsp,0x60
  015bd:    	test   rax,rax
  015c0:    	je     0x3caff
  015c6: ff 	mov    QWORD PTR [rbp-0x90],rax
:00107 
:00109 %14 = dynvar(2, %2)
  015cd:    	mov    rax,QWORD PTR [rbp-0x10]
  015d1:    	mov    rax,QWORD PTR [rax]
  015d4:    	mov    rax,QWORD PTR [rax-0x28]
  015d8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00110 %16 = dynvar(2, %2)
  015df:    	mov    rax,QWORD PTR [rbp-0x10]
  015e3:    	mov    rax,QWORD PTR [rax]
  015e6:    	mov    rax,QWORD PTR [rax-0x28]
  015ea: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00111 %15 = %16.call x()                   [<INVALID>]
  015f1: 01 	sub    DWORD PTR [rip+0xf95],0x1        # 0x258d
  015f8:    	je     0x3cb87
  015fe:    	sub    rsp,0x60
  01602:    	movq   QWORD PTR [rsp],xmm2
  01607:    	movq   QWORD PTR [rsp+0x8],xmm3
  0160d:    	movq   QWORD PTR [rsp+0x10],xmm4
  01613:    	movq   QWORD PTR [rsp+0x18],xmm5
  01619:    	movq   QWORD PTR [rsp+0x20],xmm6
  0161f:    	movq   QWORD PTR [rsp+0x28],xmm7
  01625: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0162c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01633: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0163a: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01641: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01648: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0164f: 31 	movabs rax,0x5631840958d0
  01659:    	call   rax
  0165b:    	mov    r15d,eax
  0165e: 00 	cmp    r15d,DWORD PTR [rip+0xf30]        # 0x2595
  01665:    	jne    0x3cba9
  0166b:    	mov    eax,DWORD PTR [rip+0xffffffffffffb2c9]        # 0xffffc93a
  01671:    	cmp    DWORD PTR [rip+0xf1a],eax        # 0x2591
  01677:    	jne    0x3cba9
  0167d:    	mov    rax,QWORD PTR [rbx]
  01680:    	lea    rdi,[rsp-0x18]
  01685:    	mov    QWORD PTR [rdi],rax
  01688:    	mov    QWORD PTR [rbx],rdi
  0168b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01694:    	mov    QWORD PTR [rsp-0x38],rcx
  01699: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  016a0:    	mov    QWORD PTR [rsp-0x38],rax
  016a5: 00 	mov    rdi,0x0
  016ac: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016b5: 00 	movabs rax,0x0
  016bf:    	mov    QWORD PTR [rsp-0x28],rax
  016c4: 00 	movabs r13,0x0
  016ce:    	call   0xffff9e21
  016d3:    	lea    rdi,[rbp-0x8]
  016d7:    	mov    QWORD PTR [rbx],rdi
  016da:    	movq   xmm2,QWORD PTR [rsp]
  016df:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016e5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016eb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016f1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  016f7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  016fd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01704: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0170b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01712: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01719: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01720:    	add    rsp,0x60
  01724:    	test   rax,rax
  01727:    	je     0x3cc18
  0172d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00112 
:00114 %16 = %13.call x()                   [<INVALID>]
  01734: 01 	sub    DWORD PTR [rip+0xe5e],0x1        # 0x2599
  0173b:    	je     0x3cca0
  01741:    	sub    rsp,0x60
  01745:    	movq   QWORD PTR [rsp],xmm2
  0174a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01750:    	movq   QWORD PTR [rsp+0x10],xmm4
  01756:    	movq   QWORD PTR [rsp+0x18],xmm5
  0175c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01762:    	movq   QWORD PTR [rsp+0x28],xmm7
  01768: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0176f: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01776: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0177d: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01784: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0178b: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01792: 31 	movabs rax,0x5631840958d0
  0179c:    	call   rax
  0179e:    	mov    r15d,eax
  017a1: 00 	cmp    r15d,DWORD PTR [rip+0xdf9]        # 0x25a1
  017a8:    	jne    0x3ccc2
  017ae:    	mov    eax,DWORD PTR [rip+0xffffffffffffb186]        # 0xffffc93a
  017b4:    	cmp    DWORD PTR [rip+0xde3],eax        # 0x259d
  017ba:    	jne    0x3ccc2
  017c0:    	mov    rax,QWORD PTR [rbx]
  017c3:    	lea    rdi,[rsp-0x18]
  017c8:    	mov    QWORD PTR [rdi],rax
  017cb:    	mov    QWORD PTR [rbx],rdi
  017ce: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017d7:    	mov    QWORD PTR [rsp-0x38],rcx
  017dc: ff 	mov    rax,QWORD PTR [rbp-0x90]
  017e3:    	mov    QWORD PTR [rsp-0x38],rax
  017e8: 00 	mov    rdi,0x0
  017ef: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017f8: 00 	movabs rax,0x0
  01802:    	mov    QWORD PTR [rsp-0x28],rax
  01807: 00 	movabs r13,0x0
  01811:    	call   0xffff9e21
  01816:    	lea    rdi,[rbp-0x8]
  0181a:    	mov    QWORD PTR [rbx],rdi
  0181d:    	movq   xmm2,QWORD PTR [rsp]
  01822:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01828:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0182e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01834:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0183a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01840: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01847: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0184e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01855: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0185c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01863:    	add    rsp,0x60
  01867:    	test   rax,rax
  0186a:    	je     0x3cd31
  01870: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00115 
:00117 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01877: 01 	sub    DWORD PTR [rip+0xd27],0x1        # 0x25a5
  0187e:    	je     0x3cdb9
  01884: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0188b: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  01892:    	sub    rsp,0x60
  01896:    	movq   QWORD PTR [rsp],xmm2
  0189b:    	movq   QWORD PTR [rsp+0x8],xmm3
  018a1:    	movq   QWORD PTR [rsp+0x10],xmm4
  018a7:    	movq   QWORD PTR [rsp+0x18],xmm5
  018ad:    	movq   QWORD PTR [rsp+0x20],xmm6
  018b3:    	movq   QWORD PTR [rsp+0x28],xmm7
  018b9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  018c0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  018c7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  018ce: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  018d5: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  018dc:    	mov    rdx,rdi
  018df:    	mov    rcx,rsi
  018e2:    	mov    rdi,rbx
  018e5:    	mov    rsi,r12
  018e8: 31 	movabs rax,0x563184087f80
  018f2:    	call   rax
  018f4:    	movq   xmm2,QWORD PTR [rsp]
  018f9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  018ff:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01905:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0190b:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01911:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01917: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0191e: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01925: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0192c: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01933: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0193a:    	add    rsp,0x60
  0193e: 31 	movabs r13,0x563184ccc0d0
  01948:    	test   rax,rax
  0194b:    	je     0xffff9e5c
  01951: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00118 _ = %14.call x=(%15; 1)              [<INVALID>]
  01958: 01 	sub    DWORD PTR [rip+0xc4a],0x1        # 0x25a9
  0195f:    	je     0x3ce54
  01965:    	sub    rsp,0x60
  01969:    	movq   QWORD PTR [rsp],xmm2
  0196e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01974:    	movq   QWORD PTR [rsp+0x10],xmm4
  0197a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01980:    	movq   QWORD PTR [rsp+0x20],xmm6
  01986:    	movq   QWORD PTR [rsp+0x28],xmm7
  0198c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01993: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0199a: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  019a1: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  019a8: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  019af: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  019b6: 31 	movabs rax,0x5631840958d0
  019c0:    	call   rax
  019c2:    	mov    r15d,eax
  019c5: 00 	cmp    r15d,DWORD PTR [rip+0xbe5]        # 0x25b1
  019cc:    	jne    0x3ce76
  019d2:    	mov    eax,DWORD PTR [rip+0xffffffffffffaf62]        # 0xffffc93a
  019d8:    	cmp    DWORD PTR [rip+0xbcf],eax        # 0x25ad
  019de:    	jne    0x3ce76
  019e4:    	mov    rax,QWORD PTR [rbx]
  019e7:    	lea    rdi,[rsp-0x18]
  019ec:    	mov    QWORD PTR [rdi],rax
  019ef:    	mov    QWORD PTR [rbx],rdi
  019f2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019fb:    	mov    QWORD PTR [rsp-0x38],rcx
  01a00: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01a07:    	mov    QWORD PTR [rsp-0x38],rax
  01a0c: 00 	mov    rdi,0x1
  01a13: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01a1a:    	mov    QWORD PTR [rsp-0x40],rax
  01a1f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a28: 00 	movabs rax,0x0
  01a32:    	mov    QWORD PTR [rsp-0x28],rax
  01a37: 00 	movabs r13,0x0
  01a41:    	call   0xffff9e21
  01a46:    	lea    rdi,[rbp-0x8]
  01a4a:    	mov    QWORD PTR [rbx],rdi
  01a4d:    	movq   xmm2,QWORD PTR [rsp]
  01a52:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01a58:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01a5e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01a64:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01a6a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01a70: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01a77: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01a7e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01a85: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01a8c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01a93:    	add    rsp,0x60
  01a97:    	test   rax,rax
  01a9a:    	je     0x3cee5
:00119 
:00121 %14 = dynvar(2, %2)
  01aa0:    	mov    rax,QWORD PTR [rbp-0x10]
  01aa4:    	mov    rax,QWORD PTR [rax]
  01aa7:    	mov    rax,QWORD PTR [rax-0x28]
  01aab: ff 	mov    QWORD PTR [rbp-0x98],rax
:00122 %16 = dynvar(2, %2)
  01ab2:    	mov    rax,QWORD PTR [rbp-0x10]
  01ab6:    	mov    rax,QWORD PTR [rax]
  01ab9:    	mov    rax,QWORD PTR [rax-0x28]
  01abd: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00123 %15 = %16.call y()                   [<INVALID>]
  01ac4: 01 	sub    DWORD PTR [rip+0xaea],0x1        # 0x25b5
  01acb:    	je     0x3cf6d
  01ad1:    	sub    rsp,0x60
  01ad5:    	movq   QWORD PTR [rsp],xmm2
  01ada:    	movq   QWORD PTR [rsp+0x8],xmm3
  01ae0:    	movq   QWORD PTR [rsp+0x10],xmm4
  01ae6:    	movq   QWORD PTR [rsp+0x18],xmm5
  01aec:    	movq   QWORD PTR [rsp+0x20],xmm6
  01af2:    	movq   QWORD PTR [rsp+0x28],xmm7
  01af8: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01aff: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01b06: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01b0d: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01b14: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01b1b: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01b22: 31 	movabs rax,0x5631840958d0
  01b2c:    	call   rax
  01b2e:    	mov    r15d,eax
  01b31: 00 	cmp    r15d,DWORD PTR [rip+0xa85]        # 0x25bd
  01b38:    	jne    0x3cf8f
  01b3e:    	mov    eax,DWORD PTR [rip+0xffffffffffffadf6]        # 0xffffc93a
  01b44:    	cmp    DWORD PTR [rip+0xa6f],eax        # 0x25b9
  01b4a:    	jne    0x3cf8f
  01b50:    	mov    rax,QWORD PTR [rbx]
  01b53:    	lea    rdi,[rsp-0x18]
  01b58:    	mov    QWORD PTR [rdi],rax
  01b5b:    	mov    QWORD PTR [rbx],rdi
  01b5e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b67:    	mov    QWORD PTR [rsp-0x38],rcx
  01b6c: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01b73:    	mov    QWORD PTR [rsp-0x38],rax
  01b78: 00 	mov    rdi,0x0
  01b7f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b88: 00 	movabs rax,0x0
  01b92:    	mov    QWORD PTR [rsp-0x28],rax
  01b97: 00 	movabs r13,0x0
  01ba1:    	call   0xffff9e21
  01ba6:    	lea    rdi,[rbp-0x8]
  01baa:    	mov    QWORD PTR [rbx],rdi
  01bad:    	movq   xmm2,QWORD PTR [rsp]
  01bb2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01bb8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01bbe:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01bc4:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01bca:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01bd0: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01bd7: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01bde: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01be5: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01bec: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01bf3:    	add    rsp,0x60
  01bf7:    	test   rax,rax
  01bfa:    	je     0x3cffe
  01c00: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00124 
:00126 %16 = %13.call y()                   [<INVALID>]
  01c07: 01 	sub    DWORD PTR [rip+0x9b3],0x1        # 0x25c1
  01c0e:    	je     0x3d086
  01c14:    	sub    rsp,0x60
  01c18:    	movq   QWORD PTR [rsp],xmm2
  01c1d:    	movq   QWORD PTR [rsp+0x8],xmm3
  01c23:    	movq   QWORD PTR [rsp+0x10],xmm4
  01c29:    	movq   QWORD PTR [rsp+0x18],xmm5
  01c2f:    	movq   QWORD PTR [rsp+0x20],xmm6
  01c35:    	movq   QWORD PTR [rsp+0x28],xmm7
  01c3b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01c42: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01c49: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01c50: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01c57: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01c5e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01c65: 31 	movabs rax,0x5631840958d0
  01c6f:    	call   rax
  01c71:    	mov    r15d,eax
  01c74: 00 	cmp    r15d,DWORD PTR [rip+0x94e]        # 0x25c9
  01c7b:    	jne    0x3d0a8
  01c81:    	mov    eax,DWORD PTR [rip+0xffffffffffffacb3]        # 0xffffc93a
  01c87:    	cmp    DWORD PTR [rip+0x938],eax        # 0x25c5
  01c8d:    	jne    0x3d0a8
  01c93:    	mov    rax,QWORD PTR [rbx]
  01c96:    	lea    rdi,[rsp-0x18]
  01c9b:    	mov    QWORD PTR [rdi],rax
  01c9e:    	mov    QWORD PTR [rbx],rdi
  01ca1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01caa:    	mov    QWORD PTR [rsp-0x38],rcx
  01caf: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01cb6:    	mov    QWORD PTR [rsp-0x38],rax
  01cbb: 00 	mov    rdi,0x0
  01cc2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01ccb: 00 	movabs rax,0x0
  01cd5:    	mov    QWORD PTR [rsp-0x28],rax
  01cda: 00 	movabs r13,0x0
  01ce4:    	call   0xffff9e21
  01ce9:    	lea    rdi,[rbp-0x8]
  01ced:    	mov    QWORD PTR [rbx],rdi
  01cf0:    	movq   xmm2,QWORD PTR [rsp]
  01cf5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01cfb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01d01:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01d07:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01d0d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01d13: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01d1a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01d21: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01d28: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01d2f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01d36:    	add    rsp,0x60
  01d3a:    	test   rax,rax
  01d3d:    	je     0x3d117
  01d43: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00127 
:00129 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01d4a: 01 	sub    DWORD PTR [rip+0x87c],0x1        # 0x25cd
  01d51:    	je     0x3d19f
  01d57: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01d5e: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  01d65:    	sub    rsp,0x60
  01d69:    	movq   QWORD PTR [rsp],xmm2
  01d6e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01d74:    	movq   QWORD PTR [rsp+0x10],xmm4
  01d7a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01d80:    	movq   QWORD PTR [rsp+0x20],xmm6
  01d86:    	movq   QWORD PTR [rsp+0x28],xmm7
  01d8c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01d93: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01d9a: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01da1: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01da8: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01daf:    	mov    rdx,rdi
  01db2:    	mov    rcx,rsi
  01db5:    	mov    rdi,rbx
  01db8:    	mov    rsi,r12
  01dbb: 31 	movabs rax,0x563184087f80
  01dc5:    	call   rax
  01dc7:    	movq   xmm2,QWORD PTR [rsp]
  01dcc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01dd2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01dd8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01dde:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01de4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01dea: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01df1: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01df8: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01dff: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01e06: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01e0d:    	add    rsp,0x60
  01e11: 31 	movabs r13,0x563184ccc190
  01e1b:    	test   rax,rax
  01e1e:    	je     0xffff9e5c
  01e24: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00130 _ = %14.call y=(%15; 1)              [<INVALID>]
  01e2b: 01 	sub    DWORD PTR [rip+0x79f],0x1        # 0x25d1
  01e32:    	je     0x3d23a
  01e38:    	sub    rsp,0x60
  01e3c:    	movq   QWORD PTR [rsp],xmm2
  01e41:    	movq   QWORD PTR [rsp+0x8],xmm3
  01e47:    	movq   QWORD PTR [rsp+0x10],xmm4
  01e4d:    	movq   QWORD PTR [rsp+0x18],xmm5
  01e53:    	movq   QWORD PTR [rsp+0x20],xmm6
  01e59:    	movq   QWORD PTR [rsp+0x28],xmm7
  01e5f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01e66: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01e6d: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01e74: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01e7b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01e82: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01e89: 31 	movabs rax,0x5631840958d0
  01e93:    	call   rax
  01e95:    	mov    r15d,eax
  01e98: 00 	cmp    r15d,DWORD PTR [rip+0x73a]        # 0x25d9
  01e9f:    	jne    0x3d25c
  01ea5:    	mov    eax,DWORD PTR [rip+0xffffffffffffaa8f]        # 0xffffc93a
  01eab:    	cmp    DWORD PTR [rip+0x724],eax        # 0x25d5
  01eb1:    	jne    0x3d25c
  01eb7:    	mov    rax,QWORD PTR [rbx]
  01eba:    	lea    rdi,[rsp-0x18]
  01ebf:    	mov    QWORD PTR [rdi],rax
  01ec2:    	mov    QWORD PTR [rbx],rdi
  01ec5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01ece:    	mov    QWORD PTR [rsp-0x38],rcx
  01ed3: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01eda:    	mov    QWORD PTR [rsp-0x38],rax
  01edf: 00 	mov    rdi,0x1
  01ee6: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01eed:    	mov    QWORD PTR [rsp-0x40],rax
  01ef2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01efb: 00 	movabs rax,0x0
  01f05:    	mov    QWORD PTR [rsp-0x28],rax
  01f0a: 00 	movabs r13,0x0
  01f14:    	call   0xffff9e21
  01f19:    	lea    rdi,[rbp-0x8]
  01f1d:    	mov    QWORD PTR [rbx],rdi
  01f20:    	movq   xmm2,QWORD PTR [rsp]
  01f25:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01f2b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01f31:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01f37:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01f3d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01f43: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01f4a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01f51: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01f58: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01f5f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01f66:    	add    rsp,0x60
  01f6a:    	test   rax,rax
  01f6d:    	je     0x3d2cb
:00131 
:00133 %14 = dynvar(2, %2)
  01f73:    	mov    rax,QWORD PTR [rbp-0x10]
  01f77:    	mov    rax,QWORD PTR [rax]
  01f7a:    	mov    rax,QWORD PTR [rax-0x28]
  01f7e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00134 %16 = dynvar(2, %2)
  01f85:    	mov    rax,QWORD PTR [rbp-0x10]
  01f89:    	mov    rax,QWORD PTR [rax]
  01f8c:    	mov    rax,QWORD PTR [rax-0x28]
  01f90: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00135 %15 = %16.call z()                   [<INVALID>]
  01f97: 01 	sub    DWORD PTR [rip+0x63f],0x1        # 0x25dd
  01f9e:    	je     0x3d353
  01fa4:    	sub    rsp,0x60
  01fa8:    	movq   QWORD PTR [rsp],xmm2
  01fad:    	movq   QWORD PTR [rsp+0x8],xmm3
  01fb3:    	movq   QWORD PTR [rsp+0x10],xmm4
  01fb9:    	movq   QWORD PTR [rsp+0x18],xmm5
  01fbf:    	movq   QWORD PTR [rsp+0x20],xmm6
  01fc5:    	movq   QWORD PTR [rsp+0x28],xmm7
  01fcb: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01fd2: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01fd9: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01fe0: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01fe7: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01fee: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01ff5: 31 	movabs rax,0x5631840958d0
  01fff:    	call   rax
  02001:    	mov    r15d,eax
  02004: 00 	cmp    r15d,DWORD PTR [rip+0x5da]        # 0x25e5
  0200b:    	jne    0x3d375
  02011:    	mov    eax,DWORD PTR [rip+0xffffffffffffa923]        # 0xffffc93a
  02017:    	cmp    DWORD PTR [rip+0x5c4],eax        # 0x25e1
  0201d:    	jne    0x3d375
  02023:    	mov    rax,QWORD PTR [rbx]
  02026:    	lea    rdi,[rsp-0x18]
  0202b:    	mov    QWORD PTR [rdi],rax
  0202e:    	mov    QWORD PTR [rbx],rdi
  02031: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0203a:    	mov    QWORD PTR [rsp-0x38],rcx
  0203f: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  02046:    	mov    QWORD PTR [rsp-0x38],rax
  0204b: 00 	mov    rdi,0x0
  02052: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0205b: 00 	movabs rax,0x0
  02065:    	mov    QWORD PTR [rsp-0x28],rax
  0206a: 00 	movabs r13,0x0
  02074:    	call   0xffff9e21
  02079:    	lea    rdi,[rbp-0x8]
  0207d:    	mov    QWORD PTR [rbx],rdi
  02080:    	movq   xmm2,QWORD PTR [rsp]
  02085:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0208b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02091:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02097:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0209d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  020a3: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  020aa: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  020b1: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  020b8: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  020bf: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  020c6:    	add    rsp,0x60
  020ca:    	test   rax,rax
  020cd:    	je     0x3d3e4
  020d3: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00136 
:00138 %16 = %13.call z()                   [<INVALID>]
  020da: 01 	sub    DWORD PTR [rip+0x508],0x1        # 0x25e9
  020e1:    	je     0x3d46c
  020e7:    	sub    rsp,0x60
  020eb:    	movq   QWORD PTR [rsp],xmm2
  020f0:    	movq   QWORD PTR [rsp+0x8],xmm3
  020f6:    	movq   QWORD PTR [rsp+0x10],xmm4
  020fc:    	movq   QWORD PTR [rsp+0x18],xmm5
  02102:    	movq   QWORD PTR [rsp+0x20],xmm6
  02108:    	movq   QWORD PTR [rsp+0x28],xmm7
  0210e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02115: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0211c: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02123: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0212a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02131: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02138: 31 	movabs rax,0x5631840958d0
  02142:    	call   rax
  02144:    	mov    r15d,eax
  02147: 00 	cmp    r15d,DWORD PTR [rip+0x4a3]        # 0x25f1
  0214e:    	jne    0x3d48e
  02154:    	mov    eax,DWORD PTR [rip+0xffffffffffffa7e0]        # 0xffffc93a
  0215a:    	cmp    DWORD PTR [rip+0x48d],eax        # 0x25ed
  02160:    	jne    0x3d48e
  02166:    	mov    rax,QWORD PTR [rbx]
  02169:    	lea    rdi,[rsp-0x18]
  0216e:    	mov    QWORD PTR [rdi],rax
  02171:    	mov    QWORD PTR [rbx],rdi
  02174: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0217d:    	mov    QWORD PTR [rsp-0x38],rcx
  02182: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02189:    	mov    QWORD PTR [rsp-0x38],rax
  0218e: 00 	mov    rdi,0x0
  02195: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0219e: 00 	movabs rax,0x0
  021a8:    	mov    QWORD PTR [rsp-0x28],rax
  021ad: 00 	movabs r13,0x0
  021b7:    	call   0xffff9e21
  021bc:    	lea    rdi,[rbp-0x8]
  021c0:    	mov    QWORD PTR [rbx],rdi
  021c3:    	movq   xmm2,QWORD PTR [rsp]
  021c8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  021ce:    	movq   xmm4,QWORD PTR [rsp+0x10]
  021d4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  021da:    	movq   xmm6,QWORD PTR [rsp+0x20]
  021e0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  021e6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  021ed: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  021f4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  021fb: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02202: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02209:    	add    rsp,0x60
  0220d:    	test   rax,rax
  02210:    	je     0x3d4fd
  02216: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00139 
:00141 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  0221d: 01 	sub    DWORD PTR [rip+0x3d1],0x1        # 0x25f5
  02224:    	je     0x3d585
  0222a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  02231: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  02238:    	sub    rsp,0x60
  0223c:    	movq   QWORD PTR [rsp],xmm2
  02241:    	movq   QWORD PTR [rsp+0x8],xmm3
  02247:    	movq   QWORD PTR [rsp+0x10],xmm4
  0224d:    	movq   QWORD PTR [rsp+0x18],xmm5
  02253:    	movq   QWORD PTR [rsp+0x20],xmm6
  02259:    	movq   QWORD PTR [rsp+0x28],xmm7
  0225f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02266: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0226d: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02274: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0227b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02282:    	mov    rdx,rdi
  02285:    	mov    rcx,rsi
  02288:    	mov    rdi,rbx
  0228b:    	mov    rsi,r12
  0228e: 31 	movabs rax,0x563184087f80
  02298:    	call   rax
  0229a:    	movq   xmm2,QWORD PTR [rsp]
  0229f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  022a5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  022ab:    	movq   xmm5,QWORD PTR [rsp+0x18]
  022b1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  022b7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  022bd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  022c4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  022cb: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  022d2: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  022d9: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  022e0:    	add    rsp,0x60
  022e4: 31 	movabs r13,0x563184ccc250
  022ee:    	test   rax,rax
  022f1:    	je     0xffff9e5c
  022f7: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00142 _ = %14.call z=(%15; 1)              [<INVALID>]
  022fe: 01 	sub    DWORD PTR [rip+0x2f4],0x1        # 0x25f9
  02305:    	je     0x3d620
  0230b:    	sub    rsp,0x60
  0230f:    	movq   QWORD PTR [rsp],xmm2
  02314:    	movq   QWORD PTR [rsp+0x8],xmm3
  0231a:    	movq   QWORD PTR [rsp+0x10],xmm4
  02320:    	movq   QWORD PTR [rsp+0x18],xmm5
  02326:    	movq   QWORD PTR [rsp+0x20],xmm6
  0232c:    	movq   QWORD PTR [rsp+0x28],xmm7
  02332: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02339: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02340: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02347: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0234e: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02355: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0235c: 31 	movabs rax,0x5631840958d0
  02366:    	call   rax
  02368:    	mov    r15d,eax
  0236b: 00 	cmp    r15d,DWORD PTR [rip+0x28f]        # 0x2601
  02372:    	jne    0x3d642
  02378:    	mov    eax,DWORD PTR [rip+0xffffffffffffa5bc]        # 0xffffc93a
  0237e:    	cmp    DWORD PTR [rip+0x279],eax        # 0x25fd
  02384:    	jne    0x3d642
  0238a:    	mov    rax,QWORD PTR [rbx]
  0238d:    	lea    rdi,[rsp-0x18]
  02392:    	mov    QWORD PTR [rdi],rax
  02395:    	mov    QWORD PTR [rbx],rdi
  02398: 00 	mov    QWORD PTR [rsp-0x20],0x0
  023a1:    	mov    QWORD PTR [rsp-0x38],rcx
  023a6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  023ad:    	mov    QWORD PTR [rsp-0x38],rax
  023b2: 00 	mov    rdi,0x1
  023b9: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  023c0:    	mov    QWORD PTR [rsp-0x40],rax
  023c5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  023ce: 00 	movabs rax,0x0
  023d8:    	mov    QWORD PTR [rsp-0x28],rax
  023dd: 00 	movabs r13,0x0
  023e7:    	call   0xffff9e21
  023ec:    	lea    rdi,[rbp-0x8]
  023f0:    	mov    QWORD PTR [rbx],rdi
  023f3:    	movq   xmm2,QWORD PTR [rsp]
  023f8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  023fe:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02404:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0240a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02410:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02416: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0241d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  02424: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0242b: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02432: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02439:    	add    rsp,0x60
  0243d:    	test   rax,rax
  02440:    	je     0x3d6b1
:00143 
:00145 %14 = %15
  02446: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0244d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 ret %14
  02454: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0245b:    	leave  
  0245c:    	ret    
:00147 %14 = nil
  0245d: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00148 ret %14
  02468: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0246f:    	leave  
  02470:    	ret    
==> start whole compile: vnormalize FuncId(67) self_class:Vec start:[00000] bytecode:0x563184c828e0
<== finished compile. elapsed:48µs
offset:Pos(34788) code: 1758 bytes  data: 102 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x60
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x30],rax
  00013: mov    QWORD PTR [rbp-0x38],rax
  00017: mov    QWORD PTR [rbp-0x40],rax
  0001b: mov    QWORD PTR [rbp-0x48],rax
  0001f: mov    QWORD PTR [rbp-0x50],rax
  00023: mov    QWORD PTR [rbp-0x58],rax
  00027: mov    rdi,QWORD PTR [rbp-0x28]
  0002b: test   rdi,0x7
  00032: jne    0x3b0bb
  00038: cmp    DWORD PTR [rdi+0x4],0x28
  0003c: jne    0x3b0bb
:00000 %3 = %0.call vlength()               [Vec]
  00042: mov    rdi,QWORD PTR [rbp-0x28]
  00046: cmp    DWORD PTR [rip+0xffffffffffffa2e8],0x26        # 0xffffa335
  0004d: jne    0x3b0ca
  00053: mov    rax,QWORD PTR [rbx]
  00056: lea    rdi,[rsp-0x18]
  0005b: mov    QWORD PTR [rdi],rax
  0005e: mov    QWORD PTR [rbx],rdi
  00061: mov    QWORD PTR [rsp-0x20],0x0
  0006a: mov    QWORD PTR [rsp-0x38],rcx
  0006f: mov    rax,QWORD PTR [rbp-0x28]
  00073: mov    QWORD PTR [rsp-0x38],rax
  00078: mov    rdi,0x0
  0007f: mov    QWORD PTR [rsp-0x30],0x0
  00088: movabs rax,0x600000042
  00092: mov    QWORD PTR [rsp-0x28],rax
  00097: movabs r13,0x563184c81980
  000a1: call   0xffffac84
  000a6: lea    rdi,[rbp-0x8]
  000aa: mov    QWORD PTR [rbx],rdi
  000ad: movabs r13,0x563184c82900
  000b7: test   rax,rax
  000ba: je     0xffff7857
  000c0: mov    QWORD PTR [rbp-0x40],rax
:00001 
:00003 %1 = %3
  000c4: mov    rax,QWORD PTR [rbp-0x40]
  000c8: mov    QWORD PTR [rbp-0x30],rax
:00004 %3 = const[Vec]                      [Vec]
  000cc: mov    rax,QWORD PTR [rip+0xffffffffffffa269]        # 0xffffa33c
  000d3: cmp    rax,QWORD PTR [rip+0x622]        # 0x6fc
  000da: jne    0x3b0d9
  000e0: mov    rax,QWORD PTR [rip+0x605]        # 0x6ec
  000e7: mov    QWORD PTR [rbp-0x40],rax
:00005 %4 = @x: Vec[IvarId(0)]
  000eb: mov    rdi,QWORD PTR [rbp-0x28]
  000ef: mov    rax,QWORD PTR [rdi+0x10]
  000f3: mov    QWORD PTR [rbp-0x48],rax
:00006 %5 = @y: Vec[IvarId(1)]
  000f7: mov    rdi,QWORD PTR [rbp-0x28]
  000fb: mov    rax,QWORD PTR [rdi+0x18]
  000ff: mov    QWORD PTR [rbp-0x50],rax
:00007 %6 = @z: Vec[IvarId(2)]
  00103: mov    rdi,QWORD PTR [rbp-0x28]
  00107: mov    rax,QWORD PTR [rdi+0x20]
  0010b: mov    QWORD PTR [rbp-0x58],rax
:00008 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
  0010f: mov    rdi,QWORD PTR [rbp-0x40]
  00113: test   rdi,0x7
  0011a: jne    0x3b11f
  00120: cmp    DWORD PTR [rdi+0x4],0x29
  00124: jne    0x3b11f
  0012a: cmp    DWORD PTR [rip+0xffffffffffffa204],0x26        # 0xffffa335
  00131: jne    0x3b11f
  00137: mov    r9,0x0
  0013e: mov    rdx,rdi
  00141: mov    rax,QWORD PTR [rbx]
  00144: lea    rdi,[rsp-0x18]
  00149: mov    QWORD PTR [rdi],rax
  0014c: mov    QWORD PTR [rbx],rdi
  0014f: mov    QWORD PTR [rsp-0x20],0x0
  00158: mov    QWORD PTR [rsp-0x38],rcx
  0015d: lea    rcx,[rbp-0x48]
  00161: mov    r8,0x3
  00168: call   0x3b12e
  0016d: lea    rdi,[rbp-0x8]
  00171: mov    QWORD PTR [rbx],rdi
  00174: movabs r13,0x563184c82980
  0017e: test   rax,rax
  00181: je     0xffff7857
  00187: mov    QWORD PTR [rbp-0x38],rax
:00009 
:00011 %3 = literal[1e-17]
  0018b: movq   xmm2,QWORD PTR [rip+0x579]        # 0x70c
  00193: movabs rax,0xe33877aa3236a4ba
  0019d: mov    QWORD PTR [rbp-0x40],rax
:00012 _%3 = %1 > %3                        [Float][Float]
:00013 condnotbr _%3 =>:00036
  001a1: mov    rdi,QWORD PTR [rbp-0x30]
  001a5: test   rdi,0x1
  001ac: jne    0x3b160
  001b2: test   rdi,0x2
  001b9: je     0x1f5
  001bf: xorps  xmm3,xmm3
  001c2: movabs rax,0x8000000000000002
  001cc: cmp    rdi,rax
  001cf: je     0x207
  001d5: mov    rax,rdi
  001d8: sar    rax,0x3f
  001dc: add    rax,0x2
  001e0: and    rdi,0xfffffffffffffffc
  001e4: or     rdi,rax
  001e7: rol    rdi,0x3d
  001eb: movq   xmm3,rdi
  001f0: jmp    0x207
  001f5: call   0xffff7890
  001fa: test   rax,rax
  001fd: je     0x3b160
  00203: movq   xmm3,xmm0
  00207: ucomisd xmm3,xmm2
  0020b: jbe    0x3b391
:00014 %3 = %2.call x()                     [Vec]
  00211: mov    rdi,QWORD PTR [rbp-0x38]
  00215: test   rdi,0x7
  0021c: jne    0x3b16f
  00222: cmp    DWORD PTR [rdi+0x4],0x28
  00226: jne    0x3b16f
  0022c: cmp    DWORD PTR [rip+0xffffffffffffa102],0x26        # 0xffffa335
  00233: jne    0x3b16f
  00239: mov    esi,DWORD PTR [rip+0x4d9]        # 0x718
  0023f: cmp    esi,0xffffffff
  00242: je     0x3b17e
  00248: cmp    WORD PTR [rdi+0x2],0x3
  0024d: jne    0x266
  00253: cmp    esi,0x6
  00256: jge    0x266
  0025c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00261: jmp    0x284
  00266: sub    rsp,0x10
  0026a: movq   QWORD PTR [rsp],xmm3
  0026f: movabs rax,0x563184053740
  00279: call   rax
  0027b: movq   xmm3,QWORD PTR [rsp]
  00280: add    rsp,0x10
  00284: mov    QWORD PTR [rbp-0x40],rax
:00015 
:00017 %3 = %3 / %1                         [Float][Float]
  00288: mov    rdi,QWORD PTR [rbp-0x40]
  0028c: test   rdi,0x1
  00293: jne    0x3b1b9
  00299: test   rdi,0x2
  002a0: je     0x2dc
  002a6: xorps  xmm2,xmm2
  002a9: movabs rax,0x8000000000000002
  002b3: cmp    rdi,rax
  002b6: je     0x2ee
  002bc: mov    rax,rdi
  002bf: sar    rax,0x3f
  002c3: add    rax,0x2
  002c7: and    rdi,0xfffffffffffffffc
  002cb: or     rdi,rax
  002ce: rol    rdi,0x3d
  002d2: movq   xmm2,rdi
  002d7: jmp    0x2ee
  002dc: call   0xffff7890
  002e1: test   rax,rax
  002e4: je     0x3b1b9
  002ea: movq   xmm2,xmm0
  002ee: movq   rax,xmm3
  002f3: test   rax,rax
  002f6: je     0xffff787c
  002fc: divsd  xmm2,xmm3
:00018 _ = %2.call x=(%3; 1)                [Vec]
  00300: movq   xmm0,xmm2
  00304: call   0xffff7983
  00309: mov    QWORD PTR [rbp-0x40],rax
  0030d: mov    rdi,QWORD PTR [rbp-0x38]
  00311: test   rdi,0x7
  00318: jne    0x3b1c8
  0031e: cmp    DWORD PTR [rdi+0x4],0x28
  00322: jne    0x3b1c8
  00328: cmp    DWORD PTR [rip+0xffffffffffffa006],0x26        # 0xffffa335
  0032f: jne    0x3b1c8
  00335: mov    esi,DWORD PTR [rip+0x3e5]        # 0x720
  0033b: cmp    esi,0xffffffff
  0033e: je     0x3b1d7
  00344: cmp    WORD PTR [rdi+0x2],0x3
  00349: jne    0x366
  0034f: cmp    esi,0x6
  00352: jge    0x366
  00358: mov    rax,QWORD PTR [rbp-0x40]
  0035c: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00361: jmp    0x3a7
  00366: sub    rsp,0x10
  0036a: movq   QWORD PTR [rsp],xmm2
  0036f: movq   QWORD PTR [rsp+0x8],xmm3
  00375: mov    rdx,QWORD PTR [rbp-0x40]
  00379: movabs rax,0x5631840539e0
  00383: call   rax
  00385: movq   xmm2,QWORD PTR [rsp]
  0038a: movq   xmm3,QWORD PTR [rsp+0x8]
  00390: add    rsp,0x10
  00394: movabs r13,0x563184c82a20
  0039e: test   rax,rax
  003a1: je     0xffff7857
:00019 
:00021 %3 = %2.call y()                     [Vec]
  003a7: mov    rdi,QWORD PTR [rbp-0x38]
  003ab: test   rdi,0x7
  003b2: jne    0x3b225
  003b8: cmp    DWORD PTR [rdi+0x4],0x28
  003bc: jne    0x3b225
  003c2: cmp    DWORD PTR [rip+0xffffffffffff9f6c],0x26        # 0xffffa335
  003c9: jne    0x3b225
  003cf: mov    esi,DWORD PTR [rip+0x353]        # 0x728
  003d5: cmp    esi,0xffffffff
  003d8: je     0x3b234
  003de: cmp    WORD PTR [rdi+0x2],0x3
  003e3: jne    0x3fc
  003e9: cmp    esi,0x6
  003ec: jge    0x3fc
  003f2: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003f7: jmp    0x41a
  003fc: sub    rsp,0x10
  00400: movq   QWORD PTR [rsp],xmm3
  00405: movabs rax,0x563184053740
  0040f: call   rax
  00411: movq   xmm3,QWORD PTR [rsp]
  00416: add    rsp,0x10
  0041a: mov    QWORD PTR [rbp-0x40],rax
:00022 
:00024 %3 = %3 / %1                         [Float][Float]
  0041e: mov    rdi,QWORD PTR [rbp-0x40]
  00422: test   rdi,0x1
  00429: jne    0x3b26f
  0042f: test   rdi,0x2
  00436: je     0x472
  0043c: xorps  xmm2,xmm2
  0043f: movabs rax,0x8000000000000002
  00449: cmp    rdi,rax
  0044c: je     0x484
  00452: mov    rax,rdi
  00455: sar    rax,0x3f
  00459: add    rax,0x2
  0045d: and    rdi,0xfffffffffffffffc
  00461: or     rdi,rax
  00464: rol    rdi,0x3d
  00468: movq   xmm2,rdi
  0046d: jmp    0x484
  00472: call   0xffff7890
  00477: test   rax,rax
  0047a: je     0x3b26f
  00480: movq   xmm2,xmm0
  00484: movq   rax,xmm3
  00489: test   rax,rax
  0048c: je     0xffff787c
  00492: divsd  xmm2,xmm3
:00025 _ = %2.call y=(%3; 1)                [Vec]
  00496: movq   xmm0,xmm2
  0049a: call   0xffff7983
  0049f: mov    QWORD PTR [rbp-0x40],rax
  004a3: mov    rdi,QWORD PTR [rbp-0x38]
  004a7: test   rdi,0x7
  004ae: jne    0x3b27e
  004b4: cmp    DWORD PTR [rdi+0x4],0x28
  004b8: jne    0x3b27e
  004be: cmp    DWORD PTR [rip+0xffffffffffff9e70],0x26        # 0xffffa335
  004c5: jne    0x3b27e
  004cb: mov    esi,DWORD PTR [rip+0x25f]        # 0x730
  004d1: cmp    esi,0xffffffff
  004d4: je     0x3b28d
  004da: cmp    WORD PTR [rdi+0x2],0x3
  004df: jne    0x4fc
  004e5: cmp    esi,0x6
  004e8: jge    0x4fc
  004ee: mov    rax,QWORD PTR [rbp-0x40]
  004f2: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  004f7: jmp    0x53d
  004fc: sub    rsp,0x10
  00500: movq   QWORD PTR [rsp],xmm2
  00505: movq   QWORD PTR [rsp+0x8],xmm3
  0050b: mov    rdx,QWORD PTR [rbp-0x40]
  0050f: movabs rax,0x5631840539e0
  00519: call   rax
  0051b: movq   xmm2,QWORD PTR [rsp]
  00520: movq   xmm3,QWORD PTR [rsp+0x8]
  00526: add    rsp,0x10
  0052a: movabs r13,0x563184c82a90
  00534: test   rax,rax
  00537: je     0xffff7857
:00026 
:00028 %3 = %2.call z()                     [Vec]
  0053d: mov    rdi,QWORD PTR [rbp-0x38]
  00541: test   rdi,0x7
  00548: jne    0x3b2db
  0054e: cmp    DWORD PTR [rdi+0x4],0x28
  00552: jne    0x3b2db
  00558: cmp    DWORD PTR [rip+0xffffffffffff9dd6],0x26        # 0xffffa335
  0055f: jne    0x3b2db
  00565: mov    esi,DWORD PTR [rip+0x1cd]        # 0x738
  0056b: cmp    esi,0xffffffff
  0056e: je     0x3b2ea
  00574: cmp    WORD PTR [rdi+0x2],0x3
  00579: jne    0x592
  0057f: cmp    esi,0x6
  00582: jge    0x592
  00588: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0058d: jmp    0x5b0
  00592: sub    rsp,0x10
  00596: movq   QWORD PTR [rsp],xmm3
  0059b: movabs rax,0x563184053740
  005a5: call   rax
  005a7: movq   xmm3,QWORD PTR [rsp]
  005ac: add    rsp,0x10
  005b0: mov    QWORD PTR [rbp-0x40],rax
:00029 
:00031 %3 = %3 / %1                         [Float][Float]
  005b4: mov    rdi,QWORD PTR [rbp-0x40]
  005b8: test   rdi,0x1
  005bf: jne    0x3b325
  005c5: test   rdi,0x2
  005cc: je     0x608
  005d2: xorps  xmm2,xmm2
  005d5: movabs rax,0x8000000000000002
  005df: cmp    rdi,rax
  005e2: je     0x61a
  005e8: mov    rax,rdi
  005eb: sar    rax,0x3f
  005ef: add    rax,0x2
  005f3: and    rdi,0xfffffffffffffffc
  005f7: or     rdi,rax
  005fa: rol    rdi,0x3d
  005fe: movq   xmm2,rdi
  00603: jmp    0x61a
  00608: call   0xffff7890
  0060d: test   rax,rax
  00610: je     0x3b325
  00616: movq   xmm2,xmm0
  0061a: movq   rax,xmm3
  0061f: test   rax,rax
  00622: je     0xffff787c
  00628: divsd  xmm2,xmm3
:00032 _ = %2.call z=(%3; 1)                [Vec]
  0062c: movq   xmm0,xmm2
  00630: call   0xffff7983
  00635: mov    QWORD PTR [rbp-0x40],rax
  00639: mov    rdi,QWORD PTR [rbp-0x38]
  0063d: test   rdi,0x7
  00644: jne    0x3b334
  0064a: cmp    DWORD PTR [rdi+0x4],0x28
  0064e: jne    0x3b334
  00654: cmp    DWORD PTR [rip+0xffffffffffff9cda],0x26        # 0xffffa335
  0065b: jne    0x3b334
  00661: mov    esi,DWORD PTR [rip+0xd9]        # 0x740
  00667: cmp    esi,0xffffffff
  0066a: je     0x3b343
  00670: cmp    WORD PTR [rdi+0x2],0x3
  00675: jne    0x692
  0067b: cmp    esi,0x6
  0067e: jge    0x692
  00684: mov    rax,QWORD PTR [rbp-0x40]
  00688: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0068d: jmp    0x6d3
  00692: sub    rsp,0x10
  00696: movq   QWORD PTR [rsp],xmm2
  0069b: movq   QWORD PTR [rsp+0x8],xmm3
  006a1: mov    rdx,QWORD PTR [rbp-0x40]
  006a5: movabs rax,0x5631840539e0
  006af: call   rax
  006b1: movq   xmm2,QWORD PTR [rsp]
  006b6: movq   xmm3,QWORD PTR [rsp+0x8]
  006bc: add    rsp,0x10
  006c0: movabs r13,0x563184c82b00
  006ca: test   rax,rax
  006cd: je     0xffff7857
:00033 
:00035 br =>:00036
  006d3: jmp    0x3b3aa
:00036 ret %2
  006d8: mov    rax,QWORD PTR [rbp-0x38]
  006dc: leave  
  006dd: ret    
==> start whole compile: vlength FuncId(66) self_class:Vec start:[00000] bytecode:0x563184c81980
<== finished compile. elapsed:28.9µs
offset:Pos(36648) code: 860 bytes  data: 36 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x60
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x30],rax
  00013: mov    QWORD PTR [rbp-0x38],rax
  00017: mov    QWORD PTR [rbp-0x40],rax
  0001b: mov    QWORD PTR [rbp-0x48],rax
  0001f: mov    QWORD PTR [rbp-0x50],rax
  00023: mov    rdi,QWORD PTR [rbp-0x28]
  00027: test   rdi,0x7
  0002e: jne    0x3ac7f
  00034: cmp    DWORD PTR [rdi+0x4],0x28
  00038: jne    0x3ac7f
:00000 %2 = const[Math]                     [Math]
  0003e: mov    rax,QWORD PTR [rip+0xffffffffffff9bb3]        # 0xffff9bf8
  00045: cmp    rax,QWORD PTR [rip+0x32c]        # 0x378
  0004c: jne    0x3ac8e
  00052: mov    rax,QWORD PTR [rip+0x30f]        # 0x368
  00059: mov    QWORD PTR [rbp-0x38],rax
:00001 %3 = @x: Vec[IvarId(0)]
  0005d: mov    rdi,QWORD PTR [rbp-0x28]
  00061: mov    rax,QWORD PTR [rdi+0x10]
  00065: mov    QWORD PTR [rbp-0x40],rax
:00002 %4 = @x: Vec[IvarId(0)]
  00069: mov    rdi,QWORD PTR [rbp-0x28]
  0006d: mov    rax,QWORD PTR [rdi+0x10]
  00071: mov    QWORD PTR [rbp-0x48],rax
:00003 %3 = %3 * %4                         [Float][Float]
  00075: mov    rdi,QWORD PTR [rbp-0x40]
  00079: test   rdi,0x1
  00080: jne    0x3acd4
  00086: test   rdi,0x2
  0008d: je     0xc9
  00093: xorps  xmm2,xmm2
  00096: movabs rax,0x8000000000000002
  000a0: cmp    rdi,rax
  000a3: je     0xdb
  000a9: mov    rax,rdi
  000ac: sar    rax,0x3f
  000b0: add    rax,0x2
  000b4: and    rdi,0xfffffffffffffffc
  000b8: or     rdi,rax
  000bb: rol    rdi,0x3d
  000bf: movq   xmm2,rdi
  000c4: jmp    0xdb
  000c9: call   0xffff714c
  000ce: test   rax,rax
  000d1: je     0x3acd4
  000d7: movq   xmm2,xmm0
  000db: mov    rdi,QWORD PTR [rbp-0x48]
  000df: test   rdi,0x1
  000e6: jne    0x3ace3
  000ec: test   rdi,0x2
  000f3: je     0x12f
  000f9: xorps  xmm3,xmm3
  000fc: movabs rax,0x8000000000000002
  00106: cmp    rdi,rax
  00109: je     0x141
  0010f: mov    rax,rdi
  00112: sar    rax,0x3f
  00116: add    rax,0x2
  0011a: and    rdi,0xfffffffffffffffc
  0011e: or     rdi,rax
  00121: rol    rdi,0x3d
  00125: movq   xmm3,rdi
  0012a: jmp    0x141
  0012f: call   0xffff714c
  00134: test   rax,rax
  00137: je     0x3ace3
  0013d: movq   xmm3,xmm0
  00141: mulsd  xmm2,xmm3
:00004 %4 = @y: Vec[IvarId(1)]
  00145: mov    rdi,QWORD PTR [rbp-0x28]
  00149: mov    rax,QWORD PTR [rdi+0x18]
  0014d: mov    QWORD PTR [rbp-0x48],rax
:00005 %5 = @y: Vec[IvarId(1)]
  00151: mov    rdi,QWORD PTR [rbp-0x28]
  00155: mov    rax,QWORD PTR [rdi+0x18]
  00159: mov    QWORD PTR [rbp-0x50],rax
:00006 %4 = %4 * %5                         [Float][Float]
  0015d: mov    rdi,QWORD PTR [rbp-0x48]
  00161: test   rdi,0x1
  00168: jne    0x3acf2
  0016e: test   rdi,0x2
  00175: je     0x1b1
  0017b: xorps  xmm3,xmm3
  0017e: movabs rax,0x8000000000000002
  00188: cmp    rdi,rax
  0018b: je     0x1c3
  00191: mov    rax,rdi
  00194: sar    rax,0x3f
  00198: add    rax,0x2
  0019c: and    rdi,0xfffffffffffffffc
  001a0: or     rdi,rax
  001a3: rol    rdi,0x3d
  001a7: movq   xmm3,rdi
  001ac: jmp    0x1c3
  001b1: call   0xffff714c
  001b6: test   rax,rax
  001b9: je     0x3acf2
  001bf: movq   xmm3,xmm0
  001c3: mov    rdi,QWORD PTR [rbp-0x50]
  001c7: test   rdi,0x1
  001ce: jne    0x3ad0e
  001d4: test   rdi,0x2
  001db: je     0x217
  001e1: xorps  xmm4,xmm4
  001e4: movabs rax,0x8000000000000002
  001ee: cmp    rdi,rax
  001f1: je     0x229
  001f7: mov    rax,rdi
  001fa: sar    rax,0x3f
  001fe: add    rax,0x2
  00202: and    rdi,0xfffffffffffffffc
  00206: or     rdi,rax
  00209: rol    rdi,0x3d
  0020d: movq   xmm4,rdi
  00212: jmp    0x229
  00217: call   0xffff714c
  0021c: test   rax,rax
  0021f: je     0x3ad0e
  00225: movq   xmm4,xmm0
  00229: mulsd  xmm3,xmm4
:00007 %3 = %3 + %4                         [Float][Float]
  0022d: addsd  xmm2,xmm3
:00008 %4 = @z: Vec[IvarId(2)]
  00231: mov    rdi,QWORD PTR [rbp-0x28]
  00235: mov    rax,QWORD PTR [rdi+0x20]
  00239: mov    QWORD PTR [rbp-0x48],rax
:00009 %5 = @z: Vec[IvarId(2)]
  0023d: mov    rdi,QWORD PTR [rbp-0x28]
  00241: mov    rax,QWORD PTR [rdi+0x20]
  00245: mov    QWORD PTR [rbp-0x50],rax
:00010 %4 = %4 * %5                         [Float][Float]
  00249: mov    rdi,QWORD PTR [rbp-0x48]
  0024d: test   rdi,0x1
  00254: jne    0x3ad2a
  0025a: test   rdi,0x2
  00261: je     0x29d
  00267: xorps  xmm3,xmm3
  0026a: movabs rax,0x8000000000000002
  00274: cmp    rdi,rax
  00277: je     0x2af
  0027d: mov    rax,rdi
  00280: sar    rax,0x3f
  00284: add    rax,0x2
  00288: and    rdi,0xfffffffffffffffc
  0028c: or     rdi,rax
  0028f: rol    rdi,0x3d
  00293: movq   xmm3,rdi
  00298: jmp    0x2af
  0029d: call   0xffff714c
  002a2: test   rax,rax
  002a5: je     0x3ad2a
  002ab: movq   xmm3,xmm0
  002af: mov    rdi,QWORD PTR [rbp-0x50]
  002b3: test   rdi,0x1
  002ba: jne    0x3ad46
  002c0: test   rdi,0x2
  002c7: je     0x303
  002cd: xorps  xmm4,xmm4
  002d0: movabs rax,0x8000000000000002
  002da: cmp    rdi,rax
  002dd: je     0x315
  002e3: mov    rax,rdi
  002e6: sar    rax,0x3f
  002ea: add    rax,0x2
  002ee: and    rdi,0xfffffffffffffffc
  002f2: or     rdi,rax
  002f5: rol    rdi,0x3d
  002f9: movq   xmm4,rdi
  002fe: jmp    0x315
  00303: call   0xffff714c
  00308: test   rax,rax
  0030b: je     0x3ad46
  00311: movq   xmm4,xmm0
  00315: mulsd  xmm3,xmm4
:00011 %3 = %3 + %4                         [Float][Float]
  00319: addsd  xmm2,xmm3
:00012 %1 = %2.call sqrt(%3; 1)             [#<Class:Math>]
  0031d: mov    rdi,QWORD PTR [rbp-0x38]
  00321: test   rdi,0x7
  00328: jne    0x3ad62
  0032e: cmp    DWORD PTR [rdi+0x4],0x21
  00332: jne    0x3ad62
  00338: cmp    DWORD PTR [rip+0xffffffffffff98b2],0x26        # 0xffff9bf1
  0033f: jne    0x3ad62
  00345: sqrtsd xmm5,xmm2
:00013 
:00015 ret %1
  00349: movq   xmm0,xmm5
  0034d: call   0xffff723f
  00352: mov    QWORD PTR [rbp-0x30],rax
  00356: mov    rax,QWORD PTR [rbp-0x30]
  0035a: leave  
  0035b: ret    
==> start whole compile: initialize FuncId(72) self_class:Ray start:[00000] bytecode:0x563184c9ebc0
<== finished compile. elapsed:7.5µs
offset:Pos(37544) code: 81 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x40],0x4
  00010: mov    rdi,QWORD PTR [rbp-0x28]
  00014: test   rdi,0x7
  0001b: jne    0x3aa0b
  00021: cmp    DWORD PTR [rdi+0x4],0x2e
  00025: jne    0x3aa0b
:00000 @org: Ray[IvarId(0)] = %1
  0002b: mov    rdi,QWORD PTR [rbp-0x28]
  0002f: mov    rax,QWORD PTR [rbp-0x30]
  00033: mov    QWORD PTR [rdi+0x10],rax
:00001 @dir: Ray[IvarId(1)] = %2
  00037: mov    rdi,QWORD PTR [rbp-0x28]
  0003b: mov    rax,QWORD PTR [rbp-0x38]
  0003f: mov    QWORD PTR [rdi+0x18],rax
:00002 %3 = %2
  00043: mov    rax,QWORD PTR [rbp-0x38]
  00047: mov    QWORD PTR [rbp-0x40],rax
:00003 ret %3
  0004b: mov    rax,QWORD PTR [rbp-0x40]
  0004f: leave  
  00050: ret    
==> start whole compile: initialize FuncId(73) self_class:Isect start:[00000] bytecode:0x563184cced70
<== finished compile. elapsed:22.5µs
offset:Pos(37625) code: 675 bytes  data: 172 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x60
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x30],rax
  00013: mov    QWORD PTR [rbp-0x38],rax
  00017: mov    QWORD PTR [rbp-0x40],rax
  0001b: mov    QWORD PTR [rbp-0x48],rax
  0001f: mov    QWORD PTR [rbp-0x50],rax
  00023: mov    rdi,QWORD PTR [rbp-0x28]
  00027: test   rdi,0x7
  0002e: jne    0x3a9c9
  00034: cmp    DWORD PTR [rdi+0x4],0x30
  00038: jne    0x3a9c9
:00000 %1 = literal[10000000.0]
  0003e: movq   xmm2,QWORD PTR [rip+0x261]        # 0x2a7
  00046: movabs rax,0xb18968000000002
  00050: mov    QWORD PTR [rbp-0x30],rax
:00001 @t: Isect[IvarId(0)] = %1
  00054: mov    rdi,QWORD PTR [rbp-0x28]
  00058: mov    rax,QWORD PTR [rbp-0x30]
  0005c: mov    QWORD PTR [rdi+0x10],rax
:00002 %1 = literal[false]
  00060: mov    rax,0x14
  00067: mov    QWORD PTR [rbp-0x30],rax
:00003 @hit: Isect[IvarId(1)] = %1
  0006b: mov    rdi,QWORD PTR [rbp-0x28]
  0006f: mov    rax,QWORD PTR [rbp-0x30]
  00073: mov    QWORD PTR [rdi+0x18],rax
:00004 %2 = const[Vec]                      [Vec]
  00077: mov    rax,QWORD PTR [rip+0xffffffffffff97a9]        # 0xffff9827
  0007e: cmp    rax,QWORD PTR [rip+0x242]        # 0x2c7
  00085: jne    0x3a9d8
  0008b: mov    rax,QWORD PTR [rip+0x225]        # 0x2b7
  00092: mov    QWORD PTR [rbp-0x38],rax
:00005 %3 = literal[0.0]
  00096: movq   xmm2,QWORD PTR [rip+0x239]        # 0x2d7
  0009e: movabs rax,0x8000000000000002
  000a8: mov    QWORD PTR [rbp-0x40],rax
:00006 %4 = literal[0.0]
  000ac: movq   xmm3,QWORD PTR [rip+0x233]        # 0x2e7
  000b4: movabs rax,0x8000000000000002
  000be: mov    QWORD PTR [rbp-0x48],rax
:00007 %5 = literal[0.0]
  000c2: movq   xmm4,QWORD PTR [rip+0x22d]        # 0x2f7
  000ca: movabs rax,0x8000000000000002
  000d4: mov    QWORD PTR [rbp-0x50],rax
:00008 %1 = %2.call new(%3; 3)              [#<Class:Vec>]
  000d8: mov    rdi,QWORD PTR [rbp-0x38]
  000dc: test   rdi,0x7
  000e3: jne    0x3aa1e
  000e9: cmp    DWORD PTR [rdi+0x4],0x29
  000ed: jne    0x3aa1e
  000f3: cmp    DWORD PTR [rip+0xffffffffffff9726],0x26        # 0xffff9820
  000fa: jne    0x3aa1e
  00100: mov    r9,0x0
  00107: sub    rsp,0x20
  0010b: movq   QWORD PTR [rsp],xmm2
  00110: movq   QWORD PTR [rsp+0x8],xmm3
  00116: movq   QWORD PTR [rsp+0x10],xmm4
  0011c: mov    rdx,rdi
  0011f: mov    rax,QWORD PTR [rbx]
  00122: lea    rdi,[rsp-0x18]
  00127: mov    QWORD PTR [rdi],rax
  0012a: mov    QWORD PTR [rbx],rdi
  0012d: mov    QWORD PTR [rsp-0x20],0x0
  00136: mov    QWORD PTR [rsp-0x38],rcx
  0013b: lea    rcx,[rbp-0x40]
  0013f: mov    r8,0x3
  00146: call   0x3aa2d
  0014b: lea    rdi,[rbp-0x8]
  0014f: mov    QWORD PTR [rbx],rdi
  00152: movq   xmm2,QWORD PTR [rsp]
  00157: movq   xmm3,QWORD PTR [rsp+0x8]
  0015d: movq   xmm4,QWORD PTR [rsp+0x10]
  00163: add    rsp,0x20
  00167: movabs r13,0x563184ccee10
  00171: test   rax,rax
  00174: je     0xffff6d42
  0017a: mov    QWORD PTR [rbp-0x30],rax
:00009 
:00011 @pl: Isect[IvarId(2)] = %1
  0017e: mov    rdi,QWORD PTR [rbp-0x28]
  00182: mov    rax,QWORD PTR [rbp-0x30]
  00186: mov    QWORD PTR [rdi+0x20],rax
:00012 %2 = const[Vec]                      [Vec]
  0018a: mov    rax,QWORD PTR [rip+0xffffffffffff9696]        # 0xffff9827
  00191: cmp    rax,QWORD PTR [rip+0x17f]        # 0x317
  00198: jne    0x3aa5f
  0019e: mov    rax,QWORD PTR [rip+0x162]        # 0x307
  001a5: mov    QWORD PTR [rbp-0x38],rax
:00013 %3 = literal[0.0]
  001a9: movq   xmm2,QWORD PTR [rip+0x176]        # 0x327
  001b1: movabs rax,0x8000000000000002
  001bb: mov    QWORD PTR [rbp-0x40],rax
:00014 %4 = literal[0.0]
  001bf: movq   xmm3,QWORD PTR [rip+0x170]        # 0x337
  001c7: movabs rax,0x8000000000000002
  001d1: mov    QWORD PTR [rbp-0x48],rax
:00015 %5 = literal[0.0]
  001d5: movq   xmm4,QWORD PTR [rip+0x16a]        # 0x347
  001dd: movabs rax,0x8000000000000002
  001e7: mov    QWORD PTR [rbp-0x50],rax
:00016 %1 = %2.call new(%3; 3)              [#<Class:Vec>]
  001eb: mov    rdi,QWORD PTR [rbp-0x38]
  001ef: test   rdi,0x7
  001f6: jne    0x3aacf
  001fc: cmp    DWORD PTR [rdi+0x4],0x29
  00200: jne    0x3aacf
  00206: cmp    DWORD PTR [rip+0xffffffffffff9613],0x26        # 0xffff9820
  0020d: jne    0x3aacf
  00213: mov    r9,0x0
  0021a: sub    rsp,0x20
  0021e: movq   QWORD PTR [rsp],xmm2
  00223: movq   QWORD PTR [rsp+0x8],xmm3
  00229: movq   QWORD PTR [rsp+0x10],xmm4
  0022f: mov    rdx,rdi
  00232: mov    rax,QWORD PTR [rbx]
  00235: lea    rdi,[rsp-0x18]
  0023a: mov    QWORD PTR [rdi],rax
  0023d: mov    QWORD PTR [rbx],rdi
  00240: mov    QWORD PTR [rsp-0x20],0x0
  00249: mov    QWORD PTR [rsp-0x38],rcx
  0024e: lea    rcx,[rbp-0x40]
  00252: mov    r8,0x3
  00259: call   0x3aade
  0025e: lea    rdi,[rbp-0x8]
  00262: mov    QWORD PTR [rbx],rdi
  00265: movq   xmm2,QWORD PTR [rsp]
  0026a: movq   xmm3,QWORD PTR [rsp+0x8]
  00270: movq   xmm4,QWORD PTR [rsp+0x10]
  00276: add    rsp,0x20
  0027a: movabs r13,0x563184ccee90
  00284: test   rax,rax
  00287: je     0xffff6d42
  0028d: mov    QWORD PTR [rbp-0x30],rax
:00017 
:00019 @n: Isect[IvarId(3)] = %1
  00291: mov    rdi,QWORD PTR [rbp-0x28]
  00295: mov    rax,QWORD PTR [rbp-0x30]
  00299: mov    QWORD PTR [rdi+0x28],rax
:00020 ret %1
  0029d: mov    rax,QWORD PTR [rbp-0x30]
  002a1: leave  
  002a2: ret    
==> start whole compile: intersect FuncId(71) self_class:Plane start:[00000] bytecode:0x563184c872a0
<== finished compile. elapsed:115.8µs
offset:Pos(38472) code: 6629 bytes  data: 347 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xa0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044:    	mov    rdi,QWORD PTR [rbp-0x28]
  00048: 00 	test   rdi,0x7
  0004f:    	jne    0x3a7c1
  00055:    	cmp    DWORD PTR [rdi+0x4],0x2c
  00059:    	jne    0x3a7c1
:00000 %7 = @p: Plane[IvarId(0)]
  0005f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00063:    	mov    rax,QWORD PTR [rdi+0x10]
  00067:    	mov    QWORD PTR [rbp-0x60],rax
:00001 %8 = @n: Plane[IvarId(1)]
  0006b:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006f:    	mov    rax,QWORD PTR [rdi+0x18]
  00073:    	mov    QWORD PTR [rbp-0x68],rax
:00002 %3 = %7.call vdot(%8; 1)             [Vec]
  00077:    	mov    rdi,QWORD PTR [rbp-0x60]
  0007b: 00 	test   rdi,0x7
  00082:    	jne    0x3a7d0
  00088:    	cmp    DWORD PTR [rdi+0x4],0x28
  0008c:    	jne    0x3a7d0
  00092: 26 	cmp    DWORD PTR [rip+0xffffffffffff9438],0x26        # 0xffff94d1
  00099:    	jne    0x3a7d0
  0009f:    	mov    rax,QWORD PTR [rbx]
  000a2:    	lea    rdi,[rsp-0x18]
  000a7:    	mov    QWORD PTR [rdi],rax
  000aa:    	mov    QWORD PTR [rbx],rdi
  000ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000b6:    	mov    QWORD PTR [rsp-0x38],rcx
  000bb:    	mov    rax,QWORD PTR [rbp-0x60]
  000bf:    	mov    QWORD PTR [rsp-0x38],rax
  000c4: 00 	mov    rdi,0x1
  000cb:    	mov    rax,QWORD PTR [rbp-0x68]
  000cf:    	mov    QWORD PTR [rsp-0x40],rax
  000d4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  000dd: 05 	movabs rax,0x1000500000041
  000e7:    	mov    QWORD PTR [rsp-0x28],rax
  000ec: 31 	movabs r13,0x563184c66dc0
  000f6:    	call   0xffffa1f4
  000fb:    	lea    rdi,[rbp-0x8]
  000ff:    	mov    QWORD PTR [rbx],rdi
  00102: 31 	movabs r13,0x563184c872e0
  0010c:    	test   rax,rax
  0010f:    	je     0xffff69f3
  00115:    	mov    QWORD PTR [rbp-0x40],rax
:00003 
:00005 %3 = neg %3                          [Float]
  00119:    	mov    rdi,QWORD PTR [rbp-0x40]
  0011d: 00 	test   rdi,0x1
  00124:    	jne    0x3a7df
  0012a: 00 	test   rdi,0x2
  00131:    	je     0x16d
  00137:    	xorps  xmm2,xmm2
  0013a: 00 	movabs rax,0x8000000000000002
  00144:    	cmp    rdi,rax
  00147:    	je     0x17f
  0014d:    	mov    rax,rdi
  00150:    	sar    rax,0x3f
  00154:    	add    rax,0x2
  00158:    	and    rdi,0xfffffffffffffffc
  0015c:    	or     rdi,rax
  0015f:    	rol    rdi,0x3d
  00163:    	movq   xmm2,rdi
  00168:    	jmp    0x17f
  0016d:    	call   0xffff6a2c
  00172:    	test   rax,rax
  00175:    	je     0x3a7df
  0017b:    	movq   xmm2,xmm0
  0017f: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1862]        # 0x19e8
:00006 %7 = %1.call dir()                   [Ray]
  00186:    	mov    rdi,QWORD PTR [rbp-0x30]
  0018a: 00 	test   rdi,0x7
  00191:    	jne    0x3a7ee
  00197:    	cmp    DWORD PTR [rdi+0x4],0x2e
  0019b:    	jne    0x3a7ee
  001a1: 26 	cmp    DWORD PTR [rip+0xffffffffffff9329],0x26        # 0xffff94d1
  001a8:    	jne    0x3a7ee
  001ae:    	mov    esi,DWORD PTR [rip+0x1840]        # 0x19f4
  001b4:    	cmp    esi,0xffffffff
  001b7:    	je     0x3a80a
  001bd:    	cmp    WORD PTR [rdi+0x2],0x3
  001c2:    	jne    0x1db
  001c8:    	cmp    esi,0x6
  001cb:    	jge    0x1db
  001d1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d6:    	jmp    0x1f9
  001db:    	sub    rsp,0x10
  001df:    	movq   QWORD PTR [rsp],xmm2
  001e4: 31 	movabs rax,0x563184053740
  001ee:    	call   rax
  001f0:    	movq   xmm2,QWORD PTR [rsp]
  001f5:    	add    rsp,0x10
  001f9:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = @n: Plane[IvarId(1)]
  001fd:    	mov    rdi,QWORD PTR [rbp-0x28]
  00201:    	mov    rax,QWORD PTR [rdi+0x18]
  00205:    	mov    QWORD PTR [rbp-0x68],rax
:00010 %4 = %7.call vdot(%8; 1)             [Vec]
  00209:    	mov    rdi,QWORD PTR [rbp-0x60]
  0020d: 00 	test   rdi,0x7
  00214:    	jne    0x3a845
  0021a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0021e:    	jne    0x3a845
  00224: 26 	cmp    DWORD PTR [rip+0xffffffffffff92a6],0x26        # 0xffff94d1
  0022b:    	jne    0x3a845
  00231:    	sub    rsp,0x10
  00235:    	movq   QWORD PTR [rsp],xmm2
  0023a:    	mov    rax,QWORD PTR [rbx]
  0023d:    	lea    rdi,[rsp-0x18]
  00242:    	mov    QWORD PTR [rdi],rax
  00245:    	mov    QWORD PTR [rbx],rdi
  00248: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00251:    	mov    QWORD PTR [rsp-0x38],rcx
  00256:    	mov    rax,QWORD PTR [rbp-0x60]
  0025a:    	mov    QWORD PTR [rsp-0x38],rax
  0025f: 00 	mov    rdi,0x1
  00266:    	mov    rax,QWORD PTR [rbp-0x68]
  0026a:    	mov    QWORD PTR [rsp-0x40],rax
  0026f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00278: 05 	movabs rax,0x1000500000041
  00282:    	mov    QWORD PTR [rsp-0x28],rax
  00287: 31 	movabs r13,0x563184c66dc0
  00291:    	call   0xffffa1f4
  00296:    	lea    rdi,[rbp-0x8]
  0029a:    	mov    QWORD PTR [rbx],rdi
  0029d:    	movq   xmm2,QWORD PTR [rsp]
  002a2:    	add    rsp,0x10
  002a6: 31 	movabs r13,0x563184c87360
  002b0:    	test   rax,rax
  002b3:    	je     0xffff69f3
  002b9:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %5 = %4
  002bd:    	mov    rax,QWORD PTR [rbp-0x48]
  002c1:    	mov    QWORD PTR [rbp-0x50],rax
:00014 %7 = literal[0.0]
  002c5: 00 	movq   xmm3,QWORD PTR [rip+0x172b]        # 0x19f8
  002cd: 00 	movabs rax,0x8000000000000002
  002d7:    	mov    QWORD PTR [rbp-0x60],rax
:00015 _%7 = %4 < %7                        [Float][Float]
:00016 condnotbr _%7 =>:00020
  002db:    	mov    rdi,QWORD PTR [rbp-0x48]
  002df: 00 	test   rdi,0x1
  002e6:    	jne    0x3a861
  002ec: 00 	test   rdi,0x2
  002f3:    	je     0x32f
  002f9:    	xorps  xmm4,xmm4
  002fc: 00 	movabs rax,0x8000000000000002
  00306:    	cmp    rdi,rax
  00309:    	je     0x341
  0030f:    	mov    rax,rdi
  00312:    	sar    rax,0x3f
  00316:    	add    rax,0x2
  0031a:    	and    rdi,0xfffffffffffffffc
  0031e:    	or     rdi,rax
  00321:    	rol    rdi,0x3d
  00325:    	movq   xmm4,rdi
  0032a:    	jmp    0x341
  0032f:    	call   0xffff6a2c
  00334:    	test   rax,rax
  00337:    	je     0x3a861
  0033d:    	movq   xmm4,xmm0
  00341:    	ucomisd xmm4,xmm3
  00345:    	jae    0x3a8c8
:00017 %5 = %4
:00018 %5 = neg %5                          [<INVALID>]
  0034b: 01 	sub    DWORD PTR [rip+0x16ae],0x1        # 0x1a00
  00352:    	je     0x3a8a6
  00358:    	movq   xmm0,xmm4
  0035c:    	call   0xffff6b1f
  00361:    	mov    QWORD PTR [rbp-0x50],rax
  00365:    	sub    rsp,0x20
  00369:    	movq   QWORD PTR [rsp],xmm2
  0036e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00374:    	movq   QWORD PTR [rsp+0x10],xmm4
  0037a:    	mov    rdi,QWORD PTR [rbp-0x50]
  0037e:    	mov    rdx,rdi
  00381:    	mov    rdi,rbx
  00384:    	mov    rsi,r12
  00387: 31 	movabs rax,0x5631840873b0
  00391:    	call   rax
  00393:    	movq   xmm2,QWORD PTR [rsp]
  00398:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0039e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003a4:    	add    rsp,0x20
  003a8: 31 	movabs r13,0x563184c873d0
  003b2:    	test   rax,rax
  003b5:    	je     0xffff69f3
  003bb:    	mov    QWORD PTR [rbp-0x50],rax
:00019 br =>:00020
  003bf:    	jmp    0x3a8ee
:00020 %7 = literal[1e-17]
  003c4: 00 	movq   xmm3,QWORD PTR [rip+0x163c]        # 0x1a08
  003cc: aa 	movabs rax,0xe33877aa3236a4ba
  003d6:    	mov    QWORD PTR [rbp-0x60],rax
:00021 _%7 = %5 < %7                        [Float][Float]
:00022 condnotbr _%7 =>:00026
  003da:    	mov    rdi,QWORD PTR [rbp-0x50]
  003de: 00 	test   rdi,0x1
  003e5:    	jne    0x3a914
  003eb: 00 	test   rdi,0x2
  003f2:    	je     0x42e
  003f8:    	xorps  xmm5,xmm5
  003fb: 00 	movabs rax,0x8000000000000002
  00405:    	cmp    rdi,rax
  00408:    	je     0x440
  0040e:    	mov    rax,rdi
  00411:    	sar    rax,0x3f
  00415:    	add    rax,0x2
  00419:    	and    rdi,0xfffffffffffffffc
  0041d:    	or     rdi,rax
  00420:    	rol    rdi,0x3d
  00424:    	movq   xmm5,rdi
  00429:    	jmp    0x440
  0042e:    	call   0xffff6a2c
  00433:    	test   rax,rax
  00436:    	je     0x3a914
  0043c:    	movq   xmm5,xmm0
  00440:    	ucomisd xmm5,xmm3
  00444:    	jae    0x458
:00023 %7 = nil
  0044a: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00024 ret %7
  00452:    	mov    rax,QWORD PTR [rbp-0x60]
  00456:    	leave  
  00457:    	ret    
:00026 %8 = %1.call org()                   [Ray]
  00458:    	mov    rdi,QWORD PTR [rbp-0x30]
  0045c: 00 	test   rdi,0x7
  00463:    	jne    0x3a930
  00469:    	cmp    DWORD PTR [rdi+0x4],0x2e
  0046d:    	jne    0x3a930
  00473: 26 	cmp    DWORD PTR [rip+0xffffffffffff9057],0x26        # 0xffff94d1
  0047a:    	jne    0x3a930
  00480:    	mov    esi,DWORD PTR [rip+0x158e]        # 0x1a14
  00486:    	cmp    esi,0xffffffff
  00489:    	je     0x3a94c
  0048f:    	cmp    WORD PTR [rdi+0x2],0x3
  00494:    	jne    0x4ad
  0049a:    	cmp    esi,0x6
  0049d:    	jge    0x4ad
  004a3:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004a8:    	jmp    0x4ef
  004ad:    	sub    rsp,0x20
  004b1:    	movq   QWORD PTR [rsp],xmm2
  004b6:    	movq   QWORD PTR [rsp+0x8],xmm3
  004bc:    	movq   QWORD PTR [rsp+0x10],xmm4
  004c2:    	movq   QWORD PTR [rsp+0x18],xmm5
  004c8: 31 	movabs rax,0x563184053740
  004d2:    	call   rax
  004d4:    	movq   xmm2,QWORD PTR [rsp]
  004d9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004df:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004e5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  004eb:    	add    rsp,0x20
  004ef:    	mov    QWORD PTR [rbp-0x68],rax
:00027 
:00029 %9 = @n: Plane[IvarId(1)]
  004f3:    	mov    rdi,QWORD PTR [rbp-0x28]
  004f7:    	mov    rax,QWORD PTR [rdi+0x18]
  004fb:    	mov    QWORD PTR [rbp-0x70],rax
:00030 %7 = %8.call vdot(%9; 1)             [Vec]
  004ff:    	mov    rdi,QWORD PTR [rbp-0x68]
  00503: 00 	test   rdi,0x7
  0050a:    	jne    0x3a9ab
  00510:    	cmp    DWORD PTR [rdi+0x4],0x28
  00514:    	jne    0x3a9ab
  0051a: 26 	cmp    DWORD PTR [rip+0xffffffffffff8fb0],0x26        # 0xffff94d1
  00521:    	jne    0x3a9ab
  00527:    	sub    rsp,0x20
  0052b:    	movq   QWORD PTR [rsp],xmm2
  00530:    	movq   QWORD PTR [rsp+0x8],xmm4
  00536:    	movq   QWORD PTR [rsp+0x10],xmm5
  0053c:    	mov    rax,QWORD PTR [rbx]
  0053f:    	lea    rdi,[rsp-0x18]
  00544:    	mov    QWORD PTR [rdi],rax
  00547:    	mov    QWORD PTR [rbx],rdi
  0054a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00553:    	mov    QWORD PTR [rsp-0x38],rcx
  00558:    	mov    rax,QWORD PTR [rbp-0x68]
  0055c:    	mov    QWORD PTR [rsp-0x38],rax
  00561: 00 	mov    rdi,0x1
  00568:    	mov    rax,QWORD PTR [rbp-0x70]
  0056c:    	mov    QWORD PTR [rsp-0x40],rax
  00571: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0057a: 05 	movabs rax,0x1000500000041
  00584:    	mov    QWORD PTR [rsp-0x28],rax
  00589: 31 	movabs r13,0x563184c66dc0
  00593:    	call   0xffffa1f4
  00598:    	lea    rdi,[rbp-0x8]
  0059c:    	mov    QWORD PTR [rbx],rdi
  0059f:    	movq   xmm2,QWORD PTR [rsp]
  005a4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  005aa:    	movq   xmm5,QWORD PTR [rsp+0x10]
  005b0:    	add    rsp,0x20
  005b4: 31 	movabs r13,0x563184c874a0
  005be:    	test   rax,rax
  005c1:    	je     0xffff69f3
  005c7:    	mov    QWORD PTR [rbp-0x60],rax
:00031 
:00033 %7 = %7 + %3                         [Float][Float]
  005cb:    	mov    rdi,QWORD PTR [rbp-0x60]
  005cf: 00 	test   rdi,0x1
  005d6:    	jne    0x3a9c7
  005dc: 00 	test   rdi,0x2
  005e3:    	je     0x61f
  005e9:    	xorps  xmm3,xmm3
  005ec: 00 	movabs rax,0x8000000000000002
  005f6:    	cmp    rdi,rax
  005f9:    	je     0x631
  005ff:    	mov    rax,rdi
  00602:    	sar    rax,0x3f
  00606:    	add    rax,0x2
  0060a:    	and    rdi,0xfffffffffffffffc
  0060e:    	or     rdi,rax
  00611:    	rol    rdi,0x3d
  00615:    	movq   xmm3,rdi
  0061a:    	jmp    0x631
  0061f:    	call   0xffff6a2c
  00624:    	test   rax,rax
  00627:    	je     0x3a9c7
  0062d:    	movq   xmm3,xmm0
  00631:    	addsd  xmm3,xmm2
:00034 %7 = neg %7                          [Float]
  00635: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13dc]        # 0x1a18
:00035 %6 = %7 / %4                         [Float][Float]
  0063c:    	movq   xmm6,xmm3
  00640:    	movq   rax,xmm4
  00645:    	test   rax,rax
  00648:    	je     0xffff6a18
  0064e:    	divsd  xmm6,xmm4
:00036 %7 = literal[0.0]
  00652: 00 	movq   xmm3,QWORD PTR [rip+0x13ce]        # 0x1a28
  0065a: 00 	movabs rax,0x8000000000000002
  00664:    	mov    QWORD PTR [rbp-0x60],rax
:00037 _%7 = %6 > %7                        [Float][Float]
:00038 condnotbr _%7 =>:00105
  00668:    	ucomisd xmm6,xmm3
  0066c:    	jbe    0x3b940
:00039 %7 = %2.call t()                     [<INVALID>]
  00672: 01 	sub    DWORD PTR [rip+0x13b7],0x1        # 0x1a30
  00679:    	je     0x3aa0c
  0067f:    	sub    rsp,0x20
  00683:    	movq   QWORD PTR [rsp],xmm2
  00688:    	movq   QWORD PTR [rsp+0x8],xmm4
  0068e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00694:    	movq   QWORD PTR [rsp+0x18],xmm6
  0069a:    	mov    rdi,QWORD PTR [rbp-0x38]
  0069e: 31 	movabs rax,0x5631840958d0
  006a8:    	call   rax
  006aa:    	mov    r15d,eax
  006ad: 00 	cmp    r15d,DWORD PTR [rip+0x1384]        # 0x1a38
  006b4:    	jne    0x3aa2e
  006ba:    	mov    eax,DWORD PTR [rip+0xffffffffffff8e11]        # 0xffff94d1
  006c0:    	cmp    DWORD PTR [rip+0x136e],eax        # 0x1a34
  006c6:    	jne    0x3aa2e
  006cc:    	mov    rax,QWORD PTR [rbx]
  006cf:    	lea    rdi,[rsp-0x18]
  006d4:    	mov    QWORD PTR [rdi],rax
  006d7:    	mov    QWORD PTR [rbx],rdi
  006da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006e3:    	mov    QWORD PTR [rsp-0x38],rcx
  006e8:    	mov    rax,QWORD PTR [rbp-0x38]
  006ec:    	mov    QWORD PTR [rsp-0x38],rax
  006f1: 00 	mov    rdi,0x0
  006f8: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00701: 00 	movabs rax,0x0
  0070b:    	mov    QWORD PTR [rsp-0x28],rax
  00710: 00 	movabs r13,0x0
  0071a:    	call   0xffff69b8
  0071f:    	lea    rdi,[rbp-0x8]
  00723:    	mov    QWORD PTR [rbx],rdi
  00726:    	movq   xmm2,QWORD PTR [rsp]
  0072b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00731:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00737:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0073d:    	add    rsp,0x20
  00741:    	test   rax,rax
  00744:    	je     0x3aa9a
  0074a:    	mov    QWORD PTR [rbp-0x60],rax
:00040 
:00042 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00043 condnotbr _%7 =>:00105
  0074e:    	movq   xmm0,xmm6
  00752:    	call   0xffff6b1f
  00757:    	mov    QWORD PTR [rbp-0x58],rax
  0075b:    	mov    rdi,QWORD PTR [rbp-0x58]
  0075f:    	mov    rsi,QWORD PTR [rbp-0x60]
  00763: 00 	test   rdi,0x1
  0076a:    	je     0x3aaa9
  00770: 00 	test   rsi,0x1
  00777:    	je     0x3aaa9
  0077d:    	cmp    rdi,rsi
  00780:    	jge    0x3b973
:00044 %7 = literal[true]
  00786: 00 	mov    rax,0x1c
  0078d:    	mov    QWORD PTR [rbp-0x60],rax
:00045 _ = %2.call hit=(%7; 1)              [<INVALID>]
  00791: 01 	sub    DWORD PTR [rip+0x12a4],0x1        # 0x1a3c
  00798:    	je     0x3ab1a
  0079e:    	sub    rsp,0x20
  007a2:    	movq   QWORD PTR [rsp],xmm2
  007a7:    	movq   QWORD PTR [rsp+0x8],xmm4
  007ad:    	movq   QWORD PTR [rsp+0x10],xmm5
  007b3:    	movq   QWORD PTR [rsp+0x18],xmm6
  007b9:    	mov    rdi,QWORD PTR [rbp-0x38]
  007bd: 31 	movabs rax,0x5631840958d0
  007c7:    	call   rax
  007c9:    	mov    r15d,eax
  007cc: 00 	cmp    r15d,DWORD PTR [rip+0x1271]        # 0x1a44
  007d3:    	jne    0x3ab3c
  007d9:    	mov    eax,DWORD PTR [rip+0xffffffffffff8cf2]        # 0xffff94d1
  007df:    	cmp    DWORD PTR [rip+0x125b],eax        # 0x1a40
  007e5:    	jne    0x3ab3c
  007eb:    	mov    rax,QWORD PTR [rbx]
  007ee:    	lea    rdi,[rsp-0x18]
  007f3:    	mov    QWORD PTR [rdi],rax
  007f6:    	mov    QWORD PTR [rbx],rdi
  007f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00802:    	mov    QWORD PTR [rsp-0x38],rcx
  00807:    	mov    rax,QWORD PTR [rbp-0x38]
  0080b:    	mov    QWORD PTR [rsp-0x38],rax
  00810: 00 	mov    rdi,0x1
  00817:    	mov    rax,QWORD PTR [rbp-0x60]
  0081b:    	mov    QWORD PTR [rsp-0x40],rax
  00820: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00829: 00 	movabs rax,0x0
  00833:    	mov    QWORD PTR [rsp-0x28],rax
  00838: 00 	movabs r13,0x0
  00842:    	call   0xffff69b8
  00847:    	lea    rdi,[rbp-0x8]
  0084b:    	mov    QWORD PTR [rbx],rdi
  0084e:    	movq   xmm2,QWORD PTR [rsp]
  00853:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00859:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0085f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00865:    	add    rsp,0x20
  00869:    	test   rax,rax
  0086c:    	je     0x3aba8
:00046 
:00048 _ = %2.call t=(%6; 1)                [<INVALID>]
  00872: 01 	sub    DWORD PTR [rip+0x11cf],0x1        # 0x1a48
  00879:    	je     0x3abd3
  0087f:    	sub    rsp,0x20
  00883:    	movq   QWORD PTR [rsp],xmm2
  00888:    	movq   QWORD PTR [rsp+0x8],xmm4
  0088e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00894:    	movq   QWORD PTR [rsp+0x18],xmm6
  0089a:    	mov    rdi,QWORD PTR [rbp-0x38]
  0089e: 31 	movabs rax,0x5631840958d0
  008a8:    	call   rax
  008aa:    	mov    r15d,eax
  008ad: 00 	cmp    r15d,DWORD PTR [rip+0x119c]        # 0x1a50
  008b4:    	jne    0x3abf5
  008ba:    	mov    eax,DWORD PTR [rip+0xffffffffffff8c11]        # 0xffff94d1
  008c0:    	cmp    DWORD PTR [rip+0x1186],eax        # 0x1a4c
  008c6:    	jne    0x3abf5
  008cc:    	mov    rax,QWORD PTR [rbx]
  008cf:    	lea    rdi,[rsp-0x18]
  008d4:    	mov    QWORD PTR [rdi],rax
  008d7:    	mov    QWORD PTR [rbx],rdi
  008da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008e3:    	mov    QWORD PTR [rsp-0x38],rcx
  008e8:    	mov    rax,QWORD PTR [rbp-0x38]
  008ec:    	mov    QWORD PTR [rsp-0x38],rax
  008f1: 00 	mov    rdi,0x1
  008f8:    	mov    rax,QWORD PTR [rbp-0x58]
  008fc:    	mov    QWORD PTR [rsp-0x40],rax
  00901: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0090a: 00 	movabs rax,0x0
  00914:    	mov    QWORD PTR [rsp-0x28],rax
  00919: 00 	movabs r13,0x0
  00923:    	call   0xffff69b8
  00928:    	lea    rdi,[rbp-0x8]
  0092c:    	mov    QWORD PTR [rbx],rdi
  0092f:    	movq   xmm2,QWORD PTR [rsp]
  00934:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0093a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00940:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00946:    	add    rsp,0x20
  0094a:    	test   rax,rax
  0094d:    	je     0x3ac61
:00049 
:00051 %7 = @n: <INVALID>[IvarId(0)]
  00953:    	mov    rdi,QWORD PTR [rbp-0x28]
  00957:    	sub    rsp,0x20
  0095b:    	movq   QWORD PTR [rsp],xmm2
  00960:    	movq   QWORD PTR [rsp+0x8],xmm4
  00966:    	movq   QWORD PTR [rsp+0x10],xmm5
  0096c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00972: 00 	mov    rsi,0x8c
  00979:    	mov    rdx,r12
  0097c: 31 	movabs rax,0x5631840b8770
  00986:    	call   rax
  00988:    	movq   xmm2,QWORD PTR [rsp]
  0098d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00993:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00999:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0099f:    	add    rsp,0x20
  009a3:    	mov    QWORD PTR [rbp-0x60],rax
:00052 _ = %2.call n=(%7; 1)                [<INVALID>]
  009a7: 01 	sub    DWORD PTR [rip+0x10a6],0x1        # 0x1a54
  009ae:    	je     0x3ac8c
  009b4:    	sub    rsp,0x20
  009b8:    	movq   QWORD PTR [rsp],xmm2
  009bd:    	movq   QWORD PTR [rsp+0x8],xmm4
  009c3:    	movq   QWORD PTR [rsp+0x10],xmm5
  009c9:    	movq   QWORD PTR [rsp+0x18],xmm6
  009cf:    	mov    rdi,QWORD PTR [rbp-0x38]
  009d3: 31 	movabs rax,0x5631840958d0
  009dd:    	call   rax
  009df:    	mov    r15d,eax
  009e2: 00 	cmp    r15d,DWORD PTR [rip+0x1073]        # 0x1a5c
  009e9:    	jne    0x3acae
  009ef:    	mov    eax,DWORD PTR [rip+0xffffffffffff8adc]        # 0xffff94d1
  009f5:    	cmp    DWORD PTR [rip+0x105d],eax        # 0x1a58
  009fb:    	jne    0x3acae
  00a01:    	mov    rax,QWORD PTR [rbx]
  00a04:    	lea    rdi,[rsp-0x18]
  00a09:    	mov    QWORD PTR [rdi],rax
  00a0c:    	mov    QWORD PTR [rbx],rdi
  00a0f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a18:    	mov    QWORD PTR [rsp-0x38],rcx
  00a1d:    	mov    rax,QWORD PTR [rbp-0x38]
  00a21:    	mov    QWORD PTR [rsp-0x38],rax
  00a26: 00 	mov    rdi,0x1
  00a2d:    	mov    rax,QWORD PTR [rbp-0x60]
  00a31:    	mov    QWORD PTR [rsp-0x40],rax
  00a36: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a3f: 00 	movabs rax,0x0
  00a49:    	mov    QWORD PTR [rsp-0x28],rax
  00a4e: 00 	movabs r13,0x0
  00a58:    	call   0xffff69b8
  00a5d:    	lea    rdi,[rbp-0x8]
  00a61:    	mov    QWORD PTR [rbx],rdi
  00a64:    	movq   xmm2,QWORD PTR [rsp]
  00a69:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a6f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a75:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a7b:    	add    rsp,0x20
  00a7f:    	test   rax,rax
  00a82:    	je     0x3ad1a
:00053 
:00055 %8 = const[Vec]                      [<INVALID>]
  00a88: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff8a49]        # 0xffff94d8
  00a8f: 00 	cmp    rax,QWORD PTR [rip+0xfe2]        # 0x1a78
  00a96:    	jne    0x3ad29
  00a9c: 00 	mov    rax,QWORD PTR [rip+0xfc5]        # 0x1a68
  00aa3:    	mov    QWORD PTR [rbp-0x68],rax
:00056 %10 = %1.call org()                  [<INVALID>]
  00aa7: 01 	sub    DWORD PTR [rip+0xfd2],0x1        # 0x1a80
  00aae:    	je     0x3adc1
  00ab4:    	sub    rsp,0x20
  00ab8:    	movq   QWORD PTR [rsp],xmm2
  00abd:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ac3:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ac9:    	movq   QWORD PTR [rsp+0x18],xmm6
  00acf:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ad3: 31 	movabs rax,0x5631840958d0
  00add:    	call   rax
  00adf:    	mov    r15d,eax
  00ae2: 00 	cmp    r15d,DWORD PTR [rip+0xf9f]        # 0x1a88
  00ae9:    	jne    0x3ade3
  00aef:    	mov    eax,DWORD PTR [rip+0xffffffffffff89dc]        # 0xffff94d1
  00af5:    	cmp    DWORD PTR [rip+0xf89],eax        # 0x1a84
  00afb:    	jne    0x3ade3
  00b01:    	mov    rax,QWORD PTR [rbx]
  00b04:    	lea    rdi,[rsp-0x18]
  00b09:    	mov    QWORD PTR [rdi],rax
  00b0c:    	mov    QWORD PTR [rbx],rdi
  00b0f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b18:    	mov    QWORD PTR [rsp-0x38],rcx
  00b1d:    	mov    rax,QWORD PTR [rbp-0x30]
  00b21:    	mov    QWORD PTR [rsp-0x38],rax
  00b26: 00 	mov    rdi,0x0
  00b2d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b36: 00 	movabs rax,0x0
  00b40:    	mov    QWORD PTR [rsp-0x28],rax
  00b45: 00 	movabs r13,0x0
  00b4f:    	call   0xffff69b8
  00b54:    	lea    rdi,[rbp-0x8]
  00b58:    	mov    QWORD PTR [rbx],rdi
  00b5b:    	movq   xmm2,QWORD PTR [rsp]
  00b60:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b66:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b6c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b72:    	add    rsp,0x20
  00b76:    	test   rax,rax
  00b79:    	je     0x3ae4f
  00b7f:    	mov    QWORD PTR [rbp-0x78],rax
:00057 
:00059 %9 = %10.call x()                    [<INVALID>]
  00b83: 01 	sub    DWORD PTR [rip+0xf02],0x1        # 0x1a8c
  00b8a:    	je     0x3ae7a
  00b90:    	sub    rsp,0x20
  00b94:    	movq   QWORD PTR [rsp],xmm2
  00b99:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b9f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ba5:    	movq   QWORD PTR [rsp+0x18],xmm6
  00bab:    	mov    rdi,QWORD PTR [rbp-0x78]
  00baf: 31 	movabs rax,0x5631840958d0
  00bb9:    	call   rax
  00bbb:    	mov    r15d,eax
  00bbe: 00 	cmp    r15d,DWORD PTR [rip+0xecf]        # 0x1a94
  00bc5:    	jne    0x3ae9c
  00bcb:    	mov    eax,DWORD PTR [rip+0xffffffffffff8900]        # 0xffff94d1
  00bd1:    	cmp    DWORD PTR [rip+0xeb9],eax        # 0x1a90
  00bd7:    	jne    0x3ae9c
  00bdd:    	mov    rax,QWORD PTR [rbx]
  00be0:    	lea    rdi,[rsp-0x18]
  00be5:    	mov    QWORD PTR [rdi],rax
  00be8:    	mov    QWORD PTR [rbx],rdi
  00beb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00bf4:    	mov    QWORD PTR [rsp-0x38],rcx
  00bf9:    	mov    rax,QWORD PTR [rbp-0x78]
  00bfd:    	mov    QWORD PTR [rsp-0x38],rax
  00c02: 00 	mov    rdi,0x0
  00c09: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c12: 00 	movabs rax,0x0
  00c1c:    	mov    QWORD PTR [rsp-0x28],rax
  00c21: 00 	movabs r13,0x0
  00c2b:    	call   0xffff69b8
  00c30:    	lea    rdi,[rbp-0x8]
  00c34:    	mov    QWORD PTR [rbx],rdi
  00c37:    	movq   xmm2,QWORD PTR [rsp]
  00c3c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c42:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c48:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c4e:    	add    rsp,0x20
  00c52:    	test   rax,rax
  00c55:    	je     0x3af08
  00c5b:    	mov    QWORD PTR [rbp-0x70],rax
:00060 
:00062 %11 = %1.call dir()                  [<INVALID>]
  00c5f: 01 	sub    DWORD PTR [rip+0xe32],0x1        # 0x1a98
  00c66:    	je     0x3af33
  00c6c:    	sub    rsp,0x20
  00c70:    	movq   QWORD PTR [rsp],xmm2
  00c75:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c7b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c81:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c87:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c8b: 31 	movabs rax,0x5631840958d0
  00c95:    	call   rax
  00c97:    	mov    r15d,eax
  00c9a: 00 	cmp    r15d,DWORD PTR [rip+0xdff]        # 0x1aa0
  00ca1:    	jne    0x3af55
  00ca7:    	mov    eax,DWORD PTR [rip+0xffffffffffff8824]        # 0xffff94d1
  00cad:    	cmp    DWORD PTR [rip+0xde9],eax        # 0x1a9c
  00cb3:    	jne    0x3af55
  00cb9:    	mov    rax,QWORD PTR [rbx]
  00cbc:    	lea    rdi,[rsp-0x18]
  00cc1:    	mov    QWORD PTR [rdi],rax
  00cc4:    	mov    QWORD PTR [rbx],rdi
  00cc7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cd0:    	mov    QWORD PTR [rsp-0x38],rcx
  00cd5:    	mov    rax,QWORD PTR [rbp-0x30]
  00cd9:    	mov    QWORD PTR [rsp-0x38],rax
  00cde: 00 	mov    rdi,0x0
  00ce5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cee: 00 	movabs rax,0x0
  00cf8:    	mov    QWORD PTR [rsp-0x28],rax
  00cfd: 00 	movabs r13,0x0
  00d07:    	call   0xffff69b8
  00d0c:    	lea    rdi,[rbp-0x8]
  00d10:    	mov    QWORD PTR [rbx],rdi
  00d13:    	movq   xmm2,QWORD PTR [rsp]
  00d18:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d1e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d24:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d2a:    	add    rsp,0x20
  00d2e:    	test   rax,rax
  00d31:    	je     0x3afc1
  00d37:    	mov    QWORD PTR [rbp-0x80],rax
:00063 
:00065 %10 = %11.call x()                   [<INVALID>]
  00d3b: 01 	sub    DWORD PTR [rip+0xd62],0x1        # 0x1aa4
  00d42:    	je     0x3afec
  00d48:    	sub    rsp,0x20
  00d4c:    	movq   QWORD PTR [rsp],xmm2
  00d51:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d57:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d5d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d63:    	mov    rdi,QWORD PTR [rbp-0x80]
  00d67: 31 	movabs rax,0x5631840958d0
  00d71:    	call   rax
  00d73:    	mov    r15d,eax
  00d76: 00 	cmp    r15d,DWORD PTR [rip+0xd2f]        # 0x1aac
  00d7d:    	jne    0x3b00e
  00d83:    	mov    eax,DWORD PTR [rip+0xffffffffffff8748]        # 0xffff94d1
  00d89:    	cmp    DWORD PTR [rip+0xd19],eax        # 0x1aa8
  00d8f:    	jne    0x3b00e
  00d95:    	mov    rax,QWORD PTR [rbx]
  00d98:    	lea    rdi,[rsp-0x18]
  00d9d:    	mov    QWORD PTR [rdi],rax
  00da0:    	mov    QWORD PTR [rbx],rdi
  00da3: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00dac:    	mov    QWORD PTR [rsp-0x38],rcx
  00db1:    	mov    rax,QWORD PTR [rbp-0x80]
  00db5:    	mov    QWORD PTR [rsp-0x38],rax
  00dba: 00 	mov    rdi,0x0
  00dc1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00dca: 00 	movabs rax,0x0
  00dd4:    	mov    QWORD PTR [rsp-0x28],rax
  00dd9: 00 	movabs r13,0x0
  00de3:    	call   0xffff69b8
  00de8:    	lea    rdi,[rbp-0x8]
  00dec:    	mov    QWORD PTR [rbx],rdi
  00def:    	movq   xmm2,QWORD PTR [rsp]
  00df4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00dfa:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e00:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e06:    	add    rsp,0x20
  00e0a:    	test   rax,rax
  00e0d:    	je     0x3b07a
  00e13:    	mov    QWORD PTR [rbp-0x78],rax
:00066 
:00068 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00e17: 01 	sub    DWORD PTR [rip+0xc92],0x1        # 0x1ab0
  00e1e:    	je     0x3b0a5
  00e24:    	mov    rdi,QWORD PTR [rbp-0x58]
  00e28:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e2c:    	sub    rsp,0x20
  00e30:    	movq   QWORD PTR [rsp],xmm2
  00e35:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e3b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e41:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e47:    	mov    rdx,rdi
  00e4a:    	mov    rcx,rsi
  00e4d:    	mov    rdi,rbx
  00e50:    	mov    rsi,r12
  00e53: 31 	movabs rax,0x563184089e00
  00e5d:    	call   rax
  00e5f:    	movq   xmm2,QWORD PTR [rsp]
  00e64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e6a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e70:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e76:    	add    rsp,0x20
  00e7a: 31 	movabs r13,0x563184c876f0
  00e84:    	test   rax,rax
  00e87:    	je     0xffff69f3
  00e8d:    	mov    QWORD PTR [rbp-0x78],rax
:00069 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00e91: 01 	sub    DWORD PTR [rip+0xc1c],0x1        # 0x1ab4
  00e98:    	je     0x3b0e3
  00e9e:    	mov    rdi,QWORD PTR [rbp-0x70]
  00ea2:    	mov    rsi,QWORD PTR [rbp-0x78]
  00ea6:    	sub    rsp,0x20
  00eaa:    	movq   QWORD PTR [rsp],xmm2
  00eaf:    	movq   QWORD PTR [rsp+0x8],xmm4
  00eb5:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ebb:    	movq   QWORD PTR [rsp+0x18],xmm6
  00ec1:    	mov    rdx,rdi
  00ec4:    	mov    rcx,rsi
  00ec7:    	mov    rdi,rbx
  00eca:    	mov    rsi,r12
  00ecd: 31 	movabs rax,0x563184087f80
  00ed7:    	call   rax
  00ed9:    	movq   xmm2,QWORD PTR [rsp]
  00ede:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ee4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00eea:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ef0:    	add    rsp,0x20
  00ef4: 31 	movabs r13,0x563184c87700
  00efe:    	test   rax,rax
  00f01:    	je     0xffff69f3
  00f07:    	mov    QWORD PTR [rbp-0x70],rax
:00070 %11 = %1.call org()                  [<INVALID>]
  00f0b: 01 	sub    DWORD PTR [rip+0xba6],0x1        # 0x1ab8
  00f12:    	je     0x3b121
  00f18:    	sub    rsp,0x20
  00f1c:    	movq   QWORD PTR [rsp],xmm2
  00f21:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f27:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f2d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f33:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f37: 31 	movabs rax,0x5631840958d0
  00f41:    	call   rax
  00f43:    	mov    r15d,eax
  00f46: 00 	cmp    r15d,DWORD PTR [rip+0xb73]        # 0x1ac0
  00f4d:    	jne    0x3b143
  00f53:    	mov    eax,DWORD PTR [rip+0xffffffffffff8578]        # 0xffff94d1
  00f59:    	cmp    DWORD PTR [rip+0xb5d],eax        # 0x1abc
  00f5f:    	jne    0x3b143
  00f65:    	mov    rax,QWORD PTR [rbx]
  00f68:    	lea    rdi,[rsp-0x18]
  00f6d:    	mov    QWORD PTR [rdi],rax
  00f70:    	mov    QWORD PTR [rbx],rdi
  00f73: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f7c:    	mov    QWORD PTR [rsp-0x38],rcx
  00f81:    	mov    rax,QWORD PTR [rbp-0x30]
  00f85:    	mov    QWORD PTR [rsp-0x38],rax
  00f8a: 00 	mov    rdi,0x0
  00f91: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f9a: 00 	movabs rax,0x0
  00fa4:    	mov    QWORD PTR [rsp-0x28],rax
  00fa9: 00 	movabs r13,0x0
  00fb3:    	call   0xffff69b8
  00fb8:    	lea    rdi,[rbp-0x8]
  00fbc:    	mov    QWORD PTR [rbx],rdi
  00fbf:    	movq   xmm2,QWORD PTR [rsp]
  00fc4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fca:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00fd0:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00fd6:    	add    rsp,0x20
  00fda:    	test   rax,rax
  00fdd:    	je     0x3b1af
  00fe3:    	mov    QWORD PTR [rbp-0x80],rax
:00071 
:00073 %10 = %11.call y()                   [<INVALID>]
  00fe7: 01 	sub    DWORD PTR [rip+0xad6],0x1        # 0x1ac4
  00fee:    	je     0x3b1da
  00ff4:    	sub    rsp,0x20
  00ff8:    	movq   QWORD PTR [rsp],xmm2
  00ffd:    	movq   QWORD PTR [rsp+0x8],xmm4
  01003:    	movq   QWORD PTR [rsp+0x10],xmm5
  01009:    	movq   QWORD PTR [rsp+0x18],xmm6
  0100f:    	mov    rdi,QWORD PTR [rbp-0x80]
  01013: 31 	movabs rax,0x5631840958d0
  0101d:    	call   rax
  0101f:    	mov    r15d,eax
  01022: 00 	cmp    r15d,DWORD PTR [rip+0xaa3]        # 0x1acc
  01029:    	jne    0x3b1fc
  0102f:    	mov    eax,DWORD PTR [rip+0xffffffffffff849c]        # 0xffff94d1
  01035:    	cmp    DWORD PTR [rip+0xa8d],eax        # 0x1ac8
  0103b:    	jne    0x3b1fc
  01041:    	mov    rax,QWORD PTR [rbx]
  01044:    	lea    rdi,[rsp-0x18]
  01049:    	mov    QWORD PTR [rdi],rax
  0104c:    	mov    QWORD PTR [rbx],rdi
  0104f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01058:    	mov    QWORD PTR [rsp-0x38],rcx
  0105d:    	mov    rax,QWORD PTR [rbp-0x80]
  01061:    	mov    QWORD PTR [rsp-0x38],rax
  01066: 00 	mov    rdi,0x0
  0106d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01076: 00 	movabs rax,0x0
  01080:    	mov    QWORD PTR [rsp-0x28],rax
  01085: 00 	movabs r13,0x0
  0108f:    	call   0xffff69b8
  01094:    	lea    rdi,[rbp-0x8]
  01098:    	mov    QWORD PTR [rbx],rdi
  0109b:    	movq   xmm2,QWORD PTR [rsp]
  010a0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010a6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010ac:    	movq   xmm6,QWORD PTR [rsp+0x18]
  010b2:    	add    rsp,0x20
  010b6:    	test   rax,rax
  010b9:    	je     0x3b268
  010bf:    	mov    QWORD PTR [rbp-0x78],rax
:00074 
:00076 %12 = %1.call dir()                  [<INVALID>]
  010c3: 01 	sub    DWORD PTR [rip+0xa06],0x1        # 0x1ad0
  010ca:    	je     0x3b293
  010d0:    	sub    rsp,0x20
  010d4:    	movq   QWORD PTR [rsp],xmm2
  010d9:    	movq   QWORD PTR [rsp+0x8],xmm4
  010df:    	movq   QWORD PTR [rsp+0x10],xmm5
  010e5:    	movq   QWORD PTR [rsp+0x18],xmm6
  010eb:    	mov    rdi,QWORD PTR [rbp-0x30]
  010ef: 31 	movabs rax,0x5631840958d0
  010f9:    	call   rax
  010fb:    	mov    r15d,eax
  010fe: 00 	cmp    r15d,DWORD PTR [rip+0x9d3]        # 0x1ad8
  01105:    	jne    0x3b2b5
  0110b:    	mov    eax,DWORD PTR [rip+0xffffffffffff83c0]        # 0xffff94d1
  01111:    	cmp    DWORD PTR [rip+0x9bd],eax        # 0x1ad4
  01117:    	jne    0x3b2b5
  0111d:    	mov    rax,QWORD PTR [rbx]
  01120:    	lea    rdi,[rsp-0x18]
  01125:    	mov    QWORD PTR [rdi],rax
  01128:    	mov    QWORD PTR [rbx],rdi
  0112b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01134:    	mov    QWORD PTR [rsp-0x38],rcx
  01139:    	mov    rax,QWORD PTR [rbp-0x30]
  0113d:    	mov    QWORD PTR [rsp-0x38],rax
  01142: 00 	mov    rdi,0x0
  01149: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01152: 00 	movabs rax,0x0
  0115c:    	mov    QWORD PTR [rsp-0x28],rax
  01161: 00 	movabs r13,0x0
  0116b:    	call   0xffff69b8
  01170:    	lea    rdi,[rbp-0x8]
  01174:    	mov    QWORD PTR [rbx],rdi
  01177:    	movq   xmm2,QWORD PTR [rsp]
  0117c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01182:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01188:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0118e:    	add    rsp,0x20
  01192:    	test   rax,rax
  01195:    	je     0x3b321
  0119b: ff 	mov    QWORD PTR [rbp-0x88],rax
:00077 
:00079 %11 = %12.call y()                   [<INVALID>]
  011a2: 01 	sub    DWORD PTR [rip+0x933],0x1        # 0x1adc
  011a9:    	je     0x3b34c
  011af:    	sub    rsp,0x20
  011b3:    	movq   QWORD PTR [rsp],xmm2
  011b8:    	movq   QWORD PTR [rsp+0x8],xmm4
  011be:    	movq   QWORD PTR [rsp+0x10],xmm5
  011c4:    	movq   QWORD PTR [rsp+0x18],xmm6
  011ca: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  011d1: 31 	movabs rax,0x5631840958d0
  011db:    	call   rax
  011dd:    	mov    r15d,eax
  011e0: 00 	cmp    r15d,DWORD PTR [rip+0x8fd]        # 0x1ae4
  011e7:    	jne    0x3b36e
  011ed:    	mov    eax,DWORD PTR [rip+0xffffffffffff82de]        # 0xffff94d1
  011f3:    	cmp    DWORD PTR [rip+0x8e7],eax        # 0x1ae0
  011f9:    	jne    0x3b36e
  011ff:    	mov    rax,QWORD PTR [rbx]
  01202:    	lea    rdi,[rsp-0x18]
  01207:    	mov    QWORD PTR [rdi],rax
  0120a:    	mov    QWORD PTR [rbx],rdi
  0120d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01216:    	mov    QWORD PTR [rsp-0x38],rcx
  0121b: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01222:    	mov    QWORD PTR [rsp-0x38],rax
  01227: 00 	mov    rdi,0x0
  0122e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01237: 00 	movabs rax,0x0
  01241:    	mov    QWORD PTR [rsp-0x28],rax
  01246: 00 	movabs r13,0x0
  01250:    	call   0xffff69b8
  01255:    	lea    rdi,[rbp-0x8]
  01259:    	mov    QWORD PTR [rbx],rdi
  0125c:    	movq   xmm2,QWORD PTR [rsp]
  01261:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01267:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0126d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01273:    	add    rsp,0x20
  01277:    	test   rax,rax
  0127a:    	je     0x3b3dd
  01280:    	mov    QWORD PTR [rbp-0x80],rax
:00080 
:00082 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  01284: 01 	sub    DWORD PTR [rip+0x85d],0x1        # 0x1ae8
  0128b:    	je     0x3b408
  01291:    	mov    rdi,QWORD PTR [rbp-0x58]
  01295:    	mov    rsi,QWORD PTR [rbp-0x80]
  01299:    	sub    rsp,0x20
  0129d:    	movq   QWORD PTR [rsp],xmm2
  012a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  012a8:    	movq   QWORD PTR [rsp+0x10],xmm5
  012ae:    	movq   QWORD PTR [rsp+0x18],xmm6
  012b4:    	mov    rdx,rdi
  012b7:    	mov    rcx,rsi
  012ba:    	mov    rdi,rbx
  012bd:    	mov    rsi,r12
  012c0: 31 	movabs rax,0x563184089e00
  012ca:    	call   rax
  012cc:    	movq   xmm2,QWORD PTR [rsp]
  012d1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012d7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012dd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012e3:    	add    rsp,0x20
  012e7: 31 	movabs r13,0x563184c877d0
  012f1:    	test   rax,rax
  012f4:    	je     0xffff69f3
  012fa:    	mov    QWORD PTR [rbp-0x80],rax
:00083 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  012fe: 01 	sub    DWORD PTR [rip+0x7e7],0x1        # 0x1aec
  01305:    	je     0x3b446
  0130b:    	mov    rdi,QWORD PTR [rbp-0x78]
  0130f:    	mov    rsi,QWORD PTR [rbp-0x80]
  01313:    	sub    rsp,0x20
  01317:    	movq   QWORD PTR [rsp],xmm2
  0131c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01322:    	movq   QWORD PTR [rsp+0x10],xmm5
  01328:    	movq   QWORD PTR [rsp+0x18],xmm6
  0132e:    	mov    rdx,rdi
  01331:    	mov    rcx,rsi
  01334:    	mov    rdi,rbx
  01337:    	mov    rsi,r12
  0133a: 31 	movabs rax,0x563184087f80
  01344:    	call   rax
  01346:    	movq   xmm2,QWORD PTR [rsp]
  0134b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01351:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01357:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0135d:    	add    rsp,0x20
  01361: 31 	movabs r13,0x563184c877e0
  0136b:    	test   rax,rax
  0136e:    	je     0xffff69f3
  01374:    	mov    QWORD PTR [rbp-0x78],rax
:00084 %12 = %1.call org()                  [<INVALID>]
  01378: 01 	sub    DWORD PTR [rip+0x771],0x1        # 0x1af0
  0137f:    	je     0x3b484
  01385:    	sub    rsp,0x20
  01389:    	movq   QWORD PTR [rsp],xmm2
  0138e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01394:    	movq   QWORD PTR [rsp+0x10],xmm5
  0139a:    	movq   QWORD PTR [rsp+0x18],xmm6
  013a0:    	mov    rdi,QWORD PTR [rbp-0x30]
  013a4: 31 	movabs rax,0x5631840958d0
  013ae:    	call   rax
  013b0:    	mov    r15d,eax
  013b3: 00 	cmp    r15d,DWORD PTR [rip+0x73e]        # 0x1af8
  013ba:    	jne    0x3b4a6
  013c0:    	mov    eax,DWORD PTR [rip+0xffffffffffff810b]        # 0xffff94d1
  013c6:    	cmp    DWORD PTR [rip+0x728],eax        # 0x1af4
  013cc:    	jne    0x3b4a6
  013d2:    	mov    rax,QWORD PTR [rbx]
  013d5:    	lea    rdi,[rsp-0x18]
  013da:    	mov    QWORD PTR [rdi],rax
  013dd:    	mov    QWORD PTR [rbx],rdi
  013e0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013e9:    	mov    QWORD PTR [rsp-0x38],rcx
  013ee:    	mov    rax,QWORD PTR [rbp-0x30]
  013f2:    	mov    QWORD PTR [rsp-0x38],rax
  013f7: 00 	mov    rdi,0x0
  013fe: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01407: 00 	movabs rax,0x0
  01411:    	mov    QWORD PTR [rsp-0x28],rax
  01416: 00 	movabs r13,0x0
  01420:    	call   0xffff69b8
  01425:    	lea    rdi,[rbp-0x8]
  01429:    	mov    QWORD PTR [rbx],rdi
  0142c:    	movq   xmm2,QWORD PTR [rsp]
  01431:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01437:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0143d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01443:    	add    rsp,0x20
  01447:    	test   rax,rax
  0144a:    	je     0x3b512
  01450: ff 	mov    QWORD PTR [rbp-0x88],rax
:00085 
:00087 %11 = %12.call z()                   [<INVALID>]
  01457: 01 	sub    DWORD PTR [rip+0x69e],0x1        # 0x1afc
  0145e:    	je     0x3b53d
  01464:    	sub    rsp,0x20
  01468:    	movq   QWORD PTR [rsp],xmm2
  0146d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01473:    	movq   QWORD PTR [rsp+0x10],xmm5
  01479:    	movq   QWORD PTR [rsp+0x18],xmm6
  0147f: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01486: 31 	movabs rax,0x5631840958d0
  01490:    	call   rax
  01492:    	mov    r15d,eax
  01495: 00 	cmp    r15d,DWORD PTR [rip+0x668]        # 0x1b04
  0149c:    	jne    0x3b55f
  014a2:    	mov    eax,DWORD PTR [rip+0xffffffffffff8029]        # 0xffff94d1
  014a8:    	cmp    DWORD PTR [rip+0x652],eax        # 0x1b00
  014ae:    	jne    0x3b55f
  014b4:    	mov    rax,QWORD PTR [rbx]
  014b7:    	lea    rdi,[rsp-0x18]
  014bc:    	mov    QWORD PTR [rdi],rax
  014bf:    	mov    QWORD PTR [rbx],rdi
  014c2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014cb:    	mov    QWORD PTR [rsp-0x38],rcx
  014d0: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014d7:    	mov    QWORD PTR [rsp-0x38],rax
  014dc: 00 	mov    rdi,0x0
  014e3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014ec: 00 	movabs rax,0x0
  014f6:    	mov    QWORD PTR [rsp-0x28],rax
  014fb: 00 	movabs r13,0x0
  01505:    	call   0xffff69b8
  0150a:    	lea    rdi,[rbp-0x8]
  0150e:    	mov    QWORD PTR [rbx],rdi
  01511:    	movq   xmm2,QWORD PTR [rsp]
  01516:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0151c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01522:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01528:    	add    rsp,0x20
  0152c:    	test   rax,rax
  0152f:    	je     0x3b5ce
  01535:    	mov    QWORD PTR [rbp-0x80],rax
:00088 
:00090 %13 = %1.call dir()                  [<INVALID>]
  01539: 01 	sub    DWORD PTR [rip+0x5c8],0x1        # 0x1b08
  01540:    	je     0x3b5f9
  01546:    	sub    rsp,0x20
  0154a:    	movq   QWORD PTR [rsp],xmm2
  0154f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01555:    	movq   QWORD PTR [rsp+0x10],xmm5
  0155b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01561:    	mov    rdi,QWORD PTR [rbp-0x30]
  01565: 31 	movabs rax,0x5631840958d0
  0156f:    	call   rax
  01571:    	mov    r15d,eax
  01574: 00 	cmp    r15d,DWORD PTR [rip+0x595]        # 0x1b10
  0157b:    	jne    0x3b61b
  01581:    	mov    eax,DWORD PTR [rip+0xffffffffffff7f4a]        # 0xffff94d1
  01587:    	cmp    DWORD PTR [rip+0x57f],eax        # 0x1b0c
  0158d:    	jne    0x3b61b
  01593:    	mov    rax,QWORD PTR [rbx]
  01596:    	lea    rdi,[rsp-0x18]
  0159b:    	mov    QWORD PTR [rdi],rax
  0159e:    	mov    QWORD PTR [rbx],rdi
  015a1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015aa:    	mov    QWORD PTR [rsp-0x38],rcx
  015af:    	mov    rax,QWORD PTR [rbp-0x30]
  015b3:    	mov    QWORD PTR [rsp-0x38],rax
  015b8: 00 	mov    rdi,0x0
  015bf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015c8: 00 	movabs rax,0x0
  015d2:    	mov    QWORD PTR [rsp-0x28],rax
  015d7: 00 	movabs r13,0x0
  015e1:    	call   0xffff69b8
  015e6:    	lea    rdi,[rbp-0x8]
  015ea:    	mov    QWORD PTR [rbx],rdi
  015ed:    	movq   xmm2,QWORD PTR [rsp]
  015f2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015f8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  015fe:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01604:    	add    rsp,0x20
  01608:    	test   rax,rax
  0160b:    	je     0x3b687
  01611: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %12 = %13.call z()                   [<INVALID>]
  01618: 01 	sub    DWORD PTR [rip+0x4f5],0x1        # 0x1b14
  0161f:    	je     0x3b6b2
  01625:    	sub    rsp,0x20
  01629:    	movq   QWORD PTR [rsp],xmm2
  0162e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01634:    	movq   QWORD PTR [rsp+0x10],xmm5
  0163a:    	movq   QWORD PTR [rsp+0x18],xmm6
  01640: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01647: 31 	movabs rax,0x5631840958d0
  01651:    	call   rax
  01653:    	mov    r15d,eax
  01656: 00 	cmp    r15d,DWORD PTR [rip+0x4bf]        # 0x1b1c
  0165d:    	jne    0x3b6d4
  01663:    	mov    eax,DWORD PTR [rip+0xffffffffffff7e68]        # 0xffff94d1
  01669:    	cmp    DWORD PTR [rip+0x4a9],eax        # 0x1b18
  0166f:    	jne    0x3b6d4
  01675:    	mov    rax,QWORD PTR [rbx]
  01678:    	lea    rdi,[rsp-0x18]
  0167d:    	mov    QWORD PTR [rdi],rax
  01680:    	mov    QWORD PTR [rbx],rdi
  01683: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0168c:    	mov    QWORD PTR [rsp-0x38],rcx
  01691: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01698:    	mov    QWORD PTR [rsp-0x38],rax
  0169d: 00 	mov    rdi,0x0
  016a4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016ad: 00 	movabs rax,0x0
  016b7:    	mov    QWORD PTR [rsp-0x28],rax
  016bc: 00 	movabs r13,0x0
  016c6:    	call   0xffff69b8
  016cb:    	lea    rdi,[rbp-0x8]
  016cf:    	mov    QWORD PTR [rbx],rdi
  016d2:    	movq   xmm2,QWORD PTR [rsp]
  016d7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016dd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  016e3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  016e9:    	add    rsp,0x20
  016ed:    	test   rax,rax
  016f0:    	je     0x3b743
  016f6: ff 	mov    QWORD PTR [rbp-0x88],rax
:00094 
:00096 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  016fd: 01 	sub    DWORD PTR [rip+0x41c],0x1        # 0x1b20
  01704:    	je     0x3b76e
  0170a:    	mov    rdi,QWORD PTR [rbp-0x58]
  0170e: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  01715:    	sub    rsp,0x20
  01719:    	movq   QWORD PTR [rsp],xmm2
  0171e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01724:    	movq   QWORD PTR [rsp+0x10],xmm5
  0172a:    	movq   QWORD PTR [rsp+0x18],xmm6
  01730:    	mov    rdx,rdi
  01733:    	mov    rcx,rsi
  01736:    	mov    rdi,rbx
  01739:    	mov    rsi,r12
  0173c: 31 	movabs rax,0x563184089e00
  01746:    	call   rax
  01748:    	movq   xmm2,QWORD PTR [rsp]
  0174d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01753:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01759:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0175f:    	add    rsp,0x20
  01763: 31 	movabs r13,0x563184c878b0
  0176d:    	test   rax,rax
  01770:    	je     0xffff69f3
  01776: ff 	mov    QWORD PTR [rbp-0x88],rax
:00097 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  0177d: 01 	sub    DWORD PTR [rip+0x3a0],0x1        # 0x1b24
  01784:    	je     0x3b7ac
  0178a:    	mov    rdi,QWORD PTR [rbp-0x80]
  0178e: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  01795:    	sub    rsp,0x20
  01799:    	movq   QWORD PTR [rsp],xmm2
  0179e:    	movq   QWORD PTR [rsp+0x8],xmm4
  017a4:    	movq   QWORD PTR [rsp+0x10],xmm5
  017aa:    	movq   QWORD PTR [rsp+0x18],xmm6
  017b0:    	mov    rdx,rdi
  017b3:    	mov    rcx,rsi
  017b6:    	mov    rdi,rbx
  017b9:    	mov    rsi,r12
  017bc: 31 	movabs rax,0x563184087f80
  017c6:    	call   rax
  017c8:    	movq   xmm2,QWORD PTR [rsp]
  017cd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017d3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017d9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  017df:    	add    rsp,0x20
  017e3: 31 	movabs r13,0x563184c878c0
  017ed:    	test   rax,rax
  017f0:    	je     0xffff69f3
  017f6:    	mov    QWORD PTR [rbp-0x80],rax
:00098 %7 = %8.call new(%9; 3)              [<INVALID>]
  017fa: 01 	sub    DWORD PTR [rip+0x327],0x1        # 0x1b28
  01801:    	je     0x3b7ea
  01807:    	sub    rsp,0x20
  0180b:    	movq   QWORD PTR [rsp],xmm2
  01810:    	movq   QWORD PTR [rsp+0x8],xmm4
  01816:    	movq   QWORD PTR [rsp+0x10],xmm5
  0181c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01822:    	mov    rdi,QWORD PTR [rbp-0x68]
  01826: 31 	movabs rax,0x5631840958d0
  01830:    	call   rax
  01832:    	mov    r15d,eax
  01835: 00 	cmp    r15d,DWORD PTR [rip+0x2f4]        # 0x1b30
  0183c:    	jne    0x3b80c
  01842:    	mov    eax,DWORD PTR [rip+0xffffffffffff7c89]        # 0xffff94d1
  01848:    	cmp    DWORD PTR [rip+0x2de],eax        # 0x1b2c
  0184e:    	jne    0x3b80c
  01854:    	mov    rax,QWORD PTR [rbx]
  01857:    	lea    rdi,[rsp-0x18]
  0185c:    	mov    QWORD PTR [rdi],rax
  0185f:    	mov    QWORD PTR [rbx],rdi
  01862: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0186b:    	mov    QWORD PTR [rsp-0x38],rcx
  01870:    	mov    rax,QWORD PTR [rbp-0x68]
  01874:    	mov    QWORD PTR [rsp-0x38],rax
  01879: 00 	mov    rdi,0x3
  01880:    	mov    rax,QWORD PTR [rbp-0x70]
  01884:    	mov    QWORD PTR [rsp-0x40],rax
  01889:    	mov    rax,QWORD PTR [rbp-0x78]
  0188d:    	mov    QWORD PTR [rsp-0x48],rax
  01892:    	mov    rax,QWORD PTR [rbp-0x80]
  01896:    	mov    QWORD PTR [rsp-0x50],rax
  0189b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018a4: 00 	movabs rax,0x0
  018ae:    	mov    QWORD PTR [rsp-0x28],rax
  018b3: 00 	movabs r13,0x0
  018bd:    	call   0xffff69b8
  018c2:    	lea    rdi,[rbp-0x8]
  018c6:    	mov    QWORD PTR [rbx],rdi
  018c9:    	movq   xmm2,QWORD PTR [rsp]
  018ce:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018d4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018da:    	movq   xmm6,QWORD PTR [rsp+0x18]
  018e0:    	add    rsp,0x20
  018e4:    	test   rax,rax
  018e7:    	je     0x3b878
  018ed:    	mov    QWORD PTR [rbp-0x60],rax
:00099 
:00101 _ = %2.call pl=(%7; 1)               [<INVALID>]
  018f1: 01 	sub    DWORD PTR [rip+0x23c],0x1        # 0x1b34
  018f8:    	je     0x3b8a3
  018fe:    	sub    rsp,0x20
  01902:    	movq   QWORD PTR [rsp],xmm2
  01907:    	movq   QWORD PTR [rsp+0x8],xmm4
  0190d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01913:    	movq   QWORD PTR [rsp+0x18],xmm6
  01919:    	mov    rdi,QWORD PTR [rbp-0x38]
  0191d: 31 	movabs rax,0x5631840958d0
  01927:    	call   rax
  01929:    	mov    r15d,eax
  0192c: 00 	cmp    r15d,DWORD PTR [rip+0x209]        # 0x1b3c
  01933:    	jne    0x3b8c5
  01939:    	mov    eax,DWORD PTR [rip+0xffffffffffff7b92]        # 0xffff94d1
  0193f:    	cmp    DWORD PTR [rip+0x1f3],eax        # 0x1b38
  01945:    	jne    0x3b8c5
  0194b:    	mov    rax,QWORD PTR [rbx]
  0194e:    	lea    rdi,[rsp-0x18]
  01953:    	mov    QWORD PTR [rdi],rax
  01956:    	mov    QWORD PTR [rbx],rdi
  01959: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01962:    	mov    QWORD PTR [rsp-0x38],rcx
  01967:    	mov    rax,QWORD PTR [rbp-0x38]
  0196b:    	mov    QWORD PTR [rsp-0x38],rax
  01970: 00 	mov    rdi,0x1
  01977:    	mov    rax,QWORD PTR [rbp-0x60]
  0197b:    	mov    QWORD PTR [rsp-0x40],rax
  01980: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01989: 00 	movabs rax,0x0
  01993:    	mov    QWORD PTR [rsp-0x28],rax
  01998: 00 	movabs r13,0x0
  019a2:    	call   0xffff69b8
  019a7:    	lea    rdi,[rbp-0x8]
  019ab:    	mov    QWORD PTR [rbx],rdi
  019ae:    	movq   xmm2,QWORD PTR [rsp]
  019b3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019b9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  019bf:    	movq   xmm6,QWORD PTR [rsp+0x18]
  019c5:    	add    rsp,0x20
  019c9:    	test   rax,rax
  019cc:    	je     0x3b931
:00102 
:00104 br =>:00105
  019d2:    	jmp    0x3b999
:00105 %7 = nil
  019d7: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00106 ret %7
  019df:    	mov    rax,QWORD PTR [rbp-0x60]
  019e3:    	leave  
  019e4:    	ret    
==> start whole compile: clamp FuncId(58) self_class:Scene start:[00000] bytecode:0x563184cd0130
<== finished compile. elapsed:28.7µs
offset:Pos(45448) code: 487 bytes  data: 73 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x38],0x4
  00010: mov    QWORD PTR [rbp-0x40],0x4
  00018: mov    rdi,QWORD PTR [rbp-0x28]
  0001c: test   rdi,0x7
  00023: jne    0x39e7f
  00029: cmp    DWORD PTR [rdi+0x4],0x32
  0002d: jne    0x39e7f
:00000 %3 = literal[255.5]
  00033: movq   xmm2,QWORD PTR [rip+0x1ad]        # 0x1e8
  0003b: movabs rax,0x37f800000000002
  00045: mov    QWORD PTR [rbp-0x40],rax
:00001 %2 = %1 * %3                         [Float][Float]
  00049: mov    rdi,QWORD PTR [rbp-0x30]
  0004d: test   rdi,0x1
  00054: jne    0x39e8e
  0005a: test   rdi,0x2
  00061: je     0x9d
  00067: xorps  xmm3,xmm3
  0006a: movabs rax,0x8000000000000002
  00074: cmp    rdi,rax
  00077: je     0xaf
  0007d: mov    rax,rdi
  00080: sar    rax,0x3f
  00084: add    rax,0x2
  00088: and    rdi,0xfffffffffffffffc
  0008c: or     rdi,rax
  0008f: rol    rdi,0x3d
  00093: movq   xmm3,rdi
  00098: jmp    0xaf
  0009d: call   0xffff4eec
  000a2: test   rax,rax
  000a5: je     0x39e8e
  000ab: movq   xmm3,xmm0
  000af: movq   xmm4,xmm3
  000b3: mulsd  xmm4,xmm2
:00002 %3 = literal[255.0]
  000b7: movq   xmm2,QWORD PTR [rip+0x139]        # 0x1f8
  000bf: movabs rax,0x37f000000000002
  000c9: mov    QWORD PTR [rbp-0x40],rax
:00003 _%3 = %2 > %3                        [Float][Float]
:00004 condnotbr _%3 =>:00007
  000cd: ucomisd xmm4,xmm2
  000d1: jbe    0x39e9d
:00005 %2 = literal[255.0]
  000d7: movq   xmm4,QWORD PTR [rip+0x129]        # 0x208
  000df: movabs rax,0x37f000000000002
  000e9: mov    QWORD PTR [rbp-0x38],rax
:00006 br =>:00007
  000ed: jmp    0x39ec3
:00007 %3 = literal[0.0]
  000f2: movq   xmm2,QWORD PTR [rip+0x11e]        # 0x218
  000fa: movabs rax,0x8000000000000002
  00104: mov    QWORD PTR [rbp-0x40],rax
:00008 _%3 = %2 < %3                        [Float][Float]
:00009 condnotbr _%3 =>:00012
  00108: ucomisd xmm4,xmm2
  0010c: jae    0x39edc
:00010 %2 = literal[0.0]
  00112: movq   xmm4,QWORD PTR [rip+0x10e]        # 0x228
  0011a: movabs rax,0x8000000000000002
  00124: mov    QWORD PTR [rbp-0x38],rax
:00011 br =>:00012
  00128: jmp    0x39ef5
:00012 %3 = %2.call to_i()                  [Float]
  0012d: mov    rdi,QWORD PTR [rbp-0x38]
  00131: test   rdi,0x1
  00138: jne    0x39f0e
  0013e: test   rdi,0x2
  00145: jne    0x162
  0014b: test   rdi,0x7
  00152: jne    0x39f0e
  00158: cmp    DWORD PTR [rdi+0x4],0x7
  0015c: jne    0x39f0e
  00162: cmp    DWORD PTR [rip+0xffffffffffff7828],0x26        # 0xffff7991
  00169: jne    0x39f0e
  0016f: mov    r9,0x0
  00176: sub    rsp,0x10
  0017a: movq   QWORD PTR [rsp],xmm3
  0017f: movq   QWORD PTR [rsp+0x8],xmm4
  00185: mov    rdx,rdi
  00188: mov    rax,QWORD PTR [rbx]
  0018b: lea    rdi,[rsp-0x18]
  00190: mov    QWORD PTR [rdi],rax
  00193: mov    QWORD PTR [rbx],rdi
  00196: mov    QWORD PTR [rsp-0x20],0x0
  0019f: mov    QWORD PTR [rsp-0x38],rcx
  001a4: lea    rcx,[rbp-0x48]
  001a8: mov    r8,0x0
  001af: call   0x39f1d
  001b4: lea    rdi,[rbp-0x8]
  001b8: mov    QWORD PTR [rbx],rdi
  001bb: movq   xmm3,QWORD PTR [rsp]
  001c0: movq   xmm4,QWORD PTR [rsp+0x8]
  001c6: add    rsp,0x10
  001ca: movabs r13,0x563184cd0210
  001d4: test   rax,rax
  001d7: je     0xffff4eb3
  001dd: mov    QWORD PTR [rbp-0x40],rax
:00013 
:00015 ret %3
  001e1: mov    rax,QWORD PTR [rbp-0x40]
  001e5: leave  
  001e6: ret    
==> start whole compile: <unnamed> FuncId(81) self_class:Scene start:[00000] bytecode:0x563184cbee00
<== finished compile. elapsed:13.1µs
offset:Pos(46008) code: 200 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    rdi,QWORD PTR [rbp-0x28]
  0001f: test   rdi,0x7
  00026: jne    0x39d1f
  0002c: cmp    DWORD PTR [rdi+0x4],0x32
  00030: jne    0x39d1f
:00000 %3 = dynvar(3, %3)
  00036: mov    rax,QWORD PTR [rbp-0x10]
  0003a: mov    rax,QWORD PTR [rax]
  0003d: mov    rax,QWORD PTR [rax]
  00040: mov    rax,QWORD PTR [rax-0x30]
  00044: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = literal[82]
  00048: mov    rax,0xa5
  0004f: mov    QWORD PTR [rbp-0x48],rax
:00002 %2 = %3.call times(&%4)              [Integer]
  00053: mov    rdi,QWORD PTR [rbp-0x40]
  00057: test   rdi,0x1
  0005e: je     0x39d2e
  00064: cmp    DWORD PTR [rip+0xffffffffffff76f6],0x26        # 0xffff7761
  0006b: jne    0x39d2e
  00071: mov    r9,QWORD PTR [rbp-0x48]
  00075: mov    rdx,rdi
  00078: mov    rax,QWORD PTR [rbx]
  0007b: lea    rdi,[rsp-0x18]
  00080: mov    QWORD PTR [rdi],rax
  00083: mov    QWORD PTR [rbx],rdi
  00086: mov    QWORD PTR [rsp-0x20],0x0
  0008f: mov    QWORD PTR [rsp-0x38],rcx
  00094: lea    rcx,[rbp-0x50]
  00098: mov    r8,0x0
  0009f: call   0x39d3d
  000a4: lea    rdi,[rbp-0x8]
  000a8: mov    QWORD PTR [rbx],rdi
  000ab: movabs r13,0x563184cbee40
  000b5: test   rax,rax
  000b8: je     0xffff4c83
  000be: mov    QWORD PTR [rbp-0x38],rax
:00003 
:00005 ret %2
  000c2: mov    rax,QWORD PTR [rbp-0x38]
  000c6: leave  
  000c7: ret    
==> start whole compile: <unnamed> FuncId(80) self_class:Scene start:[00000] bytecode:0x563184c82340
<== finished compile. elapsed:58.2µs
offset:Pos(46208) code: 3624 bytes  data: 104 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x80
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x38],rax
  00016: mov    QWORD PTR [rbp-0x40],rax
  0001a: mov    QWORD PTR [rbp-0x48],rax
  0001e: mov    QWORD PTR [rbp-0x50],rax
  00022: mov    QWORD PTR [rbp-0x58],rax
  00026: mov    QWORD PTR [rbp-0x60],rax
  0002a: mov    QWORD PTR [rbp-0x68],rax
  0002e: mov    QWORD PTR [rbp-0x70],rax
  00032: mov    rdi,QWORD PTR [rbp-0x28]
  00036: test   rdi,0x7
  0003d: jne    0x39ca7
  00043: cmp    DWORD PTR [rdi+0x4],0x32
  00047: jne    0x39ca7
:00000 %6 = const[Vec]                      [Vec]
  0004d: mov    rax,QWORD PTR [rip+0xffffffffffff764c]        # 0xffff76a0
  00054: cmp    rax,QWORD PTR [rip+0xde5]        # 0xe40
  0005b: jne    0x39cb6
  00061: mov    rax,QWORD PTR [rip+0xdc8]        # 0xe30
  00068: mov    QWORD PTR [rbp-0x58],rax
:00001 %7 = literal[0.0]
  0006c: movq   xmm2,QWORD PTR [rip+0xddc]        # 0xe50
  00074: movabs rax,0x8000000000000002
  0007e: mov    QWORD PTR [rbp-0x60],rax
:00002 %8 = literal[0.0]
  00082: movq   xmm3,QWORD PTR [rip+0xdd6]        # 0xe60
  0008a: movabs rax,0x8000000000000002
  00094: mov    QWORD PTR [rbp-0x68],rax
:00003 %9 = literal[0.0]
  00098: movq   xmm4,QWORD PTR [rip+0xdd0]        # 0xe70
  000a0: movabs rax,0x8000000000000002
  000aa: mov    QWORD PTR [rbp-0x70],rax
:00004 %2 = %6.call new(%7; 3)              [#<Class:Vec>]
  000ae: mov    rdi,QWORD PTR [rbp-0x58]
  000b2: test   rdi,0x7
  000b9: jne    0x39cfc
  000bf: cmp    DWORD PTR [rdi+0x4],0x29
  000c3: jne    0x39cfc
  000c9: cmp    DWORD PTR [rip+0xffffffffffff75c9],0x26        # 0xffff7699
  000d0: jne    0x39cfc
  000d6: mov    r9,0x0
  000dd: sub    rsp,0x20
  000e1: movq   QWORD PTR [rsp],xmm2
  000e6: movq   QWORD PTR [rsp+0x8],xmm3
  000ec: movq   QWORD PTR [rsp+0x10],xmm4
  000f2: mov    rdx,rdi
  000f5: mov    rax,QWORD PTR [rbx]
  000f8: lea    rdi,[rsp-0x18]
  000fd: mov    QWORD PTR [rdi],rax
  00100: mov    QWORD PTR [rbx],rdi
  00103: mov    QWORD PTR [rsp-0x20],0x0
  0010c: mov    QWORD PTR [rsp-0x38],rcx
  00111: lea    rcx,[rbp-0x60]
  00115: mov    r8,0x3
  0011c: call   0x39d0b
  00121: lea    rdi,[rbp-0x8]
  00125: mov    QWORD PTR [rbx],rdi
  00128: movq   xmm2,QWORD PTR [rsp]
  0012d: movq   xmm3,QWORD PTR [rsp+0x8]
  00133: movq   xmm4,QWORD PTR [rsp+0x10]
  00139: add    rsp,0x20
  0013d: movabs r13,0x563184c823a0
  00147: test   rax,rax
  0014a: je     0xffff4bbb
  00150: mov    QWORD PTR [rbp-0x38],rax
:00005 
:00007 %6 = dynvar(2, %3)
  00154: mov    rax,QWORD PTR [rbp-0x10]
  00158: mov    rax,QWORD PTR [rax]
  0015b: mov    rax,QWORD PTR [rax-0x30]
  0015f: mov    QWORD PTR [rbp-0x58],rax
:00008 %7 = literal[81]
  00163: mov    rax,0xa3
  0016a: mov    QWORD PTR [rbp-0x60],rax
:00009 _ = %6.call times(&%7)               [Integer]
  0016e: mov    rdi,QWORD PTR [rbp-0x58]
  00172: test   rdi,0x1
  00179: je     0x39d3d
  0017f: cmp    DWORD PTR [rip+0xffffffffffff7513],0x26        # 0xffff7699
  00186: jne    0x39d3d
  0018c: mov    r9,QWORD PTR [rbp-0x60]
  00190: sub    rsp,0x10
  00194: movq   QWORD PTR [rsp],xmm3
  00199: movq   QWORD PTR [rsp+0x8],xmm4
  0019f: mov    rdx,rdi
  001a2: mov    rax,QWORD PTR [rbx]
  001a5: lea    rdi,[rsp-0x18]
  001aa: mov    QWORD PTR [rdi],rax
  001ad: mov    QWORD PTR [rbx],rdi
  001b0: mov    QWORD PTR [rsp-0x20],0x0
  001b9: mov    QWORD PTR [rsp-0x38],rcx
  001be: lea    rcx,[rbp-0x68]
  001c2: mov    r8,0x0
  001c9: call   0x39d4c
  001ce: lea    rdi,[rbp-0x8]
  001d2: mov    QWORD PTR [rbx],rdi
  001d5: movq   xmm3,QWORD PTR [rsp]
  001da: movq   xmm4,QWORD PTR [rsp+0x8]
  001e0: add    rsp,0x10
  001e4: movabs r13,0x563184c823f0
  001ee: test   rax,rax
  001f1: je     0xffff4bbb
:00010 
:00012 %6 = %2.call x()                     [Vec]
  001f7: mov    rdi,QWORD PTR [rbp-0x38]
  001fb: test   rdi,0x7
  00202: jne    0x39d7e
  00208: cmp    DWORD PTR [rdi+0x4],0x28
  0020c: jne    0x39d7e
  00212: cmp    DWORD PTR [rip+0xffffffffffff7480],0x26        # 0xffff7699
  00219: jne    0x39d7e
  0021f: mov    esi,DWORD PTR [rip+0xc57]        # 0xe7c
  00225: cmp    esi,0xffffffff
  00228: je     0x39d8d
  0022e: cmp    WORD PTR [rdi+0x2],0x3
  00233: jne    0x24c
  00239: cmp    esi,0x6
  0023c: jge    0x24c
  00242: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00247: jmp    0x276
  0024c: sub    rsp,0x10
  00250: movq   QWORD PTR [rsp],xmm3
  00255: movq   QWORD PTR [rsp+0x8],xmm4
  0025b: movabs rax,0x563184053740
  00265: call   rax
  00267: movq   xmm3,QWORD PTR [rsp]
  0026c: movq   xmm4,QWORD PTR [rsp+0x8]
  00272: add    rsp,0x10
  00276: mov    QWORD PTR [rbp-0x58],rax
:00013 
:00015 %7 = dynvar(2, %5)
  0027a: mov    rax,QWORD PTR [rbp-0x10]
  0027e: mov    rax,QWORD PTR [rax]
  00281: mov    rax,QWORD PTR [rax-0x40]
  00285: mov    QWORD PTR [rbp-0x60],rax
:00016 %8 = dynvar(2, %5)
  00289: mov    rax,QWORD PTR [rbp-0x10]
  0028d: mov    rax,QWORD PTR [rax]
  00290: mov    rax,QWORD PTR [rax-0x40]
  00294: mov    QWORD PTR [rbp-0x68],rax
:00017 %7 = %7 * %8                         [Float][Float]
  00298: mov    rdi,QWORD PTR [rbp-0x60]
  0029c: test   rdi,0x1
  002a3: jne    0x39dd4
  002a9: test   rdi,0x2
  002b0: je     0x2ec
  002b6: xorps  xmm2,xmm2
  002b9: movabs rax,0x8000000000000002
  002c3: cmp    rdi,rax
  002c6: je     0x2fe
  002cc: mov    rax,rdi
  002cf: sar    rax,0x3f
  002d3: add    rax,0x2
  002d7: and    rdi,0xfffffffffffffffc
  002db: or     rdi,rax
  002de: rol    rdi,0x3d
  002e2: movq   xmm2,rdi
  002e7: jmp    0x2fe
  002ec: call   0xffff4bf4
  002f1: test   rax,rax
  002f4: je     0x39dd4
  002fa: movq   xmm2,xmm0
  002fe: mov    rdi,QWORD PTR [rbp-0x68]
  00302: test   rdi,0x1
  00309: jne    0x39de3
  0030f: test   rdi,0x2
  00316: je     0x352
  0031c: xorps  xmm3,xmm3
  0031f: movabs rax,0x8000000000000002
  00329: cmp    rdi,rax
  0032c: je     0x364
  00332: mov    rax,rdi
  00335: sar    rax,0x3f
  00339: add    rax,0x2
  0033d: and    rdi,0xfffffffffffffffc
  00341: or     rdi,rax
  00344: rol    rdi,0x3d
  00348: movq   xmm3,rdi
  0034d: jmp    0x364
  00352: call   0xffff4bf4
  00357: test   rax,rax
  0035a: je     0x39de3
  00360: movq   xmm3,xmm0
  00364: mulsd  xmm2,xmm3
:00018 %3 = %6 / %7                         [Float][Float]
  00368: mov    rdi,QWORD PTR [rbp-0x58]
  0036c: test   rdi,0x1
  00373: jne    0x39df2
  00379: test   rdi,0x2
  00380: je     0x3bc
  00386: xorps  xmm5,xmm5
  00389: movabs rax,0x8000000000000002
  00393: cmp    rdi,rax
  00396: je     0x3ce
  0039c: mov    rax,rdi
  0039f: sar    rax,0x3f
  003a3: add    rax,0x2
  003a7: and    rdi,0xfffffffffffffffc
  003ab: or     rdi,rax
  003ae: rol    rdi,0x3d
  003b2: movq   xmm5,rdi
  003b7: jmp    0x3ce
  003bc: call   0xffff4bf4
  003c1: test   rax,rax
  003c4: je     0x39df2
  003ca: movq   xmm5,xmm0
  003ce: movq   xmm6,xmm5
  003d2: movq   rax,xmm2
  003d7: test   rax,rax
  003da: je     0xffff4be0
  003e0: divsd  xmm6,xmm2
:00019 %6 = %2.call y()                     [Vec]
  003e4: mov    rdi,QWORD PTR [rbp-0x38]
  003e8: test   rdi,0x7
  003ef: jne    0x39e0e
  003f5: cmp    DWORD PTR [rdi+0x4],0x28
  003f9: jne    0x39e0e
  003ff: cmp    DWORD PTR [rip+0xffffffffffff7293],0x26        # 0xffff7699
  00406: jne    0x39e0e
  0040c: mov    esi,DWORD PTR [rip+0xa72]        # 0xe84
  00412: cmp    esi,0xffffffff
  00415: je     0x39e37
  0041b: cmp    WORD PTR [rdi+0x2],0x3
  00420: jne    0x439
  00426: cmp    esi,0x6
  00429: jge    0x439
  0042f: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00434: jmp    0x47b
  00439: sub    rsp,0x20
  0043d: movq   QWORD PTR [rsp],xmm2
  00442: movq   QWORD PTR [rsp+0x8],xmm3
  00448: movq   QWORD PTR [rsp+0x10],xmm4
  0044e: movq   QWORD PTR [rsp+0x18],xmm6
  00454: movabs rax,0x563184053740
  0045e: call   rax
  00460: movq   xmm2,QWORD PTR [rsp]
  00465: movq   xmm3,QWORD PTR [rsp+0x8]
  0046b: movq   xmm4,QWORD PTR [rsp+0x10]
  00471: movq   xmm6,QWORD PTR [rsp+0x18]
  00477: add    rsp,0x20
  0047b: mov    QWORD PTR [rbp-0x58],rax
:00020 
:00022 %7 = dynvar(2, %5)
  0047f: mov    rax,QWORD PTR [rbp-0x10]
  00483: mov    rax,QWORD PTR [rax]
  00486: mov    rax,QWORD PTR [rax-0x40]
  0048a: mov    QWORD PTR [rbp-0x60],rax
:00023 %8 = dynvar(2, %5)
  0048e: mov    rax,QWORD PTR [rbp-0x10]
  00492: mov    rax,QWORD PTR [rax]
  00495: mov    rax,QWORD PTR [rax-0x40]
  00499: mov    QWORD PTR [rbp-0x68],rax
:00024 %7 = %7 * %8                         [Float][Float]
  0049d: mov    rdi,QWORD PTR [rbp-0x60]
  004a1: test   rdi,0x1
  004a8: jne    0x39e96
  004ae: test   rdi,0x2
  004b5: je     0x4f1
  004bb: xorps  xmm2,xmm2
  004be: movabs rax,0x8000000000000002
  004c8: cmp    rdi,rax
  004cb: je     0x503
  004d1: mov    rax,rdi
  004d4: sar    rax,0x3f
  004d8: add    rax,0x2
  004dc: and    rdi,0xfffffffffffffffc
  004e0: or     rdi,rax
  004e3: rol    rdi,0x3d
  004e7: movq   xmm2,rdi
  004ec: jmp    0x503
  004f1: call   0xffff4bf4
  004f6: test   rax,rax
  004f9: je     0x39e96
  004ff: movq   xmm2,xmm0
  00503: mov    rdi,QWORD PTR [rbp-0x68]
  00507: test   rdi,0x1
  0050e: jne    0x39eb2
  00514: test   rdi,0x2
  0051b: je     0x557
  00521: xorps  xmm3,xmm3
  00524: movabs rax,0x8000000000000002
  0052e: cmp    rdi,rax
  00531: je     0x569
  00537: mov    rax,rdi
  0053a: sar    rax,0x3f
  0053e: add    rax,0x2
  00542: and    rdi,0xfffffffffffffffc
  00546: or     rdi,rax
  00549: rol    rdi,0x3d
  0054d: movq   xmm3,rdi
  00552: jmp    0x569
  00557: call   0xffff4bf4
  0055c: test   rax,rax
  0055f: je     0x39eb2
  00565: movq   xmm3,xmm0
  00569: mulsd  xmm2,xmm3
:00025 %4 = %6 / %7                         [Float][Float]
  0056d: mov    rdi,QWORD PTR [rbp-0x58]
  00571: test   rdi,0x1
  00578: jne    0x39ece
  0057e: test   rdi,0x2
  00585: je     0x5c1
  0058b: xorps  xmm5,xmm5
  0058e: movabs rax,0x8000000000000002
  00598: cmp    rdi,rax
  0059b: je     0x5d3
  005a1: mov    rax,rdi
  005a4: sar    rax,0x3f
  005a8: add    rax,0x2
  005ac: and    rdi,0xfffffffffffffffc
  005b0: or     rdi,rax
  005b3: rol    rdi,0x3d
  005b7: movq   xmm5,rdi
  005bc: jmp    0x5d3
  005c1: call   0xffff4bf4
  005c6: test   rax,rax
  005c9: je     0x39ece
  005cf: movq   xmm5,xmm0
  005d3: movq   xmm7,xmm5
  005d7: movq   rax,xmm2
  005dc: test   rax,rax
  005df: je     0xffff4be0
  005e5: divsd  xmm7,xmm2
:00026 %6 = %2.call z()                     [Vec]
  005e9: mov    rdi,QWORD PTR [rbp-0x38]
  005ed: test   rdi,0x7
  005f4: jne    0x39ef7
  005fa: cmp    DWORD PTR [rdi+0x4],0x28
  005fe: jne    0x39ef7
  00604: cmp    DWORD PTR [rip+0xffffffffffff708e],0x26        # 0xffff7699
  0060b: jne    0x39ef7
  00611: mov    esi,DWORD PTR [rip+0x875]        # 0xe8c
  00617: cmp    esi,0xffffffff
  0061a: je     0x39f2d
  00620: cmp    WORD PTR [rdi+0x2],0x3
  00625: jne    0x63e
  0062b: cmp    esi,0x6
  0062e: jge    0x63e
  00634: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00639: jmp    0x68c
  0063e: sub    rsp,0x30
  00642: movq   QWORD PTR [rsp],xmm2
  00647: movq   QWORD PTR [rsp+0x8],xmm3
  0064d: movq   QWORD PTR [rsp+0x10],xmm4
  00653: movq   QWORD PTR [rsp+0x18],xmm6
  00659: movq   QWORD PTR [rsp+0x20],xmm7
  0065f: movabs rax,0x563184053740
  00669: call   rax
  0066b: movq   xmm2,QWORD PTR [rsp]
  00670: movq   xmm3,QWORD PTR [rsp+0x8]
  00676: movq   xmm4,QWORD PTR [rsp+0x10]
  0067c: movq   xmm6,QWORD PTR [rsp+0x18]
  00682: movq   xmm7,QWORD PTR [rsp+0x20]
  00688: add    rsp,0x30
  0068c: mov    QWORD PTR [rbp-0x58],rax
:00027 
:00029 %7 = dynvar(2, %5)
  00690: mov    rax,QWORD PTR [rbp-0x10]
  00694: mov    rax,QWORD PTR [rax]
  00697: mov    rax,QWORD PTR [rax-0x40]
  0069b: mov    QWORD PTR [rbp-0x60],rax
:00030 %8 = dynvar(2, %5)
  0069f: mov    rax,QWORD PTR [rbp-0x10]
  006a3: mov    rax,QWORD PTR [rax]
  006a6: mov    rax,QWORD PTR [rax-0x40]
  006aa: mov    QWORD PTR [rbp-0x68],rax
:00031 %7 = %7 * %8                         [Float][Float]
  006ae: mov    rdi,QWORD PTR [rbp-0x60]
  006b2: test   rdi,0x1
  006b9: jne    0x39f98
  006bf: test   rdi,0x2
  006c6: je     0x702
  006cc: xorps  xmm2,xmm2
  006cf: movabs rax,0x8000000000000002
  006d9: cmp    rdi,rax
  006dc: je     0x714
  006e2: mov    rax,rdi
  006e5: sar    rax,0x3f
  006e9: add    rax,0x2
  006ed: and    rdi,0xfffffffffffffffc
  006f1: or     rdi,rax
  006f4: rol    rdi,0x3d
  006f8: movq   xmm2,rdi
  006fd: jmp    0x714
  00702: call   0xffff4bf4
  00707: test   rax,rax
  0070a: je     0x39f98
  00710: movq   xmm2,xmm0
  00714: mov    rdi,QWORD PTR [rbp-0x68]
  00718: test   rdi,0x1
  0071f: jne    0x39fc1
  00725: test   rdi,0x2
  0072c: je     0x768
  00732: xorps  xmm3,xmm3
  00735: movabs rax,0x8000000000000002
  0073f: cmp    rdi,rax
  00742: je     0x77a
  00748: mov    rax,rdi
  0074b: sar    rax,0x3f
  0074f: add    rax,0x2
  00753: and    rdi,0xfffffffffffffffc
  00757: or     rdi,rax
  0075a: rol    rdi,0x3d
  0075e: movq   xmm3,rdi
  00763: jmp    0x77a
  00768: call   0xffff4bf4
  0076d: test   rax,rax
  00770: je     0x39fc1
  00776: movq   xmm3,xmm0
  0077a: mulsd  xmm2,xmm3
:00032 %5 = %6 / %7                         [Float][Float]
  0077e: mov    rdi,QWORD PTR [rbp-0x58]
  00782: test   rdi,0x1
  00789: jne    0x39fea
  0078f: test   rdi,0x2
  00796: je     0x7d2
  0079c: xorps  xmm5,xmm5
  0079f: movabs rax,0x8000000000000002
  007a9: cmp    rdi,rax
  007ac: je     0x7e4
  007b2: mov    rax,rdi
  007b5: sar    rax,0x3f
  007b9: add    rax,0x2
  007bd: and    rdi,0xfffffffffffffffc
  007c1: or     rdi,rax
  007c4: rol    rdi,0x3d
  007c8: movq   xmm5,rdi
  007cd: jmp    0x7e4
  007d2: call   0xffff4bf4
  007d7: test   rax,rax
  007da: je     0x39fea
  007e0: movq   xmm5,xmm0
  007e4: movq   xmm8,xmm5
  007e9: movq   rax,xmm2
  007ee: test   rax,rax
  007f1: je     0xffff4be0
  007f7: divsd  xmm8,xmm2
:00033 %8 = %4
:00034 %7 = %0.call clamp(%8; 1)            [Scene]
  007fc: movq   xmm0,xmm7
  00800: call   0xffff4ce7
  00805: mov    QWORD PTR [rbp-0x68],rax
  00809: mov    rdi,QWORD PTR [rbp-0x28]
  0080d: cmp    DWORD PTR [rip+0xffffffffffff6e85],0x26        # 0xffff7699
  00814: jne    0x3a020
  0081a: sub    rsp,0x30
  0081e: movq   QWORD PTR [rsp],xmm4
  00823: movq   QWORD PTR [rsp+0x8],xmm5
  00829: movq   QWORD PTR [rsp+0x10],xmm6
  0082f: movq   QWORD PTR [rsp+0x18],xmm7
  00835: movq   QWORD PTR [rsp+0x20],xmm8
  0083c: mov    rax,QWORD PTR [rbx]
  0083f: lea    rdi,[rsp-0x18]
  00844: mov    QWORD PTR [rdi],rax
  00847: mov    QWORD PTR [rbx],rdi
  0084a: mov    QWORD PTR [rsp-0x20],0x0
  00853: mov    QWORD PTR [rsp-0x38],rcx
  00858: mov    rax,QWORD PTR [rbp-0x28]
  0085c: mov    QWORD PTR [rsp-0x38],rax
  00861: mov    rdi,0x1
  00868: mov    rax,QWORD PTR [rbp-0x68]
  0086c: mov    QWORD PTR [rsp-0x40],rax
  00871: mov    QWORD PTR [rsp-0x30],0x0
  0087a: movabs rax,0x40000003a
  00884: mov    QWORD PTR [rsp-0x28],rax
  00889: movabs r13,0x563184cd0130
  00893: call   0xffffac50
  00898: lea    rdi,[rbp-0x8]
  0089c: mov    QWORD PTR [rbx],rdi
  0089f: movq   xmm4,QWORD PTR [rsp]
  008a4: movq   xmm5,QWORD PTR [rsp+0x8]
  008aa: movq   xmm6,QWORD PTR [rsp+0x10]
  008b0: movq   xmm7,QWORD PTR [rsp+0x18]
  008b6: movq   xmm8,QWORD PTR [rsp+0x20]
  008bd: add    rsp,0x30
  008c1: movabs r13,0x563184c82580
  008cb: test   rax,rax
  008ce: je     0xffff4bbb
  008d4: mov    QWORD PTR [rbp-0x60],rax
:00035 
:00037 %6 = %7.call chr()                   [Integer]
  008d8: mov    rdi,QWORD PTR [rbp-0x60]
  008dc: test   rdi,0x1
  008e3: je     0x3a057
  008e9: cmp    DWORD PTR [rip+0xffffffffffff6da9],0x26        # 0xffff7699
  008f0: jne    0x3a057
  008f6: mov    r9,0x0
  008fd: sub    rsp,0x20
  00901: movq   QWORD PTR [rsp],xmm4
  00906: movq   QWORD PTR [rsp+0x8],xmm6
  0090c: movq   QWORD PTR [rsp+0x10],xmm7
  00912: movq   QWORD PTR [rsp+0x18],xmm8
  00919: mov    rdx,rdi
  0091c: mov    rax,QWORD PTR [rbx]
  0091f: lea    rdi,[rsp-0x18]
  00924: mov    QWORD PTR [rdi],rax
  00927: mov    QWORD PTR [rbx],rdi
  0092a: mov    QWORD PTR [rsp-0x20],0x0
  00933: mov    QWORD PTR [rsp-0x38],rcx
  00938: lea    rcx,[rbp-0x68]
  0093c: mov    r8,0x0
  00943: call   0x3a08e
  00948: lea    rdi,[rbp-0x8]
  0094c: mov    QWORD PTR [rbx],rdi
  0094f: movq   xmm4,QWORD PTR [rsp]
  00954: movq   xmm6,QWORD PTR [rsp+0x8]
  0095a: movq   xmm7,QWORD PTR [rsp+0x10]
  00960: movq   xmm8,QWORD PTR [rsp+0x18]
  00967: add    rsp,0x20
  0096b: movabs r13,0x563184c825b0
  00975: test   rax,rax
  00978: je     0xffff4bbb
  0097e: mov    QWORD PTR [rbp-0x58],rax
:00038 
:00040 _ = %0.call print(%6; 1)             [Scene]
  00982: mov    rdi,QWORD PTR [rbp-0x28]
  00986: cmp    DWORD PTR [rip+0xffffffffffff6d0c],0x26        # 0xffff7699
  0098d: jne    0x3a0c0
  00993: mov    r9,0x0
  0099a: sub    rsp,0x20
  0099e: movq   QWORD PTR [rsp],xmm4
  009a3: movq   QWORD PTR [rsp+0x8],xmm6
  009a9: movq   QWORD PTR [rsp+0x10],xmm7
  009af: movq   QWORD PTR [rsp+0x18],xmm8
  009b6: mov    rdx,rdi
  009b9: mov    rax,QWORD PTR [rbx]
  009bc: lea    rdi,[rsp-0x18]
  009c1: mov    QWORD PTR [rdi],rax
  009c4: mov    QWORD PTR [rbx],rdi
  009c7: mov    QWORD PTR [rsp-0x20],0x0
  009d0: mov    QWORD PTR [rsp-0x38],rcx
  009d5: lea    rcx,[rbp-0x58]
  009d9: mov    r8,0x1
  009e0: call   0x3a0f7
  009e5: lea    rdi,[rbp-0x8]
  009e9: mov    QWORD PTR [rbx],rdi
  009ec: movq   xmm4,QWORD PTR [rsp]
  009f1: movq   xmm6,QWORD PTR [rsp+0x8]
  009f7: movq   xmm7,QWORD PTR [rsp+0x10]
  009fd: movq   xmm8,QWORD PTR [rsp+0x18]
  00a04: add    rsp,0x20
  00a08: movabs r13,0x563184c825e0
  00a12: test   rax,rax
  00a15: je     0xffff4bbb
:00041 
:00043 %8 = %3
:00044 %7 = %0.call clamp(%8; 1)            [Scene]
  00a1b: movq   xmm0,xmm6
  00a1f: call   0xffff4ce7
  00a24: mov    QWORD PTR [rbp-0x68],rax
  00a28: mov    rdi,QWORD PTR [rbp-0x28]
  00a2c: cmp    DWORD PTR [rip+0xffffffffffff6c66],0x26        # 0xffff7699
  00a33: jne    0x3a129
  00a39: sub    rsp,0x20
  00a3d: movq   QWORD PTR [rsp],xmm4
  00a42: movq   QWORD PTR [rsp+0x8],xmm6
  00a48: movq   QWORD PTR [rsp+0x10],xmm7
  00a4e: movq   QWORD PTR [rsp+0x18],xmm8
  00a55: mov    rax,QWORD PTR [rbx]
  00a58: lea    rdi,[rsp-0x18]
  00a5d: mov    QWORD PTR [rdi],rax
  00a60: mov    QWORD PTR [rbx],rdi
  00a63: mov    QWORD PTR [rsp-0x20],0x0
  00a6c: mov    QWORD PTR [rsp-0x38],rcx
  00a71: mov    rax,QWORD PTR [rbp-0x28]
  00a75: mov    QWORD PTR [rsp-0x38],rax
  00a7a: mov    rdi,0x1
  00a81: mov    rax,QWORD PTR [rbp-0x68]
  00a85: mov    QWORD PTR [rsp-0x40],rax
  00a8a: mov    QWORD PTR [rsp-0x30],0x0
  00a93: movabs rax,0x40000003a
  00a9d: mov    QWORD PTR [rsp-0x28],rax
  00aa2: movabs r13,0x563184cd0130
  00aac: call   0xffffac50
  00ab1: lea    rdi,[rbp-0x8]
  00ab5: mov    QWORD PTR [rbx],rdi
  00ab8: movq   xmm4,QWORD PTR [rsp]
  00abd: movq   xmm6,QWORD PTR [rsp+0x8]
  00ac3: movq   xmm7,QWORD PTR [rsp+0x10]
  00ac9: movq   xmm8,QWORD PTR [rsp+0x18]
  00ad0: add    rsp,0x20
  00ad4: movabs r13,0x563184c82620
  00ade: test   rax,rax
  00ae1: je     0xffff4bbb
  00ae7: mov    QWORD PTR [rbp-0x60],rax
:00045 
:00047 %6 = %7.call chr()                   [Integer]
  00aeb: mov    rdi,QWORD PTR [rbp-0x60]
  00aef: test   rdi,0x1
  00af6: je     0x3a160
  00afc: cmp    DWORD PTR [rip+0xffffffffffff6b96],0x26        # 0xffff7699
  00b03: jne    0x3a160
  00b09: mov    r9,0x0
  00b10: sub    rsp,0x20
  00b14: movq   QWORD PTR [rsp],xmm4
  00b19: movq   QWORD PTR [rsp+0x8],xmm6
  00b1f: movq   QWORD PTR [rsp+0x10],xmm7
  00b25: movq   QWORD PTR [rsp+0x18],xmm8
  00b2c: mov    rdx,rdi
  00b2f: mov    rax,QWORD PTR [rbx]
  00b32: lea    rdi,[rsp-0x18]
  00b37: mov    QWORD PTR [rdi],rax
  00b3a: mov    QWORD PTR [rbx],rdi
  00b3d: mov    QWORD PTR [rsp-0x20],0x0
  00b46: mov    QWORD PTR [rsp-0x38],rcx
  00b4b: lea    rcx,[rbp-0x68]
  00b4f: mov    r8,0x0
  00b56: call   0x3a197
  00b5b: lea    rdi,[rbp-0x8]
  00b5f: mov    QWORD PTR [rbx],rdi
  00b62: movq   xmm4,QWORD PTR [rsp]
  00b67: movq   xmm6,QWORD PTR [rsp+0x8]
  00b6d: movq   xmm7,QWORD PTR [rsp+0x10]
  00b73: movq   xmm8,QWORD PTR [rsp+0x18]
  00b7a: add    rsp,0x20
  00b7e: movabs r13,0x563184c82650
  00b88: test   rax,rax
  00b8b: je     0xffff4bbb
  00b91: mov    QWORD PTR [rbp-0x58],rax
:00048 
:00050 _ = %0.call print(%6; 1)             [Scene]
  00b95: mov    rdi,QWORD PTR [rbp-0x28]
  00b99: cmp    DWORD PTR [rip+0xffffffffffff6af9],0x26        # 0xffff7699
  00ba0: jne    0x3a1c9
  00ba6: mov    r9,0x0
  00bad: sub    rsp,0x20
  00bb1: movq   QWORD PTR [rsp],xmm4
  00bb6: movq   QWORD PTR [rsp+0x8],xmm6
  00bbc: movq   QWORD PTR [rsp+0x10],xmm7
  00bc2: movq   QWORD PTR [rsp+0x18],xmm8
  00bc9: mov    rdx,rdi
  00bcc: mov    rax,QWORD PTR [rbx]
  00bcf: lea    rdi,[rsp-0x18]
  00bd4: mov    QWORD PTR [rdi],rax
  00bd7: mov    QWORD PTR [rbx],rdi
  00bda: mov    QWORD PTR [rsp-0x20],0x0
  00be3: mov    QWORD PTR [rsp-0x38],rcx
  00be8: lea    rcx,[rbp-0x58]
  00bec: mov    r8,0x1
  00bf3: call   0x3a200
  00bf8: lea    rdi,[rbp-0x8]
  00bfc: mov    QWORD PTR [rbx],rdi
  00bff: movq   xmm4,QWORD PTR [rsp]
  00c04: movq   xmm6,QWORD PTR [rsp+0x8]
  00c0a: movq   xmm7,QWORD PTR [rsp+0x10]
  00c10: movq   xmm8,QWORD PTR [rsp+0x18]
  00c17: add    rsp,0x20
  00c1b: movabs r13,0x563184c82680
  00c25: test   rax,rax
  00c28: je     0xffff4bbb
:00051 
:00053 %9 = %5
:00054 %8 = %0.call clamp(%9; 1)            [Scene]
  00c2e: movq   xmm0,xmm8
  00c33: call   0xffff4ce7
  00c38: mov    QWORD PTR [rbp-0x70],rax
  00c3c: mov    rdi,QWORD PTR [rbp-0x28]
  00c40: cmp    DWORD PTR [rip+0xffffffffffff6a52],0x26        # 0xffff7699
  00c47: jne    0x3a232
  00c4d: sub    rsp,0x20
  00c51: movq   QWORD PTR [rsp],xmm6
  00c56: movq   QWORD PTR [rsp+0x8],xmm7
  00c5c: movq   QWORD PTR [rsp+0x10],xmm8
  00c63: mov    rax,QWORD PTR [rbx]
  00c66: lea    rdi,[rsp-0x18]
  00c6b: mov    QWORD PTR [rdi],rax
  00c6e: mov    QWORD PTR [rbx],rdi
  00c71: mov    QWORD PTR [rsp-0x20],0x0
  00c7a: mov    QWORD PTR [rsp-0x38],rcx
  00c7f: mov    rax,QWORD PTR [rbp-0x28]
  00c83: mov    QWORD PTR [rsp-0x38],rax
  00c88: mov    rdi,0x1
  00c8f: mov    rax,QWORD PTR [rbp-0x70]
  00c93: mov    QWORD PTR [rsp-0x40],rax
  00c98: mov    QWORD PTR [rsp-0x30],0x0
  00ca1: movabs rax,0x40000003a
  00cab: mov    QWORD PTR [rsp-0x28],rax
  00cb0: movabs r13,0x563184cd0130
  00cba: call   0xffffac50
  00cbf: lea    rdi,[rbp-0x8]
  00cc3: mov    QWORD PTR [rbx],rdi
  00cc6: movq   xmm6,QWORD PTR [rsp]
  00ccb: movq   xmm7,QWORD PTR [rsp+0x8]
  00cd1: movq   xmm8,QWORD PTR [rsp+0x10]
  00cd8: add    rsp,0x20
  00cdc: movabs r13,0x563184c826c0
  00ce6: test   rax,rax
  00ce9: je     0xffff4bbb
  00cef: mov    QWORD PTR [rbp-0x68],rax
:00055 
:00057 %7 = %8.call chr()                   [Integer]
  00cf3: mov    rdi,QWORD PTR [rbp-0x68]
  00cf7: test   rdi,0x1
  00cfe: je     0x3a269
  00d04: cmp    DWORD PTR [rip+0xffffffffffff698e],0x26        # 0xffff7699
  00d0b: jne    0x3a269
  00d11: mov    r9,0x0
  00d18: sub    rsp,0x20
  00d1c: movq   QWORD PTR [rsp],xmm6
  00d21: movq   QWORD PTR [rsp+0x8],xmm7
  00d27: movq   QWORD PTR [rsp+0x10],xmm8
  00d2e: mov    rdx,rdi
  00d31: mov    rax,QWORD PTR [rbx]
  00d34: lea    rdi,[rsp-0x18]
  00d39: mov    QWORD PTR [rdi],rax
  00d3c: mov    QWORD PTR [rbx],rdi
  00d3f: mov    QWORD PTR [rsp-0x20],0x0
  00d48: mov    QWORD PTR [rsp-0x38],rcx
  00d4d: lea    rcx,[rbp-0x70]
  00d51: mov    r8,0x0
  00d58: call   0x3a2a0
  00d5d: lea    rdi,[rbp-0x8]
  00d61: mov    QWORD PTR [rbx],rdi
  00d64: movq   xmm6,QWORD PTR [rsp]
  00d69: movq   xmm7,QWORD PTR [rsp+0x8]
  00d6f: movq   xmm8,QWORD PTR [rsp+0x10]
  00d76: add    rsp,0x20
  00d7a: movabs r13,0x563184c826f0
  00d84: test   rax,rax
  00d87: je     0xffff4bbb
  00d8d: mov    QWORD PTR [rbp-0x60],rax
:00058 
:00060 %6 = %0.call print(%7; 1)            [Scene]
  00d91: mov    rdi,QWORD PTR [rbp-0x28]
  00d95: cmp    DWORD PTR [rip+0xffffffffffff68fd],0x26        # 0xffff7699
  00d9c: jne    0x3a2d2
  00da2: mov    r9,0x0
  00da9: sub    rsp,0x20
  00dad: movq   QWORD PTR [rsp],xmm6
  00db2: movq   QWORD PTR [rsp+0x8],xmm7
  00db8: movq   QWORD PTR [rsp+0x10],xmm8
  00dbf: mov    rdx,rdi
  00dc2: mov    rax,QWORD PTR [rbx]
  00dc5: lea    rdi,[rsp-0x18]
  00dca: mov    QWORD PTR [rdi],rax
  00dcd: mov    QWORD PTR [rbx],rdi
  00dd0: mov    QWORD PTR [rsp-0x20],0x0
  00dd9: mov    QWORD PTR [rsp-0x38],rcx
  00dde: lea    rcx,[rbp-0x60]
  00de2: mov    r8,0x1
  00de9: call   0x3a309
  00dee: lea    rdi,[rbp-0x8]
  00df2: mov    QWORD PTR [rbx],rdi
  00df5: movq   xmm6,QWORD PTR [rsp]
  00dfa: movq   xmm7,QWORD PTR [rsp+0x8]
  00e00: movq   xmm8,QWORD PTR [rsp+0x10]
  00e07: add    rsp,0x20
  00e0b: movabs r13,0x563184c82720
  00e15: test   rax,rax
  00e18: je     0xffff4bbb
  00e1e: mov    QWORD PTR [rbp-0x58],rax
:00061 
:00063 ret %6
  00e22: mov    rax,QWORD PTR [rbp-0x58]
  00e26: leave  
  00e27: ret    
==> start whole compile: <unnamed> FuncId(78) self_class:Scene start:[00000] bytecode:0x563184c85cc0
<== finished compile. elapsed:18.3µs
offset:Pos(49936) code: 195 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x38],0x4
  00010: mov    QWORD PTR [rbp-0x40],0x4
  00018: mov    rdi,QWORD PTR [rbp-0x28]
  0001c: test   rdi,0x7
  00023: jne    0x394ab
  00029: cmp    DWORD PTR [rdi+0x4],0x32
  0002d: jne    0x394ab
:00000 %2 = dynvar(1, %1)
  00033: mov    rax,QWORD PTR [rbp-0x10]
  00037: mov    rax,QWORD PTR [rax-0x20]
  0003b: mov    QWORD PTR [rbp-0x38],rax
:00001 %3 = literal[80]
  0003f: mov    rax,0xa1
  00046: mov    QWORD PTR [rbp-0x40],rax
:00002 _ = %2.call times(&%3)               [Integer]
  0004a: mov    rdi,QWORD PTR [rbp-0x38]
  0004e: test   rdi,0x1
  00055: je     0x394ba
  0005b: cmp    DWORD PTR [rip+0xffffffffffff67a7],0x26        # 0xffff6809
  00062: jne    0x394ba
  00068: mov    r9,QWORD PTR [rbp-0x40]
  0006c: mov    rdx,rdi
  0006f: mov    rax,QWORD PTR [rbx]
  00072: lea    rdi,[rsp-0x18]
  00077: mov    QWORD PTR [rdi],rax
  0007a: mov    QWORD PTR [rbx],rdi
  0007d: mov    QWORD PTR [rsp-0x20],0x0
  00086: mov    QWORD PTR [rsp-0x38],rcx
  0008b: lea    rcx,[rbp-0x48]
  0008f: mov    r8,0x0
  00096: call   0x394c9
  0009b: lea    rdi,[rbp-0x8]
  0009f: mov    QWORD PTR [rbx],rdi
  000a2: movabs r13,0x563184c85d00
  000ac: test   rax,rax
  000af: je     0xffff3d2b
:00003 
:00005 %2 = nil
  000b5: mov    QWORD PTR [rbp-0x38],0x4
:00006 ret %2
  000bd: mov    rax,QWORD PTR [rbp-0x38]
  000c1: leave  
  000c2: ret    
==> start whole compile: intersect FuncId(69) self_class:Sphere start:[00000] bytecode:0x563184c85400
<== finished compile. elapsed:142.1µs
offset:Pos(51180) code: 7270 bytes  data: 406 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004b: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00052:    	mov    rdi,QWORD PTR [rbp-0x28]
  00056: 00 	test   rdi,0x7
  0005d:    	jne    0x3901f
  00063:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00067:    	jne    0x3901f
:00000 %9 = %1.call org()                   [Ray]
  0006d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00071: 00 	test   rdi,0x7
  00078:    	jne    0x3902e
  0007e:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00082:    	jne    0x3902e
  00088: 26 	cmp    DWORD PTR [rip+0xffffffffffff629e],0x26        # 0xffff632d
  0008f:    	jne    0x3902e
  00095:    	mov    esi,DWORD PTR [rip+0x1bcf]        # 0x1c6a
  0009b:    	cmp    esi,0xffffffff
  0009e:    	je     0x3903d
  000a4:    	cmp    WORD PTR [rdi+0x2],0x3
  000a9:    	jne    0xc2
  000af:    	cmp    esi,0x6
  000b2:    	jge    0xc2
  000b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd:    	jmp    0xce
  000c2: 31 	movabs rax,0x563184053740
  000cc:    	call   rax
  000ce:    	mov    QWORD PTR [rbp-0x70],rax
:00001 
:00003 %10 = @center: Sphere[IvarId(0)]
  000d2:    	mov    rdi,QWORD PTR [rbp-0x28]
  000d6:    	mov    rax,QWORD PTR [rdi+0x10]
  000da:    	mov    QWORD PTR [rbp-0x78],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
  000de:    	mov    rdi,QWORD PTR [rbp-0x70]
  000e2: 00 	test   rdi,0x7
  000e9:    	jne    0x39066
  000ef:    	cmp    DWORD PTR [rdi+0x4],0x28
  000f3:    	jne    0x39066
  000f9: 26 	cmp    DWORD PTR [rip+0xffffffffffff622d],0x26        # 0xffff632d
  00100:    	jne    0x39066
  00106:    	mov    rax,QWORD PTR [rbx]
  00109:    	lea    rdi,[rsp-0x18]
  0010e:    	mov    QWORD PTR [rdi],rax
  00111:    	mov    QWORD PTR [rbx],rdi
  00114: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0011d:    	mov    QWORD PTR [rsp-0x38],rcx
  00122:    	mov    rax,QWORD PTR [rbp-0x70]
  00126:    	mov    QWORD PTR [rsp-0x38],rax
  0012b: 00 	mov    rdi,0x1
  00132:    	mov    rax,QWORD PTR [rbp-0x78]
  00136:    	mov    QWORD PTR [rsp-0x40],rax
  0013b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00144: 08 	movabs rax,0x80000003f
  0014e:    	mov    QWORD PTR [rsp-0x28],rax
  00153: 31 	movabs r13,0x563184c81a90
  0015d:    	call   0xffff6fbe
  00162:    	lea    rdi,[rbp-0x8]
  00166:    	mov    QWORD PTR [rbx],rdi
  00169: 31 	movabs r13,0x563184c85460
  00173:    	test   rax,rax
  00176:    	je     0xffff384f
  0017c:    	mov    QWORD PTR [rbp-0x40],rax
:00005 
:00007 %9 = %1.call dir()                   [Ray]
  00180:    	mov    rdi,QWORD PTR [rbp-0x30]
  00184: 00 	test   rdi,0x7
  0018b:    	jne    0x39075
  00191:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00195:    	jne    0x39075
  0019b: 26 	cmp    DWORD PTR [rip+0xffffffffffff618b],0x26        # 0xffff632d
  001a2:    	jne    0x39075
  001a8:    	mov    esi,DWORD PTR [rip+0x1ac4]        # 0x1c72
  001ae:    	cmp    esi,0xffffffff
  001b1:    	je     0x39084
  001b7:    	cmp    WORD PTR [rdi+0x2],0x3
  001bc:    	jne    0x1d5
  001c2:    	cmp    esi,0x6
  001c5:    	jge    0x1d5
  001cb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d0:    	jmp    0x1e1
  001d5: 31 	movabs rax,0x563184053740
  001df:    	call   rax
  001e1:    	mov    QWORD PTR [rbp-0x70],rax
:00008 
:00010 %4 = %3.call vdot(%9; 1)             [Vec]
  001e5:    	mov    rdi,QWORD PTR [rbp-0x40]
  001e9: 00 	test   rdi,0x7
  001f0:    	jne    0x390ad
  001f6:    	cmp    DWORD PTR [rdi+0x4],0x28
  001fa:    	jne    0x390ad
  00200: 26 	cmp    DWORD PTR [rip+0xffffffffffff6126],0x26        # 0xffff632d
  00207:    	jne    0x390ad
  0020d:    	mov    rax,QWORD PTR [rbx]
  00210:    	lea    rdi,[rsp-0x18]
  00215:    	mov    QWORD PTR [rdi],rax
  00218:    	mov    QWORD PTR [rbx],rdi
  0021b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00224:    	mov    QWORD PTR [rsp-0x38],rcx
  00229:    	mov    rax,QWORD PTR [rbp-0x40]
  0022d:    	mov    QWORD PTR [rsp-0x38],rax
  00232: 00 	mov    rdi,0x1
  00239:    	mov    rax,QWORD PTR [rbp-0x70]
  0023d:    	mov    QWORD PTR [rsp-0x40],rax
  00242: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0024b: 05 	movabs rax,0x500000041
  00255:    	mov    QWORD PTR [rsp-0x28],rax
  0025a: 31 	movabs r13,0x563184c66dc0
  00264:    	call   0xffff7050
  00269:    	lea    rdi,[rbp-0x8]
  0026d:    	mov    QWORD PTR [rbx],rdi
  00270: 31 	movabs r13,0x563184c854c0
  0027a:    	test   rax,rax
  0027d:    	je     0xffff384f
  00283:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %10 = %3
  00287:    	mov    rax,QWORD PTR [rbp-0x40]
  0028b:    	mov    QWORD PTR [rbp-0x78],rax
:00014 %9 = %3.call vdot(%10; 1)            [Vec]
  0028f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00293: 00 	test   rdi,0x7
  0029a:    	jne    0x390bc
  002a0:    	cmp    DWORD PTR [rdi+0x4],0x28
  002a4:    	jne    0x390bc
  002aa: 26 	cmp    DWORD PTR [rip+0xffffffffffff607c],0x26        # 0xffff632d
  002b1:    	jne    0x390bc
  002b7:    	mov    rax,QWORD PTR [rbx]
  002ba:    	lea    rdi,[rsp-0x18]
  002bf:    	mov    QWORD PTR [rdi],rax
  002c2:    	mov    QWORD PTR [rbx],rdi
  002c5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  002ce:    	mov    QWORD PTR [rsp-0x38],rcx
  002d3:    	mov    rax,QWORD PTR [rbp-0x40]
  002d7:    	mov    QWORD PTR [rsp-0x38],rax
  002dc: 00 	mov    rdi,0x1
  002e3:    	mov    rax,QWORD PTR [rbp-0x78]
  002e7:    	mov    QWORD PTR [rsp-0x40],rax
  002ec: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002f5: 05 	movabs rax,0x500000041
  002ff:    	mov    QWORD PTR [rsp-0x28],rax
  00304: 31 	movabs r13,0x563184c66dc0
  0030e:    	call   0xffff7050
  00313:    	lea    rdi,[rbp-0x8]
  00317:    	mov    QWORD PTR [rbx],rdi
  0031a: 31 	movabs r13,0x563184c85500
  00324:    	test   rax,rax
  00327:    	je     0xffff384f
  0032d:    	mov    QWORD PTR [rbp-0x70],rax
:00015 
:00017 %10 = @radius: Sphere[IvarId(1)]
  00331:    	mov    rdi,QWORD PTR [rbp-0x28]
  00335:    	mov    rax,QWORD PTR [rdi+0x18]
  00339:    	mov    QWORD PTR [rbp-0x78],rax
:00018 %11 = @radius: Sphere[IvarId(1)]
  0033d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00341:    	mov    rax,QWORD PTR [rdi+0x18]
  00345:    	mov    QWORD PTR [rbp-0x80],rax
:00019 %10 = %10 * %11                      [Float][Float]
  00349:    	mov    rdi,QWORD PTR [rbp-0x78]
  0034d: 00 	test   rdi,0x1
  00354:    	jne    0x390cb
  0035a: 00 	test   rdi,0x2
  00361:    	je     0x39d
  00367:    	xorps  xmm2,xmm2
  0036a: 00 	movabs rax,0x8000000000000002
  00374:    	cmp    rdi,rax
  00377:    	je     0x3af
  0037d:    	mov    rax,rdi
  00380:    	sar    rax,0x3f
  00384:    	add    rax,0x2
  00388:    	and    rdi,0xfffffffffffffffc
  0038c:    	or     rdi,rax
  0038f:    	rol    rdi,0x3d
  00393:    	movq   xmm2,rdi
  00398:    	jmp    0x3af
  0039d:    	call   0xffff3888
  003a2:    	test   rax,rax
  003a5:    	je     0x390cb
  003ab:    	movq   xmm2,xmm0
  003af:    	mov    rdi,QWORD PTR [rbp-0x80]
  003b3: 00 	test   rdi,0x1
  003ba:    	jne    0x390da
  003c0: 00 	test   rdi,0x2
  003c7:    	je     0x403
  003cd:    	xorps  xmm3,xmm3
  003d0: 00 	movabs rax,0x8000000000000002
  003da:    	cmp    rdi,rax
  003dd:    	je     0x415
  003e3:    	mov    rax,rdi
  003e6:    	sar    rax,0x3f
  003ea:    	add    rax,0x2
  003ee:    	and    rdi,0xfffffffffffffffc
  003f2:    	or     rdi,rax
  003f5:    	rol    rdi,0x3d
  003f9:    	movq   xmm3,rdi
  003fe:    	jmp    0x415
  00403:    	call   0xffff3888
  00408:    	test   rax,rax
  0040b:    	je     0x390da
  00411:    	movq   xmm3,xmm0
  00415:    	mulsd  xmm2,xmm3
:00020 %5 = %9 - %10                        [Float][Float]
  00419:    	mov    rdi,QWORD PTR [rbp-0x70]
  0041d: 00 	test   rdi,0x1
  00424:    	jne    0x390e9
  0042a: 00 	test   rdi,0x2
  00431:    	je     0x46d
  00437:    	xorps  xmm4,xmm4
  0043a: 00 	movabs rax,0x8000000000000002
  00444:    	cmp    rdi,rax
  00447:    	je     0x47f
  0044d:    	mov    rax,rdi
  00450:    	sar    rax,0x3f
  00454:    	add    rax,0x2
  00458:    	and    rdi,0xfffffffffffffffc
  0045c:    	or     rdi,rax
  0045f:    	rol    rdi,0x3d
  00463:    	movq   xmm4,rdi
  00468:    	jmp    0x47f
  0046d:    	call   0xffff3888
  00472:    	test   rax,rax
  00475:    	je     0x390e9
  0047b:    	movq   xmm4,xmm0
  0047f:    	movq   xmm5,xmm4
  00483:    	subsd  xmm5,xmm2
:00021 %9 = %4 * %4                         [Float][Float]
  00487:    	mov    rdi,QWORD PTR [rbp-0x48]
  0048b: 00 	test   rdi,0x1
  00492:    	jne    0x39105
  00498: 00 	test   rdi,0x2
  0049f:    	je     0x4db
  004a5:    	xorps  xmm6,xmm6
  004a8: 00 	movabs rax,0x8000000000000002
  004b2:    	cmp    rdi,rax
  004b5:    	je     0x4ed
  004bb:    	mov    rax,rdi
  004be:    	sar    rax,0x3f
  004c2:    	add    rax,0x2
  004c6:    	and    rdi,0xfffffffffffffffc
  004ca:    	or     rdi,rax
  004cd:    	rol    rdi,0x3d
  004d1:    	movq   xmm6,rdi
  004d6:    	jmp    0x4ed
  004db:    	call   0xffff3888
  004e0:    	test   rax,rax
  004e3:    	je     0x39105
  004e9:    	movq   xmm6,xmm0
  004ed:    	movq   xmm4,xmm6
  004f1:    	mulsd  xmm4,xmm6
:00022 %6 = %9 - %5                         [Float][Float]
  004f5:    	movq   xmm7,xmm4
  004f9:    	subsd  xmm7,xmm5
:00023 %9 = literal[0.0]
  004fd: 00 	movq   xmm4,QWORD PTR [rip+0x177f]        # 0x1c84
  00505: 00 	movabs rax,0x8000000000000002
  0050f:    	mov    QWORD PTR [rbp-0x70],rax
:00024 _%9 = %6 > %9                        [Float][Float]
:00025 condnotbr _%9 =>:00113
  00513:    	ucomisd xmm7,xmm4
  00517:    	jbe    0x3a6e1
:00026 %9 = %4
:00027 %9 = neg %9                          [<INVALID>]
  0051d: 01 	sub    DWORD PTR [rip+0x1768],0x1        # 0x1c8c
  00524:    	je     0x39171
  0052a:    	movq   xmm0,xmm6
  0052e:    	call   0xffff397b
  00533:    	mov    QWORD PTR [rbp-0x70],rax
  00537:    	sub    rsp,0x30
  0053b:    	movq   QWORD PTR [rsp],xmm2
  00540:    	movq   QWORD PTR [rsp+0x8],xmm3
  00546:    	movq   QWORD PTR [rsp+0x10],xmm5
  0054c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00552:    	movq   QWORD PTR [rsp+0x20],xmm7
  00558:    	mov    rdi,QWORD PTR [rbp-0x70]
  0055c:    	mov    rdx,rdi
  0055f:    	mov    rdi,rbx
  00562:    	mov    rsi,r12
  00565: 31 	movabs rax,0x5631840873b0
  0056f:    	call   rax
  00571:    	movq   xmm2,QWORD PTR [rsp]
  00576:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0057c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00582:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00588:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0058e:    	add    rsp,0x30
  00592: 31 	movabs r13,0x563184c855c0
  0059c:    	test   rax,rax
  0059f:    	je     0xffff384f
  005a5:    	mov    QWORD PTR [rbp-0x70],rax
:00028 %11 = const[Math]                    [<INVALID>]
  005a9: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5d84]        # 0xffff6334
  005b0: 00 	cmp    rax,QWORD PTR [rip+0x16ed]        # 0x1ca4
  005b7:    	jne    0x39193
  005bd: 00 	mov    rax,QWORD PTR [rip+0x16d0]        # 0x1c94
  005c4:    	mov    QWORD PTR [rbp-0x80],rax
:00029 %12 = %6
:00030 %10 = %11.call sqrt(%12; 1)          [<INVALID>]
  005c8: 01 	sub    DWORD PTR [rip+0x16dd],0x1        # 0x1cac
  005cf:    	je     0x3924c
  005d5:    	movq   xmm0,xmm7
  005d9:    	call   0xffff397b
  005de: ff 	mov    QWORD PTR [rbp-0x88],rax
  005e5:    	sub    rsp,0x20
  005e9:    	movq   QWORD PTR [rsp],xmm5
  005ee:    	movq   QWORD PTR [rsp+0x8],xmm6
  005f4:    	movq   QWORD PTR [rsp+0x10],xmm7
  005fa:    	mov    rdi,QWORD PTR [rbp-0x80]
  005fe: 31 	movabs rax,0x5631840958d0
  00608:    	call   rax
  0060a:    	mov    r15d,eax
  0060d: 00 	cmp    r15d,DWORD PTR [rip+0x16a0]        # 0x1cb4
  00614:    	jne    0x3926e
  0061a:    	mov    eax,DWORD PTR [rip+0xffffffffffff5d0d]        # 0xffff632d
  00620:    	cmp    DWORD PTR [rip+0x168a],eax        # 0x1cb0
  00626:    	jne    0x3926e
  0062c:    	mov    rax,QWORD PTR [rbx]
  0062f:    	lea    rdi,[rsp-0x18]
  00634:    	mov    QWORD PTR [rdi],rax
  00637:    	mov    QWORD PTR [rbx],rdi
  0063a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00643:    	mov    QWORD PTR [rsp-0x38],rcx
  00648:    	mov    rax,QWORD PTR [rbp-0x80]
  0064c:    	mov    QWORD PTR [rsp-0x38],rax
  00651: 00 	mov    rdi,0x1
  00658: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0065f:    	mov    QWORD PTR [rsp-0x40],rax
  00664: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0066d: 00 	movabs rax,0x0
  00677:    	mov    QWORD PTR [rsp-0x28],rax
  0067c: 00 	movabs r13,0x0
  00686:    	call   0xffff3814
  0068b:    	lea    rdi,[rbp-0x8]
  0068f:    	mov    QWORD PTR [rbx],rdi
  00692:    	movq   xmm5,QWORD PTR [rsp]
  00697:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0069d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  006a3:    	add    rsp,0x20
  006a7:    	test   rax,rax
  006aa:    	je     0x392da
  006b0:    	mov    QWORD PTR [rbp-0x78],rax
:00031 
:00033 %7 = %9 - %10                        [<INVALID>][<INVALID>]
  006b4: 01 	sub    DWORD PTR [rip+0x15fd],0x1        # 0x1cb8
  006bb:    	je     0x39312
  006c1:    	mov    rdi,QWORD PTR [rbp-0x70]
  006c5:    	mov    rsi,QWORD PTR [rbp-0x78]
  006c9:    	sub    rsp,0x20
  006cd:    	movq   QWORD PTR [rsp],xmm5
  006d2:    	movq   QWORD PTR [rsp+0x8],xmm6
  006d8:    	movq   QWORD PTR [rsp+0x10],xmm7
  006de:    	mov    rdx,rdi
  006e1:    	mov    rcx,rsi
  006e4:    	mov    rdi,rbx
  006e7:    	mov    rsi,r12
  006ea: 31 	movabs rax,0x563184088ea0
  006f4:    	call   rax
  006f6:    	movq   xmm5,QWORD PTR [rsp]
  006fb:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00701:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00707:    	add    rsp,0x20
  0070b: 31 	movabs r13,0x563184c85620
  00715:    	test   rax,rax
  00718:    	je     0xffff384f
  0071e:    	mov    QWORD PTR [rbp-0x60],rax
:00034 %9 = literal[0.0]
  00722: 00 	movq   xmm2,QWORD PTR [rip+0x159a]        # 0x1cc4
  0072a: 00 	movabs rax,0x8000000000000002
  00734:    	mov    QWORD PTR [rbp-0x70],rax
:00035 _%9 = %7 > %9                        [<INVALID>][<INVALID>]
:00036 condnotbr _%9 =>:00112
  00738:    	mov    rdi,QWORD PTR [rbp-0x60]
  0073c:    	mov    rsi,QWORD PTR [rbp-0x70]
  00740: 00 	test   rdi,0x1
  00747:    	je     0x39334
  0074d: 00 	test   rsi,0x1
  00754:    	je     0x39334
  0075a:    	cmp    rdi,rsi
  0075d:    	jle    0x3a648
:00037 %9 = %2.call t()                     [<INVALID>]
  00763: 01 	sub    DWORD PTR [rip+0x1562],0x1        # 0x1ccc
  0076a:    	je     0x393a6
  00770:    	sub    rsp,0x20
  00774:    	movq   QWORD PTR [rsp],xmm5
  00779:    	movq   QWORD PTR [rsp+0x8],xmm6
  0077f:    	movq   QWORD PTR [rsp+0x10],xmm7
  00785:    	mov    rdi,QWORD PTR [rbp-0x38]
  00789: 31 	movabs rax,0x5631840958d0
  00793:    	call   rax
  00795:    	mov    r15d,eax
  00798: 00 	cmp    r15d,DWORD PTR [rip+0x1535]        # 0x1cd4
  0079f:    	jne    0x393c8
  007a5:    	mov    eax,DWORD PTR [rip+0xffffffffffff5b82]        # 0xffff632d
  007ab:    	cmp    DWORD PTR [rip+0x151f],eax        # 0x1cd0
  007b1:    	jne    0x393c8
  007b7:    	mov    rax,QWORD PTR [rbx]
  007ba:    	lea    rdi,[rsp-0x18]
  007bf:    	mov    QWORD PTR [rdi],rax
  007c2:    	mov    QWORD PTR [rbx],rdi
  007c5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  007ce:    	mov    QWORD PTR [rsp-0x38],rcx
  007d3:    	mov    rax,QWORD PTR [rbp-0x38]
  007d7:    	mov    QWORD PTR [rsp-0x38],rax
  007dc: 00 	mov    rdi,0x0
  007e3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007ec: 00 	movabs rax,0x0
  007f6:    	mov    QWORD PTR [rsp-0x28],rax
  007fb: 00 	movabs r13,0x0
  00805:    	call   0xffff3814
  0080a:    	lea    rdi,[rbp-0x8]
  0080e:    	mov    QWORD PTR [rbx],rdi
  00811:    	movq   xmm5,QWORD PTR [rsp]
  00816:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0081c:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00822:    	add    rsp,0x20
  00826:    	test   rax,rax
  00829:    	je     0x39434
  0082f:    	mov    QWORD PTR [rbp-0x70],rax
:00038 
:00040 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00041 condnotbr _%9 =>:00112
  00833:    	mov    rdi,QWORD PTR [rbp-0x60]
  00837:    	mov    rsi,QWORD PTR [rbp-0x70]
  0083b: 00 	test   rdi,0x1
  00842:    	je     0x39443
  00848: 00 	test   rsi,0x1
  0084f:    	je     0x39443
  00855:    	cmp    rdi,rsi
  00858:    	jge    0x3a67b
:00042 _ = %2.call t=(%7; 1)                [<INVALID>]
  0085e: 01 	sub    DWORD PTR [rip+0x1473],0x1        # 0x1cd8
  00865:    	je     0x394b5
  0086b:    	sub    rsp,0x20
  0086f:    	movq   QWORD PTR [rsp],xmm5
  00874:    	movq   QWORD PTR [rsp+0x8],xmm6
  0087a:    	movq   QWORD PTR [rsp+0x10],xmm7
  00880:    	mov    rdi,QWORD PTR [rbp-0x38]
  00884: 31 	movabs rax,0x5631840958d0
  0088e:    	call   rax
  00890:    	mov    r15d,eax
  00893: 00 	cmp    r15d,DWORD PTR [rip+0x1446]        # 0x1ce0
  0089a:    	jne    0x394d7
  008a0:    	mov    eax,DWORD PTR [rip+0xffffffffffff5a87]        # 0xffff632d
  008a6:    	cmp    DWORD PTR [rip+0x1430],eax        # 0x1cdc
  008ac:    	jne    0x394d7
  008b2:    	mov    rax,QWORD PTR [rbx]
  008b5:    	lea    rdi,[rsp-0x18]
  008ba:    	mov    QWORD PTR [rdi],rax
  008bd:    	mov    QWORD PTR [rbx],rdi
  008c0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008c9:    	mov    QWORD PTR [rsp-0x38],rcx
  008ce:    	mov    rax,QWORD PTR [rbp-0x38]
  008d2:    	mov    QWORD PTR [rsp-0x38],rax
  008d7: 00 	mov    rdi,0x1
  008de:    	mov    rax,QWORD PTR [rbp-0x60]
  008e2:    	mov    QWORD PTR [rsp-0x40],rax
  008e7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008f0: 00 	movabs rax,0x0
  008fa:    	mov    QWORD PTR [rsp-0x28],rax
  008ff: 00 	movabs r13,0x0
  00909:    	call   0xffff3814
  0090e:    	lea    rdi,[rbp-0x8]
  00912:    	mov    QWORD PTR [rbx],rdi
  00915:    	movq   xmm5,QWORD PTR [rsp]
  0091a:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00920:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00926:    	add    rsp,0x20
  0092a:    	test   rax,rax
  0092d:    	je     0x39543
:00043 
:00045 %9 = literal[true]
  00933: 00 	mov    rax,0x1c
  0093a:    	mov    QWORD PTR [rbp-0x70],rax
:00046 _ = %2.call hit=(%9; 1)              [<INVALID>]
  0093e: 01 	sub    DWORD PTR [rip+0x139f],0x1        # 0x1ce4
  00945:    	je     0x3957b
  0094b:    	sub    rsp,0x20
  0094f:    	movq   QWORD PTR [rsp],xmm5
  00954:    	movq   QWORD PTR [rsp+0x8],xmm6
  0095a:    	movq   QWORD PTR [rsp+0x10],xmm7
  00960:    	mov    rdi,QWORD PTR [rbp-0x38]
  00964: 31 	movabs rax,0x5631840958d0
  0096e:    	call   rax
  00970:    	mov    r15d,eax
  00973: 00 	cmp    r15d,DWORD PTR [rip+0x1372]        # 0x1cec
  0097a:    	jne    0x3959d
  00980:    	mov    eax,DWORD PTR [rip+0xffffffffffff59a7]        # 0xffff632d
  00986:    	cmp    DWORD PTR [rip+0x135c],eax        # 0x1ce8
  0098c:    	jne    0x3959d
  00992:    	mov    rax,QWORD PTR [rbx]
  00995:    	lea    rdi,[rsp-0x18]
  0099a:    	mov    QWORD PTR [rdi],rax
  0099d:    	mov    QWORD PTR [rbx],rdi
  009a0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009a9:    	mov    QWORD PTR [rsp-0x38],rcx
  009ae:    	mov    rax,QWORD PTR [rbp-0x38]
  009b2:    	mov    QWORD PTR [rsp-0x38],rax
  009b7: 00 	mov    rdi,0x1
  009be:    	mov    rax,QWORD PTR [rbp-0x70]
  009c2:    	mov    QWORD PTR [rsp-0x40],rax
  009c7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  009d0: 00 	movabs rax,0x0
  009da:    	mov    QWORD PTR [rsp-0x28],rax
  009df: 00 	movabs r13,0x0
  009e9:    	call   0xffff3814
  009ee:    	lea    rdi,[rbp-0x8]
  009f2:    	mov    QWORD PTR [rbx],rdi
  009f5:    	movq   xmm5,QWORD PTR [rsp]
  009fa:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00a00:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00a06:    	add    rsp,0x20
  00a0a:    	test   rax,rax
  00a0d:    	je     0x39609
:00047 
:00049 %10 = const[Vec]                     [<INVALID>]
  00a13: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff591a]        # 0xffff6334
  00a1a: 00 	cmp    rax,QWORD PTR [rip+0x12e3]        # 0x1d04
  00a21:    	jne    0x39618
  00a27: 00 	mov    rax,QWORD PTR [rip+0x12c6]        # 0x1cf4
  00a2e:    	mov    QWORD PTR [rbp-0x78],rax
:00050 %12 = %1.call org()                  [<INVALID>]
  00a32: 01 	sub    DWORD PTR [rip+0x12d3],0x1        # 0x1d0c
  00a39:    	je     0x396b1
  00a3f:    	sub    rsp,0x20
  00a43:    	movq   QWORD PTR [rsp],xmm5
  00a48:    	movq   QWORD PTR [rsp+0x8],xmm6
  00a4e:    	movq   QWORD PTR [rsp+0x10],xmm7
  00a54:    	mov    rdi,QWORD PTR [rbp-0x30]
  00a58: 31 	movabs rax,0x5631840958d0
  00a62:    	call   rax
  00a64:    	mov    r15d,eax
  00a67: 00 	cmp    r15d,DWORD PTR [rip+0x12a6]        # 0x1d14
  00a6e:    	jne    0x396d3
  00a74:    	mov    eax,DWORD PTR [rip+0xffffffffffff58b3]        # 0xffff632d
  00a7a:    	cmp    DWORD PTR [rip+0x1290],eax        # 0x1d10
  00a80:    	jne    0x396d3
  00a86:    	mov    rax,QWORD PTR [rbx]
  00a89:    	lea    rdi,[rsp-0x18]
  00a8e:    	mov    QWORD PTR [rdi],rax
  00a91:    	mov    QWORD PTR [rbx],rdi
  00a94: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a9d:    	mov    QWORD PTR [rsp-0x38],rcx
  00aa2:    	mov    rax,QWORD PTR [rbp-0x30]
  00aa6:    	mov    QWORD PTR [rsp-0x38],rax
  00aab: 00 	mov    rdi,0x0
  00ab2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00abb: 00 	movabs rax,0x0
  00ac5:    	mov    QWORD PTR [rsp-0x28],rax
  00aca: 00 	movabs r13,0x0
  00ad4:    	call   0xffff3814
  00ad9:    	lea    rdi,[rbp-0x8]
  00add:    	mov    QWORD PTR [rbx],rdi
  00ae0:    	movq   xmm5,QWORD PTR [rsp]
  00ae5:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00aeb:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00af1:    	add    rsp,0x20
  00af5:    	test   rax,rax
  00af8:    	je     0x3973f
  00afe: ff 	mov    QWORD PTR [rbp-0x88],rax
:00051 
:00053 %11 = %12.call x()                   [<INVALID>]
  00b05: 01 	sub    DWORD PTR [rip+0x120c],0x1        # 0x1d18
  00b0c:    	je     0x39777
  00b12:    	sub    rsp,0x20
  00b16:    	movq   QWORD PTR [rsp],xmm5
  00b1b:    	movq   QWORD PTR [rsp+0x8],xmm6
  00b21:    	movq   QWORD PTR [rsp+0x10],xmm7
  00b27: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00b2e: 31 	movabs rax,0x5631840958d0
  00b38:    	call   rax
  00b3a:    	mov    r15d,eax
  00b3d: 00 	cmp    r15d,DWORD PTR [rip+0x11dc]        # 0x1d20
  00b44:    	jne    0x39799
  00b4a:    	mov    eax,DWORD PTR [rip+0xffffffffffff57dd]        # 0xffff632d
  00b50:    	cmp    DWORD PTR [rip+0x11c6],eax        # 0x1d1c
  00b56:    	jne    0x39799
  00b5c:    	mov    rax,QWORD PTR [rbx]
  00b5f:    	lea    rdi,[rsp-0x18]
  00b64:    	mov    QWORD PTR [rdi],rax
  00b67:    	mov    QWORD PTR [rbx],rdi
  00b6a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b73:    	mov    QWORD PTR [rsp-0x38],rcx
  00b78: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00b7f:    	mov    QWORD PTR [rsp-0x38],rax
  00b84: 00 	mov    rdi,0x0
  00b8b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b94: 00 	movabs rax,0x0
  00b9e:    	mov    QWORD PTR [rsp-0x28],rax
  00ba3: 00 	movabs r13,0x0
  00bad:    	call   0xffff3814
  00bb2:    	lea    rdi,[rbp-0x8]
  00bb6:    	mov    QWORD PTR [rbx],rdi
  00bb9:    	movq   xmm5,QWORD PTR [rsp]
  00bbe:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00bc4:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00bca:    	add    rsp,0x20
  00bce:    	test   rax,rax
  00bd1:    	je     0x39808
  00bd7:    	mov    QWORD PTR [rbp-0x80],rax
:00054 
:00056 %13 = %1.call dir()                  [<INVALID>]
  00bdb: 01 	sub    DWORD PTR [rip+0x1142],0x1        # 0x1d24
  00be2:    	je     0x39840
  00be8:    	sub    rsp,0x20
  00bec:    	movq   QWORD PTR [rsp],xmm5
  00bf1:    	movq   QWORD PTR [rsp+0x8],xmm6
  00bf7:    	movq   QWORD PTR [rsp+0x10],xmm7
  00bfd:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c01: 31 	movabs rax,0x5631840958d0
  00c0b:    	call   rax
  00c0d:    	mov    r15d,eax
  00c10: 00 	cmp    r15d,DWORD PTR [rip+0x1115]        # 0x1d2c
  00c17:    	jne    0x39862
  00c1d:    	mov    eax,DWORD PTR [rip+0xffffffffffff570a]        # 0xffff632d
  00c23:    	cmp    DWORD PTR [rip+0x10ff],eax        # 0x1d28
  00c29:    	jne    0x39862
  00c2f:    	mov    rax,QWORD PTR [rbx]
  00c32:    	lea    rdi,[rsp-0x18]
  00c37:    	mov    QWORD PTR [rdi],rax
  00c3a:    	mov    QWORD PTR [rbx],rdi
  00c3d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c46:    	mov    QWORD PTR [rsp-0x38],rcx
  00c4b:    	mov    rax,QWORD PTR [rbp-0x30]
  00c4f:    	mov    QWORD PTR [rsp-0x38],rax
  00c54: 00 	mov    rdi,0x0
  00c5b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c64: 00 	movabs rax,0x0
  00c6e:    	mov    QWORD PTR [rsp-0x28],rax
  00c73: 00 	movabs r13,0x0
  00c7d:    	call   0xffff3814
  00c82:    	lea    rdi,[rbp-0x8]
  00c86:    	mov    QWORD PTR [rbx],rdi
  00c89:    	movq   xmm5,QWORD PTR [rsp]
  00c8e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00c94:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00c9a:    	add    rsp,0x20
  00c9e:    	test   rax,rax
  00ca1:    	je     0x398ce
  00ca7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00057 
:00059 %12 = %13.call x()                   [<INVALID>]
  00cae: 01 	sub    DWORD PTR [rip+0x107b],0x1        # 0x1d30
  00cb5:    	je     0x39906
  00cbb:    	sub    rsp,0x20
  00cbf:    	movq   QWORD PTR [rsp],xmm5
  00cc4:    	movq   QWORD PTR [rsp+0x8],xmm6
  00cca:    	movq   QWORD PTR [rsp+0x10],xmm7
  00cd0: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00cd7: 31 	movabs rax,0x5631840958d0
  00ce1:    	call   rax
  00ce3:    	mov    r15d,eax
  00ce6: 00 	cmp    r15d,DWORD PTR [rip+0x104b]        # 0x1d38
  00ced:    	jne    0x39928
  00cf3:    	mov    eax,DWORD PTR [rip+0xffffffffffff5634]        # 0xffff632d
  00cf9:    	cmp    DWORD PTR [rip+0x1035],eax        # 0x1d34
  00cff:    	jne    0x39928
  00d05:    	mov    rax,QWORD PTR [rbx]
  00d08:    	lea    rdi,[rsp-0x18]
  00d0d:    	mov    QWORD PTR [rdi],rax
  00d10:    	mov    QWORD PTR [rbx],rdi
  00d13: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d1c:    	mov    QWORD PTR [rsp-0x38],rcx
  00d21: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00d28:    	mov    QWORD PTR [rsp-0x38],rax
  00d2d: 00 	mov    rdi,0x0
  00d34: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d3d: 00 	movabs rax,0x0
  00d47:    	mov    QWORD PTR [rsp-0x28],rax
  00d4c: 00 	movabs r13,0x0
  00d56:    	call   0xffff3814
  00d5b:    	lea    rdi,[rbp-0x8]
  00d5f:    	mov    QWORD PTR [rbx],rdi
  00d62:    	movq   xmm5,QWORD PTR [rsp]
  00d67:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00d6d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00d73:    	add    rsp,0x20
  00d77:    	test   rax,rax
  00d7a:    	je     0x39997
  00d80: ff 	mov    QWORD PTR [rbp-0x88],rax
:00060 
:00062 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00d87: 01 	sub    DWORD PTR [rip+0xfae],0x1        # 0x1d3c
  00d8e:    	je     0x399cf
  00d94: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00d9b:    	mov    rsi,QWORD PTR [rbp-0x60]
  00d9f:    	sub    rsp,0x20
  00da3:    	movq   QWORD PTR [rsp],xmm5
  00da8:    	movq   QWORD PTR [rsp+0x8],xmm6
  00dae:    	movq   QWORD PTR [rsp+0x10],xmm7
  00db4:    	mov    rdx,rdi
  00db7:    	mov    rcx,rsi
  00dba:    	mov    rdi,rbx
  00dbd:    	mov    rsi,r12
  00dc0: 31 	movabs rax,0x563184089e00
  00dca:    	call   rax
  00dcc:    	movq   xmm5,QWORD PTR [rsp]
  00dd1:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00dd7:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00ddd:    	add    rsp,0x20
  00de1: 31 	movabs r13,0x563184c857f0
  00deb:    	test   rax,rax
  00dee:    	je     0xffff384f
  00df4: ff 	mov    QWORD PTR [rbp-0x88],rax
:00063 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00dfb: 01 	sub    DWORD PTR [rip+0xf3e],0x1        # 0x1d40
  00e02:    	je     0x39a1a
  00e08:    	mov    rdi,QWORD PTR [rbp-0x80]
  00e0c: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00e13:    	sub    rsp,0x20
  00e17:    	movq   QWORD PTR [rsp],xmm5
  00e1c:    	movq   QWORD PTR [rsp+0x8],xmm6
  00e22:    	movq   QWORD PTR [rsp+0x10],xmm7
  00e28:    	mov    rdx,rdi
  00e2b:    	mov    rcx,rsi
  00e2e:    	mov    rdi,rbx
  00e31:    	mov    rsi,r12
  00e34: 31 	movabs rax,0x563184087f80
  00e3e:    	call   rax
  00e40:    	movq   xmm5,QWORD PTR [rsp]
  00e45:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e4b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e51:    	add    rsp,0x20
  00e55: 31 	movabs r13,0x563184c85800
  00e5f:    	test   rax,rax
  00e62:    	je     0xffff384f
  00e68:    	mov    QWORD PTR [rbp-0x80],rax
:00064 %13 = %1.call org()                  [<INVALID>]
  00e6c: 01 	sub    DWORD PTR [rip+0xed1],0x1        # 0x1d44
  00e73:    	je     0x39a65
  00e79:    	sub    rsp,0x20
  00e7d:    	movq   QWORD PTR [rsp],xmm5
  00e82:    	movq   QWORD PTR [rsp+0x8],xmm6
  00e88:    	movq   QWORD PTR [rsp+0x10],xmm7
  00e8e:    	mov    rdi,QWORD PTR [rbp-0x30]
  00e92: 31 	movabs rax,0x5631840958d0
  00e9c:    	call   rax
  00e9e:    	mov    r15d,eax
  00ea1: 00 	cmp    r15d,DWORD PTR [rip+0xea4]        # 0x1d4c
  00ea8:    	jne    0x39a87
  00eae:    	mov    eax,DWORD PTR [rip+0xffffffffffff5479]        # 0xffff632d
  00eb4:    	cmp    DWORD PTR [rip+0xe8e],eax        # 0x1d48
  00eba:    	jne    0x39a87
  00ec0:    	mov    rax,QWORD PTR [rbx]
  00ec3:    	lea    rdi,[rsp-0x18]
  00ec8:    	mov    QWORD PTR [rdi],rax
  00ecb:    	mov    QWORD PTR [rbx],rdi
  00ece: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ed7:    	mov    QWORD PTR [rsp-0x38],rcx
  00edc:    	mov    rax,QWORD PTR [rbp-0x30]
  00ee0:    	mov    QWORD PTR [rsp-0x38],rax
  00ee5: 00 	mov    rdi,0x0
  00eec: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ef5: 00 	movabs rax,0x0
  00eff:    	mov    QWORD PTR [rsp-0x28],rax
  00f04: 00 	movabs r13,0x0
  00f0e:    	call   0xffff3814
  00f13:    	lea    rdi,[rbp-0x8]
  00f17:    	mov    QWORD PTR [rbx],rdi
  00f1a:    	movq   xmm5,QWORD PTR [rsp]
  00f1f:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00f25:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00f2b:    	add    rsp,0x20
  00f2f:    	test   rax,rax
  00f32:    	je     0x39af3
  00f38: ff 	mov    QWORD PTR [rbp-0x90],rax
:00065 
:00067 %12 = %13.call y()                   [<INVALID>]
  00f3f: 01 	sub    DWORD PTR [rip+0xe0a],0x1        # 0x1d50
  00f46:    	je     0x39b2b
  00f4c:    	sub    rsp,0x20
  00f50:    	movq   QWORD PTR [rsp],xmm5
  00f55:    	movq   QWORD PTR [rsp+0x8],xmm6
  00f5b:    	movq   QWORD PTR [rsp+0x10],xmm7
  00f61: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00f68: 31 	movabs rax,0x5631840958d0
  00f72:    	call   rax
  00f74:    	mov    r15d,eax
  00f77: 00 	cmp    r15d,DWORD PTR [rip+0xdda]        # 0x1d58
  00f7e:    	jne    0x39b4d
  00f84:    	mov    eax,DWORD PTR [rip+0xffffffffffff53a3]        # 0xffff632d
  00f8a:    	cmp    DWORD PTR [rip+0xdc4],eax        # 0x1d54
  00f90:    	jne    0x39b4d
  00f96:    	mov    rax,QWORD PTR [rbx]
  00f99:    	lea    rdi,[rsp-0x18]
  00f9e:    	mov    QWORD PTR [rdi],rax
  00fa1:    	mov    QWORD PTR [rbx],rdi
  00fa4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fad:    	mov    QWORD PTR [rsp-0x38],rcx
  00fb2: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00fb9:    	mov    QWORD PTR [rsp-0x38],rax
  00fbe: 00 	mov    rdi,0x0
  00fc5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fce: 00 	movabs rax,0x0
  00fd8:    	mov    QWORD PTR [rsp-0x28],rax
  00fdd: 00 	movabs r13,0x0
  00fe7:    	call   0xffff3814
  00fec:    	lea    rdi,[rbp-0x8]
  00ff0:    	mov    QWORD PTR [rbx],rdi
  00ff3:    	movq   xmm5,QWORD PTR [rsp]
  00ff8:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00ffe:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01004:    	add    rsp,0x20
  01008:    	test   rax,rax
  0100b:    	je     0x39bbc
  01011: ff 	mov    QWORD PTR [rbp-0x88],rax
:00068 
:00070 %14 = %1.call dir()                  [<INVALID>]
  01018: 01 	sub    DWORD PTR [rip+0xd3d],0x1        # 0x1d5c
  0101f:    	je     0x39bf4
  01025:    	sub    rsp,0x20
  01029:    	movq   QWORD PTR [rsp],xmm5
  0102e:    	movq   QWORD PTR [rsp+0x8],xmm6
  01034:    	movq   QWORD PTR [rsp+0x10],xmm7
  0103a:    	mov    rdi,QWORD PTR [rbp-0x30]
  0103e: 31 	movabs rax,0x5631840958d0
  01048:    	call   rax
  0104a:    	mov    r15d,eax
  0104d: 00 	cmp    r15d,DWORD PTR [rip+0xd10]        # 0x1d64
  01054:    	jne    0x39c16
  0105a:    	mov    eax,DWORD PTR [rip+0xffffffffffff52cd]        # 0xffff632d
  01060:    	cmp    DWORD PTR [rip+0xcfa],eax        # 0x1d60
  01066:    	jne    0x39c16
  0106c:    	mov    rax,QWORD PTR [rbx]
  0106f:    	lea    rdi,[rsp-0x18]
  01074:    	mov    QWORD PTR [rdi],rax
  01077:    	mov    QWORD PTR [rbx],rdi
  0107a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01083:    	mov    QWORD PTR [rsp-0x38],rcx
  01088:    	mov    rax,QWORD PTR [rbp-0x30]
  0108c:    	mov    QWORD PTR [rsp-0x38],rax
  01091: 00 	mov    rdi,0x0
  01098: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010a1: 00 	movabs rax,0x0
  010ab:    	mov    QWORD PTR [rsp-0x28],rax
  010b0: 00 	movabs r13,0x0
  010ba:    	call   0xffff3814
  010bf:    	lea    rdi,[rbp-0x8]
  010c3:    	mov    QWORD PTR [rbx],rdi
  010c6:    	movq   xmm5,QWORD PTR [rsp]
  010cb:    	movq   xmm6,QWORD PTR [rsp+0x8]
  010d1:    	movq   xmm7,QWORD PTR [rsp+0x10]
  010d7:    	add    rsp,0x20
  010db:    	test   rax,rax
  010de:    	je     0x39c82
  010e4: ff 	mov    QWORD PTR [rbp-0x98],rax
:00071 
:00073 %13 = %14.call y()                   [<INVALID>]
  010eb: 01 	sub    DWORD PTR [rip+0xc76],0x1        # 0x1d68
  010f2:    	je     0x39cba
  010f8:    	sub    rsp,0x20
  010fc:    	movq   QWORD PTR [rsp],xmm5
  01101:    	movq   QWORD PTR [rsp+0x8],xmm6
  01107:    	movq   QWORD PTR [rsp+0x10],xmm7
  0110d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01114: 31 	movabs rax,0x5631840958d0
  0111e:    	call   rax
  01120:    	mov    r15d,eax
  01123: 00 	cmp    r15d,DWORD PTR [rip+0xc46]        # 0x1d70
  0112a:    	jne    0x39cdc
  01130:    	mov    eax,DWORD PTR [rip+0xffffffffffff51f7]        # 0xffff632d
  01136:    	cmp    DWORD PTR [rip+0xc30],eax        # 0x1d6c
  0113c:    	jne    0x39cdc
  01142:    	mov    rax,QWORD PTR [rbx]
  01145:    	lea    rdi,[rsp-0x18]
  0114a:    	mov    QWORD PTR [rdi],rax
  0114d:    	mov    QWORD PTR [rbx],rdi
  01150: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01159:    	mov    QWORD PTR [rsp-0x38],rcx
  0115e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01165:    	mov    QWORD PTR [rsp-0x38],rax
  0116a: 00 	mov    rdi,0x0
  01171: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0117a: 00 	movabs rax,0x0
  01184:    	mov    QWORD PTR [rsp-0x28],rax
  01189: 00 	movabs r13,0x0
  01193:    	call   0xffff3814
  01198:    	lea    rdi,[rbp-0x8]
  0119c:    	mov    QWORD PTR [rbx],rdi
  0119f:    	movq   xmm5,QWORD PTR [rsp]
  011a4:    	movq   xmm6,QWORD PTR [rsp+0x8]
  011aa:    	movq   xmm7,QWORD PTR [rsp+0x10]
  011b0:    	add    rsp,0x20
  011b4:    	test   rax,rax
  011b7:    	je     0x39d4b
  011bd: ff 	mov    QWORD PTR [rbp-0x90],rax
:00074 
:00076 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  011c4: 01 	sub    DWORD PTR [rip+0xba9],0x1        # 0x1d74
  011cb:    	je     0x39d83
  011d1: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  011d8:    	mov    rsi,QWORD PTR [rbp-0x60]
  011dc:    	sub    rsp,0x20
  011e0:    	movq   QWORD PTR [rsp],xmm5
  011e5:    	movq   QWORD PTR [rsp+0x8],xmm6
  011eb:    	movq   QWORD PTR [rsp+0x10],xmm7
  011f1:    	mov    rdx,rdi
  011f4:    	mov    rcx,rsi
  011f7:    	mov    rdi,rbx
  011fa:    	mov    rsi,r12
  011fd: 31 	movabs rax,0x563184089e00
  01207:    	call   rax
  01209:    	movq   xmm5,QWORD PTR [rsp]
  0120e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01214:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0121a:    	add    rsp,0x20
  0121e: 31 	movabs r13,0x563184c858d0
  01228:    	test   rax,rax
  0122b:    	je     0xffff384f
  01231: ff 	mov    QWORD PTR [rbp-0x90],rax
:00077 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  01238: 01 	sub    DWORD PTR [rip+0xb39],0x1        # 0x1d78
  0123f:    	je     0x39dce
  01245: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0124c: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  01253:    	sub    rsp,0x20
  01257:    	movq   QWORD PTR [rsp],xmm5
  0125c:    	movq   QWORD PTR [rsp+0x8],xmm6
  01262:    	movq   QWORD PTR [rsp+0x10],xmm7
  01268:    	mov    rdx,rdi
  0126b:    	mov    rcx,rsi
  0126e:    	mov    rdi,rbx
  01271:    	mov    rsi,r12
  01274: 31 	movabs rax,0x563184087f80
  0127e:    	call   rax
  01280:    	movq   xmm5,QWORD PTR [rsp]
  01285:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0128b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01291:    	add    rsp,0x20
  01295: 31 	movabs r13,0x563184c858e0
  0129f:    	test   rax,rax
  012a2:    	je     0xffff384f
  012a8: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 %14 = %1.call org()                  [<INVALID>]
  012af: 01 	sub    DWORD PTR [rip+0xac6],0x1        # 0x1d7c
  012b6:    	je     0x39e19
  012bc:    	sub    rsp,0x20
  012c0:    	movq   QWORD PTR [rsp],xmm5
  012c5:    	movq   QWORD PTR [rsp+0x8],xmm6
  012cb:    	movq   QWORD PTR [rsp+0x10],xmm7
  012d1:    	mov    rdi,QWORD PTR [rbp-0x30]
  012d5: 31 	movabs rax,0x5631840958d0
  012df:    	call   rax
  012e1:    	mov    r15d,eax
  012e4: 00 	cmp    r15d,DWORD PTR [rip+0xa99]        # 0x1d84
  012eb:    	jne    0x39e3b
  012f1:    	mov    eax,DWORD PTR [rip+0xffffffffffff5036]        # 0xffff632d
  012f7:    	cmp    DWORD PTR [rip+0xa83],eax        # 0x1d80
  012fd:    	jne    0x39e3b
  01303:    	mov    rax,QWORD PTR [rbx]
  01306:    	lea    rdi,[rsp-0x18]
  0130b:    	mov    QWORD PTR [rdi],rax
  0130e:    	mov    QWORD PTR [rbx],rdi
  01311: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0131a:    	mov    QWORD PTR [rsp-0x38],rcx
  0131f:    	mov    rax,QWORD PTR [rbp-0x30]
  01323:    	mov    QWORD PTR [rsp-0x38],rax
  01328: 00 	mov    rdi,0x0
  0132f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01338: 00 	movabs rax,0x0
  01342:    	mov    QWORD PTR [rsp-0x28],rax
  01347: 00 	movabs r13,0x0
  01351:    	call   0xffff3814
  01356:    	lea    rdi,[rbp-0x8]
  0135a:    	mov    QWORD PTR [rbx],rdi
  0135d:    	movq   xmm5,QWORD PTR [rsp]
  01362:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01368:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0136e:    	add    rsp,0x20
  01372:    	test   rax,rax
  01375:    	je     0x39ea7
  0137b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00079 
:00081 %13 = %14.call z()                   [<INVALID>]
  01382: 01 	sub    DWORD PTR [rip+0x9ff],0x1        # 0x1d88
  01389:    	je     0x39edf
  0138f:    	sub    rsp,0x20
  01393:    	movq   QWORD PTR [rsp],xmm5
  01398:    	movq   QWORD PTR [rsp+0x8],xmm6
  0139e:    	movq   QWORD PTR [rsp+0x10],xmm7
  013a4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  013ab: 31 	movabs rax,0x5631840958d0
  013b5:    	call   rax
  013b7:    	mov    r15d,eax
  013ba: 00 	cmp    r15d,DWORD PTR [rip+0x9cf]        # 0x1d90
  013c1:    	jne    0x39f01
  013c7:    	mov    eax,DWORD PTR [rip+0xffffffffffff4f60]        # 0xffff632d
  013cd:    	cmp    DWORD PTR [rip+0x9b9],eax        # 0x1d8c
  013d3:    	jne    0x39f01
  013d9:    	mov    rax,QWORD PTR [rbx]
  013dc:    	lea    rdi,[rsp-0x18]
  013e1:    	mov    QWORD PTR [rdi],rax
  013e4:    	mov    QWORD PTR [rbx],rdi
  013e7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013f0:    	mov    QWORD PTR [rsp-0x38],rcx
  013f5: ff 	mov    rax,QWORD PTR [rbp-0x98]
  013fc:    	mov    QWORD PTR [rsp-0x38],rax
  01401: 00 	mov    rdi,0x0
  01408: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01411: 00 	movabs rax,0x0
  0141b:    	mov    QWORD PTR [rsp-0x28],rax
  01420: 00 	movabs r13,0x0
  0142a:    	call   0xffff3814
  0142f:    	lea    rdi,[rbp-0x8]
  01433:    	mov    QWORD PTR [rbx],rdi
  01436:    	movq   xmm5,QWORD PTR [rsp]
  0143b:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01441:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01447:    	add    rsp,0x20
  0144b:    	test   rax,rax
  0144e:    	je     0x39f70
  01454: ff 	mov    QWORD PTR [rbp-0x90],rax
:00082 
:00084 %15 = %1.call dir()                  [<INVALID>]
  0145b: 01 	sub    DWORD PTR [rip+0x932],0x1        # 0x1d94
  01462:    	je     0x39fa8
  01468:    	sub    rsp,0x20
  0146c:    	movq   QWORD PTR [rsp],xmm5
  01471:    	movq   QWORD PTR [rsp+0x8],xmm6
  01477:    	movq   QWORD PTR [rsp+0x10],xmm7
  0147d:    	mov    rdi,QWORD PTR [rbp-0x30]
  01481: 31 	movabs rax,0x5631840958d0
  0148b:    	call   rax
  0148d:    	mov    r15d,eax
  01490: 00 	cmp    r15d,DWORD PTR [rip+0x905]        # 0x1d9c
  01497:    	jne    0x39fca
  0149d:    	mov    eax,DWORD PTR [rip+0xffffffffffff4e8a]        # 0xffff632d
  014a3:    	cmp    DWORD PTR [rip+0x8ef],eax        # 0x1d98
  014a9:    	jne    0x39fca
  014af:    	mov    rax,QWORD PTR [rbx]
  014b2:    	lea    rdi,[rsp-0x18]
  014b7:    	mov    QWORD PTR [rdi],rax
  014ba:    	mov    QWORD PTR [rbx],rdi
  014bd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014c6:    	mov    QWORD PTR [rsp-0x38],rcx
  014cb:    	mov    rax,QWORD PTR [rbp-0x30]
  014cf:    	mov    QWORD PTR [rsp-0x38],rax
  014d4: 00 	mov    rdi,0x0
  014db: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014e4: 00 	movabs rax,0x0
  014ee:    	mov    QWORD PTR [rsp-0x28],rax
  014f3: 00 	movabs r13,0x0
  014fd:    	call   0xffff3814
  01502:    	lea    rdi,[rbp-0x8]
  01506:    	mov    QWORD PTR [rbx],rdi
  01509:    	movq   xmm5,QWORD PTR [rsp]
  0150e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01514:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0151a:    	add    rsp,0x20
  0151e:    	test   rax,rax
  01521:    	je     0x3a036
  01527: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00085 
:00087 %14 = %15.call z()                   [<INVALID>]
  0152e: 01 	sub    DWORD PTR [rip+0x86b],0x1        # 0x1da0
  01535:    	je     0x3a06e
  0153b:    	sub    rsp,0x20
  0153f:    	movq   QWORD PTR [rsp],xmm5
  01544:    	movq   QWORD PTR [rsp+0x8],xmm6
  0154a:    	movq   QWORD PTR [rsp+0x10],xmm7
  01550: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01557: 31 	movabs rax,0x5631840958d0
  01561:    	call   rax
  01563:    	mov    r15d,eax
  01566: 00 	cmp    r15d,DWORD PTR [rip+0x83b]        # 0x1da8
  0156d:    	jne    0x3a090
  01573:    	mov    eax,DWORD PTR [rip+0xffffffffffff4db4]        # 0xffff632d
  01579:    	cmp    DWORD PTR [rip+0x825],eax        # 0x1da4
  0157f:    	jne    0x3a090
  01585:    	mov    rax,QWORD PTR [rbx]
  01588:    	lea    rdi,[rsp-0x18]
  0158d:    	mov    QWORD PTR [rdi],rax
  01590:    	mov    QWORD PTR [rbx],rdi
  01593: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0159c:    	mov    QWORD PTR [rsp-0x38],rcx
  015a1: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  015a8:    	mov    QWORD PTR [rsp-0x38],rax
  015ad: 00 	mov    rdi,0x0
  015b4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015bd: 00 	movabs rax,0x0
  015c7:    	mov    QWORD PTR [rsp-0x28],rax
  015cc: 00 	movabs r13,0x0
  015d6:    	call   0xffff3814
  015db:    	lea    rdi,[rbp-0x8]
  015df:    	mov    QWORD PTR [rbx],rdi
  015e2:    	movq   xmm5,QWORD PTR [rsp]
  015e7:    	movq   xmm6,QWORD PTR [rsp+0x8]
  015ed:    	movq   xmm7,QWORD PTR [rsp+0x10]
  015f3:    	add    rsp,0x20
  015f7:    	test   rax,rax
  015fa:    	je     0x3a0ff
  01600: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 
:00090 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01607: 01 	sub    DWORD PTR [rip+0x79e],0x1        # 0x1dac
  0160e:    	je     0x3a137
  01614: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0161b:    	mov    rsi,QWORD PTR [rbp-0x60]
  0161f:    	sub    rsp,0x20
  01623:    	movq   QWORD PTR [rsp],xmm5
  01628:    	movq   QWORD PTR [rsp+0x8],xmm6
  0162e:    	movq   QWORD PTR [rsp+0x10],xmm7
  01634:    	mov    rdx,rdi
  01637:    	mov    rcx,rsi
  0163a:    	mov    rdi,rbx
  0163d:    	mov    rsi,r12
  01640: 31 	movabs rax,0x563184089e00
  0164a:    	call   rax
  0164c:    	movq   xmm5,QWORD PTR [rsp]
  01651:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01657:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0165d:    	add    rsp,0x20
  01661: 31 	movabs r13,0x563184c859b0
  0166b:    	test   rax,rax
  0166e:    	je     0xffff384f
  01674: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  0167b: 01 	sub    DWORD PTR [rip+0x72e],0x1        # 0x1db0
  01682:    	je     0x3a182
  01688: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0168f: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  01696:    	sub    rsp,0x20
  0169a:    	movq   QWORD PTR [rsp],xmm5
  0169f:    	movq   QWORD PTR [rsp+0x8],xmm6
  016a5:    	movq   QWORD PTR [rsp+0x10],xmm7
  016ab:    	mov    rdx,rdi
  016ae:    	mov    rcx,rsi
  016b1:    	mov    rdi,rbx
  016b4:    	mov    rsi,r12
  016b7: 31 	movabs rax,0x563184087f80
  016c1:    	call   rax
  016c3:    	movq   xmm5,QWORD PTR [rsp]
  016c8:    	movq   xmm6,QWORD PTR [rsp+0x8]
  016ce:    	movq   xmm7,QWORD PTR [rsp+0x10]
  016d4:    	add    rsp,0x20
  016d8: 31 	movabs r13,0x563184c859c0
  016e2:    	test   rax,rax
  016e5:    	je     0xffff384f
  016eb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 %9 = %10.call new(%11; 3)            [<INVALID>]
  016f2: 01 	sub    DWORD PTR [rip+0x6bb],0x1        # 0x1db4
  016f9:    	je     0x3a1cd
  016ff:    	sub    rsp,0x20
  01703:    	movq   QWORD PTR [rsp],xmm5
  01708:    	movq   QWORD PTR [rsp+0x8],xmm6
  0170e:    	movq   QWORD PTR [rsp+0x10],xmm7
  01714:    	mov    rdi,QWORD PTR [rbp-0x78]
  01718: 31 	movabs rax,0x5631840958d0
  01722:    	call   rax
  01724:    	mov    r15d,eax
  01727: 00 	cmp    r15d,DWORD PTR [rip+0x68e]        # 0x1dbc
  0172e:    	jne    0x3a1ef
  01734:    	mov    eax,DWORD PTR [rip+0xffffffffffff4bf3]        # 0xffff632d
  0173a:    	cmp    DWORD PTR [rip+0x678],eax        # 0x1db8
  01740:    	jne    0x3a1ef
  01746:    	mov    rax,QWORD PTR [rbx]
  01749:    	lea    rdi,[rsp-0x18]
  0174e:    	mov    QWORD PTR [rdi],rax
  01751:    	mov    QWORD PTR [rbx],rdi
  01754: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0175d:    	mov    QWORD PTR [rsp-0x38],rcx
  01762:    	mov    rax,QWORD PTR [rbp-0x78]
  01766:    	mov    QWORD PTR [rsp-0x38],rax
  0176b: 00 	mov    rdi,0x3
  01772:    	mov    rax,QWORD PTR [rbp-0x80]
  01776:    	mov    QWORD PTR [rsp-0x40],rax
  0177b: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01782:    	mov    QWORD PTR [rsp-0x48],rax
  01787: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0178e:    	mov    QWORD PTR [rsp-0x50],rax
  01793: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0179c: 00 	movabs rax,0x0
  017a6:    	mov    QWORD PTR [rsp-0x28],rax
  017ab: 00 	movabs r13,0x0
  017b5:    	call   0xffff3814
  017ba:    	lea    rdi,[rbp-0x8]
  017be:    	mov    QWORD PTR [rbx],rdi
  017c1:    	movq   xmm5,QWORD PTR [rsp]
  017c6:    	movq   xmm6,QWORD PTR [rsp+0x8]
  017cc:    	movq   xmm7,QWORD PTR [rsp+0x10]
  017d2:    	add    rsp,0x20
  017d6:    	test   rax,rax
  017d9:    	je     0x3a25b
  017df:    	mov    QWORD PTR [rbp-0x70],rax
:00093 
:00095 _ = %2.call pl=(%9; 1)               [<INVALID>]
  017e3: 01 	sub    DWORD PTR [rip+0x5d6],0x1        # 0x1dc0
  017ea:    	je     0x3a293
  017f0:    	sub    rsp,0x20
  017f4:    	movq   QWORD PTR [rsp],xmm5
  017f9:    	movq   QWORD PTR [rsp+0x8],xmm6
  017ff:    	movq   QWORD PTR [rsp+0x10],xmm7
  01805:    	mov    rdi,QWORD PTR [rbp-0x38]
  01809: 31 	movabs rax,0x5631840958d0
  01813:    	call   rax
  01815:    	mov    r15d,eax
  01818: 00 	cmp    r15d,DWORD PTR [rip+0x5a9]        # 0x1dc8
  0181f:    	jne    0x3a2b5
  01825:    	mov    eax,DWORD PTR [rip+0xffffffffffff4b02]        # 0xffff632d
  0182b:    	cmp    DWORD PTR [rip+0x593],eax        # 0x1dc4
  01831:    	jne    0x3a2b5
  01837:    	mov    rax,QWORD PTR [rbx]
  0183a:    	lea    rdi,[rsp-0x18]
  0183f:    	mov    QWORD PTR [rdi],rax
  01842:    	mov    QWORD PTR [rbx],rdi
  01845: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0184e:    	mov    QWORD PTR [rsp-0x38],rcx
  01853:    	mov    rax,QWORD PTR [rbp-0x38]
  01857:    	mov    QWORD PTR [rsp-0x38],rax
  0185c: 00 	mov    rdi,0x1
  01863:    	mov    rax,QWORD PTR [rbp-0x70]
  01867:    	mov    QWORD PTR [rsp-0x40],rax
  0186c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01875: 00 	movabs rax,0x0
  0187f:    	mov    QWORD PTR [rsp-0x28],rax
  01884: 00 	movabs r13,0x0
  0188e:    	call   0xffff3814
  01893:    	lea    rdi,[rbp-0x8]
  01897:    	mov    QWORD PTR [rbx],rdi
  0189a:    	movq   xmm5,QWORD PTR [rsp]
  0189f:    	movq   xmm6,QWORD PTR [rsp+0x8]
  018a5:    	movq   xmm7,QWORD PTR [rsp+0x10]
  018ab:    	add    rsp,0x20
  018af:    	test   rax,rax
  018b2:    	je     0x3a321
:00096 
:00098 %9 = %2.call pl()                    [<INVALID>]
  018b8: 01 	sub    DWORD PTR [rip+0x50d],0x1        # 0x1dcc
  018bf:    	je     0x3a359
  018c5:    	sub    rsp,0x20
  018c9:    	movq   QWORD PTR [rsp],xmm5
  018ce:    	movq   QWORD PTR [rsp+0x8],xmm6
  018d4:    	movq   QWORD PTR [rsp+0x10],xmm7
  018da:    	mov    rdi,QWORD PTR [rbp-0x38]
  018de: 31 	movabs rax,0x5631840958d0
  018e8:    	call   rax
  018ea:    	mov    r15d,eax
  018ed: 00 	cmp    r15d,DWORD PTR [rip+0x4e0]        # 0x1dd4
  018f4:    	jne    0x3a37b
  018fa:    	mov    eax,DWORD PTR [rip+0xffffffffffff4a2d]        # 0xffff632d
  01900:    	cmp    DWORD PTR [rip+0x4ca],eax        # 0x1dd0
  01906:    	jne    0x3a37b
  0190c:    	mov    rax,QWORD PTR [rbx]
  0190f:    	lea    rdi,[rsp-0x18]
  01914:    	mov    QWORD PTR [rdi],rax
  01917:    	mov    QWORD PTR [rbx],rdi
  0191a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01923:    	mov    QWORD PTR [rsp-0x38],rcx
  01928:    	mov    rax,QWORD PTR [rbp-0x38]
  0192c:    	mov    QWORD PTR [rsp-0x38],rax
  01931: 00 	mov    rdi,0x0
  01938: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01941: 00 	movabs rax,0x0
  0194b:    	mov    QWORD PTR [rsp-0x28],rax
  01950: 00 	movabs r13,0x0
  0195a:    	call   0xffff3814
  0195f:    	lea    rdi,[rbp-0x8]
  01963:    	mov    QWORD PTR [rbx],rdi
  01966:    	movq   xmm5,QWORD PTR [rsp]
  0196b:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01971:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01977:    	add    rsp,0x20
  0197b:    	test   rax,rax
  0197e:    	je     0x3a3e7
  01984:    	mov    QWORD PTR [rbp-0x70],rax
:00099 
:00101 %10 = @center: <INVALID>[IvarId(0)]
  01988:    	mov    rdi,QWORD PTR [rbp-0x28]
  0198c:    	sub    rsp,0x20
  01990:    	movq   QWORD PTR [rsp],xmm5
  01995:    	movq   QWORD PTR [rsp+0x8],xmm6
  0199b:    	movq   QWORD PTR [rsp+0x10],xmm7
  019a1: 00 	mov    rsi,0x85
  019a8:    	mov    rdx,r12
  019ab: 31 	movabs rax,0x5631840b8770
  019b5:    	call   rax
  019b7:    	movq   xmm5,QWORD PTR [rsp]
  019bc:    	movq   xmm6,QWORD PTR [rsp+0x8]
  019c2:    	movq   xmm7,QWORD PTR [rsp+0x10]
  019c8:    	add    rsp,0x20
  019cc:    	mov    QWORD PTR [rbp-0x78],rax
:00102 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  019d0: 01 	sub    DWORD PTR [rip+0x401],0x1        # 0x1dd8
  019d7:    	je     0x3a41f
  019dd:    	sub    rsp,0x20
  019e1:    	movq   QWORD PTR [rsp],xmm5
  019e6:    	movq   QWORD PTR [rsp+0x8],xmm6
  019ec:    	movq   QWORD PTR [rsp+0x10],xmm7
  019f2:    	mov    rdi,QWORD PTR [rbp-0x70]
  019f6: 31 	movabs rax,0x5631840958d0
  01a00:    	call   rax
  01a02:    	mov    r15d,eax
  01a05: 00 	cmp    r15d,DWORD PTR [rip+0x3d4]        # 0x1de0
  01a0c:    	jne    0x3a441
  01a12:    	mov    eax,DWORD PTR [rip+0xffffffffffff4915]        # 0xffff632d
  01a18:    	cmp    DWORD PTR [rip+0x3be],eax        # 0x1ddc
  01a1e:    	jne    0x3a441
  01a24:    	mov    rax,QWORD PTR [rbx]
  01a27:    	lea    rdi,[rsp-0x18]
  01a2c:    	mov    QWORD PTR [rdi],rax
  01a2f:    	mov    QWORD PTR [rbx],rdi
  01a32: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a3b:    	mov    QWORD PTR [rsp-0x38],rcx
  01a40:    	mov    rax,QWORD PTR [rbp-0x70]
  01a44:    	mov    QWORD PTR [rsp-0x38],rax
  01a49: 00 	mov    rdi,0x1
  01a50:    	mov    rax,QWORD PTR [rbp-0x78]
  01a54:    	mov    QWORD PTR [rsp-0x40],rax
  01a59: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a62: 00 	movabs rax,0x0
  01a6c:    	mov    QWORD PTR [rsp-0x28],rax
  01a71: 00 	movabs r13,0x0
  01a7b:    	call   0xffff3814
  01a80:    	lea    rdi,[rbp-0x8]
  01a84:    	mov    QWORD PTR [rbx],rdi
  01a87:    	movq   xmm5,QWORD PTR [rsp]
  01a8c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01a92:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01a98:    	add    rsp,0x20
  01a9c:    	test   rax,rax
  01a9f:    	je     0x3a4ad
  01aa5:    	mov    QWORD PTR [rbp-0x68],rax
:00103 
:00105 %9 = %8.call vnormalize()            [<INVALID>]
  01aa9: 01 	sub    DWORD PTR [rip+0x334],0x1        # 0x1de4
  01ab0:    	je     0x3a4e5
  01ab6:    	sub    rsp,0x20
  01aba:    	movq   QWORD PTR [rsp],xmm5
  01abf:    	movq   QWORD PTR [rsp+0x8],xmm6
  01ac5:    	movq   QWORD PTR [rsp+0x10],xmm7
  01acb:    	mov    rdi,QWORD PTR [rbp-0x68]
  01acf: 31 	movabs rax,0x5631840958d0
  01ad9:    	call   rax
  01adb:    	mov    r15d,eax
  01ade: 00 	cmp    r15d,DWORD PTR [rip+0x307]        # 0x1dec
  01ae5:    	jne    0x3a507
  01aeb:    	mov    eax,DWORD PTR [rip+0xffffffffffff483c]        # 0xffff632d
  01af1:    	cmp    DWORD PTR [rip+0x2f1],eax        # 0x1de8
  01af7:    	jne    0x3a507
  01afd:    	mov    rax,QWORD PTR [rbx]
  01b00:    	lea    rdi,[rsp-0x18]
  01b05:    	mov    QWORD PTR [rdi],rax
  01b08:    	mov    QWORD PTR [rbx],rdi
  01b0b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b14:    	mov    QWORD PTR [rsp-0x38],rcx
  01b19:    	mov    rax,QWORD PTR [rbp-0x68]
  01b1d:    	mov    QWORD PTR [rsp-0x38],rax
  01b22: 00 	mov    rdi,0x0
  01b29: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b32: 00 	movabs rax,0x0
  01b3c:    	mov    QWORD PTR [rsp-0x28],rax
  01b41: 00 	movabs r13,0x0
  01b4b:    	call   0xffff3814
  01b50:    	lea    rdi,[rbp-0x8]
  01b54:    	mov    QWORD PTR [rbx],rdi
  01b57:    	movq   xmm5,QWORD PTR [rsp]
  01b5c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01b62:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01b68:    	add    rsp,0x20
  01b6c:    	test   rax,rax
  01b6f:    	je     0x3a573
  01b75:    	mov    QWORD PTR [rbp-0x70],rax
:00106 
:00108 _ = %2.call n=(%9; 1)                [<INVALID>]
  01b79: 01 	sub    DWORD PTR [rip+0x270],0x1        # 0x1df0
  01b80:    	je     0x3a5ab
  01b86:    	sub    rsp,0x20
  01b8a:    	movq   QWORD PTR [rsp],xmm5
  01b8f:    	movq   QWORD PTR [rsp+0x8],xmm6
  01b95:    	movq   QWORD PTR [rsp+0x10],xmm7
  01b9b:    	mov    rdi,QWORD PTR [rbp-0x38]
  01b9f: 31 	movabs rax,0x5631840958d0
  01ba9:    	call   rax
  01bab:    	mov    r15d,eax
  01bae: 00 	cmp    r15d,DWORD PTR [rip+0x243]        # 0x1df8
  01bb5:    	jne    0x3a5cd
  01bbb:    	mov    eax,DWORD PTR [rip+0xffffffffffff476c]        # 0xffff632d
  01bc1:    	cmp    DWORD PTR [rip+0x22d],eax        # 0x1df4
  01bc7:    	jne    0x3a5cd
  01bcd:    	mov    rax,QWORD PTR [rbx]
  01bd0:    	lea    rdi,[rsp-0x18]
  01bd5:    	mov    QWORD PTR [rdi],rax
  01bd8:    	mov    QWORD PTR [rbx],rdi
  01bdb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01be4:    	mov    QWORD PTR [rsp-0x38],rcx
  01be9:    	mov    rax,QWORD PTR [rbp-0x38]
  01bed:    	mov    QWORD PTR [rsp-0x38],rax
  01bf2: 00 	mov    rdi,0x1
  01bf9:    	mov    rax,QWORD PTR [rbp-0x70]
  01bfd:    	mov    QWORD PTR [rsp-0x40],rax
  01c02: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c0b: 00 	movabs rax,0x0
  01c15:    	mov    QWORD PTR [rsp-0x28],rax
  01c1a: 00 	movabs r13,0x0
  01c24:    	call   0xffff3814
  01c29:    	lea    rdi,[rbp-0x8]
  01c2d:    	mov    QWORD PTR [rbx],rdi
  01c30:    	movq   xmm5,QWORD PTR [rsp]
  01c35:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01c3b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01c41:    	add    rsp,0x20
  01c45:    	test   rax,rax
  01c48:    	je     0x3a639
:00109 
:00111 br =>:00112
  01c4e:    	jmp    0x3a6ae
:00112 br =>:00113
  01c53:    	jmp    0x3a721
:00113 %9 = nil
  01c58: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00114 ret %9
  01c60:    	mov    rax,QWORD PTR [rbp-0x70]
  01c64:    	leave  
  01c65:    	ret    
==> start whole compile: <unnamed> FuncId(79) self_class:Scene start:[00000] bytecode:0x563184c7dcd0
<== finished compile. elapsed:134.6µs
offset:Pos(58856) code: 9133 bytes  data: 419 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00061: 00 	test   rdi,0x7
  00068:    	jne    0x38958
  0006e:    	cmp    DWORD PTR [rdi+0x4],0x32
  00072:    	jne    0x38958
:00000 %13 = %0.call rand()                 [Scene]
  00078:    	mov    rdi,QWORD PTR [rbp-0x28]
  0007c: 26 	cmp    DWORD PTR [rip+0xffffffffffff44ae],0x26        # 0xffff4531
  00083:    	jne    0x38967
  00089: 00 	mov    r9,0x0
  00090:    	mov    rdx,rdi
  00093:    	mov    rax,QWORD PTR [rbx]
  00096:    	lea    rdi,[rsp-0x18]
  0009b:    	mov    QWORD PTR [rdi],rax
  0009e:    	mov    QWORD PTR [rbx],rdi
  000a1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000aa:    	mov    QWORD PTR [rsp-0x38],rcx
  000af: ff 	lea    rcx,[rbp-0x98]
  000b6: 00 	mov    r8,0x0
  000bd:    	call   0x38976
  000c2:    	lea    rdi,[rbp-0x8]
  000c6:    	mov    QWORD PTR [rbx],rdi
  000c9: 31 	movabs r13,0x563184c7dcf0
  000d3:    	test   rax,rax
  000d6:    	je     0xffff1a53
  000dc: ff 	mov    QWORD PTR [rbp-0x90],rax
:00001 
:00003 %2 = %13
  000e3: ff 	mov    rax,QWORD PTR [rbp-0x90]
  000ea:    	mov    QWORD PTR [rbp-0x38],rax
:00004 %13 = literal[2.0]
  000ee: 00 	movq   xmm2,QWORD PTR [rip+0x22c2]        # 0x23b8
  000f6: 00 	mov    rax,0x2
  000fd: ff 	mov    QWORD PTR [rbp-0x90],rax
:00005 %14 = literal[3.14159265]
  00104: 00 	movq   xmm3,QWORD PTR [rip+0x22bc]        # 0x23c8
  0010c: da 	movabs rax,0x490fda9e46a78a
  00116: ff 	mov    QWORD PTR [rbp-0x98],rax
:00006 %13 = %13 * %14                      [Float][Float]
  0011d:    	mulsd  xmm2,xmm3
:00007 %14 = %0.call rand()                 [Scene]
  00121:    	mov    rdi,QWORD PTR [rbp-0x28]
  00125: 26 	cmp    DWORD PTR [rip+0xffffffffffff4405],0x26        # 0xffff4531
  0012c:    	jne    0x389a8
  00132: 00 	mov    r9,0x0
  00139:    	sub    rsp,0x10
  0013d:    	movq   QWORD PTR [rsp],xmm2
  00142:    	mov    rdx,rdi
  00145:    	mov    rax,QWORD PTR [rbx]
  00148:    	lea    rdi,[rsp-0x18]
  0014d:    	mov    QWORD PTR [rdi],rax
  00150:    	mov    QWORD PTR [rbx],rdi
  00153: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0015c:    	mov    QWORD PTR [rsp-0x38],rcx
  00161: ff 	lea    rcx,[rbp-0xa0]
  00168: 00 	mov    r8,0x0
  0016f:    	call   0x389c7
  00174:    	lea    rdi,[rbp-0x8]
  00178:    	mov    QWORD PTR [rbx],rdi
  0017b:    	movq   xmm2,QWORD PTR [rsp]
  00180:    	add    rsp,0x10
  00184: 31 	movabs r13,0x563184c7dd60
  0018e:    	test   rax,rax
  00191:    	je     0xffff1a53
  00197: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 
:00010 %3 = %13 * %14                       [Float][Float]
  0019e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001a5: 00 	test   rdi,0x1
  001ac:    	jne    0x389f9
  001b2: 00 	test   rdi,0x2
  001b9:    	je     0x1f5
  001bf:    	xorps  xmm3,xmm3
  001c2: 00 	movabs rax,0x8000000000000002
  001cc:    	cmp    rdi,rax
  001cf:    	je     0x207
  001d5:    	mov    rax,rdi
  001d8:    	sar    rax,0x3f
  001dc:    	add    rax,0x2
  001e0:    	and    rdi,0xfffffffffffffffc
  001e4:    	or     rdi,rax
  001e7:    	rol    rdi,0x3d
  001eb:    	movq   xmm3,rdi
  001f0:    	jmp    0x207
  001f5:    	call   0xffff1a8c
  001fa:    	test   rax,rax
  001fd:    	je     0x389f9
  00203:    	movq   xmm3,xmm0
  00207:    	movq   xmm4,xmm2
  0020b:    	mulsd  xmm4,xmm3
:00011 %14 = const[Math]                    [Math]
  0020f: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff4322]        # 0xffff4538
  00216: 00 	cmp    rax,QWORD PTR [rip+0x21cb]        # 0x23e8
  0021d:    	jne    0x38a18
  00223: 00 	mov    rax,QWORD PTR [rip+0x21ae]        # 0x23d8
  0022a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %15 = %3
:00013 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
  00231: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00238: 00 	test   rdi,0x7
  0023f:    	jne    0x38a7c
  00245:    	cmp    DWORD PTR [rdi+0x4],0x21
  00249:    	jne    0x38a7c
  0024f: 26 	cmp    DWORD PTR [rip+0xffffffffffff42db],0x26        # 0xffff4531
  00256:    	jne    0x38a7c
  0025c:    	sub    rsp,0x10
  00260:    	movq   QWORD PTR [rsp],xmm2
  00265:    	movq   QWORD PTR [rsp+0x8],xmm4
  0026b:    	movq   xmm0,xmm4
  0026f: 31 	movabs rax,0x56318409be40
  00279:    	call   rax
  0027b:    	movq   xmm2,QWORD PTR [rsp]
  00280:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00286:    	add    rsp,0x10
  0028a:    	movq   xmm2,xmm0
:00014 
:00016 %15 = const[Math]                    [Math]
  0028e: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff42a3]        # 0xffff4538
  00295: 00 	cmp    rax,QWORD PTR [rip+0x216c]        # 0x2408
  0029c:    	jne    0x38a9f
  002a2: 00 	mov    rax,QWORD PTR [rip+0x214f]        # 0x23f8
  002a9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00017 %16 = literal[1.0]
  002b0: 00 	movq   xmm3,QWORD PTR [rip+0x2160]        # 0x2418
  002b8: 00 	movabs rax,0xff80000000000002
  002c2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00018 %16 = %16 - %2                       [Float][Float]
  002c9:    	mov    rdi,QWORD PTR [rbp-0x38]
  002cd: 00 	test   rdi,0x1
  002d4:    	jne    0x38b03
  002da: 00 	test   rdi,0x2
  002e1:    	je     0x31d
  002e7:    	xorps  xmm5,xmm5
  002ea: 00 	movabs rax,0x8000000000000002
  002f4:    	cmp    rdi,rax
  002f7:    	je     0x32f
  002fd:    	mov    rax,rdi
  00300:    	sar    rax,0x3f
  00304:    	add    rax,0x2
  00308:    	and    rdi,0xfffffffffffffffc
  0030c:    	or     rdi,rax
  0030f:    	rol    rdi,0x3d
  00313:    	movq   xmm5,rdi
  00318:    	jmp    0x32f
  0031d:    	call   0xffff1a8c
  00322:    	test   rax,rax
  00325:    	je     0x38b03
  0032b:    	movq   xmm5,xmm0
  0032f:    	subsd  xmm3,xmm5
:00019 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  00333: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0033a: 00 	test   rdi,0x7
  00341:    	jne    0x38b2f
  00347:    	cmp    DWORD PTR [rdi+0x4],0x21
  0034b:    	jne    0x38b2f
  00351: 26 	cmp    DWORD PTR [rip+0xffffffffffff41d9],0x26        # 0xffff4531
  00358:    	jne    0x38b2f
  0035e:    	sqrtsd xmm6,xmm3
:00020 
:00022 %4 = %13 * %14                       [Float][Float]
  00362:    	movq   xmm7,xmm2
  00366:    	mulsd  xmm7,xmm6
:00023 %14 = const[Math]                    [Math]
  0036a: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff41c7]        # 0xffff4538
  00371: 00 	cmp    rax,QWORD PTR [rip+0x20c0]        # 0x2438
  00378:    	jne    0x38b6b
  0037e: 00 	mov    rax,QWORD PTR [rip+0x20a3]        # 0x2428
  00385: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %15 = %3
:00025 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
  0038c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00393: 00 	test   rdi,0x7
  0039a:    	jne    0x38bf3
  003a0:    	cmp    DWORD PTR [rdi+0x4],0x21
  003a4:    	jne    0x38bf3
  003aa: 26 	cmp    DWORD PTR [rip+0xffffffffffff4180],0x26        # 0xffff4531
  003b1:    	jne    0x38bf3
  003b7:    	sub    rsp,0x30
  003bb:    	movq   QWORD PTR [rsp],xmm2
  003c0:    	movq   QWORD PTR [rsp+0x8],xmm3
  003c6:    	movq   QWORD PTR [rsp+0x10],xmm4
  003cc:    	movq   QWORD PTR [rsp+0x18],xmm5
  003d2:    	movq   QWORD PTR [rsp+0x20],xmm7
  003d8:    	movq   xmm0,xmm4
  003dc: 31 	movabs rax,0x56318409be50
  003e6:    	call   rax
  003e8:    	movq   xmm2,QWORD PTR [rsp]
  003ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  003ff:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00405:    	add    rsp,0x30
  00409:    	movq   xmm2,xmm0
:00026 
:00028 %15 = const[Math]                    [Math]
  0040d: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff4124]        # 0xffff4538
  00414: 00 	cmp    rax,QWORD PTR [rip+0x203d]        # 0x2458
  0041b:    	jne    0x38c33
  00421: 00 	mov    rax,QWORD PTR [rip+0x2020]        # 0x2448
  00428: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00029 %16 = literal[1.0]
  0042f: 00 	movq   xmm3,QWORD PTR [rip+0x2031]        # 0x2468
  00437: 00 	movabs rax,0xff80000000000002
  00441: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00030 %16 = %16 - %2                       [Float][Float]
  00448:    	subsd  xmm3,xmm5
:00031 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  0044c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00453: 00 	test   rdi,0x7
  0045a:    	jne    0x38cbb
  00460:    	cmp    DWORD PTR [rdi+0x4],0x21
  00464:    	jne    0x38cbb
  0046a: 26 	cmp    DWORD PTR [rip+0xffffffffffff40c0],0x26        # 0xffff4531
  00471:    	jne    0x38cbb
  00477:    	sqrtsd xmm6,xmm3
:00032 
:00034 %5 = %13 * %14                       [Float][Float]
  0047b:    	movq   xmm8,xmm2
  00480:    	mulsd  xmm8,xmm6
:00035 %13 = const[Math]                    [Math]
  00485: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff40ac]        # 0xffff4538
  0048c: 00 	cmp    rax,QWORD PTR [rip+0x1ff5]        # 0x2488
  00493:    	jne    0x38d04
  00499: 00 	mov    rax,QWORD PTR [rip+0x1fd8]        # 0x2478
  004a0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00036 %14 = %2
:00037 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  004a7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  004ae: 00 	test   rdi,0x7
  004b5:    	jne    0x38d9a
  004bb:    	cmp    DWORD PTR [rdi+0x4],0x21
  004bf:    	jne    0x38d9a
  004c5: 26 	cmp    DWORD PTR [rip+0xffffffffffff4065],0x26        # 0xffff4531
  004cc:    	jne    0x38d9a
  004d2:    	sqrtsd xmm2,xmm5
:00038 
:00040 %14 = dynvar(2, %2)
  004d6:    	mov    rax,QWORD PTR [rbp-0x10]
  004da:    	mov    rax,QWORD PTR [rax]
  004dd:    	mov    rax,QWORD PTR [rax-0x28]
  004e1: ff 	mov    QWORD PTR [rbp-0x98],rax
:00041 %15 = 0: i32
  004e8: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00042 %14 = %14.[%15]                      [Array][Integer]
  004f3:    	sub    rsp,0x30
  004f7:    	movq   QWORD PTR [rsp],xmm2
  004fc:    	movq   QWORD PTR [rsp+0x8],xmm3
  00502:    	movq   QWORD PTR [rsp+0x10],xmm4
  00508:    	movq   QWORD PTR [rsp+0x18],xmm5
  0050e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00514: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0051b: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00522: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00529:    	mov    rdi,rbx
  0052c:    	mov    rsi,r12
  0052f: 31 	movabs r8,0x563184c7df78
  00539: 31 	movabs rax,0x5631840b8230
  00543:    	call   rax
  00545:    	movq   xmm2,QWORD PTR [rsp]
  0054a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00550:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00556:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0055c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00562: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00569:    	add    rsp,0x30
  0056d: 31 	movabs r13,0x563184c7df80
  00577:    	test   rax,rax
  0057a:    	je     0xffff1a53
  00580: ff 	mov    QWORD PTR [rbp-0x98],rax
:00043 %13 = %14.call x()                   [Vec]
  00587: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0058e: 00 	test   rdi,0x7
  00595:    	jne    0x38df1
  0059b:    	cmp    DWORD PTR [rdi+0x4],0x28
  0059f:    	jne    0x38df1
  005a5: 26 	cmp    DWORD PTR [rip+0xffffffffffff3f85],0x26        # 0xffff4531
  005ac:    	jne    0x38df1
  005b2:    	mov    esi,DWORD PTR [rip+0x1edc]        # 0x2494
  005b8:    	cmp    esi,0xffffffff
  005bb:    	je     0x38e45
  005c1:    	cmp    WORD PTR [rdi+0x2],0x3
  005c6:    	jne    0x5df
  005cc:    	cmp    esi,0x6
  005cf:    	jge    0x5df
  005d5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005da:    	jmp    0x63b
  005df:    	sub    rsp,0x30
  005e3:    	movq   QWORD PTR [rsp],xmm2
  005e8:    	movq   QWORD PTR [rsp+0x8],xmm3
  005ee:    	movq   QWORD PTR [rsp+0x10],xmm4
  005f4:    	movq   QWORD PTR [rsp+0x18],xmm5
  005fa:    	movq   QWORD PTR [rsp+0x20],xmm7
  00600: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00607: 31 	movabs rax,0x563184053740
  00611:    	call   rax
  00613:    	movq   xmm2,QWORD PTR [rsp]
  00618:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0061e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00624:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0062a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00630: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00637:    	add    rsp,0x30
  0063b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00044 
:00046 %13 = %4 * %13                       [Float][Float]
  00642: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00649: 00 	test   rdi,0x1
  00650:    	jne    0x38ebe
  00656: 00 	test   rdi,0x2
  0065d:    	je     0x699
  00663:    	xorps  xmm6,xmm6
  00666: 00 	movabs rax,0x8000000000000002
  00670:    	cmp    rdi,rax
  00673:    	je     0x6ab
  00679:    	mov    rax,rdi
  0067c:    	sar    rax,0x3f
  00680:    	add    rax,0x2
  00684:    	and    rdi,0xfffffffffffffffc
  00688:    	or     rdi,rax
  0068b:    	rol    rdi,0x3d
  0068f:    	movq   xmm6,rdi
  00694:    	jmp    0x6ab
  00699:    	call   0xffff1a8c
  0069e:    	test   rax,rax
  006a1:    	je     0x38ebe
  006a7:    	movq   xmm6,xmm0
  006ab:    	mulsd  xmm6,xmm7
:00047 %15 = dynvar(2, %2)
  006af:    	mov    rax,QWORD PTR [rbp-0x10]
  006b3:    	mov    rax,QWORD PTR [rax]
  006b6:    	mov    rax,QWORD PTR [rax-0x28]
  006ba: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00048 %16 = 1: i32
  006c1: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00049 %15 = %15.[%16]                      [Array][Integer]
  006cc:    	sub    rsp,0x30
  006d0:    	movq   QWORD PTR [rsp],xmm2
  006d5:    	movq   QWORD PTR [rsp+0x8],xmm4
  006db:    	movq   QWORD PTR [rsp+0x10],xmm5
  006e1:    	movq   QWORD PTR [rsp+0x18],xmm6
  006e7:    	movq   QWORD PTR [rsp+0x20],xmm7
  006ed: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  006f4: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  006fb: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00702:    	mov    rdi,rbx
  00705:    	mov    rsi,r12
  00708: 31 	movabs r8,0x563184c7dfe8
  00712: 31 	movabs rax,0x5631840b8230
  0071c:    	call   rax
  0071e:    	movq   xmm2,QWORD PTR [rsp]
  00723:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00729:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0072f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00735:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0073b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00742:    	add    rsp,0x30
  00746: 31 	movabs r13,0x563184c7dff0
  00750:    	test   rax,rax
  00753:    	je     0xffff1a53
  00759: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00050 %14 = %15.call x()                   [Vec]
  00760: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00767: 00 	test   rdi,0x7
  0076e:    	jne    0x38f12
  00774:    	cmp    DWORD PTR [rdi+0x4],0x28
  00778:    	jne    0x38f12
  0077e: 26 	cmp    DWORD PTR [rip+0xffffffffffff3dac],0x26        # 0xffff4531
  00785:    	jne    0x38f12
  0078b:    	mov    esi,DWORD PTR [rip+0x1d0b]        # 0x249c
  00791:    	cmp    esi,0xffffffff
  00794:    	je     0x38f66
  0079a:    	cmp    WORD PTR [rdi+0x2],0x3
  0079f:    	jne    0x7b8
  007a5:    	cmp    esi,0x6
  007a8:    	jge    0x7b8
  007ae:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007b3:    	jmp    0x814
  007b8:    	sub    rsp,0x30
  007bc:    	movq   QWORD PTR [rsp],xmm2
  007c1:    	movq   QWORD PTR [rsp+0x8],xmm4
  007c7:    	movq   QWORD PTR [rsp+0x10],xmm5
  007cd:    	movq   QWORD PTR [rsp+0x18],xmm6
  007d3:    	movq   QWORD PTR [rsp+0x20],xmm7
  007d9: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  007e0: 31 	movabs rax,0x563184053740
  007ea:    	call   rax
  007ec:    	movq   xmm2,QWORD PTR [rsp]
  007f1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007f7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007fd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00803:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00809: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00810:    	add    rsp,0x30
  00814: ff 	mov    QWORD PTR [rbp-0x98],rax
:00051 
:00053 %14 = %5 * %14                       [Float][Float]
  0081b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00822: 00 	test   rdi,0x1
  00829:    	jne    0x38fdf
  0082f: 00 	test   rdi,0x2
  00836:    	je     0x872
  0083c:    	xorps  xmm3,xmm3
  0083f: 00 	movabs rax,0x8000000000000002
  00849:    	cmp    rdi,rax
  0084c:    	je     0x884
  00852:    	mov    rax,rdi
  00855:    	sar    rax,0x3f
  00859:    	add    rax,0x2
  0085d:    	and    rdi,0xfffffffffffffffc
  00861:    	or     rdi,rax
  00864:    	rol    rdi,0x3d
  00868:    	movq   xmm3,rdi
  0086d:    	jmp    0x884
  00872:    	call   0xffff1a8c
  00877:    	test   rax,rax
  0087a:    	je     0x38fdf
  00880:    	movq   xmm3,xmm0
  00884:    	mulsd  xmm3,xmm8
:00054 %13 = %13 + %14                      [Float][Float]
  00889:    	addsd  xmm6,xmm3
:00055 %15 = dynvar(2, %2)
  0088d:    	mov    rax,QWORD PTR [rbp-0x10]
  00891:    	mov    rax,QWORD PTR [rax]
  00894:    	mov    rax,QWORD PTR [rax-0x28]
  00898: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00056 %16 = 2: i32
  0089f: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00057 %15 = %15.[%16]                      [Array][Integer]
  008aa:    	sub    rsp,0x40
  008ae:    	movq   QWORD PTR [rsp],xmm2
  008b3:    	movq   QWORD PTR [rsp+0x8],xmm3
  008b9:    	movq   QWORD PTR [rsp+0x10],xmm4
  008bf:    	movq   QWORD PTR [rsp+0x18],xmm5
  008c5:    	movq   QWORD PTR [rsp+0x20],xmm6
  008cb:    	movq   QWORD PTR [rsp+0x28],xmm7
  008d1: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  008d8: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  008df: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  008e6:    	mov    rdi,rbx
  008e9:    	mov    rsi,r12
  008ec: 31 	movabs r8,0x563184c7e068
  008f6: 31 	movabs rax,0x5631840b8230
  00900:    	call   rax
  00902:    	movq   xmm2,QWORD PTR [rsp]
  00907:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0090d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00913:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00919:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0091f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00925: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0092c:    	add    rsp,0x40
  00930: 31 	movabs r13,0x563184c7e070
  0093a:    	test   rax,rax
  0093d:    	je     0xffff1a53
  00943: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00058 %14 = %15.call x()                   [Vec]
  0094a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00951: 00 	test   rdi,0x7
  00958:    	jne    0x39033
  0095e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00962:    	jne    0x39033
  00968: 26 	cmp    DWORD PTR [rip+0xffffffffffff3bc2],0x26        # 0xffff4531
  0096f:    	jne    0x39033
  00975:    	mov    esi,DWORD PTR [rip+0x1b29]        # 0x24a4
  0097b:    	cmp    esi,0xffffffff
  0097e:    	je     0x39087
  00984:    	cmp    WORD PTR [rdi+0x2],0x3
  00989:    	jne    0x9a2
  0098f:    	cmp    esi,0x6
  00992:    	jge    0x9a2
  00998:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0099d:    	jmp    0x9fe
  009a2:    	sub    rsp,0x30
  009a6:    	movq   QWORD PTR [rsp],xmm2
  009ab:    	movq   QWORD PTR [rsp+0x8],xmm4
  009b1:    	movq   QWORD PTR [rsp+0x10],xmm5
  009b7:    	movq   QWORD PTR [rsp+0x18],xmm6
  009bd:    	movq   QWORD PTR [rsp+0x20],xmm7
  009c3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  009ca: 31 	movabs rax,0x563184053740
  009d4:    	call   rax
  009d6:    	movq   xmm2,QWORD PTR [rsp]
  009db:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009e1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009e7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009ed:    	movq   xmm7,QWORD PTR [rsp+0x20]
  009f3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  009fa:    	add    rsp,0x30
  009fe: ff 	mov    QWORD PTR [rbp-0x98],rax
:00059 
:00061 %14 = %6 * %14                       [Float][Float]
  00a05: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a0c: 00 	test   rdi,0x1
  00a13:    	jne    0x39100
  00a19: 00 	test   rdi,0x2
  00a20:    	je     0xa5c
  00a26:    	xorps  xmm3,xmm3
  00a29: 00 	movabs rax,0x8000000000000002
  00a33:    	cmp    rdi,rax
  00a36:    	je     0xa6e
  00a3c:    	mov    rax,rdi
  00a3f:    	sar    rax,0x3f
  00a43:    	add    rax,0x2
  00a47:    	and    rdi,0xfffffffffffffffc
  00a4b:    	or     rdi,rax
  00a4e:    	rol    rdi,0x3d
  00a52:    	movq   xmm3,rdi
  00a57:    	jmp    0xa6e
  00a5c:    	call   0xffff1a8c
  00a61:    	test   rax,rax
  00a64:    	je     0x39100
  00a6a:    	movq   xmm3,xmm0
  00a6e:    	mulsd  xmm3,xmm2
:00062 %7 = %13 + %14                       [Float][Float]
  00a72:    	movq   xmm9,xmm6
  00a77:    	addsd  xmm9,xmm3
:00063 %14 = dynvar(2, %2)
  00a7c:    	mov    rax,QWORD PTR [rbp-0x10]
  00a80:    	mov    rax,QWORD PTR [rax]
  00a83:    	mov    rax,QWORD PTR [rax-0x28]
  00a87: ff 	mov    QWORD PTR [rbp-0x98],rax
:00064 %15 = 0: i32
  00a8e: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00065 %14 = %14.[%15]                      [Array][Integer]
  00a99:    	sub    rsp,0x40
  00a9d:    	movq   QWORD PTR [rsp],xmm2
  00aa2:    	movq   QWORD PTR [rsp+0x8],xmm4
  00aa8:    	movq   QWORD PTR [rsp+0x10],xmm5
  00aae:    	movq   QWORD PTR [rsp+0x18],xmm6
  00ab4:    	movq   QWORD PTR [rsp+0x20],xmm7
  00aba: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00ac1: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00ac8: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00acf: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00ad6:    	mov    rdi,rbx
  00ad9:    	mov    rsi,r12
  00adc: 31 	movabs r8,0x563184c7e0e8
  00ae6: 31 	movabs rax,0x5631840b8230
  00af0:    	call   rax
  00af2:    	movq   xmm2,QWORD PTR [rsp]
  00af7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00afd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b03:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b09:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00b0f: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00b16: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00b1d:    	add    rsp,0x40
  00b21: 31 	movabs r13,0x563184c7e0f0
  00b2b:    	test   rax,rax
  00b2e:    	je     0xffff1a53
  00b34: ff 	mov    QWORD PTR [rbp-0x98],rax
:00066 %13 = %14.call y()                   [Vec]
  00b3b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00b42: 00 	test   rdi,0x7
  00b49:    	jne    0x39154
  00b4f:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b53:    	jne    0x39154
  00b59: 26 	cmp    DWORD PTR [rip+0xffffffffffff39d1],0x26        # 0xffff4531
  00b60:    	jne    0x39154
  00b66:    	mov    esi,DWORD PTR [rip+0x1940]        # 0x24ac
  00b6c:    	cmp    esi,0xffffffff
  00b6f:    	je     0x391a6
  00b75:    	cmp    WORD PTR [rdi+0x2],0x3
  00b7a:    	jne    0xb93
  00b80:    	cmp    esi,0x6
  00b83:    	jge    0xb93
  00b89:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b8e:    	jmp    0xbf1
  00b93:    	sub    rsp,0x30
  00b97:    	movq   QWORD PTR [rsp],xmm2
  00b9c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ba2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ba8:    	movq   QWORD PTR [rsp+0x18],xmm7
  00bae: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00bb5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00bbc: 31 	movabs rax,0x563184053740
  00bc6:    	call   rax
  00bc8:    	movq   xmm2,QWORD PTR [rsp]
  00bcd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00bd3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bd9:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00bdf: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00be6: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00bed:    	add    rsp,0x30
  00bf1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00067 
:00069 %13 = %4 * %13                       [Float][Float]
  00bf8: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00bff: 00 	test   rdi,0x1
  00c06:    	jne    0x39221
  00c0c: 00 	test   rdi,0x2
  00c13:    	je     0xc4f
  00c19:    	xorps  xmm3,xmm3
  00c1c: 00 	movabs rax,0x8000000000000002
  00c26:    	cmp    rdi,rax
  00c29:    	je     0xc61
  00c2f:    	mov    rax,rdi
  00c32:    	sar    rax,0x3f
  00c36:    	add    rax,0x2
  00c3a:    	and    rdi,0xfffffffffffffffc
  00c3e:    	or     rdi,rax
  00c41:    	rol    rdi,0x3d
  00c45:    	movq   xmm3,rdi
  00c4a:    	jmp    0xc61
  00c4f:    	call   0xffff1a8c
  00c54:    	test   rax,rax
  00c57:    	je     0x39221
  00c5d:    	movq   xmm3,xmm0
  00c61:    	mulsd  xmm3,xmm7
:00070 %15 = dynvar(2, %2)
  00c65:    	mov    rax,QWORD PTR [rbp-0x10]
  00c69:    	mov    rax,QWORD PTR [rax]
  00c6c:    	mov    rax,QWORD PTR [rax-0x28]
  00c70: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00071 %16 = 1: i32
  00c77: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00072 %15 = %15.[%16]                      [Array][Integer]
  00c82:    	sub    rsp,0x40
  00c86:    	movq   QWORD PTR [rsp],xmm2
  00c8b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c91:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c97:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c9d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ca3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00caa: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00cb1: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00cb8: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00cbf:    	mov    rdi,rbx
  00cc2:    	mov    rsi,r12
  00cc5: 31 	movabs r8,0x563184c7e158
  00ccf: 31 	movabs rax,0x5631840b8230
  00cd9:    	call   rax
  00cdb:    	movq   xmm2,QWORD PTR [rsp]
  00ce0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ce6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cf2:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00cf8: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00cff: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d06:    	add    rsp,0x40
  00d0a: 31 	movabs r13,0x563184c7e160
  00d14:    	test   rax,rax
  00d17:    	je     0xffff1a53
  00d1d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00073 %14 = %15.call y()                   [Vec]
  00d24: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00d2b: 00 	test   rdi,0x7
  00d32:    	jne    0x39273
  00d38:    	cmp    DWORD PTR [rdi+0x4],0x28
  00d3c:    	jne    0x39273
  00d42: 26 	cmp    DWORD PTR [rip+0xffffffffffff37e8],0x26        # 0xffff4531
  00d49:    	jne    0x39273
  00d4f:    	mov    esi,DWORD PTR [rip+0x175f]        # 0x24b4
  00d55:    	cmp    esi,0xffffffff
  00d58:    	je     0x392d5
  00d5e:    	cmp    WORD PTR [rdi+0x2],0x3
  00d63:    	jne    0xd7c
  00d69:    	cmp    esi,0x6
  00d6c:    	jge    0xd7c
  00d72:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d77:    	jmp    0xde6
  00d7c:    	sub    rsp,0x40
  00d80:    	movq   QWORD PTR [rsp],xmm2
  00d85:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d91:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d97:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d9d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00da4: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00dab: 31 	movabs rax,0x563184053740
  00db5:    	call   rax
  00db7:    	movq   xmm2,QWORD PTR [rsp]
  00dbc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00dc2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dc8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00dce:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00dd4: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00ddb: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00de2:    	add    rsp,0x40
  00de6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 
:00076 %14 = %5 * %14                       [Float][Float]
  00ded: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00df4: 00 	test   rdi,0x1
  00dfb:    	jne    0x3935c
  00e01: 00 	test   rdi,0x2
  00e08:    	je     0xe44
  00e0e:    	xorps  xmm6,xmm6
  00e11: 00 	movabs rax,0x8000000000000002
  00e1b:    	cmp    rdi,rax
  00e1e:    	je     0xe56
  00e24:    	mov    rax,rdi
  00e27:    	sar    rax,0x3f
  00e2b:    	add    rax,0x2
  00e2f:    	and    rdi,0xfffffffffffffffc
  00e33:    	or     rdi,rax
  00e36:    	rol    rdi,0x3d
  00e3a:    	movq   xmm6,rdi
  00e3f:    	jmp    0xe56
  00e44:    	call   0xffff1a8c
  00e49:    	test   rax,rax
  00e4c:    	je     0x3935c
  00e52:    	movq   xmm6,xmm0
  00e56:    	mulsd  xmm6,xmm8
:00077 %13 = %13 + %14                      [Float][Float]
  00e5b:    	addsd  xmm3,xmm6
:00078 %15 = dynvar(2, %2)
  00e5f:    	mov    rax,QWORD PTR [rbp-0x10]
  00e63:    	mov    rax,QWORD PTR [rax]
  00e66:    	mov    rax,QWORD PTR [rax-0x28]
  00e6a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00079 %16 = 2: i32
  00e71: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00080 %15 = %15.[%16]                      [Array][Integer]
  00e7c:    	sub    rsp,0x40
  00e80:    	movq   QWORD PTR [rsp],xmm2
  00e85:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e91:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e97:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e9d:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ea3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00eaa: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00eb1: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00eb8: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00ebf:    	mov    rdi,rbx
  00ec2:    	mov    rsi,r12
  00ec5: 31 	movabs r8,0x563184c7e1d8
  00ecf: 31 	movabs rax,0x5631840b8230
  00ed9:    	call   rax
  00edb:    	movq   xmm2,QWORD PTR [rsp]
  00ee0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ee6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00eec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ef2:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ef8:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00efe: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f05: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f0c:    	add    rsp,0x40
  00f10: 31 	movabs r13,0x563184c7e1e0
  00f1a:    	test   rax,rax
  00f1d:    	je     0xffff1a53
  00f23: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00081 %14 = %15.call y()                   [Vec]
  00f2a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00f31: 00 	test   rdi,0x7
  00f38:    	jne    0x393be
  00f3e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00f42:    	jne    0x393be
  00f48: 26 	cmp    DWORD PTR [rip+0xffffffffffff35e2],0x26        # 0xffff4531
  00f4f:    	jne    0x393be
  00f55:    	mov    esi,DWORD PTR [rip+0x1561]        # 0x24bc
  00f5b:    	cmp    esi,0xffffffff
  00f5e:    	je     0x39420
  00f64:    	cmp    WORD PTR [rdi+0x2],0x3
  00f69:    	jne    0xf82
  00f6f:    	cmp    esi,0x6
  00f72:    	jge    0xf82
  00f78:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f7d:    	jmp    0xfec
  00f82:    	sub    rsp,0x40
  00f86:    	movq   QWORD PTR [rsp],xmm2
  00f8b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f91:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f97:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f9d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00fa3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00faa: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00fb1: 31 	movabs rax,0x563184053740
  00fbb:    	call   rax
  00fbd:    	movq   xmm2,QWORD PTR [rsp]
  00fc2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fc8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fce:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fd4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00fda: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00fe1: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00fe8:    	add    rsp,0x40
  00fec: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 
:00084 %14 = %6 * %14                       [Float][Float]
  00ff3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ffa: 00 	test   rdi,0x1
  01001:    	jne    0x394a7
  01007: 00 	test   rdi,0x2
  0100e:    	je     0x104a
  01014:    	xorps  xmm6,xmm6
  01017: 00 	movabs rax,0x8000000000000002
  01021:    	cmp    rdi,rax
  01024:    	je     0x105c
  0102a:    	mov    rax,rdi
  0102d:    	sar    rax,0x3f
  01031:    	add    rax,0x2
  01035:    	and    rdi,0xfffffffffffffffc
  01039:    	or     rdi,rax
  0103c:    	rol    rdi,0x3d
  01040:    	movq   xmm6,rdi
  01045:    	jmp    0x105c
  0104a:    	call   0xffff1a8c
  0104f:    	test   rax,rax
  01052:    	je     0x394a7
  01058:    	movq   xmm6,xmm0
  0105c:    	mulsd  xmm6,xmm2
:00085 %8 = %13 + %14                       [Float][Float]
  01060:    	movq   xmm10,xmm3
  01065:    	addsd  xmm10,xmm6
:00086 %14 = dynvar(2, %2)
  0106a:    	mov    rax,QWORD PTR [rbp-0x10]
  0106e:    	mov    rax,QWORD PTR [rax]
  01071:    	mov    rax,QWORD PTR [rax-0x28]
  01075: ff 	mov    QWORD PTR [rbp-0x98],rax
:00087 %15 = 0: i32
  0107c: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00088 %14 = %14.[%15]                      [Array][Integer]
  01087:    	sub    rsp,0x40
  0108b:    	movq   QWORD PTR [rsp],xmm2
  01090:    	movq   QWORD PTR [rsp+0x8],xmm3
  01096:    	movq   QWORD PTR [rsp+0x10],xmm4
  0109c:    	movq   QWORD PTR [rsp+0x18],xmm5
  010a2:    	movq   QWORD PTR [rsp+0x20],xmm7
  010a8: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  010af: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  010b6: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  010bd: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  010c4: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  010cb:    	mov    rdi,rbx
  010ce:    	mov    rsi,r12
  010d1: 31 	movabs r8,0x563184c7e258
  010db: 31 	movabs rax,0x5631840b8230
  010e5:    	call   rax
  010e7:    	movq   xmm2,QWORD PTR [rsp]
  010ec:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010f2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010f8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010fe:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01104: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0110b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01112: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01119:    	add    rsp,0x40
  0111d: 31 	movabs r13,0x563184c7e260
  01127:    	test   rax,rax
  0112a:    	je     0xffff1a53
  01130: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %13 = %14.call z()                   [Vec]
  01137: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0113e: 00 	test   rdi,0x7
  01145:    	jne    0x39509
  0114b:    	cmp    DWORD PTR [rdi+0x4],0x28
  0114f:    	jne    0x39509
  01155: 26 	cmp    DWORD PTR [rip+0xffffffffffff33d5],0x26        # 0xffff4531
  0115c:    	jne    0x39509
  01162:    	mov    esi,DWORD PTR [rip+0x135c]        # 0x24c4
  01168:    	cmp    esi,0xffffffff
  0116b:    	je     0x39569
  01171:    	cmp    WORD PTR [rdi+0x2],0x3
  01176:    	jne    0x118f
  0117c:    	cmp    esi,0x6
  0117f:    	jge    0x118f
  01185:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0118a:    	jmp    0x11fb
  0118f:    	sub    rsp,0x40
  01193:    	movq   QWORD PTR [rsp],xmm2
  01198:    	movq   QWORD PTR [rsp+0x8],xmm4
  0119e:    	movq   QWORD PTR [rsp+0x10],xmm5
  011a4:    	movq   QWORD PTR [rsp+0x18],xmm7
  011aa: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  011b1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  011b8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  011bf: 31 	movabs rax,0x563184053740
  011c9:    	call   rax
  011cb:    	movq   xmm2,QWORD PTR [rsp]
  011d0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011d6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011dc:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011e2: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  011e9: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  011f0: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  011f7:    	add    rsp,0x40
  011fb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00090 
:00092 %13 = %4 * %13                       [Float][Float]
  01202: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01209: 00 	test   rdi,0x1
  01210:    	jne    0x395f2
  01216: 00 	test   rdi,0x2
  0121d:    	je     0x1259
  01223:    	xorps  xmm3,xmm3
  01226: 00 	movabs rax,0x8000000000000002
  01230:    	cmp    rdi,rax
  01233:    	je     0x126b
  01239:    	mov    rax,rdi
  0123c:    	sar    rax,0x3f
  01240:    	add    rax,0x2
  01244:    	and    rdi,0xfffffffffffffffc
  01248:    	or     rdi,rax
  0124b:    	rol    rdi,0x3d
  0124f:    	movq   xmm3,rdi
  01254:    	jmp    0x126b
  01259:    	call   0xffff1a8c
  0125e:    	test   rax,rax
  01261:    	je     0x395f2
  01267:    	movq   xmm3,xmm0
  0126b:    	mulsd  xmm3,xmm7
:00093 %15 = dynvar(2, %2)
  0126f:    	mov    rax,QWORD PTR [rbp-0x10]
  01273:    	mov    rax,QWORD PTR [rax]
  01276:    	mov    rax,QWORD PTR [rax-0x28]
  0127a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00094 %16 = 1: i32
  01281: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00095 %15 = %15.[%16]                      [Array][Integer]
  0128c:    	sub    rsp,0x40
  01290:    	movq   QWORD PTR [rsp],xmm2
  01295:    	movq   QWORD PTR [rsp+0x8],xmm3
  0129b:    	movq   QWORD PTR [rsp+0x10],xmm4
  012a1:    	movq   QWORD PTR [rsp+0x18],xmm5
  012a7:    	movq   QWORD PTR [rsp+0x20],xmm7
  012ad: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  012b4: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  012bb: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  012c2: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  012c9: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  012d0:    	mov    rdi,rbx
  012d3:    	mov    rsi,r12
  012d6: 31 	movabs r8,0x563184c7e2c8
  012e0: 31 	movabs rax,0x5631840b8230
  012ea:    	call   rax
  012ec:    	movq   xmm2,QWORD PTR [rsp]
  012f1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  012f7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  012fd:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01303:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01309: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01310: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01317: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0131e:    	add    rsp,0x40
  01322: 31 	movabs r13,0x563184c7e2d0
  0132c:    	test   rax,rax
  0132f:    	je     0xffff1a53
  01335: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00096 %14 = %15.call z()                   [Vec]
  0133c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01343: 00 	test   rdi,0x7
  0134a:    	jne    0x39652
  01350:    	cmp    DWORD PTR [rdi+0x4],0x28
  01354:    	jne    0x39652
  0135a: 26 	cmp    DWORD PTR [rip+0xffffffffffff31d0],0x26        # 0xffff4531
  01361:    	jne    0x39652
  01367:    	mov    esi,DWORD PTR [rip+0x115f]        # 0x24cc
  0136d:    	cmp    esi,0xffffffff
  01370:    	je     0x396c2
  01376:    	cmp    WORD PTR [rdi+0x2],0x3
  0137b:    	jne    0x1394
  01381:    	cmp    esi,0x6
  01384:    	jge    0x1394
  0138a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0138f:    	jmp    0x140c
  01394:    	sub    rsp,0x40
  01398:    	movq   QWORD PTR [rsp],xmm2
  0139d:    	movq   QWORD PTR [rsp+0x8],xmm3
  013a3:    	movq   QWORD PTR [rsp+0x10],xmm4
  013a9:    	movq   QWORD PTR [rsp+0x18],xmm5
  013af:    	movq   QWORD PTR [rsp+0x20],xmm7
  013b5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  013bc: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  013c3: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  013ca: 31 	movabs rax,0x563184053740
  013d4:    	call   rax
  013d6:    	movq   xmm2,QWORD PTR [rsp]
  013db:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013e1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  013e7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  013ed:    	movq   xmm7,QWORD PTR [rsp+0x20]
  013f3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  013fa: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01401: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01408:    	add    rsp,0x40
  0140c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00097 
:00099 %14 = %5 * %14                       [Float][Float]
  01413: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0141a: 00 	test   rdi,0x1
  01421:    	jne    0x39757
  01427: 00 	test   rdi,0x2
  0142e:    	je     0x146a
  01434:    	xorps  xmm6,xmm6
  01437: 00 	movabs rax,0x8000000000000002
  01441:    	cmp    rdi,rax
  01444:    	je     0x147c
  0144a:    	mov    rax,rdi
  0144d:    	sar    rax,0x3f
  01451:    	add    rax,0x2
  01455:    	and    rdi,0xfffffffffffffffc
  01459:    	or     rdi,rax
  0145c:    	rol    rdi,0x3d
  01460:    	movq   xmm6,rdi
  01465:    	jmp    0x147c
  0146a:    	call   0xffff1a8c
  0146f:    	test   rax,rax
  01472:    	je     0x39757
  01478:    	movq   xmm6,xmm0
  0147c:    	mulsd  xmm6,xmm8
:00100 %13 = %13 + %14                      [Float][Float]
  01481:    	addsd  xmm3,xmm6
:00101 %15 = dynvar(2, %2)
  01485:    	mov    rax,QWORD PTR [rbp-0x10]
  01489:    	mov    rax,QWORD PTR [rax]
  0148c:    	mov    rax,QWORD PTR [rax-0x28]
  01490: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00102 %16 = 2: i32
  01497: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00103 %15 = %15.[%16]                      [Array][Integer]
  014a2:    	sub    rsp,0x50
  014a6:    	movq   QWORD PTR [rsp],xmm2
  014ab:    	movq   QWORD PTR [rsp+0x8],xmm3
  014b1:    	movq   QWORD PTR [rsp+0x10],xmm4
  014b7:    	movq   QWORD PTR [rsp+0x18],xmm5
  014bd:    	movq   QWORD PTR [rsp+0x20],xmm6
  014c3:    	movq   QWORD PTR [rsp+0x28],xmm7
  014c9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014d0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014d7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  014de: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  014e5: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  014ec:    	mov    rdi,rbx
  014ef:    	mov    rsi,r12
  014f2: 31 	movabs r8,0x563184c7e348
  014fc: 31 	movabs rax,0x5631840b8230
  01506:    	call   rax
  01508:    	movq   xmm2,QWORD PTR [rsp]
  0150d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01513:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01519:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0151f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01525:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0152b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01532: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01539: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01540:    	add    rsp,0x50
  01544: 31 	movabs r13,0x563184c7e350
  0154e:    	test   rax,rax
  01551:    	je     0xffff1a53
  01557: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00104 %14 = %15.call z()                   [Vec]
  0155e: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01565: 00 	test   rdi,0x7
  0156c:    	jne    0x397c7
  01572:    	cmp    DWORD PTR [rdi+0x4],0x28
  01576:    	jne    0x397c7
  0157c: 26 	cmp    DWORD PTR [rip+0xffffffffffff2fae],0x26        # 0xffff4531
  01583:    	jne    0x397c7
  01589:    	mov    esi,DWORD PTR [rip+0xf45]        # 0x24d4
  0158f:    	cmp    esi,0xffffffff
  01592:    	je     0x39837
  01598:    	cmp    WORD PTR [rdi+0x2],0x3
  0159d:    	jne    0x15b6
  015a3:    	cmp    esi,0x6
  015a6:    	jge    0x15b6
  015ac:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  015b1:    	jmp    0x162e
  015b6:    	sub    rsp,0x40
  015ba:    	movq   QWORD PTR [rsp],xmm2
  015bf:    	movq   QWORD PTR [rsp+0x8],xmm3
  015c5:    	movq   QWORD PTR [rsp+0x10],xmm4
  015cb:    	movq   QWORD PTR [rsp+0x18],xmm5
  015d1:    	movq   QWORD PTR [rsp+0x20],xmm7
  015d7: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  015de: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  015e5: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  015ec: 31 	movabs rax,0x563184053740
  015f6:    	call   rax
  015f8:    	movq   xmm2,QWORD PTR [rsp]
  015fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01603:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01609:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0160f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01615: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0161c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01623: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0162a:    	add    rsp,0x40
  0162e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00105 
:00107 %14 = %6 * %14                       [Float][Float]
  01635: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0163c: 00 	test   rdi,0x1
  01643:    	jne    0x398cc
  01649: 00 	test   rdi,0x2
  01650:    	je     0x168c
  01656:    	xorps  xmm6,xmm6
  01659: 00 	movabs rax,0x8000000000000002
  01663:    	cmp    rdi,rax
  01666:    	je     0x169e
  0166c:    	mov    rax,rdi
  0166f:    	sar    rax,0x3f
  01673:    	add    rax,0x2
  01677:    	and    rdi,0xfffffffffffffffc
  0167b:    	or     rdi,rax
  0167e:    	rol    rdi,0x3d
  01682:    	movq   xmm6,rdi
  01687:    	jmp    0x169e
  0168c:    	call   0xffff1a8c
  01691:    	test   rax,rax
  01694:    	je     0x398cc
  0169a:    	movq   xmm6,xmm0
  0169e:    	mulsd  xmm6,xmm2
:00108 %9 = %13 + %14                       [Float][Float]
  016a2:    	movq   xmm11,xmm3
  016a7:    	addsd  xmm11,xmm6
:00109 %13 = const[Vec]                     [Vec]
  016ac: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff2e85]        # 0xffff4538
  016b3: 00 	cmp    rax,QWORD PTR [rip+0xe2e]        # 0x24e8
  016ba:    	jne    0x3993c
  016c0: 00 	mov    rax,QWORD PTR [rip+0xe11]        # 0x24d8
  016c7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00110 %14 = %7
:00111 %15 = %8
:00112 %16 = %9
:00113 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  016ce:    	movq   xmm0,xmm9
  016d3:    	call   0xffff1b7f
  016d8: ff 	mov    QWORD PTR [rbp-0x98],rax
  016df:    	movq   xmm0,xmm10
  016e4:    	call   0xffff1b7f
  016e9: ff 	mov    QWORD PTR [rbp-0xa0],rax
  016f0:    	movq   xmm0,xmm11
  016f5:    	call   0xffff1b7f
  016fa: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01701: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01708: 00 	test   rdi,0x7
  0170f:    	jne    0x399fc
  01715:    	cmp    DWORD PTR [rdi+0x4],0x29
  01719:    	jne    0x399fc
  0171f: 26 	cmp    DWORD PTR [rip+0xffffffffffff2e0b],0x26        # 0xffff4531
  01726:    	jne    0x399fc
  0172c: 00 	mov    r9,0x0
  01733:    	sub    rsp,0x40
  01737:    	movq   QWORD PTR [rsp],xmm2
  0173c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01742:    	movq   QWORD PTR [rsp+0x10],xmm5
  01748:    	movq   QWORD PTR [rsp+0x18],xmm7
  0174e: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01755: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0175c: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01763: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0176a:    	mov    rdx,rdi
  0176d:    	mov    rax,QWORD PTR [rbx]
  01770:    	lea    rdi,[rsp-0x18]
  01775:    	mov    QWORD PTR [rdi],rax
  01778:    	mov    QWORD PTR [rbx],rdi
  0177b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01784:    	mov    QWORD PTR [rsp-0x38],rcx
  01789: ff 	lea    rcx,[rbp-0x98]
  01790: 00 	mov    r8,0x3
  01797:    	call   0x39a6a
  0179c:    	lea    rdi,[rbp-0x8]
  017a0:    	mov    QWORD PTR [rbx],rdi
  017a3:    	movq   xmm2,QWORD PTR [rsp]
  017a8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017ae:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017b4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  017ba: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  017c1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  017c8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  017cf: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  017d6:    	add    rsp,0x40
  017da: 31 	movabs r13,0x563184c7e400
  017e4:    	test   rax,rax
  017e7:    	je     0xffff1a53
  017ed:    	mov    QWORD PTR [rbp-0x78],rax
:00114 
:00116 %13 = const[Ray]                     [Ray]
  017f1: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff2d40]        # 0xffff4538
  017f8: 00 	cmp    rax,QWORD PTR [rip+0xd09]        # 0x2508
  017ff:    	jne    0x39a9c
  01805: 00 	mov    rax,QWORD PTR [rip+0xcec]        # 0x24f8
  0180c: ff 	mov    QWORD PTR [rbp-0x90],rax
:00117 %14 = dynvar(2, %7)
  01813:    	mov    rax,QWORD PTR [rbp-0x10]
  01817:    	mov    rax,QWORD PTR [rax]
  0181a:    	mov    rax,QWORD PTR [rax-0x50]
  0181e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00118 %15 = %10
  01825:    	mov    rax,QWORD PTR [rbp-0x78]
  01829: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00119 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01830: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01837: 00 	test   rdi,0x7
  0183e:    	jne    0x39b50
  01844:    	cmp    DWORD PTR [rdi+0x4],0x2f
  01848:    	jne    0x39b50
  0184e: 26 	cmp    DWORD PTR [rip+0xffffffffffff2cdc],0x26        # 0xffff4531
  01855:    	jne    0x39b50
  0185b: 00 	mov    r9,0x0
  01862:    	sub    rsp,0x40
  01866:    	movq   QWORD PTR [rsp],xmm2
  0186b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01871:    	movq   QWORD PTR [rsp+0x10],xmm5
  01877:    	movq   QWORD PTR [rsp+0x18],xmm7
  0187d: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01884: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0188b: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01892: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01899:    	mov    rdx,rdi
  0189c:    	mov    rax,QWORD PTR [rbx]
  0189f:    	lea    rdi,[rsp-0x18]
  018a4:    	mov    QWORD PTR [rdi],rax
  018a7:    	mov    QWORD PTR [rbx],rdi
  018aa: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018b3:    	mov    QWORD PTR [rsp-0x38],rcx
  018b8: ff 	lea    rcx,[rbp-0x98]
  018bf: 00 	mov    r8,0x2
  018c6:    	call   0x39bbe
  018cb:    	lea    rdi,[rbp-0x8]
  018cf:    	mov    QWORD PTR [rbx],rdi
  018d2:    	movq   xmm2,QWORD PTR [rsp]
  018d7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018dd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018e3:    	movq   xmm7,QWORD PTR [rsp+0x18]
  018e9: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  018f0: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  018f7: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  018fe: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01905:    	add    rsp,0x40
  01909: 31 	movabs r13,0x563184c7e460
  01913:    	test   rax,rax
  01916:    	je     0xffff1a53
  0191c:    	mov    QWORD PTR [rbp-0x80],rax
:00120 
:00122 %13 = const[Isect]                   [Isect]
  01920: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff2c11]        # 0xffff4538
  01927: 00 	cmp    rax,QWORD PTR [rip+0xbfa]        # 0x2528
  0192e:    	jne    0x39bf0
  01934: 00 	mov    rax,QWORD PTR [rip+0xbdd]        # 0x2518
  0193b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00123 %12 = %13.call new()                 [#<Class:Isect>]
  01942: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01949: 00 	test   rdi,0x7
  01950:    	jne    0x39ca4
  01956:    	cmp    DWORD PTR [rdi+0x4],0x31
  0195a:    	jne    0x39ca4
  01960: 26 	cmp    DWORD PTR [rip+0xffffffffffff2bca],0x26        # 0xffff4531
  01967:    	jne    0x39ca4
  0196d: 00 	mov    r9,0x0
  01974:    	sub    rsp,0x40
  01978:    	movq   QWORD PTR [rsp],xmm2
  0197d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01983:    	movq   QWORD PTR [rsp+0x10],xmm5
  01989:    	movq   QWORD PTR [rsp+0x18],xmm7
  0198f: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01996: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0199d: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  019a4: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  019ab:    	mov    rdx,rdi
  019ae:    	mov    rax,QWORD PTR [rbx]
  019b1:    	lea    rdi,[rsp-0x18]
  019b6:    	mov    QWORD PTR [rdi],rax
  019b9:    	mov    QWORD PTR [rbx],rdi
  019bc: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019c5:    	mov    QWORD PTR [rsp-0x38],rcx
  019ca: ff 	lea    rcx,[rbp-0x98]
  019d1: 00 	mov    r8,0x0
  019d8:    	call   0x39d12
  019dd:    	lea    rdi,[rbp-0x8]
  019e1:    	mov    QWORD PTR [rbx],rdi
  019e4:    	movq   xmm2,QWORD PTR [rsp]
  019e9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ef:    	movq   xmm5,QWORD PTR [rsp+0x10]
  019f5:    	movq   xmm7,QWORD PTR [rsp+0x18]
  019fb: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a02: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a09: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a10: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a17:    	add    rsp,0x40
  01a1b: 31 	movabs r13,0x563184c7e4a0
  01a25:    	test   rax,rax
  01a28:    	je     0xffff1a53
  01a2e: ff 	mov    QWORD PTR [rbp-0x88],rax
:00124 
:00126 %13 = @spheres: Scene[IvarId(0)]
  01a35:    	mov    rdi,QWORD PTR [rbp-0x28]
  01a39:    	mov    rax,QWORD PTR [rdi+0x10]
  01a3d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00127 %14 = 0: i32
  01a44: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00128 %13 = %13.[%14]                      [Array][Integer]
  01a4f:    	sub    rsp,0x40
  01a53:    	movq   QWORD PTR [rsp],xmm2
  01a58:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a5e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01a64:    	movq   QWORD PTR [rsp+0x18],xmm7
  01a6a: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01a71: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01a78: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01a7f: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01a86: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01a8d: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01a94:    	mov    rdi,rbx
  01a97:    	mov    rsi,r12
  01a9a: 31 	movabs r8,0x563184c7e4d8
  01aa4: 31 	movabs rax,0x5631840b8230
  01aae:    	call   rax
  01ab0:    	movq   xmm2,QWORD PTR [rsp]
  01ab5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01abb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01ac1:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ac7: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01ace: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01ad5: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01adc: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01ae3:    	add    rsp,0x40
  01ae7: 31 	movabs r13,0x563184c7e4e0
  01af1:    	test   rax,rax
  01af4:    	je     0xffff1a53
  01afa: ff 	mov    QWORD PTR [rbp-0x90],rax
:00129 %14 = %11
  01b01:    	mov    rax,QWORD PTR [rbp-0x80]
  01b05: ff 	mov    QWORD PTR [rbp-0x98],rax
:00130 %15 = %12
  01b0c: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b13: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00131 _ = %13.call intersect(%14; 2)       [Sphere]
  01b1a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b21: 00 	test   rdi,0x7
  01b28:    	jne    0x39d44
  01b2e:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01b32:    	jne    0x39d44
  01b38: 26 	cmp    DWORD PTR [rip+0xffffffffffff29f2],0x26        # 0xffff4531
  01b3f:    	jne    0x39d44
  01b45:    	sub    rsp,0x40
  01b49:    	movq   QWORD PTR [rsp],xmm2
  01b4e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b54:    	movq   QWORD PTR [rsp+0x10],xmm5
  01b5a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01b60: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01b67: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01b6e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01b75: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01b7c:    	mov    rax,QWORD PTR [rbx]
  01b7f:    	lea    rdi,[rsp-0x18]
  01b84:    	mov    QWORD PTR [rdi],rax
  01b87:    	mov    QWORD PTR [rbx],rdi
  01b8a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b93:    	mov    QWORD PTR [rsp-0x38],rcx
  01b98: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01b9f:    	mov    QWORD PTR [rsp-0x38],rax
  01ba4: 00 	mov    rdi,0x2
  01bab: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01bb2:    	mov    QWORD PTR [rsp-0x40],rax
  01bb7: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01bbe:    	mov    QWORD PTR [rsp-0x48],rax
  01bc3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bcc: 10 	movabs rax,0x1001000000045
  01bd6:    	mov    QWORD PTR [rsp-0x28],rax
  01bdb: 31 	movabs r13,0x563184c85400
  01be5:    	call   0xffff5130
  01bea:    	lea    rdi,[rbp-0x8]
  01bee:    	mov    QWORD PTR [rbx],rdi
  01bf1:    	movq   xmm2,QWORD PTR [rsp]
  01bf6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bfc:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c02:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c08: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c0f: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c16: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c1d: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c24:    	add    rsp,0x40
  01c28: 31 	movabs r13,0x563184c7e520
  01c32:    	test   rax,rax
  01c35:    	je     0xffff1a53
:00132 
:00134 %13 = @spheres: Scene[IvarId(0)]
  01c3b:    	mov    rdi,QWORD PTR [rbp-0x28]
  01c3f:    	mov    rax,QWORD PTR [rdi+0x10]
  01c43: ff 	mov    QWORD PTR [rbp-0x90],rax
:00135 %14 = 1: i32
  01c4a: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00136 %13 = %13.[%14]                      [Array][Integer]
  01c55:    	sub    rsp,0x40
  01c59:    	movq   QWORD PTR [rsp],xmm2
  01c5e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c64:    	movq   QWORD PTR [rsp+0x10],xmm5
  01c6a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01c70: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01c77: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01c7e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01c85: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01c8c: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01c93: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01c9a:    	mov    rdi,rbx
  01c9d:    	mov    rsi,r12
  01ca0: 31 	movabs r8,0x563184c7e558
  01caa: 31 	movabs rax,0x5631840b8230
  01cb4:    	call   rax
  01cb6:    	movq   xmm2,QWORD PTR [rsp]
  01cbb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01cc1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01cc7:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ccd: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01cd4: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01cdb: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01ce2: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01ce9:    	add    rsp,0x40
  01ced: 31 	movabs r13,0x563184c7e560
  01cf7:    	test   rax,rax
  01cfa:    	je     0xffff1a53
  01d00: ff 	mov    QWORD PTR [rbp-0x90],rax
:00137 %14 = %11
  01d07:    	mov    rax,QWORD PTR [rbp-0x80]
  01d0b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00138 %15 = %12
  01d12: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01d19: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00139 _ = %13.call intersect(%14; 2)       [Sphere]
  01d20: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01d27: 00 	test   rdi,0x7
  01d2e:    	jne    0x39db2
  01d34:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01d38:    	jne    0x39db2
  01d3e: 26 	cmp    DWORD PTR [rip+0xffffffffffff27ec],0x26        # 0xffff4531
  01d45:    	jne    0x39db2
  01d4b:    	sub    rsp,0x40
  01d4f:    	movq   QWORD PTR [rsp],xmm2
  01d54:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d5a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01d60:    	movq   QWORD PTR [rsp+0x18],xmm7
  01d66: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01d6d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01d74: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01d7b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01d82:    	mov    rax,QWORD PTR [rbx]
  01d85:    	lea    rdi,[rsp-0x18]
  01d8a:    	mov    QWORD PTR [rdi],rax
  01d8d:    	mov    QWORD PTR [rbx],rdi
  01d90: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01d99:    	mov    QWORD PTR [rsp-0x38],rcx
  01d9e: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01da5:    	mov    QWORD PTR [rsp-0x38],rax
  01daa: 00 	mov    rdi,0x2
  01db1: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01db8:    	mov    QWORD PTR [rsp-0x40],rax
  01dbd: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01dc4:    	mov    QWORD PTR [rsp-0x48],rax
  01dc9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01dd2: 10 	movabs rax,0x1001000000045
  01ddc:    	mov    QWORD PTR [rsp-0x28],rax
  01de1: 31 	movabs r13,0x563184c85400
  01deb:    	call   0xffff5130
  01df0:    	lea    rdi,[rbp-0x8]
  01df4:    	mov    QWORD PTR [rbx],rdi
  01df7:    	movq   xmm2,QWORD PTR [rsp]
  01dfc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e02:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e08:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e0e: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e15: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e1c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e23: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e2a:    	add    rsp,0x40
  01e2e: 31 	movabs r13,0x563184c7e5a0
  01e38:    	test   rax,rax
  01e3b:    	je     0xffff1a53
:00140 
:00142 %13 = @spheres: Scene[IvarId(0)]
  01e41:    	mov    rdi,QWORD PTR [rbp-0x28]
  01e45:    	mov    rax,QWORD PTR [rdi+0x10]
  01e49: ff 	mov    QWORD PTR [rbp-0x90],rax
:00143 %14 = 2: i32
  01e50: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00144 %13 = %13.[%14]                      [Array][Integer]
  01e5b:    	sub    rsp,0x40
  01e5f:    	movq   QWORD PTR [rsp],xmm2
  01e64:    	movq   QWORD PTR [rsp+0x8],xmm4
  01e6a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01e70:    	movq   QWORD PTR [rsp+0x18],xmm7
  01e76: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01e7d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01e84: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01e8b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01e92: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01e99: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01ea0:    	mov    rdi,rbx
  01ea3:    	mov    rsi,r12
  01ea6: 31 	movabs r8,0x563184c7e5d8
  01eb0: 31 	movabs rax,0x5631840b8230
  01eba:    	call   rax
  01ebc:    	movq   xmm2,QWORD PTR [rsp]
  01ec1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ec7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01ecd:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ed3: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01eda: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01ee1: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01ee8: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01eef:    	add    rsp,0x40
  01ef3: 31 	movabs r13,0x563184c7e5e0
  01efd:    	test   rax,rax
  01f00:    	je     0xffff1a53
  01f06: ff 	mov    QWORD PTR [rbp-0x90],rax
:00145 %14 = %11
  01f0d:    	mov    rax,QWORD PTR [rbp-0x80]
  01f11: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 %15 = %12
  01f18: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01f1f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00147 _ = %13.call intersect(%14; 2)       [Sphere]
  01f26: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01f2d: 00 	test   rdi,0x7
  01f34:    	jne    0x39e20
  01f3a:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01f3e:    	jne    0x39e20
  01f44: 26 	cmp    DWORD PTR [rip+0xffffffffffff25e6],0x26        # 0xffff4531
  01f4b:    	jne    0x39e20
  01f51:    	sub    rsp,0x40
  01f55:    	movq   QWORD PTR [rsp],xmm2
  01f5a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01f60:    	movq   QWORD PTR [rsp+0x10],xmm5
  01f66:    	movq   QWORD PTR [rsp+0x18],xmm7
  01f6c: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01f73: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01f7a: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01f81: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01f88:    	mov    rax,QWORD PTR [rbx]
  01f8b:    	lea    rdi,[rsp-0x18]
  01f90:    	mov    QWORD PTR [rdi],rax
  01f93:    	mov    QWORD PTR [rbx],rdi
  01f96: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01f9f:    	mov    QWORD PTR [rsp-0x38],rcx
  01fa4: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01fab:    	mov    QWORD PTR [rsp-0x38],rax
  01fb0: 00 	mov    rdi,0x2
  01fb7: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01fbe:    	mov    QWORD PTR [rsp-0x40],rax
  01fc3: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01fca:    	mov    QWORD PTR [rsp-0x48],rax
  01fcf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01fd8: 10 	movabs rax,0x1001000000045
  01fe2:    	mov    QWORD PTR [rsp-0x28],rax
  01fe7: 31 	movabs r13,0x563184c85400
  01ff1:    	call   0xffff5130
  01ff6:    	lea    rdi,[rbp-0x8]
  01ffa:    	mov    QWORD PTR [rbx],rdi
  01ffd:    	movq   xmm2,QWORD PTR [rsp]
  02002:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02008:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0200e:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02014: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  0201b: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02022: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02029: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02030:    	add    rsp,0x40
  02034: 31 	movabs r13,0x563184c7e620
  0203e:    	test   rax,rax
  02041:    	je     0xffff1a53
:00148 
:00150 %13 = @plane: Scene[IvarId(1)]
  02047:    	mov    rdi,QWORD PTR [rbp-0x28]
  0204b:    	mov    rax,QWORD PTR [rdi+0x18]
  0204f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00151 %14 = %11
  02056:    	mov    rax,QWORD PTR [rbp-0x80]
  0205a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00152 %15 = %12
  02061: ff 	mov    rax,QWORD PTR [rbp-0x88]
  02068: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00153 _ = %13.call intersect(%14; 2)       [Plane]
  0206f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02076: 00 	test   rdi,0x7
  0207d:    	jne    0x39e8e
  02083:    	cmp    DWORD PTR [rdi+0x4],0x2c
  02087:    	jne    0x39e8e
  0208d: 26 	cmp    DWORD PTR [rip+0xffffffffffff249d],0x26        # 0xffff4531
  02094:    	jne    0x39e8e
  0209a:    	sub    rsp,0x40
  0209e:    	movq   QWORD PTR [rsp],xmm2
  020a3:    	movq   QWORD PTR [rsp+0x8],xmm4
  020a9:    	movq   QWORD PTR [rsp+0x10],xmm5
  020af:    	movq   QWORD PTR [rsp+0x18],xmm7
  020b5: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  020bc: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  020c3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  020ca: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  020d1:    	mov    rax,QWORD PTR [rbx]
  020d4:    	lea    rdi,[rsp-0x18]
  020d9:    	mov    QWORD PTR [rdi],rax
  020dc:    	mov    QWORD PTR [rbx],rdi
  020df: 00 	mov    QWORD PTR [rsp-0x20],0x0
  020e8:    	mov    QWORD PTR [rsp-0x38],rcx
  020ed: ff 	mov    rax,QWORD PTR [rbp-0x90]
  020f4:    	mov    QWORD PTR [rsp-0x38],rax
  020f9: 00 	mov    rdi,0x2
  02100: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02107:    	mov    QWORD PTR [rsp-0x40],rax
  0210c: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02113:    	mov    QWORD PTR [rsp-0x48],rax
  02118: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02121: 0e 	movabs rax,0x1000e00000047
  0212b:    	mov    QWORD PTR [rsp-0x28],rax
  02130: 31 	movabs r13,0x563184c872a0
  0213a:    	call   0xffff56fc
  0213f:    	lea    rdi,[rbp-0x8]
  02143:    	mov    QWORD PTR [rbx],rdi
  02146:    	movq   xmm2,QWORD PTR [rsp]
  0214b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02151:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02157:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0215d: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02164: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0216b: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02172: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02179:    	add    rsp,0x40
  0217d: 31 	movabs r13,0x563184c7e680
  02187:    	test   rax,rax
  0218a:    	je     0xffff1a53
:00154 
:00156 %13 = %12.call hit()                 [Isect]
  02190: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  02197: 00 	test   rdi,0x7
  0219e:    	jne    0x39efc
  021a4:    	cmp    DWORD PTR [rdi+0x4],0x30
  021a8:    	jne    0x39efc
  021ae: 26 	cmp    DWORD PTR [rip+0xffffffffffff237c],0x26        # 0xffff4531
  021b5:    	jne    0x39efc
  021bb:    	mov    esi,DWORD PTR [rip+0x373]        # 0x2534
  021c1:    	cmp    esi,0xffffffff
  021c4:    	je     0x39f6a
  021ca:    	cmp    WORD PTR [rdi+0x2],0x3
  021cf:    	jne    0x21e8
  021d5:    	cmp    esi,0x6
  021d8:    	jge    0x21e8
  021de:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  021e3:    	jmp    0x2262
  021e8:    	sub    rsp,0x40
  021ec:    	movq   QWORD PTR [rsp],xmm2
  021f1:    	movq   QWORD PTR [rsp+0x8],xmm4
  021f7:    	movq   QWORD PTR [rsp+0x10],xmm5
  021fd:    	movq   QWORD PTR [rsp+0x18],xmm7
  02203: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0220a: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02211: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02218: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0221f: 31 	movabs rax,0x563184053740
  02229:    	call   rax
  0222b:    	movq   xmm2,QWORD PTR [rsp]
  02230:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02236:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0223c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02242: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02249: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02250: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02257: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0225e:    	add    rsp,0x40
  02262: ff 	mov    QWORD PTR [rbp-0x90],rax
:00157 
:00159 condnotbr %13 =>:00165
  02269: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02270:    	or     rax,0x10
  02274:    	cmp    rax,0x14
  02278:    	je     0x238b
:00160 %13 = dynvar(2, %6)
  0227e:    	mov    rax,QWORD PTR [rbp-0x10]
  02282:    	mov    rax,QWORD PTR [rax]
  02285:    	mov    rax,QWORD PTR [rax-0x48]
  02289: ff 	mov    QWORD PTR [rbp-0x90],rax
:00161 %14 = literal[1.0]
  02290: 00 	movq   xmm3,QWORD PTR [rip+0x2a0]        # 0x2538
  02298: 00 	movabs rax,0xff80000000000002
  022a2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00162 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  022a9: 01 	sub    DWORD PTR [rip+0x290],0x1        # 0x2540
  022b0:    	je     0x3a06f
  022b6: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  022bd: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  022c4:    	sub    rsp,0x50
  022c8:    	movq   QWORD PTR [rsp],xmm2
  022cd:    	movq   QWORD PTR [rsp+0x8],xmm3
  022d3:    	movq   QWORD PTR [rsp+0x10],xmm4
  022d9:    	movq   QWORD PTR [rsp+0x18],xmm5
  022df:    	movq   QWORD PTR [rsp+0x20],xmm7
  022e5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  022ec: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  022f3: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  022fa: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  02301:    	mov    rdx,rdi
  02304:    	mov    rcx,rsi
  02307:    	mov    rdi,rbx
  0230a:    	mov    rsi,r12
  0230d: 31 	movabs rax,0x563184087f80
  02317:    	call   rax
  02319:    	movq   xmm2,QWORD PTR [rsp]
  0231e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02324:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0232a:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02330:    	movq   xmm7,QWORD PTR [rsp+0x20]
  02336: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0233d: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  02344: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0234b: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  02352:    	add    rsp,0x50
  02356: 31 	movabs r13,0x563184c7e700
  02360:    	test   rax,rax
  02363:    	je     0xffff1a53
  02369: ff 	mov    QWORD PTR [rbp-0x90],rax
:00163 dynvar(2, %6) = %13
  02370:    	mov    rax,QWORD PTR [rbp-0x10]
  02374:    	mov    rax,QWORD PTR [rax]
  02377: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0237e:    	mov    QWORD PTR [rax-0x48],rdi
:00164 ret %13
  02382: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02389:    	leave  
  0238a:    	ret    
:00165 %13 = literal[0.0]
  0238b: 00 	movq   xmm3,QWORD PTR [rip+0x1b5]        # 0x2548
  02393: 00 	movabs rax,0x8000000000000002
  0239d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00166 ret %13
  023a4: ff 	mov    rax,QWORD PTR [rbp-0x90]
  023ab:    	leave  
  023ac:    	ret    
==> start whole compile: intersect FuncId(69) self_class:Sphere start:[00000] bytecode:0x563184c85400
<== finished compile. elapsed:167.6µs
offset:Pos(68408) code: 7199 bytes  data: 401 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004b: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00052:    	mov    rdi,QWORD PTR [rbp-0x28]
  00056: 00 	test   rdi,0x7
  0005d:    	jne    0x37b41
  00063:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00067:    	jne    0x37b41
:00000 %9 = %1.call org()                   [Ray]
  0006d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00071: 00 	test   rdi,0x7
  00078:    	jne    0x37b50
  0007e:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00082:    	jne    0x37b50
  00088: 26 	cmp    DWORD PTR [rip+0xffffffffffff1f52],0x26        # 0xffff1fe1
  0008f:    	jne    0x37b50
  00095:    	mov    esi,DWORD PTR [rip+0x1b88]        # 0x1c23
  0009b:    	cmp    esi,0xffffffff
  0009e:    	je     0x37b5f
  000a4:    	cmp    WORD PTR [rdi+0x2],0x3
  000a9:    	jne    0xc2
  000af:    	cmp    esi,0x6
  000b2:    	jge    0xc2
  000b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd:    	jmp    0xce
  000c2: 31 	movabs rax,0x563184053740
  000cc:    	call   rax
  000ce:    	mov    QWORD PTR [rbp-0x70],rax
:00001 
:00003 %10 = @center: Sphere[IvarId(0)]
  000d2:    	mov    rdi,QWORD PTR [rbp-0x28]
  000d6:    	mov    rax,QWORD PTR [rdi+0x10]
  000da:    	mov    QWORD PTR [rbp-0x78],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
  000de:    	mov    rdi,QWORD PTR [rbp-0x70]
  000e2: 00 	test   rdi,0x7
  000e9:    	jne    0x37b88
  000ef:    	cmp    DWORD PTR [rdi+0x4],0x28
  000f3:    	jne    0x37b88
  000f9: 26 	cmp    DWORD PTR [rip+0xffffffffffff1ee1],0x26        # 0xffff1fe1
  00100:    	jne    0x37b88
  00106:    	mov    rax,QWORD PTR [rbx]
  00109:    	lea    rdi,[rsp-0x18]
  0010e:    	mov    QWORD PTR [rdi],rax
  00111:    	mov    QWORD PTR [rbx],rdi
  00114: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0011d:    	mov    QWORD PTR [rsp-0x38],rcx
  00122:    	mov    rax,QWORD PTR [rbp-0x70]
  00126:    	mov    QWORD PTR [rsp-0x38],rax
  0012b: 00 	mov    rdi,0x1
  00132:    	mov    rax,QWORD PTR [rbp-0x78]
  00136:    	mov    QWORD PTR [rsp-0x40],rax
  0013b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00144: 08 	movabs rax,0x80000003f
  0014e:    	mov    QWORD PTR [rsp-0x28],rax
  00153: 31 	movabs r13,0x563184c81a90
  0015d:    	call   0xffff2c72
  00162:    	lea    rdi,[rbp-0x8]
  00166:    	mov    QWORD PTR [rbx],rdi
  00169: 31 	movabs r13,0x563184c85460
  00173:    	test   rax,rax
  00176:    	je     0xfffef503
  0017c:    	mov    QWORD PTR [rbp-0x40],rax
:00005 
:00007 %9 = %1.call dir()                   [Ray]
  00180:    	mov    rdi,QWORD PTR [rbp-0x30]
  00184: 00 	test   rdi,0x7
  0018b:    	jne    0x37b97
  00191:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00195:    	jne    0x37b97
  0019b: 26 	cmp    DWORD PTR [rip+0xffffffffffff1e3f],0x26        # 0xffff1fe1
  001a2:    	jne    0x37b97
  001a8:    	mov    esi,DWORD PTR [rip+0x1a7d]        # 0x1c2b
  001ae:    	cmp    esi,0xffffffff
  001b1:    	je     0x37ba6
  001b7:    	cmp    WORD PTR [rdi+0x2],0x3
  001bc:    	jne    0x1d5
  001c2:    	cmp    esi,0x6
  001c5:    	jge    0x1d5
  001cb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d0:    	jmp    0x1e1
  001d5: 31 	movabs rax,0x563184053740
  001df:    	call   rax
  001e1:    	mov    QWORD PTR [rbp-0x70],rax
:00008 
:00010 %4 = %3.call vdot(%9; 1)             [Vec]
  001e5:    	mov    rdi,QWORD PTR [rbp-0x40]
  001e9: 00 	test   rdi,0x7
  001f0:    	jne    0x37bcf
  001f6:    	cmp    DWORD PTR [rdi+0x4],0x28
  001fa:    	jne    0x37bcf
  00200: 26 	cmp    DWORD PTR [rip+0xffffffffffff1dda],0x26        # 0xffff1fe1
  00207:    	jne    0x37bcf
  0020d:    	mov    rax,QWORD PTR [rbx]
  00210:    	lea    rdi,[rsp-0x18]
  00215:    	mov    QWORD PTR [rdi],rax
  00218:    	mov    QWORD PTR [rbx],rdi
  0021b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00224:    	mov    QWORD PTR [rsp-0x38],rcx
  00229:    	mov    rax,QWORD PTR [rbp-0x40]
  0022d:    	mov    QWORD PTR [rsp-0x38],rax
  00232: 00 	mov    rdi,0x1
  00239:    	mov    rax,QWORD PTR [rbp-0x70]
  0023d:    	mov    QWORD PTR [rsp-0x40],rax
  00242: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0024b: 05 	movabs rax,0x500000041
  00255:    	mov    QWORD PTR [rsp-0x28],rax
  0025a: 31 	movabs r13,0x563184c66dc0
  00264:    	call   0xffff2d04
  00269:    	lea    rdi,[rbp-0x8]
  0026d:    	mov    QWORD PTR [rbx],rdi
  00270: 31 	movabs r13,0x563184c854c0
  0027a:    	test   rax,rax
  0027d:    	je     0xfffef503
  00283:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %10 = %3
  00287:    	mov    rax,QWORD PTR [rbp-0x40]
  0028b:    	mov    QWORD PTR [rbp-0x78],rax
:00014 %9 = %3.call vdot(%10; 1)            [Vec]
  0028f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00293: 00 	test   rdi,0x7
  0029a:    	jne    0x37bde
  002a0:    	cmp    DWORD PTR [rdi+0x4],0x28
  002a4:    	jne    0x37bde
  002aa: 26 	cmp    DWORD PTR [rip+0xffffffffffff1d30],0x26        # 0xffff1fe1
  002b1:    	jne    0x37bde
  002b7:    	mov    rax,QWORD PTR [rbx]
  002ba:    	lea    rdi,[rsp-0x18]
  002bf:    	mov    QWORD PTR [rdi],rax
  002c2:    	mov    QWORD PTR [rbx],rdi
  002c5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  002ce:    	mov    QWORD PTR [rsp-0x38],rcx
  002d3:    	mov    rax,QWORD PTR [rbp-0x40]
  002d7:    	mov    QWORD PTR [rsp-0x38],rax
  002dc: 00 	mov    rdi,0x1
  002e3:    	mov    rax,QWORD PTR [rbp-0x78]
  002e7:    	mov    QWORD PTR [rsp-0x40],rax
  002ec: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002f5: 05 	movabs rax,0x500000041
  002ff:    	mov    QWORD PTR [rsp-0x28],rax
  00304: 31 	movabs r13,0x563184c66dc0
  0030e:    	call   0xffff2d04
  00313:    	lea    rdi,[rbp-0x8]
  00317:    	mov    QWORD PTR [rbx],rdi
  0031a: 31 	movabs r13,0x563184c85500
  00324:    	test   rax,rax
  00327:    	je     0xfffef503
  0032d:    	mov    QWORD PTR [rbp-0x70],rax
:00015 
:00017 %10 = @radius: Sphere[IvarId(1)]
  00331:    	mov    rdi,QWORD PTR [rbp-0x28]
  00335:    	mov    rax,QWORD PTR [rdi+0x18]
  00339:    	mov    QWORD PTR [rbp-0x78],rax
:00018 %11 = @radius: Sphere[IvarId(1)]
  0033d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00341:    	mov    rax,QWORD PTR [rdi+0x18]
  00345:    	mov    QWORD PTR [rbp-0x80],rax
:00019 %10 = %10 * %11                      [Float][Float]
  00349:    	mov    rdi,QWORD PTR [rbp-0x78]
  0034d: 00 	test   rdi,0x1
  00354:    	jne    0x37bed
  0035a: 00 	test   rdi,0x2
  00361:    	je     0x39d
  00367:    	xorps  xmm2,xmm2
  0036a: 00 	movabs rax,0x8000000000000002
  00374:    	cmp    rdi,rax
  00377:    	je     0x3af
  0037d:    	mov    rax,rdi
  00380:    	sar    rax,0x3f
  00384:    	add    rax,0x2
  00388:    	and    rdi,0xfffffffffffffffc
  0038c:    	or     rdi,rax
  0038f:    	rol    rdi,0x3d
  00393:    	movq   xmm2,rdi
  00398:    	jmp    0x3af
  0039d:    	call   0xfffef53c
  003a2:    	test   rax,rax
  003a5:    	je     0x37bed
  003ab:    	movq   xmm2,xmm0
  003af:    	mov    rdi,QWORD PTR [rbp-0x80]
  003b3: 00 	test   rdi,0x1
  003ba:    	jne    0x37bfc
  003c0: 00 	test   rdi,0x2
  003c7:    	je     0x403
  003cd:    	xorps  xmm3,xmm3
  003d0: 00 	movabs rax,0x8000000000000002
  003da:    	cmp    rdi,rax
  003dd:    	je     0x415
  003e3:    	mov    rax,rdi
  003e6:    	sar    rax,0x3f
  003ea:    	add    rax,0x2
  003ee:    	and    rdi,0xfffffffffffffffc
  003f2:    	or     rdi,rax
  003f5:    	rol    rdi,0x3d
  003f9:    	movq   xmm3,rdi
  003fe:    	jmp    0x415
  00403:    	call   0xfffef53c
  00408:    	test   rax,rax
  0040b:    	je     0x37bfc
  00411:    	movq   xmm3,xmm0
  00415:    	mulsd  xmm2,xmm3
:00020 %5 = %9 - %10                        [Float][Float]
  00419:    	mov    rdi,QWORD PTR [rbp-0x70]
  0041d: 00 	test   rdi,0x1
  00424:    	jne    0x37c0b
  0042a: 00 	test   rdi,0x2
  00431:    	je     0x46d
  00437:    	xorps  xmm4,xmm4
  0043a: 00 	movabs rax,0x8000000000000002
  00444:    	cmp    rdi,rax
  00447:    	je     0x47f
  0044d:    	mov    rax,rdi
  00450:    	sar    rax,0x3f
  00454:    	add    rax,0x2
  00458:    	and    rdi,0xfffffffffffffffc
  0045c:    	or     rdi,rax
  0045f:    	rol    rdi,0x3d
  00463:    	movq   xmm4,rdi
  00468:    	jmp    0x47f
  0046d:    	call   0xfffef53c
  00472:    	test   rax,rax
  00475:    	je     0x37c0b
  0047b:    	movq   xmm4,xmm0
  0047f:    	movq   xmm5,xmm4
  00483:    	subsd  xmm5,xmm2
:00021 %9 = %4 * %4                         [Float][Float]
  00487:    	mov    rdi,QWORD PTR [rbp-0x48]
  0048b: 00 	test   rdi,0x1
  00492:    	jne    0x37c27
  00498: 00 	test   rdi,0x2
  0049f:    	je     0x4db
  004a5:    	xorps  xmm6,xmm6
  004a8: 00 	movabs rax,0x8000000000000002
  004b2:    	cmp    rdi,rax
  004b5:    	je     0x4ed
  004bb:    	mov    rax,rdi
  004be:    	sar    rax,0x3f
  004c2:    	add    rax,0x2
  004c6:    	and    rdi,0xfffffffffffffffc
  004ca:    	or     rdi,rax
  004cd:    	rol    rdi,0x3d
  004d1:    	movq   xmm6,rdi
  004d6:    	jmp    0x4ed
  004db:    	call   0xfffef53c
  004e0:    	test   rax,rax
  004e3:    	je     0x37c27
  004e9:    	movq   xmm6,xmm0
  004ed:    	movq   xmm4,xmm6
  004f1:    	mulsd  xmm4,xmm6
:00022 %6 = %9 - %5                         [Float][Float]
  004f5:    	movq   xmm7,xmm4
  004f9:    	subsd  xmm7,xmm5
:00023 %9 = literal[0.0]
  004fd: 00 	movq   xmm4,QWORD PTR [rip+0x1733]        # 0x1c38
  00505: 00 	movabs rax,0x8000000000000002
  0050f:    	mov    QWORD PTR [rbp-0x70],rax
:00024 _%9 = %6 > %9                        [Float][Float]
:00025 condnotbr _%9 =>:00113
  00513:    	ucomisd xmm7,xmm4
  00517:    	jbe    0x39194
:00026 %9 = %4
:00027 %9 = neg %9                          [Float]
  0051d:    	movq   xmm4,xmm6
  00521: 00 	xorps  xmm4,XMMWORD PTR [rip+0x1720]        # 0x1c48
:00028 %11 = const[Math]                    [Math]
  00528: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff1ab9]        # 0xffff1fe8
  0052f: 00 	cmp    rax,QWORD PTR [rip+0x1732]        # 0x1c68
  00536:    	jne    0x37c50
  0053c: 00 	mov    rax,QWORD PTR [rip+0x1715]        # 0x1c58
  00543:    	mov    QWORD PTR [rbp-0x80],rax
:00029 %12 = %6
:00030 %10 = %11.call sqrt(%12; 1)          [#<Class:Math>]
  00547:    	mov    rdi,QWORD PTR [rbp-0x80]
  0054b: 00 	test   rdi,0x7
  00552:    	jne    0x37cd8
  00558:    	cmp    DWORD PTR [rdi+0x4],0x21
  0055c:    	jne    0x37cd8
  00562: 26 	cmp    DWORD PTR [rip+0xffffffffffff1a78],0x26        # 0xffff1fe1
  00569:    	jne    0x37cd8
  0056f:    	sqrtsd xmm2,xmm7
:00031 
:00033 %7 = %9 - %10                        [Float][Float]
  00573:    	movq   xmm3,xmm4
  00577:    	subsd  xmm3,xmm2
:00034 %9 = literal[0.0]
  0057b: 00 	movq   xmm4,QWORD PTR [rip+0x16f5]        # 0x1c78
  00583: 00 	movabs rax,0x8000000000000002
  0058d:    	mov    QWORD PTR [rbp-0x70],rax
:00035 _%9 = %7 > %9                        [Float][Float]
:00036 condnotbr _%9 =>:00112
  00591:    	ucomisd xmm3,xmm4
  00595:    	jbe    0x39054
:00037 %9 = %2.call t()                     [<INVALID>]
  0059b: 01 	sub    DWORD PTR [rip+0x16de],0x1        # 0x1c80
  005a2:    	je     0x37d5f
  005a8:    	sub    rsp,0x30
  005ac:    	movq   QWORD PTR [rsp],xmm2
  005b1:    	movq   QWORD PTR [rsp+0x8],xmm3
  005b7:    	movq   QWORD PTR [rsp+0x10],xmm5
  005bd:    	movq   QWORD PTR [rsp+0x18],xmm6
  005c3:    	movq   QWORD PTR [rsp+0x20],xmm7
  005c9:    	mov    rdi,QWORD PTR [rbp-0x38]
  005cd: 31 	movabs rax,0x5631840958d0
  005d7:    	call   rax
  005d9:    	mov    r15d,eax
  005dc: 00 	cmp    r15d,DWORD PTR [rip+0x16a5]        # 0x1c88
  005e3:    	jne    0x37d81
  005e9:    	mov    eax,DWORD PTR [rip+0xffffffffffff19f2]        # 0xffff1fe1
  005ef:    	cmp    DWORD PTR [rip+0x168f],eax        # 0x1c84
  005f5:    	jne    0x37d81
  005fb:    	mov    rax,QWORD PTR [rbx]
  005fe:    	lea    rdi,[rsp-0x18]
  00603:    	mov    QWORD PTR [rdi],rax
  00606:    	mov    QWORD PTR [rbx],rdi
  00609: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00612:    	mov    QWORD PTR [rsp-0x38],rcx
  00617:    	mov    rax,QWORD PTR [rbp-0x38]
  0061b:    	mov    QWORD PTR [rsp-0x38],rax
  00620: 00 	mov    rdi,0x0
  00627: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00630: 00 	movabs rax,0x0
  0063a:    	mov    QWORD PTR [rsp-0x28],rax
  0063f: 00 	movabs r13,0x0
  00649:    	call   0xfffef4c8
  0064e:    	lea    rdi,[rbp-0x8]
  00652:    	mov    QWORD PTR [rbx],rdi
  00655:    	movq   xmm2,QWORD PTR [rsp]
  0065a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00660:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00666:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0066c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00672:    	add    rsp,0x30
  00676:    	test   rax,rax
  00679:    	je     0x37ded
  0067f:    	mov    QWORD PTR [rbp-0x70],rax
:00038 
:00040 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00041 condnotbr _%9 =>:00112
  00683:    	movq   xmm0,xmm3
  00687:    	call   0xfffef62f
  0068c:    	mov    QWORD PTR [rbp-0x60],rax
  00690:    	mov    rdi,QWORD PTR [rbp-0x60]
  00694:    	mov    rsi,QWORD PTR [rbp-0x70]
  00698: 00 	test   rdi,0x1
  0069f:    	je     0x37dfc
  006a5: 00 	test   rsi,0x1
  006ac:    	je     0x37dfc
  006b2:    	cmp    rdi,rsi
  006b5:    	jge    0x390e1
:00042 _ = %2.call t=(%7; 1)                [<INVALID>]
  006bb: 01 	sub    DWORD PTR [rip+0x15ca],0x1        # 0x1c8c
  006c2:    	je     0x37e9a
  006c8:    	sub    rsp,0x30
  006cc:    	movq   QWORD PTR [rsp],xmm2
  006d1:    	movq   QWORD PTR [rsp+0x8],xmm3
  006d7:    	movq   QWORD PTR [rsp+0x10],xmm5
  006dd:    	movq   QWORD PTR [rsp+0x18],xmm6
  006e3:    	movq   QWORD PTR [rsp+0x20],xmm7
  006e9:    	mov    rdi,QWORD PTR [rbp-0x38]
  006ed: 31 	movabs rax,0x5631840958d0
  006f7:    	call   rax
  006f9:    	mov    r15d,eax
  006fc: 00 	cmp    r15d,DWORD PTR [rip+0x1591]        # 0x1c94
  00703:    	jne    0x37ebc
  00709:    	mov    eax,DWORD PTR [rip+0xffffffffffff18d2]        # 0xffff1fe1
  0070f:    	cmp    DWORD PTR [rip+0x157b],eax        # 0x1c90
  00715:    	jne    0x37ebc
  0071b:    	mov    rax,QWORD PTR [rbx]
  0071e:    	lea    rdi,[rsp-0x18]
  00723:    	mov    QWORD PTR [rdi],rax
  00726:    	mov    QWORD PTR [rbx],rdi
  00729: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00732:    	mov    QWORD PTR [rsp-0x38],rcx
  00737:    	mov    rax,QWORD PTR [rbp-0x38]
  0073b:    	mov    QWORD PTR [rsp-0x38],rax
  00740: 00 	mov    rdi,0x1
  00747:    	mov    rax,QWORD PTR [rbp-0x60]
  0074b:    	mov    QWORD PTR [rsp-0x40],rax
  00750: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00759: 00 	movabs rax,0x0
  00763:    	mov    QWORD PTR [rsp-0x28],rax
  00768: 00 	movabs r13,0x0
  00772:    	call   0xfffef4c8
  00777:    	lea    rdi,[rbp-0x8]
  0077b:    	mov    QWORD PTR [rbx],rdi
  0077e:    	movq   xmm2,QWORD PTR [rsp]
  00783:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00789:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0078f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00795:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0079b:    	add    rsp,0x30
  0079f:    	test   rax,rax
  007a2:    	je     0x37f28
:00043 
:00045 %9 = literal[true]
  007a8: 00 	mov    rax,0x1c
  007af:    	mov    QWORD PTR [rbp-0x70],rax
:00046 _ = %2.call hit=(%9; 1)              [<INVALID>]
  007b3: 01 	sub    DWORD PTR [rip+0x14de],0x1        # 0x1c98
  007ba:    	je     0x37f74
  007c0:    	sub    rsp,0x30
  007c4:    	movq   QWORD PTR [rsp],xmm2
  007c9:    	movq   QWORD PTR [rsp+0x8],xmm3
  007cf:    	movq   QWORD PTR [rsp+0x10],xmm5
  007d5:    	movq   QWORD PTR [rsp+0x18],xmm6
  007db:    	movq   QWORD PTR [rsp+0x20],xmm7
  007e1:    	mov    rdi,QWORD PTR [rbp-0x38]
  007e5: 31 	movabs rax,0x5631840958d0
  007ef:    	call   rax
  007f1:    	mov    r15d,eax
  007f4: 00 	cmp    r15d,DWORD PTR [rip+0x14a5]        # 0x1ca0
  007fb:    	jne    0x37f96
  00801:    	mov    eax,DWORD PTR [rip+0xffffffffffff17da]        # 0xffff1fe1
  00807:    	cmp    DWORD PTR [rip+0x148f],eax        # 0x1c9c
  0080d:    	jne    0x37f96
  00813:    	mov    rax,QWORD PTR [rbx]
  00816:    	lea    rdi,[rsp-0x18]
  0081b:    	mov    QWORD PTR [rdi],rax
  0081e:    	mov    QWORD PTR [rbx],rdi
  00821: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0082a:    	mov    QWORD PTR [rsp-0x38],rcx
  0082f:    	mov    rax,QWORD PTR [rbp-0x38]
  00833:    	mov    QWORD PTR [rsp-0x38],rax
  00838: 00 	mov    rdi,0x1
  0083f:    	mov    rax,QWORD PTR [rbp-0x70]
  00843:    	mov    QWORD PTR [rsp-0x40],rax
  00848: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00851: 00 	movabs rax,0x0
  0085b:    	mov    QWORD PTR [rsp-0x28],rax
  00860: 00 	movabs r13,0x0
  0086a:    	call   0xfffef4c8
  0086f:    	lea    rdi,[rbp-0x8]
  00873:    	mov    QWORD PTR [rbx],rdi
  00876:    	movq   xmm2,QWORD PTR [rsp]
  0087b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00881:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00887:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0088d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00893:    	add    rsp,0x30
  00897:    	test   rax,rax
  0089a:    	je     0x38002
:00047 
:00049 %10 = const[Vec]                     [<INVALID>]
  008a0: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff1741]        # 0xffff1fe8
  008a7: 00 	cmp    rax,QWORD PTR [rip+0x140a]        # 0x1cb8
  008ae:    	jne    0x38011
  008b4: 00 	mov    rax,QWORD PTR [rip+0x13ed]        # 0x1ca8
  008bb:    	mov    QWORD PTR [rbp-0x78],rax
:00050 %12 = %1.call org()                  [<INVALID>]
  008bf: 01 	sub    DWORD PTR [rip+0x13fa],0x1        # 0x1cc0
  008c6:    	je     0x380bd
  008cc:    	sub    rsp,0x20
  008d0:    	movq   QWORD PTR [rsp],xmm3
  008d5:    	movq   QWORD PTR [rsp+0x8],xmm5
  008db:    	movq   QWORD PTR [rsp+0x10],xmm6
  008e1:    	movq   QWORD PTR [rsp+0x18],xmm7
  008e7:    	mov    rdi,QWORD PTR [rbp-0x30]
  008eb: 31 	movabs rax,0x5631840958d0
  008f5:    	call   rax
  008f7:    	mov    r15d,eax
  008fa: 00 	cmp    r15d,DWORD PTR [rip+0x13c7]        # 0x1cc8
  00901:    	jne    0x380df
  00907:    	mov    eax,DWORD PTR [rip+0xffffffffffff16d4]        # 0xffff1fe1
  0090d:    	cmp    DWORD PTR [rip+0x13b1],eax        # 0x1cc4
  00913:    	jne    0x380df
  00919:    	mov    rax,QWORD PTR [rbx]
  0091c:    	lea    rdi,[rsp-0x18]
  00921:    	mov    QWORD PTR [rdi],rax
  00924:    	mov    QWORD PTR [rbx],rdi
  00927: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00930:    	mov    QWORD PTR [rsp-0x38],rcx
  00935:    	mov    rax,QWORD PTR [rbp-0x30]
  00939:    	mov    QWORD PTR [rsp-0x38],rax
  0093e: 00 	mov    rdi,0x0
  00945: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0094e: 00 	movabs rax,0x0
  00958:    	mov    QWORD PTR [rsp-0x28],rax
  0095d: 00 	movabs r13,0x0
  00967:    	call   0xfffef4c8
  0096c:    	lea    rdi,[rbp-0x8]
  00970:    	mov    QWORD PTR [rbx],rdi
  00973:    	movq   xmm3,QWORD PTR [rsp]
  00978:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0097e:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00984:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0098a:    	add    rsp,0x20
  0098e:    	test   rax,rax
  00991:    	je     0x3814b
  00997: ff 	mov    QWORD PTR [rbp-0x88],rax
:00051 
:00053 %11 = %12.call x()                   [<INVALID>]
  0099e: 01 	sub    DWORD PTR [rip+0x1327],0x1        # 0x1ccc
  009a5:    	je     0x38183
  009ab:    	sub    rsp,0x20
  009af:    	movq   QWORD PTR [rsp],xmm3
  009b4:    	movq   QWORD PTR [rsp+0x8],xmm5
  009ba:    	movq   QWORD PTR [rsp+0x10],xmm6
  009c0:    	movq   QWORD PTR [rsp+0x18],xmm7
  009c6: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  009cd: 31 	movabs rax,0x5631840958d0
  009d7:    	call   rax
  009d9:    	mov    r15d,eax
  009dc: 00 	cmp    r15d,DWORD PTR [rip+0x12f1]        # 0x1cd4
  009e3:    	jne    0x381a5
  009e9:    	mov    eax,DWORD PTR [rip+0xffffffffffff15f2]        # 0xffff1fe1
  009ef:    	cmp    DWORD PTR [rip+0x12db],eax        # 0x1cd0
  009f5:    	jne    0x381a5
  009fb:    	mov    rax,QWORD PTR [rbx]
  009fe:    	lea    rdi,[rsp-0x18]
  00a03:    	mov    QWORD PTR [rdi],rax
  00a06:    	mov    QWORD PTR [rbx],rdi
  00a09: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a12:    	mov    QWORD PTR [rsp-0x38],rcx
  00a17: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00a1e:    	mov    QWORD PTR [rsp-0x38],rax
  00a23: 00 	mov    rdi,0x0
  00a2a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a33: 00 	movabs rax,0x0
  00a3d:    	mov    QWORD PTR [rsp-0x28],rax
  00a42: 00 	movabs r13,0x0
  00a4c:    	call   0xfffef4c8
  00a51:    	lea    rdi,[rbp-0x8]
  00a55:    	mov    QWORD PTR [rbx],rdi
  00a58:    	movq   xmm3,QWORD PTR [rsp]
  00a5d:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00a63:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00a69:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00a6f:    	add    rsp,0x20
  00a73:    	test   rax,rax
  00a76:    	je     0x38214
  00a7c:    	mov    QWORD PTR [rbp-0x80],rax
:00054 
:00056 %13 = %1.call dir()                  [<INVALID>]
  00a80: 01 	sub    DWORD PTR [rip+0x1251],0x1        # 0x1cd8
  00a87:    	je     0x3824c
  00a8d:    	sub    rsp,0x20
  00a91:    	movq   QWORD PTR [rsp],xmm3
  00a96:    	movq   QWORD PTR [rsp+0x8],xmm5
  00a9c:    	movq   QWORD PTR [rsp+0x10],xmm6
  00aa2:    	movq   QWORD PTR [rsp+0x18],xmm7
  00aa8:    	mov    rdi,QWORD PTR [rbp-0x30]
  00aac: 31 	movabs rax,0x5631840958d0
  00ab6:    	call   rax
  00ab8:    	mov    r15d,eax
  00abb: 00 	cmp    r15d,DWORD PTR [rip+0x121e]        # 0x1ce0
  00ac2:    	jne    0x3826e
  00ac8:    	mov    eax,DWORD PTR [rip+0xffffffffffff1513]        # 0xffff1fe1
  00ace:    	cmp    DWORD PTR [rip+0x1208],eax        # 0x1cdc
  00ad4:    	jne    0x3826e
  00ada:    	mov    rax,QWORD PTR [rbx]
  00add:    	lea    rdi,[rsp-0x18]
  00ae2:    	mov    QWORD PTR [rdi],rax
  00ae5:    	mov    QWORD PTR [rbx],rdi
  00ae8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00af1:    	mov    QWORD PTR [rsp-0x38],rcx
  00af6:    	mov    rax,QWORD PTR [rbp-0x30]
  00afa:    	mov    QWORD PTR [rsp-0x38],rax
  00aff: 00 	mov    rdi,0x0
  00b06: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b0f: 00 	movabs rax,0x0
  00b19:    	mov    QWORD PTR [rsp-0x28],rax
  00b1e: 00 	movabs r13,0x0
  00b28:    	call   0xfffef4c8
  00b2d:    	lea    rdi,[rbp-0x8]
  00b31:    	mov    QWORD PTR [rbx],rdi
  00b34:    	movq   xmm3,QWORD PTR [rsp]
  00b39:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b3f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00b45:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b4b:    	add    rsp,0x20
  00b4f:    	test   rax,rax
  00b52:    	je     0x382da
  00b58: ff 	mov    QWORD PTR [rbp-0x90],rax
:00057 
:00059 %12 = %13.call x()                   [<INVALID>]
  00b5f: 01 	sub    DWORD PTR [rip+0x117e],0x1        # 0x1ce4
  00b66:    	je     0x38312
  00b6c:    	sub    rsp,0x20
  00b70:    	movq   QWORD PTR [rsp],xmm3
  00b75:    	movq   QWORD PTR [rsp+0x8],xmm5
  00b7b:    	movq   QWORD PTR [rsp+0x10],xmm6
  00b81:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b87: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00b8e: 31 	movabs rax,0x5631840958d0
  00b98:    	call   rax
  00b9a:    	mov    r15d,eax
  00b9d: 00 	cmp    r15d,DWORD PTR [rip+0x1148]        # 0x1cec
  00ba4:    	jne    0x38334
  00baa:    	mov    eax,DWORD PTR [rip+0xffffffffffff1431]        # 0xffff1fe1
  00bb0:    	cmp    DWORD PTR [rip+0x1132],eax        # 0x1ce8
  00bb6:    	jne    0x38334
  00bbc:    	mov    rax,QWORD PTR [rbx]
  00bbf:    	lea    rdi,[rsp-0x18]
  00bc4:    	mov    QWORD PTR [rdi],rax
  00bc7:    	mov    QWORD PTR [rbx],rdi
  00bca: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00bd3:    	mov    QWORD PTR [rsp-0x38],rcx
  00bd8: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00bdf:    	mov    QWORD PTR [rsp-0x38],rax
  00be4: 00 	mov    rdi,0x0
  00beb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00bf4: 00 	movabs rax,0x0
  00bfe:    	mov    QWORD PTR [rsp-0x28],rax
  00c03: 00 	movabs r13,0x0
  00c0d:    	call   0xfffef4c8
  00c12:    	lea    rdi,[rbp-0x8]
  00c16:    	mov    QWORD PTR [rbx],rdi
  00c19:    	movq   xmm3,QWORD PTR [rsp]
  00c1e:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00c24:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00c2a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c30:    	add    rsp,0x20
  00c34:    	test   rax,rax
  00c37:    	je     0x383a3
  00c3d: ff 	mov    QWORD PTR [rbp-0x88],rax
:00060 
:00062 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00c44: 01 	sub    DWORD PTR [rip+0x10a5],0x1        # 0x1cf0
  00c4b:    	je     0x383db
  00c51: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00c58:    	mov    rsi,QWORD PTR [rbp-0x60]
  00c5c:    	sub    rsp,0x20
  00c60:    	movq   QWORD PTR [rsp],xmm3
  00c65:    	movq   QWORD PTR [rsp+0x8],xmm5
  00c6b:    	movq   QWORD PTR [rsp+0x10],xmm6
  00c71:    	movq   QWORD PTR [rsp+0x18],xmm7
  00c77:    	mov    rdx,rdi
  00c7a:    	mov    rcx,rsi
  00c7d:    	mov    rdi,rbx
  00c80:    	mov    rsi,r12
  00c83: 31 	movabs rax,0x563184089e00
  00c8d:    	call   rax
  00c8f:    	movq   xmm3,QWORD PTR [rsp]
  00c94:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00c9a:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00ca0:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ca6:    	add    rsp,0x20
  00caa: 31 	movabs r13,0x563184c857f0
  00cb4:    	test   rax,rax
  00cb7:    	je     0xfffef503
  00cbd: ff 	mov    QWORD PTR [rbp-0x88],rax
:00063 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00cc4: 01 	sub    DWORD PTR [rip+0x1029],0x1        # 0x1cf4
  00ccb:    	je     0x38426
  00cd1:    	mov    rdi,QWORD PTR [rbp-0x80]
  00cd5: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00cdc:    	sub    rsp,0x20
  00ce0:    	movq   QWORD PTR [rsp],xmm3
  00ce5:    	movq   QWORD PTR [rsp+0x8],xmm5
  00ceb:    	movq   QWORD PTR [rsp+0x10],xmm6
  00cf1:    	movq   QWORD PTR [rsp+0x18],xmm7
  00cf7:    	mov    rdx,rdi
  00cfa:    	mov    rcx,rsi
  00cfd:    	mov    rdi,rbx
  00d00:    	mov    rsi,r12
  00d03: 31 	movabs rax,0x563184087f80
  00d0d:    	call   rax
  00d0f:    	movq   xmm3,QWORD PTR [rsp]
  00d14:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00d1a:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00d20:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00d26:    	add    rsp,0x20
  00d2a: 31 	movabs r13,0x563184c85800
  00d34:    	test   rax,rax
  00d37:    	je     0xfffef503
  00d3d:    	mov    QWORD PTR [rbp-0x80],rax
:00064 %13 = %1.call org()                  [<INVALID>]
  00d41: 01 	sub    DWORD PTR [rip+0xfb0],0x1        # 0x1cf8
  00d48:    	je     0x38471
  00d4e:    	sub    rsp,0x20
  00d52:    	movq   QWORD PTR [rsp],xmm3
  00d57:    	movq   QWORD PTR [rsp+0x8],xmm5
  00d5d:    	movq   QWORD PTR [rsp+0x10],xmm6
  00d63:    	movq   QWORD PTR [rsp+0x18],xmm7
  00d69:    	mov    rdi,QWORD PTR [rbp-0x30]
  00d6d: 31 	movabs rax,0x5631840958d0
  00d77:    	call   rax
  00d79:    	mov    r15d,eax
  00d7c: 00 	cmp    r15d,DWORD PTR [rip+0xf7d]        # 0x1d00
  00d83:    	jne    0x38493
  00d89:    	mov    eax,DWORD PTR [rip+0xffffffffffff1252]        # 0xffff1fe1
  00d8f:    	cmp    DWORD PTR [rip+0xf67],eax        # 0x1cfc
  00d95:    	jne    0x38493
  00d9b:    	mov    rax,QWORD PTR [rbx]
  00d9e:    	lea    rdi,[rsp-0x18]
  00da3:    	mov    QWORD PTR [rdi],rax
  00da6:    	mov    QWORD PTR [rbx],rdi
  00da9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00db2:    	mov    QWORD PTR [rsp-0x38],rcx
  00db7:    	mov    rax,QWORD PTR [rbp-0x30]
  00dbb:    	mov    QWORD PTR [rsp-0x38],rax
  00dc0: 00 	mov    rdi,0x0
  00dc7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00dd0: 00 	movabs rax,0x0
  00dda:    	mov    QWORD PTR [rsp-0x28],rax
  00ddf: 00 	movabs r13,0x0
  00de9:    	call   0xfffef4c8
  00dee:    	lea    rdi,[rbp-0x8]
  00df2:    	mov    QWORD PTR [rbx],rdi
  00df5:    	movq   xmm3,QWORD PTR [rsp]
  00dfa:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00e00:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00e06:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00e0c:    	add    rsp,0x20
  00e10:    	test   rax,rax
  00e13:    	je     0x384ff
  00e19: ff 	mov    QWORD PTR [rbp-0x90],rax
:00065 
:00067 %12 = %13.call y()                   [<INVALID>]
  00e20: 01 	sub    DWORD PTR [rip+0xedd],0x1        # 0x1d04
  00e27:    	je     0x38537
  00e2d:    	sub    rsp,0x20
  00e31:    	movq   QWORD PTR [rsp],xmm3
  00e36:    	movq   QWORD PTR [rsp+0x8],xmm5
  00e3c:    	movq   QWORD PTR [rsp+0x10],xmm6
  00e42:    	movq   QWORD PTR [rsp+0x18],xmm7
  00e48: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00e4f: 31 	movabs rax,0x5631840958d0
  00e59:    	call   rax
  00e5b:    	mov    r15d,eax
  00e5e: 00 	cmp    r15d,DWORD PTR [rip+0xea7]        # 0x1d0c
  00e65:    	jne    0x38559
  00e6b:    	mov    eax,DWORD PTR [rip+0xffffffffffff1170]        # 0xffff1fe1
  00e71:    	cmp    DWORD PTR [rip+0xe91],eax        # 0x1d08
  00e77:    	jne    0x38559
  00e7d:    	mov    rax,QWORD PTR [rbx]
  00e80:    	lea    rdi,[rsp-0x18]
  00e85:    	mov    QWORD PTR [rdi],rax
  00e88:    	mov    QWORD PTR [rbx],rdi
  00e8b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00e94:    	mov    QWORD PTR [rsp-0x38],rcx
  00e99: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00ea0:    	mov    QWORD PTR [rsp-0x38],rax
  00ea5: 00 	mov    rdi,0x0
  00eac: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00eb5: 00 	movabs rax,0x0
  00ebf:    	mov    QWORD PTR [rsp-0x28],rax
  00ec4: 00 	movabs r13,0x0
  00ece:    	call   0xfffef4c8
  00ed3:    	lea    rdi,[rbp-0x8]
  00ed7:    	mov    QWORD PTR [rbx],rdi
  00eda:    	movq   xmm3,QWORD PTR [rsp]
  00edf:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00ee5:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00eeb:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ef1:    	add    rsp,0x20
  00ef5:    	test   rax,rax
  00ef8:    	je     0x385c8
  00efe: ff 	mov    QWORD PTR [rbp-0x88],rax
:00068 
:00070 %14 = %1.call dir()                  [<INVALID>]
  00f05: 01 	sub    DWORD PTR [rip+0xe04],0x1        # 0x1d10
  00f0c:    	je     0x38600
  00f12:    	sub    rsp,0x20
  00f16:    	movq   QWORD PTR [rsp],xmm3
  00f1b:    	movq   QWORD PTR [rsp+0x8],xmm5
  00f21:    	movq   QWORD PTR [rsp+0x10],xmm6
  00f27:    	movq   QWORD PTR [rsp+0x18],xmm7
  00f2d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f31: 31 	movabs rax,0x5631840958d0
  00f3b:    	call   rax
  00f3d:    	mov    r15d,eax
  00f40: 00 	cmp    r15d,DWORD PTR [rip+0xdd1]        # 0x1d18
  00f47:    	jne    0x38622
  00f4d:    	mov    eax,DWORD PTR [rip+0xffffffffffff108e]        # 0xffff1fe1
  00f53:    	cmp    DWORD PTR [rip+0xdbb],eax        # 0x1d14
  00f59:    	jne    0x38622
  00f5f:    	mov    rax,QWORD PTR [rbx]
  00f62:    	lea    rdi,[rsp-0x18]
  00f67:    	mov    QWORD PTR [rdi],rax
  00f6a:    	mov    QWORD PTR [rbx],rdi
  00f6d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f76:    	mov    QWORD PTR [rsp-0x38],rcx
  00f7b:    	mov    rax,QWORD PTR [rbp-0x30]
  00f7f:    	mov    QWORD PTR [rsp-0x38],rax
  00f84: 00 	mov    rdi,0x0
  00f8b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f94: 00 	movabs rax,0x0
  00f9e:    	mov    QWORD PTR [rsp-0x28],rax
  00fa3: 00 	movabs r13,0x0
  00fad:    	call   0xfffef4c8
  00fb2:    	lea    rdi,[rbp-0x8]
  00fb6:    	mov    QWORD PTR [rbx],rdi
  00fb9:    	movq   xmm3,QWORD PTR [rsp]
  00fbe:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00fc4:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00fca:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00fd0:    	add    rsp,0x20
  00fd4:    	test   rax,rax
  00fd7:    	je     0x3868e
  00fdd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00071 
:00073 %13 = %14.call y()                   [<INVALID>]
  00fe4: 01 	sub    DWORD PTR [rip+0xd31],0x1        # 0x1d1c
  00feb:    	je     0x386c6
  00ff1:    	sub    rsp,0x20
  00ff5:    	movq   QWORD PTR [rsp],xmm3
  00ffa:    	movq   QWORD PTR [rsp+0x8],xmm5
  01000:    	movq   QWORD PTR [rsp+0x10],xmm6
  01006:    	movq   QWORD PTR [rsp+0x18],xmm7
  0100c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01013: 31 	movabs rax,0x5631840958d0
  0101d:    	call   rax
  0101f:    	mov    r15d,eax
  01022: 00 	cmp    r15d,DWORD PTR [rip+0xcfb]        # 0x1d24
  01029:    	jne    0x386e8
  0102f:    	mov    eax,DWORD PTR [rip+0xffffffffffff0fac]        # 0xffff1fe1
  01035:    	cmp    DWORD PTR [rip+0xce5],eax        # 0x1d20
  0103b:    	jne    0x386e8
  01041:    	mov    rax,QWORD PTR [rbx]
  01044:    	lea    rdi,[rsp-0x18]
  01049:    	mov    QWORD PTR [rdi],rax
  0104c:    	mov    QWORD PTR [rbx],rdi
  0104f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01058:    	mov    QWORD PTR [rsp-0x38],rcx
  0105d: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01064:    	mov    QWORD PTR [rsp-0x38],rax
  01069: 00 	mov    rdi,0x0
  01070: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01079: 00 	movabs rax,0x0
  01083:    	mov    QWORD PTR [rsp-0x28],rax
  01088: 00 	movabs r13,0x0
  01092:    	call   0xfffef4c8
  01097:    	lea    rdi,[rbp-0x8]
  0109b:    	mov    QWORD PTR [rbx],rdi
  0109e:    	movq   xmm3,QWORD PTR [rsp]
  010a3:    	movq   xmm5,QWORD PTR [rsp+0x8]
  010a9:    	movq   xmm6,QWORD PTR [rsp+0x10]
  010af:    	movq   xmm7,QWORD PTR [rsp+0x18]
  010b5:    	add    rsp,0x20
  010b9:    	test   rax,rax
  010bc:    	je     0x38757
  010c2: ff 	mov    QWORD PTR [rbp-0x90],rax
:00074 
:00076 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  010c9: 01 	sub    DWORD PTR [rip+0xc58],0x1        # 0x1d28
  010d0:    	je     0x3878f
  010d6: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  010dd:    	mov    rsi,QWORD PTR [rbp-0x60]
  010e1:    	sub    rsp,0x20
  010e5:    	movq   QWORD PTR [rsp],xmm3
  010ea:    	movq   QWORD PTR [rsp+0x8],xmm5
  010f0:    	movq   QWORD PTR [rsp+0x10],xmm6
  010f6:    	movq   QWORD PTR [rsp+0x18],xmm7
  010fc:    	mov    rdx,rdi
  010ff:    	mov    rcx,rsi
  01102:    	mov    rdi,rbx
  01105:    	mov    rsi,r12
  01108: 31 	movabs rax,0x563184089e00
  01112:    	call   rax
  01114:    	movq   xmm3,QWORD PTR [rsp]
  01119:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0111f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01125:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0112b:    	add    rsp,0x20
  0112f: 31 	movabs r13,0x563184c858d0
  01139:    	test   rax,rax
  0113c:    	je     0xfffef503
  01142: ff 	mov    QWORD PTR [rbp-0x90],rax
:00077 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  01149: 01 	sub    DWORD PTR [rip+0xbdc],0x1        # 0x1d2c
  01150:    	je     0x387da
  01156: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0115d: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  01164:    	sub    rsp,0x20
  01168:    	movq   QWORD PTR [rsp],xmm3
  0116d:    	movq   QWORD PTR [rsp+0x8],xmm5
  01173:    	movq   QWORD PTR [rsp+0x10],xmm6
  01179:    	movq   QWORD PTR [rsp+0x18],xmm7
  0117f:    	mov    rdx,rdi
  01182:    	mov    rcx,rsi
  01185:    	mov    rdi,rbx
  01188:    	mov    rsi,r12
  0118b: 31 	movabs rax,0x563184087f80
  01195:    	call   rax
  01197:    	movq   xmm3,QWORD PTR [rsp]
  0119c:    	movq   xmm5,QWORD PTR [rsp+0x8]
  011a2:    	movq   xmm6,QWORD PTR [rsp+0x10]
  011a8:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011ae:    	add    rsp,0x20
  011b2: 31 	movabs r13,0x563184c858e0
  011bc:    	test   rax,rax
  011bf:    	je     0xfffef503
  011c5: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 %14 = %1.call org()                  [<INVALID>]
  011cc: 01 	sub    DWORD PTR [rip+0xb5d],0x1        # 0x1d30
  011d3:    	je     0x38825
  011d9:    	sub    rsp,0x20
  011dd:    	movq   QWORD PTR [rsp],xmm3
  011e2:    	movq   QWORD PTR [rsp+0x8],xmm5
  011e8:    	movq   QWORD PTR [rsp+0x10],xmm6
  011ee:    	movq   QWORD PTR [rsp+0x18],xmm7
  011f4:    	mov    rdi,QWORD PTR [rbp-0x30]
  011f8: 31 	movabs rax,0x5631840958d0
  01202:    	call   rax
  01204:    	mov    r15d,eax
  01207: 00 	cmp    r15d,DWORD PTR [rip+0xb2a]        # 0x1d38
  0120e:    	jne    0x38847
  01214:    	mov    eax,DWORD PTR [rip+0xffffffffffff0dc7]        # 0xffff1fe1
  0121a:    	cmp    DWORD PTR [rip+0xb14],eax        # 0x1d34
  01220:    	jne    0x38847
  01226:    	mov    rax,QWORD PTR [rbx]
  01229:    	lea    rdi,[rsp-0x18]
  0122e:    	mov    QWORD PTR [rdi],rax
  01231:    	mov    QWORD PTR [rbx],rdi
  01234: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0123d:    	mov    QWORD PTR [rsp-0x38],rcx
  01242:    	mov    rax,QWORD PTR [rbp-0x30]
  01246:    	mov    QWORD PTR [rsp-0x38],rax
  0124b: 00 	mov    rdi,0x0
  01252: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0125b: 00 	movabs rax,0x0
  01265:    	mov    QWORD PTR [rsp-0x28],rax
  0126a: 00 	movabs r13,0x0
  01274:    	call   0xfffef4c8
  01279:    	lea    rdi,[rbp-0x8]
  0127d:    	mov    QWORD PTR [rbx],rdi
  01280:    	movq   xmm3,QWORD PTR [rsp]
  01285:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0128b:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01291:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01297:    	add    rsp,0x20
  0129b:    	test   rax,rax
  0129e:    	je     0x388b3
  012a4: ff 	mov    QWORD PTR [rbp-0x98],rax
:00079 
:00081 %13 = %14.call z()                   [<INVALID>]
  012ab: 01 	sub    DWORD PTR [rip+0xa8a],0x1        # 0x1d3c
  012b2:    	je     0x388eb
  012b8:    	sub    rsp,0x20
  012bc:    	movq   QWORD PTR [rsp],xmm3
  012c1:    	movq   QWORD PTR [rsp+0x8],xmm5
  012c7:    	movq   QWORD PTR [rsp+0x10],xmm6
  012cd:    	movq   QWORD PTR [rsp+0x18],xmm7
  012d3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  012da: 31 	movabs rax,0x5631840958d0
  012e4:    	call   rax
  012e6:    	mov    r15d,eax
  012e9: 00 	cmp    r15d,DWORD PTR [rip+0xa54]        # 0x1d44
  012f0:    	jne    0x3890d
  012f6:    	mov    eax,DWORD PTR [rip+0xffffffffffff0ce5]        # 0xffff1fe1
  012fc:    	cmp    DWORD PTR [rip+0xa3e],eax        # 0x1d40
  01302:    	jne    0x3890d
  01308:    	mov    rax,QWORD PTR [rbx]
  0130b:    	lea    rdi,[rsp-0x18]
  01310:    	mov    QWORD PTR [rdi],rax
  01313:    	mov    QWORD PTR [rbx],rdi
  01316: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0131f:    	mov    QWORD PTR [rsp-0x38],rcx
  01324: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0132b:    	mov    QWORD PTR [rsp-0x38],rax
  01330: 00 	mov    rdi,0x0
  01337: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01340: 00 	movabs rax,0x0
  0134a:    	mov    QWORD PTR [rsp-0x28],rax
  0134f: 00 	movabs r13,0x0
  01359:    	call   0xfffef4c8
  0135e:    	lea    rdi,[rbp-0x8]
  01362:    	mov    QWORD PTR [rbx],rdi
  01365:    	movq   xmm3,QWORD PTR [rsp]
  0136a:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01370:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01376:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0137c:    	add    rsp,0x20
  01380:    	test   rax,rax
  01383:    	je     0x3897c
  01389: ff 	mov    QWORD PTR [rbp-0x90],rax
:00082 
:00084 %15 = %1.call dir()                  [<INVALID>]
  01390: 01 	sub    DWORD PTR [rip+0x9b1],0x1        # 0x1d48
  01397:    	je     0x389b4
  0139d:    	sub    rsp,0x20
  013a1:    	movq   QWORD PTR [rsp],xmm3
  013a6:    	movq   QWORD PTR [rsp+0x8],xmm5
  013ac:    	movq   QWORD PTR [rsp+0x10],xmm6
  013b2:    	movq   QWORD PTR [rsp+0x18],xmm7
  013b8:    	mov    rdi,QWORD PTR [rbp-0x30]
  013bc: 31 	movabs rax,0x5631840958d0
  013c6:    	call   rax
  013c8:    	mov    r15d,eax
  013cb: 00 	cmp    r15d,DWORD PTR [rip+0x97e]        # 0x1d50
  013d2:    	jne    0x389d6
  013d8:    	mov    eax,DWORD PTR [rip+0xffffffffffff0c03]        # 0xffff1fe1
  013de:    	cmp    DWORD PTR [rip+0x968],eax        # 0x1d4c
  013e4:    	jne    0x389d6
  013ea:    	mov    rax,QWORD PTR [rbx]
  013ed:    	lea    rdi,[rsp-0x18]
  013f2:    	mov    QWORD PTR [rdi],rax
  013f5:    	mov    QWORD PTR [rbx],rdi
  013f8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01401:    	mov    QWORD PTR [rsp-0x38],rcx
  01406:    	mov    rax,QWORD PTR [rbp-0x30]
  0140a:    	mov    QWORD PTR [rsp-0x38],rax
  0140f: 00 	mov    rdi,0x0
  01416: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0141f: 00 	movabs rax,0x0
  01429:    	mov    QWORD PTR [rsp-0x28],rax
  0142e: 00 	movabs r13,0x0
  01438:    	call   0xfffef4c8
  0143d:    	lea    rdi,[rbp-0x8]
  01441:    	mov    QWORD PTR [rbx],rdi
  01444:    	movq   xmm3,QWORD PTR [rsp]
  01449:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0144f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01455:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0145b:    	add    rsp,0x20
  0145f:    	test   rax,rax
  01462:    	je     0x38a42
  01468: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00085 
:00087 %14 = %15.call z()                   [<INVALID>]
  0146f: 01 	sub    DWORD PTR [rip+0x8de],0x1        # 0x1d54
  01476:    	je     0x38a7a
  0147c:    	sub    rsp,0x20
  01480:    	movq   QWORD PTR [rsp],xmm3
  01485:    	movq   QWORD PTR [rsp+0x8],xmm5
  0148b:    	movq   QWORD PTR [rsp+0x10],xmm6
  01491:    	movq   QWORD PTR [rsp+0x18],xmm7
  01497: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0149e: 31 	movabs rax,0x5631840958d0
  014a8:    	call   rax
  014aa:    	mov    r15d,eax
  014ad: 00 	cmp    r15d,DWORD PTR [rip+0x8a8]        # 0x1d5c
  014b4:    	jne    0x38a9c
  014ba:    	mov    eax,DWORD PTR [rip+0xffffffffffff0b21]        # 0xffff1fe1
  014c0:    	cmp    DWORD PTR [rip+0x892],eax        # 0x1d58
  014c6:    	jne    0x38a9c
  014cc:    	mov    rax,QWORD PTR [rbx]
  014cf:    	lea    rdi,[rsp-0x18]
  014d4:    	mov    QWORD PTR [rdi],rax
  014d7:    	mov    QWORD PTR [rbx],rdi
  014da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014e3:    	mov    QWORD PTR [rsp-0x38],rcx
  014e8: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  014ef:    	mov    QWORD PTR [rsp-0x38],rax
  014f4: 00 	mov    rdi,0x0
  014fb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01504: 00 	movabs rax,0x0
  0150e:    	mov    QWORD PTR [rsp-0x28],rax
  01513: 00 	movabs r13,0x0
  0151d:    	call   0xfffef4c8
  01522:    	lea    rdi,[rbp-0x8]
  01526:    	mov    QWORD PTR [rbx],rdi
  01529:    	movq   xmm3,QWORD PTR [rsp]
  0152e:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01534:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0153a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01540:    	add    rsp,0x20
  01544:    	test   rax,rax
  01547:    	je     0x38b0b
  0154d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 
:00090 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01554: 01 	sub    DWORD PTR [rip+0x805],0x1        # 0x1d60
  0155b:    	je     0x38b43
  01561: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01568:    	mov    rsi,QWORD PTR [rbp-0x60]
  0156c:    	sub    rsp,0x20
  01570:    	movq   QWORD PTR [rsp],xmm3
  01575:    	movq   QWORD PTR [rsp+0x8],xmm5
  0157b:    	movq   QWORD PTR [rsp+0x10],xmm6
  01581:    	movq   QWORD PTR [rsp+0x18],xmm7
  01587:    	mov    rdx,rdi
  0158a:    	mov    rcx,rsi
  0158d:    	mov    rdi,rbx
  01590:    	mov    rsi,r12
  01593: 31 	movabs rax,0x563184089e00
  0159d:    	call   rax
  0159f:    	movq   xmm3,QWORD PTR [rsp]
  015a4:    	movq   xmm5,QWORD PTR [rsp+0x8]
  015aa:    	movq   xmm6,QWORD PTR [rsp+0x10]
  015b0:    	movq   xmm7,QWORD PTR [rsp+0x18]
  015b6:    	add    rsp,0x20
  015ba: 31 	movabs r13,0x563184c859b0
  015c4:    	test   rax,rax
  015c7:    	je     0xfffef503
  015cd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  015d4: 01 	sub    DWORD PTR [rip+0x789],0x1        # 0x1d64
  015db:    	je     0x38b8e
  015e1: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  015e8: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  015ef:    	sub    rsp,0x20
  015f3:    	movq   QWORD PTR [rsp],xmm3
  015f8:    	movq   QWORD PTR [rsp+0x8],xmm5
  015fe:    	movq   QWORD PTR [rsp+0x10],xmm6
  01604:    	movq   QWORD PTR [rsp+0x18],xmm7
  0160a:    	mov    rdx,rdi
  0160d:    	mov    rcx,rsi
  01610:    	mov    rdi,rbx
  01613:    	mov    rsi,r12
  01616: 31 	movabs rax,0x563184087f80
  01620:    	call   rax
  01622:    	movq   xmm3,QWORD PTR [rsp]
  01627:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0162d:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01633:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01639:    	add    rsp,0x20
  0163d: 31 	movabs r13,0x563184c859c0
  01647:    	test   rax,rax
  0164a:    	je     0xfffef503
  01650: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 %9 = %10.call new(%11; 3)            [<INVALID>]
  01657: 01 	sub    DWORD PTR [rip+0x70a],0x1        # 0x1d68
  0165e:    	je     0x38bd9
  01664:    	sub    rsp,0x20
  01668:    	movq   QWORD PTR [rsp],xmm3
  0166d:    	movq   QWORD PTR [rsp+0x8],xmm5
  01673:    	movq   QWORD PTR [rsp+0x10],xmm6
  01679:    	movq   QWORD PTR [rsp+0x18],xmm7
  0167f:    	mov    rdi,QWORD PTR [rbp-0x78]
  01683: 31 	movabs rax,0x5631840958d0
  0168d:    	call   rax
  0168f:    	mov    r15d,eax
  01692: 00 	cmp    r15d,DWORD PTR [rip+0x6d7]        # 0x1d70
  01699:    	jne    0x38bfb
  0169f:    	mov    eax,DWORD PTR [rip+0xffffffffffff093c]        # 0xffff1fe1
  016a5:    	cmp    DWORD PTR [rip+0x6c1],eax        # 0x1d6c
  016ab:    	jne    0x38bfb
  016b1:    	mov    rax,QWORD PTR [rbx]
  016b4:    	lea    rdi,[rsp-0x18]
  016b9:    	mov    QWORD PTR [rdi],rax
  016bc:    	mov    QWORD PTR [rbx],rdi
  016bf: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016c8:    	mov    QWORD PTR [rsp-0x38],rcx
  016cd:    	mov    rax,QWORD PTR [rbp-0x78]
  016d1:    	mov    QWORD PTR [rsp-0x38],rax
  016d6: 00 	mov    rdi,0x3
  016dd:    	mov    rax,QWORD PTR [rbp-0x80]
  016e1:    	mov    QWORD PTR [rsp-0x40],rax
  016e6: ff 	mov    rax,QWORD PTR [rbp-0x88]
  016ed:    	mov    QWORD PTR [rsp-0x48],rax
  016f2: ff 	mov    rax,QWORD PTR [rbp-0x90]
  016f9:    	mov    QWORD PTR [rsp-0x50],rax
  016fe: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01707: 00 	movabs rax,0x0
  01711:    	mov    QWORD PTR [rsp-0x28],rax
  01716: 00 	movabs r13,0x0
  01720:    	call   0xfffef4c8
  01725:    	lea    rdi,[rbp-0x8]
  01729:    	mov    QWORD PTR [rbx],rdi
  0172c:    	movq   xmm3,QWORD PTR [rsp]
  01731:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01737:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0173d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01743:    	add    rsp,0x20
  01747:    	test   rax,rax
  0174a:    	je     0x38c67
  01750:    	mov    QWORD PTR [rbp-0x70],rax
:00093 
:00095 _ = %2.call pl=(%9; 1)               [<INVALID>]
  01754: 01 	sub    DWORD PTR [rip+0x619],0x1        # 0x1d74
  0175b:    	je     0x38c9f
  01761:    	sub    rsp,0x20
  01765:    	movq   QWORD PTR [rsp],xmm3
  0176a:    	movq   QWORD PTR [rsp+0x8],xmm5
  01770:    	movq   QWORD PTR [rsp+0x10],xmm6
  01776:    	movq   QWORD PTR [rsp+0x18],xmm7
  0177c:    	mov    rdi,QWORD PTR [rbp-0x38]
  01780: 31 	movabs rax,0x5631840958d0
  0178a:    	call   rax
  0178c:    	mov    r15d,eax
  0178f: 00 	cmp    r15d,DWORD PTR [rip+0x5e6]        # 0x1d7c
  01796:    	jne    0x38cc1
  0179c:    	mov    eax,DWORD PTR [rip+0xffffffffffff083f]        # 0xffff1fe1
  017a2:    	cmp    DWORD PTR [rip+0x5d0],eax        # 0x1d78
  017a8:    	jne    0x38cc1
  017ae:    	mov    rax,QWORD PTR [rbx]
  017b1:    	lea    rdi,[rsp-0x18]
  017b6:    	mov    QWORD PTR [rdi],rax
  017b9:    	mov    QWORD PTR [rbx],rdi
  017bc: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017c5:    	mov    QWORD PTR [rsp-0x38],rcx
  017ca:    	mov    rax,QWORD PTR [rbp-0x38]
  017ce:    	mov    QWORD PTR [rsp-0x38],rax
  017d3: 00 	mov    rdi,0x1
  017da:    	mov    rax,QWORD PTR [rbp-0x70]
  017de:    	mov    QWORD PTR [rsp-0x40],rax
  017e3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017ec: 00 	movabs rax,0x0
  017f6:    	mov    QWORD PTR [rsp-0x28],rax
  017fb: 00 	movabs r13,0x0
  01805:    	call   0xfffef4c8
  0180a:    	lea    rdi,[rbp-0x8]
  0180e:    	mov    QWORD PTR [rbx],rdi
  01811:    	movq   xmm3,QWORD PTR [rsp]
  01816:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0181c:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01822:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01828:    	add    rsp,0x20
  0182c:    	test   rax,rax
  0182f:    	je     0x38d2d
:00096 
:00098 %9 = %2.call pl()                    [<INVALID>]
  01835: 01 	sub    DWORD PTR [rip+0x544],0x1        # 0x1d80
  0183c:    	je     0x38d65
  01842:    	sub    rsp,0x20
  01846:    	movq   QWORD PTR [rsp],xmm3
  0184b:    	movq   QWORD PTR [rsp+0x8],xmm5
  01851:    	movq   QWORD PTR [rsp+0x10],xmm6
  01857:    	movq   QWORD PTR [rsp+0x18],xmm7
  0185d:    	mov    rdi,QWORD PTR [rbp-0x38]
  01861: 31 	movabs rax,0x5631840958d0
  0186b:    	call   rax
  0186d:    	mov    r15d,eax
  01870: 00 	cmp    r15d,DWORD PTR [rip+0x511]        # 0x1d88
  01877:    	jne    0x38d87
  0187d:    	mov    eax,DWORD PTR [rip+0xffffffffffff075e]        # 0xffff1fe1
  01883:    	cmp    DWORD PTR [rip+0x4fb],eax        # 0x1d84
  01889:    	jne    0x38d87
  0188f:    	mov    rax,QWORD PTR [rbx]
  01892:    	lea    rdi,[rsp-0x18]
  01897:    	mov    QWORD PTR [rdi],rax
  0189a:    	mov    QWORD PTR [rbx],rdi
  0189d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018a6:    	mov    QWORD PTR [rsp-0x38],rcx
  018ab:    	mov    rax,QWORD PTR [rbp-0x38]
  018af:    	mov    QWORD PTR [rsp-0x38],rax
  018b4: 00 	mov    rdi,0x0
  018bb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018c4: 00 	movabs rax,0x0
  018ce:    	mov    QWORD PTR [rsp-0x28],rax
  018d3: 00 	movabs r13,0x0
  018dd:    	call   0xfffef4c8
  018e2:    	lea    rdi,[rbp-0x8]
  018e6:    	mov    QWORD PTR [rbx],rdi
  018e9:    	movq   xmm3,QWORD PTR [rsp]
  018ee:    	movq   xmm5,QWORD PTR [rsp+0x8]
  018f4:    	movq   xmm6,QWORD PTR [rsp+0x10]
  018fa:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01900:    	add    rsp,0x20
  01904:    	test   rax,rax
  01907:    	je     0x38df3
  0190d:    	mov    QWORD PTR [rbp-0x70],rax
:00099 
:00101 %10 = @center: <INVALID>[IvarId(0)]
  01911:    	mov    rdi,QWORD PTR [rbp-0x28]
  01915:    	sub    rsp,0x20
  01919:    	movq   QWORD PTR [rsp],xmm3
  0191e:    	movq   QWORD PTR [rsp+0x8],xmm5
  01924:    	movq   QWORD PTR [rsp+0x10],xmm6
  0192a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01930: 00 	mov    rsi,0x85
  01937:    	mov    rdx,r12
  0193a: 31 	movabs rax,0x5631840b8770
  01944:    	call   rax
  01946:    	movq   xmm3,QWORD PTR [rsp]
  0194b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01951:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01957:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0195d:    	add    rsp,0x20
  01961:    	mov    QWORD PTR [rbp-0x78],rax
:00102 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  01965: 01 	sub    DWORD PTR [rip+0x420],0x1        # 0x1d8c
  0196c:    	je     0x38e2b
  01972:    	sub    rsp,0x20
  01976:    	movq   QWORD PTR [rsp],xmm3
  0197b:    	movq   QWORD PTR [rsp+0x8],xmm5
  01981:    	movq   QWORD PTR [rsp+0x10],xmm6
  01987:    	movq   QWORD PTR [rsp+0x18],xmm7
  0198d:    	mov    rdi,QWORD PTR [rbp-0x70]
  01991: 31 	movabs rax,0x5631840958d0
  0199b:    	call   rax
  0199d:    	mov    r15d,eax
  019a0: 00 	cmp    r15d,DWORD PTR [rip+0x3ed]        # 0x1d94
  019a7:    	jne    0x38e4d
  019ad:    	mov    eax,DWORD PTR [rip+0xffffffffffff062e]        # 0xffff1fe1
  019b3:    	cmp    DWORD PTR [rip+0x3d7],eax        # 0x1d90
  019b9:    	jne    0x38e4d
  019bf:    	mov    rax,QWORD PTR [rbx]
  019c2:    	lea    rdi,[rsp-0x18]
  019c7:    	mov    QWORD PTR [rdi],rax
  019ca:    	mov    QWORD PTR [rbx],rdi
  019cd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019d6:    	mov    QWORD PTR [rsp-0x38],rcx
  019db:    	mov    rax,QWORD PTR [rbp-0x70]
  019df:    	mov    QWORD PTR [rsp-0x38],rax
  019e4: 00 	mov    rdi,0x1
  019eb:    	mov    rax,QWORD PTR [rbp-0x78]
  019ef:    	mov    QWORD PTR [rsp-0x40],rax
  019f4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019fd: 00 	movabs rax,0x0
  01a07:    	mov    QWORD PTR [rsp-0x28],rax
  01a0c: 00 	movabs r13,0x0
  01a16:    	call   0xfffef4c8
  01a1b:    	lea    rdi,[rbp-0x8]
  01a1f:    	mov    QWORD PTR [rbx],rdi
  01a22:    	movq   xmm3,QWORD PTR [rsp]
  01a27:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01a2d:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01a33:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a39:    	add    rsp,0x20
  01a3d:    	test   rax,rax
  01a40:    	je     0x38eb9
  01a46:    	mov    QWORD PTR [rbp-0x68],rax
:00103 
:00105 %9 = %8.call vnormalize()            [<INVALID>]
  01a4a: 01 	sub    DWORD PTR [rip+0x347],0x1        # 0x1d98
  01a51:    	je     0x38ef1
  01a57:    	sub    rsp,0x20
  01a5b:    	movq   QWORD PTR [rsp],xmm3
  01a60:    	movq   QWORD PTR [rsp+0x8],xmm5
  01a66:    	movq   QWORD PTR [rsp+0x10],xmm6
  01a6c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01a72:    	mov    rdi,QWORD PTR [rbp-0x68]
  01a76: 31 	movabs rax,0x5631840958d0
  01a80:    	call   rax
  01a82:    	mov    r15d,eax
  01a85: 00 	cmp    r15d,DWORD PTR [rip+0x314]        # 0x1da0
  01a8c:    	jne    0x38f13
  01a92:    	mov    eax,DWORD PTR [rip+0xffffffffffff0549]        # 0xffff1fe1
  01a98:    	cmp    DWORD PTR [rip+0x2fe],eax        # 0x1d9c
  01a9e:    	jne    0x38f13
  01aa4:    	mov    rax,QWORD PTR [rbx]
  01aa7:    	lea    rdi,[rsp-0x18]
  01aac:    	mov    QWORD PTR [rdi],rax
  01aaf:    	mov    QWORD PTR [rbx],rdi
  01ab2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01abb:    	mov    QWORD PTR [rsp-0x38],rcx
  01ac0:    	mov    rax,QWORD PTR [rbp-0x68]
  01ac4:    	mov    QWORD PTR [rsp-0x38],rax
  01ac9: 00 	mov    rdi,0x0
  01ad0: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01ad9: 00 	movabs rax,0x0
  01ae3:    	mov    QWORD PTR [rsp-0x28],rax
  01ae8: 00 	movabs r13,0x0
  01af2:    	call   0xfffef4c8
  01af7:    	lea    rdi,[rbp-0x8]
  01afb:    	mov    QWORD PTR [rbx],rdi
  01afe:    	movq   xmm3,QWORD PTR [rsp]
  01b03:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01b09:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01b0f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b15:    	add    rsp,0x20
  01b19:    	test   rax,rax
  01b1c:    	je     0x38f7f
  01b22:    	mov    QWORD PTR [rbp-0x70],rax
:00106 
:00108 _ = %2.call n=(%9; 1)                [<INVALID>]
  01b26: 01 	sub    DWORD PTR [rip+0x277],0x1        # 0x1da4
  01b2d:    	je     0x38fb7
  01b33:    	sub    rsp,0x20
  01b37:    	movq   QWORD PTR [rsp],xmm3
  01b3c:    	movq   QWORD PTR [rsp+0x8],xmm5
  01b42:    	movq   QWORD PTR [rsp+0x10],xmm6
  01b48:    	movq   QWORD PTR [rsp+0x18],xmm7
  01b4e:    	mov    rdi,QWORD PTR [rbp-0x38]
  01b52: 31 	movabs rax,0x5631840958d0
  01b5c:    	call   rax
  01b5e:    	mov    r15d,eax
  01b61: 00 	cmp    r15d,DWORD PTR [rip+0x244]        # 0x1dac
  01b68:    	jne    0x38fd9
  01b6e:    	mov    eax,DWORD PTR [rip+0xffffffffffff046d]        # 0xffff1fe1
  01b74:    	cmp    DWORD PTR [rip+0x22e],eax        # 0x1da8
  01b7a:    	jne    0x38fd9
  01b80:    	mov    rax,QWORD PTR [rbx]
  01b83:    	lea    rdi,[rsp-0x18]
  01b88:    	mov    QWORD PTR [rdi],rax
  01b8b:    	mov    QWORD PTR [rbx],rdi
  01b8e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b97:    	mov    QWORD PTR [rsp-0x38],rcx
  01b9c:    	mov    rax,QWORD PTR [rbp-0x38]
  01ba0:    	mov    QWORD PTR [rsp-0x38],rax
  01ba5: 00 	mov    rdi,0x1
  01bac:    	mov    rax,QWORD PTR [rbp-0x70]
  01bb0:    	mov    QWORD PTR [rsp-0x40],rax
  01bb5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bbe: 00 	movabs rax,0x0
  01bc8:    	mov    QWORD PTR [rsp-0x28],rax
  01bcd: 00 	movabs r13,0x0
  01bd7:    	call   0xfffef4c8
  01bdc:    	lea    rdi,[rbp-0x8]
  01be0:    	mov    QWORD PTR [rbx],rdi
  01be3:    	movq   xmm3,QWORD PTR [rsp]
  01be8:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01bee:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01bf4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01bfa:    	add    rsp,0x20
  01bfe:    	test   rax,rax
  01c01:    	je     0x39045
:00109 
:00111 br =>:00112
  01c07:    	jmp    0x39161
:00112 br =>:00113
  01c0c:    	jmp    0x391d4
:00113 %9 = nil
  01c11: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00114 ret %9
  01c19:    	mov    rax,QWORD PTR [rbp-0x70]
  01c1d:    	leave  
  01c1e:    	ret    
==> start whole compile: <unnamed> FuncId(77) self_class:Scene start:[00000] bytecode:0x563184c6ada0
<== finished compile. elapsed:19.8µs
offset:Pos(76008) code: 194 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    rdi,QWORD PTR [rbp-0x28]
  0001f: test   rdi,0x7
  00026: jne    0x37457
  0002c: cmp    DWORD PTR [rdi+0x4],0x32
  00030: jne    0x37457
:00000 %3 = dynvar(1, %3)
  00036: mov    rax,QWORD PTR [rbp-0x10]
  0003a: mov    rax,QWORD PTR [rax-0x30]
  0003e: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = literal[79]
  00042: mov    rax,0x9f
  00049: mov    QWORD PTR [rbp-0x48],rax
:00002 %2 = %3.call times(&%4)              [Integer]
  0004d: mov    rdi,QWORD PTR [rbp-0x40]
  00051: test   rdi,0x1
  00058: je     0x37466
  0005e: cmp    DWORD PTR [rip+0xffffffffffff01cc],0x26        # 0xffff0231
  00065: jne    0x37466
  0006b: mov    r9,QWORD PTR [rbp-0x48]
  0006f: mov    rdx,rdi
  00072: mov    rax,QWORD PTR [rbx]
  00075: lea    rdi,[rsp-0x18]
  0007a: mov    QWORD PTR [rdi],rax
  0007d: mov    QWORD PTR [rbx],rdi
  00080: mov    QWORD PTR [rsp-0x20],0x0
  00089: mov    QWORD PTR [rsp-0x38],rcx
  0008e: lea    rcx,[rbp-0x50]
  00092: mov    r8,0x0
  00099: call   0x37475
  0009e: lea    rdi,[rbp-0x8]
  000a2: mov    QWORD PTR [rbx],rdi
  000a5: movabs r13,0x563184c6ade0
  000af: test   rax,rax
  000b2: je     0xfffed753
  000b8: mov    QWORD PTR [rbp-0x38],rax
:00003 
:00005 ret %2
  000bc: mov    rax,QWORD PTR [rbp-0x38]
  000c0: leave  
  000c1: ret    
==> start whole compile: vcross FuncId(64) self_class:Vec start:[00000] bytecode:0x563184c82c10
<== finished compile. elapsed:50.3µs
offset:Pos(76202) code: 2412 bytes  data: 82 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x70
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    QWORD PTR [rbp-0x50],rax
  0001f: mov    QWORD PTR [rbp-0x58],rax
  00023: mov    QWORD PTR [rbp-0x60],rax
  00027: mov    QWORD PTR [rbp-0x68],rax
  0002b: mov    rdi,QWORD PTR [rbp-0x28]
  0002f: test   rdi,0x7
  00036: jne    0x373e5
  0003c: cmp    DWORD PTR [rdi+0x4],0x28
  00040: jne    0x373e5
:00000 %3 = const[Vec]                      [Vec]
  00046: mov    rax,QWORD PTR [rip+0xffffffffffff0129]        # 0xffff0176
  0004d: cmp    rax,QWORD PTR [rip+0x932]        # 0x986
  00054: jne    0x373f4
  0005a: mov    rax,QWORD PTR [rip+0x915]        # 0x976
  00061: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = @y: Vec[IvarId(1)]
  00065: mov    rdi,QWORD PTR [rbp-0x28]
  00069: mov    rax,QWORD PTR [rdi+0x18]
  0006d: mov    QWORD PTR [rbp-0x48],rax
:00002 %5 = %1.call z()                     [Vec]
  00071: mov    rdi,QWORD PTR [rbp-0x30]
  00075: test   rdi,0x7
  0007c: jne    0x3743a
  00082: cmp    DWORD PTR [rdi+0x4],0x28
  00086: jne    0x3743a
  0008c: cmp    DWORD PTR [rip+0xffffffffffff00dc],0x26        # 0xffff016f
  00093: jne    0x3743a
  00099: mov    esi,DWORD PTR [rip+0x8f3]        # 0x992
  0009f: cmp    esi,0xffffffff
  000a2: je     0x37449
  000a8: cmp    WORD PTR [rdi+0x2],0x3
  000ad: jne    0xc6
  000b3: cmp    esi,0x6
  000b6: jge    0xc6
  000bc: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c1: jmp    0xd2
  000c6: movabs rax,0x563184053740
  000d0: call   rax
  000d2: mov    QWORD PTR [rbp-0x50],rax
:00003 
:00005 %4 = %4 * %5                         [Float][Float]
  000d6: mov    rdi,QWORD PTR [rbp-0x48]
  000da: test   rdi,0x1
  000e1: jne    0x37472
  000e7: test   rdi,0x2
  000ee: je     0x12a
  000f4: xorps  xmm2,xmm2
  000f7: movabs rax,0x8000000000000002
  00101: cmp    rdi,rax
  00104: je     0x13c
  0010a: mov    rax,rdi
  0010d: sar    rax,0x3f
  00111: add    rax,0x2
  00115: and    rdi,0xfffffffffffffffc
  00119: or     rdi,rax
  0011c: rol    rdi,0x3d
  00120: movq   xmm2,rdi
  00125: jmp    0x13c
  0012a: call   0xfffed6ca
  0012f: test   rax,rax
  00132: je     0x37472
  00138: movq   xmm2,xmm0
  0013c: mov    rdi,QWORD PTR [rbp-0x50]
  00140: test   rdi,0x1
  00147: jne    0x37481
  0014d: test   rdi,0x2
  00154: je     0x190
  0015a: xorps  xmm3,xmm3
  0015d: movabs rax,0x8000000000000002
  00167: cmp    rdi,rax
  0016a: je     0x1a2
  00170: mov    rax,rdi
  00173: sar    rax,0x3f
  00177: add    rax,0x2
  0017b: and    rdi,0xfffffffffffffffc
  0017f: or     rdi,rax
  00182: rol    rdi,0x3d
  00186: movq   xmm3,rdi
  0018b: jmp    0x1a2
  00190: call   0xfffed6ca
  00195: test   rax,rax
  00198: je     0x37481
  0019e: movq   xmm3,xmm0
  001a2: mulsd  xmm2,xmm3
:00006 %5 = @z: Vec[IvarId(2)]
  001a6: mov    rdi,QWORD PTR [rbp-0x28]
  001aa: mov    rax,QWORD PTR [rdi+0x20]
  001ae: mov    QWORD PTR [rbp-0x50],rax
:00007 %6 = %1.call y()                     [Vec]
  001b2: mov    rdi,QWORD PTR [rbp-0x30]
  001b6: test   rdi,0x7
  001bd: jne    0x37490
  001c3: cmp    DWORD PTR [rdi+0x4],0x28
  001c7: jne    0x37490
  001cd: cmp    DWORD PTR [rip+0xfffffffffffeff9b],0x26        # 0xffff016f
  001d4: jne    0x37490
  001da: mov    esi,DWORD PTR [rip+0x7ba]        # 0x99a
  001e0: cmp    esi,0xffffffff
  001e3: je     0x374ac
  001e9: cmp    WORD PTR [rdi+0x2],0x3
  001ee: jne    0x207
  001f4: cmp    esi,0x6
  001f7: jge    0x207
  001fd: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00202: jmp    0x225
  00207: sub    rsp,0x10
  0020b: movq   QWORD PTR [rsp],xmm2
  00210: movabs rax,0x563184053740
  0021a: call   rax
  0021c: movq   xmm2,QWORD PTR [rsp]
  00221: add    rsp,0x10
  00225: mov    QWORD PTR [rbp-0x58],rax
:00008 
:00010 %5 = %5 * %6                         [Float][Float]
  00229: mov    rdi,QWORD PTR [rbp-0x50]
  0022d: test   rdi,0x1
  00234: jne    0x374e7
  0023a: test   rdi,0x2
  00241: je     0x27d
  00247: xorps  xmm3,xmm3
  0024a: movabs rax,0x8000000000000002
  00254: cmp    rdi,rax
  00257: je     0x28f
  0025d: mov    rax,rdi
  00260: sar    rax,0x3f
  00264: add    rax,0x2
  00268: and    rdi,0xfffffffffffffffc
  0026c: or     rdi,rax
  0026f: rol    rdi,0x3d
  00273: movq   xmm3,rdi
  00278: jmp    0x28f
  0027d: call   0xfffed6ca
  00282: test   rax,rax
  00285: je     0x374e7
  0028b: movq   xmm3,xmm0
  0028f: mov    rdi,QWORD PTR [rbp-0x58]
  00293: test   rdi,0x1
  0029a: jne    0x37503
  002a0: test   rdi,0x2
  002a7: je     0x2e3
  002ad: xorps  xmm4,xmm4
  002b0: movabs rax,0x8000000000000002
  002ba: cmp    rdi,rax
  002bd: je     0x2f5
  002c3: mov    rax,rdi
  002c6: sar    rax,0x3f
  002ca: add    rax,0x2
  002ce: and    rdi,0xfffffffffffffffc
  002d2: or     rdi,rax
  002d5: rol    rdi,0x3d
  002d9: movq   xmm4,rdi
  002de: jmp    0x2f5
  002e3: call   0xfffed6ca
  002e8: test   rax,rax
  002eb: je     0x37503
  002f1: movq   xmm4,xmm0
  002f5: mulsd  xmm3,xmm4
:00011 %4 = %4 - %5                         [Float][Float]
  002f9: subsd  xmm2,xmm3
:00012 %5 = @z: Vec[IvarId(2)]
  002fd: mov    rdi,QWORD PTR [rbp-0x28]
  00301: mov    rax,QWORD PTR [rdi+0x20]
  00305: mov    QWORD PTR [rbp-0x50],rax
:00013 %6 = %1.call x()                     [Vec]
  00309: mov    rdi,QWORD PTR [rbp-0x30]
  0030d: test   rdi,0x7
  00314: jne    0x3751f
  0031a: cmp    DWORD PTR [rdi+0x4],0x28
  0031e: jne    0x3751f
  00324: cmp    DWORD PTR [rip+0xfffffffffffefe44],0x26        # 0xffff016f
  0032b: jne    0x3751f
  00331: mov    esi,DWORD PTR [rip+0x66b]        # 0x9a2
  00337: cmp    esi,0xffffffff
  0033a: je     0x3753b
  00340: cmp    WORD PTR [rdi+0x2],0x3
  00345: jne    0x35e
  0034b: cmp    esi,0x6
  0034e: jge    0x35e
  00354: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00359: jmp    0x37c
  0035e: sub    rsp,0x10
  00362: movq   QWORD PTR [rsp],xmm2
  00367: movabs rax,0x563184053740
  00371: call   rax
  00373: movq   xmm2,QWORD PTR [rsp]
  00378: add    rsp,0x10
  0037c: mov    QWORD PTR [rbp-0x58],rax
:00014 
:00016 %5 = %5 * %6                         [Float][Float]
  00380: mov    rdi,QWORD PTR [rbp-0x50]
  00384: test   rdi,0x1
  0038b: jne    0x37576
  00391: test   rdi,0x2
  00398: je     0x3d4
  0039e: xorps  xmm3,xmm3
  003a1: movabs rax,0x8000000000000002
  003ab: cmp    rdi,rax
  003ae: je     0x3e6
  003b4: mov    rax,rdi
  003b7: sar    rax,0x3f
  003bb: add    rax,0x2
  003bf: and    rdi,0xfffffffffffffffc
  003c3: or     rdi,rax
  003c6: rol    rdi,0x3d
  003ca: movq   xmm3,rdi
  003cf: jmp    0x3e6
  003d4: call   0xfffed6ca
  003d9: test   rax,rax
  003dc: je     0x37576
  003e2: movq   xmm3,xmm0
  003e6: mov    rdi,QWORD PTR [rbp-0x58]
  003ea: test   rdi,0x1
  003f1: jne    0x37592
  003f7: test   rdi,0x2
  003fe: je     0x43a
  00404: xorps  xmm4,xmm4
  00407: movabs rax,0x8000000000000002
  00411: cmp    rdi,rax
  00414: je     0x44c
  0041a: mov    rax,rdi
  0041d: sar    rax,0x3f
  00421: add    rax,0x2
  00425: and    rdi,0xfffffffffffffffc
  00429: or     rdi,rax
  0042c: rol    rdi,0x3d
  00430: movq   xmm4,rdi
  00435: jmp    0x44c
  0043a: call   0xfffed6ca
  0043f: test   rax,rax
  00442: je     0x37592
  00448: movq   xmm4,xmm0
  0044c: mulsd  xmm3,xmm4
:00017 %6 = @x: Vec[IvarId(0)]
  00450: mov    rdi,QWORD PTR [rbp-0x28]
  00454: mov    rax,QWORD PTR [rdi+0x10]
  00458: mov    QWORD PTR [rbp-0x58],rax
:00018 %7 = %1.call z()                     [Vec]
  0045c: mov    rdi,QWORD PTR [rbp-0x30]
  00460: test   rdi,0x7
  00467: jne    0x375ae
  0046d: cmp    DWORD PTR [rdi+0x4],0x28
  00471: jne    0x375ae
  00477: cmp    DWORD PTR [rip+0xfffffffffffefcf1],0x26        # 0xffff016f
  0047e: jne    0x375ae
  00484: mov    esi,DWORD PTR [rip+0x520]        # 0x9aa
  0048a: cmp    esi,0xffffffff
  0048d: je     0x375d7
  00493: cmp    WORD PTR [rdi+0x2],0x3
  00498: jne    0x4b1
  0049e: cmp    esi,0x6
  004a1: jge    0x4b1
  004a7: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004ac: jmp    0x4db
  004b1: sub    rsp,0x10
  004b5: movq   QWORD PTR [rsp],xmm2
  004ba: movq   QWORD PTR [rsp+0x8],xmm3
  004c0: movabs rax,0x563184053740
  004ca: call   rax
  004cc: movq   xmm2,QWORD PTR [rsp]
  004d1: movq   xmm3,QWORD PTR [rsp+0x8]
  004d7: add    rsp,0x10
  004db: mov    QWORD PTR [rbp-0x60],rax
:00019 
:00021 %6 = %6 * %7                         [Float][Float]
  004df: mov    rdi,QWORD PTR [rbp-0x58]
  004e3: test   rdi,0x1
  004ea: jne    0x3761e
  004f0: test   rdi,0x2
  004f7: je     0x533
  004fd: xorps  xmm4,xmm4
  00500: movabs rax,0x8000000000000002
  0050a: cmp    rdi,rax
  0050d: je     0x545
  00513: mov    rax,rdi
  00516: sar    rax,0x3f
  0051a: add    rax,0x2
  0051e: and    rdi,0xfffffffffffffffc
  00522: or     rdi,rax
  00525: rol    rdi,0x3d
  00529: movq   xmm4,rdi
  0052e: jmp    0x545
  00533: call   0xfffed6ca
  00538: test   rax,rax
  0053b: je     0x3761e
  00541: movq   xmm4,xmm0
  00545: mov    rdi,QWORD PTR [rbp-0x60]
  00549: test   rdi,0x1
  00550: jne    0x37647
  00556: test   rdi,0x2
  0055d: je     0x599
  00563: xorps  xmm5,xmm5
  00566: movabs rax,0x8000000000000002
  00570: cmp    rdi,rax
  00573: je     0x5ab
  00579: mov    rax,rdi
  0057c: sar    rax,0x3f
  00580: add    rax,0x2
  00584: and    rdi,0xfffffffffffffffc
  00588: or     rdi,rax
  0058b: rol    rdi,0x3d
  0058f: movq   xmm5,rdi
  00594: jmp    0x5ab
  00599: call   0xfffed6ca
  0059e: test   rax,rax
  005a1: je     0x37647
  005a7: movq   xmm5,xmm0
  005ab: mulsd  xmm4,xmm5
:00022 %5 = %5 - %6                         [Float][Float]
  005af: subsd  xmm3,xmm4
:00023 %6 = @x: Vec[IvarId(0)]
  005b3: mov    rdi,QWORD PTR [rbp-0x28]
  005b7: mov    rax,QWORD PTR [rdi+0x10]
  005bb: mov    QWORD PTR [rbp-0x58],rax
:00024 %7 = %1.call y()                     [Vec]
  005bf: mov    rdi,QWORD PTR [rbp-0x30]
  005c3: test   rdi,0x7
  005ca: jne    0x37670
  005d0: cmp    DWORD PTR [rdi+0x4],0x28
  005d4: jne    0x37670
  005da: cmp    DWORD PTR [rip+0xfffffffffffefb8e],0x26        # 0xffff016f
  005e1: jne    0x37670
  005e7: mov    esi,DWORD PTR [rip+0x3c5]        # 0x9b2
  005ed: cmp    esi,0xffffffff
  005f0: je     0x37699
  005f6: cmp    WORD PTR [rdi+0x2],0x3
  005fb: jne    0x614
  00601: cmp    esi,0x6
  00604: jge    0x614
  0060a: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0060f: jmp    0x63e
  00614: sub    rsp,0x10
  00618: movq   QWORD PTR [rsp],xmm2
  0061d: movq   QWORD PTR [rsp+0x8],xmm3
  00623: movabs rax,0x563184053740
  0062d: call   rax
  0062f: movq   xmm2,QWORD PTR [rsp]
  00634: movq   xmm3,QWORD PTR [rsp+0x8]
  0063a: add    rsp,0x10
  0063e: mov    QWORD PTR [rbp-0x60],rax
:00025 
:00027 %6 = %6 * %7                         [Float][Float]
  00642: mov    rdi,QWORD PTR [rbp-0x58]
  00646: test   rdi,0x1
  0064d: jne    0x376e0
  00653: test   rdi,0x2
  0065a: je     0x696
  00660: xorps  xmm4,xmm4
  00663: movabs rax,0x8000000000000002
  0066d: cmp    rdi,rax
  00670: je     0x6a8
  00676: mov    rax,rdi
  00679: sar    rax,0x3f
  0067d: add    rax,0x2
  00681: and    rdi,0xfffffffffffffffc
  00685: or     rdi,rax
  00688: rol    rdi,0x3d
  0068c: movq   xmm4,rdi
  00691: jmp    0x6a8
  00696: call   0xfffed6ca
  0069b: test   rax,rax
  0069e: je     0x376e0
  006a4: movq   xmm4,xmm0
  006a8: mov    rdi,QWORD PTR [rbp-0x60]
  006ac: test   rdi,0x1
  006b3: jne    0x37709
  006b9: test   rdi,0x2
  006c0: je     0x6fc
  006c6: xorps  xmm5,xmm5
  006c9: movabs rax,0x8000000000000002
  006d3: cmp    rdi,rax
  006d6: je     0x70e
  006dc: mov    rax,rdi
  006df: sar    rax,0x3f
  006e3: add    rax,0x2
  006e7: and    rdi,0xfffffffffffffffc
  006eb: or     rdi,rax
  006ee: rol    rdi,0x3d
  006f2: movq   xmm5,rdi
  006f7: jmp    0x70e
  006fc: call   0xfffed6ca
  00701: test   rax,rax
  00704: je     0x37709
  0070a: movq   xmm5,xmm0
  0070e: mulsd  xmm4,xmm5
:00028 %7 = @y: Vec[IvarId(1)]
  00712: mov    rdi,QWORD PTR [rbp-0x28]
  00716: mov    rax,QWORD PTR [rdi+0x18]
  0071a: mov    QWORD PTR [rbp-0x60],rax
:00029 %8 = %1.call x()                     [Vec]
  0071e: mov    rdi,QWORD PTR [rbp-0x30]
  00722: test   rdi,0x7
  00729: jne    0x37732
  0072f: cmp    DWORD PTR [rdi+0x4],0x28
  00733: jne    0x37732
  00739: cmp    DWORD PTR [rip+0xfffffffffffefa2f],0x26        # 0xffff016f
  00740: jne    0x37732
  00746: mov    esi,DWORD PTR [rip+0x26e]        # 0x9ba
  0074c: cmp    esi,0xffffffff
  0074f: je     0x37768
  00755: cmp    WORD PTR [rdi+0x2],0x3
  0075a: jne    0x773
  00760: cmp    esi,0x6
  00763: jge    0x773
  00769: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0076e: jmp    0x7a9
  00773: sub    rsp,0x20
  00777: movq   QWORD PTR [rsp],xmm2
  0077c: movq   QWORD PTR [rsp+0x8],xmm3
  00782: movq   QWORD PTR [rsp+0x10],xmm4
  00788: movabs rax,0x563184053740
  00792: call   rax
  00794: movq   xmm2,QWORD PTR [rsp]
  00799: movq   xmm3,QWORD PTR [rsp+0x8]
  0079f: movq   xmm4,QWORD PTR [rsp+0x10]
  007a5: add    rsp,0x20
  007a9: mov    QWORD PTR [rbp-0x68],rax
:00030 
:00032 %7 = %7 * %8                         [Float][Float]
  007ad: mov    rdi,QWORD PTR [rbp-0x60]
  007b1: test   rdi,0x1
  007b8: jne    0x377bb
  007be: test   rdi,0x2
  007c5: je     0x801
  007cb: xorps  xmm5,xmm5
  007ce: movabs rax,0x8000000000000002
  007d8: cmp    rdi,rax
  007db: je     0x813
  007e1: mov    rax,rdi
  007e4: sar    rax,0x3f
  007e8: add    rax,0x2
  007ec: and    rdi,0xfffffffffffffffc
  007f0: or     rdi,rax
  007f3: rol    rdi,0x3d
  007f7: movq   xmm5,rdi
  007fc: jmp    0x813
  00801: call   0xfffed6ca
  00806: test   rax,rax
  00809: je     0x377bb
  0080f: movq   xmm5,xmm0
  00813: mov    rdi,QWORD PTR [rbp-0x68]
  00817: test   rdi,0x1
  0081e: jne    0x377f1
  00824: test   rdi,0x2
  0082b: je     0x867
  00831: xorps  xmm6,xmm6
  00834: movabs rax,0x8000000000000002
  0083e: cmp    rdi,rax
  00841: je     0x879
  00847: mov    rax,rdi
  0084a: sar    rax,0x3f
  0084e: add    rax,0x2
  00852: and    rdi,0xfffffffffffffffc
  00856: or     rdi,rax
  00859: rol    rdi,0x3d
  0085d: movq   xmm6,rdi
  00862: jmp    0x879
  00867: call   0xfffed6ca
  0086c: test   rax,rax
  0086f: je     0x377f1
  00875: movq   xmm6,xmm0
  00879: mulsd  xmm5,xmm6
:00033 %6 = %6 - %7                         [Float][Float]
  0087d: subsd  xmm4,xmm5
:00034 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
  00881: movq   xmm0,xmm2
  00885: call   0xfffed7bd
  0088a: mov    QWORD PTR [rbp-0x48],rax
  0088e: movq   xmm0,xmm3
  00892: call   0xfffed7bd
  00897: mov    QWORD PTR [rbp-0x50],rax
  0089b: movq   xmm0,xmm4
  0089f: call   0xfffed7bd
  008a4: mov    QWORD PTR [rbp-0x58],rax
  008a8: mov    rdi,QWORD PTR [rbp-0x40]
  008ac: test   rdi,0x7
  008b3: jne    0x37827
  008b9: cmp    DWORD PTR [rdi+0x4],0x29
  008bd: jne    0x37827
  008c3: cmp    DWORD PTR [rip+0xfffffffffffef8a5],0x26        # 0xffff016f
  008ca: jne    0x37827
  008d0: mov    r9,0x0
  008d7: sub    rsp,0x30
  008db: movq   QWORD PTR [rsp],xmm2
  008e0: movq   QWORD PTR [rsp+0x8],xmm3
  008e6: movq   QWORD PTR [rsp+0x10],xmm4
  008ec: movq   QWORD PTR [rsp+0x18],xmm5
  008f2: movq   QWORD PTR [rsp+0x20],xmm6
  008f8: mov    rdx,rdi
  008fb: mov    rax,QWORD PTR [rbx]
  008fe: lea    rdi,[rsp-0x18]
  00903: mov    QWORD PTR [rdi],rax
  00906: mov    QWORD PTR [rbx],rdi
  00909: mov    QWORD PTR [rsp-0x20],0x0
  00912: mov    QWORD PTR [rsp-0x38],rcx
  00917: lea    rcx,[rbp-0x48]
  0091b: mov    r8,0x3
  00922: call   0x37843
  00927: lea    rdi,[rbp-0x8]
  0092b: mov    QWORD PTR [rbx],rdi
  0092e: movq   xmm2,QWORD PTR [rsp]
  00933: movq   xmm3,QWORD PTR [rsp+0x8]
  00939: movq   xmm4,QWORD PTR [rsp+0x10]
  0093f: movq   xmm5,QWORD PTR [rsp+0x18]
  00945: movq   xmm6,QWORD PTR [rsp+0x20]
  0094b: add    rsp,0x30
  0094f: movabs r13,0x563184c82e50
  00959: test   rax,rax
  0095c: je     0xfffed691
  00962: mov    QWORD PTR [rbp-0x38],rax
:00035 
:00037 ret %2
  00966: mov    rax,QWORD PTR [rbp-0x38]
  0096a: leave  
  0096b: ret    
==> start whole compile: intersect FuncId(71) self_class:Plane start:[00000] bytecode:0x563184c872a0
<== finished compile. elapsed:123.3µs
offset:Pos(78696) code: 6629 bytes  data: 347 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xa0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044:    	mov    rdi,QWORD PTR [rbp-0x28]
  00048: 00 	test   rdi,0x7
  0004f:    	jne    0x36eb7
  00055:    	cmp    DWORD PTR [rdi+0x4],0x2c
  00059:    	jne    0x36eb7
:00000 %7 = @p: Plane[IvarId(0)]
  0005f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00063:    	mov    rax,QWORD PTR [rdi+0x10]
  00067:    	mov    QWORD PTR [rbp-0x60],rax
:00001 %8 = @n: Plane[IvarId(1)]
  0006b:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006f:    	mov    rax,QWORD PTR [rdi+0x18]
  00073:    	mov    QWORD PTR [rbp-0x68],rax
:00002 %3 = %7.call vdot(%8; 1)             [Vec]
  00077:    	mov    rdi,QWORD PTR [rbp-0x60]
  0007b: 00 	test   rdi,0x7
  00082:    	jne    0x36ec6
  00088:    	cmp    DWORD PTR [rdi+0x4],0x28
  0008c:    	jne    0x36ec6
  00092: 26 	cmp    DWORD PTR [rip+0xfffffffffffef718],0x26        # 0xfffef7b1
  00099:    	jne    0x36ec6
  0009f:    	mov    rax,QWORD PTR [rbx]
  000a2:    	lea    rdi,[rsp-0x18]
  000a7:    	mov    QWORD PTR [rdi],rax
  000aa:    	mov    QWORD PTR [rbx],rdi
  000ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000b6:    	mov    QWORD PTR [rsp-0x38],rcx
  000bb:    	mov    rax,QWORD PTR [rbp-0x60]
  000bf:    	mov    QWORD PTR [rsp-0x38],rax
  000c4: 00 	mov    rdi,0x1
  000cb:    	mov    rax,QWORD PTR [rbp-0x68]
  000cf:    	mov    QWORD PTR [rsp-0x40],rax
  000d4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  000dd: 05 	movabs rax,0x1000500000041
  000e7:    	mov    QWORD PTR [rsp-0x28],rax
  000ec: 31 	movabs r13,0x563184c66dc0
  000f6:    	call   0xffff04d4
  000fb:    	lea    rdi,[rbp-0x8]
  000ff:    	mov    QWORD PTR [rbx],rdi
  00102: 31 	movabs r13,0x563184c872e0
  0010c:    	test   rax,rax
  0010f:    	je     0xfffeccd3
  00115:    	mov    QWORD PTR [rbp-0x40],rax
:00003 
:00005 %3 = neg %3                          [Float]
  00119:    	mov    rdi,QWORD PTR [rbp-0x40]
  0011d: 00 	test   rdi,0x1
  00124:    	jne    0x36ed5
  0012a: 00 	test   rdi,0x2
  00131:    	je     0x16d
  00137:    	xorps  xmm2,xmm2
  0013a: 00 	movabs rax,0x8000000000000002
  00144:    	cmp    rdi,rax
  00147:    	je     0x17f
  0014d:    	mov    rax,rdi
  00150:    	sar    rax,0x3f
  00154:    	add    rax,0x2
  00158:    	and    rdi,0xfffffffffffffffc
  0015c:    	or     rdi,rax
  0015f:    	rol    rdi,0x3d
  00163:    	movq   xmm2,rdi
  00168:    	jmp    0x17f
  0016d:    	call   0xfffecd0c
  00172:    	test   rax,rax
  00175:    	je     0x36ed5
  0017b:    	movq   xmm2,xmm0
  0017f: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1862]        # 0x19e8
:00006 %7 = %1.call dir()                   [Ray]
  00186:    	mov    rdi,QWORD PTR [rbp-0x30]
  0018a: 00 	test   rdi,0x7
  00191:    	jne    0x36ee4
  00197:    	cmp    DWORD PTR [rdi+0x4],0x2e
  0019b:    	jne    0x36ee4
  001a1: 26 	cmp    DWORD PTR [rip+0xfffffffffffef609],0x26        # 0xfffef7b1
  001a8:    	jne    0x36ee4
  001ae:    	mov    esi,DWORD PTR [rip+0x1840]        # 0x19f4
  001b4:    	cmp    esi,0xffffffff
  001b7:    	je     0x36f00
  001bd:    	cmp    WORD PTR [rdi+0x2],0x3
  001c2:    	jne    0x1db
  001c8:    	cmp    esi,0x6
  001cb:    	jge    0x1db
  001d1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d6:    	jmp    0x1f9
  001db:    	sub    rsp,0x10
  001df:    	movq   QWORD PTR [rsp],xmm2
  001e4: 31 	movabs rax,0x563184053740
  001ee:    	call   rax
  001f0:    	movq   xmm2,QWORD PTR [rsp]
  001f5:    	add    rsp,0x10
  001f9:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = @n: Plane[IvarId(1)]
  001fd:    	mov    rdi,QWORD PTR [rbp-0x28]
  00201:    	mov    rax,QWORD PTR [rdi+0x18]
  00205:    	mov    QWORD PTR [rbp-0x68],rax
:00010 %4 = %7.call vdot(%8; 1)             [Vec]
  00209:    	mov    rdi,QWORD PTR [rbp-0x60]
  0020d: 00 	test   rdi,0x7
  00214:    	jne    0x36f3b
  0021a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0021e:    	jne    0x36f3b
  00224: 26 	cmp    DWORD PTR [rip+0xfffffffffffef586],0x26        # 0xfffef7b1
  0022b:    	jne    0x36f3b
  00231:    	sub    rsp,0x10
  00235:    	movq   QWORD PTR [rsp],xmm2
  0023a:    	mov    rax,QWORD PTR [rbx]
  0023d:    	lea    rdi,[rsp-0x18]
  00242:    	mov    QWORD PTR [rdi],rax
  00245:    	mov    QWORD PTR [rbx],rdi
  00248: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00251:    	mov    QWORD PTR [rsp-0x38],rcx
  00256:    	mov    rax,QWORD PTR [rbp-0x60]
  0025a:    	mov    QWORD PTR [rsp-0x38],rax
  0025f: 00 	mov    rdi,0x1
  00266:    	mov    rax,QWORD PTR [rbp-0x68]
  0026a:    	mov    QWORD PTR [rsp-0x40],rax
  0026f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00278: 05 	movabs rax,0x1000500000041
  00282:    	mov    QWORD PTR [rsp-0x28],rax
  00287: 31 	movabs r13,0x563184c66dc0
  00291:    	call   0xffff04d4
  00296:    	lea    rdi,[rbp-0x8]
  0029a:    	mov    QWORD PTR [rbx],rdi
  0029d:    	movq   xmm2,QWORD PTR [rsp]
  002a2:    	add    rsp,0x10
  002a6: 31 	movabs r13,0x563184c87360
  002b0:    	test   rax,rax
  002b3:    	je     0xfffeccd3
  002b9:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %5 = %4
  002bd:    	mov    rax,QWORD PTR [rbp-0x48]
  002c1:    	mov    QWORD PTR [rbp-0x50],rax
:00014 %7 = literal[0.0]
  002c5: 00 	movq   xmm3,QWORD PTR [rip+0x172b]        # 0x19f8
  002cd: 00 	movabs rax,0x8000000000000002
  002d7:    	mov    QWORD PTR [rbp-0x60],rax
:00015 _%7 = %4 < %7                        [Float][Float]
:00016 condnotbr _%7 =>:00020
  002db:    	mov    rdi,QWORD PTR [rbp-0x48]
  002df: 00 	test   rdi,0x1
  002e6:    	jne    0x36f57
  002ec: 00 	test   rdi,0x2
  002f3:    	je     0x32f
  002f9:    	xorps  xmm4,xmm4
  002fc: 00 	movabs rax,0x8000000000000002
  00306:    	cmp    rdi,rax
  00309:    	je     0x341
  0030f:    	mov    rax,rdi
  00312:    	sar    rax,0x3f
  00316:    	add    rax,0x2
  0031a:    	and    rdi,0xfffffffffffffffc
  0031e:    	or     rdi,rax
  00321:    	rol    rdi,0x3d
  00325:    	movq   xmm4,rdi
  0032a:    	jmp    0x341
  0032f:    	call   0xfffecd0c
  00334:    	test   rax,rax
  00337:    	je     0x36f57
  0033d:    	movq   xmm4,xmm0
  00341:    	ucomisd xmm4,xmm3
  00345:    	jae    0x36fbe
:00017 %5 = %4
:00018 %5 = neg %5                          [<INVALID>]
  0034b: 01 	sub    DWORD PTR [rip+0x16ae],0x1        # 0x1a00
  00352:    	je     0x36f9c
  00358:    	movq   xmm0,xmm4
  0035c:    	call   0xfffecdff
  00361:    	mov    QWORD PTR [rbp-0x50],rax
  00365:    	sub    rsp,0x20
  00369:    	movq   QWORD PTR [rsp],xmm2
  0036e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00374:    	movq   QWORD PTR [rsp+0x10],xmm4
  0037a:    	mov    rdi,QWORD PTR [rbp-0x50]
  0037e:    	mov    rdx,rdi
  00381:    	mov    rdi,rbx
  00384:    	mov    rsi,r12
  00387: 31 	movabs rax,0x5631840873b0
  00391:    	call   rax
  00393:    	movq   xmm2,QWORD PTR [rsp]
  00398:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0039e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003a4:    	add    rsp,0x20
  003a8: 31 	movabs r13,0x563184c873d0
  003b2:    	test   rax,rax
  003b5:    	je     0xfffeccd3
  003bb:    	mov    QWORD PTR [rbp-0x50],rax
:00019 br =>:00020
  003bf:    	jmp    0x36fe4
:00020 %7 = literal[1e-17]
  003c4: 00 	movq   xmm3,QWORD PTR [rip+0x163c]        # 0x1a08
  003cc: aa 	movabs rax,0xe33877aa3236a4ba
  003d6:    	mov    QWORD PTR [rbp-0x60],rax
:00021 _%7 = %5 < %7                        [Float][Float]
:00022 condnotbr _%7 =>:00026
  003da:    	mov    rdi,QWORD PTR [rbp-0x50]
  003de: 00 	test   rdi,0x1
  003e5:    	jne    0x3700a
  003eb: 00 	test   rdi,0x2
  003f2:    	je     0x42e
  003f8:    	xorps  xmm5,xmm5
  003fb: 00 	movabs rax,0x8000000000000002
  00405:    	cmp    rdi,rax
  00408:    	je     0x440
  0040e:    	mov    rax,rdi
  00411:    	sar    rax,0x3f
  00415:    	add    rax,0x2
  00419:    	and    rdi,0xfffffffffffffffc
  0041d:    	or     rdi,rax
  00420:    	rol    rdi,0x3d
  00424:    	movq   xmm5,rdi
  00429:    	jmp    0x440
  0042e:    	call   0xfffecd0c
  00433:    	test   rax,rax
  00436:    	je     0x3700a
  0043c:    	movq   xmm5,xmm0
  00440:    	ucomisd xmm5,xmm3
  00444:    	jae    0x458
:00023 %7 = nil
  0044a: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00024 ret %7
  00452:    	mov    rax,QWORD PTR [rbp-0x60]
  00456:    	leave  
  00457:    	ret    
:00026 %8 = %1.call org()                   [Ray]
  00458:    	mov    rdi,QWORD PTR [rbp-0x30]
  0045c: 00 	test   rdi,0x7
  00463:    	jne    0x37026
  00469:    	cmp    DWORD PTR [rdi+0x4],0x2e
  0046d:    	jne    0x37026
  00473: 26 	cmp    DWORD PTR [rip+0xfffffffffffef337],0x26        # 0xfffef7b1
  0047a:    	jne    0x37026
  00480:    	mov    esi,DWORD PTR [rip+0x158e]        # 0x1a14
  00486:    	cmp    esi,0xffffffff
  00489:    	je     0x37042
  0048f:    	cmp    WORD PTR [rdi+0x2],0x3
  00494:    	jne    0x4ad
  0049a:    	cmp    esi,0x6
  0049d:    	jge    0x4ad
  004a3:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004a8:    	jmp    0x4ef
  004ad:    	sub    rsp,0x20
  004b1:    	movq   QWORD PTR [rsp],xmm2
  004b6:    	movq   QWORD PTR [rsp+0x8],xmm3
  004bc:    	movq   QWORD PTR [rsp+0x10],xmm4
  004c2:    	movq   QWORD PTR [rsp+0x18],xmm5
  004c8: 31 	movabs rax,0x563184053740
  004d2:    	call   rax
  004d4:    	movq   xmm2,QWORD PTR [rsp]
  004d9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004df:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004e5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  004eb:    	add    rsp,0x20
  004ef:    	mov    QWORD PTR [rbp-0x68],rax
:00027 
:00029 %9 = @n: Plane[IvarId(1)]
  004f3:    	mov    rdi,QWORD PTR [rbp-0x28]
  004f7:    	mov    rax,QWORD PTR [rdi+0x18]
  004fb:    	mov    QWORD PTR [rbp-0x70],rax
:00030 %7 = %8.call vdot(%9; 1)             [Vec]
  004ff:    	mov    rdi,QWORD PTR [rbp-0x68]
  00503: 00 	test   rdi,0x7
  0050a:    	jne    0x370a1
  00510:    	cmp    DWORD PTR [rdi+0x4],0x28
  00514:    	jne    0x370a1
  0051a: 26 	cmp    DWORD PTR [rip+0xfffffffffffef290],0x26        # 0xfffef7b1
  00521:    	jne    0x370a1
  00527:    	sub    rsp,0x20
  0052b:    	movq   QWORD PTR [rsp],xmm2
  00530:    	movq   QWORD PTR [rsp+0x8],xmm4
  00536:    	movq   QWORD PTR [rsp+0x10],xmm5
  0053c:    	mov    rax,QWORD PTR [rbx]
  0053f:    	lea    rdi,[rsp-0x18]
  00544:    	mov    QWORD PTR [rdi],rax
  00547:    	mov    QWORD PTR [rbx],rdi
  0054a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00553:    	mov    QWORD PTR [rsp-0x38],rcx
  00558:    	mov    rax,QWORD PTR [rbp-0x68]
  0055c:    	mov    QWORD PTR [rsp-0x38],rax
  00561: 00 	mov    rdi,0x1
  00568:    	mov    rax,QWORD PTR [rbp-0x70]
  0056c:    	mov    QWORD PTR [rsp-0x40],rax
  00571: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0057a: 05 	movabs rax,0x1000500000041
  00584:    	mov    QWORD PTR [rsp-0x28],rax
  00589: 31 	movabs r13,0x563184c66dc0
  00593:    	call   0xffff04d4
  00598:    	lea    rdi,[rbp-0x8]
  0059c:    	mov    QWORD PTR [rbx],rdi
  0059f:    	movq   xmm2,QWORD PTR [rsp]
  005a4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  005aa:    	movq   xmm5,QWORD PTR [rsp+0x10]
  005b0:    	add    rsp,0x20
  005b4: 31 	movabs r13,0x563184c874a0
  005be:    	test   rax,rax
  005c1:    	je     0xfffeccd3
  005c7:    	mov    QWORD PTR [rbp-0x60],rax
:00031 
:00033 %7 = %7 + %3                         [Float][Float]
  005cb:    	mov    rdi,QWORD PTR [rbp-0x60]
  005cf: 00 	test   rdi,0x1
  005d6:    	jne    0x370bd
  005dc: 00 	test   rdi,0x2
  005e3:    	je     0x61f
  005e9:    	xorps  xmm3,xmm3
  005ec: 00 	movabs rax,0x8000000000000002
  005f6:    	cmp    rdi,rax
  005f9:    	je     0x631
  005ff:    	mov    rax,rdi
  00602:    	sar    rax,0x3f
  00606:    	add    rax,0x2
  0060a:    	and    rdi,0xfffffffffffffffc
  0060e:    	or     rdi,rax
  00611:    	rol    rdi,0x3d
  00615:    	movq   xmm3,rdi
  0061a:    	jmp    0x631
  0061f:    	call   0xfffecd0c
  00624:    	test   rax,rax
  00627:    	je     0x370bd
  0062d:    	movq   xmm3,xmm0
  00631:    	addsd  xmm3,xmm2
:00034 %7 = neg %7                          [Float]
  00635: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13dc]        # 0x1a18
:00035 %6 = %7 / %4                         [Float][Float]
  0063c:    	movq   xmm6,xmm3
  00640:    	movq   rax,xmm4
  00645:    	test   rax,rax
  00648:    	je     0xfffeccf8
  0064e:    	divsd  xmm6,xmm4
:00036 %7 = literal[0.0]
  00652: 00 	movq   xmm3,QWORD PTR [rip+0x13ce]        # 0x1a28
  0065a: 00 	movabs rax,0x8000000000000002
  00664:    	mov    QWORD PTR [rbp-0x60],rax
:00037 _%7 = %6 > %7                        [Float][Float]
:00038 condnotbr _%7 =>:00105
  00668:    	ucomisd xmm6,xmm3
  0066c:    	jbe    0x38036
:00039 %7 = %2.call t()                     [<INVALID>]
  00672: 01 	sub    DWORD PTR [rip+0x13b7],0x1        # 0x1a30
  00679:    	je     0x37102
  0067f:    	sub    rsp,0x20
  00683:    	movq   QWORD PTR [rsp],xmm2
  00688:    	movq   QWORD PTR [rsp+0x8],xmm4
  0068e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00694:    	movq   QWORD PTR [rsp+0x18],xmm6
  0069a:    	mov    rdi,QWORD PTR [rbp-0x38]
  0069e: 31 	movabs rax,0x5631840958d0
  006a8:    	call   rax
  006aa:    	mov    r15d,eax
  006ad: 00 	cmp    r15d,DWORD PTR [rip+0x1384]        # 0x1a38
  006b4:    	jne    0x37124
  006ba:    	mov    eax,DWORD PTR [rip+0xfffffffffffef0f1]        # 0xfffef7b1
  006c0:    	cmp    DWORD PTR [rip+0x136e],eax        # 0x1a34
  006c6:    	jne    0x37124
  006cc:    	mov    rax,QWORD PTR [rbx]
  006cf:    	lea    rdi,[rsp-0x18]
  006d4:    	mov    QWORD PTR [rdi],rax
  006d7:    	mov    QWORD PTR [rbx],rdi
  006da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006e3:    	mov    QWORD PTR [rsp-0x38],rcx
  006e8:    	mov    rax,QWORD PTR [rbp-0x38]
  006ec:    	mov    QWORD PTR [rsp-0x38],rax
  006f1: 00 	mov    rdi,0x0
  006f8: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00701: 00 	movabs rax,0x0
  0070b:    	mov    QWORD PTR [rsp-0x28],rax
  00710: 00 	movabs r13,0x0
  0071a:    	call   0xfffecc98
  0071f:    	lea    rdi,[rbp-0x8]
  00723:    	mov    QWORD PTR [rbx],rdi
  00726:    	movq   xmm2,QWORD PTR [rsp]
  0072b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00731:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00737:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0073d:    	add    rsp,0x20
  00741:    	test   rax,rax
  00744:    	je     0x37190
  0074a:    	mov    QWORD PTR [rbp-0x60],rax
:00040 
:00042 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00043 condnotbr _%7 =>:00105
  0074e:    	movq   xmm0,xmm6
  00752:    	call   0xfffecdff
  00757:    	mov    QWORD PTR [rbp-0x58],rax
  0075b:    	mov    rdi,QWORD PTR [rbp-0x58]
  0075f:    	mov    rsi,QWORD PTR [rbp-0x60]
  00763: 00 	test   rdi,0x1
  0076a:    	je     0x3719f
  00770: 00 	test   rsi,0x1
  00777:    	je     0x3719f
  0077d:    	cmp    rdi,rsi
  00780:    	jge    0x38069
:00044 %7 = literal[true]
  00786: 00 	mov    rax,0x1c
  0078d:    	mov    QWORD PTR [rbp-0x60],rax
:00045 _ = %2.call hit=(%7; 1)              [<INVALID>]
  00791: 01 	sub    DWORD PTR [rip+0x12a4],0x1        # 0x1a3c
  00798:    	je     0x37210
  0079e:    	sub    rsp,0x20
  007a2:    	movq   QWORD PTR [rsp],xmm2
  007a7:    	movq   QWORD PTR [rsp+0x8],xmm4
  007ad:    	movq   QWORD PTR [rsp+0x10],xmm5
  007b3:    	movq   QWORD PTR [rsp+0x18],xmm6
  007b9:    	mov    rdi,QWORD PTR [rbp-0x38]
  007bd: 31 	movabs rax,0x5631840958d0
  007c7:    	call   rax
  007c9:    	mov    r15d,eax
  007cc: 00 	cmp    r15d,DWORD PTR [rip+0x1271]        # 0x1a44
  007d3:    	jne    0x37232
  007d9:    	mov    eax,DWORD PTR [rip+0xfffffffffffeefd2]        # 0xfffef7b1
  007df:    	cmp    DWORD PTR [rip+0x125b],eax        # 0x1a40
  007e5:    	jne    0x37232
  007eb:    	mov    rax,QWORD PTR [rbx]
  007ee:    	lea    rdi,[rsp-0x18]
  007f3:    	mov    QWORD PTR [rdi],rax
  007f6:    	mov    QWORD PTR [rbx],rdi
  007f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00802:    	mov    QWORD PTR [rsp-0x38],rcx
  00807:    	mov    rax,QWORD PTR [rbp-0x38]
  0080b:    	mov    QWORD PTR [rsp-0x38],rax
  00810: 00 	mov    rdi,0x1
  00817:    	mov    rax,QWORD PTR [rbp-0x60]
  0081b:    	mov    QWORD PTR [rsp-0x40],rax
  00820: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00829: 00 	movabs rax,0x0
  00833:    	mov    QWORD PTR [rsp-0x28],rax
  00838: 00 	movabs r13,0x0
  00842:    	call   0xfffecc98
  00847:    	lea    rdi,[rbp-0x8]
  0084b:    	mov    QWORD PTR [rbx],rdi
  0084e:    	movq   xmm2,QWORD PTR [rsp]
  00853:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00859:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0085f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00865:    	add    rsp,0x20
  00869:    	test   rax,rax
  0086c:    	je     0x3729e
:00046 
:00048 _ = %2.call t=(%6; 1)                [<INVALID>]
  00872: 01 	sub    DWORD PTR [rip+0x11cf],0x1        # 0x1a48
  00879:    	je     0x372c9
  0087f:    	sub    rsp,0x20
  00883:    	movq   QWORD PTR [rsp],xmm2
  00888:    	movq   QWORD PTR [rsp+0x8],xmm4
  0088e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00894:    	movq   QWORD PTR [rsp+0x18],xmm6
  0089a:    	mov    rdi,QWORD PTR [rbp-0x38]
  0089e: 31 	movabs rax,0x5631840958d0
  008a8:    	call   rax
  008aa:    	mov    r15d,eax
  008ad: 00 	cmp    r15d,DWORD PTR [rip+0x119c]        # 0x1a50
  008b4:    	jne    0x372eb
  008ba:    	mov    eax,DWORD PTR [rip+0xfffffffffffeeef1]        # 0xfffef7b1
  008c0:    	cmp    DWORD PTR [rip+0x1186],eax        # 0x1a4c
  008c6:    	jne    0x372eb
  008cc:    	mov    rax,QWORD PTR [rbx]
  008cf:    	lea    rdi,[rsp-0x18]
  008d4:    	mov    QWORD PTR [rdi],rax
  008d7:    	mov    QWORD PTR [rbx],rdi
  008da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008e3:    	mov    QWORD PTR [rsp-0x38],rcx
  008e8:    	mov    rax,QWORD PTR [rbp-0x38]
  008ec:    	mov    QWORD PTR [rsp-0x38],rax
  008f1: 00 	mov    rdi,0x1
  008f8:    	mov    rax,QWORD PTR [rbp-0x58]
  008fc:    	mov    QWORD PTR [rsp-0x40],rax
  00901: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0090a: 00 	movabs rax,0x0
  00914:    	mov    QWORD PTR [rsp-0x28],rax
  00919: 00 	movabs r13,0x0
  00923:    	call   0xfffecc98
  00928:    	lea    rdi,[rbp-0x8]
  0092c:    	mov    QWORD PTR [rbx],rdi
  0092f:    	movq   xmm2,QWORD PTR [rsp]
  00934:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0093a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00940:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00946:    	add    rsp,0x20
  0094a:    	test   rax,rax
  0094d:    	je     0x37357
:00049 
:00051 %7 = @n: <INVALID>[IvarId(0)]
  00953:    	mov    rdi,QWORD PTR [rbp-0x28]
  00957:    	sub    rsp,0x20
  0095b:    	movq   QWORD PTR [rsp],xmm2
  00960:    	movq   QWORD PTR [rsp+0x8],xmm4
  00966:    	movq   QWORD PTR [rsp+0x10],xmm5
  0096c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00972: 00 	mov    rsi,0x8c
  00979:    	mov    rdx,r12
  0097c: 31 	movabs rax,0x5631840b8770
  00986:    	call   rax
  00988:    	movq   xmm2,QWORD PTR [rsp]
  0098d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00993:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00999:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0099f:    	add    rsp,0x20
  009a3:    	mov    QWORD PTR [rbp-0x60],rax
:00052 _ = %2.call n=(%7; 1)                [<INVALID>]
  009a7: 01 	sub    DWORD PTR [rip+0x10a6],0x1        # 0x1a54
  009ae:    	je     0x37382
  009b4:    	sub    rsp,0x20
  009b8:    	movq   QWORD PTR [rsp],xmm2
  009bd:    	movq   QWORD PTR [rsp+0x8],xmm4
  009c3:    	movq   QWORD PTR [rsp+0x10],xmm5
  009c9:    	movq   QWORD PTR [rsp+0x18],xmm6
  009cf:    	mov    rdi,QWORD PTR [rbp-0x38]
  009d3: 31 	movabs rax,0x5631840958d0
  009dd:    	call   rax
  009df:    	mov    r15d,eax
  009e2: 00 	cmp    r15d,DWORD PTR [rip+0x1073]        # 0x1a5c
  009e9:    	jne    0x373a4
  009ef:    	mov    eax,DWORD PTR [rip+0xfffffffffffeedbc]        # 0xfffef7b1
  009f5:    	cmp    DWORD PTR [rip+0x105d],eax        # 0x1a58
  009fb:    	jne    0x373a4
  00a01:    	mov    rax,QWORD PTR [rbx]
  00a04:    	lea    rdi,[rsp-0x18]
  00a09:    	mov    QWORD PTR [rdi],rax
  00a0c:    	mov    QWORD PTR [rbx],rdi
  00a0f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a18:    	mov    QWORD PTR [rsp-0x38],rcx
  00a1d:    	mov    rax,QWORD PTR [rbp-0x38]
  00a21:    	mov    QWORD PTR [rsp-0x38],rax
  00a26: 00 	mov    rdi,0x1
  00a2d:    	mov    rax,QWORD PTR [rbp-0x60]
  00a31:    	mov    QWORD PTR [rsp-0x40],rax
  00a36: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a3f: 00 	movabs rax,0x0
  00a49:    	mov    QWORD PTR [rsp-0x28],rax
  00a4e: 00 	movabs r13,0x0
  00a58:    	call   0xfffecc98
  00a5d:    	lea    rdi,[rbp-0x8]
  00a61:    	mov    QWORD PTR [rbx],rdi
  00a64:    	movq   xmm2,QWORD PTR [rsp]
  00a69:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a6f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a75:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a7b:    	add    rsp,0x20
  00a7f:    	test   rax,rax
  00a82:    	je     0x37410
:00053 
:00055 %8 = const[Vec]                      [<INVALID>]
  00a88: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeed29]        # 0xfffef7b8
  00a8f: 00 	cmp    rax,QWORD PTR [rip+0xfe2]        # 0x1a78
  00a96:    	jne    0x3741f
  00a9c: 00 	mov    rax,QWORD PTR [rip+0xfc5]        # 0x1a68
  00aa3:    	mov    QWORD PTR [rbp-0x68],rax
:00056 %10 = %1.call org()                  [<INVALID>]
  00aa7: 01 	sub    DWORD PTR [rip+0xfd2],0x1        # 0x1a80
  00aae:    	je     0x374b7
  00ab4:    	sub    rsp,0x20
  00ab8:    	movq   QWORD PTR [rsp],xmm2
  00abd:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ac3:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ac9:    	movq   QWORD PTR [rsp+0x18],xmm6
  00acf:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ad3: 31 	movabs rax,0x5631840958d0
  00add:    	call   rax
  00adf:    	mov    r15d,eax
  00ae2: 00 	cmp    r15d,DWORD PTR [rip+0xf9f]        # 0x1a88
  00ae9:    	jne    0x374d9
  00aef:    	mov    eax,DWORD PTR [rip+0xfffffffffffeecbc]        # 0xfffef7b1
  00af5:    	cmp    DWORD PTR [rip+0xf89],eax        # 0x1a84
  00afb:    	jne    0x374d9
  00b01:    	mov    rax,QWORD PTR [rbx]
  00b04:    	lea    rdi,[rsp-0x18]
  00b09:    	mov    QWORD PTR [rdi],rax
  00b0c:    	mov    QWORD PTR [rbx],rdi
  00b0f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b18:    	mov    QWORD PTR [rsp-0x38],rcx
  00b1d:    	mov    rax,QWORD PTR [rbp-0x30]
  00b21:    	mov    QWORD PTR [rsp-0x38],rax
  00b26: 00 	mov    rdi,0x0
  00b2d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b36: 00 	movabs rax,0x0
  00b40:    	mov    QWORD PTR [rsp-0x28],rax
  00b45: 00 	movabs r13,0x0
  00b4f:    	call   0xfffecc98
  00b54:    	lea    rdi,[rbp-0x8]
  00b58:    	mov    QWORD PTR [rbx],rdi
  00b5b:    	movq   xmm2,QWORD PTR [rsp]
  00b60:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b66:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b6c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b72:    	add    rsp,0x20
  00b76:    	test   rax,rax
  00b79:    	je     0x37545
  00b7f:    	mov    QWORD PTR [rbp-0x78],rax
:00057 
:00059 %9 = %10.call x()                    [<INVALID>]
  00b83: 01 	sub    DWORD PTR [rip+0xf02],0x1        # 0x1a8c
  00b8a:    	je     0x37570
  00b90:    	sub    rsp,0x20
  00b94:    	movq   QWORD PTR [rsp],xmm2
  00b99:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b9f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ba5:    	movq   QWORD PTR [rsp+0x18],xmm6
  00bab:    	mov    rdi,QWORD PTR [rbp-0x78]
  00baf: 31 	movabs rax,0x5631840958d0
  00bb9:    	call   rax
  00bbb:    	mov    r15d,eax
  00bbe: 00 	cmp    r15d,DWORD PTR [rip+0xecf]        # 0x1a94
  00bc5:    	jne    0x37592
  00bcb:    	mov    eax,DWORD PTR [rip+0xfffffffffffeebe0]        # 0xfffef7b1
  00bd1:    	cmp    DWORD PTR [rip+0xeb9],eax        # 0x1a90
  00bd7:    	jne    0x37592
  00bdd:    	mov    rax,QWORD PTR [rbx]
  00be0:    	lea    rdi,[rsp-0x18]
  00be5:    	mov    QWORD PTR [rdi],rax
  00be8:    	mov    QWORD PTR [rbx],rdi
  00beb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00bf4:    	mov    QWORD PTR [rsp-0x38],rcx
  00bf9:    	mov    rax,QWORD PTR [rbp-0x78]
  00bfd:    	mov    QWORD PTR [rsp-0x38],rax
  00c02: 00 	mov    rdi,0x0
  00c09: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c12: 00 	movabs rax,0x0
  00c1c:    	mov    QWORD PTR [rsp-0x28],rax
  00c21: 00 	movabs r13,0x0
  00c2b:    	call   0xfffecc98
  00c30:    	lea    rdi,[rbp-0x8]
  00c34:    	mov    QWORD PTR [rbx],rdi
  00c37:    	movq   xmm2,QWORD PTR [rsp]
  00c3c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c42:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c48:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c4e:    	add    rsp,0x20
  00c52:    	test   rax,rax
  00c55:    	je     0x375fe
  00c5b:    	mov    QWORD PTR [rbp-0x70],rax
:00060 
:00062 %11 = %1.call dir()                  [<INVALID>]
  00c5f: 01 	sub    DWORD PTR [rip+0xe32],0x1        # 0x1a98
  00c66:    	je     0x37629
  00c6c:    	sub    rsp,0x20
  00c70:    	movq   QWORD PTR [rsp],xmm2
  00c75:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c7b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c81:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c87:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c8b: 31 	movabs rax,0x5631840958d0
  00c95:    	call   rax
  00c97:    	mov    r15d,eax
  00c9a: 00 	cmp    r15d,DWORD PTR [rip+0xdff]        # 0x1aa0
  00ca1:    	jne    0x3764b
  00ca7:    	mov    eax,DWORD PTR [rip+0xfffffffffffeeb04]        # 0xfffef7b1
  00cad:    	cmp    DWORD PTR [rip+0xde9],eax        # 0x1a9c
  00cb3:    	jne    0x3764b
  00cb9:    	mov    rax,QWORD PTR [rbx]
  00cbc:    	lea    rdi,[rsp-0x18]
  00cc1:    	mov    QWORD PTR [rdi],rax
  00cc4:    	mov    QWORD PTR [rbx],rdi
  00cc7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cd0:    	mov    QWORD PTR [rsp-0x38],rcx
  00cd5:    	mov    rax,QWORD PTR [rbp-0x30]
  00cd9:    	mov    QWORD PTR [rsp-0x38],rax
  00cde: 00 	mov    rdi,0x0
  00ce5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cee: 00 	movabs rax,0x0
  00cf8:    	mov    QWORD PTR [rsp-0x28],rax
  00cfd: 00 	movabs r13,0x0
  00d07:    	call   0xfffecc98
  00d0c:    	lea    rdi,[rbp-0x8]
  00d10:    	mov    QWORD PTR [rbx],rdi
  00d13:    	movq   xmm2,QWORD PTR [rsp]
  00d18:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d1e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d24:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d2a:    	add    rsp,0x20
  00d2e:    	test   rax,rax
  00d31:    	je     0x376b7
  00d37:    	mov    QWORD PTR [rbp-0x80],rax
:00063 
:00065 %10 = %11.call x()                   [<INVALID>]
  00d3b: 01 	sub    DWORD PTR [rip+0xd62],0x1        # 0x1aa4
  00d42:    	je     0x376e2
  00d48:    	sub    rsp,0x20
  00d4c:    	movq   QWORD PTR [rsp],xmm2
  00d51:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d57:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d5d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d63:    	mov    rdi,QWORD PTR [rbp-0x80]
  00d67: 31 	movabs rax,0x5631840958d0
  00d71:    	call   rax
  00d73:    	mov    r15d,eax
  00d76: 00 	cmp    r15d,DWORD PTR [rip+0xd2f]        # 0x1aac
  00d7d:    	jne    0x37704
  00d83:    	mov    eax,DWORD PTR [rip+0xfffffffffffeea28]        # 0xfffef7b1
  00d89:    	cmp    DWORD PTR [rip+0xd19],eax        # 0x1aa8
  00d8f:    	jne    0x37704
  00d95:    	mov    rax,QWORD PTR [rbx]
  00d98:    	lea    rdi,[rsp-0x18]
  00d9d:    	mov    QWORD PTR [rdi],rax
  00da0:    	mov    QWORD PTR [rbx],rdi
  00da3: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00dac:    	mov    QWORD PTR [rsp-0x38],rcx
  00db1:    	mov    rax,QWORD PTR [rbp-0x80]
  00db5:    	mov    QWORD PTR [rsp-0x38],rax
  00dba: 00 	mov    rdi,0x0
  00dc1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00dca: 00 	movabs rax,0x0
  00dd4:    	mov    QWORD PTR [rsp-0x28],rax
  00dd9: 00 	movabs r13,0x0
  00de3:    	call   0xfffecc98
  00de8:    	lea    rdi,[rbp-0x8]
  00dec:    	mov    QWORD PTR [rbx],rdi
  00def:    	movq   xmm2,QWORD PTR [rsp]
  00df4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00dfa:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e00:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e06:    	add    rsp,0x20
  00e0a:    	test   rax,rax
  00e0d:    	je     0x37770
  00e13:    	mov    QWORD PTR [rbp-0x78],rax
:00066 
:00068 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00e17: 01 	sub    DWORD PTR [rip+0xc92],0x1        # 0x1ab0
  00e1e:    	je     0x3779b
  00e24:    	mov    rdi,QWORD PTR [rbp-0x58]
  00e28:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e2c:    	sub    rsp,0x20
  00e30:    	movq   QWORD PTR [rsp],xmm2
  00e35:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e3b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e41:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e47:    	mov    rdx,rdi
  00e4a:    	mov    rcx,rsi
  00e4d:    	mov    rdi,rbx
  00e50:    	mov    rsi,r12
  00e53: 31 	movabs rax,0x563184089e00
  00e5d:    	call   rax
  00e5f:    	movq   xmm2,QWORD PTR [rsp]
  00e64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e6a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e70:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e76:    	add    rsp,0x20
  00e7a: 31 	movabs r13,0x563184c876f0
  00e84:    	test   rax,rax
  00e87:    	je     0xfffeccd3
  00e8d:    	mov    QWORD PTR [rbp-0x78],rax
:00069 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00e91: 01 	sub    DWORD PTR [rip+0xc1c],0x1        # 0x1ab4
  00e98:    	je     0x377d9
  00e9e:    	mov    rdi,QWORD PTR [rbp-0x70]
  00ea2:    	mov    rsi,QWORD PTR [rbp-0x78]
  00ea6:    	sub    rsp,0x20
  00eaa:    	movq   QWORD PTR [rsp],xmm2
  00eaf:    	movq   QWORD PTR [rsp+0x8],xmm4
  00eb5:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ebb:    	movq   QWORD PTR [rsp+0x18],xmm6
  00ec1:    	mov    rdx,rdi
  00ec4:    	mov    rcx,rsi
  00ec7:    	mov    rdi,rbx
  00eca:    	mov    rsi,r12
  00ecd: 31 	movabs rax,0x563184087f80
  00ed7:    	call   rax
  00ed9:    	movq   xmm2,QWORD PTR [rsp]
  00ede:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ee4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00eea:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ef0:    	add    rsp,0x20
  00ef4: 31 	movabs r13,0x563184c87700
  00efe:    	test   rax,rax
  00f01:    	je     0xfffeccd3
  00f07:    	mov    QWORD PTR [rbp-0x70],rax
:00070 %11 = %1.call org()                  [<INVALID>]
  00f0b: 01 	sub    DWORD PTR [rip+0xba6],0x1        # 0x1ab8
  00f12:    	je     0x37817
  00f18:    	sub    rsp,0x20
  00f1c:    	movq   QWORD PTR [rsp],xmm2
  00f21:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f27:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f2d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f33:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f37: 31 	movabs rax,0x5631840958d0
  00f41:    	call   rax
  00f43:    	mov    r15d,eax
  00f46: 00 	cmp    r15d,DWORD PTR [rip+0xb73]        # 0x1ac0
  00f4d:    	jne    0x37839
  00f53:    	mov    eax,DWORD PTR [rip+0xfffffffffffee858]        # 0xfffef7b1
  00f59:    	cmp    DWORD PTR [rip+0xb5d],eax        # 0x1abc
  00f5f:    	jne    0x37839
  00f65:    	mov    rax,QWORD PTR [rbx]
  00f68:    	lea    rdi,[rsp-0x18]
  00f6d:    	mov    QWORD PTR [rdi],rax
  00f70:    	mov    QWORD PTR [rbx],rdi
  00f73: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f7c:    	mov    QWORD PTR [rsp-0x38],rcx
  00f81:    	mov    rax,QWORD PTR [rbp-0x30]
  00f85:    	mov    QWORD PTR [rsp-0x38],rax
  00f8a: 00 	mov    rdi,0x0
  00f91: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f9a: 00 	movabs rax,0x0
  00fa4:    	mov    QWORD PTR [rsp-0x28],rax
  00fa9: 00 	movabs r13,0x0
  00fb3:    	call   0xfffecc98
  00fb8:    	lea    rdi,[rbp-0x8]
  00fbc:    	mov    QWORD PTR [rbx],rdi
  00fbf:    	movq   xmm2,QWORD PTR [rsp]
  00fc4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fca:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00fd0:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00fd6:    	add    rsp,0x20
  00fda:    	test   rax,rax
  00fdd:    	je     0x378a5
  00fe3:    	mov    QWORD PTR [rbp-0x80],rax
:00071 
:00073 %10 = %11.call y()                   [<INVALID>]
  00fe7: 01 	sub    DWORD PTR [rip+0xad6],0x1        # 0x1ac4
  00fee:    	je     0x378d0
  00ff4:    	sub    rsp,0x20
  00ff8:    	movq   QWORD PTR [rsp],xmm2
  00ffd:    	movq   QWORD PTR [rsp+0x8],xmm4
  01003:    	movq   QWORD PTR [rsp+0x10],xmm5
  01009:    	movq   QWORD PTR [rsp+0x18],xmm6
  0100f:    	mov    rdi,QWORD PTR [rbp-0x80]
  01013: 31 	movabs rax,0x5631840958d0
  0101d:    	call   rax
  0101f:    	mov    r15d,eax
  01022: 00 	cmp    r15d,DWORD PTR [rip+0xaa3]        # 0x1acc
  01029:    	jne    0x378f2
  0102f:    	mov    eax,DWORD PTR [rip+0xfffffffffffee77c]        # 0xfffef7b1
  01035:    	cmp    DWORD PTR [rip+0xa8d],eax        # 0x1ac8
  0103b:    	jne    0x378f2
  01041:    	mov    rax,QWORD PTR [rbx]
  01044:    	lea    rdi,[rsp-0x18]
  01049:    	mov    QWORD PTR [rdi],rax
  0104c:    	mov    QWORD PTR [rbx],rdi
  0104f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01058:    	mov    QWORD PTR [rsp-0x38],rcx
  0105d:    	mov    rax,QWORD PTR [rbp-0x80]
  01061:    	mov    QWORD PTR [rsp-0x38],rax
  01066: 00 	mov    rdi,0x0
  0106d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01076: 00 	movabs rax,0x0
  01080:    	mov    QWORD PTR [rsp-0x28],rax
  01085: 00 	movabs r13,0x0
  0108f:    	call   0xfffecc98
  01094:    	lea    rdi,[rbp-0x8]
  01098:    	mov    QWORD PTR [rbx],rdi
  0109b:    	movq   xmm2,QWORD PTR [rsp]
  010a0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010a6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010ac:    	movq   xmm6,QWORD PTR [rsp+0x18]
  010b2:    	add    rsp,0x20
  010b6:    	test   rax,rax
  010b9:    	je     0x3795e
  010bf:    	mov    QWORD PTR [rbp-0x78],rax
:00074 
:00076 %12 = %1.call dir()                  [<INVALID>]
  010c3: 01 	sub    DWORD PTR [rip+0xa06],0x1        # 0x1ad0
  010ca:    	je     0x37989
  010d0:    	sub    rsp,0x20
  010d4:    	movq   QWORD PTR [rsp],xmm2
  010d9:    	movq   QWORD PTR [rsp+0x8],xmm4
  010df:    	movq   QWORD PTR [rsp+0x10],xmm5
  010e5:    	movq   QWORD PTR [rsp+0x18],xmm6
  010eb:    	mov    rdi,QWORD PTR [rbp-0x30]
  010ef: 31 	movabs rax,0x5631840958d0
  010f9:    	call   rax
  010fb:    	mov    r15d,eax
  010fe: 00 	cmp    r15d,DWORD PTR [rip+0x9d3]        # 0x1ad8
  01105:    	jne    0x379ab
  0110b:    	mov    eax,DWORD PTR [rip+0xfffffffffffee6a0]        # 0xfffef7b1
  01111:    	cmp    DWORD PTR [rip+0x9bd],eax        # 0x1ad4
  01117:    	jne    0x379ab
  0111d:    	mov    rax,QWORD PTR [rbx]
  01120:    	lea    rdi,[rsp-0x18]
  01125:    	mov    QWORD PTR [rdi],rax
  01128:    	mov    QWORD PTR [rbx],rdi
  0112b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01134:    	mov    QWORD PTR [rsp-0x38],rcx
  01139:    	mov    rax,QWORD PTR [rbp-0x30]
  0113d:    	mov    QWORD PTR [rsp-0x38],rax
  01142: 00 	mov    rdi,0x0
  01149: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01152: 00 	movabs rax,0x0
  0115c:    	mov    QWORD PTR [rsp-0x28],rax
  01161: 00 	movabs r13,0x0
  0116b:    	call   0xfffecc98
  01170:    	lea    rdi,[rbp-0x8]
  01174:    	mov    QWORD PTR [rbx],rdi
  01177:    	movq   xmm2,QWORD PTR [rsp]
  0117c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01182:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01188:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0118e:    	add    rsp,0x20
  01192:    	test   rax,rax
  01195:    	je     0x37a17
  0119b: ff 	mov    QWORD PTR [rbp-0x88],rax
:00077 
:00079 %11 = %12.call y()                   [<INVALID>]
  011a2: 01 	sub    DWORD PTR [rip+0x933],0x1        # 0x1adc
  011a9:    	je     0x37a42
  011af:    	sub    rsp,0x20
  011b3:    	movq   QWORD PTR [rsp],xmm2
  011b8:    	movq   QWORD PTR [rsp+0x8],xmm4
  011be:    	movq   QWORD PTR [rsp+0x10],xmm5
  011c4:    	movq   QWORD PTR [rsp+0x18],xmm6
  011ca: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  011d1: 31 	movabs rax,0x5631840958d0
  011db:    	call   rax
  011dd:    	mov    r15d,eax
  011e0: 00 	cmp    r15d,DWORD PTR [rip+0x8fd]        # 0x1ae4
  011e7:    	jne    0x37a64
  011ed:    	mov    eax,DWORD PTR [rip+0xfffffffffffee5be]        # 0xfffef7b1
  011f3:    	cmp    DWORD PTR [rip+0x8e7],eax        # 0x1ae0
  011f9:    	jne    0x37a64
  011ff:    	mov    rax,QWORD PTR [rbx]
  01202:    	lea    rdi,[rsp-0x18]
  01207:    	mov    QWORD PTR [rdi],rax
  0120a:    	mov    QWORD PTR [rbx],rdi
  0120d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01216:    	mov    QWORD PTR [rsp-0x38],rcx
  0121b: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01222:    	mov    QWORD PTR [rsp-0x38],rax
  01227: 00 	mov    rdi,0x0
  0122e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01237: 00 	movabs rax,0x0
  01241:    	mov    QWORD PTR [rsp-0x28],rax
  01246: 00 	movabs r13,0x0
  01250:    	call   0xfffecc98
  01255:    	lea    rdi,[rbp-0x8]
  01259:    	mov    QWORD PTR [rbx],rdi
  0125c:    	movq   xmm2,QWORD PTR [rsp]
  01261:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01267:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0126d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01273:    	add    rsp,0x20
  01277:    	test   rax,rax
  0127a:    	je     0x37ad3
  01280:    	mov    QWORD PTR [rbp-0x80],rax
:00080 
:00082 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  01284: 01 	sub    DWORD PTR [rip+0x85d],0x1        # 0x1ae8
  0128b:    	je     0x37afe
  01291:    	mov    rdi,QWORD PTR [rbp-0x58]
  01295:    	mov    rsi,QWORD PTR [rbp-0x80]
  01299:    	sub    rsp,0x20
  0129d:    	movq   QWORD PTR [rsp],xmm2
  012a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  012a8:    	movq   QWORD PTR [rsp+0x10],xmm5
  012ae:    	movq   QWORD PTR [rsp+0x18],xmm6
  012b4:    	mov    rdx,rdi
  012b7:    	mov    rcx,rsi
  012ba:    	mov    rdi,rbx
  012bd:    	mov    rsi,r12
  012c0: 31 	movabs rax,0x563184089e00
  012ca:    	call   rax
  012cc:    	movq   xmm2,QWORD PTR [rsp]
  012d1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012d7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012dd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012e3:    	add    rsp,0x20
  012e7: 31 	movabs r13,0x563184c877d0
  012f1:    	test   rax,rax
  012f4:    	je     0xfffeccd3
  012fa:    	mov    QWORD PTR [rbp-0x80],rax
:00083 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  012fe: 01 	sub    DWORD PTR [rip+0x7e7],0x1        # 0x1aec
  01305:    	je     0x37b3c
  0130b:    	mov    rdi,QWORD PTR [rbp-0x78]
  0130f:    	mov    rsi,QWORD PTR [rbp-0x80]
  01313:    	sub    rsp,0x20
  01317:    	movq   QWORD PTR [rsp],xmm2
  0131c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01322:    	movq   QWORD PTR [rsp+0x10],xmm5
  01328:    	movq   QWORD PTR [rsp+0x18],xmm6
  0132e:    	mov    rdx,rdi
  01331:    	mov    rcx,rsi
  01334:    	mov    rdi,rbx
  01337:    	mov    rsi,r12
  0133a: 31 	movabs rax,0x563184087f80
  01344:    	call   rax
  01346:    	movq   xmm2,QWORD PTR [rsp]
  0134b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01351:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01357:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0135d:    	add    rsp,0x20
  01361: 31 	movabs r13,0x563184c877e0
  0136b:    	test   rax,rax
  0136e:    	je     0xfffeccd3
  01374:    	mov    QWORD PTR [rbp-0x78],rax
:00084 %12 = %1.call org()                  [<INVALID>]
  01378: 01 	sub    DWORD PTR [rip+0x771],0x1        # 0x1af0
  0137f:    	je     0x37b7a
  01385:    	sub    rsp,0x20
  01389:    	movq   QWORD PTR [rsp],xmm2
  0138e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01394:    	movq   QWORD PTR [rsp+0x10],xmm5
  0139a:    	movq   QWORD PTR [rsp+0x18],xmm6
  013a0:    	mov    rdi,QWORD PTR [rbp-0x30]
  013a4: 31 	movabs rax,0x5631840958d0
  013ae:    	call   rax
  013b0:    	mov    r15d,eax
  013b3: 00 	cmp    r15d,DWORD PTR [rip+0x73e]        # 0x1af8
  013ba:    	jne    0x37b9c
  013c0:    	mov    eax,DWORD PTR [rip+0xfffffffffffee3eb]        # 0xfffef7b1
  013c6:    	cmp    DWORD PTR [rip+0x728],eax        # 0x1af4
  013cc:    	jne    0x37b9c
  013d2:    	mov    rax,QWORD PTR [rbx]
  013d5:    	lea    rdi,[rsp-0x18]
  013da:    	mov    QWORD PTR [rdi],rax
  013dd:    	mov    QWORD PTR [rbx],rdi
  013e0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013e9:    	mov    QWORD PTR [rsp-0x38],rcx
  013ee:    	mov    rax,QWORD PTR [rbp-0x30]
  013f2:    	mov    QWORD PTR [rsp-0x38],rax
  013f7: 00 	mov    rdi,0x0
  013fe: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01407: 00 	movabs rax,0x0
  01411:    	mov    QWORD PTR [rsp-0x28],rax
  01416: 00 	movabs r13,0x0
  01420:    	call   0xfffecc98
  01425:    	lea    rdi,[rbp-0x8]
  01429:    	mov    QWORD PTR [rbx],rdi
  0142c:    	movq   xmm2,QWORD PTR [rsp]
  01431:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01437:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0143d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01443:    	add    rsp,0x20
  01447:    	test   rax,rax
  0144a:    	je     0x37c08
  01450: ff 	mov    QWORD PTR [rbp-0x88],rax
:00085 
:00087 %11 = %12.call z()                   [<INVALID>]
  01457: 01 	sub    DWORD PTR [rip+0x69e],0x1        # 0x1afc
  0145e:    	je     0x37c33
  01464:    	sub    rsp,0x20
  01468:    	movq   QWORD PTR [rsp],xmm2
  0146d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01473:    	movq   QWORD PTR [rsp+0x10],xmm5
  01479:    	movq   QWORD PTR [rsp+0x18],xmm6
  0147f: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01486: 31 	movabs rax,0x5631840958d0
  01490:    	call   rax
  01492:    	mov    r15d,eax
  01495: 00 	cmp    r15d,DWORD PTR [rip+0x668]        # 0x1b04
  0149c:    	jne    0x37c55
  014a2:    	mov    eax,DWORD PTR [rip+0xfffffffffffee309]        # 0xfffef7b1
  014a8:    	cmp    DWORD PTR [rip+0x652],eax        # 0x1b00
  014ae:    	jne    0x37c55
  014b4:    	mov    rax,QWORD PTR [rbx]
  014b7:    	lea    rdi,[rsp-0x18]
  014bc:    	mov    QWORD PTR [rdi],rax
  014bf:    	mov    QWORD PTR [rbx],rdi
  014c2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014cb:    	mov    QWORD PTR [rsp-0x38],rcx
  014d0: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014d7:    	mov    QWORD PTR [rsp-0x38],rax
  014dc: 00 	mov    rdi,0x0
  014e3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014ec: 00 	movabs rax,0x0
  014f6:    	mov    QWORD PTR [rsp-0x28],rax
  014fb: 00 	movabs r13,0x0
  01505:    	call   0xfffecc98
  0150a:    	lea    rdi,[rbp-0x8]
  0150e:    	mov    QWORD PTR [rbx],rdi
  01511:    	movq   xmm2,QWORD PTR [rsp]
  01516:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0151c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01522:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01528:    	add    rsp,0x20
  0152c:    	test   rax,rax
  0152f:    	je     0x37cc4
  01535:    	mov    QWORD PTR [rbp-0x80],rax
:00088 
:00090 %13 = %1.call dir()                  [<INVALID>]
  01539: 01 	sub    DWORD PTR [rip+0x5c8],0x1        # 0x1b08
  01540:    	je     0x37cef
  01546:    	sub    rsp,0x20
  0154a:    	movq   QWORD PTR [rsp],xmm2
  0154f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01555:    	movq   QWORD PTR [rsp+0x10],xmm5
  0155b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01561:    	mov    rdi,QWORD PTR [rbp-0x30]
  01565: 31 	movabs rax,0x5631840958d0
  0156f:    	call   rax
  01571:    	mov    r15d,eax
  01574: 00 	cmp    r15d,DWORD PTR [rip+0x595]        # 0x1b10
  0157b:    	jne    0x37d11
  01581:    	mov    eax,DWORD PTR [rip+0xfffffffffffee22a]        # 0xfffef7b1
  01587:    	cmp    DWORD PTR [rip+0x57f],eax        # 0x1b0c
  0158d:    	jne    0x37d11
  01593:    	mov    rax,QWORD PTR [rbx]
  01596:    	lea    rdi,[rsp-0x18]
  0159b:    	mov    QWORD PTR [rdi],rax
  0159e:    	mov    QWORD PTR [rbx],rdi
  015a1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015aa:    	mov    QWORD PTR [rsp-0x38],rcx
  015af:    	mov    rax,QWORD PTR [rbp-0x30]
  015b3:    	mov    QWORD PTR [rsp-0x38],rax
  015b8: 00 	mov    rdi,0x0
  015bf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015c8: 00 	movabs rax,0x0
  015d2:    	mov    QWORD PTR [rsp-0x28],rax
  015d7: 00 	movabs r13,0x0
  015e1:    	call   0xfffecc98
  015e6:    	lea    rdi,[rbp-0x8]
  015ea:    	mov    QWORD PTR [rbx],rdi
  015ed:    	movq   xmm2,QWORD PTR [rsp]
  015f2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015f8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  015fe:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01604:    	add    rsp,0x20
  01608:    	test   rax,rax
  0160b:    	je     0x37d7d
  01611: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %12 = %13.call z()                   [<INVALID>]
  01618: 01 	sub    DWORD PTR [rip+0x4f5],0x1        # 0x1b14
  0161f:    	je     0x37da8
  01625:    	sub    rsp,0x20
  01629:    	movq   QWORD PTR [rsp],xmm2
  0162e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01634:    	movq   QWORD PTR [rsp+0x10],xmm5
  0163a:    	movq   QWORD PTR [rsp+0x18],xmm6
  01640: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01647: 31 	movabs rax,0x5631840958d0
  01651:    	call   rax
  01653:    	mov    r15d,eax
  01656: 00 	cmp    r15d,DWORD PTR [rip+0x4bf]        # 0x1b1c
  0165d:    	jne    0x37dca
  01663:    	mov    eax,DWORD PTR [rip+0xfffffffffffee148]        # 0xfffef7b1
  01669:    	cmp    DWORD PTR [rip+0x4a9],eax        # 0x1b18
  0166f:    	jne    0x37dca
  01675:    	mov    rax,QWORD PTR [rbx]
  01678:    	lea    rdi,[rsp-0x18]
  0167d:    	mov    QWORD PTR [rdi],rax
  01680:    	mov    QWORD PTR [rbx],rdi
  01683: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0168c:    	mov    QWORD PTR [rsp-0x38],rcx
  01691: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01698:    	mov    QWORD PTR [rsp-0x38],rax
  0169d: 00 	mov    rdi,0x0
  016a4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016ad: 00 	movabs rax,0x0
  016b7:    	mov    QWORD PTR [rsp-0x28],rax
  016bc: 00 	movabs r13,0x0
  016c6:    	call   0xfffecc98
  016cb:    	lea    rdi,[rbp-0x8]
  016cf:    	mov    QWORD PTR [rbx],rdi
  016d2:    	movq   xmm2,QWORD PTR [rsp]
  016d7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016dd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  016e3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  016e9:    	add    rsp,0x20
  016ed:    	test   rax,rax
  016f0:    	je     0x37e39
  016f6: ff 	mov    QWORD PTR [rbp-0x88],rax
:00094 
:00096 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  016fd: 01 	sub    DWORD PTR [rip+0x41c],0x1        # 0x1b20
  01704:    	je     0x37e64
  0170a:    	mov    rdi,QWORD PTR [rbp-0x58]
  0170e: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  01715:    	sub    rsp,0x20
  01719:    	movq   QWORD PTR [rsp],xmm2
  0171e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01724:    	movq   QWORD PTR [rsp+0x10],xmm5
  0172a:    	movq   QWORD PTR [rsp+0x18],xmm6
  01730:    	mov    rdx,rdi
  01733:    	mov    rcx,rsi
  01736:    	mov    rdi,rbx
  01739:    	mov    rsi,r12
  0173c: 31 	movabs rax,0x563184089e00
  01746:    	call   rax
  01748:    	movq   xmm2,QWORD PTR [rsp]
  0174d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01753:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01759:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0175f:    	add    rsp,0x20
  01763: 31 	movabs r13,0x563184c878b0
  0176d:    	test   rax,rax
  01770:    	je     0xfffeccd3
  01776: ff 	mov    QWORD PTR [rbp-0x88],rax
:00097 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  0177d: 01 	sub    DWORD PTR [rip+0x3a0],0x1        # 0x1b24
  01784:    	je     0x37ea2
  0178a:    	mov    rdi,QWORD PTR [rbp-0x80]
  0178e: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  01795:    	sub    rsp,0x20
  01799:    	movq   QWORD PTR [rsp],xmm2
  0179e:    	movq   QWORD PTR [rsp+0x8],xmm4
  017a4:    	movq   QWORD PTR [rsp+0x10],xmm5
  017aa:    	movq   QWORD PTR [rsp+0x18],xmm6
  017b0:    	mov    rdx,rdi
  017b3:    	mov    rcx,rsi
  017b6:    	mov    rdi,rbx
  017b9:    	mov    rsi,r12
  017bc: 31 	movabs rax,0x563184087f80
  017c6:    	call   rax
  017c8:    	movq   xmm2,QWORD PTR [rsp]
  017cd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017d3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017d9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  017df:    	add    rsp,0x20
  017e3: 31 	movabs r13,0x563184c878c0
  017ed:    	test   rax,rax
  017f0:    	je     0xfffeccd3
  017f6:    	mov    QWORD PTR [rbp-0x80],rax
:00098 %7 = %8.call new(%9; 3)              [<INVALID>]
  017fa: 01 	sub    DWORD PTR [rip+0x327],0x1        # 0x1b28
  01801:    	je     0x37ee0
  01807:    	sub    rsp,0x20
  0180b:    	movq   QWORD PTR [rsp],xmm2
  01810:    	movq   QWORD PTR [rsp+0x8],xmm4
  01816:    	movq   QWORD PTR [rsp+0x10],xmm5
  0181c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01822:    	mov    rdi,QWORD PTR [rbp-0x68]
  01826: 31 	movabs rax,0x5631840958d0
  01830:    	call   rax
  01832:    	mov    r15d,eax
  01835: 00 	cmp    r15d,DWORD PTR [rip+0x2f4]        # 0x1b30
  0183c:    	jne    0x37f02
  01842:    	mov    eax,DWORD PTR [rip+0xfffffffffffedf69]        # 0xfffef7b1
  01848:    	cmp    DWORD PTR [rip+0x2de],eax        # 0x1b2c
  0184e:    	jne    0x37f02
  01854:    	mov    rax,QWORD PTR [rbx]
  01857:    	lea    rdi,[rsp-0x18]
  0185c:    	mov    QWORD PTR [rdi],rax
  0185f:    	mov    QWORD PTR [rbx],rdi
  01862: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0186b:    	mov    QWORD PTR [rsp-0x38],rcx
  01870:    	mov    rax,QWORD PTR [rbp-0x68]
  01874:    	mov    QWORD PTR [rsp-0x38],rax
  01879: 00 	mov    rdi,0x3
  01880:    	mov    rax,QWORD PTR [rbp-0x70]
  01884:    	mov    QWORD PTR [rsp-0x40],rax
  01889:    	mov    rax,QWORD PTR [rbp-0x78]
  0188d:    	mov    QWORD PTR [rsp-0x48],rax
  01892:    	mov    rax,QWORD PTR [rbp-0x80]
  01896:    	mov    QWORD PTR [rsp-0x50],rax
  0189b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018a4: 00 	movabs rax,0x0
  018ae:    	mov    QWORD PTR [rsp-0x28],rax
  018b3: 00 	movabs r13,0x0
  018bd:    	call   0xfffecc98
  018c2:    	lea    rdi,[rbp-0x8]
  018c6:    	mov    QWORD PTR [rbx],rdi
  018c9:    	movq   xmm2,QWORD PTR [rsp]
  018ce:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018d4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018da:    	movq   xmm6,QWORD PTR [rsp+0x18]
  018e0:    	add    rsp,0x20
  018e4:    	test   rax,rax
  018e7:    	je     0x37f6e
  018ed:    	mov    QWORD PTR [rbp-0x60],rax
:00099 
:00101 _ = %2.call pl=(%7; 1)               [<INVALID>]
  018f1: 01 	sub    DWORD PTR [rip+0x23c],0x1        # 0x1b34
  018f8:    	je     0x37f99
  018fe:    	sub    rsp,0x20
  01902:    	movq   QWORD PTR [rsp],xmm2
  01907:    	movq   QWORD PTR [rsp+0x8],xmm4
  0190d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01913:    	movq   QWORD PTR [rsp+0x18],xmm6
  01919:    	mov    rdi,QWORD PTR [rbp-0x38]
  0191d: 31 	movabs rax,0x5631840958d0
  01927:    	call   rax
  01929:    	mov    r15d,eax
  0192c: 00 	cmp    r15d,DWORD PTR [rip+0x209]        # 0x1b3c
  01933:    	jne    0x37fbb
  01939:    	mov    eax,DWORD PTR [rip+0xfffffffffffede72]        # 0xfffef7b1
  0193f:    	cmp    DWORD PTR [rip+0x1f3],eax        # 0x1b38
  01945:    	jne    0x37fbb
  0194b:    	mov    rax,QWORD PTR [rbx]
  0194e:    	lea    rdi,[rsp-0x18]
  01953:    	mov    QWORD PTR [rdi],rax
  01956:    	mov    QWORD PTR [rbx],rdi
  01959: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01962:    	mov    QWORD PTR [rsp-0x38],rcx
  01967:    	mov    rax,QWORD PTR [rbp-0x38]
  0196b:    	mov    QWORD PTR [rsp-0x38],rax
  01970: 00 	mov    rdi,0x1
  01977:    	mov    rax,QWORD PTR [rbp-0x60]
  0197b:    	mov    QWORD PTR [rsp-0x40],rax
  01980: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01989: 00 	movabs rax,0x0
  01993:    	mov    QWORD PTR [rsp-0x28],rax
  01998: 00 	movabs r13,0x0
  019a2:    	call   0xfffecc98
  019a7:    	lea    rdi,[rbp-0x8]
  019ab:    	mov    QWORD PTR [rbx],rdi
  019ae:    	movq   xmm2,QWORD PTR [rsp]
  019b3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019b9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  019bf:    	movq   xmm6,QWORD PTR [rsp+0x18]
  019c5:    	add    rsp,0x20
  019c9:    	test   rax,rax
  019cc:    	je     0x38027
:00102 
:00104 br =>:00105
  019d2:    	jmp    0x3808f
:00105 %7 = nil
  019d7: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00106 ret %7
  019df:    	mov    rax,QWORD PTR [rbp-0x60]
  019e3:    	leave  
  019e4:    	ret    
==> start whole compile: <unnamed> FuncId(79) self_class:Scene start:[00000] bytecode:0x563184c7dcd0
<== finished compile. elapsed:198.4µs
offset:Pos(85672) code: 9133 bytes  data: 419 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00061: 00 	test   rdi,0x7
  00068:    	jne    0x36575
  0006e:    	cmp    DWORD PTR [rdi+0x4],0x32
  00072:    	jne    0x36575
:00000 %13 = %0.call rand()                 [Scene]
  00078:    	mov    rdi,QWORD PTR [rbp-0x28]
  0007c: 26 	cmp    DWORD PTR [rip+0xfffffffffffedbee],0x26        # 0xfffedc71
  00083:    	jne    0x36584
  00089: 00 	mov    r9,0x0
  00090:    	mov    rdx,rdi
  00093:    	mov    rax,QWORD PTR [rbx]
  00096:    	lea    rdi,[rsp-0x18]
  0009b:    	mov    QWORD PTR [rdi],rax
  0009e:    	mov    QWORD PTR [rbx],rdi
  000a1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000aa:    	mov    QWORD PTR [rsp-0x38],rcx
  000af: ff 	lea    rcx,[rbp-0x98]
  000b6: 00 	mov    r8,0x0
  000bd:    	call   0x36593
  000c2:    	lea    rdi,[rbp-0x8]
  000c6:    	mov    QWORD PTR [rbx],rdi
  000c9: 31 	movabs r13,0x563184c7dcf0
  000d3:    	test   rax,rax
  000d6:    	je     0xfffeb193
  000dc: ff 	mov    QWORD PTR [rbp-0x90],rax
:00001 
:00003 %2 = %13
  000e3: ff 	mov    rax,QWORD PTR [rbp-0x90]
  000ea:    	mov    QWORD PTR [rbp-0x38],rax
:00004 %13 = literal[2.0]
  000ee: 00 	movq   xmm2,QWORD PTR [rip+0x22c2]        # 0x23b8
  000f6: 00 	mov    rax,0x2
  000fd: ff 	mov    QWORD PTR [rbp-0x90],rax
:00005 %14 = literal[3.14159265]
  00104: 00 	movq   xmm3,QWORD PTR [rip+0x22bc]        # 0x23c8
  0010c: da 	movabs rax,0x490fda9e46a78a
  00116: ff 	mov    QWORD PTR [rbp-0x98],rax
:00006 %13 = %13 * %14                      [Float][Float]
  0011d:    	mulsd  xmm2,xmm3
:00007 %14 = %0.call rand()                 [Scene]
  00121:    	mov    rdi,QWORD PTR [rbp-0x28]
  00125: 26 	cmp    DWORD PTR [rip+0xfffffffffffedb45],0x26        # 0xfffedc71
  0012c:    	jne    0x365c5
  00132: 00 	mov    r9,0x0
  00139:    	sub    rsp,0x10
  0013d:    	movq   QWORD PTR [rsp],xmm2
  00142:    	mov    rdx,rdi
  00145:    	mov    rax,QWORD PTR [rbx]
  00148:    	lea    rdi,[rsp-0x18]
  0014d:    	mov    QWORD PTR [rdi],rax
  00150:    	mov    QWORD PTR [rbx],rdi
  00153: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0015c:    	mov    QWORD PTR [rsp-0x38],rcx
  00161: ff 	lea    rcx,[rbp-0xa0]
  00168: 00 	mov    r8,0x0
  0016f:    	call   0x365e4
  00174:    	lea    rdi,[rbp-0x8]
  00178:    	mov    QWORD PTR [rbx],rdi
  0017b:    	movq   xmm2,QWORD PTR [rsp]
  00180:    	add    rsp,0x10
  00184: 31 	movabs r13,0x563184c7dd60
  0018e:    	test   rax,rax
  00191:    	je     0xfffeb193
  00197: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 
:00010 %3 = %13 * %14                       [Float][Float]
  0019e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001a5: 00 	test   rdi,0x1
  001ac:    	jne    0x36616
  001b2: 00 	test   rdi,0x2
  001b9:    	je     0x1f5
  001bf:    	xorps  xmm3,xmm3
  001c2: 00 	movabs rax,0x8000000000000002
  001cc:    	cmp    rdi,rax
  001cf:    	je     0x207
  001d5:    	mov    rax,rdi
  001d8:    	sar    rax,0x3f
  001dc:    	add    rax,0x2
  001e0:    	and    rdi,0xfffffffffffffffc
  001e4:    	or     rdi,rax
  001e7:    	rol    rdi,0x3d
  001eb:    	movq   xmm3,rdi
  001f0:    	jmp    0x207
  001f5:    	call   0xfffeb1cc
  001fa:    	test   rax,rax
  001fd:    	je     0x36616
  00203:    	movq   xmm3,xmm0
  00207:    	movq   xmm4,xmm2
  0020b:    	mulsd  xmm4,xmm3
:00011 %14 = const[Math]                    [Math]
  0020f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeda62]        # 0xfffedc78
  00216: 00 	cmp    rax,QWORD PTR [rip+0x21cb]        # 0x23e8
  0021d:    	jne    0x36635
  00223: 00 	mov    rax,QWORD PTR [rip+0x21ae]        # 0x23d8
  0022a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %15 = %3
:00013 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
  00231: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00238: 00 	test   rdi,0x7
  0023f:    	jne    0x36699
  00245:    	cmp    DWORD PTR [rdi+0x4],0x21
  00249:    	jne    0x36699
  0024f: 26 	cmp    DWORD PTR [rip+0xfffffffffffeda1b],0x26        # 0xfffedc71
  00256:    	jne    0x36699
  0025c:    	sub    rsp,0x10
  00260:    	movq   QWORD PTR [rsp],xmm2
  00265:    	movq   QWORD PTR [rsp+0x8],xmm4
  0026b:    	movq   xmm0,xmm4
  0026f: 31 	movabs rax,0x56318409be40
  00279:    	call   rax
  0027b:    	movq   xmm2,QWORD PTR [rsp]
  00280:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00286:    	add    rsp,0x10
  0028a:    	movq   xmm2,xmm0
:00014 
:00016 %15 = const[Math]                    [Math]
  0028e: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffed9e3]        # 0xfffedc78
  00295: 00 	cmp    rax,QWORD PTR [rip+0x216c]        # 0x2408
  0029c:    	jne    0x366bc
  002a2: 00 	mov    rax,QWORD PTR [rip+0x214f]        # 0x23f8
  002a9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00017 %16 = literal[1.0]
  002b0: 00 	movq   xmm3,QWORD PTR [rip+0x2160]        # 0x2418
  002b8: 00 	movabs rax,0xff80000000000002
  002c2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00018 %16 = %16 - %2                       [Float][Float]
  002c9:    	mov    rdi,QWORD PTR [rbp-0x38]
  002cd: 00 	test   rdi,0x1
  002d4:    	jne    0x36720
  002da: 00 	test   rdi,0x2
  002e1:    	je     0x31d
  002e7:    	xorps  xmm5,xmm5
  002ea: 00 	movabs rax,0x8000000000000002
  002f4:    	cmp    rdi,rax
  002f7:    	je     0x32f
  002fd:    	mov    rax,rdi
  00300:    	sar    rax,0x3f
  00304:    	add    rax,0x2
  00308:    	and    rdi,0xfffffffffffffffc
  0030c:    	or     rdi,rax
  0030f:    	rol    rdi,0x3d
  00313:    	movq   xmm5,rdi
  00318:    	jmp    0x32f
  0031d:    	call   0xfffeb1cc
  00322:    	test   rax,rax
  00325:    	je     0x36720
  0032b:    	movq   xmm5,xmm0
  0032f:    	subsd  xmm3,xmm5
:00019 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  00333: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0033a: 00 	test   rdi,0x7
  00341:    	jne    0x3674c
  00347:    	cmp    DWORD PTR [rdi+0x4],0x21
  0034b:    	jne    0x3674c
  00351: 26 	cmp    DWORD PTR [rip+0xfffffffffffed919],0x26        # 0xfffedc71
  00358:    	jne    0x3674c
  0035e:    	sqrtsd xmm6,xmm3
:00020 
:00022 %4 = %13 * %14                       [Float][Float]
  00362:    	movq   xmm7,xmm2
  00366:    	mulsd  xmm7,xmm6
:00023 %14 = const[Math]                    [Math]
  0036a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffed907]        # 0xfffedc78
  00371: 00 	cmp    rax,QWORD PTR [rip+0x20c0]        # 0x2438
  00378:    	jne    0x36788
  0037e: 00 	mov    rax,QWORD PTR [rip+0x20a3]        # 0x2428
  00385: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %15 = %3
:00025 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
  0038c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00393: 00 	test   rdi,0x7
  0039a:    	jne    0x36810
  003a0:    	cmp    DWORD PTR [rdi+0x4],0x21
  003a4:    	jne    0x36810
  003aa: 26 	cmp    DWORD PTR [rip+0xfffffffffffed8c0],0x26        # 0xfffedc71
  003b1:    	jne    0x36810
  003b7:    	sub    rsp,0x30
  003bb:    	movq   QWORD PTR [rsp],xmm2
  003c0:    	movq   QWORD PTR [rsp+0x8],xmm3
  003c6:    	movq   QWORD PTR [rsp+0x10],xmm4
  003cc:    	movq   QWORD PTR [rsp+0x18],xmm5
  003d2:    	movq   QWORD PTR [rsp+0x20],xmm7
  003d8:    	movq   xmm0,xmm4
  003dc: 31 	movabs rax,0x56318409be50
  003e6:    	call   rax
  003e8:    	movq   xmm2,QWORD PTR [rsp]
  003ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  003ff:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00405:    	add    rsp,0x30
  00409:    	movq   xmm2,xmm0
:00026 
:00028 %15 = const[Math]                    [Math]
  0040d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffed864]        # 0xfffedc78
  00414: 00 	cmp    rax,QWORD PTR [rip+0x203d]        # 0x2458
  0041b:    	jne    0x36850
  00421: 00 	mov    rax,QWORD PTR [rip+0x2020]        # 0x2448
  00428: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00029 %16 = literal[1.0]
  0042f: 00 	movq   xmm3,QWORD PTR [rip+0x2031]        # 0x2468
  00437: 00 	movabs rax,0xff80000000000002
  00441: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00030 %16 = %16 - %2                       [Float][Float]
  00448:    	subsd  xmm3,xmm5
:00031 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  0044c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00453: 00 	test   rdi,0x7
  0045a:    	jne    0x368d8
  00460:    	cmp    DWORD PTR [rdi+0x4],0x21
  00464:    	jne    0x368d8
  0046a: 26 	cmp    DWORD PTR [rip+0xfffffffffffed800],0x26        # 0xfffedc71
  00471:    	jne    0x368d8
  00477:    	sqrtsd xmm6,xmm3
:00032 
:00034 %5 = %13 * %14                       [Float][Float]
  0047b:    	movq   xmm8,xmm2
  00480:    	mulsd  xmm8,xmm6
:00035 %13 = const[Math]                    [Math]
  00485: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffed7ec]        # 0xfffedc78
  0048c: 00 	cmp    rax,QWORD PTR [rip+0x1ff5]        # 0x2488
  00493:    	jne    0x36921
  00499: 00 	mov    rax,QWORD PTR [rip+0x1fd8]        # 0x2478
  004a0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00036 %14 = %2
:00037 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  004a7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  004ae: 00 	test   rdi,0x7
  004b5:    	jne    0x369b7
  004bb:    	cmp    DWORD PTR [rdi+0x4],0x21
  004bf:    	jne    0x369b7
  004c5: 26 	cmp    DWORD PTR [rip+0xfffffffffffed7a5],0x26        # 0xfffedc71
  004cc:    	jne    0x369b7
  004d2:    	sqrtsd xmm2,xmm5
:00038 
:00040 %14 = dynvar(2, %2)
  004d6:    	mov    rax,QWORD PTR [rbp-0x10]
  004da:    	mov    rax,QWORD PTR [rax]
  004dd:    	mov    rax,QWORD PTR [rax-0x28]
  004e1: ff 	mov    QWORD PTR [rbp-0x98],rax
:00041 %15 = 0: i32
  004e8: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00042 %14 = %14.[%15]                      [Array][Integer]
  004f3:    	sub    rsp,0x30
  004f7:    	movq   QWORD PTR [rsp],xmm2
  004fc:    	movq   QWORD PTR [rsp+0x8],xmm3
  00502:    	movq   QWORD PTR [rsp+0x10],xmm4
  00508:    	movq   QWORD PTR [rsp+0x18],xmm5
  0050e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00514: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0051b: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00522: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00529:    	mov    rdi,rbx
  0052c:    	mov    rsi,r12
  0052f: 31 	movabs r8,0x563184c7df78
  00539: 31 	movabs rax,0x5631840b8230
  00543:    	call   rax
  00545:    	movq   xmm2,QWORD PTR [rsp]
  0054a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00550:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00556:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0055c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00562: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00569:    	add    rsp,0x30
  0056d: 31 	movabs r13,0x563184c7df80
  00577:    	test   rax,rax
  0057a:    	je     0xfffeb193
  00580: ff 	mov    QWORD PTR [rbp-0x98],rax
:00043 %13 = %14.call x()                   [Vec]
  00587: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0058e: 00 	test   rdi,0x7
  00595:    	jne    0x36a0e
  0059b:    	cmp    DWORD PTR [rdi+0x4],0x28
  0059f:    	jne    0x36a0e
  005a5: 26 	cmp    DWORD PTR [rip+0xfffffffffffed6c5],0x26        # 0xfffedc71
  005ac:    	jne    0x36a0e
  005b2:    	mov    esi,DWORD PTR [rip+0x1edc]        # 0x2494
  005b8:    	cmp    esi,0xffffffff
  005bb:    	je     0x36a62
  005c1:    	cmp    WORD PTR [rdi+0x2],0x3
  005c6:    	jne    0x5df
  005cc:    	cmp    esi,0x6
  005cf:    	jge    0x5df
  005d5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005da:    	jmp    0x63b
  005df:    	sub    rsp,0x30
  005e3:    	movq   QWORD PTR [rsp],xmm2
  005e8:    	movq   QWORD PTR [rsp+0x8],xmm3
  005ee:    	movq   QWORD PTR [rsp+0x10],xmm4
  005f4:    	movq   QWORD PTR [rsp+0x18],xmm5
  005fa:    	movq   QWORD PTR [rsp+0x20],xmm7
  00600: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00607: 31 	movabs rax,0x563184053740
  00611:    	call   rax
  00613:    	movq   xmm2,QWORD PTR [rsp]
  00618:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0061e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00624:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0062a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00630: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00637:    	add    rsp,0x30
  0063b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00044 
:00046 %13 = %4 * %13                       [Float][Float]
  00642: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00649: 00 	test   rdi,0x1
  00650:    	jne    0x36adb
  00656: 00 	test   rdi,0x2
  0065d:    	je     0x699
  00663:    	xorps  xmm6,xmm6
  00666: 00 	movabs rax,0x8000000000000002
  00670:    	cmp    rdi,rax
  00673:    	je     0x6ab
  00679:    	mov    rax,rdi
  0067c:    	sar    rax,0x3f
  00680:    	add    rax,0x2
  00684:    	and    rdi,0xfffffffffffffffc
  00688:    	or     rdi,rax
  0068b:    	rol    rdi,0x3d
  0068f:    	movq   xmm6,rdi
  00694:    	jmp    0x6ab
  00699:    	call   0xfffeb1cc
  0069e:    	test   rax,rax
  006a1:    	je     0x36adb
  006a7:    	movq   xmm6,xmm0
  006ab:    	mulsd  xmm6,xmm7
:00047 %15 = dynvar(2, %2)
  006af:    	mov    rax,QWORD PTR [rbp-0x10]
  006b3:    	mov    rax,QWORD PTR [rax]
  006b6:    	mov    rax,QWORD PTR [rax-0x28]
  006ba: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00048 %16 = 1: i32
  006c1: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00049 %15 = %15.[%16]                      [Array][Integer]
  006cc:    	sub    rsp,0x30
  006d0:    	movq   QWORD PTR [rsp],xmm2
  006d5:    	movq   QWORD PTR [rsp+0x8],xmm4
  006db:    	movq   QWORD PTR [rsp+0x10],xmm5
  006e1:    	movq   QWORD PTR [rsp+0x18],xmm6
  006e7:    	movq   QWORD PTR [rsp+0x20],xmm7
  006ed: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  006f4: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  006fb: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00702:    	mov    rdi,rbx
  00705:    	mov    rsi,r12
  00708: 31 	movabs r8,0x563184c7dfe8
  00712: 31 	movabs rax,0x5631840b8230
  0071c:    	call   rax
  0071e:    	movq   xmm2,QWORD PTR [rsp]
  00723:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00729:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0072f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00735:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0073b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00742:    	add    rsp,0x30
  00746: 31 	movabs r13,0x563184c7dff0
  00750:    	test   rax,rax
  00753:    	je     0xfffeb193
  00759: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00050 %14 = %15.call x()                   [Vec]
  00760: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00767: 00 	test   rdi,0x7
  0076e:    	jne    0x36b2f
  00774:    	cmp    DWORD PTR [rdi+0x4],0x28
  00778:    	jne    0x36b2f
  0077e: 26 	cmp    DWORD PTR [rip+0xfffffffffffed4ec],0x26        # 0xfffedc71
  00785:    	jne    0x36b2f
  0078b:    	mov    esi,DWORD PTR [rip+0x1d0b]        # 0x249c
  00791:    	cmp    esi,0xffffffff
  00794:    	je     0x36b83
  0079a:    	cmp    WORD PTR [rdi+0x2],0x3
  0079f:    	jne    0x7b8
  007a5:    	cmp    esi,0x6
  007a8:    	jge    0x7b8
  007ae:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007b3:    	jmp    0x814
  007b8:    	sub    rsp,0x30
  007bc:    	movq   QWORD PTR [rsp],xmm2
  007c1:    	movq   QWORD PTR [rsp+0x8],xmm4
  007c7:    	movq   QWORD PTR [rsp+0x10],xmm5
  007cd:    	movq   QWORD PTR [rsp+0x18],xmm6
  007d3:    	movq   QWORD PTR [rsp+0x20],xmm7
  007d9: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  007e0: 31 	movabs rax,0x563184053740
  007ea:    	call   rax
  007ec:    	movq   xmm2,QWORD PTR [rsp]
  007f1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007f7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007fd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00803:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00809: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00810:    	add    rsp,0x30
  00814: ff 	mov    QWORD PTR [rbp-0x98],rax
:00051 
:00053 %14 = %5 * %14                       [Float][Float]
  0081b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00822: 00 	test   rdi,0x1
  00829:    	jne    0x36bfc
  0082f: 00 	test   rdi,0x2
  00836:    	je     0x872
  0083c:    	xorps  xmm3,xmm3
  0083f: 00 	movabs rax,0x8000000000000002
  00849:    	cmp    rdi,rax
  0084c:    	je     0x884
  00852:    	mov    rax,rdi
  00855:    	sar    rax,0x3f
  00859:    	add    rax,0x2
  0085d:    	and    rdi,0xfffffffffffffffc
  00861:    	or     rdi,rax
  00864:    	rol    rdi,0x3d
  00868:    	movq   xmm3,rdi
  0086d:    	jmp    0x884
  00872:    	call   0xfffeb1cc
  00877:    	test   rax,rax
  0087a:    	je     0x36bfc
  00880:    	movq   xmm3,xmm0
  00884:    	mulsd  xmm3,xmm8
:00054 %13 = %13 + %14                      [Float][Float]
  00889:    	addsd  xmm6,xmm3
:00055 %15 = dynvar(2, %2)
  0088d:    	mov    rax,QWORD PTR [rbp-0x10]
  00891:    	mov    rax,QWORD PTR [rax]
  00894:    	mov    rax,QWORD PTR [rax-0x28]
  00898: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00056 %16 = 2: i32
  0089f: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00057 %15 = %15.[%16]                      [Array][Integer]
  008aa:    	sub    rsp,0x40
  008ae:    	movq   QWORD PTR [rsp],xmm2
  008b3:    	movq   QWORD PTR [rsp+0x8],xmm3
  008b9:    	movq   QWORD PTR [rsp+0x10],xmm4
  008bf:    	movq   QWORD PTR [rsp+0x18],xmm5
  008c5:    	movq   QWORD PTR [rsp+0x20],xmm6
  008cb:    	movq   QWORD PTR [rsp+0x28],xmm7
  008d1: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  008d8: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  008df: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  008e6:    	mov    rdi,rbx
  008e9:    	mov    rsi,r12
  008ec: 31 	movabs r8,0x563184c7e068
  008f6: 31 	movabs rax,0x5631840b8230
  00900:    	call   rax
  00902:    	movq   xmm2,QWORD PTR [rsp]
  00907:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0090d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00913:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00919:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0091f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00925: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0092c:    	add    rsp,0x40
  00930: 31 	movabs r13,0x563184c7e070
  0093a:    	test   rax,rax
  0093d:    	je     0xfffeb193
  00943: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00058 %14 = %15.call x()                   [Vec]
  0094a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00951: 00 	test   rdi,0x7
  00958:    	jne    0x36c50
  0095e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00962:    	jne    0x36c50
  00968: 26 	cmp    DWORD PTR [rip+0xfffffffffffed302],0x26        # 0xfffedc71
  0096f:    	jne    0x36c50
  00975:    	mov    esi,DWORD PTR [rip+0x1b29]        # 0x24a4
  0097b:    	cmp    esi,0xffffffff
  0097e:    	je     0x36ca4
  00984:    	cmp    WORD PTR [rdi+0x2],0x3
  00989:    	jne    0x9a2
  0098f:    	cmp    esi,0x6
  00992:    	jge    0x9a2
  00998:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0099d:    	jmp    0x9fe
  009a2:    	sub    rsp,0x30
  009a6:    	movq   QWORD PTR [rsp],xmm2
  009ab:    	movq   QWORD PTR [rsp+0x8],xmm4
  009b1:    	movq   QWORD PTR [rsp+0x10],xmm5
  009b7:    	movq   QWORD PTR [rsp+0x18],xmm6
  009bd:    	movq   QWORD PTR [rsp+0x20],xmm7
  009c3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  009ca: 31 	movabs rax,0x563184053740
  009d4:    	call   rax
  009d6:    	movq   xmm2,QWORD PTR [rsp]
  009db:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009e1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009e7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009ed:    	movq   xmm7,QWORD PTR [rsp+0x20]
  009f3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  009fa:    	add    rsp,0x30
  009fe: ff 	mov    QWORD PTR [rbp-0x98],rax
:00059 
:00061 %14 = %6 * %14                       [Float][Float]
  00a05: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a0c: 00 	test   rdi,0x1
  00a13:    	jne    0x36d1d
  00a19: 00 	test   rdi,0x2
  00a20:    	je     0xa5c
  00a26:    	xorps  xmm3,xmm3
  00a29: 00 	movabs rax,0x8000000000000002
  00a33:    	cmp    rdi,rax
  00a36:    	je     0xa6e
  00a3c:    	mov    rax,rdi
  00a3f:    	sar    rax,0x3f
  00a43:    	add    rax,0x2
  00a47:    	and    rdi,0xfffffffffffffffc
  00a4b:    	or     rdi,rax
  00a4e:    	rol    rdi,0x3d
  00a52:    	movq   xmm3,rdi
  00a57:    	jmp    0xa6e
  00a5c:    	call   0xfffeb1cc
  00a61:    	test   rax,rax
  00a64:    	je     0x36d1d
  00a6a:    	movq   xmm3,xmm0
  00a6e:    	mulsd  xmm3,xmm2
:00062 %7 = %13 + %14                       [Float][Float]
  00a72:    	movq   xmm9,xmm6
  00a77:    	addsd  xmm9,xmm3
:00063 %14 = dynvar(2, %2)
  00a7c:    	mov    rax,QWORD PTR [rbp-0x10]
  00a80:    	mov    rax,QWORD PTR [rax]
  00a83:    	mov    rax,QWORD PTR [rax-0x28]
  00a87: ff 	mov    QWORD PTR [rbp-0x98],rax
:00064 %15 = 0: i32
  00a8e: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00065 %14 = %14.[%15]                      [Array][Integer]
  00a99:    	sub    rsp,0x40
  00a9d:    	movq   QWORD PTR [rsp],xmm2
  00aa2:    	movq   QWORD PTR [rsp+0x8],xmm4
  00aa8:    	movq   QWORD PTR [rsp+0x10],xmm5
  00aae:    	movq   QWORD PTR [rsp+0x18],xmm6
  00ab4:    	movq   QWORD PTR [rsp+0x20],xmm7
  00aba: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00ac1: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00ac8: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00acf: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00ad6:    	mov    rdi,rbx
  00ad9:    	mov    rsi,r12
  00adc: 31 	movabs r8,0x563184c7e0e8
  00ae6: 31 	movabs rax,0x5631840b8230
  00af0:    	call   rax
  00af2:    	movq   xmm2,QWORD PTR [rsp]
  00af7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00afd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b03:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b09:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00b0f: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00b16: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00b1d:    	add    rsp,0x40
  00b21: 31 	movabs r13,0x563184c7e0f0
  00b2b:    	test   rax,rax
  00b2e:    	je     0xfffeb193
  00b34: ff 	mov    QWORD PTR [rbp-0x98],rax
:00066 %13 = %14.call y()                   [Vec]
  00b3b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00b42: 00 	test   rdi,0x7
  00b49:    	jne    0x36d71
  00b4f:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b53:    	jne    0x36d71
  00b59: 26 	cmp    DWORD PTR [rip+0xfffffffffffed111],0x26        # 0xfffedc71
  00b60:    	jne    0x36d71
  00b66:    	mov    esi,DWORD PTR [rip+0x1940]        # 0x24ac
  00b6c:    	cmp    esi,0xffffffff
  00b6f:    	je     0x36dc3
  00b75:    	cmp    WORD PTR [rdi+0x2],0x3
  00b7a:    	jne    0xb93
  00b80:    	cmp    esi,0x6
  00b83:    	jge    0xb93
  00b89:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b8e:    	jmp    0xbf1
  00b93:    	sub    rsp,0x30
  00b97:    	movq   QWORD PTR [rsp],xmm2
  00b9c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ba2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ba8:    	movq   QWORD PTR [rsp+0x18],xmm7
  00bae: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00bb5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00bbc: 31 	movabs rax,0x563184053740
  00bc6:    	call   rax
  00bc8:    	movq   xmm2,QWORD PTR [rsp]
  00bcd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00bd3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bd9:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00bdf: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00be6: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00bed:    	add    rsp,0x30
  00bf1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00067 
:00069 %13 = %4 * %13                       [Float][Float]
  00bf8: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00bff: 00 	test   rdi,0x1
  00c06:    	jne    0x36e3e
  00c0c: 00 	test   rdi,0x2
  00c13:    	je     0xc4f
  00c19:    	xorps  xmm3,xmm3
  00c1c: 00 	movabs rax,0x8000000000000002
  00c26:    	cmp    rdi,rax
  00c29:    	je     0xc61
  00c2f:    	mov    rax,rdi
  00c32:    	sar    rax,0x3f
  00c36:    	add    rax,0x2
  00c3a:    	and    rdi,0xfffffffffffffffc
  00c3e:    	or     rdi,rax
  00c41:    	rol    rdi,0x3d
  00c45:    	movq   xmm3,rdi
  00c4a:    	jmp    0xc61
  00c4f:    	call   0xfffeb1cc
  00c54:    	test   rax,rax
  00c57:    	je     0x36e3e
  00c5d:    	movq   xmm3,xmm0
  00c61:    	mulsd  xmm3,xmm7
:00070 %15 = dynvar(2, %2)
  00c65:    	mov    rax,QWORD PTR [rbp-0x10]
  00c69:    	mov    rax,QWORD PTR [rax]
  00c6c:    	mov    rax,QWORD PTR [rax-0x28]
  00c70: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00071 %16 = 1: i32
  00c77: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00072 %15 = %15.[%16]                      [Array][Integer]
  00c82:    	sub    rsp,0x40
  00c86:    	movq   QWORD PTR [rsp],xmm2
  00c8b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c91:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c97:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c9d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ca3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00caa: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00cb1: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00cb8: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00cbf:    	mov    rdi,rbx
  00cc2:    	mov    rsi,r12
  00cc5: 31 	movabs r8,0x563184c7e158
  00ccf: 31 	movabs rax,0x5631840b8230
  00cd9:    	call   rax
  00cdb:    	movq   xmm2,QWORD PTR [rsp]
  00ce0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ce6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cf2:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00cf8: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00cff: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d06:    	add    rsp,0x40
  00d0a: 31 	movabs r13,0x563184c7e160
  00d14:    	test   rax,rax
  00d17:    	je     0xfffeb193
  00d1d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00073 %14 = %15.call y()                   [Vec]
  00d24: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00d2b: 00 	test   rdi,0x7
  00d32:    	jne    0x36e90
  00d38:    	cmp    DWORD PTR [rdi+0x4],0x28
  00d3c:    	jne    0x36e90
  00d42: 26 	cmp    DWORD PTR [rip+0xfffffffffffecf28],0x26        # 0xfffedc71
  00d49:    	jne    0x36e90
  00d4f:    	mov    esi,DWORD PTR [rip+0x175f]        # 0x24b4
  00d55:    	cmp    esi,0xffffffff
  00d58:    	je     0x36ef2
  00d5e:    	cmp    WORD PTR [rdi+0x2],0x3
  00d63:    	jne    0xd7c
  00d69:    	cmp    esi,0x6
  00d6c:    	jge    0xd7c
  00d72:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d77:    	jmp    0xde6
  00d7c:    	sub    rsp,0x40
  00d80:    	movq   QWORD PTR [rsp],xmm2
  00d85:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d91:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d97:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d9d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00da4: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00dab: 31 	movabs rax,0x563184053740
  00db5:    	call   rax
  00db7:    	movq   xmm2,QWORD PTR [rsp]
  00dbc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00dc2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dc8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00dce:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00dd4: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00ddb: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00de2:    	add    rsp,0x40
  00de6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 
:00076 %14 = %5 * %14                       [Float][Float]
  00ded: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00df4: 00 	test   rdi,0x1
  00dfb:    	jne    0x36f79
  00e01: 00 	test   rdi,0x2
  00e08:    	je     0xe44
  00e0e:    	xorps  xmm6,xmm6
  00e11: 00 	movabs rax,0x8000000000000002
  00e1b:    	cmp    rdi,rax
  00e1e:    	je     0xe56
  00e24:    	mov    rax,rdi
  00e27:    	sar    rax,0x3f
  00e2b:    	add    rax,0x2
  00e2f:    	and    rdi,0xfffffffffffffffc
  00e33:    	or     rdi,rax
  00e36:    	rol    rdi,0x3d
  00e3a:    	movq   xmm6,rdi
  00e3f:    	jmp    0xe56
  00e44:    	call   0xfffeb1cc
  00e49:    	test   rax,rax
  00e4c:    	je     0x36f79
  00e52:    	movq   xmm6,xmm0
  00e56:    	mulsd  xmm6,xmm8
:00077 %13 = %13 + %14                      [Float][Float]
  00e5b:    	addsd  xmm3,xmm6
:00078 %15 = dynvar(2, %2)
  00e5f:    	mov    rax,QWORD PTR [rbp-0x10]
  00e63:    	mov    rax,QWORD PTR [rax]
  00e66:    	mov    rax,QWORD PTR [rax-0x28]
  00e6a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00079 %16 = 2: i32
  00e71: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00080 %15 = %15.[%16]                      [Array][Integer]
  00e7c:    	sub    rsp,0x40
  00e80:    	movq   QWORD PTR [rsp],xmm2
  00e85:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e91:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e97:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e9d:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ea3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00eaa: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00eb1: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00eb8: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00ebf:    	mov    rdi,rbx
  00ec2:    	mov    rsi,r12
  00ec5: 31 	movabs r8,0x563184c7e1d8
  00ecf: 31 	movabs rax,0x5631840b8230
  00ed9:    	call   rax
  00edb:    	movq   xmm2,QWORD PTR [rsp]
  00ee0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ee6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00eec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ef2:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ef8:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00efe: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f05: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f0c:    	add    rsp,0x40
  00f10: 31 	movabs r13,0x563184c7e1e0
  00f1a:    	test   rax,rax
  00f1d:    	je     0xfffeb193
  00f23: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00081 %14 = %15.call y()                   [Vec]
  00f2a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00f31: 00 	test   rdi,0x7
  00f38:    	jne    0x36fdb
  00f3e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00f42:    	jne    0x36fdb
  00f48: 26 	cmp    DWORD PTR [rip+0xfffffffffffecd22],0x26        # 0xfffedc71
  00f4f:    	jne    0x36fdb
  00f55:    	mov    esi,DWORD PTR [rip+0x1561]        # 0x24bc
  00f5b:    	cmp    esi,0xffffffff
  00f5e:    	je     0x3703d
  00f64:    	cmp    WORD PTR [rdi+0x2],0x3
  00f69:    	jne    0xf82
  00f6f:    	cmp    esi,0x6
  00f72:    	jge    0xf82
  00f78:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f7d:    	jmp    0xfec
  00f82:    	sub    rsp,0x40
  00f86:    	movq   QWORD PTR [rsp],xmm2
  00f8b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f91:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f97:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f9d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00fa3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00faa: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00fb1: 31 	movabs rax,0x563184053740
  00fbb:    	call   rax
  00fbd:    	movq   xmm2,QWORD PTR [rsp]
  00fc2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fc8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fce:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fd4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00fda: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00fe1: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00fe8:    	add    rsp,0x40
  00fec: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 
:00084 %14 = %6 * %14                       [Float][Float]
  00ff3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ffa: 00 	test   rdi,0x1
  01001:    	jne    0x370c4
  01007: 00 	test   rdi,0x2
  0100e:    	je     0x104a
  01014:    	xorps  xmm6,xmm6
  01017: 00 	movabs rax,0x8000000000000002
  01021:    	cmp    rdi,rax
  01024:    	je     0x105c
  0102a:    	mov    rax,rdi
  0102d:    	sar    rax,0x3f
  01031:    	add    rax,0x2
  01035:    	and    rdi,0xfffffffffffffffc
  01039:    	or     rdi,rax
  0103c:    	rol    rdi,0x3d
  01040:    	movq   xmm6,rdi
  01045:    	jmp    0x105c
  0104a:    	call   0xfffeb1cc
  0104f:    	test   rax,rax
  01052:    	je     0x370c4
  01058:    	movq   xmm6,xmm0
  0105c:    	mulsd  xmm6,xmm2
:00085 %8 = %13 + %14                       [Float][Float]
  01060:    	movq   xmm10,xmm3
  01065:    	addsd  xmm10,xmm6
:00086 %14 = dynvar(2, %2)
  0106a:    	mov    rax,QWORD PTR [rbp-0x10]
  0106e:    	mov    rax,QWORD PTR [rax]
  01071:    	mov    rax,QWORD PTR [rax-0x28]
  01075: ff 	mov    QWORD PTR [rbp-0x98],rax
:00087 %15 = 0: i32
  0107c: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00088 %14 = %14.[%15]                      [Array][Integer]
  01087:    	sub    rsp,0x40
  0108b:    	movq   QWORD PTR [rsp],xmm2
  01090:    	movq   QWORD PTR [rsp+0x8],xmm3
  01096:    	movq   QWORD PTR [rsp+0x10],xmm4
  0109c:    	movq   QWORD PTR [rsp+0x18],xmm5
  010a2:    	movq   QWORD PTR [rsp+0x20],xmm7
  010a8: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  010af: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  010b6: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  010bd: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  010c4: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  010cb:    	mov    rdi,rbx
  010ce:    	mov    rsi,r12
  010d1: 31 	movabs r8,0x563184c7e258
  010db: 31 	movabs rax,0x5631840b8230
  010e5:    	call   rax
  010e7:    	movq   xmm2,QWORD PTR [rsp]
  010ec:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010f2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010f8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010fe:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01104: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0110b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01112: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01119:    	add    rsp,0x40
  0111d: 31 	movabs r13,0x563184c7e260
  01127:    	test   rax,rax
  0112a:    	je     0xfffeb193
  01130: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %13 = %14.call z()                   [Vec]
  01137: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0113e: 00 	test   rdi,0x7
  01145:    	jne    0x37126
  0114b:    	cmp    DWORD PTR [rdi+0x4],0x28
  0114f:    	jne    0x37126
  01155: 26 	cmp    DWORD PTR [rip+0xfffffffffffecb15],0x26        # 0xfffedc71
  0115c:    	jne    0x37126
  01162:    	mov    esi,DWORD PTR [rip+0x135c]        # 0x24c4
  01168:    	cmp    esi,0xffffffff
  0116b:    	je     0x37186
  01171:    	cmp    WORD PTR [rdi+0x2],0x3
  01176:    	jne    0x118f
  0117c:    	cmp    esi,0x6
  0117f:    	jge    0x118f
  01185:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0118a:    	jmp    0x11fb
  0118f:    	sub    rsp,0x40
  01193:    	movq   QWORD PTR [rsp],xmm2
  01198:    	movq   QWORD PTR [rsp+0x8],xmm4
  0119e:    	movq   QWORD PTR [rsp+0x10],xmm5
  011a4:    	movq   QWORD PTR [rsp+0x18],xmm7
  011aa: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  011b1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  011b8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  011bf: 31 	movabs rax,0x563184053740
  011c9:    	call   rax
  011cb:    	movq   xmm2,QWORD PTR [rsp]
  011d0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011d6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011dc:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011e2: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  011e9: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  011f0: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  011f7:    	add    rsp,0x40
  011fb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00090 
:00092 %13 = %4 * %13                       [Float][Float]
  01202: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01209: 00 	test   rdi,0x1
  01210:    	jne    0x3720f
  01216: 00 	test   rdi,0x2
  0121d:    	je     0x1259
  01223:    	xorps  xmm3,xmm3
  01226: 00 	movabs rax,0x8000000000000002
  01230:    	cmp    rdi,rax
  01233:    	je     0x126b
  01239:    	mov    rax,rdi
  0123c:    	sar    rax,0x3f
  01240:    	add    rax,0x2
  01244:    	and    rdi,0xfffffffffffffffc
  01248:    	or     rdi,rax
  0124b:    	rol    rdi,0x3d
  0124f:    	movq   xmm3,rdi
  01254:    	jmp    0x126b
  01259:    	call   0xfffeb1cc
  0125e:    	test   rax,rax
  01261:    	je     0x3720f
  01267:    	movq   xmm3,xmm0
  0126b:    	mulsd  xmm3,xmm7
:00093 %15 = dynvar(2, %2)
  0126f:    	mov    rax,QWORD PTR [rbp-0x10]
  01273:    	mov    rax,QWORD PTR [rax]
  01276:    	mov    rax,QWORD PTR [rax-0x28]
  0127a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00094 %16 = 1: i32
  01281: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00095 %15 = %15.[%16]                      [Array][Integer]
  0128c:    	sub    rsp,0x40
  01290:    	movq   QWORD PTR [rsp],xmm2
  01295:    	movq   QWORD PTR [rsp+0x8],xmm3
  0129b:    	movq   QWORD PTR [rsp+0x10],xmm4
  012a1:    	movq   QWORD PTR [rsp+0x18],xmm5
  012a7:    	movq   QWORD PTR [rsp+0x20],xmm7
  012ad: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  012b4: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  012bb: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  012c2: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  012c9: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  012d0:    	mov    rdi,rbx
  012d3:    	mov    rsi,r12
  012d6: 31 	movabs r8,0x563184c7e2c8
  012e0: 31 	movabs rax,0x5631840b8230
  012ea:    	call   rax
  012ec:    	movq   xmm2,QWORD PTR [rsp]
  012f1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  012f7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  012fd:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01303:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01309: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01310: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01317: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0131e:    	add    rsp,0x40
  01322: 31 	movabs r13,0x563184c7e2d0
  0132c:    	test   rax,rax
  0132f:    	je     0xfffeb193
  01335: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00096 %14 = %15.call z()                   [Vec]
  0133c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01343: 00 	test   rdi,0x7
  0134a:    	jne    0x3726f
  01350:    	cmp    DWORD PTR [rdi+0x4],0x28
  01354:    	jne    0x3726f
  0135a: 26 	cmp    DWORD PTR [rip+0xfffffffffffec910],0x26        # 0xfffedc71
  01361:    	jne    0x3726f
  01367:    	mov    esi,DWORD PTR [rip+0x115f]        # 0x24cc
  0136d:    	cmp    esi,0xffffffff
  01370:    	je     0x372df
  01376:    	cmp    WORD PTR [rdi+0x2],0x3
  0137b:    	jne    0x1394
  01381:    	cmp    esi,0x6
  01384:    	jge    0x1394
  0138a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0138f:    	jmp    0x140c
  01394:    	sub    rsp,0x40
  01398:    	movq   QWORD PTR [rsp],xmm2
  0139d:    	movq   QWORD PTR [rsp+0x8],xmm3
  013a3:    	movq   QWORD PTR [rsp+0x10],xmm4
  013a9:    	movq   QWORD PTR [rsp+0x18],xmm5
  013af:    	movq   QWORD PTR [rsp+0x20],xmm7
  013b5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  013bc: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  013c3: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  013ca: 31 	movabs rax,0x563184053740
  013d4:    	call   rax
  013d6:    	movq   xmm2,QWORD PTR [rsp]
  013db:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013e1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  013e7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  013ed:    	movq   xmm7,QWORD PTR [rsp+0x20]
  013f3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  013fa: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01401: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01408:    	add    rsp,0x40
  0140c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00097 
:00099 %14 = %5 * %14                       [Float][Float]
  01413: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0141a: 00 	test   rdi,0x1
  01421:    	jne    0x37374
  01427: 00 	test   rdi,0x2
  0142e:    	je     0x146a
  01434:    	xorps  xmm6,xmm6
  01437: 00 	movabs rax,0x8000000000000002
  01441:    	cmp    rdi,rax
  01444:    	je     0x147c
  0144a:    	mov    rax,rdi
  0144d:    	sar    rax,0x3f
  01451:    	add    rax,0x2
  01455:    	and    rdi,0xfffffffffffffffc
  01459:    	or     rdi,rax
  0145c:    	rol    rdi,0x3d
  01460:    	movq   xmm6,rdi
  01465:    	jmp    0x147c
  0146a:    	call   0xfffeb1cc
  0146f:    	test   rax,rax
  01472:    	je     0x37374
  01478:    	movq   xmm6,xmm0
  0147c:    	mulsd  xmm6,xmm8
:00100 %13 = %13 + %14                      [Float][Float]
  01481:    	addsd  xmm3,xmm6
:00101 %15 = dynvar(2, %2)
  01485:    	mov    rax,QWORD PTR [rbp-0x10]
  01489:    	mov    rax,QWORD PTR [rax]
  0148c:    	mov    rax,QWORD PTR [rax-0x28]
  01490: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00102 %16 = 2: i32
  01497: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00103 %15 = %15.[%16]                      [Array][Integer]
  014a2:    	sub    rsp,0x50
  014a6:    	movq   QWORD PTR [rsp],xmm2
  014ab:    	movq   QWORD PTR [rsp+0x8],xmm3
  014b1:    	movq   QWORD PTR [rsp+0x10],xmm4
  014b7:    	movq   QWORD PTR [rsp+0x18],xmm5
  014bd:    	movq   QWORD PTR [rsp+0x20],xmm6
  014c3:    	movq   QWORD PTR [rsp+0x28],xmm7
  014c9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014d0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014d7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  014de: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  014e5: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  014ec:    	mov    rdi,rbx
  014ef:    	mov    rsi,r12
  014f2: 31 	movabs r8,0x563184c7e348
  014fc: 31 	movabs rax,0x5631840b8230
  01506:    	call   rax
  01508:    	movq   xmm2,QWORD PTR [rsp]
  0150d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01513:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01519:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0151f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01525:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0152b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01532: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01539: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01540:    	add    rsp,0x50
  01544: 31 	movabs r13,0x563184c7e350
  0154e:    	test   rax,rax
  01551:    	je     0xfffeb193
  01557: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00104 %14 = %15.call z()                   [Vec]
  0155e: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01565: 00 	test   rdi,0x7
  0156c:    	jne    0x373e4
  01572:    	cmp    DWORD PTR [rdi+0x4],0x28
  01576:    	jne    0x373e4
  0157c: 26 	cmp    DWORD PTR [rip+0xfffffffffffec6ee],0x26        # 0xfffedc71
  01583:    	jne    0x373e4
  01589:    	mov    esi,DWORD PTR [rip+0xf45]        # 0x24d4
  0158f:    	cmp    esi,0xffffffff
  01592:    	je     0x37454
  01598:    	cmp    WORD PTR [rdi+0x2],0x3
  0159d:    	jne    0x15b6
  015a3:    	cmp    esi,0x6
  015a6:    	jge    0x15b6
  015ac:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  015b1:    	jmp    0x162e
  015b6:    	sub    rsp,0x40
  015ba:    	movq   QWORD PTR [rsp],xmm2
  015bf:    	movq   QWORD PTR [rsp+0x8],xmm3
  015c5:    	movq   QWORD PTR [rsp+0x10],xmm4
  015cb:    	movq   QWORD PTR [rsp+0x18],xmm5
  015d1:    	movq   QWORD PTR [rsp+0x20],xmm7
  015d7: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  015de: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  015e5: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  015ec: 31 	movabs rax,0x563184053740
  015f6:    	call   rax
  015f8:    	movq   xmm2,QWORD PTR [rsp]
  015fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01603:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01609:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0160f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01615: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0161c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01623: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0162a:    	add    rsp,0x40
  0162e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00105 
:00107 %14 = %6 * %14                       [Float][Float]
  01635: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0163c: 00 	test   rdi,0x1
  01643:    	jne    0x374e9
  01649: 00 	test   rdi,0x2
  01650:    	je     0x168c
  01656:    	xorps  xmm6,xmm6
  01659: 00 	movabs rax,0x8000000000000002
  01663:    	cmp    rdi,rax
  01666:    	je     0x169e
  0166c:    	mov    rax,rdi
  0166f:    	sar    rax,0x3f
  01673:    	add    rax,0x2
  01677:    	and    rdi,0xfffffffffffffffc
  0167b:    	or     rdi,rax
  0167e:    	rol    rdi,0x3d
  01682:    	movq   xmm6,rdi
  01687:    	jmp    0x169e
  0168c:    	call   0xfffeb1cc
  01691:    	test   rax,rax
  01694:    	je     0x374e9
  0169a:    	movq   xmm6,xmm0
  0169e:    	mulsd  xmm6,xmm2
:00108 %9 = %13 + %14                       [Float][Float]
  016a2:    	movq   xmm11,xmm3
  016a7:    	addsd  xmm11,xmm6
:00109 %13 = const[Vec]                     [Vec]
  016ac: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffec5c5]        # 0xfffedc78
  016b3: 00 	cmp    rax,QWORD PTR [rip+0xe2e]        # 0x24e8
  016ba:    	jne    0x37559
  016c0: 00 	mov    rax,QWORD PTR [rip+0xe11]        # 0x24d8
  016c7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00110 %14 = %7
:00111 %15 = %8
:00112 %16 = %9
:00113 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  016ce:    	movq   xmm0,xmm9
  016d3:    	call   0xfffeb2bf
  016d8: ff 	mov    QWORD PTR [rbp-0x98],rax
  016df:    	movq   xmm0,xmm10
  016e4:    	call   0xfffeb2bf
  016e9: ff 	mov    QWORD PTR [rbp-0xa0],rax
  016f0:    	movq   xmm0,xmm11
  016f5:    	call   0xfffeb2bf
  016fa: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01701: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01708: 00 	test   rdi,0x7
  0170f:    	jne    0x37619
  01715:    	cmp    DWORD PTR [rdi+0x4],0x29
  01719:    	jne    0x37619
  0171f: 26 	cmp    DWORD PTR [rip+0xfffffffffffec54b],0x26        # 0xfffedc71
  01726:    	jne    0x37619
  0172c: 00 	mov    r9,0x0
  01733:    	sub    rsp,0x40
  01737:    	movq   QWORD PTR [rsp],xmm2
  0173c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01742:    	movq   QWORD PTR [rsp+0x10],xmm5
  01748:    	movq   QWORD PTR [rsp+0x18],xmm7
  0174e: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01755: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0175c: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01763: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0176a:    	mov    rdx,rdi
  0176d:    	mov    rax,QWORD PTR [rbx]
  01770:    	lea    rdi,[rsp-0x18]
  01775:    	mov    QWORD PTR [rdi],rax
  01778:    	mov    QWORD PTR [rbx],rdi
  0177b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01784:    	mov    QWORD PTR [rsp-0x38],rcx
  01789: ff 	lea    rcx,[rbp-0x98]
  01790: 00 	mov    r8,0x3
  01797:    	call   0x37687
  0179c:    	lea    rdi,[rbp-0x8]
  017a0:    	mov    QWORD PTR [rbx],rdi
  017a3:    	movq   xmm2,QWORD PTR [rsp]
  017a8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017ae:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017b4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  017ba: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  017c1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  017c8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  017cf: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  017d6:    	add    rsp,0x40
  017da: 31 	movabs r13,0x563184c7e400
  017e4:    	test   rax,rax
  017e7:    	je     0xfffeb193
  017ed:    	mov    QWORD PTR [rbp-0x78],rax
:00114 
:00116 %13 = const[Ray]                     [Ray]
  017f1: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffec480]        # 0xfffedc78
  017f8: 00 	cmp    rax,QWORD PTR [rip+0xd09]        # 0x2508
  017ff:    	jne    0x376b9
  01805: 00 	mov    rax,QWORD PTR [rip+0xcec]        # 0x24f8
  0180c: ff 	mov    QWORD PTR [rbp-0x90],rax
:00117 %14 = dynvar(2, %7)
  01813:    	mov    rax,QWORD PTR [rbp-0x10]
  01817:    	mov    rax,QWORD PTR [rax]
  0181a:    	mov    rax,QWORD PTR [rax-0x50]
  0181e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00118 %15 = %10
  01825:    	mov    rax,QWORD PTR [rbp-0x78]
  01829: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00119 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01830: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01837: 00 	test   rdi,0x7
  0183e:    	jne    0x3776d
  01844:    	cmp    DWORD PTR [rdi+0x4],0x2f
  01848:    	jne    0x3776d
  0184e: 26 	cmp    DWORD PTR [rip+0xfffffffffffec41c],0x26        # 0xfffedc71
  01855:    	jne    0x3776d
  0185b: 00 	mov    r9,0x0
  01862:    	sub    rsp,0x40
  01866:    	movq   QWORD PTR [rsp],xmm2
  0186b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01871:    	movq   QWORD PTR [rsp+0x10],xmm5
  01877:    	movq   QWORD PTR [rsp+0x18],xmm7
  0187d: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01884: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0188b: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01892: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01899:    	mov    rdx,rdi
  0189c:    	mov    rax,QWORD PTR [rbx]
  0189f:    	lea    rdi,[rsp-0x18]
  018a4:    	mov    QWORD PTR [rdi],rax
  018a7:    	mov    QWORD PTR [rbx],rdi
  018aa: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018b3:    	mov    QWORD PTR [rsp-0x38],rcx
  018b8: ff 	lea    rcx,[rbp-0x98]
  018bf: 00 	mov    r8,0x2
  018c6:    	call   0x377db
  018cb:    	lea    rdi,[rbp-0x8]
  018cf:    	mov    QWORD PTR [rbx],rdi
  018d2:    	movq   xmm2,QWORD PTR [rsp]
  018d7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018dd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018e3:    	movq   xmm7,QWORD PTR [rsp+0x18]
  018e9: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  018f0: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  018f7: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  018fe: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01905:    	add    rsp,0x40
  01909: 31 	movabs r13,0x563184c7e460
  01913:    	test   rax,rax
  01916:    	je     0xfffeb193
  0191c:    	mov    QWORD PTR [rbp-0x80],rax
:00120 
:00122 %13 = const[Isect]                   [Isect]
  01920: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffec351]        # 0xfffedc78
  01927: 00 	cmp    rax,QWORD PTR [rip+0xbfa]        # 0x2528
  0192e:    	jne    0x3780d
  01934: 00 	mov    rax,QWORD PTR [rip+0xbdd]        # 0x2518
  0193b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00123 %12 = %13.call new()                 [#<Class:Isect>]
  01942: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01949: 00 	test   rdi,0x7
  01950:    	jne    0x378c1
  01956:    	cmp    DWORD PTR [rdi+0x4],0x31
  0195a:    	jne    0x378c1
  01960: 26 	cmp    DWORD PTR [rip+0xfffffffffffec30a],0x26        # 0xfffedc71
  01967:    	jne    0x378c1
  0196d: 00 	mov    r9,0x0
  01974:    	sub    rsp,0x40
  01978:    	movq   QWORD PTR [rsp],xmm2
  0197d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01983:    	movq   QWORD PTR [rsp+0x10],xmm5
  01989:    	movq   QWORD PTR [rsp+0x18],xmm7
  0198f: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01996: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0199d: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  019a4: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  019ab:    	mov    rdx,rdi
  019ae:    	mov    rax,QWORD PTR [rbx]
  019b1:    	lea    rdi,[rsp-0x18]
  019b6:    	mov    QWORD PTR [rdi],rax
  019b9:    	mov    QWORD PTR [rbx],rdi
  019bc: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019c5:    	mov    QWORD PTR [rsp-0x38],rcx
  019ca: ff 	lea    rcx,[rbp-0x98]
  019d1: 00 	mov    r8,0x0
  019d8:    	call   0x3792f
  019dd:    	lea    rdi,[rbp-0x8]
  019e1:    	mov    QWORD PTR [rbx],rdi
  019e4:    	movq   xmm2,QWORD PTR [rsp]
  019e9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ef:    	movq   xmm5,QWORD PTR [rsp+0x10]
  019f5:    	movq   xmm7,QWORD PTR [rsp+0x18]
  019fb: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a02: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a09: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a10: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a17:    	add    rsp,0x40
  01a1b: 31 	movabs r13,0x563184c7e4a0
  01a25:    	test   rax,rax
  01a28:    	je     0xfffeb193
  01a2e: ff 	mov    QWORD PTR [rbp-0x88],rax
:00124 
:00126 %13 = @spheres: Scene[IvarId(0)]
  01a35:    	mov    rdi,QWORD PTR [rbp-0x28]
  01a39:    	mov    rax,QWORD PTR [rdi+0x10]
  01a3d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00127 %14 = 0: i32
  01a44: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00128 %13 = %13.[%14]                      [Array][Integer]
  01a4f:    	sub    rsp,0x40
  01a53:    	movq   QWORD PTR [rsp],xmm2
  01a58:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a5e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01a64:    	movq   QWORD PTR [rsp+0x18],xmm7
  01a6a: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01a71: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01a78: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01a7f: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01a86: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01a8d: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01a94:    	mov    rdi,rbx
  01a97:    	mov    rsi,r12
  01a9a: 31 	movabs r8,0x563184c7e4d8
  01aa4: 31 	movabs rax,0x5631840b8230
  01aae:    	call   rax
  01ab0:    	movq   xmm2,QWORD PTR [rsp]
  01ab5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01abb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01ac1:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ac7: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01ace: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01ad5: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01adc: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01ae3:    	add    rsp,0x40
  01ae7: 31 	movabs r13,0x563184c7e4e0
  01af1:    	test   rax,rax
  01af4:    	je     0xfffeb193
  01afa: ff 	mov    QWORD PTR [rbp-0x90],rax
:00129 %14 = %11
  01b01:    	mov    rax,QWORD PTR [rbp-0x80]
  01b05: ff 	mov    QWORD PTR [rbp-0x98],rax
:00130 %15 = %12
  01b0c: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b13: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00131 _ = %13.call intersect(%14; 2)       [Sphere]
  01b1a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b21: 00 	test   rdi,0x7
  01b28:    	jne    0x37961
  01b2e:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01b32:    	jne    0x37961
  01b38: 26 	cmp    DWORD PTR [rip+0xfffffffffffec132],0x26        # 0xfffedc71
  01b3f:    	jne    0x37961
  01b45:    	sub    rsp,0x40
  01b49:    	movq   QWORD PTR [rsp],xmm2
  01b4e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b54:    	movq   QWORD PTR [rsp+0x10],xmm5
  01b5a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01b60: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01b67: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01b6e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01b75: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01b7c:    	mov    rax,QWORD PTR [rbx]
  01b7f:    	lea    rdi,[rsp-0x18]
  01b84:    	mov    QWORD PTR [rdi],rax
  01b87:    	mov    QWORD PTR [rbx],rdi
  01b8a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b93:    	mov    QWORD PTR [rsp-0x38],rcx
  01b98: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01b9f:    	mov    QWORD PTR [rsp-0x38],rax
  01ba4: 00 	mov    rdi,0x2
  01bab: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01bb2:    	mov    QWORD PTR [rsp-0x40],rax
  01bb7: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01bbe:    	mov    QWORD PTR [rsp-0x48],rax
  01bc3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bcc: 10 	movabs rax,0x1001000000045
  01bd6:    	mov    QWORD PTR [rsp-0x28],rax
  01bdb: 31 	movabs r13,0x563184c85400
  01be5:    	call   0xfffee870
  01bea:    	lea    rdi,[rbp-0x8]
  01bee:    	mov    QWORD PTR [rbx],rdi
  01bf1:    	movq   xmm2,QWORD PTR [rsp]
  01bf6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bfc:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c02:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c08: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c0f: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c16: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c1d: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c24:    	add    rsp,0x40
  01c28: 31 	movabs r13,0x563184c7e520
  01c32:    	test   rax,rax
  01c35:    	je     0xfffeb193
:00132 
:00134 %13 = @spheres: Scene[IvarId(0)]
  01c3b:    	mov    rdi,QWORD PTR [rbp-0x28]
  01c3f:    	mov    rax,QWORD PTR [rdi+0x10]
  01c43: ff 	mov    QWORD PTR [rbp-0x90],rax
:00135 %14 = 1: i32
  01c4a: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00136 %13 = %13.[%14]                      [Array][Integer]
  01c55:    	sub    rsp,0x40
  01c59:    	movq   QWORD PTR [rsp],xmm2
  01c5e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c64:    	movq   QWORD PTR [rsp+0x10],xmm5
  01c6a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01c70: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01c77: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01c7e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01c85: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01c8c: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01c93: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01c9a:    	mov    rdi,rbx
  01c9d:    	mov    rsi,r12
  01ca0: 31 	movabs r8,0x563184c7e558
  01caa: 31 	movabs rax,0x5631840b8230
  01cb4:    	call   rax
  01cb6:    	movq   xmm2,QWORD PTR [rsp]
  01cbb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01cc1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01cc7:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ccd: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01cd4: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01cdb: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01ce2: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01ce9:    	add    rsp,0x40
  01ced: 31 	movabs r13,0x563184c7e560
  01cf7:    	test   rax,rax
  01cfa:    	je     0xfffeb193
  01d00: ff 	mov    QWORD PTR [rbp-0x90],rax
:00137 %14 = %11
  01d07:    	mov    rax,QWORD PTR [rbp-0x80]
  01d0b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00138 %15 = %12
  01d12: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01d19: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00139 _ = %13.call intersect(%14; 2)       [Sphere]
  01d20: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01d27: 00 	test   rdi,0x7
  01d2e:    	jne    0x379cf
  01d34:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01d38:    	jne    0x379cf
  01d3e: 26 	cmp    DWORD PTR [rip+0xfffffffffffebf2c],0x26        # 0xfffedc71
  01d45:    	jne    0x379cf
  01d4b:    	sub    rsp,0x40
  01d4f:    	movq   QWORD PTR [rsp],xmm2
  01d54:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d5a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01d60:    	movq   QWORD PTR [rsp+0x18],xmm7
  01d66: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01d6d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01d74: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01d7b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01d82:    	mov    rax,QWORD PTR [rbx]
  01d85:    	lea    rdi,[rsp-0x18]
  01d8a:    	mov    QWORD PTR [rdi],rax
  01d8d:    	mov    QWORD PTR [rbx],rdi
  01d90: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01d99:    	mov    QWORD PTR [rsp-0x38],rcx
  01d9e: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01da5:    	mov    QWORD PTR [rsp-0x38],rax
  01daa: 00 	mov    rdi,0x2
  01db1: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01db8:    	mov    QWORD PTR [rsp-0x40],rax
  01dbd: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01dc4:    	mov    QWORD PTR [rsp-0x48],rax
  01dc9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01dd2: 10 	movabs rax,0x1001000000045
  01ddc:    	mov    QWORD PTR [rsp-0x28],rax
  01de1: 31 	movabs r13,0x563184c85400
  01deb:    	call   0xfffee870
  01df0:    	lea    rdi,[rbp-0x8]
  01df4:    	mov    QWORD PTR [rbx],rdi
  01df7:    	movq   xmm2,QWORD PTR [rsp]
  01dfc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e02:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e08:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e0e: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e15: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e1c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e23: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e2a:    	add    rsp,0x40
  01e2e: 31 	movabs r13,0x563184c7e5a0
  01e38:    	test   rax,rax
  01e3b:    	je     0xfffeb193
:00140 
:00142 %13 = @spheres: Scene[IvarId(0)]
  01e41:    	mov    rdi,QWORD PTR [rbp-0x28]
  01e45:    	mov    rax,QWORD PTR [rdi+0x10]
  01e49: ff 	mov    QWORD PTR [rbp-0x90],rax
:00143 %14 = 2: i32
  01e50: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00144 %13 = %13.[%14]                      [Array][Integer]
  01e5b:    	sub    rsp,0x40
  01e5f:    	movq   QWORD PTR [rsp],xmm2
  01e64:    	movq   QWORD PTR [rsp+0x8],xmm4
  01e6a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01e70:    	movq   QWORD PTR [rsp+0x18],xmm7
  01e76: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01e7d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01e84: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01e8b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01e92: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01e99: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01ea0:    	mov    rdi,rbx
  01ea3:    	mov    rsi,r12
  01ea6: 31 	movabs r8,0x563184c7e5d8
  01eb0: 31 	movabs rax,0x5631840b8230
  01eba:    	call   rax
  01ebc:    	movq   xmm2,QWORD PTR [rsp]
  01ec1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ec7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01ecd:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ed3: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01eda: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01ee1: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01ee8: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01eef:    	add    rsp,0x40
  01ef3: 31 	movabs r13,0x563184c7e5e0
  01efd:    	test   rax,rax
  01f00:    	je     0xfffeb193
  01f06: ff 	mov    QWORD PTR [rbp-0x90],rax
:00145 %14 = %11
  01f0d:    	mov    rax,QWORD PTR [rbp-0x80]
  01f11: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 %15 = %12
  01f18: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01f1f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00147 _ = %13.call intersect(%14; 2)       [Sphere]
  01f26: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01f2d: 00 	test   rdi,0x7
  01f34:    	jne    0x37a3d
  01f3a:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01f3e:    	jne    0x37a3d
  01f44: 26 	cmp    DWORD PTR [rip+0xfffffffffffebd26],0x26        # 0xfffedc71
  01f4b:    	jne    0x37a3d
  01f51:    	sub    rsp,0x40
  01f55:    	movq   QWORD PTR [rsp],xmm2
  01f5a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01f60:    	movq   QWORD PTR [rsp+0x10],xmm5
  01f66:    	movq   QWORD PTR [rsp+0x18],xmm7
  01f6c: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01f73: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01f7a: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01f81: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01f88:    	mov    rax,QWORD PTR [rbx]
  01f8b:    	lea    rdi,[rsp-0x18]
  01f90:    	mov    QWORD PTR [rdi],rax
  01f93:    	mov    QWORD PTR [rbx],rdi
  01f96: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01f9f:    	mov    QWORD PTR [rsp-0x38],rcx
  01fa4: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01fab:    	mov    QWORD PTR [rsp-0x38],rax
  01fb0: 00 	mov    rdi,0x2
  01fb7: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01fbe:    	mov    QWORD PTR [rsp-0x40],rax
  01fc3: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01fca:    	mov    QWORD PTR [rsp-0x48],rax
  01fcf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01fd8: 10 	movabs rax,0x1001000000045
  01fe2:    	mov    QWORD PTR [rsp-0x28],rax
  01fe7: 31 	movabs r13,0x563184c85400
  01ff1:    	call   0xfffee870
  01ff6:    	lea    rdi,[rbp-0x8]
  01ffa:    	mov    QWORD PTR [rbx],rdi
  01ffd:    	movq   xmm2,QWORD PTR [rsp]
  02002:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02008:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0200e:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02014: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  0201b: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02022: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02029: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02030:    	add    rsp,0x40
  02034: 31 	movabs r13,0x563184c7e620
  0203e:    	test   rax,rax
  02041:    	je     0xfffeb193
:00148 
:00150 %13 = @plane: Scene[IvarId(1)]
  02047:    	mov    rdi,QWORD PTR [rbp-0x28]
  0204b:    	mov    rax,QWORD PTR [rdi+0x18]
  0204f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00151 %14 = %11
  02056:    	mov    rax,QWORD PTR [rbp-0x80]
  0205a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00152 %15 = %12
  02061: ff 	mov    rax,QWORD PTR [rbp-0x88]
  02068: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00153 _ = %13.call intersect(%14; 2)       [Plane]
  0206f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02076: 00 	test   rdi,0x7
  0207d:    	jne    0x37aab
  02083:    	cmp    DWORD PTR [rdi+0x4],0x2c
  02087:    	jne    0x37aab
  0208d: 26 	cmp    DWORD PTR [rip+0xfffffffffffebbdd],0x26        # 0xfffedc71
  02094:    	jne    0x37aab
  0209a:    	sub    rsp,0x40
  0209e:    	movq   QWORD PTR [rsp],xmm2
  020a3:    	movq   QWORD PTR [rsp+0x8],xmm4
  020a9:    	movq   QWORD PTR [rsp+0x10],xmm5
  020af:    	movq   QWORD PTR [rsp+0x18],xmm7
  020b5: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  020bc: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  020c3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  020ca: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  020d1:    	mov    rax,QWORD PTR [rbx]
  020d4:    	lea    rdi,[rsp-0x18]
  020d9:    	mov    QWORD PTR [rdi],rax
  020dc:    	mov    QWORD PTR [rbx],rdi
  020df: 00 	mov    QWORD PTR [rsp-0x20],0x0
  020e8:    	mov    QWORD PTR [rsp-0x38],rcx
  020ed: ff 	mov    rax,QWORD PTR [rbp-0x90]
  020f4:    	mov    QWORD PTR [rsp-0x38],rax
  020f9: 00 	mov    rdi,0x2
  02100: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02107:    	mov    QWORD PTR [rsp-0x40],rax
  0210c: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02113:    	mov    QWORD PTR [rsp-0x48],rax
  02118: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02121: 0e 	movabs rax,0x1000e00000047
  0212b:    	mov    QWORD PTR [rsp-0x28],rax
  02130: 31 	movabs r13,0x563184c872a0
  0213a:    	call   0xfffeee3c
  0213f:    	lea    rdi,[rbp-0x8]
  02143:    	mov    QWORD PTR [rbx],rdi
  02146:    	movq   xmm2,QWORD PTR [rsp]
  0214b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02151:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02157:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0215d: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02164: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0216b: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02172: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02179:    	add    rsp,0x40
  0217d: 31 	movabs r13,0x563184c7e680
  02187:    	test   rax,rax
  0218a:    	je     0xfffeb193
:00154 
:00156 %13 = %12.call hit()                 [Isect]
  02190: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  02197: 00 	test   rdi,0x7
  0219e:    	jne    0x37b19
  021a4:    	cmp    DWORD PTR [rdi+0x4],0x30
  021a8:    	jne    0x37b19
  021ae: 26 	cmp    DWORD PTR [rip+0xfffffffffffebabc],0x26        # 0xfffedc71
  021b5:    	jne    0x37b19
  021bb:    	mov    esi,DWORD PTR [rip+0x373]        # 0x2534
  021c1:    	cmp    esi,0xffffffff
  021c4:    	je     0x37b87
  021ca:    	cmp    WORD PTR [rdi+0x2],0x3
  021cf:    	jne    0x21e8
  021d5:    	cmp    esi,0x6
  021d8:    	jge    0x21e8
  021de:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  021e3:    	jmp    0x2262
  021e8:    	sub    rsp,0x40
  021ec:    	movq   QWORD PTR [rsp],xmm2
  021f1:    	movq   QWORD PTR [rsp+0x8],xmm4
  021f7:    	movq   QWORD PTR [rsp+0x10],xmm5
  021fd:    	movq   QWORD PTR [rsp+0x18],xmm7
  02203: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0220a: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02211: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02218: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0221f: 31 	movabs rax,0x563184053740
  02229:    	call   rax
  0222b:    	movq   xmm2,QWORD PTR [rsp]
  02230:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02236:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0223c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02242: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02249: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02250: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02257: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0225e:    	add    rsp,0x40
  02262: ff 	mov    QWORD PTR [rbp-0x90],rax
:00157 
:00159 condnotbr %13 =>:00165
  02269: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02270:    	or     rax,0x10
  02274:    	cmp    rax,0x14
  02278:    	je     0x238b
:00160 %13 = dynvar(2, %6)
  0227e:    	mov    rax,QWORD PTR [rbp-0x10]
  02282:    	mov    rax,QWORD PTR [rax]
  02285:    	mov    rax,QWORD PTR [rax-0x48]
  02289: ff 	mov    QWORD PTR [rbp-0x90],rax
:00161 %14 = literal[1.0]
  02290: 00 	movq   xmm3,QWORD PTR [rip+0x2a0]        # 0x2538
  02298: 00 	movabs rax,0xff80000000000002
  022a2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00162 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  022a9: 01 	sub    DWORD PTR [rip+0x290],0x1        # 0x2540
  022b0:    	je     0x37c8c
  022b6: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  022bd: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  022c4:    	sub    rsp,0x50
  022c8:    	movq   QWORD PTR [rsp],xmm2
  022cd:    	movq   QWORD PTR [rsp+0x8],xmm3
  022d3:    	movq   QWORD PTR [rsp+0x10],xmm4
  022d9:    	movq   QWORD PTR [rsp+0x18],xmm5
  022df:    	movq   QWORD PTR [rsp+0x20],xmm7
  022e5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  022ec: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  022f3: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  022fa: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  02301:    	mov    rdx,rdi
  02304:    	mov    rcx,rsi
  02307:    	mov    rdi,rbx
  0230a:    	mov    rsi,r12
  0230d: 31 	movabs rax,0x563184087f80
  02317:    	call   rax
  02319:    	movq   xmm2,QWORD PTR [rsp]
  0231e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02324:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0232a:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02330:    	movq   xmm7,QWORD PTR [rsp+0x20]
  02336: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0233d: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  02344: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0234b: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  02352:    	add    rsp,0x50
  02356: 31 	movabs r13,0x563184c7e700
  02360:    	test   rax,rax
  02363:    	je     0xfffeb193
  02369: ff 	mov    QWORD PTR [rbp-0x90],rax
:00163 dynvar(2, %6) = %13
  02370:    	mov    rax,QWORD PTR [rbp-0x10]
  02374:    	mov    rax,QWORD PTR [rax]
  02377: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0237e:    	mov    QWORD PTR [rax-0x48],rdi
:00164 ret %13
  02382: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02389:    	leave  
  0238a:    	ret    
:00165 %13 = literal[0.0]
  0238b: 00 	movq   xmm3,QWORD PTR [rip+0x1b5]        # 0x2548
  02393: 00 	movabs rax,0x8000000000000002
  0239d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00166 ret %13
  023a4: ff 	mov    rax,QWORD PTR [rbp-0x90]
  023ab:    	leave  
  023ac:    	ret    
==> start whole compile: <unnamed> FuncId(82) self_class:Scene start:[00000] bytecode:0x563184ccb970
<== finished compile. elapsed:150.7µs
offset:Pos(95224) code: 9329 bytes  data: 411 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xd0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00064: ff 	mov    QWORD PTR [rbp-0xb8],rax
  0006b: ff 	mov    QWORD PTR [rbp-0xc0],rax
  00072:    	mov    rdi,QWORD PTR [rbp-0x28]
  00076: 00 	test   rdi,0x7
  0007d:    	jne    0x3575e
  00083:    	cmp    DWORD PTR [rdi+0x4],0x32
  00087:    	jne    0x3575e
:00000 %14 = dynvar(4, %4)
  0008d:    	mov    rax,QWORD PTR [rbp-0x10]
  00091:    	mov    rax,QWORD PTR [rax]
  00094:    	mov    rax,QWORD PTR [rax]
  00097:    	mov    rax,QWORD PTR [rax]
  0009a:    	mov    rax,QWORD PTR [rax-0x38]
  0009e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00001 %14 = %14 + 1: i16                   [Integer][Integer]
  000a5: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000ac: 00 	test   rdi,0x1
  000b3:    	je     0x3576d
  000b9:    	add    rdi,0x2
  000bd:    	jo     0x3576d
  000c3: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00002 dynvar(4, %4) = %14
  000ca:    	mov    rax,QWORD PTR [rbp-0x10]
  000ce:    	mov    rax,QWORD PTR [rax]
  000d1:    	mov    rax,QWORD PTR [rax]
  000d4:    	mov    rax,QWORD PTR [rax]
  000d7: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000de:    	mov    QWORD PTR [rax-0x38],rdi
:00003 %14 = dynvar(4, %1)
  000e2:    	mov    rax,QWORD PTR [rbp-0x10]
  000e6:    	mov    rax,QWORD PTR [rax]
  000e9:    	mov    rax,QWORD PTR [rax]
  000ec:    	mov    rax,QWORD PTR [rax]
  000ef:    	mov    rax,QWORD PTR [rax-0x20]
  000f3: ff 	mov    QWORD PTR [rbp-0x98],rax
:00004 %2 = %14.call to_f()                 [Integer]
  000fa: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00101: 00 	test   rdi,0x1
  00108:    	je     0x3577c
  0010e: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb60c],0x26        # 0xfffeb721
  00115:    	jne    0x3577c
  0011b:    	sar    rdi,1
  0011e:    	cvtsi2sd xmm2,rdi
:00005 
:00007 %14 = dynvar(4, %2)
  00123:    	mov    rax,QWORD PTR [rbp-0x10]
  00127:    	mov    rax,QWORD PTR [rax]
  0012a:    	mov    rax,QWORD PTR [rax]
  0012d:    	mov    rax,QWORD PTR [rax]
  00130:    	mov    rax,QWORD PTR [rax-0x28]
  00134: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 %3 = %14.call to_f()                 [Integer]
  0013b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00142: 00 	test   rdi,0x1
  00149:    	je     0x3578b
  0014f: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb5cb],0x26        # 0xfffeb721
  00156:    	jne    0x3578b
  0015c:    	sar    rdi,1
  0015f:    	cvtsi2sd xmm3,rdi
:00009 
:00011 %14 = dynvar(2, %1)
  00164:    	mov    rax,QWORD PTR [rbp-0x10]
  00168:    	mov    rax,QWORD PTR [rax]
  0016b:    	mov    rax,QWORD PTR [rax-0x20]
  0016f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %4 = %14.call to_f()                 [Integer]
  00176: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0017d: 00 	test   rdi,0x1
  00184:    	je     0x357a7
  0018a: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb590],0x26        # 0xfffeb721
  00191:    	jne    0x357a7
  00197:    	sar    rdi,1
  0019a:    	cvtsi2sd xmm4,rdi
:00013 
:00015 %14 = dynvar(3, %1)
  0019f:    	mov    rax,QWORD PTR [rbp-0x10]
  001a3:    	mov    rax,QWORD PTR [rax]
  001a6:    	mov    rax,QWORD PTR [rax]
  001a9:    	mov    rax,QWORD PTR [rax-0x20]
  001ad: ff 	mov    QWORD PTR [rbp-0x98],rax
:00016 %5 = %14.call to_f()                 [Integer]
  001b4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001bb: 00 	test   rdi,0x1
  001c2:    	je     0x357d0
  001c8: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb552],0x26        # 0xfffeb721
  001cf:    	jne    0x357d0
  001d5:    	sar    rdi,1
  001d8:    	cvtsi2sd xmm5,rdi
:00017 
:00019 %6 = %1.call to_f()                  [Integer]
  001dd:    	mov    rdi,QWORD PTR [rbp-0x30]
  001e1: 00 	test   rdi,0x1
  001e8:    	je     0x35806
  001ee: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb52c],0x26        # 0xfffeb721
  001f5:    	jne    0x35806
  001fb:    	sar    rdi,1
  001fe:    	cvtsi2sd xmm6,rdi
:00020 
:00022 %14 = dynvar(1, %1)
  00203:    	mov    rax,QWORD PTR [rbp-0x10]
  00207:    	mov    rax,QWORD PTR [rax-0x20]
  0020b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00023 %7 = %14.call to_f()                 [Integer]
  00212: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00219: 00 	test   rdi,0x1
  00220:    	je     0x35849
  00226: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb4f4],0x26        # 0xfffeb721
  0022d:    	jne    0x35849
  00233:    	sar    rdi,1
  00236:    	cvtsi2sd xmm7,rdi
:00024 
:00026 %14 = dynvar(4, %5)
  0023b:    	mov    rax,QWORD PTR [rbp-0x10]
  0023f:    	mov    rax,QWORD PTR [rax]
  00242:    	mov    rax,QWORD PTR [rax]
  00245:    	mov    rax,QWORD PTR [rax]
  00248:    	mov    rax,QWORD PTR [rax-0x40]
  0024c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00027 %14 = %6 / %14                       [Float][Float]
  00253: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0025a: 00 	test   rdi,0x1
  00261:    	jne    0x35899
  00267: 00 	test   rdi,0x2
  0026e:    	je     0x2ab
  00274:    	xorps  xmm8,xmm8
  00278: 00 	movabs rax,0x8000000000000002
  00282:    	cmp    rdi,rax
  00285:    	je     0x2be
  0028b:    	mov    rax,rdi
  0028e:    	sar    rax,0x3f
  00292:    	add    rax,0x2
  00296:    	and    rdi,0xfffffffffffffffc
  0029a:    	or     rdi,rax
  0029d:    	rol    rdi,0x3d
  002a1:    	movq   xmm8,rdi
  002a6:    	jmp    0x2be
  002ab:    	call   0xfffe8c7c
  002b0:    	test   rax,rax
  002b3:    	je     0x35899
  002b9:    	movq   xmm8,xmm0
  002be:    	movq   rax,xmm8
  002c3:    	test   rax,rax
  002c6:    	je     0xfffe8c68
  002cc:    	movq   xmm0,xmm6
  002d0:    	divsd  xmm0,xmm8
  002d5:    	movq   xmm8,xmm0
:00028 %14 = %4 + %14                       [Float][Float]
  002da:    	addsd  xmm8,xmm4
:00029 %15 = literal[2.0]
  002df: 21 	movq   xmm9,QWORD PTR [rip+0x2190]        # 0x2478
  002e8: 00 	mov    rax,0x2
  002ef: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00030 %15 = %2 / %15                       [Float][Float]
  002f6:    	movq   rax,xmm9
  002fb:    	test   rax,rax
  002fe:    	je     0xfffe8c68
  00304:    	movq   xmm0,xmm2
  00308:    	divsd  xmm0,xmm9
  0030d:    	movq   xmm9,xmm0
:00031 %14 = %14 - %15                      [Float][Float]
  00312:    	subsd  xmm8,xmm9
:00032 %15 = literal[2.0]
  00317: 21 	movq   xmm9,QWORD PTR [rip+0x2168]        # 0x2488
  00320: 00 	mov    rax,0x2
  00327: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00033 %15 = %2 / %15                       [Float][Float]
  0032e:    	movq   rax,xmm9
  00333:    	test   rax,rax
  00336:    	je     0xfffe8c68
  0033c:    	movq   xmm0,xmm2
  00340:    	divsd  xmm0,xmm9
  00345:    	movq   xmm9,xmm0
:00034 %8 = %14 / %15                       [Float][Float]
  0034a:    	movq   xmm10,xmm8
  0034f:    	movq   rax,xmm9
  00354:    	test   rax,rax
  00357:    	je     0xfffe8c68
  0035d:    	divsd  xmm10,xmm9
:00035 %14 = dynvar(4, %5)
  00362:    	mov    rax,QWORD PTR [rbp-0x10]
  00366:    	mov    rax,QWORD PTR [rax]
  00369:    	mov    rax,QWORD PTR [rax]
  0036c:    	mov    rax,QWORD PTR [rax]
  0036f:    	mov    rax,QWORD PTR [rax-0x40]
  00373: ff 	mov    QWORD PTR [rbp-0x98],rax
:00036 %14 = %7 / %14                       [Float][Float]
  0037a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00381: 00 	test   rdi,0x1
  00388:    	jne    0x358f6
  0038e: 00 	test   rdi,0x2
  00395:    	je     0x3d2
  0039b:    	xorps  xmm8,xmm8
  0039f: 00 	movabs rax,0x8000000000000002
  003a9:    	cmp    rdi,rax
  003ac:    	je     0x3e5
  003b2:    	mov    rax,rdi
  003b5:    	sar    rax,0x3f
  003b9:    	add    rax,0x2
  003bd:    	and    rdi,0xfffffffffffffffc
  003c1:    	or     rdi,rax
  003c4:    	rol    rdi,0x3d
  003c8:    	movq   xmm8,rdi
  003cd:    	jmp    0x3e5
  003d2:    	call   0xfffe8c7c
  003d7:    	test   rax,rax
  003da:    	je     0x358f6
  003e0:    	movq   xmm8,xmm0
  003e5:    	movq   rax,xmm8
  003ea:    	test   rax,rax
  003ed:    	je     0xfffe8c68
  003f3:    	movq   xmm0,xmm7
  003f7:    	divsd  xmm0,xmm8
  003fc:    	movq   xmm8,xmm0
:00037 %14 = %5 + %14                       [Float][Float]
  00401:    	addsd  xmm8,xmm5
:00038 %15 = literal[2.0]
  00406: 20 	movq   xmm9,QWORD PTR [rip+0x2089]        # 0x2498
  0040f: 00 	mov    rax,0x2
  00416: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00039 %15 = %3 / %15                       [Float][Float]
  0041d:    	movq   rax,xmm9
  00422:    	test   rax,rax
  00425:    	je     0xfffe8c68
  0042b:    	movq   xmm0,xmm3
  0042f:    	divsd  xmm0,xmm9
  00434:    	movq   xmm9,xmm0
:00040 %14 = %14 - %15                      [Float][Float]
  00439:    	subsd  xmm8,xmm9
:00041 %14 = neg %14                        [Float]
  0043e: 00 	xorps  xmm8,XMMWORD PTR [rip+0x2062]        # 0x24a8
:00042 %15 = literal[2.0]
  00446: 20 	movq   xmm9,QWORD PTR [rip+0x2069]        # 0x24b8
  0044f: 00 	mov    rax,0x2
  00456: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00043 %15 = %3 / %15                       [Float][Float]
  0045d:    	movq   rax,xmm9
  00462:    	test   rax,rax
  00465:    	je     0xfffe8c68
  0046b:    	movq   xmm0,xmm3
  0046f:    	divsd  xmm0,xmm9
  00474:    	movq   xmm9,xmm0
:00044 %9 = %14 / %15                       [Float][Float]
  00479:    	movq   xmm11,xmm8
  0047e:    	movq   rax,xmm9
  00483:    	test   rax,rax
  00486:    	je     0xfffe8c68
  0048c:    	divsd  xmm11,xmm9
:00045 %15 = const[Vec]                     [Vec]
  00491: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeb290]        # 0xfffeb728
  00498: 00 	cmp    rax,QWORD PTR [rip+0x2039]        # 0x24d8
  0049f:    	jne    0x35972
  004a5: 00 	mov    rax,QWORD PTR [rip+0x201c]        # 0x24c8
  004ac: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00046 %16 = %8
:00047 %17 = %9
:00048 %18 = literal[-1.0]
  004b3: 20 	movq   xmm9,QWORD PTR [rip+0x202c]        # 0x24e8
  004bc: 00 	movabs rax,0xff80000000000006
  004c6: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00049 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
  004cd:    	movq   xmm0,xmm10
  004d2:    	call   0xfffe8d6f
  004d7: ff 	mov    QWORD PTR [rbp-0xa8],rax
  004de:    	movq   xmm0,xmm11
  004e3:    	call   0xfffe8d6f
  004e8: ff 	mov    QWORD PTR [rbp-0xb0],rax
  004ef: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  004f6: 00 	test   rdi,0x7
  004fd:    	jne    0x35a30
  00503:    	cmp    DWORD PTR [rdi+0x4],0x29
  00507:    	jne    0x35a30
  0050d: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb20d],0x26        # 0xfffeb721
  00514:    	jne    0x35a30
  0051a: 00 	mov    r9,0x0
  00521:    	sub    rsp,0x50
  00525:    	movq   QWORD PTR [rsp],xmm2
  0052a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00530:    	movq   QWORD PTR [rsp+0x10],xmm4
  00536:    	movq   QWORD PTR [rsp+0x18],xmm5
  0053c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00542:    	movq   QWORD PTR [rsp+0x28],xmm7
  00548: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0054f: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00556: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0055d:    	mov    rdx,rdi
  00560:    	mov    rax,QWORD PTR [rbx]
  00563:    	lea    rdi,[rsp-0x18]
  00568:    	mov    QWORD PTR [rdi],rax
  0056b:    	mov    QWORD PTR [rbx],rdi
  0056e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00577:    	mov    QWORD PTR [rsp-0x38],rcx
  0057c: ff 	lea    rcx,[rbp-0xa8]
  00583: 00 	mov    r8,0x3
  0058a:    	call   0x35aa9
  0058f:    	lea    rdi,[rbp-0x8]
  00593:    	mov    QWORD PTR [rbx],rdi
  00596:    	movq   xmm2,QWORD PTR [rsp]
  0059b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005a1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005a7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005ad:    	movq   xmm6,QWORD PTR [rsp+0x20]
  005b3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  005b9: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  005c0: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  005c7: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  005ce:    	add    rsp,0x50
  005d2: 31 	movabs r13,0x563184ccbca0
  005dc:    	test   rax,rax
  005df:    	je     0xfffe8c43
  005e5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00050 
:00052 %10 = %14.call vnormalize()          [Vec]
  005ec: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  005f3: 00 	test   rdi,0x7
  005fa:    	jne    0x35adb
  00600:    	cmp    DWORD PTR [rdi+0x4],0x28
  00604:    	jne    0x35adb
  0060a: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb110],0x26        # 0xfffeb721
  00611:    	jne    0x35adb
  00617:    	sub    rsp,0x50
  0061b:    	movq   QWORD PTR [rsp],xmm2
  00620:    	movq   QWORD PTR [rsp+0x8],xmm3
  00626:    	movq   QWORD PTR [rsp+0x10],xmm4
  0062c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00632:    	movq   QWORD PTR [rsp+0x20],xmm6
  00638:    	movq   QWORD PTR [rsp+0x28],xmm7
  0063e: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00645: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0064c: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00653:    	mov    rax,QWORD PTR [rbx]
  00656:    	lea    rdi,[rsp-0x18]
  0065b:    	mov    QWORD PTR [rdi],rax
  0065e:    	mov    QWORD PTR [rbx],rdi
  00661: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0066a:    	mov    QWORD PTR [rsp-0x38],rcx
  0066f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00676:    	mov    QWORD PTR [rsp-0x38],rax
  0067b: 00 	mov    rdi,0x0
  00682: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0068b: 07 	movabs rax,0x700000043
  00695:    	mov    QWORD PTR [rsp-0x28],rax
  0069a: 31 	movabs r13,0x563184c828e0
  006a4:    	call   0xfffec018
  006a9:    	lea    rdi,[rbp-0x8]
  006ad:    	mov    QWORD PTR [rbx],rdi
  006b0:    	movq   xmm2,QWORD PTR [rsp]
  006b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  006c7:    	movq   xmm6,QWORD PTR [rsp+0x20]
  006cd:    	movq   xmm7,QWORD PTR [rsp+0x28]
  006d3: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  006da: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  006e1: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  006e8:    	add    rsp,0x50
  006ec: 31 	movabs r13,0x563184ccbcd0
  006f6:    	test   rax,rax
  006f9:    	je     0xfffe8c43
  006ff:    	mov    QWORD PTR [rbp-0x78],rax
:00053 
:00055 %14 = const[Ray]                     [Ray]
  00703: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeb01e]        # 0xfffeb728
  0070a: 00 	cmp    rax,QWORD PTR [rip+0x1df7]        # 0x2508
  00711:    	jne    0x35b54
  00717: 00 	mov    rax,QWORD PTR [rip+0x1dda]        # 0x24f8
  0071e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00056 %16 = const[Vec]                     [Vec]
  00725: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeaffc]        # 0xfffeb728
  0072c: 00 	cmp    rax,QWORD PTR [rip+0x1df5]        # 0x2528
  00733:    	jne    0x35c12
  00739: 00 	mov    rax,QWORD PTR [rip+0x1dd8]        # 0x2518
  00740: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00057 %17 = literal[0.0]
  00747: 1d 	movq   xmm8,QWORD PTR [rip+0x1de8]        # 0x2538
  00750: 00 	movabs rax,0x8000000000000002
  0075a: ff 	mov    QWORD PTR [rbp-0xb0],rax
:00058 %18 = literal[0.0]
  00761: 1d 	movq   xmm9,QWORD PTR [rip+0x1dde]        # 0x2548
  0076a: 00 	movabs rax,0x8000000000000002
  00774: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00059 %19 = literal[0.0]
  0077b: 1d 	movq   xmm12,QWORD PTR [rip+0x1dd4]        # 0x2558
  00784: 00 	movabs rax,0x8000000000000002
  0078e: ff 	mov    QWORD PTR [rbp-0xc0],rax
:00060 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
  00795: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0079c: 00 	test   rdi,0x7
  007a3:    	jne    0x35cd0
  007a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  007ad:    	jne    0x35cd0
  007b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffeaf67],0x26        # 0xfffeb721
  007ba:    	jne    0x35cd0
  007c0: 00 	mov    r9,0x0
  007c7:    	sub    rsp,0x60
  007cb:    	movq   QWORD PTR [rsp],xmm2
  007d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  007d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  007dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  007e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  007e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  007ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  007f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  007fc: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00803: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0080a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00811:    	mov    rdx,rdi
  00814:    	mov    rax,QWORD PTR [rbx]
  00817:    	lea    rdi,[rsp-0x18]
  0081c:    	mov    QWORD PTR [rdi],rax
  0081f:    	mov    QWORD PTR [rbx],rdi
  00822: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0082b:    	mov    QWORD PTR [rsp-0x38],rcx
  00830: ff 	lea    rcx,[rbp-0xb0]
  00837: 00 	mov    r8,0x3
  0083e:    	call   0x35d49
  00843:    	lea    rdi,[rbp-0x8]
  00847:    	mov    QWORD PTR [rbx],rdi
  0084a:    	movq   xmm2,QWORD PTR [rsp]
  0084f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00855:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0085b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00861:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00867:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0086d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00874: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0087b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00882: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00889: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00890:    	add    rsp,0x60
  00894: 31 	movabs r13,0x563184ccbd50
  0089e:    	test   rax,rax
  008a1:    	je     0xfffe8c43
  008a7: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00061 
:00063 %16 = %10
  008ae:    	mov    rax,QWORD PTR [rbp-0x78]
  008b2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00064 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  008b9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  008c0: 00 	test   rdi,0x7
  008c7:    	jne    0x35d7b
  008cd:    	cmp    DWORD PTR [rdi+0x4],0x2f
  008d1:    	jne    0x35d7b
  008d7: 26 	cmp    DWORD PTR [rip+0xfffffffffffeae43],0x26        # 0xfffeb721
  008de:    	jne    0x35d7b
  008e4: 00 	mov    r9,0x0
  008eb:    	sub    rsp,0x60
  008ef:    	movq   QWORD PTR [rsp],xmm2
  008f4:    	movq   QWORD PTR [rsp+0x8],xmm3
  008fa:    	movq   QWORD PTR [rsp+0x10],xmm4
  00900:    	movq   QWORD PTR [rsp+0x18],xmm5
  00906:    	movq   QWORD PTR [rsp+0x20],xmm6
  0090c:    	movq   QWORD PTR [rsp+0x28],xmm7
  00912: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00919: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00920: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00927: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0092e: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00935:    	mov    rdx,rdi
  00938:    	mov    rax,QWORD PTR [rbx]
  0093b:    	lea    rdi,[rsp-0x18]
  00940:    	mov    QWORD PTR [rdi],rax
  00943:    	mov    QWORD PTR [rbx],rdi
  00946: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0094f:    	mov    QWORD PTR [rsp-0x38],rcx
  00954: ff 	lea    rcx,[rbp-0xa0]
  0095b: 00 	mov    r8,0x2
  00962:    	call   0x35df4
  00967:    	lea    rdi,[rbp-0x8]
  0096b:    	mov    QWORD PTR [rbx],rdi
  0096e:    	movq   xmm2,QWORD PTR [rsp]
  00973:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00979:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0097f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00985:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0098b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00991: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00998: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0099f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  009a6: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  009ad: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  009b4:    	add    rsp,0x60
  009b8: 31 	movabs r13,0x563184ccbd90
  009c2:    	test   rax,rax
  009c5:    	je     0xfffe8c43
  009cb:    	mov    QWORD PTR [rbp-0x80],rax
:00065 
:00067 %14 = const[Isect]                   [Isect]
  009cf: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffead52]        # 0xfffeb728
  009d6: 00 	cmp    rax,QWORD PTR [rip+0x1b9b]        # 0x2578
  009dd:    	jne    0x35e26
  009e3: 00 	mov    rax,QWORD PTR [rip+0x1b7e]        # 0x2568
  009ea: ff 	mov    QWORD PTR [rbp-0x98],rax
:00068 %12 = %14.call new()                 [#<Class:Isect>]
  009f1: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  009f8: 00 	test   rdi,0x7
  009ff:    	jne    0x35f00
  00a05:    	cmp    DWORD PTR [rdi+0x4],0x31
  00a09:    	jne    0x35f00
  00a0f: 26 	cmp    DWORD PTR [rip+0xfffffffffffead0b],0x26        # 0xfffeb721
  00a16:    	jne    0x35f00
  00a1c: 00 	mov    r9,0x0
  00a23:    	sub    rsp,0x60
  00a27:    	movq   QWORD PTR [rsp],xmm2
  00a2c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a32:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a38:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a3e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a44:    	movq   QWORD PTR [rsp+0x28],xmm7
  00a4a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00a51: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00a58: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00a5f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00a66: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00a6d:    	mov    rdx,rdi
  00a70:    	mov    rax,QWORD PTR [rbx]
  00a73:    	lea    rdi,[rsp-0x18]
  00a78:    	mov    QWORD PTR [rdi],rax
  00a7b:    	mov    QWORD PTR [rbx],rdi
  00a7e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a87:    	mov    QWORD PTR [rsp-0x38],rcx
  00a8c: ff 	lea    rcx,[rbp-0xa0]
  00a93: 00 	mov    r8,0x0
  00a9a:    	call   0x35f79
  00a9f:    	lea    rdi,[rbp-0x8]
  00aa3:    	mov    QWORD PTR [rbx],rdi
  00aa6:    	movq   xmm2,QWORD PTR [rsp]
  00aab:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ab1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ab7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00abd:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ac3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00ac9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00ad0: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00ad7: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00ade: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00ae5: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00aec:    	add    rsp,0x60
  00af0: 31 	movabs r13,0x563184ccbdd0
  00afa:    	test   rax,rax
  00afd:    	je     0xfffe8c43
  00b03: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = @spheres: Scene[IvarId(0)]
  00b0a:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b0e:    	mov    rax,QWORD PTR [rdi+0x10]
  00b12: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 %15 = 0: i32
  00b19: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00073 %14 = %14.[%15]                      [Array][Integer]
  00b24:    	sub    rsp,0x60
  00b28:    	movq   QWORD PTR [rsp],xmm2
  00b2d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b33:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b39:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b3f:    	movq   QWORD PTR [rsp+0x20],xmm6
  00b45:    	movq   QWORD PTR [rsp+0x28],xmm7
  00b4b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00b52: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00b59: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00b60: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00b67: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00b6e: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00b75: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00b7c:    	mov    rdi,rbx
  00b7f:    	mov    rsi,r12
  00b82: 31 	movabs r8,0x563184ccbe08
  00b8c: 31 	movabs rax,0x5631840b8230
  00b96:    	call   rax
  00b98:    	movq   xmm2,QWORD PTR [rsp]
  00b9d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ba3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ba9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00baf:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00bb5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00bbb: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00bc2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00bc9: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00bd0: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00bd7: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00bde:    	add    rsp,0x60
  00be2: 31 	movabs r13,0x563184ccbe10
  00bec:    	test   rax,rax
  00bef:    	je     0xfffe8c43
  00bf5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 %15 = %11
  00bfc:    	mov    rax,QWORD PTR [rbp-0x80]
  00c00: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00075 %16 = %12
  00c07: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c0e: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00076 _ = %14.call intersect(%15; 2)       [Sphere]
  00c15: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c1c: 00 	test   rdi,0x7
  00c23:    	jne    0x35fab
  00c29:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00c2d:    	jne    0x35fab
  00c33: 26 	cmp    DWORD PTR [rip+0xfffffffffffeaae7],0x26        # 0xfffeb721
  00c3a:    	jne    0x35fab
  00c40:    	sub    rsp,0x60
  00c44:    	movq   QWORD PTR [rsp],xmm2
  00c49:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c4f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c55:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c5b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c61:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c67: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00c6e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00c75: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00c7c: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00c83: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00c8a:    	mov    rax,QWORD PTR [rbx]
  00c8d:    	lea    rdi,[rsp-0x18]
  00c92:    	mov    QWORD PTR [rdi],rax
  00c95:    	mov    QWORD PTR [rbx],rdi
  00c98: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ca1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ca6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00cad:    	mov    QWORD PTR [rsp-0x38],rax
  00cb2: 00 	mov    rdi,0x2
  00cb9: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00cc0:    	mov    QWORD PTR [rsp-0x40],rax
  00cc5: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00ccc:    	mov    QWORD PTR [rsp-0x48],rax
  00cd1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cda: 10 	movabs rax,0x1000000045
  00ce4:    	mov    QWORD PTR [rsp-0x28],rax
  00ce9: 31 	movabs r13,0x563184c85400
  00cf3:    	call   0xfffec320
  00cf8:    	lea    rdi,[rbp-0x8]
  00cfc:    	mov    QWORD PTR [rbx],rdi
  00cff:    	movq   xmm2,QWORD PTR [rsp]
  00d04:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d0a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d10:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d16:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d1c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d22: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d29: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d30: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d37: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00d3e: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00d45:    	add    rsp,0x60
  00d49: 31 	movabs r13,0x563184ccbe50
  00d53:    	test   rax,rax
  00d56:    	je     0xfffe8c43
:00077 
:00079 %14 = @spheres: Scene[IvarId(0)]
  00d5c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00d60:    	mov    rax,QWORD PTR [rdi+0x10]
  00d64: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 %15 = 1: i32
  00d6b: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00081 %14 = %14.[%15]                      [Array][Integer]
  00d76:    	sub    rsp,0x60
  00d7a:    	movq   QWORD PTR [rsp],xmm2
  00d7f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d85:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d8b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d91:    	movq   QWORD PTR [rsp+0x20],xmm6
  00d97:    	movq   QWORD PTR [rsp+0x28],xmm7
  00d9d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00da4: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00dab: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00db2: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00db9: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00dc0: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00dc7: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00dce:    	mov    rdi,rbx
  00dd1:    	mov    rsi,r12
  00dd4: 31 	movabs r8,0x563184ccbe88
  00dde: 31 	movabs rax,0x5631840b8230
  00de8:    	call   rax
  00dea:    	movq   xmm2,QWORD PTR [rsp]
  00def:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00df5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dfb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e01:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e07:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e0d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e14: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e1b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e22: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e29: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e30:    	add    rsp,0x60
  00e34: 31 	movabs r13,0x563184ccbe90
  00e3e:    	test   rax,rax
  00e41:    	je     0xfffe8c43
  00e47: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 %15 = %11
  00e4e:    	mov    rax,QWORD PTR [rbp-0x80]
  00e52: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00083 %16 = %12
  00e59: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00e60: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00084 _ = %14.call intersect(%15; 2)       [Sphere]
  00e67: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e6e: 00 	test   rdi,0x7
  00e75:    	jne    0x36024
  00e7b:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00e7f:    	jne    0x36024
  00e85: 26 	cmp    DWORD PTR [rip+0xfffffffffffea895],0x26        # 0xfffeb721
  00e8c:    	jne    0x36024
  00e92:    	sub    rsp,0x60
  00e96:    	movq   QWORD PTR [rsp],xmm2
  00e9b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ea1:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ea7:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ead:    	movq   QWORD PTR [rsp+0x20],xmm6
  00eb3:    	movq   QWORD PTR [rsp+0x28],xmm7
  00eb9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ec0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ec7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ece: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ed5: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00edc:    	mov    rax,QWORD PTR [rbx]
  00edf:    	lea    rdi,[rsp-0x18]
  00ee4:    	mov    QWORD PTR [rdi],rax
  00ee7:    	mov    QWORD PTR [rbx],rdi
  00eea: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ef3:    	mov    QWORD PTR [rsp-0x38],rcx
  00ef8: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00eff:    	mov    QWORD PTR [rsp-0x38],rax
  00f04: 00 	mov    rdi,0x2
  00f0b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f12:    	mov    QWORD PTR [rsp-0x40],rax
  00f17: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f1e:    	mov    QWORD PTR [rsp-0x48],rax
  00f23: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f2c: 10 	movabs rax,0x1000000045
  00f36:    	mov    QWORD PTR [rsp-0x28],rax
  00f3b: 31 	movabs r13,0x563184c85400
  00f45:    	call   0xfffec320
  00f4a:    	lea    rdi,[rbp-0x8]
  00f4e:    	mov    QWORD PTR [rbx],rdi
  00f51:    	movq   xmm2,QWORD PTR [rsp]
  00f56:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f5c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f62:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f68:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f6e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f74: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f7b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f82: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00f89: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00f90: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00f97:    	add    rsp,0x60
  00f9b: 31 	movabs r13,0x563184ccbed0
  00fa5:    	test   rax,rax
  00fa8:    	je     0xfffe8c43
:00085 
:00087 %14 = @spheres: Scene[IvarId(0)]
  00fae:    	mov    rdi,QWORD PTR [rbp-0x28]
  00fb2:    	mov    rax,QWORD PTR [rdi+0x10]
  00fb6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 2: i32
  00fbd: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00089 %14 = %14.[%15]                      [Array][Integer]
  00fc8:    	sub    rsp,0x60
  00fcc:    	movq   QWORD PTR [rsp],xmm2
  00fd1:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fd7:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fdd:    	movq   QWORD PTR [rsp+0x18],xmm5
  00fe3:    	movq   QWORD PTR [rsp+0x20],xmm6
  00fe9:    	movq   QWORD PTR [rsp+0x28],xmm7
  00fef: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ff6: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ffd: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01004: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0100b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01012: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01019: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01020:    	mov    rdi,rbx
  01023:    	mov    rsi,r12
  01026: 31 	movabs r8,0x563184ccbf08
  01030: 31 	movabs rax,0x5631840b8230
  0103a:    	call   rax
  0103c:    	movq   xmm2,QWORD PTR [rsp]
  01041:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01047:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0104d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01053:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01059:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0105f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01066: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0106d: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01074: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0107b: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01082:    	add    rsp,0x60
  01086: 31 	movabs r13,0x563184ccbf10
  01090:    	test   rax,rax
  01093:    	je     0xfffe8c43
  01099: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %15 = %11
  010a0:    	mov    rax,QWORD PTR [rbp-0x80]
  010a4: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00091 %16 = %12
  010ab: ff 	mov    rax,QWORD PTR [rbp-0x88]
  010b2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00092 _ = %14.call intersect(%15; 2)       [Sphere]
  010b9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  010c0: 00 	test   rdi,0x7
  010c7:    	jne    0x3609d
  010cd:    	cmp    DWORD PTR [rdi+0x4],0x2a
  010d1:    	jne    0x3609d
  010d7: 26 	cmp    DWORD PTR [rip+0xfffffffffffea643],0x26        # 0xfffeb721
  010de:    	jne    0x3609d
  010e4:    	sub    rsp,0x60
  010e8:    	movq   QWORD PTR [rsp],xmm2
  010ed:    	movq   QWORD PTR [rsp+0x8],xmm3
  010f3:    	movq   QWORD PTR [rsp+0x10],xmm4
  010f9:    	movq   QWORD PTR [rsp+0x18],xmm5
  010ff:    	movq   QWORD PTR [rsp+0x20],xmm6
  01105:    	movq   QWORD PTR [rsp+0x28],xmm7
  0110b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01112: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01119: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01120: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01127: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0112e:    	mov    rax,QWORD PTR [rbx]
  01131:    	lea    rdi,[rsp-0x18]
  01136:    	mov    QWORD PTR [rdi],rax
  01139:    	mov    QWORD PTR [rbx],rdi
  0113c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01145:    	mov    QWORD PTR [rsp-0x38],rcx
  0114a: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01151:    	mov    QWORD PTR [rsp-0x38],rax
  01156: 00 	mov    rdi,0x2
  0115d: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01164:    	mov    QWORD PTR [rsp-0x40],rax
  01169: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01170:    	mov    QWORD PTR [rsp-0x48],rax
  01175: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0117e: 10 	movabs rax,0x1000000045
  01188:    	mov    QWORD PTR [rsp-0x28],rax
  0118d: 31 	movabs r13,0x563184c85400
  01197:    	call   0xfffec320
  0119c:    	lea    rdi,[rbp-0x8]
  011a0:    	mov    QWORD PTR [rbx],rdi
  011a3:    	movq   xmm2,QWORD PTR [rsp]
  011a8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  011ae:    	movq   xmm4,QWORD PTR [rsp+0x10]
  011b4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  011ba:    	movq   xmm6,QWORD PTR [rsp+0x20]
  011c0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  011c6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  011cd: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  011d4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  011db: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  011e2: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  011e9:    	add    rsp,0x60
  011ed: 31 	movabs r13,0x563184ccbf50
  011f7:    	test   rax,rax
  011fa:    	je     0xfffe8c43
:00093 
:00095 %14 = @plane: Scene[IvarId(1)]
  01200:    	mov    rdi,QWORD PTR [rbp-0x28]
  01204:    	mov    rax,QWORD PTR [rdi+0x18]
  01208: ff 	mov    QWORD PTR [rbp-0x98],rax
:00096 %15 = %11
  0120f:    	mov    rax,QWORD PTR [rbp-0x80]
  01213: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %16 = %12
  0121a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01221: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00098 _ = %14.call intersect(%15; 2)       [Plane]
  01228: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0122f: 00 	test   rdi,0x7
  01236:    	jne    0x36116
  0123c:    	cmp    DWORD PTR [rdi+0x4],0x2c
  01240:    	jne    0x36116
  01246: 26 	cmp    DWORD PTR [rip+0xfffffffffffea4d4],0x26        # 0xfffeb721
  0124d:    	jne    0x36116
  01253:    	sub    rsp,0x60
  01257:    	movq   QWORD PTR [rsp],xmm2
  0125c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01262:    	movq   QWORD PTR [rsp+0x10],xmm4
  01268:    	movq   QWORD PTR [rsp+0x18],xmm5
  0126e:    	movq   QWORD PTR [rsp+0x20],xmm6
  01274:    	movq   QWORD PTR [rsp+0x28],xmm7
  0127a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01281: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01288: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0128f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01296: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0129d:    	mov    rax,QWORD PTR [rbx]
  012a0:    	lea    rdi,[rsp-0x18]
  012a5:    	mov    QWORD PTR [rdi],rax
  012a8:    	mov    QWORD PTR [rbx],rdi
  012ab: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012b4:    	mov    QWORD PTR [rsp-0x38],rcx
  012b9: ff 	mov    rax,QWORD PTR [rbp-0x98]
  012c0:    	mov    QWORD PTR [rsp-0x38],rax
  012c5: 00 	mov    rdi,0x2
  012cc: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  012d3:    	mov    QWORD PTR [rsp-0x40],rax
  012d8: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  012df:    	mov    QWORD PTR [rsp-0x48],rax
  012e4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012ed: 0e 	movabs rax,0xe00000047
  012f7:    	mov    QWORD PTR [rsp-0x28],rax
  012fc: 31 	movabs r13,0x563184c872a0
  01306:    	call   0xfffec8ec
  0130b:    	lea    rdi,[rbp-0x8]
  0130f:    	mov    QWORD PTR [rbx],rdi
  01312:    	movq   xmm2,QWORD PTR [rsp]
  01317:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0131d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01323:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01329:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0132f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01335: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0133c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01343: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0134a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01351: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01358:    	add    rsp,0x60
  0135c: 31 	movabs r13,0x563184ccbfb0
  01366:    	test   rax,rax
  01369:    	je     0xfffe8c43
:00099 
:00101 %14 = %12.call hit()                 [Isect]
  0136f: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01376: 00 	test   rdi,0x7
  0137d:    	jne    0x3618f
  01383:    	cmp    DWORD PTR [rdi+0x4],0x30
  01387:    	jne    0x3618f
  0138d: 26 	cmp    DWORD PTR [rip+0xfffffffffffea38d],0x26        # 0xfffeb721
  01394:    	jne    0x3618f
  0139a:    	mov    esi,DWORD PTR [rip+0x11e4]        # 0x2584
  013a0:    	cmp    esi,0xffffffff
  013a3:    	je     0x36208
  013a9:    	cmp    WORD PTR [rdi+0x2],0x3
  013ae:    	jne    0x13c7
  013b4:    	cmp    esi,0x6
  013b7:    	jge    0x13c7
  013bd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  013c2:    	jmp    0x1467
  013c7:    	sub    rsp,0x60
  013cb:    	movq   QWORD PTR [rsp],xmm2
  013d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  013d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  013dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  013e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  013e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  013ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  013f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  013fc: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01403: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0140a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01411: 31 	movabs rax,0x563184053740
  0141b:    	call   rax
  0141d:    	movq   xmm2,QWORD PTR [rsp]
  01422:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01428:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0142e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01434:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0143a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01440: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01447: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0144e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01455: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0145c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01463:    	add    rsp,0x60
  01467: ff 	mov    QWORD PTR [rbp-0x98],rax
:00102 
:00104 condnotbr %14 =>:00147
  0146e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01475:    	or     rax,0x10
  01479:    	cmp    rax,0x14
  0147d:    	je     0x245d
:00105 %14 = %12
  01483: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0148a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 %13 = %0.call ambient_occlusion(%14; 1) [<INVALID>]
  01491: 01 	sub    DWORD PTR [rip+0x10f0],0x1        # 0x2588
  01498:    	je     0x3633e
  0149e:    	sub    rsp,0x60
  014a2:    	movq   QWORD PTR [rsp],xmm2
  014a7:    	movq   QWORD PTR [rsp+0x8],xmm3
  014ad:    	movq   QWORD PTR [rsp+0x10],xmm4
  014b3:    	movq   QWORD PTR [rsp+0x18],xmm5
  014b9:    	movq   QWORD PTR [rsp+0x20],xmm6
  014bf:    	movq   QWORD PTR [rsp+0x28],xmm7
  014c5: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014cc: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014d3: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  014da: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  014e1: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  014e8:    	mov    r15d,0x32
  014ee: 00 	cmp    r15d,DWORD PTR [rip+0x109b]        # 0x2590
  014f5:    	jne    0x36360
  014fb:    	mov    eax,DWORD PTR [rip+0xfffffffffffea220]        # 0xfffeb721
  01501:    	cmp    DWORD PTR [rip+0x1085],eax        # 0x258c
  01507:    	jne    0x36360
  0150d:    	mov    rax,QWORD PTR [rbx]
  01510:    	lea    rdi,[rsp-0x18]
  01515:    	mov    QWORD PTR [rdi],rax
  01518:    	mov    QWORD PTR [rbx],rdi
  0151b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01524:    	mov    QWORD PTR [rsp-0x38],rcx
  01529:    	mov    rax,QWORD PTR [rbp-0x28]
  0152d:    	mov    QWORD PTR [rsp-0x38],rax
  01532: 00 	mov    rdi,0x1
  01539: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01540:    	mov    QWORD PTR [rsp-0x40],rax
  01545: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0154e: 00 	movabs rax,0x0
  01558:    	mov    QWORD PTR [rsp-0x28],rax
  0155d: 00 	movabs r13,0x0
  01567:    	call   0xfffe8c08
  0156c:    	lea    rdi,[rbp-0x8]
  01570:    	mov    QWORD PTR [rbx],rdi
  01573:    	movq   xmm2,QWORD PTR [rsp]
  01578:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0157e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01584:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0158a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01590:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01596: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0159d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015a4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015ab: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  015b2: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  015b9:    	add    rsp,0x60
  015bd:    	test   rax,rax
  015c0:    	je     0x363cc
  015c6: ff 	mov    QWORD PTR [rbp-0x90],rax
:00107 
:00109 %14 = dynvar(2, %2)
  015cd:    	mov    rax,QWORD PTR [rbp-0x10]
  015d1:    	mov    rax,QWORD PTR [rax]
  015d4:    	mov    rax,QWORD PTR [rax-0x28]
  015d8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00110 %16 = dynvar(2, %2)
  015df:    	mov    rax,QWORD PTR [rbp-0x10]
  015e3:    	mov    rax,QWORD PTR [rax]
  015e6:    	mov    rax,QWORD PTR [rax-0x28]
  015ea: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00111 %15 = %16.call x()                   [<INVALID>]
  015f1: 01 	sub    DWORD PTR [rip+0xf9c],0x1        # 0x2594
  015f8:    	je     0x36454
  015fe:    	sub    rsp,0x60
  01602:    	movq   QWORD PTR [rsp],xmm2
  01607:    	movq   QWORD PTR [rsp+0x8],xmm3
  0160d:    	movq   QWORD PTR [rsp+0x10],xmm4
  01613:    	movq   QWORD PTR [rsp+0x18],xmm5
  01619:    	movq   QWORD PTR [rsp+0x20],xmm6
  0161f:    	movq   QWORD PTR [rsp+0x28],xmm7
  01625: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0162c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01633: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0163a: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01641: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01648: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0164f: 31 	movabs rax,0x5631840958d0
  01659:    	call   rax
  0165b:    	mov    r15d,eax
  0165e: 00 	cmp    r15d,DWORD PTR [rip+0xf37]        # 0x259c
  01665:    	jne    0x36476
  0166b:    	mov    eax,DWORD PTR [rip+0xfffffffffffea0b0]        # 0xfffeb721
  01671:    	cmp    DWORD PTR [rip+0xf21],eax        # 0x2598
  01677:    	jne    0x36476
  0167d:    	mov    rax,QWORD PTR [rbx]
  01680:    	lea    rdi,[rsp-0x18]
  01685:    	mov    QWORD PTR [rdi],rax
  01688:    	mov    QWORD PTR [rbx],rdi
  0168b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01694:    	mov    QWORD PTR [rsp-0x38],rcx
  01699: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  016a0:    	mov    QWORD PTR [rsp-0x38],rax
  016a5: 00 	mov    rdi,0x0
  016ac: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016b5: 00 	movabs rax,0x0
  016bf:    	mov    QWORD PTR [rsp-0x28],rax
  016c4: 00 	movabs r13,0x0
  016ce:    	call   0xfffe8c08
  016d3:    	lea    rdi,[rbp-0x8]
  016d7:    	mov    QWORD PTR [rbx],rdi
  016da:    	movq   xmm2,QWORD PTR [rsp]
  016df:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016e5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016eb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016f1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  016f7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  016fd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01704: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0170b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01712: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01719: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01720:    	add    rsp,0x60
  01724:    	test   rax,rax
  01727:    	je     0x364e5
  0172d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00112 
:00114 %16 = %13.call x()                   [<INVALID>]
  01734: 01 	sub    DWORD PTR [rip+0xe65],0x1        # 0x25a0
  0173b:    	je     0x3656d
  01741:    	sub    rsp,0x60
  01745:    	movq   QWORD PTR [rsp],xmm2
  0174a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01750:    	movq   QWORD PTR [rsp+0x10],xmm4
  01756:    	movq   QWORD PTR [rsp+0x18],xmm5
  0175c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01762:    	movq   QWORD PTR [rsp+0x28],xmm7
  01768: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0176f: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01776: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0177d: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01784: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0178b: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01792: 31 	movabs rax,0x5631840958d0
  0179c:    	call   rax
  0179e:    	mov    r15d,eax
  017a1: 00 	cmp    r15d,DWORD PTR [rip+0xe00]        # 0x25a8
  017a8:    	jne    0x3658f
  017ae:    	mov    eax,DWORD PTR [rip+0xfffffffffffe9f6d]        # 0xfffeb721
  017b4:    	cmp    DWORD PTR [rip+0xdea],eax        # 0x25a4
  017ba:    	jne    0x3658f
  017c0:    	mov    rax,QWORD PTR [rbx]
  017c3:    	lea    rdi,[rsp-0x18]
  017c8:    	mov    QWORD PTR [rdi],rax
  017cb:    	mov    QWORD PTR [rbx],rdi
  017ce: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017d7:    	mov    QWORD PTR [rsp-0x38],rcx
  017dc: ff 	mov    rax,QWORD PTR [rbp-0x90]
  017e3:    	mov    QWORD PTR [rsp-0x38],rax
  017e8: 00 	mov    rdi,0x0
  017ef: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017f8: 00 	movabs rax,0x0
  01802:    	mov    QWORD PTR [rsp-0x28],rax
  01807: 00 	movabs r13,0x0
  01811:    	call   0xfffe8c08
  01816:    	lea    rdi,[rbp-0x8]
  0181a:    	mov    QWORD PTR [rbx],rdi
  0181d:    	movq   xmm2,QWORD PTR [rsp]
  01822:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01828:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0182e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01834:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0183a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01840: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01847: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0184e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01855: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0185c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01863:    	add    rsp,0x60
  01867:    	test   rax,rax
  0186a:    	je     0x365fe
  01870: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00115 
:00117 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01877: 01 	sub    DWORD PTR [rip+0xd2e],0x1        # 0x25ac
  0187e:    	je     0x36686
  01884: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0188b: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  01892:    	sub    rsp,0x60
  01896:    	movq   QWORD PTR [rsp],xmm2
  0189b:    	movq   QWORD PTR [rsp+0x8],xmm3
  018a1:    	movq   QWORD PTR [rsp+0x10],xmm4
  018a7:    	movq   QWORD PTR [rsp+0x18],xmm5
  018ad:    	movq   QWORD PTR [rsp+0x20],xmm6
  018b3:    	movq   QWORD PTR [rsp+0x28],xmm7
  018b9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  018c0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  018c7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  018ce: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  018d5: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  018dc:    	mov    rdx,rdi
  018df:    	mov    rcx,rsi
  018e2:    	mov    rdi,rbx
  018e5:    	mov    rsi,r12
  018e8: 31 	movabs rax,0x563184087f80
  018f2:    	call   rax
  018f4:    	movq   xmm2,QWORD PTR [rsp]
  018f9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  018ff:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01905:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0190b:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01911:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01917: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0191e: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01925: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0192c: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01933: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0193a:    	add    rsp,0x60
  0193e: 31 	movabs r13,0x563184ccc0d0
  01948:    	test   rax,rax
  0194b:    	je     0xfffe8c43
  01951: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00118 _ = %14.call x=(%15; 1)              [<INVALID>]
  01958: 01 	sub    DWORD PTR [rip+0xc51],0x1        # 0x25b0
  0195f:    	je     0x36721
  01965:    	sub    rsp,0x60
  01969:    	movq   QWORD PTR [rsp],xmm2
  0196e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01974:    	movq   QWORD PTR [rsp+0x10],xmm4
  0197a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01980:    	movq   QWORD PTR [rsp+0x20],xmm6
  01986:    	movq   QWORD PTR [rsp+0x28],xmm7
  0198c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01993: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0199a: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  019a1: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  019a8: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  019af: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  019b6: 31 	movabs rax,0x5631840958d0
  019c0:    	call   rax
  019c2:    	mov    r15d,eax
  019c5: 00 	cmp    r15d,DWORD PTR [rip+0xbec]        # 0x25b8
  019cc:    	jne    0x36743
  019d2:    	mov    eax,DWORD PTR [rip+0xfffffffffffe9d49]        # 0xfffeb721
  019d8:    	cmp    DWORD PTR [rip+0xbd6],eax        # 0x25b4
  019de:    	jne    0x36743
  019e4:    	mov    rax,QWORD PTR [rbx]
  019e7:    	lea    rdi,[rsp-0x18]
  019ec:    	mov    QWORD PTR [rdi],rax
  019ef:    	mov    QWORD PTR [rbx],rdi
  019f2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019fb:    	mov    QWORD PTR [rsp-0x38],rcx
  01a00: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01a07:    	mov    QWORD PTR [rsp-0x38],rax
  01a0c: 00 	mov    rdi,0x1
  01a13: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01a1a:    	mov    QWORD PTR [rsp-0x40],rax
  01a1f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a28: 00 	movabs rax,0x0
  01a32:    	mov    QWORD PTR [rsp-0x28],rax
  01a37: 00 	movabs r13,0x0
  01a41:    	call   0xfffe8c08
  01a46:    	lea    rdi,[rbp-0x8]
  01a4a:    	mov    QWORD PTR [rbx],rdi
  01a4d:    	movq   xmm2,QWORD PTR [rsp]
  01a52:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01a58:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01a5e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01a64:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01a6a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01a70: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01a77: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01a7e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01a85: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01a8c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01a93:    	add    rsp,0x60
  01a97:    	test   rax,rax
  01a9a:    	je     0x367b2
:00119 
:00121 %14 = dynvar(2, %2)
  01aa0:    	mov    rax,QWORD PTR [rbp-0x10]
  01aa4:    	mov    rax,QWORD PTR [rax]
  01aa7:    	mov    rax,QWORD PTR [rax-0x28]
  01aab: ff 	mov    QWORD PTR [rbp-0x98],rax
:00122 %16 = dynvar(2, %2)
  01ab2:    	mov    rax,QWORD PTR [rbp-0x10]
  01ab6:    	mov    rax,QWORD PTR [rax]
  01ab9:    	mov    rax,QWORD PTR [rax-0x28]
  01abd: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00123 %15 = %16.call y()                   [<INVALID>]
  01ac4: 01 	sub    DWORD PTR [rip+0xaf1],0x1        # 0x25bc
  01acb:    	je     0x3683a
  01ad1:    	sub    rsp,0x60
  01ad5:    	movq   QWORD PTR [rsp],xmm2
  01ada:    	movq   QWORD PTR [rsp+0x8],xmm3
  01ae0:    	movq   QWORD PTR [rsp+0x10],xmm4
  01ae6:    	movq   QWORD PTR [rsp+0x18],xmm5
  01aec:    	movq   QWORD PTR [rsp+0x20],xmm6
  01af2:    	movq   QWORD PTR [rsp+0x28],xmm7
  01af8: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01aff: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01b06: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01b0d: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01b14: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01b1b: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01b22: 31 	movabs rax,0x5631840958d0
  01b2c:    	call   rax
  01b2e:    	mov    r15d,eax
  01b31: 00 	cmp    r15d,DWORD PTR [rip+0xa8c]        # 0x25c4
  01b38:    	jne    0x3685c
  01b3e:    	mov    eax,DWORD PTR [rip+0xfffffffffffe9bdd]        # 0xfffeb721
  01b44:    	cmp    DWORD PTR [rip+0xa76],eax        # 0x25c0
  01b4a:    	jne    0x3685c
  01b50:    	mov    rax,QWORD PTR [rbx]
  01b53:    	lea    rdi,[rsp-0x18]
  01b58:    	mov    QWORD PTR [rdi],rax
  01b5b:    	mov    QWORD PTR [rbx],rdi
  01b5e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b67:    	mov    QWORD PTR [rsp-0x38],rcx
  01b6c: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01b73:    	mov    QWORD PTR [rsp-0x38],rax
  01b78: 00 	mov    rdi,0x0
  01b7f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b88: 00 	movabs rax,0x0
  01b92:    	mov    QWORD PTR [rsp-0x28],rax
  01b97: 00 	movabs r13,0x0
  01ba1:    	call   0xfffe8c08
  01ba6:    	lea    rdi,[rbp-0x8]
  01baa:    	mov    QWORD PTR [rbx],rdi
  01bad:    	movq   xmm2,QWORD PTR [rsp]
  01bb2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01bb8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01bbe:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01bc4:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01bca:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01bd0: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01bd7: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01bde: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01be5: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01bec: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01bf3:    	add    rsp,0x60
  01bf7:    	test   rax,rax
  01bfa:    	je     0x368cb
  01c00: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00124 
:00126 %16 = %13.call y()                   [<INVALID>]
  01c07: 01 	sub    DWORD PTR [rip+0x9ba],0x1        # 0x25c8
  01c0e:    	je     0x36953
  01c14:    	sub    rsp,0x60
  01c18:    	movq   QWORD PTR [rsp],xmm2
  01c1d:    	movq   QWORD PTR [rsp+0x8],xmm3
  01c23:    	movq   QWORD PTR [rsp+0x10],xmm4
  01c29:    	movq   QWORD PTR [rsp+0x18],xmm5
  01c2f:    	movq   QWORD PTR [rsp+0x20],xmm6
  01c35:    	movq   QWORD PTR [rsp+0x28],xmm7
  01c3b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01c42: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01c49: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01c50: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01c57: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01c5e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01c65: 31 	movabs rax,0x5631840958d0
  01c6f:    	call   rax
  01c71:    	mov    r15d,eax
  01c74: 00 	cmp    r15d,DWORD PTR [rip+0x955]        # 0x25d0
  01c7b:    	jne    0x36975
  01c81:    	mov    eax,DWORD PTR [rip+0xfffffffffffe9a9a]        # 0xfffeb721
  01c87:    	cmp    DWORD PTR [rip+0x93f],eax        # 0x25cc
  01c8d:    	jne    0x36975
  01c93:    	mov    rax,QWORD PTR [rbx]
  01c96:    	lea    rdi,[rsp-0x18]
  01c9b:    	mov    QWORD PTR [rdi],rax
  01c9e:    	mov    QWORD PTR [rbx],rdi
  01ca1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01caa:    	mov    QWORD PTR [rsp-0x38],rcx
  01caf: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01cb6:    	mov    QWORD PTR [rsp-0x38],rax
  01cbb: 00 	mov    rdi,0x0
  01cc2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01ccb: 00 	movabs rax,0x0
  01cd5:    	mov    QWORD PTR [rsp-0x28],rax
  01cda: 00 	movabs r13,0x0
  01ce4:    	call   0xfffe8c08
  01ce9:    	lea    rdi,[rbp-0x8]
  01ced:    	mov    QWORD PTR [rbx],rdi
  01cf0:    	movq   xmm2,QWORD PTR [rsp]
  01cf5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01cfb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01d01:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01d07:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01d0d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01d13: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01d1a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01d21: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01d28: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01d2f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01d36:    	add    rsp,0x60
  01d3a:    	test   rax,rax
  01d3d:    	je     0x369e4
  01d43: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00127 
:00129 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01d4a: 01 	sub    DWORD PTR [rip+0x883],0x1        # 0x25d4
  01d51:    	je     0x36a6c
  01d57: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01d5e: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  01d65:    	sub    rsp,0x60
  01d69:    	movq   QWORD PTR [rsp],xmm2
  01d6e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01d74:    	movq   QWORD PTR [rsp+0x10],xmm4
  01d7a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01d80:    	movq   QWORD PTR [rsp+0x20],xmm6
  01d86:    	movq   QWORD PTR [rsp+0x28],xmm7
  01d8c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01d93: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01d9a: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01da1: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01da8: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01daf:    	mov    rdx,rdi
  01db2:    	mov    rcx,rsi
  01db5:    	mov    rdi,rbx
  01db8:    	mov    rsi,r12
  01dbb: 31 	movabs rax,0x563184087f80
  01dc5:    	call   rax
  01dc7:    	movq   xmm2,QWORD PTR [rsp]
  01dcc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01dd2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01dd8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01dde:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01de4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01dea: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01df1: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01df8: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01dff: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01e06: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01e0d:    	add    rsp,0x60
  01e11: 31 	movabs r13,0x563184ccc190
  01e1b:    	test   rax,rax
  01e1e:    	je     0xfffe8c43
  01e24: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00130 _ = %14.call y=(%15; 1)              [<INVALID>]
  01e2b: 01 	sub    DWORD PTR [rip+0x7a6],0x1        # 0x25d8
  01e32:    	je     0x36b07
  01e38:    	sub    rsp,0x60
  01e3c:    	movq   QWORD PTR [rsp],xmm2
  01e41:    	movq   QWORD PTR [rsp+0x8],xmm3
  01e47:    	movq   QWORD PTR [rsp+0x10],xmm4
  01e4d:    	movq   QWORD PTR [rsp+0x18],xmm5
  01e53:    	movq   QWORD PTR [rsp+0x20],xmm6
  01e59:    	movq   QWORD PTR [rsp+0x28],xmm7
  01e5f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01e66: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01e6d: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01e74: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01e7b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01e82: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01e89: 31 	movabs rax,0x5631840958d0
  01e93:    	call   rax
  01e95:    	mov    r15d,eax
  01e98: 00 	cmp    r15d,DWORD PTR [rip+0x741]        # 0x25e0
  01e9f:    	jne    0x36b29
  01ea5:    	mov    eax,DWORD PTR [rip+0xfffffffffffe9876]        # 0xfffeb721
  01eab:    	cmp    DWORD PTR [rip+0x72b],eax        # 0x25dc
  01eb1:    	jne    0x36b29
  01eb7:    	mov    rax,QWORD PTR [rbx]
  01eba:    	lea    rdi,[rsp-0x18]
  01ebf:    	mov    QWORD PTR [rdi],rax
  01ec2:    	mov    QWORD PTR [rbx],rdi
  01ec5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01ece:    	mov    QWORD PTR [rsp-0x38],rcx
  01ed3: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01eda:    	mov    QWORD PTR [rsp-0x38],rax
  01edf: 00 	mov    rdi,0x1
  01ee6: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01eed:    	mov    QWORD PTR [rsp-0x40],rax
  01ef2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01efb: 00 	movabs rax,0x0
  01f05:    	mov    QWORD PTR [rsp-0x28],rax
  01f0a: 00 	movabs r13,0x0
  01f14:    	call   0xfffe8c08
  01f19:    	lea    rdi,[rbp-0x8]
  01f1d:    	mov    QWORD PTR [rbx],rdi
  01f20:    	movq   xmm2,QWORD PTR [rsp]
  01f25:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01f2b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01f31:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01f37:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01f3d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01f43: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01f4a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01f51: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01f58: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01f5f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01f66:    	add    rsp,0x60
  01f6a:    	test   rax,rax
  01f6d:    	je     0x36b98
:00131 
:00133 %14 = dynvar(2, %2)
  01f73:    	mov    rax,QWORD PTR [rbp-0x10]
  01f77:    	mov    rax,QWORD PTR [rax]
  01f7a:    	mov    rax,QWORD PTR [rax-0x28]
  01f7e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00134 %16 = dynvar(2, %2)
  01f85:    	mov    rax,QWORD PTR [rbp-0x10]
  01f89:    	mov    rax,QWORD PTR [rax]
  01f8c:    	mov    rax,QWORD PTR [rax-0x28]
  01f90: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00135 %15 = %16.call z()                   [<INVALID>]
  01f97: 01 	sub    DWORD PTR [rip+0x646],0x1        # 0x25e4
  01f9e:    	je     0x36c20
  01fa4:    	sub    rsp,0x60
  01fa8:    	movq   QWORD PTR [rsp],xmm2
  01fad:    	movq   QWORD PTR [rsp+0x8],xmm3
  01fb3:    	movq   QWORD PTR [rsp+0x10],xmm4
  01fb9:    	movq   QWORD PTR [rsp+0x18],xmm5
  01fbf:    	movq   QWORD PTR [rsp+0x20],xmm6
  01fc5:    	movq   QWORD PTR [rsp+0x28],xmm7
  01fcb: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01fd2: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01fd9: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01fe0: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01fe7: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01fee: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01ff5: 31 	movabs rax,0x5631840958d0
  01fff:    	call   rax
  02001:    	mov    r15d,eax
  02004: 00 	cmp    r15d,DWORD PTR [rip+0x5e1]        # 0x25ec
  0200b:    	jne    0x36c42
  02011:    	mov    eax,DWORD PTR [rip+0xfffffffffffe970a]        # 0xfffeb721
  02017:    	cmp    DWORD PTR [rip+0x5cb],eax        # 0x25e8
  0201d:    	jne    0x36c42
  02023:    	mov    rax,QWORD PTR [rbx]
  02026:    	lea    rdi,[rsp-0x18]
  0202b:    	mov    QWORD PTR [rdi],rax
  0202e:    	mov    QWORD PTR [rbx],rdi
  02031: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0203a:    	mov    QWORD PTR [rsp-0x38],rcx
  0203f: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  02046:    	mov    QWORD PTR [rsp-0x38],rax
  0204b: 00 	mov    rdi,0x0
  02052: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0205b: 00 	movabs rax,0x0
  02065:    	mov    QWORD PTR [rsp-0x28],rax
  0206a: 00 	movabs r13,0x0
  02074:    	call   0xfffe8c08
  02079:    	lea    rdi,[rbp-0x8]
  0207d:    	mov    QWORD PTR [rbx],rdi
  02080:    	movq   xmm2,QWORD PTR [rsp]
  02085:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0208b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02091:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02097:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0209d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  020a3: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  020aa: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  020b1: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  020b8: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  020bf: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  020c6:    	add    rsp,0x60
  020ca:    	test   rax,rax
  020cd:    	je     0x36cb1
  020d3: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00136 
:00138 %16 = %13.call z()                   [<INVALID>]
  020da: 01 	sub    DWORD PTR [rip+0x50f],0x1        # 0x25f0
  020e1:    	je     0x36d39
  020e7:    	sub    rsp,0x60
  020eb:    	movq   QWORD PTR [rsp],xmm2
  020f0:    	movq   QWORD PTR [rsp+0x8],xmm3
  020f6:    	movq   QWORD PTR [rsp+0x10],xmm4
  020fc:    	movq   QWORD PTR [rsp+0x18],xmm5
  02102:    	movq   QWORD PTR [rsp+0x20],xmm6
  02108:    	movq   QWORD PTR [rsp+0x28],xmm7
  0210e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02115: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0211c: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02123: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0212a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02131: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02138: 31 	movabs rax,0x5631840958d0
  02142:    	call   rax
  02144:    	mov    r15d,eax
  02147: 00 	cmp    r15d,DWORD PTR [rip+0x4aa]        # 0x25f8
  0214e:    	jne    0x36d5b
  02154:    	mov    eax,DWORD PTR [rip+0xfffffffffffe95c7]        # 0xfffeb721
  0215a:    	cmp    DWORD PTR [rip+0x494],eax        # 0x25f4
  02160:    	jne    0x36d5b
  02166:    	mov    rax,QWORD PTR [rbx]
  02169:    	lea    rdi,[rsp-0x18]
  0216e:    	mov    QWORD PTR [rdi],rax
  02171:    	mov    QWORD PTR [rbx],rdi
  02174: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0217d:    	mov    QWORD PTR [rsp-0x38],rcx
  02182: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02189:    	mov    QWORD PTR [rsp-0x38],rax
  0218e: 00 	mov    rdi,0x0
  02195: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0219e: 00 	movabs rax,0x0
  021a8:    	mov    QWORD PTR [rsp-0x28],rax
  021ad: 00 	movabs r13,0x0
  021b7:    	call   0xfffe8c08
  021bc:    	lea    rdi,[rbp-0x8]
  021c0:    	mov    QWORD PTR [rbx],rdi
  021c3:    	movq   xmm2,QWORD PTR [rsp]
  021c8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  021ce:    	movq   xmm4,QWORD PTR [rsp+0x10]
  021d4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  021da:    	movq   xmm6,QWORD PTR [rsp+0x20]
  021e0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  021e6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  021ed: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  021f4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  021fb: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02202: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02209:    	add    rsp,0x60
  0220d:    	test   rax,rax
  02210:    	je     0x36dca
  02216: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00139 
:00141 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  0221d: 01 	sub    DWORD PTR [rip+0x3d8],0x1        # 0x25fc
  02224:    	je     0x36e52
  0222a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  02231: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  02238:    	sub    rsp,0x60
  0223c:    	movq   QWORD PTR [rsp],xmm2
  02241:    	movq   QWORD PTR [rsp+0x8],xmm3
  02247:    	movq   QWORD PTR [rsp+0x10],xmm4
  0224d:    	movq   QWORD PTR [rsp+0x18],xmm5
  02253:    	movq   QWORD PTR [rsp+0x20],xmm6
  02259:    	movq   QWORD PTR [rsp+0x28],xmm7
  0225f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02266: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0226d: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02274: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0227b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02282:    	mov    rdx,rdi
  02285:    	mov    rcx,rsi
  02288:    	mov    rdi,rbx
  0228b:    	mov    rsi,r12
  0228e: 31 	movabs rax,0x563184087f80
  02298:    	call   rax
  0229a:    	movq   xmm2,QWORD PTR [rsp]
  0229f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  022a5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  022ab:    	movq   xmm5,QWORD PTR [rsp+0x18]
  022b1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  022b7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  022bd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  022c4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  022cb: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  022d2: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  022d9: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  022e0:    	add    rsp,0x60
  022e4: 31 	movabs r13,0x563184ccc250
  022ee:    	test   rax,rax
  022f1:    	je     0xfffe8c43
  022f7: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00142 _ = %14.call z=(%15; 1)              [<INVALID>]
  022fe: 01 	sub    DWORD PTR [rip+0x2fb],0x1        # 0x2600
  02305:    	je     0x36eed
  0230b:    	sub    rsp,0x60
  0230f:    	movq   QWORD PTR [rsp],xmm2
  02314:    	movq   QWORD PTR [rsp+0x8],xmm3
  0231a:    	movq   QWORD PTR [rsp+0x10],xmm4
  02320:    	movq   QWORD PTR [rsp+0x18],xmm5
  02326:    	movq   QWORD PTR [rsp+0x20],xmm6
  0232c:    	movq   QWORD PTR [rsp+0x28],xmm7
  02332: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02339: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02340: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02347: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0234e: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02355: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0235c: 31 	movabs rax,0x5631840958d0
  02366:    	call   rax
  02368:    	mov    r15d,eax
  0236b: 00 	cmp    r15d,DWORD PTR [rip+0x296]        # 0x2608
  02372:    	jne    0x36f0f
  02378:    	mov    eax,DWORD PTR [rip+0xfffffffffffe93a3]        # 0xfffeb721
  0237e:    	cmp    DWORD PTR [rip+0x280],eax        # 0x2604
  02384:    	jne    0x36f0f
  0238a:    	mov    rax,QWORD PTR [rbx]
  0238d:    	lea    rdi,[rsp-0x18]
  02392:    	mov    QWORD PTR [rdi],rax
  02395:    	mov    QWORD PTR [rbx],rdi
  02398: 00 	mov    QWORD PTR [rsp-0x20],0x0
  023a1:    	mov    QWORD PTR [rsp-0x38],rcx
  023a6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  023ad:    	mov    QWORD PTR [rsp-0x38],rax
  023b2: 00 	mov    rdi,0x1
  023b9: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  023c0:    	mov    QWORD PTR [rsp-0x40],rax
  023c5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  023ce: 00 	movabs rax,0x0
  023d8:    	mov    QWORD PTR [rsp-0x28],rax
  023dd: 00 	movabs r13,0x0
  023e7:    	call   0xfffe8c08
  023ec:    	lea    rdi,[rbp-0x8]
  023f0:    	mov    QWORD PTR [rbx],rdi
  023f3:    	movq   xmm2,QWORD PTR [rsp]
  023f8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  023fe:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02404:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0240a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02410:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02416: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0241d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  02424: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0242b: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02432: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02439:    	add    rsp,0x60
  0243d:    	test   rax,rax
  02440:    	je     0x36f7e
:00143 
:00145 %14 = %15
  02446: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0244d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 ret %14
  02454: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0245b:    	leave  
  0245c:    	ret    
:00147 %14 = nil
  0245d: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00148 ret %14
  02468: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0246f:    	leave  
  02470:    	ret    
==> start whole compile: ambient_occlusion FuncId(75) self_class:Scene start:[00000] bytecode:0x563184c879b0
<== finished compile. elapsed:83.7µs
offset:Pos(104964) code: 3966 bytes  data: 294 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0xa0
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x38],rax
  00016: mov    QWORD PTR [rbp-0x40],rax
  0001a: mov    QWORD PTR [rbp-0x48],rax
  0001e: mov    QWORD PTR [rbp-0x50],rax
  00022: mov    QWORD PTR [rbp-0x58],rax
  00026: mov    QWORD PTR [rbp-0x60],rax
  0002a: mov    QWORD PTR [rbp-0x68],rax
  0002e: mov    QWORD PTR [rbp-0x70],rax
  00032: mov    QWORD PTR [rbp-0x78],rax
  00036: mov    QWORD PTR [rbp-0x80],rax
  0003a: mov    QWORD PTR [rbp-0x88],rax
  00041: mov    QWORD PTR [rbp-0x90],rax
  00048: mov    rdi,QWORD PTR [rbp-0x28]
  0004c: test   rdi,0x7
  00053: jne    0x34981
  00059: cmp    DWORD PTR [rdi+0x4],0x32
  0005d: jne    0x34981
:00000 %8 = const[Array]                    [Array]
  00063: mov    rax,QWORD PTR [rip+0xfffffffffffe90b2]        # 0xfffe911c
  0006a: cmp    rax,QWORD PTR [rip+0xf2b]        # 0xf9c
  00071: jne    0x34990
  00077: mov    rax,QWORD PTR [rip+0xf0e]        # 0xf8c
  0007e: mov    QWORD PTR [rbp-0x68],rax
:00001 %2 = %8.call new()                   [#<Class:Array>]
  00082: mov    rdi,QWORD PTR [rbp-0x68]
  00086: test   rdi,0x7
  0008d: jne    0x349d6
  00093: cmp    DWORD PTR [rdi+0x4],0x1e
  00097: jne    0x349d6
  0009d: cmp    DWORD PTR [rip+0xfffffffffffe9071],0x26        # 0xfffe9115
  000a4: jne    0x349d6
  000aa: mov    r9,0x0
  000b1: mov    rdx,rdi
  000b4: mov    rax,QWORD PTR [rbx]
  000b7: lea    rdi,[rsp-0x18]
  000bc: mov    QWORD PTR [rdi],rax
  000bf: mov    QWORD PTR [rbx],rdi
  000c2: mov    QWORD PTR [rsp-0x20],0x0
  000cb: mov    QWORD PTR [rsp-0x38],rcx
  000d0: lea    rcx,[rbp-0x70]
  000d4: mov    r8,0x0
  000db: call   0x349e5
  000e0: lea    rdi,[rbp-0x8]
  000e4: mov    QWORD PTR [rbx],rdi
  000e7: movabs r13,0x563184c879e0
  000f1: test   rax,rax
  000f4: je     0xfffe6637
  000fa: mov    QWORD PTR [rbp-0x38],rax
:00002 
:00004 %8 = %2
  000fe: mov    rax,QWORD PTR [rbp-0x38]
  00102: mov    QWORD PTR [rbp-0x68],rax
:00005 %9 = %1.call n()                     [Isect]
  00106: mov    rdi,QWORD PTR [rbp-0x30]
  0010a: test   rdi,0x7
  00111: jne    0x34a17
  00117: cmp    DWORD PTR [rdi+0x4],0x30
  0011b: jne    0x34a17
  00121: cmp    DWORD PTR [rip+0xfffffffffffe8fed],0x26        # 0xfffe9115
  00128: jne    0x34a17
  0012e: mov    esi,DWORD PTR [rip+0xe74]        # 0xfa8
  00134: cmp    esi,0xffffffff
  00137: je     0x34a26
  0013d: cmp    WORD PTR [rdi+0x2],0x3
  00142: jne    0x15b
  00148: cmp    esi,0x6
  0014b: jge    0x15b
  00151: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00156: jmp    0x167
  0015b: movabs rax,0x563184053740
  00165: call   rax
  00167: mov    QWORD PTR [rbp-0x70],rax
:00006 
:00008 _ = %0.call otherBasis(%8; 2)        [Scene]
  0016b: mov    rdi,QWORD PTR [rbp-0x28]
  0016f: cmp    DWORD PTR [rip+0xfffffffffffe8f9f],0x26        # 0xfffe9115
  00176: jne    0x34a4f
  0017c: mov    rax,QWORD PTR [rbx]
  0017f: lea    rdi,[rsp-0x18]
  00184: mov    QWORD PTR [rdi],rax
  00187: mov    QWORD PTR [rbx],rdi
  0018a: mov    QWORD PTR [rsp-0x20],0x0
  00193: mov    QWORD PTR [rsp-0x38],rcx
  00198: mov    rax,QWORD PTR [rbp-0x28]
  0019c: mov    QWORD PTR [rsp-0x38],rax
  001a1: mov    rdi,0x2
  001a8: mov    rax,QWORD PTR [rbp-0x68]
  001ac: mov    QWORD PTR [rsp-0x40],rax
  001b1: mov    rax,QWORD PTR [rbp-0x70]
  001b5: mov    QWORD PTR [rsp-0x48],rax
  001ba: mov    QWORD PTR [rsp-0x30],0x0
  001c3: movabs rax,0x90000003b
  001cd: mov    QWORD PTR [rsp-0x28],rax
  001d2: movabs r13,0x563184c9dfe0
  001dc: call   0xffff2bd1
  001e1: lea    rdi,[rbp-0x8]
  001e5: mov    QWORD PTR [rbx],rdi
  001e8: movabs r13,0x563184c87a50
  001f2: test   rax,rax
  001f5: je     0xfffe6637
:00009 
:00011 %3 = const[NAO_SAMPLES]              [8]
  001fb: mov    rax,QWORD PTR [rip+0xfffffffffffe8f1a]        # 0xfffe911c
  00202: cmp    rax,QWORD PTR [rip+0xdb3]        # 0xfbc
  00209: jne    0x34a5e
  0020f: mov    rax,QWORD PTR [rip+0xd96]        # 0xfac
  00216: mov    QWORD PTR [rbp-0x40],rax
:00012 %4 = const[NAO_SAMPLES]              [8]
  0021a: mov    rax,QWORD PTR [rip+0xfffffffffffe8efb]        # 0xfffe911c
  00221: cmp    rax,QWORD PTR [rip+0xdb4]        # 0xfdc
  00228: jne    0x34aa4
  0022e: mov    rax,QWORD PTR [rip+0xd97]        # 0xfcc
  00235: mov    QWORD PTR [rbp-0x48],rax
:00013 %5 = literal[0.0001]
  00239: movq   xmm2,QWORD PTR [rip+0xdab]        # 0xfec
  00241: movabs rax,0xf8d1b71758e2196a
  0024b: mov    QWORD PTR [rbp-0x50],rax
:00014 %6 = literal[0.0]
  0024f: movq   xmm3,QWORD PTR [rip+0xda5]        # 0xffc
  00257: movabs rax,0x8000000000000002
  00261: mov    QWORD PTR [rbp-0x58],rax
:00015 %8 = const[Vec]                      [Vec]
  00265: mov    rax,QWORD PTR [rip+0xfffffffffffe8eb0]        # 0xfffe911c
  0026c: cmp    rax,QWORD PTR [rip+0xda9]        # 0x101c
  00273: jne    0x34aea
  00279: mov    rax,QWORD PTR [rip+0xd8c]        # 0x100c
  00280: mov    QWORD PTR [rbp-0x68],rax
:00016 %10 = %1.call pl()                   [Isect]
  00284: mov    rdi,QWORD PTR [rbp-0x30]
  00288: test   rdi,0x7
  0028f: jne    0x34b4e
  00295: cmp    DWORD PTR [rdi+0x4],0x30
  00299: jne    0x34b4e
  0029f: cmp    DWORD PTR [rip+0xfffffffffffe8e6f],0x26        # 0xfffe9115
  002a6: jne    0x34b4e
  002ac: mov    esi,DWORD PTR [rip+0xd76]        # 0x1028
  002b2: cmp    esi,0xffffffff
  002b5: je     0x34b5d
  002bb: cmp    WORD PTR [rdi+0x2],0x3
  002c0: jne    0x2d9
  002c6: cmp    esi,0x6
  002c9: jge    0x2d9
  002cf: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  002d4: jmp    0x303
  002d9: sub    rsp,0x10
  002dd: movq   QWORD PTR [rsp],xmm2
  002e2: movq   QWORD PTR [rsp+0x8],xmm3
  002e8: movabs rax,0x563184053740
  002f2: call   rax
  002f4: movq   xmm2,QWORD PTR [rsp]
  002f9: movq   xmm3,QWORD PTR [rsp+0x8]
  002ff: add    rsp,0x10
  00303: mov    QWORD PTR [rbp-0x78],rax
:00017 
:00019 %9 = %10.call x()                    [Vec]
  00307: mov    rdi,QWORD PTR [rbp-0x78]
  0030b: test   rdi,0x7
  00312: jne    0x34ba4
  00318: cmp    DWORD PTR [rdi+0x4],0x28
  0031c: jne    0x34ba4
  00322: cmp    DWORD PTR [rip+0xfffffffffffe8dec],0x26        # 0xfffe9115
  00329: jne    0x34ba4
  0032f: mov    esi,DWORD PTR [rip+0xcfb]        # 0x1030
  00335: cmp    esi,0xffffffff
  00338: je     0x34bb3
  0033e: cmp    WORD PTR [rdi+0x2],0x3
  00343: jne    0x35c
  00349: cmp    esi,0x6
  0034c: jge    0x35c
  00352: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00357: jmp    0x386
  0035c: sub    rsp,0x10
  00360: movq   QWORD PTR [rsp],xmm2
  00365: movq   QWORD PTR [rsp+0x8],xmm3
  0036b: movabs rax,0x563184053740
  00375: call   rax
  00377: movq   xmm2,QWORD PTR [rsp]
  0037c: movq   xmm3,QWORD PTR [rsp+0x8]
  00382: add    rsp,0x10
  00386: mov    QWORD PTR [rbp-0x70],rax
:00020 
:00022 %11 = %1.call n()                    [Isect]
  0038a: mov    rdi,QWORD PTR [rbp-0x30]
  0038e: test   rdi,0x7
  00395: jne    0x34bfa
  0039b: cmp    DWORD PTR [rdi+0x4],0x30
  0039f: jne    0x34bfa
  003a5: cmp    DWORD PTR [rip+0xfffffffffffe8d69],0x26        # 0xfffe9115
  003ac: jne    0x34bfa
  003b2: mov    esi,DWORD PTR [rip+0xc80]        # 0x1038
  003b8: cmp    esi,0xffffffff
  003bb: je     0x34c09
  003c1: cmp    WORD PTR [rdi+0x2],0x3
  003c6: jne    0x3df
  003cc: cmp    esi,0x6
  003cf: jge    0x3df
  003d5: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003da: jmp    0x409
  003df: sub    rsp,0x10
  003e3: movq   QWORD PTR [rsp],xmm2
  003e8: movq   QWORD PTR [rsp+0x8],xmm3
  003ee: movabs rax,0x563184053740
  003f8: call   rax
  003fa: movq   xmm2,QWORD PTR [rsp]
  003ff: movq   xmm3,QWORD PTR [rsp+0x8]
  00405: add    rsp,0x10
  00409: mov    QWORD PTR [rbp-0x80],rax
:00023 
:00025 %10 = %11.call x()                   [Vec]
  0040d: mov    rdi,QWORD PTR [rbp-0x80]
  00411: test   rdi,0x7
  00418: jne    0x34c50
  0041e: cmp    DWORD PTR [rdi+0x4],0x28
  00422: jne    0x34c50
  00428: cmp    DWORD PTR [rip+0xfffffffffffe8ce6],0x26        # 0xfffe9115
  0042f: jne    0x34c50
  00435: mov    esi,DWORD PTR [rip+0xc05]        # 0x1040
  0043b: cmp    esi,0xffffffff
  0043e: je     0x34c5f
  00444: cmp    WORD PTR [rdi+0x2],0x3
  00449: jne    0x462
  0044f: cmp    esi,0x6
  00452: jge    0x462
  00458: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0045d: jmp    0x48c
  00462: sub    rsp,0x10
  00466: movq   QWORD PTR [rsp],xmm2
  0046b: movq   QWORD PTR [rsp+0x8],xmm3
  00471: movabs rax,0x563184053740
  0047b: call   rax
  0047d: movq   xmm2,QWORD PTR [rsp]
  00482: movq   xmm3,QWORD PTR [rsp+0x8]
  00488: add    rsp,0x10
  0048c: mov    QWORD PTR [rbp-0x78],rax
:00026 
:00028 %10 = %5 * %10                       [Float][Float]
  00490: mov    rdi,QWORD PTR [rbp-0x78]
  00494: test   rdi,0x1
  0049b: jne    0x34ca6
  004a1: test   rdi,0x2
  004a8: je     0x4e4
  004ae: xorps  xmm4,xmm4
  004b1: movabs rax,0x8000000000000002
  004bb: cmp    rdi,rax
  004be: je     0x4f6
  004c4: mov    rax,rdi
  004c7: sar    rax,0x3f
  004cb: add    rax,0x2
  004cf: and    rdi,0xfffffffffffffffc
  004d3: or     rdi,rax
  004d6: rol    rdi,0x3d
  004da: movq   xmm4,rdi
  004df: jmp    0x4f6
  004e4: call   0xfffe6670
  004e9: test   rax,rax
  004ec: je     0x34ca6
  004f2: movq   xmm4,xmm0
  004f6: mulsd  xmm4,xmm2
:00029 %9 = %9 + %10                        [Float][Float]
  004fa: mov    rdi,QWORD PTR [rbp-0x70]
  004fe: test   rdi,0x1
  00505: jne    0x34cb5
  0050b: test   rdi,0x2
  00512: je     0x54e
  00518: xorps  xmm5,xmm5
  0051b: movabs rax,0x8000000000000002
  00525: cmp    rdi,rax
  00528: je     0x560
  0052e: mov    rax,rdi
  00531: sar    rax,0x3f
  00535: add    rax,0x2
  00539: and    rdi,0xfffffffffffffffc
  0053d: or     rdi,rax
  00540: rol    rdi,0x3d
  00544: movq   xmm5,rdi
  00549: jmp    0x560
  0054e: call   0xfffe6670
  00553: test   rax,rax
  00556: je     0x34cb5
  0055c: movq   xmm5,xmm0
  00560: addsd  xmm5,xmm4
:00030 %11 = %1.call pl()                   [Isect]
  00564: mov    rdi,QWORD PTR [rbp-0x30]
  00568: test   rdi,0x7
  0056f: jne    0x34cd1
  00575: cmp    DWORD PTR [rdi+0x4],0x30
  00579: jne    0x34cd1
  0057f: cmp    DWORD PTR [rip+0xfffffffffffe8b8f],0x26        # 0xfffe9115
  00586: jne    0x34cd1
  0058c: mov    esi,DWORD PTR [rip+0xab6]        # 0x1048
  00592: cmp    esi,0xffffffff
  00595: je     0x34cfa
  0059b: cmp    WORD PTR [rdi+0x2],0x3
  005a0: jne    0x5b9
  005a6: cmp    esi,0x6
  005a9: jge    0x5b9
  005af: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005b4: jmp    0x5fb
  005b9: sub    rsp,0x20
  005bd: movq   QWORD PTR [rsp],xmm2
  005c2: movq   QWORD PTR [rsp+0x8],xmm3
  005c8: movq   QWORD PTR [rsp+0x10],xmm4
  005ce: movq   QWORD PTR [rsp+0x18],xmm5
  005d4: movabs rax,0x563184053740
  005de: call   rax
  005e0: movq   xmm2,QWORD PTR [rsp]
  005e5: movq   xmm3,QWORD PTR [rsp+0x8]
  005eb: movq   xmm4,QWORD PTR [rsp+0x10]
  005f1: movq   xmm5,QWORD PTR [rsp+0x18]
  005f7: add    rsp,0x20
  005fb: mov    QWORD PTR [rbp-0x80],rax
:00031 
:00033 %10 = %11.call y()                   [Vec]
  005ff: mov    rdi,QWORD PTR [rbp-0x80]
  00603: test   rdi,0x7
  0060a: jne    0x34d59
  00610: cmp    DWORD PTR [rdi+0x4],0x28
  00614: jne    0x34d59
  0061a: cmp    DWORD PTR [rip+0xfffffffffffe8af4],0x26        # 0xfffe9115
  00621: jne    0x34d59
  00627: mov    esi,DWORD PTR [rip+0xa23]        # 0x1050
  0062d: cmp    esi,0xffffffff
  00630: je     0x34d75
  00636: cmp    WORD PTR [rdi+0x2],0x3
  0063b: jne    0x654
  00641: cmp    esi,0x6
  00644: jge    0x654
  0064a: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0064f: jmp    0x68a
  00654: sub    rsp,0x20
  00658: movq   QWORD PTR [rsp],xmm2
  0065d: movq   QWORD PTR [rsp+0x8],xmm3
  00663: movq   QWORD PTR [rsp+0x10],xmm5
  00669: movabs rax,0x563184053740
  00673: call   rax
  00675: movq   xmm2,QWORD PTR [rsp]
  0067a: movq   xmm3,QWORD PTR [rsp+0x8]
  00680: movq   xmm5,QWORD PTR [rsp+0x10]
  00686: add    rsp,0x20
  0068a: mov    QWORD PTR [rbp-0x78],rax
:00034 
:00036 %12 = %1.call n()                    [Isect]
  0068e: mov    rdi,QWORD PTR [rbp-0x30]
  00692: test   rdi,0x7
  00699: jne    0x34dc8
  0069f: cmp    DWORD PTR [rdi+0x4],0x30
  006a3: jne    0x34dc8
  006a9: cmp    DWORD PTR [rip+0xfffffffffffe8a65],0x26        # 0xfffe9115
  006b0: jne    0x34dc8
  006b6: mov    esi,DWORD PTR [rip+0x99c]        # 0x1058
  006bc: cmp    esi,0xffffffff
  006bf: je     0x34de4
  006c5: cmp    WORD PTR [rdi+0x2],0x3
  006ca: jne    0x6e3
  006d0: cmp    esi,0x6
  006d3: jge    0x6e3
  006d9: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  006de: jmp    0x719
  006e3: sub    rsp,0x20
  006e7: movq   QWORD PTR [rsp],xmm2
  006ec: movq   QWORD PTR [rsp+0x8],xmm3
  006f2: movq   QWORD PTR [rsp+0x10],xmm5
  006f8: movabs rax,0x563184053740
  00702: call   rax
  00704: movq   xmm2,QWORD PTR [rsp]
  00709: movq   xmm3,QWORD PTR [rsp+0x8]
  0070f: movq   xmm5,QWORD PTR [rsp+0x10]
  00715: add    rsp,0x20
  00719: mov    QWORD PTR [rbp-0x88],rax
:00037 
:00039 %11 = %12.call y()                   [Vec]
  00720: mov    rdi,QWORD PTR [rbp-0x88]
  00727: test   rdi,0x7
  0072e: jne    0x34e37
  00734: cmp    DWORD PTR [rdi+0x4],0x28
  00738: jne    0x34e37
  0073e: cmp    DWORD PTR [rip+0xfffffffffffe89d0],0x26        # 0xfffe9115
  00745: jne    0x34e37
  0074b: mov    esi,DWORD PTR [rip+0x90f]        # 0x1060
  00751: cmp    esi,0xffffffff
  00754: je     0x34e53
  0075a: cmp    WORD PTR [rdi+0x2],0x3
  0075f: jne    0x778
  00765: cmp    esi,0x6
  00768: jge    0x778
  0076e: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00773: jmp    0x7ae
  00778: sub    rsp,0x20
  0077c: movq   QWORD PTR [rsp],xmm2
  00781: movq   QWORD PTR [rsp+0x8],xmm3
  00787: movq   QWORD PTR [rsp+0x10],xmm5
  0078d: movabs rax,0x563184053740
  00797: call   rax
  00799: movq   xmm2,QWORD PTR [rsp]
  0079e: movq   xmm3,QWORD PTR [rsp+0x8]
  007a4: movq   xmm5,QWORD PTR [rsp+0x10]
  007aa: add    rsp,0x20
  007ae: mov    QWORD PTR [rbp-0x80],rax
:00040 
:00042 %11 = %5 * %11                       [Float][Float]
  007b2: mov    rdi,QWORD PTR [rbp-0x80]
  007b6: test   rdi,0x1
  007bd: jne    0x34ea6
  007c3: test   rdi,0x2
  007ca: je     0x806
  007d0: xorps  xmm4,xmm4
  007d3: movabs rax,0x8000000000000002
  007dd: cmp    rdi,rax
  007e0: je     0x818
  007e6: mov    rax,rdi
  007e9: sar    rax,0x3f
  007ed: add    rax,0x2
  007f1: and    rdi,0xfffffffffffffffc
  007f5: or     rdi,rax
  007f8: rol    rdi,0x3d
  007fc: movq   xmm4,rdi
  00801: jmp    0x818
  00806: call   0xfffe6670
  0080b: test   rax,rax
  0080e: je     0x34ea6
  00814: movq   xmm4,xmm0
  00818: mulsd  xmm4,xmm2
:00043 %10 = %10 + %11                      [Float][Float]
  0081c: mov    rdi,QWORD PTR [rbp-0x78]
  00820: test   rdi,0x1
  00827: jne    0x34ec2
  0082d: test   rdi,0x2
  00834: je     0x870
  0083a: xorps  xmm6,xmm6
  0083d: movabs rax,0x8000000000000002
  00847: cmp    rdi,rax
  0084a: je     0x882
  00850: mov    rax,rdi
  00853: sar    rax,0x3f
  00857: add    rax,0x2
  0085b: and    rdi,0xfffffffffffffffc
  0085f: or     rdi,rax
  00862: rol    rdi,0x3d
  00866: movq   xmm6,rdi
  0086b: jmp    0x882
  00870: call   0xfffe6670
  00875: test   rax,rax
  00878: je     0x34ec2
  0087e: movq   xmm6,xmm0
  00882: addsd  xmm6,xmm4
:00044 %12 = %1.call pl()                   [Isect]
  00886: mov    rdi,QWORD PTR [rbp-0x30]
  0088a: test   rdi,0x7
  00891: jne    0x34eeb
  00897: cmp    DWORD PTR [rdi+0x4],0x30
  0089b: jne    0x34eeb
  008a1: cmp    DWORD PTR [rip+0xfffffffffffe886d],0x26        # 0xfffe9115
  008a8: jne    0x34eeb
  008ae: mov    esi,DWORD PTR [rip+0x7b4]        # 0x1068
  008b4: cmp    esi,0xffffffff
  008b7: je     0x34f21
  008bd: cmp    WORD PTR [rdi+0x2],0x3
  008c2: jne    0x8db
  008c8: cmp    esi,0x6
  008cb: jge    0x8db
  008d1: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  008d6: jmp    0x929
  008db: sub    rsp,0x30
  008df: movq   QWORD PTR [rsp],xmm2
  008e4: movq   QWORD PTR [rsp+0x8],xmm3
  008ea: movq   QWORD PTR [rsp+0x10],xmm4
  008f0: movq   QWORD PTR [rsp+0x18],xmm5
  008f6: movq   QWORD PTR [rsp+0x20],xmm6
  008fc: movabs rax,0x563184053740
  00906: call   rax
  00908: movq   xmm2,QWORD PTR [rsp]
  0090d: movq   xmm3,QWORD PTR [rsp+0x8]
  00913: movq   xmm4,QWORD PTR [rsp+0x10]
  00919: movq   xmm5,QWORD PTR [rsp+0x18]
  0091f: movq   xmm6,QWORD PTR [rsp+0x20]
  00925: add    rsp,0x30
  00929: mov    QWORD PTR [rbp-0x88],rax
:00045 
:00047 %11 = %12.call z()                   [Vec]
  00930: mov    rdi,QWORD PTR [rbp-0x88]
  00937: test   rdi,0x7
  0093e: jne    0x34f8c
  00944: cmp    DWORD PTR [rdi+0x4],0x28
  00948: jne    0x34f8c
  0094e: cmp    DWORD PTR [rip+0xfffffffffffe87c0],0x26        # 0xfffe9115
  00955: jne    0x34f8c
  0095b: mov    esi,DWORD PTR [rip+0x70f]        # 0x1070
  00961: cmp    esi,0xffffffff
  00964: je     0x34fb5
  0096a: cmp    WORD PTR [rdi+0x2],0x3
  0096f: jne    0x988
  00975: cmp    esi,0x6
  00978: jge    0x988
  0097e: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00983: jmp    0x9ca
  00988: sub    rsp,0x20
  0098c: movq   QWORD PTR [rsp],xmm2
  00991: movq   QWORD PTR [rsp+0x8],xmm3
  00997: movq   QWORD PTR [rsp+0x10],xmm5
  0099d: movq   QWORD PTR [rsp+0x18],xmm6
  009a3: movabs rax,0x563184053740
  009ad: call   rax
  009af: movq   xmm2,QWORD PTR [rsp]
  009b4: movq   xmm3,QWORD PTR [rsp+0x8]
  009ba: movq   xmm5,QWORD PTR [rsp+0x10]
  009c0: movq   xmm6,QWORD PTR [rsp+0x18]
  009c6: add    rsp,0x20
  009ca: mov    QWORD PTR [rbp-0x80],rax
:00048 
:00050 %13 = %1.call n()                    [Isect]
  009ce: mov    rdi,QWORD PTR [rbp-0x30]
  009d2: test   rdi,0x7
  009d9: jne    0x35014
  009df: cmp    DWORD PTR [rdi+0x4],0x30
  009e3: jne    0x35014
  009e9: cmp    DWORD PTR [rip+0xfffffffffffe8725],0x26        # 0xfffe9115
  009f0: jne    0x35014
  009f6: mov    esi,DWORD PTR [rip+0x67c]        # 0x1078
  009fc: cmp    esi,0xffffffff
  009ff: je     0x3503d
  00a05: cmp    WORD PTR [rdi+0x2],0x3
  00a0a: jne    0xa23
  00a10: cmp    esi,0x6
  00a13: jge    0xa23
  00a19: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a1e: jmp    0xa65
  00a23: sub    rsp,0x20
  00a27: movq   QWORD PTR [rsp],xmm2
  00a2c: movq   QWORD PTR [rsp+0x8],xmm3
  00a32: movq   QWORD PTR [rsp+0x10],xmm5
  00a38: movq   QWORD PTR [rsp+0x18],xmm6
  00a3e: movabs rax,0x563184053740
  00a48: call   rax
  00a4a: movq   xmm2,QWORD PTR [rsp]
  00a4f: movq   xmm3,QWORD PTR [rsp+0x8]
  00a55: movq   xmm5,QWORD PTR [rsp+0x10]
  00a5b: movq   xmm6,QWORD PTR [rsp+0x18]
  00a61: add    rsp,0x20
  00a65: mov    QWORD PTR [rbp-0x90],rax
:00051 
:00053 %12 = %13.call z()                   [Vec]
  00a6c: mov    rdi,QWORD PTR [rbp-0x90]
  00a73: test   rdi,0x7
  00a7a: jne    0x3509c
  00a80: cmp    DWORD PTR [rdi+0x4],0x28
  00a84: jne    0x3509c
  00a8a: cmp    DWORD PTR [rip+0xfffffffffffe8684],0x26        # 0xfffe9115
  00a91: jne    0x3509c
  00a97: mov    esi,DWORD PTR [rip+0x5e3]        # 0x1080
  00a9d: cmp    esi,0xffffffff
  00aa0: je     0x350c5
  00aa6: cmp    WORD PTR [rdi+0x2],0x3
  00aab: jne    0xac4
  00ab1: cmp    esi,0x6
  00ab4: jge    0xac4
  00aba: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00abf: jmp    0xb06
  00ac4: sub    rsp,0x20
  00ac8: movq   QWORD PTR [rsp],xmm2
  00acd: movq   QWORD PTR [rsp+0x8],xmm3
  00ad3: movq   QWORD PTR [rsp+0x10],xmm5
  00ad9: movq   QWORD PTR [rsp+0x18],xmm6
  00adf: movabs rax,0x563184053740
  00ae9: call   rax
  00aeb: movq   xmm2,QWORD PTR [rsp]
  00af0: movq   xmm3,QWORD PTR [rsp+0x8]
  00af6: movq   xmm5,QWORD PTR [rsp+0x10]
  00afc: movq   xmm6,QWORD PTR [rsp+0x18]
  00b02: add    rsp,0x20
  00b06: mov    QWORD PTR [rbp-0x88],rax
:00054 
:00056 %12 = %5 * %12                       [Float][Float]
  00b0d: mov    rdi,QWORD PTR [rbp-0x88]
  00b14: test   rdi,0x1
  00b1b: jne    0x35124
  00b21: test   rdi,0x2
  00b28: je     0xb64
  00b2e: xorps  xmm4,xmm4
  00b31: movabs rax,0x8000000000000002
  00b3b: cmp    rdi,rax
  00b3e: je     0xb76
  00b44: mov    rax,rdi
  00b47: sar    rax,0x3f
  00b4b: add    rax,0x2
  00b4f: and    rdi,0xfffffffffffffffc
  00b53: or     rdi,rax
  00b56: rol    rdi,0x3d
  00b5a: movq   xmm4,rdi
  00b5f: jmp    0xb76
  00b64: call   0xfffe6670
  00b69: test   rax,rax
  00b6c: je     0x35124
  00b72: movq   xmm4,xmm0
  00b76: mulsd  xmm4,xmm2
:00057 %11 = %11 + %12                      [Float][Float]
  00b7a: mov    rdi,QWORD PTR [rbp-0x80]
  00b7e: test   rdi,0x1
  00b85: jne    0x3514d
  00b8b: test   rdi,0x2
  00b92: je     0xbce
  00b98: xorps  xmm7,xmm7
  00b9b: movabs rax,0x8000000000000002
  00ba5: cmp    rdi,rax
  00ba8: je     0xbe0
  00bae: mov    rax,rdi
  00bb1: sar    rax,0x3f
  00bb5: add    rax,0x2
  00bb9: and    rdi,0xfffffffffffffffc
  00bbd: or     rdi,rax
  00bc0: rol    rdi,0x3d
  00bc4: movq   xmm7,rdi
  00bc9: jmp    0xbe0
  00bce: call   0xfffe6670
  00bd3: test   rax,rax
  00bd6: je     0x3514d
  00bdc: movq   xmm7,xmm0
  00be0: addsd  xmm7,xmm4
:00058 %7 = %8.call new(%9; 3)              [#<Class:Vec>]
  00be4: movq   xmm0,xmm5
  00be8: call   0xfffe6763
  00bed: mov    QWORD PTR [rbp-0x70],rax
  00bf1: movq   xmm0,xmm6
  00bf5: call   0xfffe6763
  00bfa: mov    QWORD PTR [rbp-0x78],rax
  00bfe: movq   xmm0,xmm7
  00c02: call   0xfffe6763
  00c07: mov    QWORD PTR [rbp-0x80],rax
  00c0b: mov    rdi,QWORD PTR [rbp-0x68]
  00c0f: test   rdi,0x7
  00c16: jne    0x35186
  00c1c: cmp    DWORD PTR [rdi+0x4],0x29
  00c20: jne    0x35186
  00c26: cmp    DWORD PTR [rip+0xfffffffffffe84e8],0x26        # 0xfffe9115
  00c2d: jne    0x35186
  00c33: mov    r9,0x0
  00c3a: sub    rsp,0x30
  00c3e: movq   QWORD PTR [rsp],xmm2
  00c43: movq   QWORD PTR [rsp+0x8],xmm3
  00c49: movq   QWORD PTR [rsp+0x10],xmm4
  00c4f: movq   QWORD PTR [rsp+0x18],xmm5
  00c55: movq   QWORD PTR [rsp+0x20],xmm6
  00c5b: movq   QWORD PTR [rsp+0x28],xmm7
  00c61: mov    rdx,rdi
  00c64: mov    rax,QWORD PTR [rbx]
  00c67: lea    rdi,[rsp-0x18]
  00c6c: mov    QWORD PTR [rdi],rax
  00c6f: mov    QWORD PTR [rbx],rdi
  00c72: mov    QWORD PTR [rsp-0x20],0x0
  00c7b: mov    QWORD PTR [rsp-0x38],rcx
  00c80: lea    rcx,[rbp-0x70]
  00c84: mov    r8,0x3
  00c8b: call   0x351a5
  00c90: lea    rdi,[rbp-0x8]
  00c94: mov    QWORD PTR [rbx],rdi
  00c97: movq   xmm2,QWORD PTR [rsp]
  00c9c: movq   xmm3,QWORD PTR [rsp+0x8]
  00ca2: movq   xmm4,QWORD PTR [rsp+0x10]
  00ca8: movq   xmm5,QWORD PTR [rsp+0x18]
  00cae: movq   xmm6,QWORD PTR [rsp+0x20]
  00cb4: movq   xmm7,QWORD PTR [rsp+0x28]
  00cba: add    rsp,0x30
  00cbe: movabs r13,0x563184c87d70
  00cc8: test   rax,rax
  00ccb: je     0xfffe6637
  00cd1: mov    QWORD PTR [rbp-0x60],rax
:00059 
:00061 %8 = literal[77]
  00cd5: mov    rax,0x9b
  00cdc: mov    QWORD PTR [rbp-0x68],rax
:00062 _ = %4.call times(&%8)               [Integer]
  00ce0: mov    rdi,QWORD PTR [rbp-0x48]
  00ce4: test   rdi,0x1
  00ceb: je     0x351d7
  00cf1: cmp    DWORD PTR [rip+0xfffffffffffe841d],0x26        # 0xfffe9115
  00cf8: jne    0x351d7
  00cfe: mov    r9,QWORD PTR [rbp-0x68]
  00d02: sub    rsp,0x20
  00d06: movq   QWORD PTR [rsp],xmm4
  00d0b: movq   QWORD PTR [rsp+0x8],xmm5
  00d11: movq   QWORD PTR [rsp+0x10],xmm6
  00d17: movq   QWORD PTR [rsp+0x18],xmm7
  00d1d: mov    rdx,rdi
  00d20: mov    rax,QWORD PTR [rbx]
  00d23: lea    rdi,[rsp-0x18]
  00d28: mov    QWORD PTR [rdi],rax
  00d2b: mov    QWORD PTR [rbx],rdi
  00d2e: mov    QWORD PTR [rsp-0x20],0x0
  00d37: mov    QWORD PTR [rsp-0x38],rcx
  00d3c: lea    rcx,[rbp-0x70]
  00d40: mov    r8,0x0
  00d47: call   0x351f6
  00d4c: lea    rdi,[rbp-0x8]
  00d50: mov    QWORD PTR [rbx],rdi
  00d53: movq   xmm4,QWORD PTR [rsp]
  00d58: movq   xmm5,QWORD PTR [rsp+0x8]
  00d5e: movq   xmm6,QWORD PTR [rsp+0x10]
  00d64: movq   xmm7,QWORD PTR [rsp+0x18]
  00d6a: add    rsp,0x20
  00d6e: movabs r13,0x563184c87db0
  00d78: test   rax,rax
  00d7b: je     0xfffe6637
:00063 
:00065 %8 = %3.call to_f()                  [Integer]
  00d81: mov    rdi,QWORD PTR [rbp-0x40]
  00d85: test   rdi,0x1
  00d8c: je     0x35228
  00d92: cmp    DWORD PTR [rip+0xfffffffffffe837c],0x26        # 0xfffe9115
  00d99: jne    0x35228
  00d9f: sar    rdi,1
  00da2: cvtsi2sd xmm2,rdi
:00066 
:00068 %9 = %4.call to_f()                  [Integer]
  00da7: mov    rdi,QWORD PTR [rbp-0x48]
  00dab: test   rdi,0x1
  00db2: je     0x35247
  00db8: cmp    DWORD PTR [rip+0xfffffffffffe8356],0x26        # 0xfffe9115
  00dbf: jne    0x35247
  00dc5: sar    rdi,1
  00dc8: cvtsi2sd xmm3,rdi
:00069 
:00071 %8 = %8 * %9                         [Float][Float]
  00dcd: mulsd  xmm2,xmm3
:00072 %8 = %8 - %6                         [Float][Float]
  00dd1: mov    rdi,QWORD PTR [rbp-0x58]
  00dd5: test   rdi,0x1
  00ddc: jne    0x35273
  00de2: test   rdi,0x2
  00de9: je     0xe25
  00def: xorps  xmm5,xmm5
  00df2: movabs rax,0x8000000000000002
  00dfc: cmp    rdi,rax
  00dff: je     0xe37
  00e05: mov    rax,rdi
  00e08: sar    rax,0x3f
  00e0c: add    rax,0x2
  00e10: and    rdi,0xfffffffffffffffc
  00e14: or     rdi,rax
  00e17: rol    rdi,0x3d
  00e1b: movq   xmm5,rdi
  00e20: jmp    0xe37
  00e25: call   0xfffe6670
  00e2a: test   rax,rax
  00e2d: je     0x35273
  00e33: movq   xmm5,xmm0
  00e37: subsd  xmm2,xmm5
:00073 %9 = %3.call to_f()                  [Integer]
  00e3b: mov    rdi,QWORD PTR [rbp-0x40]
  00e3f: test   rdi,0x1
  00e46: je     0x352ac
  00e4c: cmp    DWORD PTR [rip+0xfffffffffffe82c2],0x26        # 0xfffe9115
  00e53: jne    0x352ac
  00e59: sar    rdi,1
  00e5c: cvtsi2sd xmm3,rdi
:00074 
:00076 %10 = %4.call to_f()                 [Integer]
  00e61: mov    rdi,QWORD PTR [rbp-0x48]
  00e65: test   rdi,0x1
  00e6c: je     0x352d8
  00e72: cmp    DWORD PTR [rip+0xfffffffffffe829c],0x26        # 0xfffe9115
  00e79: jne    0x352d8
  00e7f: sar    rdi,1
  00e82: cvtsi2sd xmm6,rdi
:00077 
:00079 %9 = %9 * %10                        [Float][Float]
  00e87: mulsd  xmm3,xmm6
:00080 %6 = %8 / %9                         [Float][Float]
  00e8b: movq   xmm5,xmm2
  00e8f: movq   rax,xmm3
  00e94: test   rax,rax
  00e97: je     0xfffe665c
  00e9d: divsd  xmm5,xmm3
:00081 %9 = const[Vec]                      [Vec]
  00ea1: mov    rax,QWORD PTR [rip+0xfffffffffffe8274]        # 0xfffe911c
  00ea8: cmp    rax,QWORD PTR [rip+0x1ed]        # 0x109c
  00eaf: jne    0x35311
  00eb5: mov    rax,QWORD PTR [rip+0x1d0]        # 0x108c
  00ebc: mov    QWORD PTR [rbp-0x70],rax
:00082 %10 = %6
:00083 %11 = %6
:00084 %12 = %6
:00085 %8 = %9.call new(%10; 3)             [#<Class:Vec>]
  00ec0: movq   xmm0,xmm5
  00ec4: call   0xfffe6763
  00ec9: mov    QWORD PTR [rbp-0x78],rax
  00ecd: movq   xmm0,xmm5
  00ed1: call   0xfffe6763
  00ed6: mov    QWORD PTR [rbp-0x80],rax
  00eda: movq   xmm0,xmm5
  00ede: call   0xfffe6763
  00ee3: mov    QWORD PTR [rbp-0x88],rax
  00eea: mov    rdi,QWORD PTR [rbp-0x70]
  00eee: test   rdi,0x7
  00ef5: jne    0x35399
  00efb: cmp    DWORD PTR [rdi+0x4],0x29
  00eff: jne    0x35399
  00f05: cmp    DWORD PTR [rip+0xfffffffffffe8209],0x26        # 0xfffe9115
  00f0c: jne    0x35399
  00f12: mov    r9,0x0
  00f19: sub    rsp,0x10
  00f1d: movq   QWORD PTR [rsp],xmm5
  00f22: mov    rdx,rdi
  00f25: mov    rax,QWORD PTR [rbx]
  00f28: lea    rdi,[rsp-0x18]
  00f2d: mov    QWORD PTR [rdi],rax
  00f30: mov    QWORD PTR [rbx],rdi
  00f33: mov    QWORD PTR [rsp-0x20],0x0
  00f3c: mov    QWORD PTR [rsp-0x38],rcx
  00f41: lea    rcx,[rbp-0x78]
  00f45: mov    r8,0x3
  00f4c: call   0x353b5
  00f51: lea    rdi,[rbp-0x8]
  00f55: mov    QWORD PTR [rbx],rdi
  00f58: movq   xmm5,QWORD PTR [rsp]
  00f5d: add    rsp,0x10
  00f61: movabs r13,0x563184c87f20
  00f6b: test   rax,rax
  00f6e: je     0xfffe6637
  00f74: mov    QWORD PTR [rbp-0x68],rax
:00086 
:00088 ret %8
  00f78: mov    rax,QWORD PTR [rbp-0x68]
  00f7c: leave  
  00f7d: ret    
==> start whole compile: otherBasis FuncId(59) self_class:Scene start:[00000] bytecode:0x563184c9dfe0
<== finished compile. elapsed:119.5µs
offset:Pos(109224) code: 7549 bytes  data: 383 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x34343
  00038:    	cmp    DWORD PTR [rdi+0x4],0x32
  0003c:    	jne    0x34343
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe8027]        # 0xfffe8078
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1d40]        # 0x1d98
  00058:    	jne    0x34352
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1d23]        # 0x1d88
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x34398
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0007e:    	jne    0x34398
  00084: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7fe6],0x26        # 0xfffe8071
  0008b:    	jne    0x34398
  00091:    	mov    esi,DWORD PTR [rip+0x1d0d]        # 0x1da4
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x343a7
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 31 	movabs rax,0x563184053740
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00003 
:00005 %7 = %2.call y()                     [Vec]
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x343d0
  000df:    	cmp    DWORD PTR [rdi+0x4],0x28
  000e3:    	jne    0x343d0
  000e9: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7f81],0x26        # 0xfffe8071
  000f0:    	jne    0x343d0
  000f6:    	mov    esi,DWORD PTR [rip+0x1cb0]        # 0x1dac
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x343df
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 31 	movabs rax,0x563184053740
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00006 
:00008 %8 = %2.call z()                     [Vec]
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x34408
  00144:    	cmp    DWORD PTR [rdi+0x4],0x28
  00148:    	jne    0x34408
  0014e: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7f1c],0x26        # 0xfffe8071
  00155:    	jne    0x34408
  0015b:    	mov    esi,DWORD PTR [rip+0x1c53]        # 0x1db4
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x34417
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 31 	movabs rax,0x563184053740
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00009 
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x34440
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ad:    	jne    0x34440
  001b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7eb7],0x26        # 0xfffe8071
  001ba:    	jne    0x34440
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x3444f
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 31 	movabs r13,0x563184c9e0b0
  00207:    	test   rax,rax
  0020a:    	je     0xfffe5593
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %1:.[%3:] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 31 	movabs rax,0x5631840b8360
  00230:    	call   rax
  00232: 31 	movabs r13,0x563184c9e0d0
  0023c:    	test   rax,rax
  0023f:    	je     0xfffe5593
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe7e24]        # 0xfffe8078
  00254: 00 	cmp    rax,QWORD PTR [rip+0x1b6d]        # 0x1dc8
  0025b:    	jne    0x34481
  00261: 00 	mov    rax,QWORD PTR [rip+0x1b50]        # 0x1db8
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x1b64]        # 0x1dd8
  00274: 00 	movabs rax,0x8000000000000002
  0027e:    	mov    QWORD PTR [rbp-0x58],rax
:00018 %7 = literal[0.0]
  00282: 00 	movq   xmm3,QWORD PTR [rip+0x1b5e]        # 0x1de8
  0028a: 00 	movabs rax,0x8000000000000002
  00294:    	mov    QWORD PTR [rbp-0x60],rax
:00019 %8 = literal[0.0]
  00298: 00 	movq   xmm4,QWORD PTR [rip+0x1b58]        # 0x1df8
  002a0: 00 	movabs rax,0x8000000000000002
  002aa:    	mov    QWORD PTR [rbp-0x68],rax
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002ae:    	mov    rdi,QWORD PTR [rbp-0x50]
  002b2: 00 	test   rdi,0x7
  002b9:    	jne    0x344c7
  002bf:    	cmp    DWORD PTR [rdi+0x4],0x29
  002c3:    	jne    0x344c7
  002c9: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7da1],0x26        # 0xfffe8071
  002d0:    	jne    0x344c7
  002d6: 00 	mov    r9,0x0
  002dd:    	sub    rsp,0x20
  002e1:    	movq   QWORD PTR [rsp],xmm2
  002e6:    	movq   QWORD PTR [rsp+0x8],xmm3
  002ec:    	movq   QWORD PTR [rsp+0x10],xmm4
  002f2:    	mov    rdx,rdi
  002f5:    	mov    rax,QWORD PTR [rbx]
  002f8:    	lea    rdi,[rsp-0x18]
  002fd:    	mov    QWORD PTR [rdi],rax
  00300:    	mov    QWORD PTR [rbx],rdi
  00303: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0030c:    	mov    QWORD PTR [rsp-0x38],rcx
  00311:    	lea    rcx,[rbp-0x58]
  00315: 00 	mov    r8,0x3
  0031c:    	call   0x344d6
  00321:    	lea    rdi,[rbp-0x8]
  00325:    	mov    QWORD PTR [rbx],rdi
  00328:    	movq   xmm2,QWORD PTR [rsp]
  0032d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00333:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00339:    	add    rsp,0x20
  0033d: 31 	movabs r13,0x563184c9e140
  00347:    	test   rax,rax
  0034a:    	je     0xfffe5593
  00350:    	mov    QWORD PTR [rbp-0x48],rax
:00021 
:00023 %1:.[%3:] = %4
  00354:    	sub    rsp,0x20
  00358:    	movq   QWORD PTR [rsp],xmm2
  0035d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00363:    	movq   QWORD PTR [rsp+0x10],xmm4
  00369:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00371:    	mov    r8,QWORD PTR [rbp-0x48]
  00375:    	mov    rdi,rbx
  00378:    	mov    rsi,r12
  0037b: 31 	movabs rax,0x5631840b8360
  00385:    	call   rax
  00387:    	movq   xmm2,QWORD PTR [rsp]
  0038c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00392:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00398:    	add    rsp,0x20
  0039c: 31 	movabs r13,0x563184c9e160
  003a6:    	test   rax,rax
  003a9:    	je     0xfffe5593
:00024 %3 = %2.call x()                     [Vec]
  003af:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b3: 00 	test   rdi,0x7
  003ba:    	jne    0x34508
  003c0:    	cmp    DWORD PTR [rdi+0x4],0x28
  003c4:    	jne    0x34508
  003ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7ca0],0x26        # 0xfffe8071
  003d1:    	jne    0x34508
  003d7:    	mov    esi,DWORD PTR [rip+0x1a27]        # 0x1e04
  003dd:    	cmp    esi,0xffffffff
  003e0:    	je     0x34517
  003e6:    	cmp    WORD PTR [rdi+0x2],0x3
  003eb:    	jne    0x404
  003f1:    	cmp    esi,0x6
  003f4:    	jge    0x404
  003fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003ff:    	jmp    0x43a
  00404:    	sub    rsp,0x20
  00408:    	movq   QWORD PTR [rsp],xmm2
  0040d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00413:    	movq   QWORD PTR [rsp+0x10],xmm4
  00419: 31 	movabs rax,0x563184053740
  00423:    	call   rax
  00425:    	movq   xmm2,QWORD PTR [rsp]
  0042a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00430:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00436:    	add    rsp,0x20
  0043a:    	mov    QWORD PTR [rbp-0x40],rax
:00025 
:00027 %4 = literal[0.6]
  0043e: 00 	movq   xmm5,QWORD PTR [rip+0x19c2]        # 0x1e08
  00446: 99 	movabs rax,0xff1999999999999a
  00450:    	mov    QWORD PTR [rbp-0x48],rax
:00028 _%3 = %3 < %4                        [Float][Float]
:00029 condnotbr _%3 =>:00043
  00454:    	mov    rdi,QWORD PTR [rbp-0x40]
  00458: 00 	test   rdi,0x1
  0045f:    	jne    0x3456a
  00465: 00 	test   rdi,0x2
  0046c:    	je     0x4a8
  00472:    	xorps  xmm6,xmm6
  00475: 00 	movabs rax,0x8000000000000002
  0047f:    	cmp    rdi,rax
  00482:    	je     0x4ba
  00488:    	mov    rax,rdi
  0048b:    	sar    rax,0x3f
  0048f:    	add    rax,0x2
  00493:    	and    rdi,0xfffffffffffffffc
  00497:    	or     rdi,rax
  0049a:    	rol    rdi,0x3d
  0049e:    	movq   xmm6,rdi
  004a3:    	jmp    0x4ba
  004a8:    	call   0xfffe55cc
  004ad:    	test   rax,rax
  004b0:    	je     0x3456a
  004b6:    	movq   xmm6,xmm0
  004ba:    	ucomisd xmm6,xmm5
  004be:    	jae    0x3466b
:00030 %3 = %2.call x()                     [Vec]
  004c4:    	mov    rdi,QWORD PTR [rbp-0x38]
  004c8: 00 	test   rdi,0x7
  004cf:    	jne    0x34579
  004d5:    	cmp    DWORD PTR [rdi+0x4],0x28
  004d9:    	jne    0x34579
  004df: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7b8b],0x26        # 0xfffe8071
  004e6:    	jne    0x34579
  004ec:    	mov    esi,DWORD PTR [rip+0x1922]        # 0x1e14
  004f2:    	cmp    esi,0xffffffff
  004f5:    	je     0x34588
  004fb:    	cmp    WORD PTR [rdi+0x2],0x3
  00500:    	jne    0x519
  00506:    	cmp    esi,0x6
  00509:    	jge    0x519
  0050f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00514:    	jmp    0x55b
  00519:    	sub    rsp,0x20
  0051d:    	movq   QWORD PTR [rsp],xmm2
  00522:    	movq   QWORD PTR [rsp+0x8],xmm3
  00528:    	movq   QWORD PTR [rsp+0x10],xmm4
  0052e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00534: 31 	movabs rax,0x563184053740
  0053e:    	call   rax
  00540:    	movq   xmm2,QWORD PTR [rsp]
  00545:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0054b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00551:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00557:    	add    rsp,0x20
  0055b:    	mov    QWORD PTR [rbp-0x40],rax
:00031 
:00033 %4 = literal[-0.6]
  0055f: 00 	movq   xmm5,QWORD PTR [rip+0x18b1]        # 0x1e18
  00567: 99 	movabs rax,0xff1999999999999e
  00571:    	mov    QWORD PTR [rbp-0x48],rax
:00034 _%3 = %3 > %4                        [Float][Float]
:00035 condnotbr _%3 =>:00043
  00575:    	mov    rdi,QWORD PTR [rbp-0x40]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x345e7
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffe55cc
  005ce:    	test   rax,rax
  005d1:    	je     0x345e7
  005d7:    	movq   xmm6,xmm0
  005db:    	ucomisd xmm6,xmm5
  005df:    	jbe    0x34684
:00036 %3 = 1: i32
  005e5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]                         [Array][Integer]
  005ed:    	sub    rsp,0x20
  005f1:    	movq   QWORD PTR [rsp],xmm2
  005f6:    	movq   QWORD PTR [rsp+0x8],xmm3
  005fc:    	movq   QWORD PTR [rsp+0x10],xmm4
  00602:    	movq   QWORD PTR [rsp+0x18],xmm5
  00608:    	mov    rdx,QWORD PTR [rbp-0x30]
  0060c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00610:    	mov    rdi,rbx
  00613:    	mov    rsi,r12
  00616: 31 	movabs r8,0x563184c9e238
  00620: 31 	movabs rax,0x5631840b8230
  0062a:    	call   rax
  0062c:    	movq   xmm2,QWORD PTR [rsp]
  00631:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00637:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0063d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00643:    	add    rsp,0x20
  00647: 31 	movabs r13,0x563184c9e240
  00651:    	test   rax,rax
  00654:    	je     0xfffe5593
  0065a:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  0065e: 00 	movq   xmm5,QWORD PTR [rip+0x17c2]        # 0x1e28
  00666: 00 	movabs rax,0xff80000000000002
  00670:    	mov    QWORD PTR [rbp-0x48],rax
:00039 _ = %3.call x=(%4; 1)                [Vec]
  00674:    	mov    rdi,QWORD PTR [rbp-0x40]
  00678: 00 	test   rdi,0x7
  0067f:    	jne    0x345f6
  00685:    	cmp    DWORD PTR [rdi+0x4],0x28
  00689:    	jne    0x345f6
  0068f: 26 	cmp    DWORD PTR [rip+0xfffffffffffe79db],0x26        # 0xfffe8071
  00696:    	jne    0x345f6
  0069c:    	mov    esi,DWORD PTR [rip+0x1792]        # 0x1e34
  006a2:    	cmp    esi,0xffffffff
  006a5:    	je     0x34605
  006ab:    	cmp    WORD PTR [rdi+0x2],0x3
  006b0:    	jne    0x6cd
  006b6:    	cmp    esi,0x6
  006b9:    	jge    0x6cd
  006bf:    	mov    rax,QWORD PTR [rbp-0x48]
  006c3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006c8:    	jmp    0x726
  006cd:    	sub    rsp,0x20
  006d1:    	movq   QWORD PTR [rsp],xmm2
  006d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  006dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  006e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  006e8:    	mov    rdx,QWORD PTR [rbp-0x48]
  006ec: 31 	movabs rax,0x5631840539e0
  006f6:    	call   rax
  006f8:    	movq   xmm2,QWORD PTR [rsp]
  006fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00703:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00709:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0070f:    	add    rsp,0x20
  00713: 31 	movabs r13,0x563184c9e270
  0071d:    	test   rax,rax
  00720:    	je     0xfffe5593
:00040 
:00042 br =>:00087
  00726:    	jmp    0x34d45
:00043 %3 = %2.call y()                     [<INVALID>]
  0072b: 01 	sub    DWORD PTR [rip+0x1706],0x1        # 0x1e38
  00732:    	je     0x346ac
  00738:    	sub    rsp,0x20
  0073c:    	movq   QWORD PTR [rsp],xmm2
  00741:    	movq   QWORD PTR [rsp+0x8],xmm3
  00747:    	movq   QWORD PTR [rsp+0x10],xmm4
  0074d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00753:    	mov    rdi,QWORD PTR [rbp-0x38]
  00757: 31 	movabs rax,0x5631840958d0
  00761:    	call   rax
  00763:    	mov    r15d,eax
  00766: 00 	cmp    r15d,DWORD PTR [rip+0x16d3]        # 0x1e40
  0076d:    	jne    0x346ce
  00773:    	mov    eax,DWORD PTR [rip+0xfffffffffffe78f8]        # 0xfffe8071
  00779:    	cmp    DWORD PTR [rip+0x16bd],eax        # 0x1e3c
  0077f:    	jne    0x346ce
  00785:    	mov    rax,QWORD PTR [rbx]
  00788:    	lea    rdi,[rsp-0x18]
  0078d:    	mov    QWORD PTR [rdi],rax
  00790:    	mov    QWORD PTR [rbx],rdi
  00793: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0079c:    	mov    QWORD PTR [rsp-0x38],rcx
  007a1:    	mov    rax,QWORD PTR [rbp-0x38]
  007a5:    	mov    QWORD PTR [rsp-0x38],rax
  007aa: 00 	mov    rdi,0x0
  007b1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007ba: 00 	movabs rax,0x0
  007c4:    	mov    QWORD PTR [rsp-0x28],rax
  007c9: 00 	movabs r13,0x0
  007d3:    	call   0xfffe5558
  007d8:    	lea    rdi,[rbp-0x8]
  007dc:    	mov    QWORD PTR [rbx],rdi
  007df:    	movq   xmm2,QWORD PTR [rsp]
  007e4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007ea:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007f0:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007f6:    	add    rsp,0x20
  007fa:    	test   rax,rax
  007fd:    	je     0x3473a
  00803:    	mov    QWORD PTR [rbp-0x40],rax
:00044 
:00046 %4 = literal[0.6]
  00807: 00 	movq   xmm5,QWORD PTR [rip+0x1639]        # 0x1e48
  0080f: 99 	movabs rax,0xff1999999999999a
  00819:    	mov    QWORD PTR [rbp-0x48],rax
:00047 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00048 condnotbr _%3 =>:00062
  0081d:    	mov    rdi,QWORD PTR [rbp-0x40]
  00821:    	mov    rsi,QWORD PTR [rbp-0x48]
  00825: 00 	test   rdi,0x1
  0082c:    	je     0x34749
  00832: 00 	test   rsi,0x1
  00839:    	je     0x34749
  0083f:    	cmp    rdi,rsi
  00842:    	jge    0x3494b
:00049 %3 = %2.call y()                     [<INVALID>]
  00848: 01 	sub    DWORD PTR [rip+0x1601],0x1        # 0x1e50
  0084f:    	je     0x347ad
  00855:    	sub    rsp,0x20
  00859:    	movq   QWORD PTR [rsp],xmm2
  0085e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00864:    	movq   QWORD PTR [rsp+0x10],xmm4
  0086a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00870:    	mov    rdi,QWORD PTR [rbp-0x38]
  00874: 31 	movabs rax,0x5631840958d0
  0087e:    	call   rax
  00880:    	mov    r15d,eax
  00883: 00 	cmp    r15d,DWORD PTR [rip+0x15ce]        # 0x1e58
  0088a:    	jne    0x347cf
  00890:    	mov    eax,DWORD PTR [rip+0xfffffffffffe77db]        # 0xfffe8071
  00896:    	cmp    DWORD PTR [rip+0x15b8],eax        # 0x1e54
  0089c:    	jne    0x347cf
  008a2:    	mov    rax,QWORD PTR [rbx]
  008a5:    	lea    rdi,[rsp-0x18]
  008aa:    	mov    QWORD PTR [rdi],rax
  008ad:    	mov    QWORD PTR [rbx],rdi
  008b0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008b9:    	mov    QWORD PTR [rsp-0x38],rcx
  008be:    	mov    rax,QWORD PTR [rbp-0x38]
  008c2:    	mov    QWORD PTR [rsp-0x38],rax
  008c7: 00 	mov    rdi,0x0
  008ce: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008d7: 00 	movabs rax,0x0
  008e1:    	mov    QWORD PTR [rsp-0x28],rax
  008e6: 00 	movabs r13,0x0
  008f0:    	call   0xfffe5558
  008f5:    	lea    rdi,[rbp-0x8]
  008f9:    	mov    QWORD PTR [rbx],rdi
  008fc:    	movq   xmm2,QWORD PTR [rsp]
  00901:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00907:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0090d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00913:    	add    rsp,0x20
  00917:    	test   rax,rax
  0091a:    	je     0x3483b
  00920:    	mov    QWORD PTR [rbp-0x40],rax
:00050 
:00052 %4 = literal[-0.6]
  00924: 00 	movq   xmm5,QWORD PTR [rip+0x153c]        # 0x1e68
  0092c: 99 	movabs rax,0xff1999999999999e
  00936:    	mov    QWORD PTR [rbp-0x48],rax
:00053 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00054 condnotbr _%3 =>:00062
  0093a:    	mov    rdi,QWORD PTR [rbp-0x40]
  0093e:    	mov    rsi,QWORD PTR [rbp-0x48]
  00942: 00 	test   rdi,0x1
  00949:    	je     0x3484a
  0094f: 00 	test   rsi,0x1
  00956:    	je     0x3484a
  0095c:    	cmp    rdi,rsi
  0095f:    	jle    0x34964
:00055 %3 = 1: i32
  00965: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  0096d:    	sub    rsp,0x20
  00971:    	movq   QWORD PTR [rsp],xmm2
  00976:    	movq   QWORD PTR [rsp+0x8],xmm3
  0097c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00982:    	movq   QWORD PTR [rsp+0x18],xmm5
  00988:    	mov    rdx,QWORD PTR [rbp-0x30]
  0098c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00990:    	mov    rdi,rbx
  00993:    	mov    rsi,r12
  00996: 31 	movabs r8,0x563184c9e368
  009a0: 31 	movabs rax,0x5631840b8230
  009aa:    	call   rax
  009ac:    	movq   xmm2,QWORD PTR [rsp]
  009b1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009b7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009bd:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009c3:    	add    rsp,0x20
  009c7: 31 	movabs r13,0x563184c9e370
  009d1:    	test   rax,rax
  009d4:    	je     0xfffe5593
  009da:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  009de: 00 	movq   xmm5,QWORD PTR [rip+0x1492]        # 0x1e78
  009e6: 00 	movabs rax,0xff80000000000002
  009f0:    	mov    QWORD PTR [rbp-0x48],rax
:00058 _ = %3.call y=(%4; 1)                [<INVALID>]
  009f4: 01 	sub    DWORD PTR [rip+0x1485],0x1        # 0x1e80
  009fb:    	je     0x348ae
  00a01:    	sub    rsp,0x20
  00a05:    	movq   QWORD PTR [rsp],xmm2
  00a0a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a10:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a16:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a1c:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a20: 31 	movabs rax,0x5631840958d0
  00a2a:    	call   rax
  00a2c:    	mov    r15d,eax
  00a2f: 00 	cmp    r15d,DWORD PTR [rip+0x1452]        # 0x1e88
  00a36:    	jne    0x348d0
  00a3c:    	mov    eax,DWORD PTR [rip+0xfffffffffffe762f]        # 0xfffe8071
  00a42:    	cmp    DWORD PTR [rip+0x143c],eax        # 0x1e84
  00a48:    	jne    0x348d0
  00a4e:    	mov    rax,QWORD PTR [rbx]
  00a51:    	lea    rdi,[rsp-0x18]
  00a56:    	mov    QWORD PTR [rdi],rax
  00a59:    	mov    QWORD PTR [rbx],rdi
  00a5c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a65:    	mov    QWORD PTR [rsp-0x38],rcx
  00a6a:    	mov    rax,QWORD PTR [rbp-0x40]
  00a6e:    	mov    QWORD PTR [rsp-0x38],rax
  00a73: 00 	mov    rdi,0x1
  00a7a:    	mov    rax,QWORD PTR [rbp-0x48]
  00a7e:    	mov    QWORD PTR [rsp-0x40],rax
  00a83: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a8c: 00 	movabs rax,0x0
  00a96:    	mov    QWORD PTR [rsp-0x28],rax
  00a9b: 00 	movabs r13,0x0
  00aa5:    	call   0xfffe5558
  00aaa:    	lea    rdi,[rbp-0x8]
  00aae:    	mov    QWORD PTR [rbx],rdi
  00ab1:    	movq   xmm2,QWORD PTR [rsp]
  00ab6:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00abc:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ac2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ac8:    	add    rsp,0x20
  00acc:    	test   rax,rax
  00acf:    	je     0x3493c
:00059 
:00061 br =>:00087
  00ad5:    	jmp    0x34d5e
:00062 %3 = %2.call z()                     [<INVALID>]
  00ada: 01 	sub    DWORD PTR [rip+0x13ab],0x1        # 0x1e8c
  00ae1:    	je     0x3498c
  00ae7:    	sub    rsp,0x20
  00aeb:    	movq   QWORD PTR [rsp],xmm2
  00af0:    	movq   QWORD PTR [rsp+0x8],xmm3
  00af6:    	movq   QWORD PTR [rsp+0x10],xmm4
  00afc:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b02:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b06: 31 	movabs rax,0x5631840958d0
  00b10:    	call   rax
  00b12:    	mov    r15d,eax
  00b15: 00 	cmp    r15d,DWORD PTR [rip+0x1378]        # 0x1e94
  00b1c:    	jne    0x349ae
  00b22:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7549]        # 0xfffe8071
  00b28:    	cmp    DWORD PTR [rip+0x1362],eax        # 0x1e90
  00b2e:    	jne    0x349ae
  00b34:    	mov    rax,QWORD PTR [rbx]
  00b37:    	lea    rdi,[rsp-0x18]
  00b3c:    	mov    QWORD PTR [rdi],rax
  00b3f:    	mov    QWORD PTR [rbx],rdi
  00b42: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b4b:    	mov    QWORD PTR [rsp-0x38],rcx
  00b50:    	mov    rax,QWORD PTR [rbp-0x38]
  00b54:    	mov    QWORD PTR [rsp-0x38],rax
  00b59: 00 	mov    rdi,0x0
  00b60: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b69: 00 	movabs rax,0x0
  00b73:    	mov    QWORD PTR [rsp-0x28],rax
  00b78: 00 	movabs r13,0x0
  00b82:    	call   0xfffe5558
  00b87:    	lea    rdi,[rbp-0x8]
  00b8b:    	mov    QWORD PTR [rbx],rdi
  00b8e:    	movq   xmm2,QWORD PTR [rsp]
  00b93:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b99:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b9f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ba5:    	add    rsp,0x20
  00ba9:    	test   rax,rax
  00bac:    	je     0x34a1a
  00bb2:    	mov    QWORD PTR [rbp-0x40],rax
:00063 
:00065 %4 = literal[0.6]
  00bb6: 00 	movq   xmm5,QWORD PTR [rip+0x12da]        # 0x1e98
  00bbe: 99 	movabs rax,0xff1999999999999a
  00bc8:    	mov    QWORD PTR [rbp-0x48],rax
:00066 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00067 condnotbr _%3 =>:00081
  00bcc:    	mov    rdi,QWORD PTR [rbp-0x40]
  00bd0:    	mov    rsi,QWORD PTR [rbp-0x48]
  00bd4: 00 	test   rdi,0x1
  00bdb:    	je     0x34a29
  00be1: 00 	test   rsi,0x1
  00be8:    	je     0x34a29
  00bee:    	cmp    rdi,rsi
  00bf1:    	jge    0x34c2b
:00068 %3 = %2.call z()                     [<INVALID>]
  00bf7: 01 	sub    DWORD PTR [rip+0x12a2],0x1        # 0x1ea0
  00bfe:    	je     0x34a8d
  00c04:    	sub    rsp,0x20
  00c08:    	movq   QWORD PTR [rsp],xmm2
  00c0d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c13:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c19:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c1f:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c23: 31 	movabs rax,0x5631840958d0
  00c2d:    	call   rax
  00c2f:    	mov    r15d,eax
  00c32: 00 	cmp    r15d,DWORD PTR [rip+0x126f]        # 0x1ea8
  00c39:    	jne    0x34aaf
  00c3f:    	mov    eax,DWORD PTR [rip+0xfffffffffffe742c]        # 0xfffe8071
  00c45:    	cmp    DWORD PTR [rip+0x1259],eax        # 0x1ea4
  00c4b:    	jne    0x34aaf
  00c51:    	mov    rax,QWORD PTR [rbx]
  00c54:    	lea    rdi,[rsp-0x18]
  00c59:    	mov    QWORD PTR [rdi],rax
  00c5c:    	mov    QWORD PTR [rbx],rdi
  00c5f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c68:    	mov    QWORD PTR [rsp-0x38],rcx
  00c6d:    	mov    rax,QWORD PTR [rbp-0x38]
  00c71:    	mov    QWORD PTR [rsp-0x38],rax
  00c76: 00 	mov    rdi,0x0
  00c7d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c86: 00 	movabs rax,0x0
  00c90:    	mov    QWORD PTR [rsp-0x28],rax
  00c95: 00 	movabs r13,0x0
  00c9f:    	call   0xfffe5558
  00ca4:    	lea    rdi,[rbp-0x8]
  00ca8:    	mov    QWORD PTR [rbx],rdi
  00cab:    	movq   xmm2,QWORD PTR [rsp]
  00cb0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cb6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cbc:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cc2:    	add    rsp,0x20
  00cc6:    	test   rax,rax
  00cc9:    	je     0x34b1b
  00ccf:    	mov    QWORD PTR [rbp-0x40],rax
:00069 
:00071 %4 = literal[-0.6]
  00cd3: 00 	movq   xmm5,QWORD PTR [rip+0x11dd]        # 0x1eb8
  00cdb: 99 	movabs rax,0xff1999999999999e
  00ce5:    	mov    QWORD PTR [rbp-0x48],rax
:00072 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00073 condnotbr _%3 =>:00081
  00ce9:    	mov    rdi,QWORD PTR [rbp-0x40]
  00ced:    	mov    rsi,QWORD PTR [rbp-0x48]
  00cf1: 00 	test   rdi,0x1
  00cf8:    	je     0x34b2a
  00cfe: 00 	test   rsi,0x1
  00d05:    	je     0x34b2a
  00d0b:    	cmp    rdi,rsi
  00d0e:    	jle    0x34c44
:00074 %3 = 1: i32
  00d14: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00d1c:    	sub    rsp,0x20
  00d20:    	movq   QWORD PTR [rsp],xmm2
  00d25:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d2b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d31:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d37:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d3b:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d3f:    	mov    rdi,rbx
  00d42:    	mov    rsi,r12
  00d45: 31 	movabs r8,0x563184c9e498
  00d4f: 31 	movabs rax,0x5631840b8230
  00d59:    	call   rax
  00d5b:    	movq   xmm2,QWORD PTR [rsp]
  00d60:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d66:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d6c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d72:    	add    rsp,0x20
  00d76: 31 	movabs r13,0x563184c9e4a0
  00d80:    	test   rax,rax
  00d83:    	je     0xfffe5593
  00d89:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00d8d: 00 	movq   xmm5,QWORD PTR [rip+0x1133]        # 0x1ec8
  00d95: 00 	movabs rax,0xff80000000000002
  00d9f:    	mov    QWORD PTR [rbp-0x48],rax
:00077 _ = %3.call z=(%4; 1)                [<INVALID>]
  00da3: 01 	sub    DWORD PTR [rip+0x1126],0x1        # 0x1ed0
  00daa:    	je     0x34b8e
  00db0:    	sub    rsp,0x20
  00db4:    	movq   QWORD PTR [rsp],xmm2
  00db9:    	movq   QWORD PTR [rsp+0x8],xmm3
  00dbf:    	movq   QWORD PTR [rsp+0x10],xmm4
  00dc5:    	movq   QWORD PTR [rsp+0x18],xmm5
  00dcb:    	mov    rdi,QWORD PTR [rbp-0x40]
  00dcf: 31 	movabs rax,0x5631840958d0
  00dd9:    	call   rax
  00ddb:    	mov    r15d,eax
  00dde: 00 	cmp    r15d,DWORD PTR [rip+0x10f3]        # 0x1ed8
  00de5:    	jne    0x34bb0
  00deb:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7280]        # 0xfffe8071
  00df1:    	cmp    DWORD PTR [rip+0x10dd],eax        # 0x1ed4
  00df7:    	jne    0x34bb0
  00dfd:    	mov    rax,QWORD PTR [rbx]
  00e00:    	lea    rdi,[rsp-0x18]
  00e05:    	mov    QWORD PTR [rdi],rax
  00e08:    	mov    QWORD PTR [rbx],rdi
  00e0b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00e14:    	mov    QWORD PTR [rsp-0x38],rcx
  00e19:    	mov    rax,QWORD PTR [rbp-0x40]
  00e1d:    	mov    QWORD PTR [rsp-0x38],rax
  00e22: 00 	mov    rdi,0x1
  00e29:    	mov    rax,QWORD PTR [rbp-0x48]
  00e2d:    	mov    QWORD PTR [rsp-0x40],rax
  00e32: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e3b: 00 	movabs rax,0x0
  00e45:    	mov    QWORD PTR [rsp-0x28],rax
  00e4a: 00 	movabs r13,0x0
  00e54:    	call   0xfffe5558
  00e59:    	lea    rdi,[rbp-0x8]
  00e5d:    	mov    QWORD PTR [rbx],rdi
  00e60:    	movq   xmm2,QWORD PTR [rsp]
  00e65:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e6b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e71:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e77:    	add    rsp,0x20
  00e7b:    	test   rax,rax
  00e7e:    	je     0x34c1c
:00078 
:00080 br =>:00087
  00e84:    	jmp    0x34d77
:00081 %3 = 1: i32
  00e89: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00e91:    	sub    rsp,0x20
  00e95:    	movq   QWORD PTR [rsp],xmm2
  00e9a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ea0:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ea6:    	movq   QWORD PTR [rsp+0x18],xmm5
  00eac:    	mov    rdx,QWORD PTR [rbp-0x30]
  00eb0:    	mov    rcx,QWORD PTR [rbp-0x40]
  00eb4:    	mov    rdi,rbx
  00eb7:    	mov    rsi,r12
  00eba: 31 	movabs r8,0x563184c9e508
  00ec4: 31 	movabs rax,0x5631840b8230
  00ece:    	call   rax
  00ed0:    	movq   xmm2,QWORD PTR [rsp]
  00ed5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00edb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ee1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ee7:    	add    rsp,0x20
  00eeb: 31 	movabs r13,0x563184c9e510
  00ef5:    	test   rax,rax
  00ef8:    	je     0xfffe5593
  00efe:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00f02: 00 	movq   xmm5,QWORD PTR [rip+0xfde]        # 0x1ee8
  00f0a: 00 	movabs rax,0xff80000000000002
  00f14:    	mov    QWORD PTR [rbp-0x48],rax
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f18: 01 	sub    DWORD PTR [rip+0xfd1],0x1        # 0x1ef0
  00f1f:    	je     0x34c6c
  00f25:    	sub    rsp,0x20
  00f29:    	movq   QWORD PTR [rsp],xmm2
  00f2e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f34:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f3a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f40:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f44: 31 	movabs rax,0x5631840958d0
  00f4e:    	call   rax
  00f50:    	mov    r15d,eax
  00f53: 00 	cmp    r15d,DWORD PTR [rip+0xf9e]        # 0x1ef8
  00f5a:    	jne    0x34c8e
  00f60:    	mov    eax,DWORD PTR [rip+0xfffffffffffe710b]        # 0xfffe8071
  00f66:    	cmp    DWORD PTR [rip+0xf88],eax        # 0x1ef4
  00f6c:    	jne    0x34c8e
  00f72:    	mov    rax,QWORD PTR [rbx]
  00f75:    	lea    rdi,[rsp-0x18]
  00f7a:    	mov    QWORD PTR [rdi],rax
  00f7d:    	mov    QWORD PTR [rbx],rdi
  00f80: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f89:    	mov    QWORD PTR [rsp-0x38],rcx
  00f8e:    	mov    rax,QWORD PTR [rbp-0x40]
  00f92:    	mov    QWORD PTR [rsp-0x38],rax
  00f97: 00 	mov    rdi,0x1
  00f9e:    	mov    rax,QWORD PTR [rbp-0x48]
  00fa2:    	mov    QWORD PTR [rsp-0x40],rax
  00fa7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fb0: 00 	movabs rax,0x0
  00fba:    	mov    QWORD PTR [rsp-0x28],rax
  00fbf: 00 	movabs r13,0x0
  00fc9:    	call   0xfffe5558
  00fce:    	lea    rdi,[rbp-0x8]
  00fd2:    	mov    QWORD PTR [rbx],rdi
  00fd5:    	movq   xmm2,QWORD PTR [rsp]
  00fda:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fe0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fe6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fec:    	add    rsp,0x20
  00ff0:    	test   rax,rax
  00ff3:    	je     0x34cfa
:00085 
:00087 %3 = 0: i32
  00ff9: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  01001: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  01009:    	sub    rsp,0x20
  0100d:    	movq   QWORD PTR [rsp],xmm2
  01012:    	movq   QWORD PTR [rsp+0x8],xmm3
  01018:    	movq   QWORD PTR [rsp+0x10],xmm4
  0101e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01024:    	mov    rdx,QWORD PTR [rbp-0x30]
  01028:    	mov    rcx,QWORD PTR [rbp-0x50]
  0102c:    	mov    rdi,rbx
  0102f:    	mov    rsi,r12
  01032: 31 	movabs r8,0x563184c9e578
  0103c: 31 	movabs rax,0x5631840b8230
  01046:    	call   rax
  01048:    	movq   xmm2,QWORD PTR [rsp]
  0104d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01053:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01059:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0105f:    	add    rsp,0x20
  01063: 31 	movabs r13,0x563184c9e580
  0106d:    	test   rax,rax
  01070:    	je     0xfffe5593
  01076:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  0107a: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  01082:    	sub    rsp,0x20
  01086:    	movq   QWORD PTR [rsp],xmm3
  0108b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01091:    	movq   QWORD PTR [rsp+0x10],xmm5
  01097:    	mov    rdx,QWORD PTR [rbp-0x30]
  0109b:    	mov    rcx,QWORD PTR [rbp-0x58]
  0109f:    	mov    rdi,rbx
  010a2:    	mov    rsi,r12
  010a5: 31 	movabs r8,0x563184c9e598
  010af: 31 	movabs rax,0x5631840b8230
  010b9:    	call   rax
  010bb:    	movq   xmm3,QWORD PTR [rsp]
  010c0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010c6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010cc:    	add    rsp,0x20
  010d0: 31 	movabs r13,0x563184c9e5a0
  010da:    	test   rax,rax
  010dd:    	je     0xfffe5593
  010e3:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  010e7:    	mov    rdi,QWORD PTR [rbp-0x50]
  010eb: 00 	test   rdi,0x7
  010f2:    	jne    0x34d09
  010f8:    	cmp    DWORD PTR [rdi+0x4],0x28
  010fc:    	jne    0x34d09
  01102: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6f68],0x26        # 0xfffe8071
  01109:    	jne    0x34d09
  0110f:    	sub    rsp,0x10
  01113:    	movq   QWORD PTR [rsp],xmm3
  01118:    	movq   QWORD PTR [rsp+0x8],xmm4
  0111e:    	mov    rax,QWORD PTR [rbx]
  01121:    	lea    rdi,[rsp-0x18]
  01126:    	mov    QWORD PTR [rdi],rax
  01129:    	mov    QWORD PTR [rbx],rdi
  0112c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01135:    	mov    QWORD PTR [rsp-0x38],rcx
  0113a:    	mov    rax,QWORD PTR [rbp-0x50]
  0113e:    	mov    QWORD PTR [rsp-0x38],rax
  01143: 00 	mov    rdi,0x1
  0114a:    	mov    rax,QWORD PTR [rbp-0x58]
  0114e:    	mov    QWORD PTR [rsp-0x40],rax
  01153: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0115c: 09 	movabs rax,0x900000040
  01166:    	mov    QWORD PTR [rsp-0x28],rax
  0116b: 31 	movabs r13,0x563184c82c10
  01175:    	call   0xffff1b85
  0117a:    	lea    rdi,[rbp-0x8]
  0117e:    	mov    QWORD PTR [rbx],rdi
  01181:    	movq   xmm3,QWORD PTR [rsp]
  01186:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0118c:    	add    rsp,0x10
  01190: 31 	movabs r13,0x563184c9e5c0
  0119a:    	test   rax,rax
  0119d:    	je     0xfffe5593
  011a3:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  011a7:    	sub    rsp,0x10
  011ab:    	movq   QWORD PTR [rsp],xmm3
  011b0:    	movq   QWORD PTR [rsp+0x8],xmm4
  011b6:    	mov    rdx,QWORD PTR [rbp-0x30]
  011ba:    	mov    rcx,QWORD PTR [rbp-0x40]
  011be:    	mov    r8,QWORD PTR [rbp-0x48]
  011c2:    	mov    rdi,rbx
  011c5:    	mov    rsi,r12
  011c8: 31 	movabs rax,0x5631840b8360
  011d2:    	call   rax
  011d4:    	movq   xmm3,QWORD PTR [rsp]
  011d9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011df:    	add    rsp,0x10
  011e3: 31 	movabs r13,0x563184c9e5e0
  011ed:    	test   rax,rax
  011f0:    	je     0xfffe5593
:00096 %3 = 0: i32
  011f6: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  011fe: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  01206:    	sub    rsp,0x10
  0120a:    	movq   QWORD PTR [rsp],xmm3
  0120f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01215:    	mov    rdx,QWORD PTR [rbp-0x30]
  01219:    	mov    rcx,QWORD PTR [rbp-0x50]
  0121d:    	mov    rdi,rbx
  01220:    	mov    rsi,r12
  01223: 31 	movabs r8,0x563184c9e608
  0122d: 31 	movabs rax,0x5631840b8230
  01237:    	call   rax
  01239:    	movq   xmm3,QWORD PTR [rsp]
  0123e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01244:    	add    rsp,0x10
  01248: 31 	movabs r13,0x563184c9e610
  01252:    	test   rax,rax
  01255:    	je     0xfffe5593
  0125b:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  0125f:    	mov    rdi,QWORD PTR [rbp-0x50]
  01263: 00 	test   rdi,0x7
  0126a:    	jne    0x34d18
  01270:    	cmp    DWORD PTR [rdi+0x4],0x28
  01274:    	jne    0x34d18
  0127a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6df0],0x26        # 0xfffe8071
  01281:    	jne    0x34d18
  01287:    	sub    rsp,0x10
  0128b:    	movq   QWORD PTR [rsp],xmm3
  01290:    	movq   QWORD PTR [rsp+0x8],xmm4
  01296:    	mov    rax,QWORD PTR [rbx]
  01299:    	lea    rdi,[rsp-0x18]
  0129e:    	mov    QWORD PTR [rdi],rax
  012a1:    	mov    QWORD PTR [rbx],rdi
  012a4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012ad:    	mov    QWORD PTR [rsp-0x38],rcx
  012b2:    	mov    rax,QWORD PTR [rbp-0x50]
  012b6:    	mov    QWORD PTR [rsp-0x38],rax
  012bb: 00 	mov    rdi,0x0
  012c2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012cb: 07 	movabs rax,0x1000700000043
  012d5:    	mov    QWORD PTR [rsp-0x28],rax
  012da: 31 	movabs r13,0x563184c828e0
  012e4:    	call   0xfffe8968
  012e9:    	lea    rdi,[rbp-0x8]
  012ed:    	mov    QWORD PTR [rbx],rdi
  012f0:    	movq   xmm3,QWORD PTR [rsp]
  012f5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012fb:    	add    rsp,0x10
  012ff: 31 	movabs r13,0x563184c9e630
  01309:    	test   rax,rax
  0130c:    	je     0xfffe5593
  01312:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  01316:    	sub    rsp,0x10
  0131a:    	movq   QWORD PTR [rsp],xmm3
  0131f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01325:    	mov    rdx,QWORD PTR [rbp-0x30]
  01329:    	mov    rcx,QWORD PTR [rbp-0x40]
  0132d:    	mov    r8,QWORD PTR [rbp-0x48]
  01331:    	mov    rdi,rbx
  01334:    	mov    rsi,r12
  01337: 31 	movabs rax,0x5631840b8360
  01341:    	call   rax
  01343:    	movq   xmm3,QWORD PTR [rsp]
  01348:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0134e:    	add    rsp,0x10
  01352: 31 	movabs r13,0x563184c9e650
  0135c:    	test   rax,rax
  0135f:    	je     0xfffe5593
:00103 %3 = 1: i32
  01365: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  0136d: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01375:    	sub    rsp,0x10
  01379:    	movq   QWORD PTR [rsp],xmm3
  0137e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01384:    	mov    rdx,QWORD PTR [rbp-0x30]
  01388:    	mov    rcx,QWORD PTR [rbp-0x50]
  0138c:    	mov    rdi,rbx
  0138f:    	mov    rsi,r12
  01392: 31 	movabs r8,0x563184c9e678
  0139c: 31 	movabs rax,0x5631840b8230
  013a6:    	call   rax
  013a8:    	movq   xmm3,QWORD PTR [rsp]
  013ad:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013b3:    	add    rsp,0x10
  013b7: 31 	movabs r13,0x563184c9e680
  013c1:    	test   rax,rax
  013c4:    	je     0xfffe5593
  013ca:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  013ce: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  013d6:    	sub    rsp,0x10
  013da:    	movq   QWORD PTR [rsp],xmm3
  013df:    	movq   QWORD PTR [rsp+0x8],xmm4
  013e5:    	mov    rdx,QWORD PTR [rbp-0x30]
  013e9:    	mov    rcx,QWORD PTR [rbp-0x58]
  013ed:    	mov    rdi,rbx
  013f0:    	mov    rsi,r12
  013f3: 31 	movabs r8,0x563184c9e698
  013fd: 31 	movabs rax,0x5631840b8230
  01407:    	call   rax
  01409:    	movq   xmm3,QWORD PTR [rsp]
  0140e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01414:    	add    rsp,0x10
  01418: 31 	movabs r13,0x563184c9e6a0
  01422:    	test   rax,rax
  01425:    	je     0xfffe5593
  0142b:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  0142f:    	mov    rdi,QWORD PTR [rbp-0x50]
  01433: 00 	test   rdi,0x7
  0143a:    	jne    0x34d27
  01440:    	cmp    DWORD PTR [rdi+0x4],0x28
  01444:    	jne    0x34d27
  0144a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6c20],0x26        # 0xfffe8071
  01451:    	jne    0x34d27
  01457:    	sub    rsp,0x10
  0145b:    	movq   QWORD PTR [rsp],xmm3
  01460:    	movq   QWORD PTR [rsp+0x8],xmm4
  01466:    	mov    rax,QWORD PTR [rbx]
  01469:    	lea    rdi,[rsp-0x18]
  0146e:    	mov    QWORD PTR [rdi],rax
  01471:    	mov    QWORD PTR [rbx],rdi
  01474: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0147d:    	mov    QWORD PTR [rsp-0x38],rcx
  01482:    	mov    rax,QWORD PTR [rbp-0x50]
  01486:    	mov    QWORD PTR [rsp-0x38],rax
  0148b: 00 	mov    rdi,0x1
  01492:    	mov    rax,QWORD PTR [rbp-0x58]
  01496:    	mov    QWORD PTR [rsp-0x40],rax
  0149b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014a4: 09 	movabs rax,0x900000040
  014ae:    	mov    QWORD PTR [rsp-0x28],rax
  014b3: 31 	movabs r13,0x563184c82c10
  014bd:    	call   0xffff1b85
  014c2:    	lea    rdi,[rbp-0x8]
  014c6:    	mov    QWORD PTR [rbx],rdi
  014c9:    	movq   xmm3,QWORD PTR [rsp]
  014ce:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014d4:    	add    rsp,0x10
  014d8: 31 	movabs r13,0x563184c9e6c0
  014e2:    	test   rax,rax
  014e5:    	je     0xfffe5593
  014eb:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  014ef:    	sub    rsp,0x10
  014f3:    	movq   QWORD PTR [rsp],xmm3
  014f8:    	movq   QWORD PTR [rsp+0x8],xmm4
  014fe:    	mov    rdx,QWORD PTR [rbp-0x30]
  01502:    	mov    rcx,QWORD PTR [rbp-0x40]
  01506:    	mov    r8,QWORD PTR [rbp-0x48]
  0150a:    	mov    rdi,rbx
  0150d:    	mov    rsi,r12
  01510: 31 	movabs rax,0x5631840b8360
  0151a:    	call   rax
  0151c:    	movq   xmm3,QWORD PTR [rsp]
  01521:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01527:    	add    rsp,0x10
  0152b: 31 	movabs r13,0x563184c9e6e0
  01535:    	test   rax,rax
  01538:    	je     0xfffe5593
:00112 %3 = 1: i32
  0153e: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01546: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  0154e:    	sub    rsp,0x10
  01552:    	movq   QWORD PTR [rsp],xmm3
  01557:    	movq   QWORD PTR [rsp+0x8],xmm4
  0155d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01561:    	mov    rcx,QWORD PTR [rbp-0x50]
  01565:    	mov    rdi,rbx
  01568:    	mov    rsi,r12
  0156b: 31 	movabs r8,0x563184c9e708
  01575: 31 	movabs rax,0x5631840b8230
  0157f:    	call   rax
  01581:    	movq   xmm3,QWORD PTR [rsp]
  01586:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0158c:    	add    rsp,0x10
  01590: 31 	movabs r13,0x563184c9e710
  0159a:    	test   rax,rax
  0159d:    	je     0xfffe5593
  015a3:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  015a7:    	mov    rdi,QWORD PTR [rbp-0x50]
  015ab: 00 	test   rdi,0x7
  015b2:    	jne    0x34d36
  015b8:    	cmp    DWORD PTR [rdi+0x4],0x28
  015bc:    	jne    0x34d36
  015c2: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6aa8],0x26        # 0xfffe8071
  015c9:    	jne    0x34d36
  015cf:    	sub    rsp,0x10
  015d3:    	movq   QWORD PTR [rsp],xmm3
  015d8:    	movq   QWORD PTR [rsp+0x8],xmm4
  015de:    	mov    rax,QWORD PTR [rbx]
  015e1:    	lea    rdi,[rsp-0x18]
  015e6:    	mov    QWORD PTR [rdi],rax
  015e9:    	mov    QWORD PTR [rbx],rdi
  015ec: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015f5:    	mov    QWORD PTR [rsp-0x38],rcx
  015fa:    	mov    rax,QWORD PTR [rbp-0x50]
  015fe:    	mov    QWORD PTR [rsp-0x38],rax
  01603: 00 	mov    rdi,0x0
  0160a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01613: 07 	movabs rax,0x1000700000043
  0161d:    	mov    QWORD PTR [rsp-0x28],rax
  01622: 31 	movabs r13,0x563184c828e0
  0162c:    	call   0xfffe8968
  01631:    	lea    rdi,[rbp-0x8]
  01635:    	mov    QWORD PTR [rbx],rdi
  01638:    	movq   xmm3,QWORD PTR [rsp]
  0163d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01643:    	add    rsp,0x10
  01647: 31 	movabs r13,0x563184c9e730
  01651:    	test   rax,rax
  01654:    	je     0xfffe5593
  0165a:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  0165e:    	sub    rsp,0x10
  01662:    	movq   QWORD PTR [rsp],xmm3
  01667:    	movq   QWORD PTR [rsp+0x8],xmm4
  0166d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01671:    	mov    rcx,QWORD PTR [rbp-0x40]
  01675:    	mov    r8,QWORD PTR [rbp-0x48]
  01679:    	mov    rdi,rbx
  0167c:    	mov    rsi,r12
  0167f: 31 	movabs rax,0x5631840b8360
  01689:    	call   rax
  0168b:    	movq   xmm3,QWORD PTR [rsp]
  01690:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01696:    	add    rsp,0x10
  0169a: 31 	movabs r13,0x563184c9e750
  016a4:    	test   rax,rax
  016a7:    	je     0xfffe5593
:00119 %3 = %4
  016ad:    	mov    rax,QWORD PTR [rbp-0x48]
  016b1:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  016b5:    	mov    rax,QWORD PTR [rbp-0x40]
  016b9:    	leave  
  016ba:    	ret    
:00087 %3 = 0: i32
  016bb: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  016c3: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  016cb:    	sub    rsp,0x20
  016cf:    	movq   QWORD PTR [rsp],xmm2
  016d4:    	movq   QWORD PTR [rsp+0x8],xmm3
  016da:    	movq   QWORD PTR [rsp+0x10],xmm4
  016e0:    	movq   QWORD PTR [rsp+0x18],xmm5
  016e6:    	mov    rdx,QWORD PTR [rbp-0x30]
  016ea:    	mov    rcx,QWORD PTR [rbp-0x50]
  016ee:    	mov    rdi,rbx
  016f1:    	mov    rsi,r12
  016f4: 31 	movabs r8,0x563184c9e578
  016fe: 31 	movabs rax,0x5631840b8230
  01708:    	call   rax
  0170a:    	movq   xmm2,QWORD PTR [rsp]
  0170f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01715:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0171b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01721:    	add    rsp,0x20
  01725: 31 	movabs r13,0x563184c9e580
  0172f:    	test   rax,rax
  01732:    	je     0xfffe5593
  01738:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  0173c: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  01744:    	sub    rsp,0x20
  01748:    	movq   QWORD PTR [rsp],xmm3
  0174d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01753:    	movq   QWORD PTR [rsp+0x10],xmm5
  01759:    	mov    rdx,QWORD PTR [rbp-0x30]
  0175d:    	mov    rcx,QWORD PTR [rbp-0x58]
  01761:    	mov    rdi,rbx
  01764:    	mov    rsi,r12
  01767: 31 	movabs r8,0x563184c9e598
  01771: 31 	movabs rax,0x5631840b8230
  0177b:    	call   rax
  0177d:    	movq   xmm3,QWORD PTR [rsp]
  01782:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01788:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0178e:    	add    rsp,0x20
  01792: 31 	movabs r13,0x563184c9e5a0
  0179c:    	test   rax,rax
  0179f:    	je     0xfffe5593
  017a5:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  017a9:    	mov    rdi,QWORD PTR [rbp-0x50]
  017ad: 00 	test   rdi,0x7
  017b4:    	jne    0x34d90
  017ba:    	cmp    DWORD PTR [rdi+0x4],0x28
  017be:    	jne    0x34d90
  017c4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe68a6],0x26        # 0xfffe8071
  017cb:    	jne    0x34d90
  017d1:    	sub    rsp,0x10
  017d5:    	movq   QWORD PTR [rsp],xmm3
  017da:    	movq   QWORD PTR [rsp+0x8],xmm4
  017e0:    	mov    rax,QWORD PTR [rbx]
  017e3:    	lea    rdi,[rsp-0x18]
  017e8:    	mov    QWORD PTR [rdi],rax
  017eb:    	mov    QWORD PTR [rbx],rdi
  017ee: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017f7:    	mov    QWORD PTR [rsp-0x38],rcx
  017fc:    	mov    rax,QWORD PTR [rbp-0x50]
  01800:    	mov    QWORD PTR [rsp-0x38],rax
  01805: 00 	mov    rdi,0x1
  0180c:    	mov    rax,QWORD PTR [rbp-0x58]
  01810:    	mov    QWORD PTR [rsp-0x40],rax
  01815: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0181e: 09 	movabs rax,0x900000040
  01828:    	mov    QWORD PTR [rsp-0x28],rax
  0182d: 31 	movabs r13,0x563184c82c10
  01837:    	call   0xffff1b85
  0183c:    	lea    rdi,[rbp-0x8]
  01840:    	mov    QWORD PTR [rbx],rdi
  01843:    	movq   xmm3,QWORD PTR [rsp]
  01848:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0184e:    	add    rsp,0x10
  01852: 31 	movabs r13,0x563184c9e5c0
  0185c:    	test   rax,rax
  0185f:    	je     0xfffe5593
  01865:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  01869:    	sub    rsp,0x10
  0186d:    	movq   QWORD PTR [rsp],xmm3
  01872:    	movq   QWORD PTR [rsp+0x8],xmm4
  01878:    	mov    rdx,QWORD PTR [rbp-0x30]
  0187c:    	mov    rcx,QWORD PTR [rbp-0x40]
  01880:    	mov    r8,QWORD PTR [rbp-0x48]
  01884:    	mov    rdi,rbx
  01887:    	mov    rsi,r12
  0188a: 31 	movabs rax,0x5631840b8360
  01894:    	call   rax
  01896:    	movq   xmm3,QWORD PTR [rsp]
  0189b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018a1:    	add    rsp,0x10
  018a5: 31 	movabs r13,0x563184c9e5e0
  018af:    	test   rax,rax
  018b2:    	je     0xfffe5593
:00096 %3 = 0: i32
  018b8: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  018c0: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  018c8:    	sub    rsp,0x10
  018cc:    	movq   QWORD PTR [rsp],xmm3
  018d1:    	movq   QWORD PTR [rsp+0x8],xmm4
  018d7:    	mov    rdx,QWORD PTR [rbp-0x30]
  018db:    	mov    rcx,QWORD PTR [rbp-0x50]
  018df:    	mov    rdi,rbx
  018e2:    	mov    rsi,r12
  018e5: 31 	movabs r8,0x563184c9e608
  018ef: 31 	movabs rax,0x5631840b8230
  018f9:    	call   rax
  018fb:    	movq   xmm3,QWORD PTR [rsp]
  01900:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01906:    	add    rsp,0x10
  0190a: 31 	movabs r13,0x563184c9e610
  01914:    	test   rax,rax
  01917:    	je     0xfffe5593
  0191d:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  01921:    	mov    rdi,QWORD PTR [rbp-0x50]
  01925: 00 	test   rdi,0x7
  0192c:    	jne    0x34d9f
  01932:    	cmp    DWORD PTR [rdi+0x4],0x28
  01936:    	jne    0x34d9f
  0193c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe672e],0x26        # 0xfffe8071
  01943:    	jne    0x34d9f
  01949:    	sub    rsp,0x10
  0194d:    	movq   QWORD PTR [rsp],xmm3
  01952:    	movq   QWORD PTR [rsp+0x8],xmm4
  01958:    	mov    rax,QWORD PTR [rbx]
  0195b:    	lea    rdi,[rsp-0x18]
  01960:    	mov    QWORD PTR [rdi],rax
  01963:    	mov    QWORD PTR [rbx],rdi
  01966: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0196f:    	mov    QWORD PTR [rsp-0x38],rcx
  01974:    	mov    rax,QWORD PTR [rbp-0x50]
  01978:    	mov    QWORD PTR [rsp-0x38],rax
  0197d: 00 	mov    rdi,0x0
  01984: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0198d: 07 	movabs rax,0x1000700000043
  01997:    	mov    QWORD PTR [rsp-0x28],rax
  0199c: 31 	movabs r13,0x563184c828e0
  019a6:    	call   0xfffe8968
  019ab:    	lea    rdi,[rbp-0x8]
  019af:    	mov    QWORD PTR [rbx],rdi
  019b2:    	movq   xmm3,QWORD PTR [rsp]
  019b7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019bd:    	add    rsp,0x10
  019c1: 31 	movabs r13,0x563184c9e630
  019cb:    	test   rax,rax
  019ce:    	je     0xfffe5593
  019d4:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  019d8:    	sub    rsp,0x10
  019dc:    	movq   QWORD PTR [rsp],xmm3
  019e1:    	movq   QWORD PTR [rsp+0x8],xmm4
  019e7:    	mov    rdx,QWORD PTR [rbp-0x30]
  019eb:    	mov    rcx,QWORD PTR [rbp-0x40]
  019ef:    	mov    r8,QWORD PTR [rbp-0x48]
  019f3:    	mov    rdi,rbx
  019f6:    	mov    rsi,r12
  019f9: 31 	movabs rax,0x5631840b8360
  01a03:    	call   rax
  01a05:    	movq   xmm3,QWORD PTR [rsp]
  01a0a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a10:    	add    rsp,0x10
  01a14: 31 	movabs r13,0x563184c9e650
  01a1e:    	test   rax,rax
  01a21:    	je     0xfffe5593
:00103 %3 = 1: i32
  01a27: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  01a2f: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01a37:    	sub    rsp,0x10
  01a3b:    	movq   QWORD PTR [rsp],xmm3
  01a40:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a46:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a4a:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a4e:    	mov    rdi,rbx
  01a51:    	mov    rsi,r12
  01a54: 31 	movabs r8,0x563184c9e678
  01a5e: 31 	movabs rax,0x5631840b8230
  01a68:    	call   rax
  01a6a:    	movq   xmm3,QWORD PTR [rsp]
  01a6f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a75:    	add    rsp,0x10
  01a79: 31 	movabs r13,0x563184c9e680
  01a83:    	test   rax,rax
  01a86:    	je     0xfffe5593
  01a8c:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  01a90: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  01a98:    	sub    rsp,0x10
  01a9c:    	movq   QWORD PTR [rsp],xmm3
  01aa1:    	movq   QWORD PTR [rsp+0x8],xmm4
  01aa7:    	mov    rdx,QWORD PTR [rbp-0x30]
  01aab:    	mov    rcx,QWORD PTR [rbp-0x58]
  01aaf:    	mov    rdi,rbx
  01ab2:    	mov    rsi,r12
  01ab5: 31 	movabs r8,0x563184c9e698
  01abf: 31 	movabs rax,0x5631840b8230
  01ac9:    	call   rax
  01acb:    	movq   xmm3,QWORD PTR [rsp]
  01ad0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ad6:    	add    rsp,0x10
  01ada: 31 	movabs r13,0x563184c9e6a0
  01ae4:    	test   rax,rax
  01ae7:    	je     0xfffe5593
  01aed:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  01af1:    	mov    rdi,QWORD PTR [rbp-0x50]
  01af5: 00 	test   rdi,0x7
  01afc:    	jne    0x34dae
  01b02:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b06:    	jne    0x34dae
  01b0c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe655e],0x26        # 0xfffe8071
  01b13:    	jne    0x34dae
  01b19:    	sub    rsp,0x10
  01b1d:    	movq   QWORD PTR [rsp],xmm3
  01b22:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b28:    	mov    rax,QWORD PTR [rbx]
  01b2b:    	lea    rdi,[rsp-0x18]
  01b30:    	mov    QWORD PTR [rdi],rax
  01b33:    	mov    QWORD PTR [rbx],rdi
  01b36: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b3f:    	mov    QWORD PTR [rsp-0x38],rcx
  01b44:    	mov    rax,QWORD PTR [rbp-0x50]
  01b48:    	mov    QWORD PTR [rsp-0x38],rax
  01b4d: 00 	mov    rdi,0x1
  01b54:    	mov    rax,QWORD PTR [rbp-0x58]
  01b58:    	mov    QWORD PTR [rsp-0x40],rax
  01b5d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b66: 09 	movabs rax,0x900000040
  01b70:    	mov    QWORD PTR [rsp-0x28],rax
  01b75: 31 	movabs r13,0x563184c82c10
  01b7f:    	call   0xffff1b85
  01b84:    	lea    rdi,[rbp-0x8]
  01b88:    	mov    QWORD PTR [rbx],rdi
  01b8b:    	movq   xmm3,QWORD PTR [rsp]
  01b90:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b96:    	add    rsp,0x10
  01b9a: 31 	movabs r13,0x563184c9e6c0
  01ba4:    	test   rax,rax
  01ba7:    	je     0xfffe5593
  01bad:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  01bb1:    	sub    rsp,0x10
  01bb5:    	movq   QWORD PTR [rsp],xmm3
  01bba:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bc0:    	mov    rdx,QWORD PTR [rbp-0x30]
  01bc4:    	mov    rcx,QWORD PTR [rbp-0x40]
  01bc8:    	mov    r8,QWORD PTR [rbp-0x48]
  01bcc:    	mov    rdi,rbx
  01bcf:    	mov    rsi,r12
  01bd2: 31 	movabs rax,0x5631840b8360
  01bdc:    	call   rax
  01bde:    	movq   xmm3,QWORD PTR [rsp]
  01be3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01be9:    	add    rsp,0x10
  01bed: 31 	movabs r13,0x563184c9e6e0
  01bf7:    	test   rax,rax
  01bfa:    	je     0xfffe5593
:00112 %3 = 1: i32
  01c00: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01c08: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  01c10:    	sub    rsp,0x10
  01c14:    	movq   QWORD PTR [rsp],xmm3
  01c19:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c1f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c23:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c27:    	mov    rdi,rbx
  01c2a:    	mov    rsi,r12
  01c2d: 31 	movabs r8,0x563184c9e708
  01c37: 31 	movabs rax,0x5631840b8230
  01c41:    	call   rax
  01c43:    	movq   xmm3,QWORD PTR [rsp]
  01c48:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c4e:    	add    rsp,0x10
  01c52: 31 	movabs r13,0x563184c9e710
  01c5c:    	test   rax,rax
  01c5f:    	je     0xfffe5593
  01c65:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01c69:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c6d: 00 	test   rdi,0x7
  01c74:    	jne    0x34dbd
  01c7a:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c7e:    	jne    0x34dbd
  01c84: 26 	cmp    DWORD PTR [rip+0xfffffffffffe63e6],0x26        # 0xfffe8071
  01c8b:    	jne    0x34dbd
  01c91:    	sub    rsp,0x10
  01c95:    	movq   QWORD PTR [rsp],xmm3
  01c9a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ca0:    	mov    rax,QWORD PTR [rbx]
  01ca3:    	lea    rdi,[rsp-0x18]
  01ca8:    	mov    QWORD PTR [rdi],rax
  01cab:    	mov    QWORD PTR [rbx],rdi
  01cae: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01cb7:    	mov    QWORD PTR [rsp-0x38],rcx
  01cbc:    	mov    rax,QWORD PTR [rbp-0x50]
  01cc0:    	mov    QWORD PTR [rsp-0x38],rax
  01cc5: 00 	mov    rdi,0x0
  01ccc: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01cd5: 07 	movabs rax,0x1000700000043
  01cdf:    	mov    QWORD PTR [rsp-0x28],rax
  01ce4: 31 	movabs r13,0x563184c828e0
  01cee:    	call   0xfffe8968
  01cf3:    	lea    rdi,[rbp-0x8]
  01cf7:    	mov    QWORD PTR [rbx],rdi
  01cfa:    	movq   xmm3,QWORD PTR [rsp]
  01cff:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d05:    	add    rsp,0x10
  01d09: 31 	movabs r13,0x563184c9e730
  01d13:    	test   rax,rax
  01d16:    	je     0xfffe5593
  01d1c:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  01d20:    	sub    rsp,0x10
  01d24:    	movq   QWORD PTR [rsp],xmm3
  01d29:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d2f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d33:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d37:    	mov    r8,QWORD PTR [rbp-0x48]
  01d3b:    	mov    rdi,rbx
  01d3e:    	mov    rsi,r12
  01d41: 31 	movabs rax,0x5631840b8360
  01d4b:    	call   rax
  01d4d:    	movq   xmm3,QWORD PTR [rsp]
  01d52:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d58:    	add    rsp,0x10
  01d5c: 31 	movabs r13,0x563184c9e750
  01d66:    	test   rax,rax
  01d69:    	je     0xfffe5593
:00119 %3 = %4
  01d6f:    	mov    rax,QWORD PTR [rbp-0x48]
  01d73:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01d77:    	mov    rax,QWORD PTR [rbp-0x40]
  01d7b:    	leave  
  01d7c:    	ret    
==> start whole compile: intersect FuncId(71) self_class:Plane start:[00000] bytecode:0x563184c872a0
<== finished compile. elapsed:127.1µs
offset:Pos(117156) code: 6524 bytes  data: 360 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xa0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044:    	mov    rdi,QWORD PTR [rbp-0x28]
  00048: 00 	test   rdi,0x7
  0004f:    	jne    0x32ed0
  00055:    	cmp    DWORD PTR [rdi+0x4],0x2c
  00059:    	jne    0x32ed0
:00000 %7 = @p: Plane[IvarId(0)]
  0005f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00063:    	mov    rax,QWORD PTR [rdi+0x10]
  00067:    	mov    QWORD PTR [rbp-0x60],rax
:00001 %8 = @n: Plane[IvarId(1)]
  0006b:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006f:    	mov    rax,QWORD PTR [rdi+0x18]
  00073:    	mov    QWORD PTR [rbp-0x68],rax
:00002 %3 = %7.call vdot(%8; 1)             [Vec]
  00077:    	mov    rdi,QWORD PTR [rbp-0x60]
  0007b: 00 	test   rdi,0x7
  00082:    	jne    0x32edf
  00088:    	cmp    DWORD PTR [rdi+0x4],0x28
  0008c:    	jne    0x32edf
  00092: 26 	cmp    DWORD PTR [rip+0xfffffffffffe60dc],0x26        # 0xfffe6175
  00099:    	jne    0x32edf
  0009f:    	mov    rax,QWORD PTR [rbx]
  000a2:    	lea    rdi,[rsp-0x18]
  000a7:    	mov    QWORD PTR [rdi],rax
  000aa:    	mov    QWORD PTR [rbx],rdi
  000ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000b6:    	mov    QWORD PTR [rsp-0x38],rcx
  000bb:    	mov    rax,QWORD PTR [rbp-0x60]
  000bf:    	mov    QWORD PTR [rsp-0x38],rax
  000c4: 00 	mov    rdi,0x1
  000cb:    	mov    rax,QWORD PTR [rbp-0x68]
  000cf:    	mov    QWORD PTR [rsp-0x40],rax
  000d4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  000dd: 05 	movabs rax,0x1000500000041
  000e7:    	mov    QWORD PTR [rsp-0x28],rax
  000ec: 31 	movabs r13,0x563184c66dc0
  000f6:    	call   0xfffe6e98
  000fb:    	lea    rdi,[rbp-0x8]
  000ff:    	mov    QWORD PTR [rbx],rdi
  00102: 31 	movabs r13,0x563184c872e0
  0010c:    	test   rax,rax
  0010f:    	je     0xfffe3697
  00115:    	mov    QWORD PTR [rbp-0x40],rax
:00003 
:00005 %3 = neg %3                          [Float]
  00119:    	mov    rdi,QWORD PTR [rbp-0x40]
  0011d: 00 	test   rdi,0x1
  00124:    	jne    0x32eee
  0012a: 00 	test   rdi,0x2
  00131:    	je     0x16d
  00137:    	xorps  xmm2,xmm2
  0013a: 00 	movabs rax,0x8000000000000002
  00144:    	cmp    rdi,rax
  00147:    	je     0x17f
  0014d:    	mov    rax,rdi
  00150:    	sar    rax,0x3f
  00154:    	add    rax,0x2
  00158:    	and    rdi,0xfffffffffffffffc
  0015c:    	or     rdi,rax
  0015f:    	rol    rdi,0x3d
  00163:    	movq   xmm2,rdi
  00168:    	jmp    0x17f
  0016d:    	call   0xfffe36d0
  00172:    	test   rax,rax
  00175:    	je     0x32eee
  0017b:    	movq   xmm2,xmm0
  0017f: 00 	xorps  xmm2,XMMWORD PTR [rip+0x17f6]        # 0x197c
:00006 %7 = %1.call dir()                   [Ray]
  00186:    	mov    rdi,QWORD PTR [rbp-0x30]
  0018a: 00 	test   rdi,0x7
  00191:    	jne    0x32efd
  00197:    	cmp    DWORD PTR [rdi+0x4],0x2e
  0019b:    	jne    0x32efd
  001a1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5fcd],0x26        # 0xfffe6175
  001a8:    	jne    0x32efd
  001ae:    	mov    esi,DWORD PTR [rip+0x17d4]        # 0x1988
  001b4:    	cmp    esi,0xffffffff
  001b7:    	je     0x32f19
  001bd:    	cmp    WORD PTR [rdi+0x2],0x3
  001c2:    	jne    0x1db
  001c8:    	cmp    esi,0x6
  001cb:    	jge    0x1db
  001d1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d6:    	jmp    0x1f9
  001db:    	sub    rsp,0x10
  001df:    	movq   QWORD PTR [rsp],xmm2
  001e4: 31 	movabs rax,0x563184053740
  001ee:    	call   rax
  001f0:    	movq   xmm2,QWORD PTR [rsp]
  001f5:    	add    rsp,0x10
  001f9:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = @n: Plane[IvarId(1)]
  001fd:    	mov    rdi,QWORD PTR [rbp-0x28]
  00201:    	mov    rax,QWORD PTR [rdi+0x18]
  00205:    	mov    QWORD PTR [rbp-0x68],rax
:00010 %4 = %7.call vdot(%8; 1)             [Vec]
  00209:    	mov    rdi,QWORD PTR [rbp-0x60]
  0020d: 00 	test   rdi,0x7
  00214:    	jne    0x32f54
  0021a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0021e:    	jne    0x32f54
  00224: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5f4a],0x26        # 0xfffe6175
  0022b:    	jne    0x32f54
  00231:    	sub    rsp,0x10
  00235:    	movq   QWORD PTR [rsp],xmm2
  0023a:    	mov    rax,QWORD PTR [rbx]
  0023d:    	lea    rdi,[rsp-0x18]
  00242:    	mov    QWORD PTR [rdi],rax
  00245:    	mov    QWORD PTR [rbx],rdi
  00248: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00251:    	mov    QWORD PTR [rsp-0x38],rcx
  00256:    	mov    rax,QWORD PTR [rbp-0x60]
  0025a:    	mov    QWORD PTR [rsp-0x38],rax
  0025f: 00 	mov    rdi,0x1
  00266:    	mov    rax,QWORD PTR [rbp-0x68]
  0026a:    	mov    QWORD PTR [rsp-0x40],rax
  0026f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00278: 05 	movabs rax,0x1000500000041
  00282:    	mov    QWORD PTR [rsp-0x28],rax
  00287: 31 	movabs r13,0x563184c66dc0
  00291:    	call   0xfffe6e98
  00296:    	lea    rdi,[rbp-0x8]
  0029a:    	mov    QWORD PTR [rbx],rdi
  0029d:    	movq   xmm2,QWORD PTR [rsp]
  002a2:    	add    rsp,0x10
  002a6: 31 	movabs r13,0x563184c87360
  002b0:    	test   rax,rax
  002b3:    	je     0xfffe3697
  002b9:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %5 = %4
  002bd:    	mov    rax,QWORD PTR [rbp-0x48]
  002c1:    	mov    QWORD PTR [rbp-0x50],rax
:00014 %7 = literal[0.0]
  002c5: 00 	movq   xmm3,QWORD PTR [rip+0x16bf]        # 0x198c
  002cd: 00 	movabs rax,0x8000000000000002
  002d7:    	mov    QWORD PTR [rbp-0x60],rax
:00015 _%7 = %4 < %7                        [Float][Float]
:00016 condnotbr _%7 =>:00020
  002db:    	mov    rdi,QWORD PTR [rbp-0x48]
  002df: 00 	test   rdi,0x1
  002e6:    	jne    0x32f70
  002ec: 00 	test   rdi,0x2
  002f3:    	je     0x32f
  002f9:    	xorps  xmm4,xmm4
  002fc: 00 	movabs rax,0x8000000000000002
  00306:    	cmp    rdi,rax
  00309:    	je     0x341
  0030f:    	mov    rax,rdi
  00312:    	sar    rax,0x3f
  00316:    	add    rax,0x2
  0031a:    	and    rdi,0xfffffffffffffffc
  0031e:    	or     rdi,rax
  00321:    	rol    rdi,0x3d
  00325:    	movq   xmm4,rdi
  0032a:    	jmp    0x341
  0032f:    	call   0xfffe36d0
  00334:    	test   rax,rax
  00337:    	je     0x32f70
  0033d:    	movq   xmm4,xmm0
  00341:    	ucomisd xmm4,xmm3
  00345:    	jae    0x32f8c
:00017 %5 = %4
:00018 %5 = neg %5                          [Float]
  0034b:    	movq   xmm5,xmm4
  0034f: 00 	xorps  xmm5,XMMWORD PTR [rip+0x1646]        # 0x199c
:00019 br =>:00020
  00356:    	jmp    0x32fb2
:00020 %7 = literal[1e-17]
  0035b: 00 	movq   xmm3,QWORD PTR [rip+0x1649]        # 0x19ac
  00363: aa 	movabs rax,0xe33877aa3236a4ba
  0036d:    	mov    QWORD PTR [rbp-0x60],rax
:00021 _%7 = %5 < %7                        [Float][Float]
:00022 condnotbr _%7 =>:00026
  00371:    	mov    rdi,QWORD PTR [rbp-0x50]
  00375: 00 	test   rdi,0x1
  0037c:    	jne    0x32fe5
  00382: 00 	test   rdi,0x2
  00389:    	je     0x3c5
  0038f:    	xorps  xmm5,xmm5
  00392: 00 	movabs rax,0x8000000000000002
  0039c:    	cmp    rdi,rax
  0039f:    	je     0x3d7
  003a5:    	mov    rax,rdi
  003a8:    	sar    rax,0x3f
  003ac:    	add    rax,0x2
  003b0:    	and    rdi,0xfffffffffffffffc
  003b4:    	or     rdi,rax
  003b7:    	rol    rdi,0x3d
  003bb:    	movq   xmm5,rdi
  003c0:    	jmp    0x3d7
  003c5:    	call   0xfffe36d0
  003ca:    	test   rax,rax
  003cd:    	je     0x32fe5
  003d3:    	movq   xmm5,xmm0
  003d7:    	ucomisd xmm5,xmm3
  003db:    	jae    0x3ef
:00023 %7 = nil
  003e1: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00024 ret %7
  003e9:    	mov    rax,QWORD PTR [rbp-0x60]
  003ed:    	leave  
  003ee:    	ret    
:00026 %8 = %1.call org()                   [Ray]
  003ef:    	mov    rdi,QWORD PTR [rbp-0x30]
  003f3: 00 	test   rdi,0x7
  003fa:    	jne    0x33001
  00400:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00404:    	jne    0x33001
  0040a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5d64],0x26        # 0xfffe6175
  00411:    	jne    0x33001
  00417:    	mov    esi,DWORD PTR [rip+0x159b]        # 0x19b8
  0041d:    	cmp    esi,0xffffffff
  00420:    	je     0x3301d
  00426:    	cmp    WORD PTR [rdi+0x2],0x3
  0042b:    	jne    0x444
  00431:    	cmp    esi,0x6
  00434:    	jge    0x444
  0043a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0043f:    	jmp    0x486
  00444:    	sub    rsp,0x20
  00448:    	movq   QWORD PTR [rsp],xmm2
  0044d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00453:    	movq   QWORD PTR [rsp+0x10],xmm4
  00459:    	movq   QWORD PTR [rsp+0x18],xmm5
  0045f: 31 	movabs rax,0x563184053740
  00469:    	call   rax
  0046b:    	movq   xmm2,QWORD PTR [rsp]
  00470:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00476:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0047c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00482:    	add    rsp,0x20
  00486:    	mov    QWORD PTR [rbp-0x68],rax
:00027 
:00029 %9 = @n: Plane[IvarId(1)]
  0048a:    	mov    rdi,QWORD PTR [rbp-0x28]
  0048e:    	mov    rax,QWORD PTR [rdi+0x18]
  00492:    	mov    QWORD PTR [rbp-0x70],rax
:00030 %7 = %8.call vdot(%9; 1)             [Vec]
  00496:    	mov    rdi,QWORD PTR [rbp-0x68]
  0049a: 00 	test   rdi,0x7
  004a1:    	jne    0x3307c
  004a7:    	cmp    DWORD PTR [rdi+0x4],0x28
  004ab:    	jne    0x3307c
  004b1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5cbd],0x26        # 0xfffe6175
  004b8:    	jne    0x3307c
  004be:    	sub    rsp,0x20
  004c2:    	movq   QWORD PTR [rsp],xmm2
  004c7:    	movq   QWORD PTR [rsp+0x8],xmm4
  004cd:    	movq   QWORD PTR [rsp+0x10],xmm5
  004d3:    	mov    rax,QWORD PTR [rbx]
  004d6:    	lea    rdi,[rsp-0x18]
  004db:    	mov    QWORD PTR [rdi],rax
  004de:    	mov    QWORD PTR [rbx],rdi
  004e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  004ea:    	mov    QWORD PTR [rsp-0x38],rcx
  004ef:    	mov    rax,QWORD PTR [rbp-0x68]
  004f3:    	mov    QWORD PTR [rsp-0x38],rax
  004f8: 00 	mov    rdi,0x1
  004ff:    	mov    rax,QWORD PTR [rbp-0x70]
  00503:    	mov    QWORD PTR [rsp-0x40],rax
  00508: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00511: 05 	movabs rax,0x1000500000041
  0051b:    	mov    QWORD PTR [rsp-0x28],rax
  00520: 31 	movabs r13,0x563184c66dc0
  0052a:    	call   0xfffe6e98
  0052f:    	lea    rdi,[rbp-0x8]
  00533:    	mov    QWORD PTR [rbx],rdi
  00536:    	movq   xmm2,QWORD PTR [rsp]
  0053b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00541:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00547:    	add    rsp,0x20
  0054b: 31 	movabs r13,0x563184c874a0
  00555:    	test   rax,rax
  00558:    	je     0xfffe3697
  0055e:    	mov    QWORD PTR [rbp-0x60],rax
:00031 
:00033 %7 = %7 + %3                         [Float][Float]
  00562:    	mov    rdi,QWORD PTR [rbp-0x60]
  00566: 00 	test   rdi,0x1
  0056d:    	jne    0x33098
  00573: 00 	test   rdi,0x2
  0057a:    	je     0x5b6
  00580:    	xorps  xmm3,xmm3
  00583: 00 	movabs rax,0x8000000000000002
  0058d:    	cmp    rdi,rax
  00590:    	je     0x5c8
  00596:    	mov    rax,rdi
  00599:    	sar    rax,0x3f
  0059d:    	add    rax,0x2
  005a1:    	and    rdi,0xfffffffffffffffc
  005a5:    	or     rdi,rax
  005a8:    	rol    rdi,0x3d
  005ac:    	movq   xmm3,rdi
  005b1:    	jmp    0x5c8
  005b6:    	call   0xfffe36d0
  005bb:    	test   rax,rax
  005be:    	je     0x33098
  005c4:    	movq   xmm3,xmm0
  005c8:    	addsd  xmm3,xmm2
:00034 %7 = neg %7                          [Float]
  005cc: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13e9]        # 0x19bc
:00035 %6 = %7 / %4                         [Float][Float]
  005d3:    	movq   xmm6,xmm3
  005d7:    	movq   rax,xmm4
  005dc:    	test   rax,rax
  005df:    	je     0xfffe36bc
  005e5:    	divsd  xmm6,xmm4
:00036 %7 = literal[0.0]
  005e9: 00 	movq   xmm3,QWORD PTR [rip+0x13db]        # 0x19cc
  005f1: 00 	movabs rax,0x8000000000000002
  005fb:    	mov    QWORD PTR [rbp-0x60],rax
:00037 _%7 = %6 > %7                        [Float][Float]
:00038 condnotbr _%7 =>:00105
  005ff:    	ucomisd xmm6,xmm3
  00603:    	jbe    0x34011
:00039 %7 = %2.call t()                     [<INVALID>]
  00609: 01 	sub    DWORD PTR [rip+0x13c4],0x1        # 0x19d4
  00610:    	je     0x330dd
  00616:    	sub    rsp,0x20
  0061a:    	movq   QWORD PTR [rsp],xmm2
  0061f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00625:    	movq   QWORD PTR [rsp+0x10],xmm5
  0062b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00631:    	mov    rdi,QWORD PTR [rbp-0x38]
  00635: 31 	movabs rax,0x5631840958d0
  0063f:    	call   rax
  00641:    	mov    r15d,eax
  00644: 00 	cmp    r15d,DWORD PTR [rip+0x1391]        # 0x19dc
  0064b:    	jne    0x330ff
  00651:    	mov    eax,DWORD PTR [rip+0xfffffffffffe5b1e]        # 0xfffe6175
  00657:    	cmp    DWORD PTR [rip+0x137b],eax        # 0x19d8
  0065d:    	jne    0x330ff
  00663:    	mov    rax,QWORD PTR [rbx]
  00666:    	lea    rdi,[rsp-0x18]
  0066b:    	mov    QWORD PTR [rdi],rax
  0066e:    	mov    QWORD PTR [rbx],rdi
  00671: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0067a:    	mov    QWORD PTR [rsp-0x38],rcx
  0067f:    	mov    rax,QWORD PTR [rbp-0x38]
  00683:    	mov    QWORD PTR [rsp-0x38],rax
  00688: 00 	mov    rdi,0x0
  0068f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00698: 00 	movabs rax,0x0
  006a2:    	mov    QWORD PTR [rsp-0x28],rax
  006a7: 00 	movabs r13,0x0
  006b1:    	call   0xfffe365c
  006b6:    	lea    rdi,[rbp-0x8]
  006ba:    	mov    QWORD PTR [rbx],rdi
  006bd:    	movq   xmm2,QWORD PTR [rsp]
  006c2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  006c8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006ce:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006d4:    	add    rsp,0x20
  006d8:    	test   rax,rax
  006db:    	je     0x3316b
  006e1:    	mov    QWORD PTR [rbp-0x60],rax
:00040 
:00042 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00043 condnotbr _%7 =>:00105
  006e5:    	movq   xmm0,xmm6
  006e9:    	call   0xfffe37c3
  006ee:    	mov    QWORD PTR [rbp-0x58],rax
  006f2:    	mov    rdi,QWORD PTR [rbp-0x58]
  006f6:    	mov    rsi,QWORD PTR [rbp-0x60]
  006fa: 00 	test   rdi,0x1
  00701:    	je     0x3317a
  00707: 00 	test   rsi,0x1
  0070e:    	je     0x3317a
  00714:    	cmp    rdi,rsi
  00717:    	jge    0x34044
:00044 %7 = literal[true]
  0071d: 00 	mov    rax,0x1c
  00724:    	mov    QWORD PTR [rbp-0x60],rax
:00045 _ = %2.call hit=(%7; 1)              [<INVALID>]
  00728: 01 	sub    DWORD PTR [rip+0x12b1],0x1        # 0x19e0
  0072f:    	je     0x331eb
  00735:    	sub    rsp,0x20
  00739:    	movq   QWORD PTR [rsp],xmm2
  0073e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00744:    	movq   QWORD PTR [rsp+0x10],xmm5
  0074a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00750:    	mov    rdi,QWORD PTR [rbp-0x38]
  00754: 31 	movabs rax,0x5631840958d0
  0075e:    	call   rax
  00760:    	mov    r15d,eax
  00763: 00 	cmp    r15d,DWORD PTR [rip+0x127e]        # 0x19e8
  0076a:    	jne    0x3320d
  00770:    	mov    eax,DWORD PTR [rip+0xfffffffffffe59ff]        # 0xfffe6175
  00776:    	cmp    DWORD PTR [rip+0x1268],eax        # 0x19e4
  0077c:    	jne    0x3320d
  00782:    	mov    rax,QWORD PTR [rbx]
  00785:    	lea    rdi,[rsp-0x18]
  0078a:    	mov    QWORD PTR [rdi],rax
  0078d:    	mov    QWORD PTR [rbx],rdi
  00790: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00799:    	mov    QWORD PTR [rsp-0x38],rcx
  0079e:    	mov    rax,QWORD PTR [rbp-0x38]
  007a2:    	mov    QWORD PTR [rsp-0x38],rax
  007a7: 00 	mov    rdi,0x1
  007ae:    	mov    rax,QWORD PTR [rbp-0x60]
  007b2:    	mov    QWORD PTR [rsp-0x40],rax
  007b7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007c0: 00 	movabs rax,0x0
  007ca:    	mov    QWORD PTR [rsp-0x28],rax
  007cf: 00 	movabs r13,0x0
  007d9:    	call   0xfffe365c
  007de:    	lea    rdi,[rbp-0x8]
  007e2:    	mov    QWORD PTR [rbx],rdi
  007e5:    	movq   xmm2,QWORD PTR [rsp]
  007ea:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007f0:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007f6:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007fc:    	add    rsp,0x20
  00800:    	test   rax,rax
  00803:    	je     0x33279
:00046 
:00048 _ = %2.call t=(%6; 1)                [<INVALID>]
  00809: 01 	sub    DWORD PTR [rip+0x11dc],0x1        # 0x19ec
  00810:    	je     0x332a4
  00816:    	sub    rsp,0x20
  0081a:    	movq   QWORD PTR [rsp],xmm2
  0081f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00825:    	movq   QWORD PTR [rsp+0x10],xmm5
  0082b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00831:    	mov    rdi,QWORD PTR [rbp-0x38]
  00835: 31 	movabs rax,0x5631840958d0
  0083f:    	call   rax
  00841:    	mov    r15d,eax
  00844: 00 	cmp    r15d,DWORD PTR [rip+0x11a9]        # 0x19f4
  0084b:    	jne    0x332c6
  00851:    	mov    eax,DWORD PTR [rip+0xfffffffffffe591e]        # 0xfffe6175
  00857:    	cmp    DWORD PTR [rip+0x1193],eax        # 0x19f0
  0085d:    	jne    0x332c6
  00863:    	mov    rax,QWORD PTR [rbx]
  00866:    	lea    rdi,[rsp-0x18]
  0086b:    	mov    QWORD PTR [rdi],rax
  0086e:    	mov    QWORD PTR [rbx],rdi
  00871: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0087a:    	mov    QWORD PTR [rsp-0x38],rcx
  0087f:    	mov    rax,QWORD PTR [rbp-0x38]
  00883:    	mov    QWORD PTR [rsp-0x38],rax
  00888: 00 	mov    rdi,0x1
  0088f:    	mov    rax,QWORD PTR [rbp-0x58]
  00893:    	mov    QWORD PTR [rsp-0x40],rax
  00898: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008a1: 00 	movabs rax,0x0
  008ab:    	mov    QWORD PTR [rsp-0x28],rax
  008b0: 00 	movabs r13,0x0
  008ba:    	call   0xfffe365c
  008bf:    	lea    rdi,[rbp-0x8]
  008c3:    	mov    QWORD PTR [rbx],rdi
  008c6:    	movq   xmm2,QWORD PTR [rsp]
  008cb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  008d1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008d7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008dd:    	add    rsp,0x20
  008e1:    	test   rax,rax
  008e4:    	je     0x33332
:00049 
:00051 %7 = @n: <INVALID>[IvarId(0)]
  008ea:    	mov    rdi,QWORD PTR [rbp-0x28]
  008ee:    	sub    rsp,0x20
  008f2:    	movq   QWORD PTR [rsp],xmm2
  008f7:    	movq   QWORD PTR [rsp+0x8],xmm4
  008fd:    	movq   QWORD PTR [rsp+0x10],xmm5
  00903:    	movq   QWORD PTR [rsp+0x18],xmm6
  00909: 00 	mov    rsi,0x8c
  00910:    	mov    rdx,r12
  00913: 31 	movabs rax,0x5631840b8770
  0091d:    	call   rax
  0091f:    	movq   xmm2,QWORD PTR [rsp]
  00924:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0092a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00930:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00936:    	add    rsp,0x20
  0093a:    	mov    QWORD PTR [rbp-0x60],rax
:00052 _ = %2.call n=(%7; 1)                [<INVALID>]
  0093e: 01 	sub    DWORD PTR [rip+0x10b3],0x1        # 0x19f8
  00945:    	je     0x3335d
  0094b:    	sub    rsp,0x20
  0094f:    	movq   QWORD PTR [rsp],xmm2
  00954:    	movq   QWORD PTR [rsp+0x8],xmm4
  0095a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00960:    	movq   QWORD PTR [rsp+0x18],xmm6
  00966:    	mov    rdi,QWORD PTR [rbp-0x38]
  0096a: 31 	movabs rax,0x5631840958d0
  00974:    	call   rax
  00976:    	mov    r15d,eax
  00979: 00 	cmp    r15d,DWORD PTR [rip+0x1080]        # 0x1a00
  00980:    	jne    0x3337f
  00986:    	mov    eax,DWORD PTR [rip+0xfffffffffffe57e9]        # 0xfffe6175
  0098c:    	cmp    DWORD PTR [rip+0x106a],eax        # 0x19fc
  00992:    	jne    0x3337f
  00998:    	mov    rax,QWORD PTR [rbx]
  0099b:    	lea    rdi,[rsp-0x18]
  009a0:    	mov    QWORD PTR [rdi],rax
  009a3:    	mov    QWORD PTR [rbx],rdi
  009a6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009af:    	mov    QWORD PTR [rsp-0x38],rcx
  009b4:    	mov    rax,QWORD PTR [rbp-0x38]
  009b8:    	mov    QWORD PTR [rsp-0x38],rax
  009bd: 00 	mov    rdi,0x1
  009c4:    	mov    rax,QWORD PTR [rbp-0x60]
  009c8:    	mov    QWORD PTR [rsp-0x40],rax
  009cd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  009d6: 00 	movabs rax,0x0
  009e0:    	mov    QWORD PTR [rsp-0x28],rax
  009e5: 00 	movabs r13,0x0
  009ef:    	call   0xfffe365c
  009f4:    	lea    rdi,[rbp-0x8]
  009f8:    	mov    QWORD PTR [rbx],rdi
  009fb:    	movq   xmm2,QWORD PTR [rsp]
  00a00:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a06:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a0c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a12:    	add    rsp,0x20
  00a16:    	test   rax,rax
  00a19:    	je     0x333eb
:00053 
:00055 %8 = const[Vec]                      [<INVALID>]
  00a1f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe5756]        # 0xfffe617c
  00a26: 00 	cmp    rax,QWORD PTR [rip+0xfef]        # 0x1a1c
  00a2d:    	jne    0x333fa
  00a33: 00 	mov    rax,QWORD PTR [rip+0xfd2]        # 0x1a0c
  00a3a:    	mov    QWORD PTR [rbp-0x68],rax
:00056 %10 = %1.call org()                  [<INVALID>]
  00a3e: 01 	sub    DWORD PTR [rip+0xfdf],0x1        # 0x1a24
  00a45:    	je     0x33492
  00a4b:    	sub    rsp,0x20
  00a4f:    	movq   QWORD PTR [rsp],xmm2
  00a54:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a5a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a60:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a66:    	mov    rdi,QWORD PTR [rbp-0x30]
  00a6a: 31 	movabs rax,0x5631840958d0
  00a74:    	call   rax
  00a76:    	mov    r15d,eax
  00a79: 00 	cmp    r15d,DWORD PTR [rip+0xfac]        # 0x1a2c
  00a80:    	jne    0x334b4
  00a86:    	mov    eax,DWORD PTR [rip+0xfffffffffffe56e9]        # 0xfffe6175
  00a8c:    	cmp    DWORD PTR [rip+0xf96],eax        # 0x1a28
  00a92:    	jne    0x334b4
  00a98:    	mov    rax,QWORD PTR [rbx]
  00a9b:    	lea    rdi,[rsp-0x18]
  00aa0:    	mov    QWORD PTR [rdi],rax
  00aa3:    	mov    QWORD PTR [rbx],rdi
  00aa6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00aaf:    	mov    QWORD PTR [rsp-0x38],rcx
  00ab4:    	mov    rax,QWORD PTR [rbp-0x30]
  00ab8:    	mov    QWORD PTR [rsp-0x38],rax
  00abd: 00 	mov    rdi,0x0
  00ac4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00acd: 00 	movabs rax,0x0
  00ad7:    	mov    QWORD PTR [rsp-0x28],rax
  00adc: 00 	movabs r13,0x0
  00ae6:    	call   0xfffe365c
  00aeb:    	lea    rdi,[rbp-0x8]
  00aef:    	mov    QWORD PTR [rbx],rdi
  00af2:    	movq   xmm2,QWORD PTR [rsp]
  00af7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00afd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b03:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b09:    	add    rsp,0x20
  00b0d:    	test   rax,rax
  00b10:    	je     0x33520
  00b16:    	mov    QWORD PTR [rbp-0x78],rax
:00057 
:00059 %9 = %10.call x()                    [<INVALID>]
  00b1a: 01 	sub    DWORD PTR [rip+0xf0f],0x1        # 0x1a30
  00b21:    	je     0x3354b
  00b27:    	sub    rsp,0x20
  00b2b:    	movq   QWORD PTR [rsp],xmm2
  00b30:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b36:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b3c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b42:    	mov    rdi,QWORD PTR [rbp-0x78]
  00b46: 31 	movabs rax,0x5631840958d0
  00b50:    	call   rax
  00b52:    	mov    r15d,eax
  00b55: 00 	cmp    r15d,DWORD PTR [rip+0xedc]        # 0x1a38
  00b5c:    	jne    0x3356d
  00b62:    	mov    eax,DWORD PTR [rip+0xfffffffffffe560d]        # 0xfffe6175
  00b68:    	cmp    DWORD PTR [rip+0xec6],eax        # 0x1a34
  00b6e:    	jne    0x3356d
  00b74:    	mov    rax,QWORD PTR [rbx]
  00b77:    	lea    rdi,[rsp-0x18]
  00b7c:    	mov    QWORD PTR [rdi],rax
  00b7f:    	mov    QWORD PTR [rbx],rdi
  00b82: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b8b:    	mov    QWORD PTR [rsp-0x38],rcx
  00b90:    	mov    rax,QWORD PTR [rbp-0x78]
  00b94:    	mov    QWORD PTR [rsp-0x38],rax
  00b99: 00 	mov    rdi,0x0
  00ba0: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ba9: 00 	movabs rax,0x0
  00bb3:    	mov    QWORD PTR [rsp-0x28],rax
  00bb8: 00 	movabs r13,0x0
  00bc2:    	call   0xfffe365c
  00bc7:    	lea    rdi,[rbp-0x8]
  00bcb:    	mov    QWORD PTR [rbx],rdi
  00bce:    	movq   xmm2,QWORD PTR [rsp]
  00bd3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00bd9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bdf:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00be5:    	add    rsp,0x20
  00be9:    	test   rax,rax
  00bec:    	je     0x335d9
  00bf2:    	mov    QWORD PTR [rbp-0x70],rax
:00060 
:00062 %11 = %1.call dir()                  [<INVALID>]
  00bf6: 01 	sub    DWORD PTR [rip+0xe3f],0x1        # 0x1a3c
  00bfd:    	je     0x33604
  00c03:    	sub    rsp,0x20
  00c07:    	movq   QWORD PTR [rsp],xmm2
  00c0c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c12:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c18:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c1e:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c22: 31 	movabs rax,0x5631840958d0
  00c2c:    	call   rax
  00c2e:    	mov    r15d,eax
  00c31: 00 	cmp    r15d,DWORD PTR [rip+0xe0c]        # 0x1a44
  00c38:    	jne    0x33626
  00c3e:    	mov    eax,DWORD PTR [rip+0xfffffffffffe5531]        # 0xfffe6175
  00c44:    	cmp    DWORD PTR [rip+0xdf6],eax        # 0x1a40
  00c4a:    	jne    0x33626
  00c50:    	mov    rax,QWORD PTR [rbx]
  00c53:    	lea    rdi,[rsp-0x18]
  00c58:    	mov    QWORD PTR [rdi],rax
  00c5b:    	mov    QWORD PTR [rbx],rdi
  00c5e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c67:    	mov    QWORD PTR [rsp-0x38],rcx
  00c6c:    	mov    rax,QWORD PTR [rbp-0x30]
  00c70:    	mov    QWORD PTR [rsp-0x38],rax
  00c75: 00 	mov    rdi,0x0
  00c7c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c85: 00 	movabs rax,0x0
  00c8f:    	mov    QWORD PTR [rsp-0x28],rax
  00c94: 00 	movabs r13,0x0
  00c9e:    	call   0xfffe365c
  00ca3:    	lea    rdi,[rbp-0x8]
  00ca7:    	mov    QWORD PTR [rbx],rdi
  00caa:    	movq   xmm2,QWORD PTR [rsp]
  00caf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00cb5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00cbb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00cc1:    	add    rsp,0x20
  00cc5:    	test   rax,rax
  00cc8:    	je     0x33692
  00cce:    	mov    QWORD PTR [rbp-0x80],rax
:00063 
:00065 %10 = %11.call x()                   [<INVALID>]
  00cd2: 01 	sub    DWORD PTR [rip+0xd6f],0x1        # 0x1a48
  00cd9:    	je     0x336bd
  00cdf:    	sub    rsp,0x20
  00ce3:    	movq   QWORD PTR [rsp],xmm2
  00ce8:    	movq   QWORD PTR [rsp+0x8],xmm4
  00cee:    	movq   QWORD PTR [rsp+0x10],xmm5
  00cf4:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cfa:    	mov    rdi,QWORD PTR [rbp-0x80]
  00cfe: 31 	movabs rax,0x5631840958d0
  00d08:    	call   rax
  00d0a:    	mov    r15d,eax
  00d0d: 00 	cmp    r15d,DWORD PTR [rip+0xd3c]        # 0x1a50
  00d14:    	jne    0x336df
  00d1a:    	mov    eax,DWORD PTR [rip+0xfffffffffffe5455]        # 0xfffe6175
  00d20:    	cmp    DWORD PTR [rip+0xd26],eax        # 0x1a4c
  00d26:    	jne    0x336df
  00d2c:    	mov    rax,QWORD PTR [rbx]
  00d2f:    	lea    rdi,[rsp-0x18]
  00d34:    	mov    QWORD PTR [rdi],rax
  00d37:    	mov    QWORD PTR [rbx],rdi
  00d3a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d43:    	mov    QWORD PTR [rsp-0x38],rcx
  00d48:    	mov    rax,QWORD PTR [rbp-0x80]
  00d4c:    	mov    QWORD PTR [rsp-0x38],rax
  00d51: 00 	mov    rdi,0x0
  00d58: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d61: 00 	movabs rax,0x0
  00d6b:    	mov    QWORD PTR [rsp-0x28],rax
  00d70: 00 	movabs r13,0x0
  00d7a:    	call   0xfffe365c
  00d7f:    	lea    rdi,[rbp-0x8]
  00d83:    	mov    QWORD PTR [rbx],rdi
  00d86:    	movq   xmm2,QWORD PTR [rsp]
  00d8b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d91:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d97:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d9d:    	add    rsp,0x20
  00da1:    	test   rax,rax
  00da4:    	je     0x3374b
  00daa:    	mov    QWORD PTR [rbp-0x78],rax
:00066 
:00068 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00dae: 01 	sub    DWORD PTR [rip+0xc9f],0x1        # 0x1a54
  00db5:    	je     0x33776
  00dbb:    	mov    rdi,QWORD PTR [rbp-0x58]
  00dbf:    	mov    rsi,QWORD PTR [rbp-0x78]
  00dc3:    	sub    rsp,0x20
  00dc7:    	movq   QWORD PTR [rsp],xmm2
  00dcc:    	movq   QWORD PTR [rsp+0x8],xmm4
  00dd2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00dd8:    	movq   QWORD PTR [rsp+0x18],xmm6
  00dde:    	mov    rdx,rdi
  00de1:    	mov    rcx,rsi
  00de4:    	mov    rdi,rbx
  00de7:    	mov    rsi,r12
  00dea: 31 	movabs rax,0x563184089e00
  00df4:    	call   rax
  00df6:    	movq   xmm2,QWORD PTR [rsp]
  00dfb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e01:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e07:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e0d:    	add    rsp,0x20
  00e11: 31 	movabs r13,0x563184c876f0
  00e1b:    	test   rax,rax
  00e1e:    	je     0xfffe3697
  00e24:    	mov    QWORD PTR [rbp-0x78],rax
:00069 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00e28: 01 	sub    DWORD PTR [rip+0xc29],0x1        # 0x1a58
  00e2f:    	je     0x337b4
  00e35:    	mov    rdi,QWORD PTR [rbp-0x70]
  00e39:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e3d:    	sub    rsp,0x20
  00e41:    	movq   QWORD PTR [rsp],xmm2
  00e46:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e4c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e52:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e58:    	mov    rdx,rdi
  00e5b:    	mov    rcx,rsi
  00e5e:    	mov    rdi,rbx
  00e61:    	mov    rsi,r12
  00e64: 31 	movabs rax,0x563184087f80
  00e6e:    	call   rax
  00e70:    	movq   xmm2,QWORD PTR [rsp]
  00e75:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e7b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e81:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e87:    	add    rsp,0x20
  00e8b: 31 	movabs r13,0x563184c87700
  00e95:    	test   rax,rax
  00e98:    	je     0xfffe3697
  00e9e:    	mov    QWORD PTR [rbp-0x70],rax
:00070 %11 = %1.call org()                  [<INVALID>]
  00ea2: 01 	sub    DWORD PTR [rip+0xbb3],0x1        # 0x1a5c
  00ea9:    	je     0x337f2
  00eaf:    	sub    rsp,0x20
  00eb3:    	movq   QWORD PTR [rsp],xmm2
  00eb8:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ebe:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ec4:    	movq   QWORD PTR [rsp+0x18],xmm6
  00eca:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ece: 31 	movabs rax,0x5631840958d0
  00ed8:    	call   rax
  00eda:    	mov    r15d,eax
  00edd: 00 	cmp    r15d,DWORD PTR [rip+0xb80]        # 0x1a64
  00ee4:    	jne    0x33814
  00eea:    	mov    eax,DWORD PTR [rip+0xfffffffffffe5285]        # 0xfffe6175
  00ef0:    	cmp    DWORD PTR [rip+0xb6a],eax        # 0x1a60
  00ef6:    	jne    0x33814
  00efc:    	mov    rax,QWORD PTR [rbx]
  00eff:    	lea    rdi,[rsp-0x18]
  00f04:    	mov    QWORD PTR [rdi],rax
  00f07:    	mov    QWORD PTR [rbx],rdi
  00f0a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f13:    	mov    QWORD PTR [rsp-0x38],rcx
  00f18:    	mov    rax,QWORD PTR [rbp-0x30]
  00f1c:    	mov    QWORD PTR [rsp-0x38],rax
  00f21: 00 	mov    rdi,0x0
  00f28: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f31: 00 	movabs rax,0x0
  00f3b:    	mov    QWORD PTR [rsp-0x28],rax
  00f40: 00 	movabs r13,0x0
  00f4a:    	call   0xfffe365c
  00f4f:    	lea    rdi,[rbp-0x8]
  00f53:    	mov    QWORD PTR [rbx],rdi
  00f56:    	movq   xmm2,QWORD PTR [rsp]
  00f5b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f61:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f67:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f6d:    	add    rsp,0x20
  00f71:    	test   rax,rax
  00f74:    	je     0x33880
  00f7a:    	mov    QWORD PTR [rbp-0x80],rax
:00071 
:00073 %10 = %11.call y()                   [<INVALID>]
  00f7e: 01 	sub    DWORD PTR [rip+0xae3],0x1        # 0x1a68
  00f85:    	je     0x338ab
  00f8b:    	sub    rsp,0x20
  00f8f:    	movq   QWORD PTR [rsp],xmm2
  00f94:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f9a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00fa0:    	movq   QWORD PTR [rsp+0x18],xmm6
  00fa6:    	mov    rdi,QWORD PTR [rbp-0x80]
  00faa: 31 	movabs rax,0x5631840958d0
  00fb4:    	call   rax
  00fb6:    	mov    r15d,eax
  00fb9: 00 	cmp    r15d,DWORD PTR [rip+0xab0]        # 0x1a70
  00fc0:    	jne    0x338cd
  00fc6:    	mov    eax,DWORD PTR [rip+0xfffffffffffe51a9]        # 0xfffe6175
  00fcc:    	cmp    DWORD PTR [rip+0xa9a],eax        # 0x1a6c
  00fd2:    	jne    0x338cd
  00fd8:    	mov    rax,QWORD PTR [rbx]
  00fdb:    	lea    rdi,[rsp-0x18]
  00fe0:    	mov    QWORD PTR [rdi],rax
  00fe3:    	mov    QWORD PTR [rbx],rdi
  00fe6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fef:    	mov    QWORD PTR [rsp-0x38],rcx
  00ff4:    	mov    rax,QWORD PTR [rbp-0x80]
  00ff8:    	mov    QWORD PTR [rsp-0x38],rax
  00ffd: 00 	mov    rdi,0x0
  01004: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0100d: 00 	movabs rax,0x0
  01017:    	mov    QWORD PTR [rsp-0x28],rax
  0101c: 00 	movabs r13,0x0
  01026:    	call   0xfffe365c
  0102b:    	lea    rdi,[rbp-0x8]
  0102f:    	mov    QWORD PTR [rbx],rdi
  01032:    	movq   xmm2,QWORD PTR [rsp]
  01037:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0103d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01043:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01049:    	add    rsp,0x20
  0104d:    	test   rax,rax
  01050:    	je     0x33939
  01056:    	mov    QWORD PTR [rbp-0x78],rax
:00074 
:00076 %12 = %1.call dir()                  [<INVALID>]
  0105a: 01 	sub    DWORD PTR [rip+0xa13],0x1        # 0x1a74
  01061:    	je     0x33964
  01067:    	sub    rsp,0x20
  0106b:    	movq   QWORD PTR [rsp],xmm2
  01070:    	movq   QWORD PTR [rsp+0x8],xmm4
  01076:    	movq   QWORD PTR [rsp+0x10],xmm5
  0107c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01082:    	mov    rdi,QWORD PTR [rbp-0x30]
  01086: 31 	movabs rax,0x5631840958d0
  01090:    	call   rax
  01092:    	mov    r15d,eax
  01095: 00 	cmp    r15d,DWORD PTR [rip+0x9e0]        # 0x1a7c
  0109c:    	jne    0x33986
  010a2:    	mov    eax,DWORD PTR [rip+0xfffffffffffe50cd]        # 0xfffe6175
  010a8:    	cmp    DWORD PTR [rip+0x9ca],eax        # 0x1a78
  010ae:    	jne    0x33986
  010b4:    	mov    rax,QWORD PTR [rbx]
  010b7:    	lea    rdi,[rsp-0x18]
  010bc:    	mov    QWORD PTR [rdi],rax
  010bf:    	mov    QWORD PTR [rbx],rdi
  010c2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010cb:    	mov    QWORD PTR [rsp-0x38],rcx
  010d0:    	mov    rax,QWORD PTR [rbp-0x30]
  010d4:    	mov    QWORD PTR [rsp-0x38],rax
  010d9: 00 	mov    rdi,0x0
  010e0: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010e9: 00 	movabs rax,0x0
  010f3:    	mov    QWORD PTR [rsp-0x28],rax
  010f8: 00 	movabs r13,0x0
  01102:    	call   0xfffe365c
  01107:    	lea    rdi,[rbp-0x8]
  0110b:    	mov    QWORD PTR [rbx],rdi
  0110e:    	movq   xmm2,QWORD PTR [rsp]
  01113:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01119:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0111f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01125:    	add    rsp,0x20
  01129:    	test   rax,rax
  0112c:    	je     0x339f2
  01132: ff 	mov    QWORD PTR [rbp-0x88],rax
:00077 
:00079 %11 = %12.call y()                   [<INVALID>]
  01139: 01 	sub    DWORD PTR [rip+0x940],0x1        # 0x1a80
  01140:    	je     0x33a1d
  01146:    	sub    rsp,0x20
  0114a:    	movq   QWORD PTR [rsp],xmm2
  0114f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01155:    	movq   QWORD PTR [rsp+0x10],xmm5
  0115b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01161: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01168: 31 	movabs rax,0x5631840958d0
  01172:    	call   rax
  01174:    	mov    r15d,eax
  01177: 00 	cmp    r15d,DWORD PTR [rip+0x90a]        # 0x1a88
  0117e:    	jne    0x33a3f
  01184:    	mov    eax,DWORD PTR [rip+0xfffffffffffe4feb]        # 0xfffe6175
  0118a:    	cmp    DWORD PTR [rip+0x8f4],eax        # 0x1a84
  01190:    	jne    0x33a3f
  01196:    	mov    rax,QWORD PTR [rbx]
  01199:    	lea    rdi,[rsp-0x18]
  0119e:    	mov    QWORD PTR [rdi],rax
  011a1:    	mov    QWORD PTR [rbx],rdi
  011a4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  011ad:    	mov    QWORD PTR [rsp-0x38],rcx
  011b2: ff 	mov    rax,QWORD PTR [rbp-0x88]
  011b9:    	mov    QWORD PTR [rsp-0x38],rax
  011be: 00 	mov    rdi,0x0
  011c5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011ce: 00 	movabs rax,0x0
  011d8:    	mov    QWORD PTR [rsp-0x28],rax
  011dd: 00 	movabs r13,0x0
  011e7:    	call   0xfffe365c
  011ec:    	lea    rdi,[rbp-0x8]
  011f0:    	mov    QWORD PTR [rbx],rdi
  011f3:    	movq   xmm2,QWORD PTR [rsp]
  011f8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011fe:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01204:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0120a:    	add    rsp,0x20
  0120e:    	test   rax,rax
  01211:    	je     0x33aae
  01217:    	mov    QWORD PTR [rbp-0x80],rax
:00080 
:00082 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  0121b: 01 	sub    DWORD PTR [rip+0x86a],0x1        # 0x1a8c
  01222:    	je     0x33ad9
  01228:    	mov    rdi,QWORD PTR [rbp-0x58]
  0122c:    	mov    rsi,QWORD PTR [rbp-0x80]
  01230:    	sub    rsp,0x20
  01234:    	movq   QWORD PTR [rsp],xmm2
  01239:    	movq   QWORD PTR [rsp+0x8],xmm4
  0123f:    	movq   QWORD PTR [rsp+0x10],xmm5
  01245:    	movq   QWORD PTR [rsp+0x18],xmm6
  0124b:    	mov    rdx,rdi
  0124e:    	mov    rcx,rsi
  01251:    	mov    rdi,rbx
  01254:    	mov    rsi,r12
  01257: 31 	movabs rax,0x563184089e00
  01261:    	call   rax
  01263:    	movq   xmm2,QWORD PTR [rsp]
  01268:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0126e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01274:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0127a:    	add    rsp,0x20
  0127e: 31 	movabs r13,0x563184c877d0
  01288:    	test   rax,rax
  0128b:    	je     0xfffe3697
  01291:    	mov    QWORD PTR [rbp-0x80],rax
:00083 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  01295: 01 	sub    DWORD PTR [rip+0x7f4],0x1        # 0x1a90
  0129c:    	je     0x33b17
  012a2:    	mov    rdi,QWORD PTR [rbp-0x78]
  012a6:    	mov    rsi,QWORD PTR [rbp-0x80]
  012aa:    	sub    rsp,0x20
  012ae:    	movq   QWORD PTR [rsp],xmm2
  012b3:    	movq   QWORD PTR [rsp+0x8],xmm4
  012b9:    	movq   QWORD PTR [rsp+0x10],xmm5
  012bf:    	movq   QWORD PTR [rsp+0x18],xmm6
  012c5:    	mov    rdx,rdi
  012c8:    	mov    rcx,rsi
  012cb:    	mov    rdi,rbx
  012ce:    	mov    rsi,r12
  012d1: 31 	movabs rax,0x563184087f80
  012db:    	call   rax
  012dd:    	movq   xmm2,QWORD PTR [rsp]
  012e2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012e8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012ee:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012f4:    	add    rsp,0x20
  012f8: 31 	movabs r13,0x563184c877e0
  01302:    	test   rax,rax
  01305:    	je     0xfffe3697
  0130b:    	mov    QWORD PTR [rbp-0x78],rax
:00084 %12 = %1.call org()                  [<INVALID>]
  0130f: 01 	sub    DWORD PTR [rip+0x77e],0x1        # 0x1a94
  01316:    	je     0x33b55
  0131c:    	sub    rsp,0x20
  01320:    	movq   QWORD PTR [rsp],xmm2
  01325:    	movq   QWORD PTR [rsp+0x8],xmm4
  0132b:    	movq   QWORD PTR [rsp+0x10],xmm5
  01331:    	movq   QWORD PTR [rsp+0x18],xmm6
  01337:    	mov    rdi,QWORD PTR [rbp-0x30]
  0133b: 31 	movabs rax,0x5631840958d0
  01345:    	call   rax
  01347:    	mov    r15d,eax
  0134a: 00 	cmp    r15d,DWORD PTR [rip+0x74b]        # 0x1a9c
  01351:    	jne    0x33b77
  01357:    	mov    eax,DWORD PTR [rip+0xfffffffffffe4e18]        # 0xfffe6175
  0135d:    	cmp    DWORD PTR [rip+0x735],eax        # 0x1a98
  01363:    	jne    0x33b77
  01369:    	mov    rax,QWORD PTR [rbx]
  0136c:    	lea    rdi,[rsp-0x18]
  01371:    	mov    QWORD PTR [rdi],rax
  01374:    	mov    QWORD PTR [rbx],rdi
  01377: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01380:    	mov    QWORD PTR [rsp-0x38],rcx
  01385:    	mov    rax,QWORD PTR [rbp-0x30]
  01389:    	mov    QWORD PTR [rsp-0x38],rax
  0138e: 00 	mov    rdi,0x0
  01395: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0139e: 00 	movabs rax,0x0
  013a8:    	mov    QWORD PTR [rsp-0x28],rax
  013ad: 00 	movabs r13,0x0
  013b7:    	call   0xfffe365c
  013bc:    	lea    rdi,[rbp-0x8]
  013c0:    	mov    QWORD PTR [rbx],rdi
  013c3:    	movq   xmm2,QWORD PTR [rsp]
  013c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013ce:    	movq   xmm5,QWORD PTR [rsp+0x10]
  013d4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  013da:    	add    rsp,0x20
  013de:    	test   rax,rax
  013e1:    	je     0x33be3
  013e7: ff 	mov    QWORD PTR [rbp-0x88],rax
:00085 
:00087 %11 = %12.call z()                   [<INVALID>]
  013ee: 01 	sub    DWORD PTR [rip+0x6ab],0x1        # 0x1aa0
  013f5:    	je     0x33c0e
  013fb:    	sub    rsp,0x20
  013ff:    	movq   QWORD PTR [rsp],xmm2
  01404:    	movq   QWORD PTR [rsp+0x8],xmm4
  0140a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01410:    	movq   QWORD PTR [rsp+0x18],xmm6
  01416: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0141d: 31 	movabs rax,0x5631840958d0
  01427:    	call   rax
  01429:    	mov    r15d,eax
  0142c: 00 	cmp    r15d,DWORD PTR [rip+0x675]        # 0x1aa8
  01433:    	jne    0x33c30
  01439:    	mov    eax,DWORD PTR [rip+0xfffffffffffe4d36]        # 0xfffe6175
  0143f:    	cmp    DWORD PTR [rip+0x65f],eax        # 0x1aa4
  01445:    	jne    0x33c30
  0144b:    	mov    rax,QWORD PTR [rbx]
  0144e:    	lea    rdi,[rsp-0x18]
  01453:    	mov    QWORD PTR [rdi],rax
  01456:    	mov    QWORD PTR [rbx],rdi
  01459: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01462:    	mov    QWORD PTR [rsp-0x38],rcx
  01467: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0146e:    	mov    QWORD PTR [rsp-0x38],rax
  01473: 00 	mov    rdi,0x0
  0147a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01483: 00 	movabs rax,0x0
  0148d:    	mov    QWORD PTR [rsp-0x28],rax
  01492: 00 	movabs r13,0x0
  0149c:    	call   0xfffe365c
  014a1:    	lea    rdi,[rbp-0x8]
  014a5:    	mov    QWORD PTR [rbx],rdi
  014a8:    	movq   xmm2,QWORD PTR [rsp]
  014ad:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014b3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  014b9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  014bf:    	add    rsp,0x20
  014c3:    	test   rax,rax
  014c6:    	je     0x33c9f
  014cc:    	mov    QWORD PTR [rbp-0x80],rax
:00088 
:00090 %13 = %1.call dir()                  [<INVALID>]
  014d0: 01 	sub    DWORD PTR [rip+0x5d5],0x1        # 0x1aac
  014d7:    	je     0x33cca
  014dd:    	sub    rsp,0x20
  014e1:    	movq   QWORD PTR [rsp],xmm2
  014e6:    	movq   QWORD PTR [rsp+0x8],xmm4
  014ec:    	movq   QWORD PTR [rsp+0x10],xmm5
  014f2:    	movq   QWORD PTR [rsp+0x18],xmm6
  014f8:    	mov    rdi,QWORD PTR [rbp-0x30]
  014fc: 31 	movabs rax,0x5631840958d0
  01506:    	call   rax
  01508:    	mov    r15d,eax
  0150b: 00 	cmp    r15d,DWORD PTR [rip+0x5a2]        # 0x1ab4
  01512:    	jne    0x33cec
  01518:    	mov    eax,DWORD PTR [rip+0xfffffffffffe4c57]        # 0xfffe6175
  0151e:    	cmp    DWORD PTR [rip+0x58c],eax        # 0x1ab0
  01524:    	jne    0x33cec
  0152a:    	mov    rax,QWORD PTR [rbx]
  0152d:    	lea    rdi,[rsp-0x18]
  01532:    	mov    QWORD PTR [rdi],rax
  01535:    	mov    QWORD PTR [rbx],rdi
  01538: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01541:    	mov    QWORD PTR [rsp-0x38],rcx
  01546:    	mov    rax,QWORD PTR [rbp-0x30]
  0154a:    	mov    QWORD PTR [rsp-0x38],rax
  0154f: 00 	mov    rdi,0x0
  01556: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0155f: 00 	movabs rax,0x0
  01569:    	mov    QWORD PTR [rsp-0x28],rax
  0156e: 00 	movabs r13,0x0
  01578:    	call   0xfffe365c
  0157d:    	lea    rdi,[rbp-0x8]
  01581:    	mov    QWORD PTR [rbx],rdi
  01584:    	movq   xmm2,QWORD PTR [rsp]
  01589:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0158f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01595:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0159b:    	add    rsp,0x20
  0159f:    	test   rax,rax
  015a2:    	je     0x33d58
  015a8: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %12 = %13.call z()                   [<INVALID>]
  015af: 01 	sub    DWORD PTR [rip+0x502],0x1        # 0x1ab8
  015b6:    	je     0x33d83
  015bc:    	sub    rsp,0x20
  015c0:    	movq   QWORD PTR [rsp],xmm2
  015c5:    	movq   QWORD PTR [rsp+0x8],xmm4
  015cb:    	movq   QWORD PTR [rsp+0x10],xmm5
  015d1:    	movq   QWORD PTR [rsp+0x18],xmm6
  015d7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  015de: 31 	movabs rax,0x5631840958d0
  015e8:    	call   rax
  015ea:    	mov    r15d,eax
  015ed: 00 	cmp    r15d,DWORD PTR [rip+0x4cc]        # 0x1ac0
  015f4:    	jne    0x33da5
  015fa:    	mov    eax,DWORD PTR [rip+0xfffffffffffe4b75]        # 0xfffe6175
  01600:    	cmp    DWORD PTR [rip+0x4b6],eax        # 0x1abc
  01606:    	jne    0x33da5
  0160c:    	mov    rax,QWORD PTR [rbx]
  0160f:    	lea    rdi,[rsp-0x18]
  01614:    	mov    QWORD PTR [rdi],rax
  01617:    	mov    QWORD PTR [rbx],rdi
  0161a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01623:    	mov    QWORD PTR [rsp-0x38],rcx
  01628: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0162f:    	mov    QWORD PTR [rsp-0x38],rax
  01634: 00 	mov    rdi,0x0
  0163b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01644: 00 	movabs rax,0x0
  0164e:    	mov    QWORD PTR [rsp-0x28],rax
  01653: 00 	movabs r13,0x0
  0165d:    	call   0xfffe365c
  01662:    	lea    rdi,[rbp-0x8]
  01666:    	mov    QWORD PTR [rbx],rdi
  01669:    	movq   xmm2,QWORD PTR [rsp]
  0166e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01674:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0167a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01680:    	add    rsp,0x20
  01684:    	test   rax,rax
  01687:    	je     0x33e14
  0168d: ff 	mov    QWORD PTR [rbp-0x88],rax
:00094 
:00096 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  01694: 01 	sub    DWORD PTR [rip+0x429],0x1        # 0x1ac4
  0169b:    	je     0x33e3f
  016a1:    	mov    rdi,QWORD PTR [rbp-0x58]
  016a5: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  016ac:    	sub    rsp,0x20
  016b0:    	movq   QWORD PTR [rsp],xmm2
  016b5:    	movq   QWORD PTR [rsp+0x8],xmm4
  016bb:    	movq   QWORD PTR [rsp+0x10],xmm5
  016c1:    	movq   QWORD PTR [rsp+0x18],xmm6
  016c7:    	mov    rdx,rdi
  016ca:    	mov    rcx,rsi
  016cd:    	mov    rdi,rbx
  016d0:    	mov    rsi,r12
  016d3: 31 	movabs rax,0x563184089e00
  016dd:    	call   rax
  016df:    	movq   xmm2,QWORD PTR [rsp]
  016e4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016ea:    	movq   xmm5,QWORD PTR [rsp+0x10]
  016f0:    	movq   xmm6,QWORD PTR [rsp+0x18]
  016f6:    	add    rsp,0x20
  016fa: 31 	movabs r13,0x563184c878b0
  01704:    	test   rax,rax
  01707:    	je     0xfffe3697
  0170d: ff 	mov    QWORD PTR [rbp-0x88],rax
:00097 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  01714: 01 	sub    DWORD PTR [rip+0x3ad],0x1        # 0x1ac8
  0171b:    	je     0x33e7d
  01721:    	mov    rdi,QWORD PTR [rbp-0x80]
  01725: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  0172c:    	sub    rsp,0x20
  01730:    	movq   QWORD PTR [rsp],xmm2
  01735:    	movq   QWORD PTR [rsp+0x8],xmm4
  0173b:    	movq   QWORD PTR [rsp+0x10],xmm5
  01741:    	movq   QWORD PTR [rsp+0x18],xmm6
  01747:    	mov    rdx,rdi
  0174a:    	mov    rcx,rsi
  0174d:    	mov    rdi,rbx
  01750:    	mov    rsi,r12
  01753: 31 	movabs rax,0x563184087f80
  0175d:    	call   rax
  0175f:    	movq   xmm2,QWORD PTR [rsp]
  01764:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0176a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01770:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01776:    	add    rsp,0x20
  0177a: 31 	movabs r13,0x563184c878c0
  01784:    	test   rax,rax
  01787:    	je     0xfffe3697
  0178d:    	mov    QWORD PTR [rbp-0x80],rax
:00098 %7 = %8.call new(%9; 3)              [<INVALID>]
  01791: 01 	sub    DWORD PTR [rip+0x334],0x1        # 0x1acc
  01798:    	je     0x33ebb
  0179e:    	sub    rsp,0x20
  017a2:    	movq   QWORD PTR [rsp],xmm2
  017a7:    	movq   QWORD PTR [rsp+0x8],xmm4
  017ad:    	movq   QWORD PTR [rsp+0x10],xmm5
  017b3:    	movq   QWORD PTR [rsp+0x18],xmm6
  017b9:    	mov    rdi,QWORD PTR [rbp-0x68]
  017bd: 31 	movabs rax,0x5631840958d0
  017c7:    	call   rax
  017c9:    	mov    r15d,eax
  017cc: 00 	cmp    r15d,DWORD PTR [rip+0x301]        # 0x1ad4
  017d3:    	jne    0x33edd
  017d9:    	mov    eax,DWORD PTR [rip+0xfffffffffffe4996]        # 0xfffe6175
  017df:    	cmp    DWORD PTR [rip+0x2eb],eax        # 0x1ad0
  017e5:    	jne    0x33edd
  017eb:    	mov    rax,QWORD PTR [rbx]
  017ee:    	lea    rdi,[rsp-0x18]
  017f3:    	mov    QWORD PTR [rdi],rax
  017f6:    	mov    QWORD PTR [rbx],rdi
  017f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01802:    	mov    QWORD PTR [rsp-0x38],rcx
  01807:    	mov    rax,QWORD PTR [rbp-0x68]
  0180b:    	mov    QWORD PTR [rsp-0x38],rax
  01810: 00 	mov    rdi,0x3
  01817:    	mov    rax,QWORD PTR [rbp-0x70]
  0181b:    	mov    QWORD PTR [rsp-0x40],rax
  01820:    	mov    rax,QWORD PTR [rbp-0x78]
  01824:    	mov    QWORD PTR [rsp-0x48],rax
  01829:    	mov    rax,QWORD PTR [rbp-0x80]
  0182d:    	mov    QWORD PTR [rsp-0x50],rax
  01832: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0183b: 00 	movabs rax,0x0
  01845:    	mov    QWORD PTR [rsp-0x28],rax
  0184a: 00 	movabs r13,0x0
  01854:    	call   0xfffe365c
  01859:    	lea    rdi,[rbp-0x8]
  0185d:    	mov    QWORD PTR [rbx],rdi
  01860:    	movq   xmm2,QWORD PTR [rsp]
  01865:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0186b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01871:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01877:    	add    rsp,0x20
  0187b:    	test   rax,rax
  0187e:    	je     0x33f49
  01884:    	mov    QWORD PTR [rbp-0x60],rax
:00099 
:00101 _ = %2.call pl=(%7; 1)               [<INVALID>]
  01888: 01 	sub    DWORD PTR [rip+0x249],0x1        # 0x1ad8
  0188f:    	je     0x33f74
  01895:    	sub    rsp,0x20
  01899:    	movq   QWORD PTR [rsp],xmm2
  0189e:    	movq   QWORD PTR [rsp+0x8],xmm4
  018a4:    	movq   QWORD PTR [rsp+0x10],xmm5
  018aa:    	movq   QWORD PTR [rsp+0x18],xmm6
  018b0:    	mov    rdi,QWORD PTR [rbp-0x38]
  018b4: 31 	movabs rax,0x5631840958d0
  018be:    	call   rax
  018c0:    	mov    r15d,eax
  018c3: 00 	cmp    r15d,DWORD PTR [rip+0x216]        # 0x1ae0
  018ca:    	jne    0x33f96
  018d0:    	mov    eax,DWORD PTR [rip+0xfffffffffffe489f]        # 0xfffe6175
  018d6:    	cmp    DWORD PTR [rip+0x200],eax        # 0x1adc
  018dc:    	jne    0x33f96
  018e2:    	mov    rax,QWORD PTR [rbx]
  018e5:    	lea    rdi,[rsp-0x18]
  018ea:    	mov    QWORD PTR [rdi],rax
  018ed:    	mov    QWORD PTR [rbx],rdi
  018f0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018f9:    	mov    QWORD PTR [rsp-0x38],rcx
  018fe:    	mov    rax,QWORD PTR [rbp-0x38]
  01902:    	mov    QWORD PTR [rsp-0x38],rax
  01907: 00 	mov    rdi,0x1
  0190e:    	mov    rax,QWORD PTR [rbp-0x60]
  01912:    	mov    QWORD PTR [rsp-0x40],rax
  01917: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01920: 00 	movabs rax,0x0
  0192a:    	mov    QWORD PTR [rsp-0x28],rax
  0192f: 00 	movabs r13,0x0
  01939:    	call   0xfffe365c
  0193e:    	lea    rdi,[rbp-0x8]
  01942:    	mov    QWORD PTR [rbx],rdi
  01945:    	movq   xmm2,QWORD PTR [rsp]
  0194a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01950:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01956:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0195c:    	add    rsp,0x20
  01960:    	test   rax,rax
  01963:    	je     0x34002
:00102 
:00104 br =>:00105
  01969:    	jmp    0x3406a
:00105 %7 = nil
  0196e: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00106 ret %7
  01976:    	mov    rax,QWORD PTR [rbp-0x60]
  0197a:    	leave  
  0197b:    	ret    
==> start whole compile: intersect FuncId(69) self_class:Sphere start:[00000] bytecode:0x563184c85400
<== finished compile. elapsed:141.1µs
offset:Pos(124040) code: 7199 bytes  data: 401 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004b: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00052:    	mov    rdi,QWORD PTR [rbp-0x28]
  00056: 00 	test   rdi,0x7
  0005d:    	jne    0x325ac
  00063:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00067:    	jne    0x325ac
:00000 %9 = %1.call org()                   [Ray]
  0006d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00071: 00 	test   rdi,0x7
  00078:    	jne    0x325bb
  0007e:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00082:    	jne    0x325bb
  00088: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4602],0x26        # 0xfffe4691
  0008f:    	jne    0x325bb
  00095:    	mov    esi,DWORD PTR [rip+0x1b88]        # 0x1c23
  0009b:    	cmp    esi,0xffffffff
  0009e:    	je     0x325ca
  000a4:    	cmp    WORD PTR [rdi+0x2],0x3
  000a9:    	jne    0xc2
  000af:    	cmp    esi,0x6
  000b2:    	jge    0xc2
  000b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd:    	jmp    0xce
  000c2: 31 	movabs rax,0x563184053740
  000cc:    	call   rax
  000ce:    	mov    QWORD PTR [rbp-0x70],rax
:00001 
:00003 %10 = @center: Sphere[IvarId(0)]
  000d2:    	mov    rdi,QWORD PTR [rbp-0x28]
  000d6:    	mov    rax,QWORD PTR [rdi+0x10]
  000da:    	mov    QWORD PTR [rbp-0x78],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
  000de:    	mov    rdi,QWORD PTR [rbp-0x70]
  000e2: 00 	test   rdi,0x7
  000e9:    	jne    0x325f3
  000ef:    	cmp    DWORD PTR [rdi+0x4],0x28
  000f3:    	jne    0x325f3
  000f9: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4591],0x26        # 0xfffe4691
  00100:    	jne    0x325f3
  00106:    	mov    rax,QWORD PTR [rbx]
  00109:    	lea    rdi,[rsp-0x18]
  0010e:    	mov    QWORD PTR [rdi],rax
  00111:    	mov    QWORD PTR [rbx],rdi
  00114: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0011d:    	mov    QWORD PTR [rsp-0x38],rcx
  00122:    	mov    rax,QWORD PTR [rbp-0x70]
  00126:    	mov    QWORD PTR [rsp-0x38],rax
  0012b: 00 	mov    rdi,0x1
  00132:    	mov    rax,QWORD PTR [rbp-0x78]
  00136:    	mov    QWORD PTR [rsp-0x40],rax
  0013b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00144: 08 	movabs rax,0x80000003f
  0014e:    	mov    QWORD PTR [rsp-0x28],rax
  00153: 31 	movabs r13,0x563184c81a90
  0015d:    	call   0xfffe5322
  00162:    	lea    rdi,[rbp-0x8]
  00166:    	mov    QWORD PTR [rbx],rdi
  00169: 31 	movabs r13,0x563184c85460
  00173:    	test   rax,rax
  00176:    	je     0xfffe1bb3
  0017c:    	mov    QWORD PTR [rbp-0x40],rax
:00005 
:00007 %9 = %1.call dir()                   [Ray]
  00180:    	mov    rdi,QWORD PTR [rbp-0x30]
  00184: 00 	test   rdi,0x7
  0018b:    	jne    0x32602
  00191:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00195:    	jne    0x32602
  0019b: 26 	cmp    DWORD PTR [rip+0xfffffffffffe44ef],0x26        # 0xfffe4691
  001a2:    	jne    0x32602
  001a8:    	mov    esi,DWORD PTR [rip+0x1a7d]        # 0x1c2b
  001ae:    	cmp    esi,0xffffffff
  001b1:    	je     0x32611
  001b7:    	cmp    WORD PTR [rdi+0x2],0x3
  001bc:    	jne    0x1d5
  001c2:    	cmp    esi,0x6
  001c5:    	jge    0x1d5
  001cb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d0:    	jmp    0x1e1
  001d5: 31 	movabs rax,0x563184053740
  001df:    	call   rax
  001e1:    	mov    QWORD PTR [rbp-0x70],rax
:00008 
:00010 %4 = %3.call vdot(%9; 1)             [Vec]
  001e5:    	mov    rdi,QWORD PTR [rbp-0x40]
  001e9: 00 	test   rdi,0x7
  001f0:    	jne    0x3263a
  001f6:    	cmp    DWORD PTR [rdi+0x4],0x28
  001fa:    	jne    0x3263a
  00200: 26 	cmp    DWORD PTR [rip+0xfffffffffffe448a],0x26        # 0xfffe4691
  00207:    	jne    0x3263a
  0020d:    	mov    rax,QWORD PTR [rbx]
  00210:    	lea    rdi,[rsp-0x18]
  00215:    	mov    QWORD PTR [rdi],rax
  00218:    	mov    QWORD PTR [rbx],rdi
  0021b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00224:    	mov    QWORD PTR [rsp-0x38],rcx
  00229:    	mov    rax,QWORD PTR [rbp-0x40]
  0022d:    	mov    QWORD PTR [rsp-0x38],rax
  00232: 00 	mov    rdi,0x1
  00239:    	mov    rax,QWORD PTR [rbp-0x70]
  0023d:    	mov    QWORD PTR [rsp-0x40],rax
  00242: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0024b: 05 	movabs rax,0x500000041
  00255:    	mov    QWORD PTR [rsp-0x28],rax
  0025a: 31 	movabs r13,0x563184c66dc0
  00264:    	call   0xfffe53b4
  00269:    	lea    rdi,[rbp-0x8]
  0026d:    	mov    QWORD PTR [rbx],rdi
  00270: 31 	movabs r13,0x563184c854c0
  0027a:    	test   rax,rax
  0027d:    	je     0xfffe1bb3
  00283:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %10 = %3
  00287:    	mov    rax,QWORD PTR [rbp-0x40]
  0028b:    	mov    QWORD PTR [rbp-0x78],rax
:00014 %9 = %3.call vdot(%10; 1)            [Vec]
  0028f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00293: 00 	test   rdi,0x7
  0029a:    	jne    0x32649
  002a0:    	cmp    DWORD PTR [rdi+0x4],0x28
  002a4:    	jne    0x32649
  002aa: 26 	cmp    DWORD PTR [rip+0xfffffffffffe43e0],0x26        # 0xfffe4691
  002b1:    	jne    0x32649
  002b7:    	mov    rax,QWORD PTR [rbx]
  002ba:    	lea    rdi,[rsp-0x18]
  002bf:    	mov    QWORD PTR [rdi],rax
  002c2:    	mov    QWORD PTR [rbx],rdi
  002c5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  002ce:    	mov    QWORD PTR [rsp-0x38],rcx
  002d3:    	mov    rax,QWORD PTR [rbp-0x40]
  002d7:    	mov    QWORD PTR [rsp-0x38],rax
  002dc: 00 	mov    rdi,0x1
  002e3:    	mov    rax,QWORD PTR [rbp-0x78]
  002e7:    	mov    QWORD PTR [rsp-0x40],rax
  002ec: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002f5: 05 	movabs rax,0x500000041
  002ff:    	mov    QWORD PTR [rsp-0x28],rax
  00304: 31 	movabs r13,0x563184c66dc0
  0030e:    	call   0xfffe53b4
  00313:    	lea    rdi,[rbp-0x8]
  00317:    	mov    QWORD PTR [rbx],rdi
  0031a: 31 	movabs r13,0x563184c85500
  00324:    	test   rax,rax
  00327:    	je     0xfffe1bb3
  0032d:    	mov    QWORD PTR [rbp-0x70],rax
:00015 
:00017 %10 = @radius: Sphere[IvarId(1)]
  00331:    	mov    rdi,QWORD PTR [rbp-0x28]
  00335:    	mov    rax,QWORD PTR [rdi+0x18]
  00339:    	mov    QWORD PTR [rbp-0x78],rax
:00018 %11 = @radius: Sphere[IvarId(1)]
  0033d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00341:    	mov    rax,QWORD PTR [rdi+0x18]
  00345:    	mov    QWORD PTR [rbp-0x80],rax
:00019 %10 = %10 * %11                      [Float][Float]
  00349:    	mov    rdi,QWORD PTR [rbp-0x78]
  0034d: 00 	test   rdi,0x1
  00354:    	jne    0x32658
  0035a: 00 	test   rdi,0x2
  00361:    	je     0x39d
  00367:    	xorps  xmm2,xmm2
  0036a: 00 	movabs rax,0x8000000000000002
  00374:    	cmp    rdi,rax
  00377:    	je     0x3af
  0037d:    	mov    rax,rdi
  00380:    	sar    rax,0x3f
  00384:    	add    rax,0x2
  00388:    	and    rdi,0xfffffffffffffffc
  0038c:    	or     rdi,rax
  0038f:    	rol    rdi,0x3d
  00393:    	movq   xmm2,rdi
  00398:    	jmp    0x3af
  0039d:    	call   0xfffe1bec
  003a2:    	test   rax,rax
  003a5:    	je     0x32658
  003ab:    	movq   xmm2,xmm0
  003af:    	mov    rdi,QWORD PTR [rbp-0x80]
  003b3: 00 	test   rdi,0x1
  003ba:    	jne    0x32667
  003c0: 00 	test   rdi,0x2
  003c7:    	je     0x403
  003cd:    	xorps  xmm3,xmm3
  003d0: 00 	movabs rax,0x8000000000000002
  003da:    	cmp    rdi,rax
  003dd:    	je     0x415
  003e3:    	mov    rax,rdi
  003e6:    	sar    rax,0x3f
  003ea:    	add    rax,0x2
  003ee:    	and    rdi,0xfffffffffffffffc
  003f2:    	or     rdi,rax
  003f5:    	rol    rdi,0x3d
  003f9:    	movq   xmm3,rdi
  003fe:    	jmp    0x415
  00403:    	call   0xfffe1bec
  00408:    	test   rax,rax
  0040b:    	je     0x32667
  00411:    	movq   xmm3,xmm0
  00415:    	mulsd  xmm2,xmm3
:00020 %5 = %9 - %10                        [Float][Float]
  00419:    	mov    rdi,QWORD PTR [rbp-0x70]
  0041d: 00 	test   rdi,0x1
  00424:    	jne    0x32676
  0042a: 00 	test   rdi,0x2
  00431:    	je     0x46d
  00437:    	xorps  xmm4,xmm4
  0043a: 00 	movabs rax,0x8000000000000002
  00444:    	cmp    rdi,rax
  00447:    	je     0x47f
  0044d:    	mov    rax,rdi
  00450:    	sar    rax,0x3f
  00454:    	add    rax,0x2
  00458:    	and    rdi,0xfffffffffffffffc
  0045c:    	or     rdi,rax
  0045f:    	rol    rdi,0x3d
  00463:    	movq   xmm4,rdi
  00468:    	jmp    0x47f
  0046d:    	call   0xfffe1bec
  00472:    	test   rax,rax
  00475:    	je     0x32676
  0047b:    	movq   xmm4,xmm0
  0047f:    	movq   xmm5,xmm4
  00483:    	subsd  xmm5,xmm2
:00021 %9 = %4 * %4                         [Float][Float]
  00487:    	mov    rdi,QWORD PTR [rbp-0x48]
  0048b: 00 	test   rdi,0x1
  00492:    	jne    0x32692
  00498: 00 	test   rdi,0x2
  0049f:    	je     0x4db
  004a5:    	xorps  xmm6,xmm6
  004a8: 00 	movabs rax,0x8000000000000002
  004b2:    	cmp    rdi,rax
  004b5:    	je     0x4ed
  004bb:    	mov    rax,rdi
  004be:    	sar    rax,0x3f
  004c2:    	add    rax,0x2
  004c6:    	and    rdi,0xfffffffffffffffc
  004ca:    	or     rdi,rax
  004cd:    	rol    rdi,0x3d
  004d1:    	movq   xmm6,rdi
  004d6:    	jmp    0x4ed
  004db:    	call   0xfffe1bec
  004e0:    	test   rax,rax
  004e3:    	je     0x32692
  004e9:    	movq   xmm6,xmm0
  004ed:    	movq   xmm4,xmm6
  004f1:    	mulsd  xmm4,xmm6
:00022 %6 = %9 - %5                         [Float][Float]
  004f5:    	movq   xmm7,xmm4
  004f9:    	subsd  xmm7,xmm5
:00023 %9 = literal[0.0]
  004fd: 00 	movq   xmm4,QWORD PTR [rip+0x1733]        # 0x1c38
  00505: 00 	movabs rax,0x8000000000000002
  0050f:    	mov    QWORD PTR [rbp-0x70],rax
:00024 _%9 = %6 > %9                        [Float][Float]
:00025 condnotbr _%9 =>:00113
  00513:    	ucomisd xmm7,xmm4
  00517:    	jbe    0x33bff
:00026 %9 = %4
:00027 %9 = neg %9                          [Float]
  0051d:    	movq   xmm4,xmm6
  00521: 00 	xorps  xmm4,XMMWORD PTR [rip+0x1720]        # 0x1c48
:00028 %11 = const[Math]                    [Math]
  00528: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe4169]        # 0xfffe4698
  0052f: 00 	cmp    rax,QWORD PTR [rip+0x1732]        # 0x1c68
  00536:    	jne    0x326bb
  0053c: 00 	mov    rax,QWORD PTR [rip+0x1715]        # 0x1c58
  00543:    	mov    QWORD PTR [rbp-0x80],rax
:00029 %12 = %6
:00030 %10 = %11.call sqrt(%12; 1)          [#<Class:Math>]
  00547:    	mov    rdi,QWORD PTR [rbp-0x80]
  0054b: 00 	test   rdi,0x7
  00552:    	jne    0x32743
  00558:    	cmp    DWORD PTR [rdi+0x4],0x21
  0055c:    	jne    0x32743
  00562: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4128],0x26        # 0xfffe4691
  00569:    	jne    0x32743
  0056f:    	sqrtsd xmm2,xmm7
:00031 
:00033 %7 = %9 - %10                        [Float][Float]
  00573:    	movq   xmm3,xmm4
  00577:    	subsd  xmm3,xmm2
:00034 %9 = literal[0.0]
  0057b: 00 	movq   xmm4,QWORD PTR [rip+0x16f5]        # 0x1c78
  00583: 00 	movabs rax,0x8000000000000002
  0058d:    	mov    QWORD PTR [rbp-0x70],rax
:00035 _%9 = %7 > %9                        [Float][Float]
:00036 condnotbr _%9 =>:00112
  00591:    	ucomisd xmm3,xmm4
  00595:    	jbe    0x33abf
:00037 %9 = %2.call t()                     [<INVALID>]
  0059b: 01 	sub    DWORD PTR [rip+0x16de],0x1        # 0x1c80
  005a2:    	je     0x327ca
  005a8:    	sub    rsp,0x30
  005ac:    	movq   QWORD PTR [rsp],xmm2
  005b1:    	movq   QWORD PTR [rsp+0x8],xmm3
  005b7:    	movq   QWORD PTR [rsp+0x10],xmm5
  005bd:    	movq   QWORD PTR [rsp+0x18],xmm6
  005c3:    	movq   QWORD PTR [rsp+0x20],xmm7
  005c9:    	mov    rdi,QWORD PTR [rbp-0x38]
  005cd: 31 	movabs rax,0x5631840958d0
  005d7:    	call   rax
  005d9:    	mov    r15d,eax
  005dc: 00 	cmp    r15d,DWORD PTR [rip+0x16a5]        # 0x1c88
  005e3:    	jne    0x327ec
  005e9:    	mov    eax,DWORD PTR [rip+0xfffffffffffe40a2]        # 0xfffe4691
  005ef:    	cmp    DWORD PTR [rip+0x168f],eax        # 0x1c84
  005f5:    	jne    0x327ec
  005fb:    	mov    rax,QWORD PTR [rbx]
  005fe:    	lea    rdi,[rsp-0x18]
  00603:    	mov    QWORD PTR [rdi],rax
  00606:    	mov    QWORD PTR [rbx],rdi
  00609: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00612:    	mov    QWORD PTR [rsp-0x38],rcx
  00617:    	mov    rax,QWORD PTR [rbp-0x38]
  0061b:    	mov    QWORD PTR [rsp-0x38],rax
  00620: 00 	mov    rdi,0x0
  00627: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00630: 00 	movabs rax,0x0
  0063a:    	mov    QWORD PTR [rsp-0x28],rax
  0063f: 00 	movabs r13,0x0
  00649:    	call   0xfffe1b78
  0064e:    	lea    rdi,[rbp-0x8]
  00652:    	mov    QWORD PTR [rbx],rdi
  00655:    	movq   xmm2,QWORD PTR [rsp]
  0065a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00660:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00666:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0066c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00672:    	add    rsp,0x30
  00676:    	test   rax,rax
  00679:    	je     0x32858
  0067f:    	mov    QWORD PTR [rbp-0x70],rax
:00038 
:00040 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00041 condnotbr _%9 =>:00112
  00683:    	movq   xmm0,xmm3
  00687:    	call   0xfffe1cdf
  0068c:    	mov    QWORD PTR [rbp-0x60],rax
  00690:    	mov    rdi,QWORD PTR [rbp-0x60]
  00694:    	mov    rsi,QWORD PTR [rbp-0x70]
  00698: 00 	test   rdi,0x1
  0069f:    	je     0x32867
  006a5: 00 	test   rsi,0x1
  006ac:    	je     0x32867
  006b2:    	cmp    rdi,rsi
  006b5:    	jge    0x33b4c
:00042 _ = %2.call t=(%7; 1)                [<INVALID>]
  006bb: 01 	sub    DWORD PTR [rip+0x15ca],0x1        # 0x1c8c
  006c2:    	je     0x32905
  006c8:    	sub    rsp,0x30
  006cc:    	movq   QWORD PTR [rsp],xmm2
  006d1:    	movq   QWORD PTR [rsp+0x8],xmm3
  006d7:    	movq   QWORD PTR [rsp+0x10],xmm5
  006dd:    	movq   QWORD PTR [rsp+0x18],xmm6
  006e3:    	movq   QWORD PTR [rsp+0x20],xmm7
  006e9:    	mov    rdi,QWORD PTR [rbp-0x38]
  006ed: 31 	movabs rax,0x5631840958d0
  006f7:    	call   rax
  006f9:    	mov    r15d,eax
  006fc: 00 	cmp    r15d,DWORD PTR [rip+0x1591]        # 0x1c94
  00703:    	jne    0x32927
  00709:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3f82]        # 0xfffe4691
  0070f:    	cmp    DWORD PTR [rip+0x157b],eax        # 0x1c90
  00715:    	jne    0x32927
  0071b:    	mov    rax,QWORD PTR [rbx]
  0071e:    	lea    rdi,[rsp-0x18]
  00723:    	mov    QWORD PTR [rdi],rax
  00726:    	mov    QWORD PTR [rbx],rdi
  00729: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00732:    	mov    QWORD PTR [rsp-0x38],rcx
  00737:    	mov    rax,QWORD PTR [rbp-0x38]
  0073b:    	mov    QWORD PTR [rsp-0x38],rax
  00740: 00 	mov    rdi,0x1
  00747:    	mov    rax,QWORD PTR [rbp-0x60]
  0074b:    	mov    QWORD PTR [rsp-0x40],rax
  00750: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00759: 00 	movabs rax,0x0
  00763:    	mov    QWORD PTR [rsp-0x28],rax
  00768: 00 	movabs r13,0x0
  00772:    	call   0xfffe1b78
  00777:    	lea    rdi,[rbp-0x8]
  0077b:    	mov    QWORD PTR [rbx],rdi
  0077e:    	movq   xmm2,QWORD PTR [rsp]
  00783:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00789:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0078f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00795:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0079b:    	add    rsp,0x30
  0079f:    	test   rax,rax
  007a2:    	je     0x32993
:00043 
:00045 %9 = literal[true]
  007a8: 00 	mov    rax,0x1c
  007af:    	mov    QWORD PTR [rbp-0x70],rax
:00046 _ = %2.call hit=(%9; 1)              [<INVALID>]
  007b3: 01 	sub    DWORD PTR [rip+0x14de],0x1        # 0x1c98
  007ba:    	je     0x329df
  007c0:    	sub    rsp,0x30
  007c4:    	movq   QWORD PTR [rsp],xmm2
  007c9:    	movq   QWORD PTR [rsp+0x8],xmm3
  007cf:    	movq   QWORD PTR [rsp+0x10],xmm5
  007d5:    	movq   QWORD PTR [rsp+0x18],xmm6
  007db:    	movq   QWORD PTR [rsp+0x20],xmm7
  007e1:    	mov    rdi,QWORD PTR [rbp-0x38]
  007e5: 31 	movabs rax,0x5631840958d0
  007ef:    	call   rax
  007f1:    	mov    r15d,eax
  007f4: 00 	cmp    r15d,DWORD PTR [rip+0x14a5]        # 0x1ca0
  007fb:    	jne    0x32a01
  00801:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3e8a]        # 0xfffe4691
  00807:    	cmp    DWORD PTR [rip+0x148f],eax        # 0x1c9c
  0080d:    	jne    0x32a01
  00813:    	mov    rax,QWORD PTR [rbx]
  00816:    	lea    rdi,[rsp-0x18]
  0081b:    	mov    QWORD PTR [rdi],rax
  0081e:    	mov    QWORD PTR [rbx],rdi
  00821: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0082a:    	mov    QWORD PTR [rsp-0x38],rcx
  0082f:    	mov    rax,QWORD PTR [rbp-0x38]
  00833:    	mov    QWORD PTR [rsp-0x38],rax
  00838: 00 	mov    rdi,0x1
  0083f:    	mov    rax,QWORD PTR [rbp-0x70]
  00843:    	mov    QWORD PTR [rsp-0x40],rax
  00848: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00851: 00 	movabs rax,0x0
  0085b:    	mov    QWORD PTR [rsp-0x28],rax
  00860: 00 	movabs r13,0x0
  0086a:    	call   0xfffe1b78
  0086f:    	lea    rdi,[rbp-0x8]
  00873:    	mov    QWORD PTR [rbx],rdi
  00876:    	movq   xmm2,QWORD PTR [rsp]
  0087b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00881:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00887:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0088d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00893:    	add    rsp,0x30
  00897:    	test   rax,rax
  0089a:    	je     0x32a6d
:00047 
:00049 %10 = const[Vec]                     [<INVALID>]
  008a0: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe3df1]        # 0xfffe4698
  008a7: 00 	cmp    rax,QWORD PTR [rip+0x140a]        # 0x1cb8
  008ae:    	jne    0x32a7c
  008b4: 00 	mov    rax,QWORD PTR [rip+0x13ed]        # 0x1ca8
  008bb:    	mov    QWORD PTR [rbp-0x78],rax
:00050 %12 = %1.call org()                  [<INVALID>]
  008bf: 01 	sub    DWORD PTR [rip+0x13fa],0x1        # 0x1cc0
  008c6:    	je     0x32b28
  008cc:    	sub    rsp,0x20
  008d0:    	movq   QWORD PTR [rsp],xmm3
  008d5:    	movq   QWORD PTR [rsp+0x8],xmm5
  008db:    	movq   QWORD PTR [rsp+0x10],xmm6
  008e1:    	movq   QWORD PTR [rsp+0x18],xmm7
  008e7:    	mov    rdi,QWORD PTR [rbp-0x30]
  008eb: 31 	movabs rax,0x5631840958d0
  008f5:    	call   rax
  008f7:    	mov    r15d,eax
  008fa: 00 	cmp    r15d,DWORD PTR [rip+0x13c7]        # 0x1cc8
  00901:    	jne    0x32b4a
  00907:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3d84]        # 0xfffe4691
  0090d:    	cmp    DWORD PTR [rip+0x13b1],eax        # 0x1cc4
  00913:    	jne    0x32b4a
  00919:    	mov    rax,QWORD PTR [rbx]
  0091c:    	lea    rdi,[rsp-0x18]
  00921:    	mov    QWORD PTR [rdi],rax
  00924:    	mov    QWORD PTR [rbx],rdi
  00927: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00930:    	mov    QWORD PTR [rsp-0x38],rcx
  00935:    	mov    rax,QWORD PTR [rbp-0x30]
  00939:    	mov    QWORD PTR [rsp-0x38],rax
  0093e: 00 	mov    rdi,0x0
  00945: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0094e: 00 	movabs rax,0x0
  00958:    	mov    QWORD PTR [rsp-0x28],rax
  0095d: 00 	movabs r13,0x0
  00967:    	call   0xfffe1b78
  0096c:    	lea    rdi,[rbp-0x8]
  00970:    	mov    QWORD PTR [rbx],rdi
  00973:    	movq   xmm3,QWORD PTR [rsp]
  00978:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0097e:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00984:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0098a:    	add    rsp,0x20
  0098e:    	test   rax,rax
  00991:    	je     0x32bb6
  00997: ff 	mov    QWORD PTR [rbp-0x88],rax
:00051 
:00053 %11 = %12.call x()                   [<INVALID>]
  0099e: 01 	sub    DWORD PTR [rip+0x1327],0x1        # 0x1ccc
  009a5:    	je     0x32bee
  009ab:    	sub    rsp,0x20
  009af:    	movq   QWORD PTR [rsp],xmm3
  009b4:    	movq   QWORD PTR [rsp+0x8],xmm5
  009ba:    	movq   QWORD PTR [rsp+0x10],xmm6
  009c0:    	movq   QWORD PTR [rsp+0x18],xmm7
  009c6: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  009cd: 31 	movabs rax,0x5631840958d0
  009d7:    	call   rax
  009d9:    	mov    r15d,eax
  009dc: 00 	cmp    r15d,DWORD PTR [rip+0x12f1]        # 0x1cd4
  009e3:    	jne    0x32c10
  009e9:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3ca2]        # 0xfffe4691
  009ef:    	cmp    DWORD PTR [rip+0x12db],eax        # 0x1cd0
  009f5:    	jne    0x32c10
  009fb:    	mov    rax,QWORD PTR [rbx]
  009fe:    	lea    rdi,[rsp-0x18]
  00a03:    	mov    QWORD PTR [rdi],rax
  00a06:    	mov    QWORD PTR [rbx],rdi
  00a09: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a12:    	mov    QWORD PTR [rsp-0x38],rcx
  00a17: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00a1e:    	mov    QWORD PTR [rsp-0x38],rax
  00a23: 00 	mov    rdi,0x0
  00a2a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a33: 00 	movabs rax,0x0
  00a3d:    	mov    QWORD PTR [rsp-0x28],rax
  00a42: 00 	movabs r13,0x0
  00a4c:    	call   0xfffe1b78
  00a51:    	lea    rdi,[rbp-0x8]
  00a55:    	mov    QWORD PTR [rbx],rdi
  00a58:    	movq   xmm3,QWORD PTR [rsp]
  00a5d:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00a63:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00a69:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00a6f:    	add    rsp,0x20
  00a73:    	test   rax,rax
  00a76:    	je     0x32c7f
  00a7c:    	mov    QWORD PTR [rbp-0x80],rax
:00054 
:00056 %13 = %1.call dir()                  [<INVALID>]
  00a80: 01 	sub    DWORD PTR [rip+0x1251],0x1        # 0x1cd8
  00a87:    	je     0x32cb7
  00a8d:    	sub    rsp,0x20
  00a91:    	movq   QWORD PTR [rsp],xmm3
  00a96:    	movq   QWORD PTR [rsp+0x8],xmm5
  00a9c:    	movq   QWORD PTR [rsp+0x10],xmm6
  00aa2:    	movq   QWORD PTR [rsp+0x18],xmm7
  00aa8:    	mov    rdi,QWORD PTR [rbp-0x30]
  00aac: 31 	movabs rax,0x5631840958d0
  00ab6:    	call   rax
  00ab8:    	mov    r15d,eax
  00abb: 00 	cmp    r15d,DWORD PTR [rip+0x121e]        # 0x1ce0
  00ac2:    	jne    0x32cd9
  00ac8:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3bc3]        # 0xfffe4691
  00ace:    	cmp    DWORD PTR [rip+0x1208],eax        # 0x1cdc
  00ad4:    	jne    0x32cd9
  00ada:    	mov    rax,QWORD PTR [rbx]
  00add:    	lea    rdi,[rsp-0x18]
  00ae2:    	mov    QWORD PTR [rdi],rax
  00ae5:    	mov    QWORD PTR [rbx],rdi
  00ae8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00af1:    	mov    QWORD PTR [rsp-0x38],rcx
  00af6:    	mov    rax,QWORD PTR [rbp-0x30]
  00afa:    	mov    QWORD PTR [rsp-0x38],rax
  00aff: 00 	mov    rdi,0x0
  00b06: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b0f: 00 	movabs rax,0x0
  00b19:    	mov    QWORD PTR [rsp-0x28],rax
  00b1e: 00 	movabs r13,0x0
  00b28:    	call   0xfffe1b78
  00b2d:    	lea    rdi,[rbp-0x8]
  00b31:    	mov    QWORD PTR [rbx],rdi
  00b34:    	movq   xmm3,QWORD PTR [rsp]
  00b39:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b3f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00b45:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b4b:    	add    rsp,0x20
  00b4f:    	test   rax,rax
  00b52:    	je     0x32d45
  00b58: ff 	mov    QWORD PTR [rbp-0x90],rax
:00057 
:00059 %12 = %13.call x()                   [<INVALID>]
  00b5f: 01 	sub    DWORD PTR [rip+0x117e],0x1        # 0x1ce4
  00b66:    	je     0x32d7d
  00b6c:    	sub    rsp,0x20
  00b70:    	movq   QWORD PTR [rsp],xmm3
  00b75:    	movq   QWORD PTR [rsp+0x8],xmm5
  00b7b:    	movq   QWORD PTR [rsp+0x10],xmm6
  00b81:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b87: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00b8e: 31 	movabs rax,0x5631840958d0
  00b98:    	call   rax
  00b9a:    	mov    r15d,eax
  00b9d: 00 	cmp    r15d,DWORD PTR [rip+0x1148]        # 0x1cec
  00ba4:    	jne    0x32d9f
  00baa:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3ae1]        # 0xfffe4691
  00bb0:    	cmp    DWORD PTR [rip+0x1132],eax        # 0x1ce8
  00bb6:    	jne    0x32d9f
  00bbc:    	mov    rax,QWORD PTR [rbx]
  00bbf:    	lea    rdi,[rsp-0x18]
  00bc4:    	mov    QWORD PTR [rdi],rax
  00bc7:    	mov    QWORD PTR [rbx],rdi
  00bca: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00bd3:    	mov    QWORD PTR [rsp-0x38],rcx
  00bd8: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00bdf:    	mov    QWORD PTR [rsp-0x38],rax
  00be4: 00 	mov    rdi,0x0
  00beb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00bf4: 00 	movabs rax,0x0
  00bfe:    	mov    QWORD PTR [rsp-0x28],rax
  00c03: 00 	movabs r13,0x0
  00c0d:    	call   0xfffe1b78
  00c12:    	lea    rdi,[rbp-0x8]
  00c16:    	mov    QWORD PTR [rbx],rdi
  00c19:    	movq   xmm3,QWORD PTR [rsp]
  00c1e:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00c24:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00c2a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c30:    	add    rsp,0x20
  00c34:    	test   rax,rax
  00c37:    	je     0x32e0e
  00c3d: ff 	mov    QWORD PTR [rbp-0x88],rax
:00060 
:00062 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00c44: 01 	sub    DWORD PTR [rip+0x10a5],0x1        # 0x1cf0
  00c4b:    	je     0x32e46
  00c51: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00c58:    	mov    rsi,QWORD PTR [rbp-0x60]
  00c5c:    	sub    rsp,0x20
  00c60:    	movq   QWORD PTR [rsp],xmm3
  00c65:    	movq   QWORD PTR [rsp+0x8],xmm5
  00c6b:    	movq   QWORD PTR [rsp+0x10],xmm6
  00c71:    	movq   QWORD PTR [rsp+0x18],xmm7
  00c77:    	mov    rdx,rdi
  00c7a:    	mov    rcx,rsi
  00c7d:    	mov    rdi,rbx
  00c80:    	mov    rsi,r12
  00c83: 31 	movabs rax,0x563184089e00
  00c8d:    	call   rax
  00c8f:    	movq   xmm3,QWORD PTR [rsp]
  00c94:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00c9a:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00ca0:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ca6:    	add    rsp,0x20
  00caa: 31 	movabs r13,0x563184c857f0
  00cb4:    	test   rax,rax
  00cb7:    	je     0xfffe1bb3
  00cbd: ff 	mov    QWORD PTR [rbp-0x88],rax
:00063 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00cc4: 01 	sub    DWORD PTR [rip+0x1029],0x1        # 0x1cf4
  00ccb:    	je     0x32e91
  00cd1:    	mov    rdi,QWORD PTR [rbp-0x80]
  00cd5: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00cdc:    	sub    rsp,0x20
  00ce0:    	movq   QWORD PTR [rsp],xmm3
  00ce5:    	movq   QWORD PTR [rsp+0x8],xmm5
  00ceb:    	movq   QWORD PTR [rsp+0x10],xmm6
  00cf1:    	movq   QWORD PTR [rsp+0x18],xmm7
  00cf7:    	mov    rdx,rdi
  00cfa:    	mov    rcx,rsi
  00cfd:    	mov    rdi,rbx
  00d00:    	mov    rsi,r12
  00d03: 31 	movabs rax,0x563184087f80
  00d0d:    	call   rax
  00d0f:    	movq   xmm3,QWORD PTR [rsp]
  00d14:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00d1a:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00d20:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00d26:    	add    rsp,0x20
  00d2a: 31 	movabs r13,0x563184c85800
  00d34:    	test   rax,rax
  00d37:    	je     0xfffe1bb3
  00d3d:    	mov    QWORD PTR [rbp-0x80],rax
:00064 %13 = %1.call org()                  [<INVALID>]
  00d41: 01 	sub    DWORD PTR [rip+0xfb0],0x1        # 0x1cf8
  00d48:    	je     0x32edc
  00d4e:    	sub    rsp,0x20
  00d52:    	movq   QWORD PTR [rsp],xmm3
  00d57:    	movq   QWORD PTR [rsp+0x8],xmm5
  00d5d:    	movq   QWORD PTR [rsp+0x10],xmm6
  00d63:    	movq   QWORD PTR [rsp+0x18],xmm7
  00d69:    	mov    rdi,QWORD PTR [rbp-0x30]
  00d6d: 31 	movabs rax,0x5631840958d0
  00d77:    	call   rax
  00d79:    	mov    r15d,eax
  00d7c: 00 	cmp    r15d,DWORD PTR [rip+0xf7d]        # 0x1d00
  00d83:    	jne    0x32efe
  00d89:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3902]        # 0xfffe4691
  00d8f:    	cmp    DWORD PTR [rip+0xf67],eax        # 0x1cfc
  00d95:    	jne    0x32efe
  00d9b:    	mov    rax,QWORD PTR [rbx]
  00d9e:    	lea    rdi,[rsp-0x18]
  00da3:    	mov    QWORD PTR [rdi],rax
  00da6:    	mov    QWORD PTR [rbx],rdi
  00da9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00db2:    	mov    QWORD PTR [rsp-0x38],rcx
  00db7:    	mov    rax,QWORD PTR [rbp-0x30]
  00dbb:    	mov    QWORD PTR [rsp-0x38],rax
  00dc0: 00 	mov    rdi,0x0
  00dc7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00dd0: 00 	movabs rax,0x0
  00dda:    	mov    QWORD PTR [rsp-0x28],rax
  00ddf: 00 	movabs r13,0x0
  00de9:    	call   0xfffe1b78
  00dee:    	lea    rdi,[rbp-0x8]
  00df2:    	mov    QWORD PTR [rbx],rdi
  00df5:    	movq   xmm3,QWORD PTR [rsp]
  00dfa:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00e00:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00e06:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00e0c:    	add    rsp,0x20
  00e10:    	test   rax,rax
  00e13:    	je     0x32f6a
  00e19: ff 	mov    QWORD PTR [rbp-0x90],rax
:00065 
:00067 %12 = %13.call y()                   [<INVALID>]
  00e20: 01 	sub    DWORD PTR [rip+0xedd],0x1        # 0x1d04
  00e27:    	je     0x32fa2
  00e2d:    	sub    rsp,0x20
  00e31:    	movq   QWORD PTR [rsp],xmm3
  00e36:    	movq   QWORD PTR [rsp+0x8],xmm5
  00e3c:    	movq   QWORD PTR [rsp+0x10],xmm6
  00e42:    	movq   QWORD PTR [rsp+0x18],xmm7
  00e48: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00e4f: 31 	movabs rax,0x5631840958d0
  00e59:    	call   rax
  00e5b:    	mov    r15d,eax
  00e5e: 00 	cmp    r15d,DWORD PTR [rip+0xea7]        # 0x1d0c
  00e65:    	jne    0x32fc4
  00e6b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3820]        # 0xfffe4691
  00e71:    	cmp    DWORD PTR [rip+0xe91],eax        # 0x1d08
  00e77:    	jne    0x32fc4
  00e7d:    	mov    rax,QWORD PTR [rbx]
  00e80:    	lea    rdi,[rsp-0x18]
  00e85:    	mov    QWORD PTR [rdi],rax
  00e88:    	mov    QWORD PTR [rbx],rdi
  00e8b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00e94:    	mov    QWORD PTR [rsp-0x38],rcx
  00e99: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00ea0:    	mov    QWORD PTR [rsp-0x38],rax
  00ea5: 00 	mov    rdi,0x0
  00eac: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00eb5: 00 	movabs rax,0x0
  00ebf:    	mov    QWORD PTR [rsp-0x28],rax
  00ec4: 00 	movabs r13,0x0
  00ece:    	call   0xfffe1b78
  00ed3:    	lea    rdi,[rbp-0x8]
  00ed7:    	mov    QWORD PTR [rbx],rdi
  00eda:    	movq   xmm3,QWORD PTR [rsp]
  00edf:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00ee5:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00eeb:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ef1:    	add    rsp,0x20
  00ef5:    	test   rax,rax
  00ef8:    	je     0x33033
  00efe: ff 	mov    QWORD PTR [rbp-0x88],rax
:00068 
:00070 %14 = %1.call dir()                  [<INVALID>]
  00f05: 01 	sub    DWORD PTR [rip+0xe04],0x1        # 0x1d10
  00f0c:    	je     0x3306b
  00f12:    	sub    rsp,0x20
  00f16:    	movq   QWORD PTR [rsp],xmm3
  00f1b:    	movq   QWORD PTR [rsp+0x8],xmm5
  00f21:    	movq   QWORD PTR [rsp+0x10],xmm6
  00f27:    	movq   QWORD PTR [rsp+0x18],xmm7
  00f2d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f31: 31 	movabs rax,0x5631840958d0
  00f3b:    	call   rax
  00f3d:    	mov    r15d,eax
  00f40: 00 	cmp    r15d,DWORD PTR [rip+0xdd1]        # 0x1d18
  00f47:    	jne    0x3308d
  00f4d:    	mov    eax,DWORD PTR [rip+0xfffffffffffe373e]        # 0xfffe4691
  00f53:    	cmp    DWORD PTR [rip+0xdbb],eax        # 0x1d14
  00f59:    	jne    0x3308d
  00f5f:    	mov    rax,QWORD PTR [rbx]
  00f62:    	lea    rdi,[rsp-0x18]
  00f67:    	mov    QWORD PTR [rdi],rax
  00f6a:    	mov    QWORD PTR [rbx],rdi
  00f6d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f76:    	mov    QWORD PTR [rsp-0x38],rcx
  00f7b:    	mov    rax,QWORD PTR [rbp-0x30]
  00f7f:    	mov    QWORD PTR [rsp-0x38],rax
  00f84: 00 	mov    rdi,0x0
  00f8b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f94: 00 	movabs rax,0x0
  00f9e:    	mov    QWORD PTR [rsp-0x28],rax
  00fa3: 00 	movabs r13,0x0
  00fad:    	call   0xfffe1b78
  00fb2:    	lea    rdi,[rbp-0x8]
  00fb6:    	mov    QWORD PTR [rbx],rdi
  00fb9:    	movq   xmm3,QWORD PTR [rsp]
  00fbe:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00fc4:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00fca:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00fd0:    	add    rsp,0x20
  00fd4:    	test   rax,rax
  00fd7:    	je     0x330f9
  00fdd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00071 
:00073 %13 = %14.call y()                   [<INVALID>]
  00fe4: 01 	sub    DWORD PTR [rip+0xd31],0x1        # 0x1d1c
  00feb:    	je     0x33131
  00ff1:    	sub    rsp,0x20
  00ff5:    	movq   QWORD PTR [rsp],xmm3
  00ffa:    	movq   QWORD PTR [rsp+0x8],xmm5
  01000:    	movq   QWORD PTR [rsp+0x10],xmm6
  01006:    	movq   QWORD PTR [rsp+0x18],xmm7
  0100c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01013: 31 	movabs rax,0x5631840958d0
  0101d:    	call   rax
  0101f:    	mov    r15d,eax
  01022: 00 	cmp    r15d,DWORD PTR [rip+0xcfb]        # 0x1d24
  01029:    	jne    0x33153
  0102f:    	mov    eax,DWORD PTR [rip+0xfffffffffffe365c]        # 0xfffe4691
  01035:    	cmp    DWORD PTR [rip+0xce5],eax        # 0x1d20
  0103b:    	jne    0x33153
  01041:    	mov    rax,QWORD PTR [rbx]
  01044:    	lea    rdi,[rsp-0x18]
  01049:    	mov    QWORD PTR [rdi],rax
  0104c:    	mov    QWORD PTR [rbx],rdi
  0104f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01058:    	mov    QWORD PTR [rsp-0x38],rcx
  0105d: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01064:    	mov    QWORD PTR [rsp-0x38],rax
  01069: 00 	mov    rdi,0x0
  01070: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01079: 00 	movabs rax,0x0
  01083:    	mov    QWORD PTR [rsp-0x28],rax
  01088: 00 	movabs r13,0x0
  01092:    	call   0xfffe1b78
  01097:    	lea    rdi,[rbp-0x8]
  0109b:    	mov    QWORD PTR [rbx],rdi
  0109e:    	movq   xmm3,QWORD PTR [rsp]
  010a3:    	movq   xmm5,QWORD PTR [rsp+0x8]
  010a9:    	movq   xmm6,QWORD PTR [rsp+0x10]
  010af:    	movq   xmm7,QWORD PTR [rsp+0x18]
  010b5:    	add    rsp,0x20
  010b9:    	test   rax,rax
  010bc:    	je     0x331c2
  010c2: ff 	mov    QWORD PTR [rbp-0x90],rax
:00074 
:00076 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  010c9: 01 	sub    DWORD PTR [rip+0xc58],0x1        # 0x1d28
  010d0:    	je     0x331fa
  010d6: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  010dd:    	mov    rsi,QWORD PTR [rbp-0x60]
  010e1:    	sub    rsp,0x20
  010e5:    	movq   QWORD PTR [rsp],xmm3
  010ea:    	movq   QWORD PTR [rsp+0x8],xmm5
  010f0:    	movq   QWORD PTR [rsp+0x10],xmm6
  010f6:    	movq   QWORD PTR [rsp+0x18],xmm7
  010fc:    	mov    rdx,rdi
  010ff:    	mov    rcx,rsi
  01102:    	mov    rdi,rbx
  01105:    	mov    rsi,r12
  01108: 31 	movabs rax,0x563184089e00
  01112:    	call   rax
  01114:    	movq   xmm3,QWORD PTR [rsp]
  01119:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0111f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01125:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0112b:    	add    rsp,0x20
  0112f: 31 	movabs r13,0x563184c858d0
  01139:    	test   rax,rax
  0113c:    	je     0xfffe1bb3
  01142: ff 	mov    QWORD PTR [rbp-0x90],rax
:00077 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  01149: 01 	sub    DWORD PTR [rip+0xbdc],0x1        # 0x1d2c
  01150:    	je     0x33245
  01156: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0115d: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  01164:    	sub    rsp,0x20
  01168:    	movq   QWORD PTR [rsp],xmm3
  0116d:    	movq   QWORD PTR [rsp+0x8],xmm5
  01173:    	movq   QWORD PTR [rsp+0x10],xmm6
  01179:    	movq   QWORD PTR [rsp+0x18],xmm7
  0117f:    	mov    rdx,rdi
  01182:    	mov    rcx,rsi
  01185:    	mov    rdi,rbx
  01188:    	mov    rsi,r12
  0118b: 31 	movabs rax,0x563184087f80
  01195:    	call   rax
  01197:    	movq   xmm3,QWORD PTR [rsp]
  0119c:    	movq   xmm5,QWORD PTR [rsp+0x8]
  011a2:    	movq   xmm6,QWORD PTR [rsp+0x10]
  011a8:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011ae:    	add    rsp,0x20
  011b2: 31 	movabs r13,0x563184c858e0
  011bc:    	test   rax,rax
  011bf:    	je     0xfffe1bb3
  011c5: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 %14 = %1.call org()                  [<INVALID>]
  011cc: 01 	sub    DWORD PTR [rip+0xb5d],0x1        # 0x1d30
  011d3:    	je     0x33290
  011d9:    	sub    rsp,0x20
  011dd:    	movq   QWORD PTR [rsp],xmm3
  011e2:    	movq   QWORD PTR [rsp+0x8],xmm5
  011e8:    	movq   QWORD PTR [rsp+0x10],xmm6
  011ee:    	movq   QWORD PTR [rsp+0x18],xmm7
  011f4:    	mov    rdi,QWORD PTR [rbp-0x30]
  011f8: 31 	movabs rax,0x5631840958d0
  01202:    	call   rax
  01204:    	mov    r15d,eax
  01207: 00 	cmp    r15d,DWORD PTR [rip+0xb2a]        # 0x1d38
  0120e:    	jne    0x332b2
  01214:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3477]        # 0xfffe4691
  0121a:    	cmp    DWORD PTR [rip+0xb14],eax        # 0x1d34
  01220:    	jne    0x332b2
  01226:    	mov    rax,QWORD PTR [rbx]
  01229:    	lea    rdi,[rsp-0x18]
  0122e:    	mov    QWORD PTR [rdi],rax
  01231:    	mov    QWORD PTR [rbx],rdi
  01234: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0123d:    	mov    QWORD PTR [rsp-0x38],rcx
  01242:    	mov    rax,QWORD PTR [rbp-0x30]
  01246:    	mov    QWORD PTR [rsp-0x38],rax
  0124b: 00 	mov    rdi,0x0
  01252: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0125b: 00 	movabs rax,0x0
  01265:    	mov    QWORD PTR [rsp-0x28],rax
  0126a: 00 	movabs r13,0x0
  01274:    	call   0xfffe1b78
  01279:    	lea    rdi,[rbp-0x8]
  0127d:    	mov    QWORD PTR [rbx],rdi
  01280:    	movq   xmm3,QWORD PTR [rsp]
  01285:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0128b:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01291:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01297:    	add    rsp,0x20
  0129b:    	test   rax,rax
  0129e:    	je     0x3331e
  012a4: ff 	mov    QWORD PTR [rbp-0x98],rax
:00079 
:00081 %13 = %14.call z()                   [<INVALID>]
  012ab: 01 	sub    DWORD PTR [rip+0xa8a],0x1        # 0x1d3c
  012b2:    	je     0x33356
  012b8:    	sub    rsp,0x20
  012bc:    	movq   QWORD PTR [rsp],xmm3
  012c1:    	movq   QWORD PTR [rsp+0x8],xmm5
  012c7:    	movq   QWORD PTR [rsp+0x10],xmm6
  012cd:    	movq   QWORD PTR [rsp+0x18],xmm7
  012d3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  012da: 31 	movabs rax,0x5631840958d0
  012e4:    	call   rax
  012e6:    	mov    r15d,eax
  012e9: 00 	cmp    r15d,DWORD PTR [rip+0xa54]        # 0x1d44
  012f0:    	jne    0x33378
  012f6:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3395]        # 0xfffe4691
  012fc:    	cmp    DWORD PTR [rip+0xa3e],eax        # 0x1d40
  01302:    	jne    0x33378
  01308:    	mov    rax,QWORD PTR [rbx]
  0130b:    	lea    rdi,[rsp-0x18]
  01310:    	mov    QWORD PTR [rdi],rax
  01313:    	mov    QWORD PTR [rbx],rdi
  01316: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0131f:    	mov    QWORD PTR [rsp-0x38],rcx
  01324: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0132b:    	mov    QWORD PTR [rsp-0x38],rax
  01330: 00 	mov    rdi,0x0
  01337: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01340: 00 	movabs rax,0x0
  0134a:    	mov    QWORD PTR [rsp-0x28],rax
  0134f: 00 	movabs r13,0x0
  01359:    	call   0xfffe1b78
  0135e:    	lea    rdi,[rbp-0x8]
  01362:    	mov    QWORD PTR [rbx],rdi
  01365:    	movq   xmm3,QWORD PTR [rsp]
  0136a:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01370:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01376:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0137c:    	add    rsp,0x20
  01380:    	test   rax,rax
  01383:    	je     0x333e7
  01389: ff 	mov    QWORD PTR [rbp-0x90],rax
:00082 
:00084 %15 = %1.call dir()                  [<INVALID>]
  01390: 01 	sub    DWORD PTR [rip+0x9b1],0x1        # 0x1d48
  01397:    	je     0x3341f
  0139d:    	sub    rsp,0x20
  013a1:    	movq   QWORD PTR [rsp],xmm3
  013a6:    	movq   QWORD PTR [rsp+0x8],xmm5
  013ac:    	movq   QWORD PTR [rsp+0x10],xmm6
  013b2:    	movq   QWORD PTR [rsp+0x18],xmm7
  013b8:    	mov    rdi,QWORD PTR [rbp-0x30]
  013bc: 31 	movabs rax,0x5631840958d0
  013c6:    	call   rax
  013c8:    	mov    r15d,eax
  013cb: 00 	cmp    r15d,DWORD PTR [rip+0x97e]        # 0x1d50
  013d2:    	jne    0x33441
  013d8:    	mov    eax,DWORD PTR [rip+0xfffffffffffe32b3]        # 0xfffe4691
  013de:    	cmp    DWORD PTR [rip+0x968],eax        # 0x1d4c
  013e4:    	jne    0x33441
  013ea:    	mov    rax,QWORD PTR [rbx]
  013ed:    	lea    rdi,[rsp-0x18]
  013f2:    	mov    QWORD PTR [rdi],rax
  013f5:    	mov    QWORD PTR [rbx],rdi
  013f8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01401:    	mov    QWORD PTR [rsp-0x38],rcx
  01406:    	mov    rax,QWORD PTR [rbp-0x30]
  0140a:    	mov    QWORD PTR [rsp-0x38],rax
  0140f: 00 	mov    rdi,0x0
  01416: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0141f: 00 	movabs rax,0x0
  01429:    	mov    QWORD PTR [rsp-0x28],rax
  0142e: 00 	movabs r13,0x0
  01438:    	call   0xfffe1b78
  0143d:    	lea    rdi,[rbp-0x8]
  01441:    	mov    QWORD PTR [rbx],rdi
  01444:    	movq   xmm3,QWORD PTR [rsp]
  01449:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0144f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01455:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0145b:    	add    rsp,0x20
  0145f:    	test   rax,rax
  01462:    	je     0x334ad
  01468: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00085 
:00087 %14 = %15.call z()                   [<INVALID>]
  0146f: 01 	sub    DWORD PTR [rip+0x8de],0x1        # 0x1d54
  01476:    	je     0x334e5
  0147c:    	sub    rsp,0x20
  01480:    	movq   QWORD PTR [rsp],xmm3
  01485:    	movq   QWORD PTR [rsp+0x8],xmm5
  0148b:    	movq   QWORD PTR [rsp+0x10],xmm6
  01491:    	movq   QWORD PTR [rsp+0x18],xmm7
  01497: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0149e: 31 	movabs rax,0x5631840958d0
  014a8:    	call   rax
  014aa:    	mov    r15d,eax
  014ad: 00 	cmp    r15d,DWORD PTR [rip+0x8a8]        # 0x1d5c
  014b4:    	jne    0x33507
  014ba:    	mov    eax,DWORD PTR [rip+0xfffffffffffe31d1]        # 0xfffe4691
  014c0:    	cmp    DWORD PTR [rip+0x892],eax        # 0x1d58
  014c6:    	jne    0x33507
  014cc:    	mov    rax,QWORD PTR [rbx]
  014cf:    	lea    rdi,[rsp-0x18]
  014d4:    	mov    QWORD PTR [rdi],rax
  014d7:    	mov    QWORD PTR [rbx],rdi
  014da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014e3:    	mov    QWORD PTR [rsp-0x38],rcx
  014e8: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  014ef:    	mov    QWORD PTR [rsp-0x38],rax
  014f4: 00 	mov    rdi,0x0
  014fb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01504: 00 	movabs rax,0x0
  0150e:    	mov    QWORD PTR [rsp-0x28],rax
  01513: 00 	movabs r13,0x0
  0151d:    	call   0xfffe1b78
  01522:    	lea    rdi,[rbp-0x8]
  01526:    	mov    QWORD PTR [rbx],rdi
  01529:    	movq   xmm3,QWORD PTR [rsp]
  0152e:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01534:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0153a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01540:    	add    rsp,0x20
  01544:    	test   rax,rax
  01547:    	je     0x33576
  0154d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 
:00090 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01554: 01 	sub    DWORD PTR [rip+0x805],0x1        # 0x1d60
  0155b:    	je     0x335ae
  01561: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01568:    	mov    rsi,QWORD PTR [rbp-0x60]
  0156c:    	sub    rsp,0x20
  01570:    	movq   QWORD PTR [rsp],xmm3
  01575:    	movq   QWORD PTR [rsp+0x8],xmm5
  0157b:    	movq   QWORD PTR [rsp+0x10],xmm6
  01581:    	movq   QWORD PTR [rsp+0x18],xmm7
  01587:    	mov    rdx,rdi
  0158a:    	mov    rcx,rsi
  0158d:    	mov    rdi,rbx
  01590:    	mov    rsi,r12
  01593: 31 	movabs rax,0x563184089e00
  0159d:    	call   rax
  0159f:    	movq   xmm3,QWORD PTR [rsp]
  015a4:    	movq   xmm5,QWORD PTR [rsp+0x8]
  015aa:    	movq   xmm6,QWORD PTR [rsp+0x10]
  015b0:    	movq   xmm7,QWORD PTR [rsp+0x18]
  015b6:    	add    rsp,0x20
  015ba: 31 	movabs r13,0x563184c859b0
  015c4:    	test   rax,rax
  015c7:    	je     0xfffe1bb3
  015cd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  015d4: 01 	sub    DWORD PTR [rip+0x789],0x1        # 0x1d64
  015db:    	je     0x335f9
  015e1: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  015e8: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  015ef:    	sub    rsp,0x20
  015f3:    	movq   QWORD PTR [rsp],xmm3
  015f8:    	movq   QWORD PTR [rsp+0x8],xmm5
  015fe:    	movq   QWORD PTR [rsp+0x10],xmm6
  01604:    	movq   QWORD PTR [rsp+0x18],xmm7
  0160a:    	mov    rdx,rdi
  0160d:    	mov    rcx,rsi
  01610:    	mov    rdi,rbx
  01613:    	mov    rsi,r12
  01616: 31 	movabs rax,0x563184087f80
  01620:    	call   rax
  01622:    	movq   xmm3,QWORD PTR [rsp]
  01627:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0162d:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01633:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01639:    	add    rsp,0x20
  0163d: 31 	movabs r13,0x563184c859c0
  01647:    	test   rax,rax
  0164a:    	je     0xfffe1bb3
  01650: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 %9 = %10.call new(%11; 3)            [<INVALID>]
  01657: 01 	sub    DWORD PTR [rip+0x70a],0x1        # 0x1d68
  0165e:    	je     0x33644
  01664:    	sub    rsp,0x20
  01668:    	movq   QWORD PTR [rsp],xmm3
  0166d:    	movq   QWORD PTR [rsp+0x8],xmm5
  01673:    	movq   QWORD PTR [rsp+0x10],xmm6
  01679:    	movq   QWORD PTR [rsp+0x18],xmm7
  0167f:    	mov    rdi,QWORD PTR [rbp-0x78]
  01683: 31 	movabs rax,0x5631840958d0
  0168d:    	call   rax
  0168f:    	mov    r15d,eax
  01692: 00 	cmp    r15d,DWORD PTR [rip+0x6d7]        # 0x1d70
  01699:    	jne    0x33666
  0169f:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2fec]        # 0xfffe4691
  016a5:    	cmp    DWORD PTR [rip+0x6c1],eax        # 0x1d6c
  016ab:    	jne    0x33666
  016b1:    	mov    rax,QWORD PTR [rbx]
  016b4:    	lea    rdi,[rsp-0x18]
  016b9:    	mov    QWORD PTR [rdi],rax
  016bc:    	mov    QWORD PTR [rbx],rdi
  016bf: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016c8:    	mov    QWORD PTR [rsp-0x38],rcx
  016cd:    	mov    rax,QWORD PTR [rbp-0x78]
  016d1:    	mov    QWORD PTR [rsp-0x38],rax
  016d6: 00 	mov    rdi,0x3
  016dd:    	mov    rax,QWORD PTR [rbp-0x80]
  016e1:    	mov    QWORD PTR [rsp-0x40],rax
  016e6: ff 	mov    rax,QWORD PTR [rbp-0x88]
  016ed:    	mov    QWORD PTR [rsp-0x48],rax
  016f2: ff 	mov    rax,QWORD PTR [rbp-0x90]
  016f9:    	mov    QWORD PTR [rsp-0x50],rax
  016fe: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01707: 00 	movabs rax,0x0
  01711:    	mov    QWORD PTR [rsp-0x28],rax
  01716: 00 	movabs r13,0x0
  01720:    	call   0xfffe1b78
  01725:    	lea    rdi,[rbp-0x8]
  01729:    	mov    QWORD PTR [rbx],rdi
  0172c:    	movq   xmm3,QWORD PTR [rsp]
  01731:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01737:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0173d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01743:    	add    rsp,0x20
  01747:    	test   rax,rax
  0174a:    	je     0x336d2
  01750:    	mov    QWORD PTR [rbp-0x70],rax
:00093 
:00095 _ = %2.call pl=(%9; 1)               [<INVALID>]
  01754: 01 	sub    DWORD PTR [rip+0x619],0x1        # 0x1d74
  0175b:    	je     0x3370a
  01761:    	sub    rsp,0x20
  01765:    	movq   QWORD PTR [rsp],xmm3
  0176a:    	movq   QWORD PTR [rsp+0x8],xmm5
  01770:    	movq   QWORD PTR [rsp+0x10],xmm6
  01776:    	movq   QWORD PTR [rsp+0x18],xmm7
  0177c:    	mov    rdi,QWORD PTR [rbp-0x38]
  01780: 31 	movabs rax,0x5631840958d0
  0178a:    	call   rax
  0178c:    	mov    r15d,eax
  0178f: 00 	cmp    r15d,DWORD PTR [rip+0x5e6]        # 0x1d7c
  01796:    	jne    0x3372c
  0179c:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2eef]        # 0xfffe4691
  017a2:    	cmp    DWORD PTR [rip+0x5d0],eax        # 0x1d78
  017a8:    	jne    0x3372c
  017ae:    	mov    rax,QWORD PTR [rbx]
  017b1:    	lea    rdi,[rsp-0x18]
  017b6:    	mov    QWORD PTR [rdi],rax
  017b9:    	mov    QWORD PTR [rbx],rdi
  017bc: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017c5:    	mov    QWORD PTR [rsp-0x38],rcx
  017ca:    	mov    rax,QWORD PTR [rbp-0x38]
  017ce:    	mov    QWORD PTR [rsp-0x38],rax
  017d3: 00 	mov    rdi,0x1
  017da:    	mov    rax,QWORD PTR [rbp-0x70]
  017de:    	mov    QWORD PTR [rsp-0x40],rax
  017e3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017ec: 00 	movabs rax,0x0
  017f6:    	mov    QWORD PTR [rsp-0x28],rax
  017fb: 00 	movabs r13,0x0
  01805:    	call   0xfffe1b78
  0180a:    	lea    rdi,[rbp-0x8]
  0180e:    	mov    QWORD PTR [rbx],rdi
  01811:    	movq   xmm3,QWORD PTR [rsp]
  01816:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0181c:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01822:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01828:    	add    rsp,0x20
  0182c:    	test   rax,rax
  0182f:    	je     0x33798
:00096 
:00098 %9 = %2.call pl()                    [<INVALID>]
  01835: 01 	sub    DWORD PTR [rip+0x544],0x1        # 0x1d80
  0183c:    	je     0x337d0
  01842:    	sub    rsp,0x20
  01846:    	movq   QWORD PTR [rsp],xmm3
  0184b:    	movq   QWORD PTR [rsp+0x8],xmm5
  01851:    	movq   QWORD PTR [rsp+0x10],xmm6
  01857:    	movq   QWORD PTR [rsp+0x18],xmm7
  0185d:    	mov    rdi,QWORD PTR [rbp-0x38]
  01861: 31 	movabs rax,0x5631840958d0
  0186b:    	call   rax
  0186d:    	mov    r15d,eax
  01870: 00 	cmp    r15d,DWORD PTR [rip+0x511]        # 0x1d88
  01877:    	jne    0x337f2
  0187d:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2e0e]        # 0xfffe4691
  01883:    	cmp    DWORD PTR [rip+0x4fb],eax        # 0x1d84
  01889:    	jne    0x337f2
  0188f:    	mov    rax,QWORD PTR [rbx]
  01892:    	lea    rdi,[rsp-0x18]
  01897:    	mov    QWORD PTR [rdi],rax
  0189a:    	mov    QWORD PTR [rbx],rdi
  0189d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018a6:    	mov    QWORD PTR [rsp-0x38],rcx
  018ab:    	mov    rax,QWORD PTR [rbp-0x38]
  018af:    	mov    QWORD PTR [rsp-0x38],rax
  018b4: 00 	mov    rdi,0x0
  018bb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018c4: 00 	movabs rax,0x0
  018ce:    	mov    QWORD PTR [rsp-0x28],rax
  018d3: 00 	movabs r13,0x0
  018dd:    	call   0xfffe1b78
  018e2:    	lea    rdi,[rbp-0x8]
  018e6:    	mov    QWORD PTR [rbx],rdi
  018e9:    	movq   xmm3,QWORD PTR [rsp]
  018ee:    	movq   xmm5,QWORD PTR [rsp+0x8]
  018f4:    	movq   xmm6,QWORD PTR [rsp+0x10]
  018fa:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01900:    	add    rsp,0x20
  01904:    	test   rax,rax
  01907:    	je     0x3385e
  0190d:    	mov    QWORD PTR [rbp-0x70],rax
:00099 
:00101 %10 = @center: <INVALID>[IvarId(0)]
  01911:    	mov    rdi,QWORD PTR [rbp-0x28]
  01915:    	sub    rsp,0x20
  01919:    	movq   QWORD PTR [rsp],xmm3
  0191e:    	movq   QWORD PTR [rsp+0x8],xmm5
  01924:    	movq   QWORD PTR [rsp+0x10],xmm6
  0192a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01930: 00 	mov    rsi,0x85
  01937:    	mov    rdx,r12
  0193a: 31 	movabs rax,0x5631840b8770
  01944:    	call   rax
  01946:    	movq   xmm3,QWORD PTR [rsp]
  0194b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01951:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01957:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0195d:    	add    rsp,0x20
  01961:    	mov    QWORD PTR [rbp-0x78],rax
:00102 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  01965: 01 	sub    DWORD PTR [rip+0x420],0x1        # 0x1d8c
  0196c:    	je     0x33896
  01972:    	sub    rsp,0x20
  01976:    	movq   QWORD PTR [rsp],xmm3
  0197b:    	movq   QWORD PTR [rsp+0x8],xmm5
  01981:    	movq   QWORD PTR [rsp+0x10],xmm6
  01987:    	movq   QWORD PTR [rsp+0x18],xmm7
  0198d:    	mov    rdi,QWORD PTR [rbp-0x70]
  01991: 31 	movabs rax,0x5631840958d0
  0199b:    	call   rax
  0199d:    	mov    r15d,eax
  019a0: 00 	cmp    r15d,DWORD PTR [rip+0x3ed]        # 0x1d94
  019a7:    	jne    0x338b8
  019ad:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2cde]        # 0xfffe4691
  019b3:    	cmp    DWORD PTR [rip+0x3d7],eax        # 0x1d90
  019b9:    	jne    0x338b8
  019bf:    	mov    rax,QWORD PTR [rbx]
  019c2:    	lea    rdi,[rsp-0x18]
  019c7:    	mov    QWORD PTR [rdi],rax
  019ca:    	mov    QWORD PTR [rbx],rdi
  019cd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019d6:    	mov    QWORD PTR [rsp-0x38],rcx
  019db:    	mov    rax,QWORD PTR [rbp-0x70]
  019df:    	mov    QWORD PTR [rsp-0x38],rax
  019e4: 00 	mov    rdi,0x1
  019eb:    	mov    rax,QWORD PTR [rbp-0x78]
  019ef:    	mov    QWORD PTR [rsp-0x40],rax
  019f4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019fd: 00 	movabs rax,0x0
  01a07:    	mov    QWORD PTR [rsp-0x28],rax
  01a0c: 00 	movabs r13,0x0
  01a16:    	call   0xfffe1b78
  01a1b:    	lea    rdi,[rbp-0x8]
  01a1f:    	mov    QWORD PTR [rbx],rdi
  01a22:    	movq   xmm3,QWORD PTR [rsp]
  01a27:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01a2d:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01a33:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a39:    	add    rsp,0x20
  01a3d:    	test   rax,rax
  01a40:    	je     0x33924
  01a46:    	mov    QWORD PTR [rbp-0x68],rax
:00103 
:00105 %9 = %8.call vnormalize()            [<INVALID>]
  01a4a: 01 	sub    DWORD PTR [rip+0x347],0x1        # 0x1d98
  01a51:    	je     0x3395c
  01a57:    	sub    rsp,0x20
  01a5b:    	movq   QWORD PTR [rsp],xmm3
  01a60:    	movq   QWORD PTR [rsp+0x8],xmm5
  01a66:    	movq   QWORD PTR [rsp+0x10],xmm6
  01a6c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01a72:    	mov    rdi,QWORD PTR [rbp-0x68]
  01a76: 31 	movabs rax,0x5631840958d0
  01a80:    	call   rax
  01a82:    	mov    r15d,eax
  01a85: 00 	cmp    r15d,DWORD PTR [rip+0x314]        # 0x1da0
  01a8c:    	jne    0x3397e
  01a92:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2bf9]        # 0xfffe4691
  01a98:    	cmp    DWORD PTR [rip+0x2fe],eax        # 0x1d9c
  01a9e:    	jne    0x3397e
  01aa4:    	mov    rax,QWORD PTR [rbx]
  01aa7:    	lea    rdi,[rsp-0x18]
  01aac:    	mov    QWORD PTR [rdi],rax
  01aaf:    	mov    QWORD PTR [rbx],rdi
  01ab2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01abb:    	mov    QWORD PTR [rsp-0x38],rcx
  01ac0:    	mov    rax,QWORD PTR [rbp-0x68]
  01ac4:    	mov    QWORD PTR [rsp-0x38],rax
  01ac9: 00 	mov    rdi,0x0
  01ad0: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01ad9: 00 	movabs rax,0x0
  01ae3:    	mov    QWORD PTR [rsp-0x28],rax
  01ae8: 00 	movabs r13,0x0
  01af2:    	call   0xfffe1b78
  01af7:    	lea    rdi,[rbp-0x8]
  01afb:    	mov    QWORD PTR [rbx],rdi
  01afe:    	movq   xmm3,QWORD PTR [rsp]
  01b03:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01b09:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01b0f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b15:    	add    rsp,0x20
  01b19:    	test   rax,rax
  01b1c:    	je     0x339ea
  01b22:    	mov    QWORD PTR [rbp-0x70],rax
:00106 
:00108 _ = %2.call n=(%9; 1)                [<INVALID>]
  01b26: 01 	sub    DWORD PTR [rip+0x277],0x1        # 0x1da4
  01b2d:    	je     0x33a22
  01b33:    	sub    rsp,0x20
  01b37:    	movq   QWORD PTR [rsp],xmm3
  01b3c:    	movq   QWORD PTR [rsp+0x8],xmm5
  01b42:    	movq   QWORD PTR [rsp+0x10],xmm6
  01b48:    	movq   QWORD PTR [rsp+0x18],xmm7
  01b4e:    	mov    rdi,QWORD PTR [rbp-0x38]
  01b52: 31 	movabs rax,0x5631840958d0
  01b5c:    	call   rax
  01b5e:    	mov    r15d,eax
  01b61: 00 	cmp    r15d,DWORD PTR [rip+0x244]        # 0x1dac
  01b68:    	jne    0x33a44
  01b6e:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2b1d]        # 0xfffe4691
  01b74:    	cmp    DWORD PTR [rip+0x22e],eax        # 0x1da8
  01b7a:    	jne    0x33a44
  01b80:    	mov    rax,QWORD PTR [rbx]
  01b83:    	lea    rdi,[rsp-0x18]
  01b88:    	mov    QWORD PTR [rdi],rax
  01b8b:    	mov    QWORD PTR [rbx],rdi
  01b8e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b97:    	mov    QWORD PTR [rsp-0x38],rcx
  01b9c:    	mov    rax,QWORD PTR [rbp-0x38]
  01ba0:    	mov    QWORD PTR [rsp-0x38],rax
  01ba5: 00 	mov    rdi,0x1
  01bac:    	mov    rax,QWORD PTR [rbp-0x70]
  01bb0:    	mov    QWORD PTR [rsp-0x40],rax
  01bb5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bbe: 00 	movabs rax,0x0
  01bc8:    	mov    QWORD PTR [rsp-0x28],rax
  01bcd: 00 	movabs r13,0x0
  01bd7:    	call   0xfffe1b78
  01bdc:    	lea    rdi,[rbp-0x8]
  01be0:    	mov    QWORD PTR [rbx],rdi
  01be3:    	movq   xmm3,QWORD PTR [rsp]
  01be8:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01bee:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01bf4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01bfa:    	add    rsp,0x20
  01bfe:    	test   rax,rax
  01c01:    	je     0x33ab0
:00109 
:00111 br =>:00112
  01c07:    	jmp    0x33bcc
:00112 br =>:00113
  01c0c:    	jmp    0x33c3f
:00113 %9 = nil
  01c11: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00114 ret %9
  01c19:    	mov    rax,QWORD PTR [rbp-0x70]
  01c1d:    	leave  
  01c1e:    	ret    
==> start whole compile: <unnamed> FuncId(79) self_class:Scene start:[00000] bytecode:0x563184c7dcd0
<== finished compile. elapsed:263.7µs
offset:Pos(131640) code: 9059 bytes  data: 413 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00061: 00 	test   rdi,0x7
  00068:    	jne    0x31ec2
  0006e:    	cmp    DWORD PTR [rdi+0x4],0x32
  00072:    	jne    0x31ec2
:00000 %13 = %0.call rand()                 [Scene]
  00078:    	mov    rdi,QWORD PTR [rbp-0x28]
  0007c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe285e],0x26        # 0xfffe28e1
  00083:    	jne    0x31ed1
  00089: 00 	mov    r9,0x0
  00090:    	mov    rdx,rdi
  00093:    	mov    rax,QWORD PTR [rbx]
  00096:    	lea    rdi,[rsp-0x18]
  0009b:    	mov    QWORD PTR [rdi],rax
  0009e:    	mov    QWORD PTR [rbx],rdi
  000a1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000aa:    	mov    QWORD PTR [rsp-0x38],rcx
  000af: ff 	lea    rcx,[rbp-0x98]
  000b6: 00 	mov    r8,0x0
  000bd:    	call   0x31ee0
  000c2:    	lea    rdi,[rbp-0x8]
  000c6:    	mov    QWORD PTR [rbx],rdi
  000c9: 31 	movabs r13,0x563184c7dcf0
  000d3:    	test   rax,rax
  000d6:    	je     0xfffdfe03
  000dc: ff 	mov    QWORD PTR [rbp-0x90],rax
:00001 
:00003 %2 = %13
  000e3: ff 	mov    rax,QWORD PTR [rbp-0x90]
  000ea:    	mov    QWORD PTR [rbp-0x38],rax
:00004 %13 = literal[2.0]
  000ee: 00 	movq   xmm2,QWORD PTR [rip+0x2272]        # 0x2368
  000f6: 00 	mov    rax,0x2
  000fd: ff 	mov    QWORD PTR [rbp-0x90],rax
:00005 %14 = literal[3.14159265]
  00104: 00 	movq   xmm3,QWORD PTR [rip+0x226c]        # 0x2378
  0010c: da 	movabs rax,0x490fda9e46a78a
  00116: ff 	mov    QWORD PTR [rbp-0x98],rax
:00006 %13 = %13 * %14                      [Float][Float]
  0011d:    	mulsd  xmm2,xmm3
:00007 %14 = %0.call rand()                 [Scene]
  00121:    	mov    rdi,QWORD PTR [rbp-0x28]
  00125: 26 	cmp    DWORD PTR [rip+0xfffffffffffe27b5],0x26        # 0xfffe28e1
  0012c:    	jne    0x31f12
  00132: 00 	mov    r9,0x0
  00139:    	sub    rsp,0x10
  0013d:    	movq   QWORD PTR [rsp],xmm2
  00142:    	mov    rdx,rdi
  00145:    	mov    rax,QWORD PTR [rbx]
  00148:    	lea    rdi,[rsp-0x18]
  0014d:    	mov    QWORD PTR [rdi],rax
  00150:    	mov    QWORD PTR [rbx],rdi
  00153: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0015c:    	mov    QWORD PTR [rsp-0x38],rcx
  00161: ff 	lea    rcx,[rbp-0xa0]
  00168: 00 	mov    r8,0x0
  0016f:    	call   0x31f31
  00174:    	lea    rdi,[rbp-0x8]
  00178:    	mov    QWORD PTR [rbx],rdi
  0017b:    	movq   xmm2,QWORD PTR [rsp]
  00180:    	add    rsp,0x10
  00184: 31 	movabs r13,0x563184c7dd60
  0018e:    	test   rax,rax
  00191:    	je     0xfffdfe03
  00197: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 
:00010 %3 = %13 * %14                       [Float][Float]
  0019e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001a5: 00 	test   rdi,0x1
  001ac:    	jne    0x31f63
  001b2: 00 	test   rdi,0x2
  001b9:    	je     0x1f5
  001bf:    	xorps  xmm3,xmm3
  001c2: 00 	movabs rax,0x8000000000000002
  001cc:    	cmp    rdi,rax
  001cf:    	je     0x207
  001d5:    	mov    rax,rdi
  001d8:    	sar    rax,0x3f
  001dc:    	add    rax,0x2
  001e0:    	and    rdi,0xfffffffffffffffc
  001e4:    	or     rdi,rax
  001e7:    	rol    rdi,0x3d
  001eb:    	movq   xmm3,rdi
  001f0:    	jmp    0x207
  001f5:    	call   0xfffdfe3c
  001fa:    	test   rax,rax
  001fd:    	je     0x31f63
  00203:    	movq   xmm3,xmm0
  00207:    	movq   xmm4,xmm2
  0020b:    	mulsd  xmm4,xmm3
:00011 %14 = const[Math]                    [Math]
  0020f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe26d2]        # 0xfffe28e8
  00216: 00 	cmp    rax,QWORD PTR [rip+0x217b]        # 0x2398
  0021d:    	jne    0x31f82
  00223: 00 	mov    rax,QWORD PTR [rip+0x215e]        # 0x2388
  0022a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %15 = %3
:00013 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
  00231: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00238: 00 	test   rdi,0x7
  0023f:    	jne    0x31fe6
  00245:    	cmp    DWORD PTR [rdi+0x4],0x21
  00249:    	jne    0x31fe6
  0024f: 26 	cmp    DWORD PTR [rip+0xfffffffffffe268b],0x26        # 0xfffe28e1
  00256:    	jne    0x31fe6
  0025c:    	sub    rsp,0x10
  00260:    	movq   QWORD PTR [rsp],xmm2
  00265:    	movq   QWORD PTR [rsp+0x8],xmm4
  0026b:    	movq   xmm0,xmm4
  0026f: 31 	movabs rax,0x56318409be40
  00279:    	call   rax
  0027b:    	movq   xmm2,QWORD PTR [rsp]
  00280:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00286:    	add    rsp,0x10
  0028a:    	movq   xmm2,xmm0
:00014 
:00016 %15 = const[Math]                    [Math]
  0028e: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe2653]        # 0xfffe28e8
  00295: 00 	cmp    rax,QWORD PTR [rip+0x211c]        # 0x23b8
  0029c:    	jne    0x32009
  002a2: 00 	mov    rax,QWORD PTR [rip+0x20ff]        # 0x23a8
  002a9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00017 %16 = literal[1.0]
  002b0: 00 	movq   xmm3,QWORD PTR [rip+0x2110]        # 0x23c8
  002b8: 00 	movabs rax,0xff80000000000002
  002c2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00018 %16 = %16 - %2                       [Float][Float]
  002c9:    	mov    rdi,QWORD PTR [rbp-0x38]
  002cd: 00 	test   rdi,0x1
  002d4:    	jne    0x3206d
  002da: 00 	test   rdi,0x2
  002e1:    	je     0x31d
  002e7:    	xorps  xmm5,xmm5
  002ea: 00 	movabs rax,0x8000000000000002
  002f4:    	cmp    rdi,rax
  002f7:    	je     0x32f
  002fd:    	mov    rax,rdi
  00300:    	sar    rax,0x3f
  00304:    	add    rax,0x2
  00308:    	and    rdi,0xfffffffffffffffc
  0030c:    	or     rdi,rax
  0030f:    	rol    rdi,0x3d
  00313:    	movq   xmm5,rdi
  00318:    	jmp    0x32f
  0031d:    	call   0xfffdfe3c
  00322:    	test   rax,rax
  00325:    	je     0x3206d
  0032b:    	movq   xmm5,xmm0
  0032f:    	subsd  xmm3,xmm5
:00019 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  00333: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0033a: 00 	test   rdi,0x7
  00341:    	jne    0x32099
  00347:    	cmp    DWORD PTR [rdi+0x4],0x21
  0034b:    	jne    0x32099
  00351: 26 	cmp    DWORD PTR [rip+0xfffffffffffe2589],0x26        # 0xfffe28e1
  00358:    	jne    0x32099
  0035e:    	sqrtsd xmm6,xmm3
:00020 
:00022 %4 = %13 * %14                       [Float][Float]
  00362:    	movq   xmm7,xmm2
  00366:    	mulsd  xmm7,xmm6
:00023 %14 = const[Math]                    [Math]
  0036a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe2577]        # 0xfffe28e8
  00371: 00 	cmp    rax,QWORD PTR [rip+0x2070]        # 0x23e8
  00378:    	jne    0x320d5
  0037e: 00 	mov    rax,QWORD PTR [rip+0x2053]        # 0x23d8
  00385: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %15 = %3
:00025 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
  0038c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00393: 00 	test   rdi,0x7
  0039a:    	jne    0x3215d
  003a0:    	cmp    DWORD PTR [rdi+0x4],0x21
  003a4:    	jne    0x3215d
  003aa: 26 	cmp    DWORD PTR [rip+0xfffffffffffe2530],0x26        # 0xfffe28e1
  003b1:    	jne    0x3215d
  003b7:    	sub    rsp,0x30
  003bb:    	movq   QWORD PTR [rsp],xmm2
  003c0:    	movq   QWORD PTR [rsp+0x8],xmm3
  003c6:    	movq   QWORD PTR [rsp+0x10],xmm4
  003cc:    	movq   QWORD PTR [rsp+0x18],xmm5
  003d2:    	movq   QWORD PTR [rsp+0x20],xmm7
  003d8:    	movq   xmm0,xmm4
  003dc: 31 	movabs rax,0x56318409be50
  003e6:    	call   rax
  003e8:    	movq   xmm2,QWORD PTR [rsp]
  003ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  003ff:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00405:    	add    rsp,0x30
  00409:    	movq   xmm2,xmm0
:00026 
:00028 %15 = const[Math]                    [Math]
  0040d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe24d4]        # 0xfffe28e8
  00414: 00 	cmp    rax,QWORD PTR [rip+0x1fed]        # 0x2408
  0041b:    	jne    0x3219d
  00421: 00 	mov    rax,QWORD PTR [rip+0x1fd0]        # 0x23f8
  00428: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00029 %16 = literal[1.0]
  0042f: 00 	movq   xmm3,QWORD PTR [rip+0x1fe1]        # 0x2418
  00437: 00 	movabs rax,0xff80000000000002
  00441: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00030 %16 = %16 - %2                       [Float][Float]
  00448:    	subsd  xmm3,xmm5
:00031 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  0044c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00453: 00 	test   rdi,0x7
  0045a:    	jne    0x32225
  00460:    	cmp    DWORD PTR [rdi+0x4],0x21
  00464:    	jne    0x32225
  0046a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe2470],0x26        # 0xfffe28e1
  00471:    	jne    0x32225
  00477:    	sqrtsd xmm6,xmm3
:00032 
:00034 %5 = %13 * %14                       [Float][Float]
  0047b:    	movq   xmm8,xmm2
  00480:    	mulsd  xmm8,xmm6
:00035 %13 = const[Math]                    [Math]
  00485: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe245c]        # 0xfffe28e8
  0048c: 00 	cmp    rax,QWORD PTR [rip+0x1fa5]        # 0x2438
  00493:    	jne    0x3226e
  00499: 00 	mov    rax,QWORD PTR [rip+0x1f88]        # 0x2428
  004a0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00036 %14 = %2
:00037 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  004a7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  004ae: 00 	test   rdi,0x7
  004b5:    	jne    0x32304
  004bb:    	cmp    DWORD PTR [rdi+0x4],0x21
  004bf:    	jne    0x32304
  004c5: 26 	cmp    DWORD PTR [rip+0xfffffffffffe2415],0x26        # 0xfffe28e1
  004cc:    	jne    0x32304
  004d2:    	sqrtsd xmm2,xmm5
:00038 
:00040 %14 = dynvar(2, %2)
  004d6:    	mov    rax,QWORD PTR [rbp-0x10]
  004da:    	mov    rax,QWORD PTR [rax]
  004dd:    	mov    rax,QWORD PTR [rax-0x28]
  004e1: ff 	mov    QWORD PTR [rbp-0x98],rax
:00041 %15 = 0: i32
  004e8: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00042 %14 = %14.[%15]                      [Array][Integer]
  004f3:    	sub    rsp,0x30
  004f7:    	movq   QWORD PTR [rsp],xmm2
  004fc:    	movq   QWORD PTR [rsp+0x8],xmm3
  00502:    	movq   QWORD PTR [rsp+0x10],xmm4
  00508:    	movq   QWORD PTR [rsp+0x18],xmm5
  0050e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00514: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0051b: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00522: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00529:    	mov    rdi,rbx
  0052c:    	mov    rsi,r12
  0052f: 31 	movabs r8,0x563184c7df78
  00539: 31 	movabs rax,0x5631840b8230
  00543:    	call   rax
  00545:    	movq   xmm2,QWORD PTR [rsp]
  0054a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00550:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00556:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0055c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00562: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00569:    	add    rsp,0x30
  0056d: 31 	movabs r13,0x563184c7df80
  00577:    	test   rax,rax
  0057a:    	je     0xfffdfe03
  00580: ff 	mov    QWORD PTR [rbp-0x98],rax
:00043 %13 = %14.call x()                   [Vec]
  00587: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0058e: 00 	test   rdi,0x7
  00595:    	jne    0x3235b
  0059b:    	cmp    DWORD PTR [rdi+0x4],0x28
  0059f:    	jne    0x3235b
  005a5: 26 	cmp    DWORD PTR [rip+0xfffffffffffe2335],0x26        # 0xfffe28e1
  005ac:    	jne    0x3235b
  005b2:    	mov    esi,DWORD PTR [rip+0x1e8c]        # 0x2444
  005b8:    	cmp    esi,0xffffffff
  005bb:    	je     0x323af
  005c1:    	cmp    WORD PTR [rdi+0x2],0x3
  005c6:    	jne    0x5df
  005cc:    	cmp    esi,0x6
  005cf:    	jge    0x5df
  005d5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005da:    	jmp    0x63b
  005df:    	sub    rsp,0x30
  005e3:    	movq   QWORD PTR [rsp],xmm2
  005e8:    	movq   QWORD PTR [rsp+0x8],xmm3
  005ee:    	movq   QWORD PTR [rsp+0x10],xmm4
  005f4:    	movq   QWORD PTR [rsp+0x18],xmm5
  005fa:    	movq   QWORD PTR [rsp+0x20],xmm7
  00600: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00607: 31 	movabs rax,0x563184053740
  00611:    	call   rax
  00613:    	movq   xmm2,QWORD PTR [rsp]
  00618:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0061e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00624:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0062a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00630: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00637:    	add    rsp,0x30
  0063b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00044 
:00046 %13 = %4 * %13                       [Float][Float]
  00642: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00649: 00 	test   rdi,0x1
  00650:    	jne    0x32428
  00656: 00 	test   rdi,0x2
  0065d:    	je     0x699
  00663:    	xorps  xmm6,xmm6
  00666: 00 	movabs rax,0x8000000000000002
  00670:    	cmp    rdi,rax
  00673:    	je     0x6ab
  00679:    	mov    rax,rdi
  0067c:    	sar    rax,0x3f
  00680:    	add    rax,0x2
  00684:    	and    rdi,0xfffffffffffffffc
  00688:    	or     rdi,rax
  0068b:    	rol    rdi,0x3d
  0068f:    	movq   xmm6,rdi
  00694:    	jmp    0x6ab
  00699:    	call   0xfffdfe3c
  0069e:    	test   rax,rax
  006a1:    	je     0x32428
  006a7:    	movq   xmm6,xmm0
  006ab:    	mulsd  xmm6,xmm7
:00047 %15 = dynvar(2, %2)
  006af:    	mov    rax,QWORD PTR [rbp-0x10]
  006b3:    	mov    rax,QWORD PTR [rax]
  006b6:    	mov    rax,QWORD PTR [rax-0x28]
  006ba: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00048 %16 = 1: i32
  006c1: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00049 %15 = %15.[%16]                      [Array][Integer]
  006cc:    	sub    rsp,0x30
  006d0:    	movq   QWORD PTR [rsp],xmm2
  006d5:    	movq   QWORD PTR [rsp+0x8],xmm4
  006db:    	movq   QWORD PTR [rsp+0x10],xmm5
  006e1:    	movq   QWORD PTR [rsp+0x18],xmm6
  006e7:    	movq   QWORD PTR [rsp+0x20],xmm7
  006ed: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  006f4: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  006fb: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00702:    	mov    rdi,rbx
  00705:    	mov    rsi,r12
  00708: 31 	movabs r8,0x563184c7dfe8
  00712: 31 	movabs rax,0x5631840b8230
  0071c:    	call   rax
  0071e:    	movq   xmm2,QWORD PTR [rsp]
  00723:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00729:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0072f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00735:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0073b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00742:    	add    rsp,0x30
  00746: 31 	movabs r13,0x563184c7dff0
  00750:    	test   rax,rax
  00753:    	je     0xfffdfe03
  00759: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00050 %14 = %15.call x()                   [Vec]
  00760: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00767: 00 	test   rdi,0x7
  0076e:    	jne    0x3247c
  00774:    	cmp    DWORD PTR [rdi+0x4],0x28
  00778:    	jne    0x3247c
  0077e: 26 	cmp    DWORD PTR [rip+0xfffffffffffe215c],0x26        # 0xfffe28e1
  00785:    	jne    0x3247c
  0078b:    	mov    esi,DWORD PTR [rip+0x1cbb]        # 0x244c
  00791:    	cmp    esi,0xffffffff
  00794:    	je     0x324d0
  0079a:    	cmp    WORD PTR [rdi+0x2],0x3
  0079f:    	jne    0x7b8
  007a5:    	cmp    esi,0x6
  007a8:    	jge    0x7b8
  007ae:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007b3:    	jmp    0x814
  007b8:    	sub    rsp,0x30
  007bc:    	movq   QWORD PTR [rsp],xmm2
  007c1:    	movq   QWORD PTR [rsp+0x8],xmm4
  007c7:    	movq   QWORD PTR [rsp+0x10],xmm5
  007cd:    	movq   QWORD PTR [rsp+0x18],xmm6
  007d3:    	movq   QWORD PTR [rsp+0x20],xmm7
  007d9: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  007e0: 31 	movabs rax,0x563184053740
  007ea:    	call   rax
  007ec:    	movq   xmm2,QWORD PTR [rsp]
  007f1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007f7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007fd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00803:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00809: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00810:    	add    rsp,0x30
  00814: ff 	mov    QWORD PTR [rbp-0x98],rax
:00051 
:00053 %14 = %5 * %14                       [Float][Float]
  0081b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00822: 00 	test   rdi,0x1
  00829:    	jne    0x32549
  0082f: 00 	test   rdi,0x2
  00836:    	je     0x872
  0083c:    	xorps  xmm3,xmm3
  0083f: 00 	movabs rax,0x8000000000000002
  00849:    	cmp    rdi,rax
  0084c:    	je     0x884
  00852:    	mov    rax,rdi
  00855:    	sar    rax,0x3f
  00859:    	add    rax,0x2
  0085d:    	and    rdi,0xfffffffffffffffc
  00861:    	or     rdi,rax
  00864:    	rol    rdi,0x3d
  00868:    	movq   xmm3,rdi
  0086d:    	jmp    0x884
  00872:    	call   0xfffdfe3c
  00877:    	test   rax,rax
  0087a:    	je     0x32549
  00880:    	movq   xmm3,xmm0
  00884:    	mulsd  xmm3,xmm8
:00054 %13 = %13 + %14                      [Float][Float]
  00889:    	addsd  xmm6,xmm3
:00055 %15 = dynvar(2, %2)
  0088d:    	mov    rax,QWORD PTR [rbp-0x10]
  00891:    	mov    rax,QWORD PTR [rax]
  00894:    	mov    rax,QWORD PTR [rax-0x28]
  00898: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00056 %16 = 2: i32
  0089f: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00057 %15 = %15.[%16]                      [Array][Integer]
  008aa:    	sub    rsp,0x40
  008ae:    	movq   QWORD PTR [rsp],xmm2
  008b3:    	movq   QWORD PTR [rsp+0x8],xmm3
  008b9:    	movq   QWORD PTR [rsp+0x10],xmm4
  008bf:    	movq   QWORD PTR [rsp+0x18],xmm5
  008c5:    	movq   QWORD PTR [rsp+0x20],xmm6
  008cb:    	movq   QWORD PTR [rsp+0x28],xmm7
  008d1: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  008d8: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  008df: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  008e6:    	mov    rdi,rbx
  008e9:    	mov    rsi,r12
  008ec: 31 	movabs r8,0x563184c7e068
  008f6: 31 	movabs rax,0x5631840b8230
  00900:    	call   rax
  00902:    	movq   xmm2,QWORD PTR [rsp]
  00907:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0090d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00913:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00919:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0091f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00925: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0092c:    	add    rsp,0x40
  00930: 31 	movabs r13,0x563184c7e070
  0093a:    	test   rax,rax
  0093d:    	je     0xfffdfe03
  00943: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00058 %14 = %15.call x()                   [Vec]
  0094a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00951: 00 	test   rdi,0x7
  00958:    	jne    0x3259d
  0095e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00962:    	jne    0x3259d
  00968: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1f72],0x26        # 0xfffe28e1
  0096f:    	jne    0x3259d
  00975:    	mov    esi,DWORD PTR [rip+0x1ad9]        # 0x2454
  0097b:    	cmp    esi,0xffffffff
  0097e:    	je     0x325f1
  00984:    	cmp    WORD PTR [rdi+0x2],0x3
  00989:    	jne    0x9a2
  0098f:    	cmp    esi,0x6
  00992:    	jge    0x9a2
  00998:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0099d:    	jmp    0x9fe
  009a2:    	sub    rsp,0x30
  009a6:    	movq   QWORD PTR [rsp],xmm2
  009ab:    	movq   QWORD PTR [rsp+0x8],xmm4
  009b1:    	movq   QWORD PTR [rsp+0x10],xmm5
  009b7:    	movq   QWORD PTR [rsp+0x18],xmm6
  009bd:    	movq   QWORD PTR [rsp+0x20],xmm7
  009c3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  009ca: 31 	movabs rax,0x563184053740
  009d4:    	call   rax
  009d6:    	movq   xmm2,QWORD PTR [rsp]
  009db:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009e1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009e7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009ed:    	movq   xmm7,QWORD PTR [rsp+0x20]
  009f3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  009fa:    	add    rsp,0x30
  009fe: ff 	mov    QWORD PTR [rbp-0x98],rax
:00059 
:00061 %14 = %6 * %14                       [Float][Float]
  00a05: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a0c: 00 	test   rdi,0x1
  00a13:    	jne    0x3266a
  00a19: 00 	test   rdi,0x2
  00a20:    	je     0xa5c
  00a26:    	xorps  xmm3,xmm3
  00a29: 00 	movabs rax,0x8000000000000002
  00a33:    	cmp    rdi,rax
  00a36:    	je     0xa6e
  00a3c:    	mov    rax,rdi
  00a3f:    	sar    rax,0x3f
  00a43:    	add    rax,0x2
  00a47:    	and    rdi,0xfffffffffffffffc
  00a4b:    	or     rdi,rax
  00a4e:    	rol    rdi,0x3d
  00a52:    	movq   xmm3,rdi
  00a57:    	jmp    0xa6e
  00a5c:    	call   0xfffdfe3c
  00a61:    	test   rax,rax
  00a64:    	je     0x3266a
  00a6a:    	movq   xmm3,xmm0
  00a6e:    	mulsd  xmm3,xmm2
:00062 %7 = %13 + %14                       [Float][Float]
  00a72:    	movq   xmm9,xmm6
  00a77:    	addsd  xmm9,xmm3
:00063 %14 = dynvar(2, %2)
  00a7c:    	mov    rax,QWORD PTR [rbp-0x10]
  00a80:    	mov    rax,QWORD PTR [rax]
  00a83:    	mov    rax,QWORD PTR [rax-0x28]
  00a87: ff 	mov    QWORD PTR [rbp-0x98],rax
:00064 %15 = 0: i32
  00a8e: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00065 %14 = %14.[%15]                      [Array][Integer]
  00a99:    	sub    rsp,0x40
  00a9d:    	movq   QWORD PTR [rsp],xmm2
  00aa2:    	movq   QWORD PTR [rsp+0x8],xmm4
  00aa8:    	movq   QWORD PTR [rsp+0x10],xmm5
  00aae:    	movq   QWORD PTR [rsp+0x18],xmm6
  00ab4:    	movq   QWORD PTR [rsp+0x20],xmm7
  00aba: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00ac1: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00ac8: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00acf: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00ad6:    	mov    rdi,rbx
  00ad9:    	mov    rsi,r12
  00adc: 31 	movabs r8,0x563184c7e0e8
  00ae6: 31 	movabs rax,0x5631840b8230
  00af0:    	call   rax
  00af2:    	movq   xmm2,QWORD PTR [rsp]
  00af7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00afd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b03:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b09:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00b0f: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00b16: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00b1d:    	add    rsp,0x40
  00b21: 31 	movabs r13,0x563184c7e0f0
  00b2b:    	test   rax,rax
  00b2e:    	je     0xfffdfe03
  00b34: ff 	mov    QWORD PTR [rbp-0x98],rax
:00066 %13 = %14.call y()                   [Vec]
  00b3b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00b42: 00 	test   rdi,0x7
  00b49:    	jne    0x326be
  00b4f:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b53:    	jne    0x326be
  00b59: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1d81],0x26        # 0xfffe28e1
  00b60:    	jne    0x326be
  00b66:    	mov    esi,DWORD PTR [rip+0x18f0]        # 0x245c
  00b6c:    	cmp    esi,0xffffffff
  00b6f:    	je     0x32710
  00b75:    	cmp    WORD PTR [rdi+0x2],0x3
  00b7a:    	jne    0xb93
  00b80:    	cmp    esi,0x6
  00b83:    	jge    0xb93
  00b89:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b8e:    	jmp    0xbf1
  00b93:    	sub    rsp,0x30
  00b97:    	movq   QWORD PTR [rsp],xmm2
  00b9c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ba2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ba8:    	movq   QWORD PTR [rsp+0x18],xmm7
  00bae: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00bb5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00bbc: 31 	movabs rax,0x563184053740
  00bc6:    	call   rax
  00bc8:    	movq   xmm2,QWORD PTR [rsp]
  00bcd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00bd3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bd9:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00bdf: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00be6: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00bed:    	add    rsp,0x30
  00bf1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00067 
:00069 %13 = %4 * %13                       [Float][Float]
  00bf8: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00bff: 00 	test   rdi,0x1
  00c06:    	jne    0x3278b
  00c0c: 00 	test   rdi,0x2
  00c13:    	je     0xc4f
  00c19:    	xorps  xmm3,xmm3
  00c1c: 00 	movabs rax,0x8000000000000002
  00c26:    	cmp    rdi,rax
  00c29:    	je     0xc61
  00c2f:    	mov    rax,rdi
  00c32:    	sar    rax,0x3f
  00c36:    	add    rax,0x2
  00c3a:    	and    rdi,0xfffffffffffffffc
  00c3e:    	or     rdi,rax
  00c41:    	rol    rdi,0x3d
  00c45:    	movq   xmm3,rdi
  00c4a:    	jmp    0xc61
  00c4f:    	call   0xfffdfe3c
  00c54:    	test   rax,rax
  00c57:    	je     0x3278b
  00c5d:    	movq   xmm3,xmm0
  00c61:    	mulsd  xmm3,xmm7
:00070 %15 = dynvar(2, %2)
  00c65:    	mov    rax,QWORD PTR [rbp-0x10]
  00c69:    	mov    rax,QWORD PTR [rax]
  00c6c:    	mov    rax,QWORD PTR [rax-0x28]
  00c70: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00071 %16 = 1: i32
  00c77: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00072 %15 = %15.[%16]                      [Array][Integer]
  00c82:    	sub    rsp,0x40
  00c86:    	movq   QWORD PTR [rsp],xmm2
  00c8b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c91:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c97:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c9d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ca3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00caa: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00cb1: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00cb8: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00cbf:    	mov    rdi,rbx
  00cc2:    	mov    rsi,r12
  00cc5: 31 	movabs r8,0x563184c7e158
  00ccf: 31 	movabs rax,0x5631840b8230
  00cd9:    	call   rax
  00cdb:    	movq   xmm2,QWORD PTR [rsp]
  00ce0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ce6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cf2:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00cf8: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00cff: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d06:    	add    rsp,0x40
  00d0a: 31 	movabs r13,0x563184c7e160
  00d14:    	test   rax,rax
  00d17:    	je     0xfffdfe03
  00d1d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00073 %14 = %15.call y()                   [Vec]
  00d24: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00d2b: 00 	test   rdi,0x7
  00d32:    	jne    0x327dd
  00d38:    	cmp    DWORD PTR [rdi+0x4],0x28
  00d3c:    	jne    0x327dd
  00d42: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1b98],0x26        # 0xfffe28e1
  00d49:    	jne    0x327dd
  00d4f:    	mov    esi,DWORD PTR [rip+0x170f]        # 0x2464
  00d55:    	cmp    esi,0xffffffff
  00d58:    	je     0x3283f
  00d5e:    	cmp    WORD PTR [rdi+0x2],0x3
  00d63:    	jne    0xd7c
  00d69:    	cmp    esi,0x6
  00d6c:    	jge    0xd7c
  00d72:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d77:    	jmp    0xde6
  00d7c:    	sub    rsp,0x40
  00d80:    	movq   QWORD PTR [rsp],xmm2
  00d85:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d91:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d97:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d9d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00da4: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00dab: 31 	movabs rax,0x563184053740
  00db5:    	call   rax
  00db7:    	movq   xmm2,QWORD PTR [rsp]
  00dbc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00dc2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dc8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00dce:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00dd4: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00ddb: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00de2:    	add    rsp,0x40
  00de6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 
:00076 %14 = %5 * %14                       [Float][Float]
  00ded: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00df4: 00 	test   rdi,0x1
  00dfb:    	jne    0x328c6
  00e01: 00 	test   rdi,0x2
  00e08:    	je     0xe44
  00e0e:    	xorps  xmm6,xmm6
  00e11: 00 	movabs rax,0x8000000000000002
  00e1b:    	cmp    rdi,rax
  00e1e:    	je     0xe56
  00e24:    	mov    rax,rdi
  00e27:    	sar    rax,0x3f
  00e2b:    	add    rax,0x2
  00e2f:    	and    rdi,0xfffffffffffffffc
  00e33:    	or     rdi,rax
  00e36:    	rol    rdi,0x3d
  00e3a:    	movq   xmm6,rdi
  00e3f:    	jmp    0xe56
  00e44:    	call   0xfffdfe3c
  00e49:    	test   rax,rax
  00e4c:    	je     0x328c6
  00e52:    	movq   xmm6,xmm0
  00e56:    	mulsd  xmm6,xmm8
:00077 %13 = %13 + %14                      [Float][Float]
  00e5b:    	addsd  xmm3,xmm6
:00078 %15 = dynvar(2, %2)
  00e5f:    	mov    rax,QWORD PTR [rbp-0x10]
  00e63:    	mov    rax,QWORD PTR [rax]
  00e66:    	mov    rax,QWORD PTR [rax-0x28]
  00e6a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00079 %16 = 2: i32
  00e71: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00080 %15 = %15.[%16]                      [Array][Integer]
  00e7c:    	sub    rsp,0x40
  00e80:    	movq   QWORD PTR [rsp],xmm2
  00e85:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e91:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e97:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e9d:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ea3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00eaa: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00eb1: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00eb8: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00ebf:    	mov    rdi,rbx
  00ec2:    	mov    rsi,r12
  00ec5: 31 	movabs r8,0x563184c7e1d8
  00ecf: 31 	movabs rax,0x5631840b8230
  00ed9:    	call   rax
  00edb:    	movq   xmm2,QWORD PTR [rsp]
  00ee0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ee6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00eec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ef2:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ef8:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00efe: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f05: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f0c:    	add    rsp,0x40
  00f10: 31 	movabs r13,0x563184c7e1e0
  00f1a:    	test   rax,rax
  00f1d:    	je     0xfffdfe03
  00f23: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00081 %14 = %15.call y()                   [Vec]
  00f2a: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00f31: 00 	test   rdi,0x7
  00f38:    	jne    0x32928
  00f3e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00f42:    	jne    0x32928
  00f48: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1992],0x26        # 0xfffe28e1
  00f4f:    	jne    0x32928
  00f55:    	mov    esi,DWORD PTR [rip+0x1511]        # 0x246c
  00f5b:    	cmp    esi,0xffffffff
  00f5e:    	je     0x3298a
  00f64:    	cmp    WORD PTR [rdi+0x2],0x3
  00f69:    	jne    0xf82
  00f6f:    	cmp    esi,0x6
  00f72:    	jge    0xf82
  00f78:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f7d:    	jmp    0xfec
  00f82:    	sub    rsp,0x40
  00f86:    	movq   QWORD PTR [rsp],xmm2
  00f8b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f91:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f97:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f9d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00fa3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00faa: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00fb1: 31 	movabs rax,0x563184053740
  00fbb:    	call   rax
  00fbd:    	movq   xmm2,QWORD PTR [rsp]
  00fc2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fc8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fce:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fd4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00fda: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00fe1: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00fe8:    	add    rsp,0x40
  00fec: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 
:00084 %14 = %6 * %14                       [Float][Float]
  00ff3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ffa: 00 	test   rdi,0x1
  01001:    	jne    0x32a11
  01007: 00 	test   rdi,0x2
  0100e:    	je     0x104a
  01014:    	xorps  xmm6,xmm6
  01017: 00 	movabs rax,0x8000000000000002
  01021:    	cmp    rdi,rax
  01024:    	je     0x105c
  0102a:    	mov    rax,rdi
  0102d:    	sar    rax,0x3f
  01031:    	add    rax,0x2
  01035:    	and    rdi,0xfffffffffffffffc
  01039:    	or     rdi,rax
  0103c:    	rol    rdi,0x3d
  01040:    	movq   xmm6,rdi
  01045:    	jmp    0x105c
  0104a:    	call   0xfffdfe3c
  0104f:    	test   rax,rax
  01052:    	je     0x32a11
  01058:    	movq   xmm6,xmm0
  0105c:    	mulsd  xmm6,xmm2
:00085 %8 = %13 + %14                       [Float][Float]
  01060:    	movq   xmm10,xmm3
  01065:    	addsd  xmm10,xmm6
:00086 %14 = dynvar(2, %2)
  0106a:    	mov    rax,QWORD PTR [rbp-0x10]
  0106e:    	mov    rax,QWORD PTR [rax]
  01071:    	mov    rax,QWORD PTR [rax-0x28]
  01075: ff 	mov    QWORD PTR [rbp-0x98],rax
:00087 %15 = 0: i32
  0107c: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00088 %14 = %14.[%15]                      [Array][Integer]
  01087:    	sub    rsp,0x40
  0108b:    	movq   QWORD PTR [rsp],xmm2
  01090:    	movq   QWORD PTR [rsp+0x8],xmm3
  01096:    	movq   QWORD PTR [rsp+0x10],xmm4
  0109c:    	movq   QWORD PTR [rsp+0x18],xmm5
  010a2:    	movq   QWORD PTR [rsp+0x20],xmm7
  010a8: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  010af: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  010b6: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  010bd: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  010c4: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  010cb:    	mov    rdi,rbx
  010ce:    	mov    rsi,r12
  010d1: 31 	movabs r8,0x563184c7e258
  010db: 31 	movabs rax,0x5631840b8230
  010e5:    	call   rax
  010e7:    	movq   xmm2,QWORD PTR [rsp]
  010ec:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010f2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010f8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010fe:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01104: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0110b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01112: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01119:    	add    rsp,0x40
  0111d: 31 	movabs r13,0x563184c7e260
  01127:    	test   rax,rax
  0112a:    	je     0xfffdfe03
  01130: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %13 = %14.call z()                   [Vec]
  01137: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0113e: 00 	test   rdi,0x7
  01145:    	jne    0x32a73
  0114b:    	cmp    DWORD PTR [rdi+0x4],0x28
  0114f:    	jne    0x32a73
  01155: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1785],0x26        # 0xfffe28e1
  0115c:    	jne    0x32a73
  01162:    	mov    esi,DWORD PTR [rip+0x130c]        # 0x2474
  01168:    	cmp    esi,0xffffffff
  0116b:    	je     0x32ad3
  01171:    	cmp    WORD PTR [rdi+0x2],0x3
  01176:    	jne    0x118f
  0117c:    	cmp    esi,0x6
  0117f:    	jge    0x118f
  01185:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0118a:    	jmp    0x11fb
  0118f:    	sub    rsp,0x40
  01193:    	movq   QWORD PTR [rsp],xmm2
  01198:    	movq   QWORD PTR [rsp+0x8],xmm4
  0119e:    	movq   QWORD PTR [rsp+0x10],xmm5
  011a4:    	movq   QWORD PTR [rsp+0x18],xmm7
  011aa: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  011b1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  011b8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  011bf: 31 	movabs rax,0x563184053740
  011c9:    	call   rax
  011cb:    	movq   xmm2,QWORD PTR [rsp]
  011d0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011d6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011dc:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011e2: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  011e9: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  011f0: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  011f7:    	add    rsp,0x40
  011fb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00090 
:00092 %13 = %4 * %13                       [Float][Float]
  01202: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01209: 00 	test   rdi,0x1
  01210:    	jne    0x32b5c
  01216: 00 	test   rdi,0x2
  0121d:    	je     0x1259
  01223:    	xorps  xmm3,xmm3
  01226: 00 	movabs rax,0x8000000000000002
  01230:    	cmp    rdi,rax
  01233:    	je     0x126b
  01239:    	mov    rax,rdi
  0123c:    	sar    rax,0x3f
  01240:    	add    rax,0x2
  01244:    	and    rdi,0xfffffffffffffffc
  01248:    	or     rdi,rax
  0124b:    	rol    rdi,0x3d
  0124f:    	movq   xmm3,rdi
  01254:    	jmp    0x126b
  01259:    	call   0xfffdfe3c
  0125e:    	test   rax,rax
  01261:    	je     0x32b5c
  01267:    	movq   xmm3,xmm0
  0126b:    	mulsd  xmm3,xmm7
:00093 %15 = dynvar(2, %2)
  0126f:    	mov    rax,QWORD PTR [rbp-0x10]
  01273:    	mov    rax,QWORD PTR [rax]
  01276:    	mov    rax,QWORD PTR [rax-0x28]
  0127a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00094 %16 = 1: i32
  01281: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00095 %15 = %15.[%16]                      [Array][Integer]
  0128c:    	sub    rsp,0x40
  01290:    	movq   QWORD PTR [rsp],xmm2
  01295:    	movq   QWORD PTR [rsp+0x8],xmm3
  0129b:    	movq   QWORD PTR [rsp+0x10],xmm4
  012a1:    	movq   QWORD PTR [rsp+0x18],xmm5
  012a7:    	movq   QWORD PTR [rsp+0x20],xmm7
  012ad: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  012b4: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  012bb: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  012c2: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  012c9: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  012d0:    	mov    rdi,rbx
  012d3:    	mov    rsi,r12
  012d6: 31 	movabs r8,0x563184c7e2c8
  012e0: 31 	movabs rax,0x5631840b8230
  012ea:    	call   rax
  012ec:    	movq   xmm2,QWORD PTR [rsp]
  012f1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  012f7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  012fd:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01303:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01309: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01310: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01317: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0131e:    	add    rsp,0x40
  01322: 31 	movabs r13,0x563184c7e2d0
  0132c:    	test   rax,rax
  0132f:    	je     0xfffdfe03
  01335: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00096 %14 = %15.call z()                   [Vec]
  0133c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01343: 00 	test   rdi,0x7
  0134a:    	jne    0x32bbc
  01350:    	cmp    DWORD PTR [rdi+0x4],0x28
  01354:    	jne    0x32bbc
  0135a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1580],0x26        # 0xfffe28e1
  01361:    	jne    0x32bbc
  01367:    	mov    esi,DWORD PTR [rip+0x110f]        # 0x247c
  0136d:    	cmp    esi,0xffffffff
  01370:    	je     0x32c2c
  01376:    	cmp    WORD PTR [rdi+0x2],0x3
  0137b:    	jne    0x1394
  01381:    	cmp    esi,0x6
  01384:    	jge    0x1394
  0138a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0138f:    	jmp    0x140c
  01394:    	sub    rsp,0x40
  01398:    	movq   QWORD PTR [rsp],xmm2
  0139d:    	movq   QWORD PTR [rsp+0x8],xmm3
  013a3:    	movq   QWORD PTR [rsp+0x10],xmm4
  013a9:    	movq   QWORD PTR [rsp+0x18],xmm5
  013af:    	movq   QWORD PTR [rsp+0x20],xmm7
  013b5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  013bc: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  013c3: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  013ca: 31 	movabs rax,0x563184053740
  013d4:    	call   rax
  013d6:    	movq   xmm2,QWORD PTR [rsp]
  013db:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013e1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  013e7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  013ed:    	movq   xmm7,QWORD PTR [rsp+0x20]
  013f3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  013fa: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01401: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01408:    	add    rsp,0x40
  0140c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00097 
:00099 %14 = %5 * %14                       [Float][Float]
  01413: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0141a: 00 	test   rdi,0x1
  01421:    	jne    0x32cc1
  01427: 00 	test   rdi,0x2
  0142e:    	je     0x146a
  01434:    	xorps  xmm6,xmm6
  01437: 00 	movabs rax,0x8000000000000002
  01441:    	cmp    rdi,rax
  01444:    	je     0x147c
  0144a:    	mov    rax,rdi
  0144d:    	sar    rax,0x3f
  01451:    	add    rax,0x2
  01455:    	and    rdi,0xfffffffffffffffc
  01459:    	or     rdi,rax
  0145c:    	rol    rdi,0x3d
  01460:    	movq   xmm6,rdi
  01465:    	jmp    0x147c
  0146a:    	call   0xfffdfe3c
  0146f:    	test   rax,rax
  01472:    	je     0x32cc1
  01478:    	movq   xmm6,xmm0
  0147c:    	mulsd  xmm6,xmm8
:00100 %13 = %13 + %14                      [Float][Float]
  01481:    	addsd  xmm3,xmm6
:00101 %15 = dynvar(2, %2)
  01485:    	mov    rax,QWORD PTR [rbp-0x10]
  01489:    	mov    rax,QWORD PTR [rax]
  0148c:    	mov    rax,QWORD PTR [rax-0x28]
  01490: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00102 %16 = 2: i32
  01497: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00103 %15 = %15.[%16]                      [Array][Integer]
  014a2:    	sub    rsp,0x50
  014a6:    	movq   QWORD PTR [rsp],xmm2
  014ab:    	movq   QWORD PTR [rsp+0x8],xmm3
  014b1:    	movq   QWORD PTR [rsp+0x10],xmm4
  014b7:    	movq   QWORD PTR [rsp+0x18],xmm5
  014bd:    	movq   QWORD PTR [rsp+0x20],xmm6
  014c3:    	movq   QWORD PTR [rsp+0x28],xmm7
  014c9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014d0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014d7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  014de: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  014e5: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  014ec:    	mov    rdi,rbx
  014ef:    	mov    rsi,r12
  014f2: 31 	movabs r8,0x563184c7e348
  014fc: 31 	movabs rax,0x5631840b8230
  01506:    	call   rax
  01508:    	movq   xmm2,QWORD PTR [rsp]
  0150d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01513:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01519:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0151f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01525:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0152b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01532: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01539: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01540:    	add    rsp,0x50
  01544: 31 	movabs r13,0x563184c7e350
  0154e:    	test   rax,rax
  01551:    	je     0xfffdfe03
  01557: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00104 %14 = %15.call z()                   [Vec]
  0155e: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01565: 00 	test   rdi,0x7
  0156c:    	jne    0x32d31
  01572:    	cmp    DWORD PTR [rdi+0x4],0x28
  01576:    	jne    0x32d31
  0157c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe135e],0x26        # 0xfffe28e1
  01583:    	jne    0x32d31
  01589:    	mov    esi,DWORD PTR [rip+0xef5]        # 0x2484
  0158f:    	cmp    esi,0xffffffff
  01592:    	je     0x32da1
  01598:    	cmp    WORD PTR [rdi+0x2],0x3
  0159d:    	jne    0x15b6
  015a3:    	cmp    esi,0x6
  015a6:    	jge    0x15b6
  015ac:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  015b1:    	jmp    0x162e
  015b6:    	sub    rsp,0x40
  015ba:    	movq   QWORD PTR [rsp],xmm2
  015bf:    	movq   QWORD PTR [rsp+0x8],xmm3
  015c5:    	movq   QWORD PTR [rsp+0x10],xmm4
  015cb:    	movq   QWORD PTR [rsp+0x18],xmm5
  015d1:    	movq   QWORD PTR [rsp+0x20],xmm7
  015d7: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  015de: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  015e5: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  015ec: 31 	movabs rax,0x563184053740
  015f6:    	call   rax
  015f8:    	movq   xmm2,QWORD PTR [rsp]
  015fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01603:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01609:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0160f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01615: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0161c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01623: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0162a:    	add    rsp,0x40
  0162e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00105 
:00107 %14 = %6 * %14                       [Float][Float]
  01635: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0163c: 00 	test   rdi,0x1
  01643:    	jne    0x32e36
  01649: 00 	test   rdi,0x2
  01650:    	je     0x168c
  01656:    	xorps  xmm6,xmm6
  01659: 00 	movabs rax,0x8000000000000002
  01663:    	cmp    rdi,rax
  01666:    	je     0x169e
  0166c:    	mov    rax,rdi
  0166f:    	sar    rax,0x3f
  01673:    	add    rax,0x2
  01677:    	and    rdi,0xfffffffffffffffc
  0167b:    	or     rdi,rax
  0167e:    	rol    rdi,0x3d
  01682:    	movq   xmm6,rdi
  01687:    	jmp    0x169e
  0168c:    	call   0xfffdfe3c
  01691:    	test   rax,rax
  01694:    	je     0x32e36
  0169a:    	movq   xmm6,xmm0
  0169e:    	mulsd  xmm6,xmm2
:00108 %9 = %13 + %14                       [Float][Float]
  016a2:    	movq   xmm11,xmm3
  016a7:    	addsd  xmm11,xmm6
:00109 %13 = const[Vec]                     [Vec]
  016ac: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe1235]        # 0xfffe28e8
  016b3: 00 	cmp    rax,QWORD PTR [rip+0xdde]        # 0x2498
  016ba:    	jne    0x32ea6
  016c0: 00 	mov    rax,QWORD PTR [rip+0xdc1]        # 0x2488
  016c7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00110 %14 = %7
:00111 %15 = %8
:00112 %16 = %9
:00113 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  016ce:    	movq   xmm0,xmm9
  016d3:    	call   0xfffdff2f
  016d8: ff 	mov    QWORD PTR [rbp-0x98],rax
  016df:    	movq   xmm0,xmm10
  016e4:    	call   0xfffdff2f
  016e9: ff 	mov    QWORD PTR [rbp-0xa0],rax
  016f0:    	movq   xmm0,xmm11
  016f5:    	call   0xfffdff2f
  016fa: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01701: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01708: 00 	test   rdi,0x7
  0170f:    	jne    0x32f66
  01715:    	cmp    DWORD PTR [rdi+0x4],0x29
  01719:    	jne    0x32f66
  0171f: 26 	cmp    DWORD PTR [rip+0xfffffffffffe11bb],0x26        # 0xfffe28e1
  01726:    	jne    0x32f66
  0172c: 00 	mov    r9,0x0
  01733:    	sub    rsp,0x40
  01737:    	movq   QWORD PTR [rsp],xmm2
  0173c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01742:    	movq   QWORD PTR [rsp+0x10],xmm5
  01748:    	movq   QWORD PTR [rsp+0x18],xmm7
  0174e: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01755: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0175c: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01763: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0176a:    	mov    rdx,rdi
  0176d:    	mov    rax,QWORD PTR [rbx]
  01770:    	lea    rdi,[rsp-0x18]
  01775:    	mov    QWORD PTR [rdi],rax
  01778:    	mov    QWORD PTR [rbx],rdi
  0177b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01784:    	mov    QWORD PTR [rsp-0x38],rcx
  01789: ff 	lea    rcx,[rbp-0x98]
  01790: 00 	mov    r8,0x3
  01797:    	call   0x32fd4
  0179c:    	lea    rdi,[rbp-0x8]
  017a0:    	mov    QWORD PTR [rbx],rdi
  017a3:    	movq   xmm2,QWORD PTR [rsp]
  017a8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017ae:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017b4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  017ba: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  017c1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  017c8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  017cf: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  017d6:    	add    rsp,0x40
  017da: 31 	movabs r13,0x563184c7e400
  017e4:    	test   rax,rax
  017e7:    	je     0xfffdfe03
  017ed:    	mov    QWORD PTR [rbp-0x78],rax
:00114 
:00116 %13 = const[Ray]                     [Ray]
  017f1: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe10f0]        # 0xfffe28e8
  017f8: 00 	cmp    rax,QWORD PTR [rip+0xcb9]        # 0x24b8
  017ff:    	jne    0x33006
  01805: 00 	mov    rax,QWORD PTR [rip+0xc9c]        # 0x24a8
  0180c: ff 	mov    QWORD PTR [rbp-0x90],rax
:00117 %14 = dynvar(2, %7)
  01813:    	mov    rax,QWORD PTR [rbp-0x10]
  01817:    	mov    rax,QWORD PTR [rax]
  0181a:    	mov    rax,QWORD PTR [rax-0x50]
  0181e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00118 %15 = %10
  01825:    	mov    rax,QWORD PTR [rbp-0x78]
  01829: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00119 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01830: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01837: 00 	test   rdi,0x7
  0183e:    	jne    0x330ba
  01844:    	cmp    DWORD PTR [rdi+0x4],0x2f
  01848:    	jne    0x330ba
  0184e: 26 	cmp    DWORD PTR [rip+0xfffffffffffe108c],0x26        # 0xfffe28e1
  01855:    	jne    0x330ba
  0185b: 00 	mov    r9,0x0
  01862:    	sub    rsp,0x40
  01866:    	movq   QWORD PTR [rsp],xmm2
  0186b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01871:    	movq   QWORD PTR [rsp+0x10],xmm5
  01877:    	movq   QWORD PTR [rsp+0x18],xmm7
  0187d: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01884: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0188b: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01892: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01899:    	mov    rdx,rdi
  0189c:    	mov    rax,QWORD PTR [rbx]
  0189f:    	lea    rdi,[rsp-0x18]
  018a4:    	mov    QWORD PTR [rdi],rax
  018a7:    	mov    QWORD PTR [rbx],rdi
  018aa: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018b3:    	mov    QWORD PTR [rsp-0x38],rcx
  018b8: ff 	lea    rcx,[rbp-0x98]
  018bf: 00 	mov    r8,0x2
  018c6:    	call   0x33128
  018cb:    	lea    rdi,[rbp-0x8]
  018cf:    	mov    QWORD PTR [rbx],rdi
  018d2:    	movq   xmm2,QWORD PTR [rsp]
  018d7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018dd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018e3:    	movq   xmm7,QWORD PTR [rsp+0x18]
  018e9: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  018f0: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  018f7: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  018fe: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01905:    	add    rsp,0x40
  01909: 31 	movabs r13,0x563184c7e460
  01913:    	test   rax,rax
  01916:    	je     0xfffdfe03
  0191c:    	mov    QWORD PTR [rbp-0x80],rax
:00120 
:00122 %13 = const[Isect]                   [Isect]
  01920: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe0fc1]        # 0xfffe28e8
  01927: 00 	cmp    rax,QWORD PTR [rip+0xbaa]        # 0x24d8
  0192e:    	jne    0x3315a
  01934: 00 	mov    rax,QWORD PTR [rip+0xb8d]        # 0x24c8
  0193b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00123 %12 = %13.call new()                 [#<Class:Isect>]
  01942: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01949: 00 	test   rdi,0x7
  01950:    	jne    0x3320e
  01956:    	cmp    DWORD PTR [rdi+0x4],0x31
  0195a:    	jne    0x3320e
  01960: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0f7a],0x26        # 0xfffe28e1
  01967:    	jne    0x3320e
  0196d: 00 	mov    r9,0x0
  01974:    	sub    rsp,0x40
  01978:    	movq   QWORD PTR [rsp],xmm2
  0197d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01983:    	movq   QWORD PTR [rsp+0x10],xmm5
  01989:    	movq   QWORD PTR [rsp+0x18],xmm7
  0198f: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01996: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0199d: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  019a4: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  019ab:    	mov    rdx,rdi
  019ae:    	mov    rax,QWORD PTR [rbx]
  019b1:    	lea    rdi,[rsp-0x18]
  019b6:    	mov    QWORD PTR [rdi],rax
  019b9:    	mov    QWORD PTR [rbx],rdi
  019bc: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019c5:    	mov    QWORD PTR [rsp-0x38],rcx
  019ca: ff 	lea    rcx,[rbp-0x98]
  019d1: 00 	mov    r8,0x0
  019d8:    	call   0x3327c
  019dd:    	lea    rdi,[rbp-0x8]
  019e1:    	mov    QWORD PTR [rbx],rdi
  019e4:    	movq   xmm2,QWORD PTR [rsp]
  019e9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ef:    	movq   xmm5,QWORD PTR [rsp+0x10]
  019f5:    	movq   xmm7,QWORD PTR [rsp+0x18]
  019fb: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a02: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a09: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a10: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a17:    	add    rsp,0x40
  01a1b: 31 	movabs r13,0x563184c7e4a0
  01a25:    	test   rax,rax
  01a28:    	je     0xfffdfe03
  01a2e: ff 	mov    QWORD PTR [rbp-0x88],rax
:00124 
:00126 %13 = @spheres: Scene[IvarId(0)]
  01a35:    	mov    rdi,QWORD PTR [rbp-0x28]
  01a39:    	mov    rax,QWORD PTR [rdi+0x10]
  01a3d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00127 %14 = 0: i32
  01a44: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00128 %13 = %13.[%14]                      [Array][Integer]
  01a4f:    	sub    rsp,0x40
  01a53:    	movq   QWORD PTR [rsp],xmm2
  01a58:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a5e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01a64:    	movq   QWORD PTR [rsp+0x18],xmm7
  01a6a: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01a71: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01a78: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01a7f: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01a86: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01a8d: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01a94:    	mov    rdi,rbx
  01a97:    	mov    rsi,r12
  01a9a: 31 	movabs r8,0x563184c7e4d8
  01aa4: 31 	movabs rax,0x5631840b8230
  01aae:    	call   rax
  01ab0:    	movq   xmm2,QWORD PTR [rsp]
  01ab5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01abb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01ac1:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ac7: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01ace: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01ad5: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01adc: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01ae3:    	add    rsp,0x40
  01ae7: 31 	movabs r13,0x563184c7e4e0
  01af1:    	test   rax,rax
  01af4:    	je     0xfffdfe03
  01afa: ff 	mov    QWORD PTR [rbp-0x90],rax
:00129 %14 = %11
  01b01:    	mov    rax,QWORD PTR [rbp-0x80]
  01b05: ff 	mov    QWORD PTR [rbp-0x98],rax
:00130 %15 = %12
  01b0c: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b13: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00131 _ = %13.call intersect(%14; 2)       [Sphere]
  01b1a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b21: 00 	test   rdi,0x7
  01b28:    	jne    0x332ae
  01b2e:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01b32:    	jne    0x332ae
  01b38: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0da2],0x26        # 0xfffe28e1
  01b3f:    	jne    0x332ae
  01b45:    	sub    rsp,0x40
  01b49:    	movq   QWORD PTR [rsp],xmm2
  01b4e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b54:    	movq   QWORD PTR [rsp+0x10],xmm5
  01b5a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01b60: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01b67: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01b6e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01b75: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01b7c:    	mov    rax,QWORD PTR [rbx]
  01b7f:    	lea    rdi,[rsp-0x18]
  01b84:    	mov    QWORD PTR [rdi],rax
  01b87:    	mov    QWORD PTR [rbx],rdi
  01b8a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b93:    	mov    QWORD PTR [rsp-0x38],rcx
  01b98: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01b9f:    	mov    QWORD PTR [rsp-0x38],rax
  01ba4: 00 	mov    rdi,0x2
  01bab: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01bb2:    	mov    QWORD PTR [rsp-0x40],rax
  01bb7: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01bbe:    	mov    QWORD PTR [rsp-0x48],rax
  01bc3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bcc: 10 	movabs rax,0x1001000000045
  01bd6:    	mov    QWORD PTR [rsp-0x28],rax
  01bdb: 31 	movabs r13,0x563184c85400
  01be5:    	call   0xfffe34e0
  01bea:    	lea    rdi,[rbp-0x8]
  01bee:    	mov    QWORD PTR [rbx],rdi
  01bf1:    	movq   xmm2,QWORD PTR [rsp]
  01bf6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bfc:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c02:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c08: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c0f: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c16: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c1d: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c24:    	add    rsp,0x40
  01c28: 31 	movabs r13,0x563184c7e520
  01c32:    	test   rax,rax
  01c35:    	je     0xfffdfe03
:00132 
:00134 %13 = @spheres: Scene[IvarId(0)]
  01c3b:    	mov    rdi,QWORD PTR [rbp-0x28]
  01c3f:    	mov    rax,QWORD PTR [rdi+0x10]
  01c43: ff 	mov    QWORD PTR [rbp-0x90],rax
:00135 %14 = 1: i32
  01c4a: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00136 %13 = %13.[%14]                      [Array][Integer]
  01c55:    	sub    rsp,0x40
  01c59:    	movq   QWORD PTR [rsp],xmm2
  01c5e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c64:    	movq   QWORD PTR [rsp+0x10],xmm5
  01c6a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01c70: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01c77: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01c7e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01c85: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01c8c: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01c93: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01c9a:    	mov    rdi,rbx
  01c9d:    	mov    rsi,r12
  01ca0: 31 	movabs r8,0x563184c7e558
  01caa: 31 	movabs rax,0x5631840b8230
  01cb4:    	call   rax
  01cb6:    	movq   xmm2,QWORD PTR [rsp]
  01cbb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01cc1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01cc7:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ccd: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01cd4: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01cdb: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01ce2: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01ce9:    	add    rsp,0x40
  01ced: 31 	movabs r13,0x563184c7e560
  01cf7:    	test   rax,rax
  01cfa:    	je     0xfffdfe03
  01d00: ff 	mov    QWORD PTR [rbp-0x90],rax
:00137 %14 = %11
  01d07:    	mov    rax,QWORD PTR [rbp-0x80]
  01d0b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00138 %15 = %12
  01d12: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01d19: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00139 _ = %13.call intersect(%14; 2)       [Sphere]
  01d20: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01d27: 00 	test   rdi,0x7
  01d2e:    	jne    0x3331c
  01d34:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01d38:    	jne    0x3331c
  01d3e: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0b9c],0x26        # 0xfffe28e1
  01d45:    	jne    0x3331c
  01d4b:    	sub    rsp,0x40
  01d4f:    	movq   QWORD PTR [rsp],xmm2
  01d54:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d5a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01d60:    	movq   QWORD PTR [rsp+0x18],xmm7
  01d66: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01d6d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01d74: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01d7b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01d82:    	mov    rax,QWORD PTR [rbx]
  01d85:    	lea    rdi,[rsp-0x18]
  01d8a:    	mov    QWORD PTR [rdi],rax
  01d8d:    	mov    QWORD PTR [rbx],rdi
  01d90: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01d99:    	mov    QWORD PTR [rsp-0x38],rcx
  01d9e: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01da5:    	mov    QWORD PTR [rsp-0x38],rax
  01daa: 00 	mov    rdi,0x2
  01db1: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01db8:    	mov    QWORD PTR [rsp-0x40],rax
  01dbd: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01dc4:    	mov    QWORD PTR [rsp-0x48],rax
  01dc9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01dd2: 10 	movabs rax,0x1001000000045
  01ddc:    	mov    QWORD PTR [rsp-0x28],rax
  01de1: 31 	movabs r13,0x563184c85400
  01deb:    	call   0xfffe34e0
  01df0:    	lea    rdi,[rbp-0x8]
  01df4:    	mov    QWORD PTR [rbx],rdi
  01df7:    	movq   xmm2,QWORD PTR [rsp]
  01dfc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e02:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e08:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e0e: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e15: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e1c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e23: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e2a:    	add    rsp,0x40
  01e2e: 31 	movabs r13,0x563184c7e5a0
  01e38:    	test   rax,rax
  01e3b:    	je     0xfffdfe03
:00140 
:00142 %13 = @spheres: Scene[IvarId(0)]
  01e41:    	mov    rdi,QWORD PTR [rbp-0x28]
  01e45:    	mov    rax,QWORD PTR [rdi+0x10]
  01e49: ff 	mov    QWORD PTR [rbp-0x90],rax
:00143 %14 = 2: i32
  01e50: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00144 %13 = %13.[%14]                      [Array][Integer]
  01e5b:    	sub    rsp,0x40
  01e5f:    	movq   QWORD PTR [rsp],xmm2
  01e64:    	movq   QWORD PTR [rsp+0x8],xmm4
  01e6a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01e70:    	movq   QWORD PTR [rsp+0x18],xmm7
  01e76: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01e7d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01e84: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01e8b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01e92: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01e99: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01ea0:    	mov    rdi,rbx
  01ea3:    	mov    rsi,r12
  01ea6: 31 	movabs r8,0x563184c7e5d8
  01eb0: 31 	movabs rax,0x5631840b8230
  01eba:    	call   rax
  01ebc:    	movq   xmm2,QWORD PTR [rsp]
  01ec1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ec7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01ecd:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01ed3: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01eda: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01ee1: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01ee8: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01eef:    	add    rsp,0x40
  01ef3: 31 	movabs r13,0x563184c7e5e0
  01efd:    	test   rax,rax
  01f00:    	je     0xfffdfe03
  01f06: ff 	mov    QWORD PTR [rbp-0x90],rax
:00145 %14 = %11
  01f0d:    	mov    rax,QWORD PTR [rbp-0x80]
  01f11: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 %15 = %12
  01f18: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01f1f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00147 _ = %13.call intersect(%14; 2)       [Sphere]
  01f26: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01f2d: 00 	test   rdi,0x7
  01f34:    	jne    0x3338a
  01f3a:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01f3e:    	jne    0x3338a
  01f44: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0996],0x26        # 0xfffe28e1
  01f4b:    	jne    0x3338a
  01f51:    	sub    rsp,0x40
  01f55:    	movq   QWORD PTR [rsp],xmm2
  01f5a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01f60:    	movq   QWORD PTR [rsp+0x10],xmm5
  01f66:    	movq   QWORD PTR [rsp+0x18],xmm7
  01f6c: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01f73: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01f7a: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01f81: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01f88:    	mov    rax,QWORD PTR [rbx]
  01f8b:    	lea    rdi,[rsp-0x18]
  01f90:    	mov    QWORD PTR [rdi],rax
  01f93:    	mov    QWORD PTR [rbx],rdi
  01f96: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01f9f:    	mov    QWORD PTR [rsp-0x38],rcx
  01fa4: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01fab:    	mov    QWORD PTR [rsp-0x38],rax
  01fb0: 00 	mov    rdi,0x2
  01fb7: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01fbe:    	mov    QWORD PTR [rsp-0x40],rax
  01fc3: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01fca:    	mov    QWORD PTR [rsp-0x48],rax
  01fcf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01fd8: 10 	movabs rax,0x1001000000045
  01fe2:    	mov    QWORD PTR [rsp-0x28],rax
  01fe7: 31 	movabs r13,0x563184c85400
  01ff1:    	call   0xfffe34e0
  01ff6:    	lea    rdi,[rbp-0x8]
  01ffa:    	mov    QWORD PTR [rbx],rdi
  01ffd:    	movq   xmm2,QWORD PTR [rsp]
  02002:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02008:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0200e:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02014: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  0201b: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02022: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02029: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02030:    	add    rsp,0x40
  02034: 31 	movabs r13,0x563184c7e620
  0203e:    	test   rax,rax
  02041:    	je     0xfffdfe03
:00148 
:00150 %13 = @plane: Scene[IvarId(1)]
  02047:    	mov    rdi,QWORD PTR [rbp-0x28]
  0204b:    	mov    rax,QWORD PTR [rdi+0x18]
  0204f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00151 %14 = %11
  02056:    	mov    rax,QWORD PTR [rbp-0x80]
  0205a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00152 %15 = %12
  02061: ff 	mov    rax,QWORD PTR [rbp-0x88]
  02068: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00153 _ = %13.call intersect(%14; 2)       [Plane]
  0206f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02076: 00 	test   rdi,0x7
  0207d:    	jne    0x333f8
  02083:    	cmp    DWORD PTR [rdi+0x4],0x2c
  02087:    	jne    0x333f8
  0208d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe084d],0x26        # 0xfffe28e1
  02094:    	jne    0x333f8
  0209a:    	sub    rsp,0x40
  0209e:    	movq   QWORD PTR [rsp],xmm2
  020a3:    	movq   QWORD PTR [rsp+0x8],xmm4
  020a9:    	movq   QWORD PTR [rsp+0x10],xmm5
  020af:    	movq   QWORD PTR [rsp+0x18],xmm7
  020b5: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  020bc: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  020c3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  020ca: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  020d1:    	mov    rax,QWORD PTR [rbx]
  020d4:    	lea    rdi,[rsp-0x18]
  020d9:    	mov    QWORD PTR [rdi],rax
  020dc:    	mov    QWORD PTR [rbx],rdi
  020df: 00 	mov    QWORD PTR [rsp-0x20],0x0
  020e8:    	mov    QWORD PTR [rsp-0x38],rcx
  020ed: ff 	mov    rax,QWORD PTR [rbp-0x90]
  020f4:    	mov    QWORD PTR [rsp-0x38],rax
  020f9: 00 	mov    rdi,0x2
  02100: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02107:    	mov    QWORD PTR [rsp-0x40],rax
  0210c: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02113:    	mov    QWORD PTR [rsp-0x48],rax
  02118: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02121: 0e 	movabs rax,0x1000e00000047
  0212b:    	mov    QWORD PTR [rsp-0x28],rax
  02130: 31 	movabs r13,0x563184c872a0
  0213a:    	call   0xfffe3aac
  0213f:    	lea    rdi,[rbp-0x8]
  02143:    	mov    QWORD PTR [rbx],rdi
  02146:    	movq   xmm2,QWORD PTR [rsp]
  0214b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02151:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02157:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0215d: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02164: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0216b: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02172: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02179:    	add    rsp,0x40
  0217d: 31 	movabs r13,0x563184c7e680
  02187:    	test   rax,rax
  0218a:    	je     0xfffdfe03
:00154 
:00156 %13 = %12.call hit()                 [Isect]
  02190: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  02197: 00 	test   rdi,0x7
  0219e:    	jne    0x33466
  021a4:    	cmp    DWORD PTR [rdi+0x4],0x30
  021a8:    	jne    0x33466
  021ae: 26 	cmp    DWORD PTR [rip+0xfffffffffffe072c],0x26        # 0xfffe28e1
  021b5:    	jne    0x33466
  021bb:    	mov    esi,DWORD PTR [rip+0x323]        # 0x24e4
  021c1:    	cmp    esi,0xffffffff
  021c4:    	je     0x334d4
  021ca:    	cmp    WORD PTR [rdi+0x2],0x3
  021cf:    	jne    0x21e8
  021d5:    	cmp    esi,0x6
  021d8:    	jge    0x21e8
  021de:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  021e3:    	jmp    0x2262
  021e8:    	sub    rsp,0x40
  021ec:    	movq   QWORD PTR [rsp],xmm2
  021f1:    	movq   QWORD PTR [rsp+0x8],xmm4
  021f7:    	movq   QWORD PTR [rsp+0x10],xmm5
  021fd:    	movq   QWORD PTR [rsp+0x18],xmm7
  02203: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0220a: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02211: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02218: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0221f: 31 	movabs rax,0x563184053740
  02229:    	call   rax
  0222b:    	movq   xmm2,QWORD PTR [rsp]
  02230:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02236:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0223c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02242: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02249: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02250: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02257: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0225e:    	add    rsp,0x40
  02262: ff 	mov    QWORD PTR [rbp-0x90],rax
:00157 
:00159 condnotbr %13 =>:00165
  02269: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02270:    	or     rax,0x10
  02274:    	cmp    rax,0x14
  02278:    	je     0x2341
:00160 %13 = dynvar(2, %6)
  0227e:    	mov    rax,QWORD PTR [rbp-0x10]
  02282:    	mov    rax,QWORD PTR [rax]
  02285:    	mov    rax,QWORD PTR [rax-0x48]
  02289: ff 	mov    QWORD PTR [rbp-0x90],rax
:00161 %14 = literal[1.0]
  02290: 00 	movq   xmm3,QWORD PTR [rip+0x250]        # 0x24e8
  02298: 00 	movabs rax,0xff80000000000002
  022a2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00162 %13 = %13 + %14                      [Float][Float]
  022a9: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  022b0: 00 	test   rdi,0x1
  022b7:    	jne    0x3356b
  022bd: 00 	test   rdi,0x2
  022c4:    	je     0x2300
  022ca:    	xorps  xmm6,xmm6
  022cd: 00 	movabs rax,0x8000000000000002
  022d7:    	cmp    rdi,rax
  022da:    	je     0x2312
  022e0:    	mov    rax,rdi
  022e3:    	sar    rax,0x3f
  022e7:    	add    rax,0x2
  022eb:    	and    rdi,0xfffffffffffffffc
  022ef:    	or     rdi,rax
  022f2:    	rol    rdi,0x3d
  022f6:    	movq   xmm6,rdi
  022fb:    	jmp    0x2312
  02300:    	call   0xfffdfe3c
  02305:    	test   rax,rax
  02308:    	je     0x3356b
  0230e:    	movq   xmm6,xmm0
  02312:    	addsd  xmm6,xmm3
:00163 dynvar(2, %6) = %13
  02316:    	movq   xmm0,xmm6
  0231a:    	call   0xfffdff2f
  0231f: ff 	mov    QWORD PTR [rbp-0x90],rax
  02326:    	mov    rax,QWORD PTR [rbp-0x10]
  0232a:    	mov    rax,QWORD PTR [rax]
  0232d: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02334:    	mov    QWORD PTR [rax-0x48],rdi
:00164 ret %13
  02338: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0233f:    	leave  
  02340:    	ret    
:00165 %13 = literal[0.0]
  02341: 00 	movq   xmm3,QWORD PTR [rip+0x1af]        # 0x24f8
  02349: 00 	movabs rax,0x8000000000000002
  02353: ff 	mov    QWORD PTR [rbp-0x90],rax
:00166 ret %13
  0235a: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02361:    	leave  
  02362:    	ret    
==> start whole compile: intersect FuncId(71) self_class:Plane start:[00000] bytecode:0x563184c872a0
<== finished compile. elapsed:131.4µs
offset:Pos(141112) code: 6524 bytes  data: 372 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xa0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044:    	mov    rdi,QWORD PTR [rbp-0x28]
  00048: 00 	test   rdi,0x7
  0004f:    	jne    0x310d9
  00055:    	cmp    DWORD PTR [rdi+0x4],0x2c
  00059:    	jne    0x310d9
:00000 %7 = @p: Plane[IvarId(0)]
  0005f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00063:    	mov    rax,QWORD PTR [rdi+0x10]
  00067:    	mov    QWORD PTR [rbp-0x60],rax
:00001 %8 = @n: Plane[IvarId(1)]
  0006b:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006f:    	mov    rax,QWORD PTR [rdi+0x18]
  00073:    	mov    QWORD PTR [rbp-0x68],rax
:00002 %3 = %7.call vdot(%8; 1)             [Vec]
  00077:    	mov    rdi,QWORD PTR [rbp-0x60]
  0007b: 00 	test   rdi,0x7
  00082:    	jne    0x310e8
  00088:    	cmp    DWORD PTR [rdi+0x4],0x28
  0008c:    	jne    0x310e8
  00092: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0348],0x26        # 0xfffe03e1
  00099:    	jne    0x310e8
  0009f:    	mov    rax,QWORD PTR [rbx]
  000a2:    	lea    rdi,[rsp-0x18]
  000a7:    	mov    QWORD PTR [rdi],rax
  000aa:    	mov    QWORD PTR [rbx],rdi
  000ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000b6:    	mov    QWORD PTR [rsp-0x38],rcx
  000bb:    	mov    rax,QWORD PTR [rbp-0x60]
  000bf:    	mov    QWORD PTR [rsp-0x38],rax
  000c4: 00 	mov    rdi,0x1
  000cb:    	mov    rax,QWORD PTR [rbp-0x68]
  000cf:    	mov    QWORD PTR [rsp-0x40],rax
  000d4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  000dd: 05 	movabs rax,0x1000500000041
  000e7:    	mov    QWORD PTR [rsp-0x28],rax
  000ec: 31 	movabs r13,0x563184c66dc0
  000f6:    	call   0xfffe1104
  000fb:    	lea    rdi,[rbp-0x8]
  000ff:    	mov    QWORD PTR [rbx],rdi
  00102: 31 	movabs r13,0x563184c872e0
  0010c:    	test   rax,rax
  0010f:    	je     0xfffdd903
  00115:    	mov    QWORD PTR [rbp-0x40],rax
:00003 
:00005 %3 = neg %3                          [Float]
  00119:    	mov    rdi,QWORD PTR [rbp-0x40]
  0011d: 00 	test   rdi,0x1
  00124:    	jne    0x310f7
  0012a: 00 	test   rdi,0x2
  00131:    	je     0x16d
  00137:    	xorps  xmm2,xmm2
  0013a: 00 	movabs rax,0x8000000000000002
  00144:    	cmp    rdi,rax
  00147:    	je     0x17f
  0014d:    	mov    rax,rdi
  00150:    	sar    rax,0x3f
  00154:    	add    rax,0x2
  00158:    	and    rdi,0xfffffffffffffffc
  0015c:    	or     rdi,rax
  0015f:    	rol    rdi,0x3d
  00163:    	movq   xmm2,rdi
  00168:    	jmp    0x17f
  0016d:    	call   0xfffdd93c
  00172:    	test   rax,rax
  00175:    	je     0x310f7
  0017b:    	movq   xmm2,xmm0
  0017f: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1802]        # 0x1988
:00006 %7 = %1.call dir()                   [Ray]
  00186:    	mov    rdi,QWORD PTR [rbp-0x30]
  0018a: 00 	test   rdi,0x7
  00191:    	jne    0x31106
  00197:    	cmp    DWORD PTR [rdi+0x4],0x2e
  0019b:    	jne    0x31106
  001a1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0239],0x26        # 0xfffe03e1
  001a8:    	jne    0x31106
  001ae:    	mov    esi,DWORD PTR [rip+0x17e0]        # 0x1994
  001b4:    	cmp    esi,0xffffffff
  001b7:    	je     0x31122
  001bd:    	cmp    WORD PTR [rdi+0x2],0x3
  001c2:    	jne    0x1db
  001c8:    	cmp    esi,0x6
  001cb:    	jge    0x1db
  001d1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d6:    	jmp    0x1f9
  001db:    	sub    rsp,0x10
  001df:    	movq   QWORD PTR [rsp],xmm2
  001e4: 31 	movabs rax,0x563184053740
  001ee:    	call   rax
  001f0:    	movq   xmm2,QWORD PTR [rsp]
  001f5:    	add    rsp,0x10
  001f9:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = @n: Plane[IvarId(1)]
  001fd:    	mov    rdi,QWORD PTR [rbp-0x28]
  00201:    	mov    rax,QWORD PTR [rdi+0x18]
  00205:    	mov    QWORD PTR [rbp-0x68],rax
:00010 %4 = %7.call vdot(%8; 1)             [Vec]
  00209:    	mov    rdi,QWORD PTR [rbp-0x60]
  0020d: 00 	test   rdi,0x7
  00214:    	jne    0x3115d
  0021a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0021e:    	jne    0x3115d
  00224: 26 	cmp    DWORD PTR [rip+0xfffffffffffe01b6],0x26        # 0xfffe03e1
  0022b:    	jne    0x3115d
  00231:    	sub    rsp,0x10
  00235:    	movq   QWORD PTR [rsp],xmm2
  0023a:    	mov    rax,QWORD PTR [rbx]
  0023d:    	lea    rdi,[rsp-0x18]
  00242:    	mov    QWORD PTR [rdi],rax
  00245:    	mov    QWORD PTR [rbx],rdi
  00248: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00251:    	mov    QWORD PTR [rsp-0x38],rcx
  00256:    	mov    rax,QWORD PTR [rbp-0x60]
  0025a:    	mov    QWORD PTR [rsp-0x38],rax
  0025f: 00 	mov    rdi,0x1
  00266:    	mov    rax,QWORD PTR [rbp-0x68]
  0026a:    	mov    QWORD PTR [rsp-0x40],rax
  0026f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00278: 05 	movabs rax,0x1000500000041
  00282:    	mov    QWORD PTR [rsp-0x28],rax
  00287: 31 	movabs r13,0x563184c66dc0
  00291:    	call   0xfffe1104
  00296:    	lea    rdi,[rbp-0x8]
  0029a:    	mov    QWORD PTR [rbx],rdi
  0029d:    	movq   xmm2,QWORD PTR [rsp]
  002a2:    	add    rsp,0x10
  002a6: 31 	movabs r13,0x563184c87360
  002b0:    	test   rax,rax
  002b3:    	je     0xfffdd903
  002b9:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %5 = %4
  002bd:    	mov    rax,QWORD PTR [rbp-0x48]
  002c1:    	mov    QWORD PTR [rbp-0x50],rax
:00014 %7 = literal[0.0]
  002c5: 00 	movq   xmm3,QWORD PTR [rip+0x16cb]        # 0x1998
  002cd: 00 	movabs rax,0x8000000000000002
  002d7:    	mov    QWORD PTR [rbp-0x60],rax
:00015 _%7 = %4 < %7                        [Float][Float]
:00016 condnotbr _%7 =>:00020
  002db:    	mov    rdi,QWORD PTR [rbp-0x48]
  002df: 00 	test   rdi,0x1
  002e6:    	jne    0x31179
  002ec: 00 	test   rdi,0x2
  002f3:    	je     0x32f
  002f9:    	xorps  xmm4,xmm4
  002fc: 00 	movabs rax,0x8000000000000002
  00306:    	cmp    rdi,rax
  00309:    	je     0x341
  0030f:    	mov    rax,rdi
  00312:    	sar    rax,0x3f
  00316:    	add    rax,0x2
  0031a:    	and    rdi,0xfffffffffffffffc
  0031e:    	or     rdi,rax
  00321:    	rol    rdi,0x3d
  00325:    	movq   xmm4,rdi
  0032a:    	jmp    0x341
  0032f:    	call   0xfffdd93c
  00334:    	test   rax,rax
  00337:    	je     0x31179
  0033d:    	movq   xmm4,xmm0
  00341:    	ucomisd xmm4,xmm3
  00345:    	jae    0x31195
:00017 %5 = %4
:00018 %5 = neg %5                          [Float]
  0034b:    	movq   xmm5,xmm4
  0034f: 00 	xorps  xmm5,XMMWORD PTR [rip+0x1652]        # 0x19a8
:00019 br =>:00020
  00356:    	jmp    0x311bb
:00020 %7 = literal[1e-17]
  0035b: 00 	movq   xmm3,QWORD PTR [rip+0x1655]        # 0x19b8
  00363: aa 	movabs rax,0xe33877aa3236a4ba
  0036d:    	mov    QWORD PTR [rbp-0x60],rax
:00021 _%7 = %5 < %7                        [Float][Float]
:00022 condnotbr _%7 =>:00026
  00371:    	mov    rdi,QWORD PTR [rbp-0x50]
  00375: 00 	test   rdi,0x1
  0037c:    	jne    0x311ee
  00382: 00 	test   rdi,0x2
  00389:    	je     0x3c5
  0038f:    	xorps  xmm5,xmm5
  00392: 00 	movabs rax,0x8000000000000002
  0039c:    	cmp    rdi,rax
  0039f:    	je     0x3d7
  003a5:    	mov    rax,rdi
  003a8:    	sar    rax,0x3f
  003ac:    	add    rax,0x2
  003b0:    	and    rdi,0xfffffffffffffffc
  003b4:    	or     rdi,rax
  003b7:    	rol    rdi,0x3d
  003bb:    	movq   xmm5,rdi
  003c0:    	jmp    0x3d7
  003c5:    	call   0xfffdd93c
  003ca:    	test   rax,rax
  003cd:    	je     0x311ee
  003d3:    	movq   xmm5,xmm0
  003d7:    	ucomisd xmm5,xmm3
  003db:    	jae    0x3ef
:00023 %7 = nil
  003e1: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00024 ret %7
  003e9:    	mov    rax,QWORD PTR [rbp-0x60]
  003ed:    	leave  
  003ee:    	ret    
:00026 %8 = %1.call org()                   [Ray]
  003ef:    	mov    rdi,QWORD PTR [rbp-0x30]
  003f3: 00 	test   rdi,0x7
  003fa:    	jne    0x3120a
  00400:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00404:    	jne    0x3120a
  0040a: 26 	cmp    DWORD PTR [rip+0xfffffffffffdffd0],0x26        # 0xfffe03e1
  00411:    	jne    0x3120a
  00417:    	mov    esi,DWORD PTR [rip+0x15a7]        # 0x19c4
  0041d:    	cmp    esi,0xffffffff
  00420:    	je     0x31226
  00426:    	cmp    WORD PTR [rdi+0x2],0x3
  0042b:    	jne    0x444
  00431:    	cmp    esi,0x6
  00434:    	jge    0x444
  0043a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0043f:    	jmp    0x486
  00444:    	sub    rsp,0x20
  00448:    	movq   QWORD PTR [rsp],xmm2
  0044d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00453:    	movq   QWORD PTR [rsp+0x10],xmm4
  00459:    	movq   QWORD PTR [rsp+0x18],xmm5
  0045f: 31 	movabs rax,0x563184053740
  00469:    	call   rax
  0046b:    	movq   xmm2,QWORD PTR [rsp]
  00470:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00476:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0047c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00482:    	add    rsp,0x20
  00486:    	mov    QWORD PTR [rbp-0x68],rax
:00027 
:00029 %9 = @n: Plane[IvarId(1)]
  0048a:    	mov    rdi,QWORD PTR [rbp-0x28]
  0048e:    	mov    rax,QWORD PTR [rdi+0x18]
  00492:    	mov    QWORD PTR [rbp-0x70],rax
:00030 %7 = %8.call vdot(%9; 1)             [Vec]
  00496:    	mov    rdi,QWORD PTR [rbp-0x68]
  0049a: 00 	test   rdi,0x7
  004a1:    	jne    0x31285
  004a7:    	cmp    DWORD PTR [rdi+0x4],0x28
  004ab:    	jne    0x31285
  004b1: 26 	cmp    DWORD PTR [rip+0xfffffffffffdff29],0x26        # 0xfffe03e1
  004b8:    	jne    0x31285
  004be:    	sub    rsp,0x20
  004c2:    	movq   QWORD PTR [rsp],xmm2
  004c7:    	movq   QWORD PTR [rsp+0x8],xmm4
  004cd:    	movq   QWORD PTR [rsp+0x10],xmm5
  004d3:    	mov    rax,QWORD PTR [rbx]
  004d6:    	lea    rdi,[rsp-0x18]
  004db:    	mov    QWORD PTR [rdi],rax
  004de:    	mov    QWORD PTR [rbx],rdi
  004e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  004ea:    	mov    QWORD PTR [rsp-0x38],rcx
  004ef:    	mov    rax,QWORD PTR [rbp-0x68]
  004f3:    	mov    QWORD PTR [rsp-0x38],rax
  004f8: 00 	mov    rdi,0x1
  004ff:    	mov    rax,QWORD PTR [rbp-0x70]
  00503:    	mov    QWORD PTR [rsp-0x40],rax
  00508: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00511: 05 	movabs rax,0x1000500000041
  0051b:    	mov    QWORD PTR [rsp-0x28],rax
  00520: 31 	movabs r13,0x563184c66dc0
  0052a:    	call   0xfffe1104
  0052f:    	lea    rdi,[rbp-0x8]
  00533:    	mov    QWORD PTR [rbx],rdi
  00536:    	movq   xmm2,QWORD PTR [rsp]
  0053b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00541:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00547:    	add    rsp,0x20
  0054b: 31 	movabs r13,0x563184c874a0
  00555:    	test   rax,rax
  00558:    	je     0xfffdd903
  0055e:    	mov    QWORD PTR [rbp-0x60],rax
:00031 
:00033 %7 = %7 + %3                         [Float][Float]
  00562:    	mov    rdi,QWORD PTR [rbp-0x60]
  00566: 00 	test   rdi,0x1
  0056d:    	jne    0x312a1
  00573: 00 	test   rdi,0x2
  0057a:    	je     0x5b6
  00580:    	xorps  xmm3,xmm3
  00583: 00 	movabs rax,0x8000000000000002
  0058d:    	cmp    rdi,rax
  00590:    	je     0x5c8
  00596:    	mov    rax,rdi
  00599:    	sar    rax,0x3f
  0059d:    	add    rax,0x2
  005a1:    	and    rdi,0xfffffffffffffffc
  005a5:    	or     rdi,rax
  005a8:    	rol    rdi,0x3d
  005ac:    	movq   xmm3,rdi
  005b1:    	jmp    0x5c8
  005b6:    	call   0xfffdd93c
  005bb:    	test   rax,rax
  005be:    	je     0x312a1
  005c4:    	movq   xmm3,xmm0
  005c8:    	addsd  xmm3,xmm2
:00034 %7 = neg %7                          [Float]
  005cc: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13f5]        # 0x19c8
:00035 %6 = %7 / %4                         [Float][Float]
  005d3:    	movq   xmm6,xmm3
  005d7:    	movq   rax,xmm4
  005dc:    	test   rax,rax
  005df:    	je     0xfffdd928
  005e5:    	divsd  xmm6,xmm4
:00036 %7 = literal[0.0]
  005e9: 00 	movq   xmm3,QWORD PTR [rip+0x13e7]        # 0x19d8
  005f1: 00 	movabs rax,0x8000000000000002
  005fb:    	mov    QWORD PTR [rbp-0x60],rax
:00037 _%7 = %6 > %7                        [Float][Float]
:00038 condnotbr _%7 =>:00105
  005ff:    	ucomisd xmm6,xmm3
  00603:    	jbe    0x3221a
:00039 %7 = %2.call t()                     [<INVALID>]
  00609: 01 	sub    DWORD PTR [rip+0x13d0],0x1        # 0x19e0
  00610:    	je     0x312e6
  00616:    	sub    rsp,0x20
  0061a:    	movq   QWORD PTR [rsp],xmm2
  0061f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00625:    	movq   QWORD PTR [rsp+0x10],xmm5
  0062b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00631:    	mov    rdi,QWORD PTR [rbp-0x38]
  00635: 31 	movabs rax,0x5631840958d0
  0063f:    	call   rax
  00641:    	mov    r15d,eax
  00644: 00 	cmp    r15d,DWORD PTR [rip+0x139d]        # 0x19e8
  0064b:    	jne    0x31308
  00651:    	mov    eax,DWORD PTR [rip+0xfffffffffffdfd8a]        # 0xfffe03e1
  00657:    	cmp    DWORD PTR [rip+0x1387],eax        # 0x19e4
  0065d:    	jne    0x31308
  00663:    	mov    rax,QWORD PTR [rbx]
  00666:    	lea    rdi,[rsp-0x18]
  0066b:    	mov    QWORD PTR [rdi],rax
  0066e:    	mov    QWORD PTR [rbx],rdi
  00671: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0067a:    	mov    QWORD PTR [rsp-0x38],rcx
  0067f:    	mov    rax,QWORD PTR [rbp-0x38]
  00683:    	mov    QWORD PTR [rsp-0x38],rax
  00688: 00 	mov    rdi,0x0
  0068f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00698: 00 	movabs rax,0x0
  006a2:    	mov    QWORD PTR [rsp-0x28],rax
  006a7: 00 	movabs r13,0x0
  006b1:    	call   0xfffdd8c8
  006b6:    	lea    rdi,[rbp-0x8]
  006ba:    	mov    QWORD PTR [rbx],rdi
  006bd:    	movq   xmm2,QWORD PTR [rsp]
  006c2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  006c8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006ce:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006d4:    	add    rsp,0x20
  006d8:    	test   rax,rax
  006db:    	je     0x31374
  006e1:    	mov    QWORD PTR [rbp-0x60],rax
:00040 
:00042 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00043 condnotbr _%7 =>:00105
  006e5:    	movq   xmm0,xmm6
  006e9:    	call   0xfffdda2f
  006ee:    	mov    QWORD PTR [rbp-0x58],rax
  006f2:    	mov    rdi,QWORD PTR [rbp-0x58]
  006f6:    	mov    rsi,QWORD PTR [rbp-0x60]
  006fa: 00 	test   rdi,0x1
  00701:    	je     0x31383
  00707: 00 	test   rsi,0x1
  0070e:    	je     0x31383
  00714:    	cmp    rdi,rsi
  00717:    	jge    0x3224d
:00044 %7 = literal[true]
  0071d: 00 	mov    rax,0x1c
  00724:    	mov    QWORD PTR [rbp-0x60],rax
:00045 _ = %2.call hit=(%7; 1)              [<INVALID>]
  00728: 01 	sub    DWORD PTR [rip+0x12bd],0x1        # 0x19ec
  0072f:    	je     0x313f4
  00735:    	sub    rsp,0x20
  00739:    	movq   QWORD PTR [rsp],xmm2
  0073e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00744:    	movq   QWORD PTR [rsp+0x10],xmm5
  0074a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00750:    	mov    rdi,QWORD PTR [rbp-0x38]
  00754: 31 	movabs rax,0x5631840958d0
  0075e:    	call   rax
  00760:    	mov    r15d,eax
  00763: 00 	cmp    r15d,DWORD PTR [rip+0x128a]        # 0x19f4
  0076a:    	jne    0x31416
  00770:    	mov    eax,DWORD PTR [rip+0xfffffffffffdfc6b]        # 0xfffe03e1
  00776:    	cmp    DWORD PTR [rip+0x1274],eax        # 0x19f0
  0077c:    	jne    0x31416
  00782:    	mov    rax,QWORD PTR [rbx]
  00785:    	lea    rdi,[rsp-0x18]
  0078a:    	mov    QWORD PTR [rdi],rax
  0078d:    	mov    QWORD PTR [rbx],rdi
  00790: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00799:    	mov    QWORD PTR [rsp-0x38],rcx
  0079e:    	mov    rax,QWORD PTR [rbp-0x38]
  007a2:    	mov    QWORD PTR [rsp-0x38],rax
  007a7: 00 	mov    rdi,0x1
  007ae:    	mov    rax,QWORD PTR [rbp-0x60]
  007b2:    	mov    QWORD PTR [rsp-0x40],rax
  007b7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007c0: 00 	movabs rax,0x0
  007ca:    	mov    QWORD PTR [rsp-0x28],rax
  007cf: 00 	movabs r13,0x0
  007d9:    	call   0xfffdd8c8
  007de:    	lea    rdi,[rbp-0x8]
  007e2:    	mov    QWORD PTR [rbx],rdi
  007e5:    	movq   xmm2,QWORD PTR [rsp]
  007ea:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007f0:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007f6:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007fc:    	add    rsp,0x20
  00800:    	test   rax,rax
  00803:    	je     0x31482
:00046 
:00048 _ = %2.call t=(%6; 1)                [<INVALID>]
  00809: 01 	sub    DWORD PTR [rip+0x11e8],0x1        # 0x19f8
  00810:    	je     0x314ad
  00816:    	sub    rsp,0x20
  0081a:    	movq   QWORD PTR [rsp],xmm2
  0081f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00825:    	movq   QWORD PTR [rsp+0x10],xmm5
  0082b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00831:    	mov    rdi,QWORD PTR [rbp-0x38]
  00835: 31 	movabs rax,0x5631840958d0
  0083f:    	call   rax
  00841:    	mov    r15d,eax
  00844: 00 	cmp    r15d,DWORD PTR [rip+0x11b5]        # 0x1a00
  0084b:    	jne    0x314cf
  00851:    	mov    eax,DWORD PTR [rip+0xfffffffffffdfb8a]        # 0xfffe03e1
  00857:    	cmp    DWORD PTR [rip+0x119f],eax        # 0x19fc
  0085d:    	jne    0x314cf
  00863:    	mov    rax,QWORD PTR [rbx]
  00866:    	lea    rdi,[rsp-0x18]
  0086b:    	mov    QWORD PTR [rdi],rax
  0086e:    	mov    QWORD PTR [rbx],rdi
  00871: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0087a:    	mov    QWORD PTR [rsp-0x38],rcx
  0087f:    	mov    rax,QWORD PTR [rbp-0x38]
  00883:    	mov    QWORD PTR [rsp-0x38],rax
  00888: 00 	mov    rdi,0x1
  0088f:    	mov    rax,QWORD PTR [rbp-0x58]
  00893:    	mov    QWORD PTR [rsp-0x40],rax
  00898: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008a1: 00 	movabs rax,0x0
  008ab:    	mov    QWORD PTR [rsp-0x28],rax
  008b0: 00 	movabs r13,0x0
  008ba:    	call   0xfffdd8c8
  008bf:    	lea    rdi,[rbp-0x8]
  008c3:    	mov    QWORD PTR [rbx],rdi
  008c6:    	movq   xmm2,QWORD PTR [rsp]
  008cb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  008d1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008d7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008dd:    	add    rsp,0x20
  008e1:    	test   rax,rax
  008e4:    	je     0x3153b
:00049 
:00051 %7 = @n: <INVALID>[IvarId(0)]
  008ea:    	mov    rdi,QWORD PTR [rbp-0x28]
  008ee:    	sub    rsp,0x20
  008f2:    	movq   QWORD PTR [rsp],xmm2
  008f7:    	movq   QWORD PTR [rsp+0x8],xmm4
  008fd:    	movq   QWORD PTR [rsp+0x10],xmm5
  00903:    	movq   QWORD PTR [rsp+0x18],xmm6
  00909: 00 	mov    rsi,0x8c
  00910:    	mov    rdx,r12
  00913: 31 	movabs rax,0x5631840b8770
  0091d:    	call   rax
  0091f:    	movq   xmm2,QWORD PTR [rsp]
  00924:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0092a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00930:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00936:    	add    rsp,0x20
  0093a:    	mov    QWORD PTR [rbp-0x60],rax
:00052 _ = %2.call n=(%7; 1)                [<INVALID>]
  0093e: 01 	sub    DWORD PTR [rip+0x10bf],0x1        # 0x1a04
  00945:    	je     0x31566
  0094b:    	sub    rsp,0x20
  0094f:    	movq   QWORD PTR [rsp],xmm2
  00954:    	movq   QWORD PTR [rsp+0x8],xmm4
  0095a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00960:    	movq   QWORD PTR [rsp+0x18],xmm6
  00966:    	mov    rdi,QWORD PTR [rbp-0x38]
  0096a: 31 	movabs rax,0x5631840958d0
  00974:    	call   rax
  00976:    	mov    r15d,eax
  00979: 00 	cmp    r15d,DWORD PTR [rip+0x108c]        # 0x1a0c
  00980:    	jne    0x31588
  00986:    	mov    eax,DWORD PTR [rip+0xfffffffffffdfa55]        # 0xfffe03e1
  0098c:    	cmp    DWORD PTR [rip+0x1076],eax        # 0x1a08
  00992:    	jne    0x31588
  00998:    	mov    rax,QWORD PTR [rbx]
  0099b:    	lea    rdi,[rsp-0x18]
  009a0:    	mov    QWORD PTR [rdi],rax
  009a3:    	mov    QWORD PTR [rbx],rdi
  009a6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009af:    	mov    QWORD PTR [rsp-0x38],rcx
  009b4:    	mov    rax,QWORD PTR [rbp-0x38]
  009b8:    	mov    QWORD PTR [rsp-0x38],rax
  009bd: 00 	mov    rdi,0x1
  009c4:    	mov    rax,QWORD PTR [rbp-0x60]
  009c8:    	mov    QWORD PTR [rsp-0x40],rax
  009cd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  009d6: 00 	movabs rax,0x0
  009e0:    	mov    QWORD PTR [rsp-0x28],rax
  009e5: 00 	movabs r13,0x0
  009ef:    	call   0xfffdd8c8
  009f4:    	lea    rdi,[rbp-0x8]
  009f8:    	mov    QWORD PTR [rbx],rdi
  009fb:    	movq   xmm2,QWORD PTR [rsp]
  00a00:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a06:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a0c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a12:    	add    rsp,0x20
  00a16:    	test   rax,rax
  00a19:    	je     0x315f4
:00053 
:00055 %8 = const[Vec]                      [<INVALID>]
  00a1f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdf9c2]        # 0xfffe03e8
  00a26: 00 	cmp    rax,QWORD PTR [rip+0xffb]        # 0x1a28
  00a2d:    	jne    0x31603
  00a33: 00 	mov    rax,QWORD PTR [rip+0xfde]        # 0x1a18
  00a3a:    	mov    QWORD PTR [rbp-0x68],rax
:00056 %10 = %1.call org()                  [<INVALID>]
  00a3e: 01 	sub    DWORD PTR [rip+0xfeb],0x1        # 0x1a30
  00a45:    	je     0x3169b
  00a4b:    	sub    rsp,0x20
  00a4f:    	movq   QWORD PTR [rsp],xmm2
  00a54:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a5a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a60:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a66:    	mov    rdi,QWORD PTR [rbp-0x30]
  00a6a: 31 	movabs rax,0x5631840958d0
  00a74:    	call   rax
  00a76:    	mov    r15d,eax
  00a79: 00 	cmp    r15d,DWORD PTR [rip+0xfb8]        # 0x1a38
  00a80:    	jne    0x316bd
  00a86:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf955]        # 0xfffe03e1
  00a8c:    	cmp    DWORD PTR [rip+0xfa2],eax        # 0x1a34
  00a92:    	jne    0x316bd
  00a98:    	mov    rax,QWORD PTR [rbx]
  00a9b:    	lea    rdi,[rsp-0x18]
  00aa0:    	mov    QWORD PTR [rdi],rax
  00aa3:    	mov    QWORD PTR [rbx],rdi
  00aa6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00aaf:    	mov    QWORD PTR [rsp-0x38],rcx
  00ab4:    	mov    rax,QWORD PTR [rbp-0x30]
  00ab8:    	mov    QWORD PTR [rsp-0x38],rax
  00abd: 00 	mov    rdi,0x0
  00ac4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00acd: 00 	movabs rax,0x0
  00ad7:    	mov    QWORD PTR [rsp-0x28],rax
  00adc: 00 	movabs r13,0x0
  00ae6:    	call   0xfffdd8c8
  00aeb:    	lea    rdi,[rbp-0x8]
  00aef:    	mov    QWORD PTR [rbx],rdi
  00af2:    	movq   xmm2,QWORD PTR [rsp]
  00af7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00afd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b03:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b09:    	add    rsp,0x20
  00b0d:    	test   rax,rax
  00b10:    	je     0x31729
  00b16:    	mov    QWORD PTR [rbp-0x78],rax
:00057 
:00059 %9 = %10.call x()                    [<INVALID>]
  00b1a: 01 	sub    DWORD PTR [rip+0xf1b],0x1        # 0x1a3c
  00b21:    	je     0x31754
  00b27:    	sub    rsp,0x20
  00b2b:    	movq   QWORD PTR [rsp],xmm2
  00b30:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b36:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b3c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b42:    	mov    rdi,QWORD PTR [rbp-0x78]
  00b46: 31 	movabs rax,0x5631840958d0
  00b50:    	call   rax
  00b52:    	mov    r15d,eax
  00b55: 00 	cmp    r15d,DWORD PTR [rip+0xee8]        # 0x1a44
  00b5c:    	jne    0x31776
  00b62:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf879]        # 0xfffe03e1
  00b68:    	cmp    DWORD PTR [rip+0xed2],eax        # 0x1a40
  00b6e:    	jne    0x31776
  00b74:    	mov    rax,QWORD PTR [rbx]
  00b77:    	lea    rdi,[rsp-0x18]
  00b7c:    	mov    QWORD PTR [rdi],rax
  00b7f:    	mov    QWORD PTR [rbx],rdi
  00b82: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b8b:    	mov    QWORD PTR [rsp-0x38],rcx
  00b90:    	mov    rax,QWORD PTR [rbp-0x78]
  00b94:    	mov    QWORD PTR [rsp-0x38],rax
  00b99: 00 	mov    rdi,0x0
  00ba0: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ba9: 00 	movabs rax,0x0
  00bb3:    	mov    QWORD PTR [rsp-0x28],rax
  00bb8: 00 	movabs r13,0x0
  00bc2:    	call   0xfffdd8c8
  00bc7:    	lea    rdi,[rbp-0x8]
  00bcb:    	mov    QWORD PTR [rbx],rdi
  00bce:    	movq   xmm2,QWORD PTR [rsp]
  00bd3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00bd9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bdf:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00be5:    	add    rsp,0x20
  00be9:    	test   rax,rax
  00bec:    	je     0x317e2
  00bf2:    	mov    QWORD PTR [rbp-0x70],rax
:00060 
:00062 %11 = %1.call dir()                  [<INVALID>]
  00bf6: 01 	sub    DWORD PTR [rip+0xe4b],0x1        # 0x1a48
  00bfd:    	je     0x3180d
  00c03:    	sub    rsp,0x20
  00c07:    	movq   QWORD PTR [rsp],xmm2
  00c0c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c12:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c18:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c1e:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c22: 31 	movabs rax,0x5631840958d0
  00c2c:    	call   rax
  00c2e:    	mov    r15d,eax
  00c31: 00 	cmp    r15d,DWORD PTR [rip+0xe18]        # 0x1a50
  00c38:    	jne    0x3182f
  00c3e:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf79d]        # 0xfffe03e1
  00c44:    	cmp    DWORD PTR [rip+0xe02],eax        # 0x1a4c
  00c4a:    	jne    0x3182f
  00c50:    	mov    rax,QWORD PTR [rbx]
  00c53:    	lea    rdi,[rsp-0x18]
  00c58:    	mov    QWORD PTR [rdi],rax
  00c5b:    	mov    QWORD PTR [rbx],rdi
  00c5e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c67:    	mov    QWORD PTR [rsp-0x38],rcx
  00c6c:    	mov    rax,QWORD PTR [rbp-0x30]
  00c70:    	mov    QWORD PTR [rsp-0x38],rax
  00c75: 00 	mov    rdi,0x0
  00c7c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c85: 00 	movabs rax,0x0
  00c8f:    	mov    QWORD PTR [rsp-0x28],rax
  00c94: 00 	movabs r13,0x0
  00c9e:    	call   0xfffdd8c8
  00ca3:    	lea    rdi,[rbp-0x8]
  00ca7:    	mov    QWORD PTR [rbx],rdi
  00caa:    	movq   xmm2,QWORD PTR [rsp]
  00caf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00cb5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00cbb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00cc1:    	add    rsp,0x20
  00cc5:    	test   rax,rax
  00cc8:    	je     0x3189b
  00cce:    	mov    QWORD PTR [rbp-0x80],rax
:00063 
:00065 %10 = %11.call x()                   [<INVALID>]
  00cd2: 01 	sub    DWORD PTR [rip+0xd7b],0x1        # 0x1a54
  00cd9:    	je     0x318c6
  00cdf:    	sub    rsp,0x20
  00ce3:    	movq   QWORD PTR [rsp],xmm2
  00ce8:    	movq   QWORD PTR [rsp+0x8],xmm4
  00cee:    	movq   QWORD PTR [rsp+0x10],xmm5
  00cf4:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cfa:    	mov    rdi,QWORD PTR [rbp-0x80]
  00cfe: 31 	movabs rax,0x5631840958d0
  00d08:    	call   rax
  00d0a:    	mov    r15d,eax
  00d0d: 00 	cmp    r15d,DWORD PTR [rip+0xd48]        # 0x1a5c
  00d14:    	jne    0x318e8
  00d1a:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf6c1]        # 0xfffe03e1
  00d20:    	cmp    DWORD PTR [rip+0xd32],eax        # 0x1a58
  00d26:    	jne    0x318e8
  00d2c:    	mov    rax,QWORD PTR [rbx]
  00d2f:    	lea    rdi,[rsp-0x18]
  00d34:    	mov    QWORD PTR [rdi],rax
  00d37:    	mov    QWORD PTR [rbx],rdi
  00d3a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d43:    	mov    QWORD PTR [rsp-0x38],rcx
  00d48:    	mov    rax,QWORD PTR [rbp-0x80]
  00d4c:    	mov    QWORD PTR [rsp-0x38],rax
  00d51: 00 	mov    rdi,0x0
  00d58: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d61: 00 	movabs rax,0x0
  00d6b:    	mov    QWORD PTR [rsp-0x28],rax
  00d70: 00 	movabs r13,0x0
  00d7a:    	call   0xfffdd8c8
  00d7f:    	lea    rdi,[rbp-0x8]
  00d83:    	mov    QWORD PTR [rbx],rdi
  00d86:    	movq   xmm2,QWORD PTR [rsp]
  00d8b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d91:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d97:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d9d:    	add    rsp,0x20
  00da1:    	test   rax,rax
  00da4:    	je     0x31954
  00daa:    	mov    QWORD PTR [rbp-0x78],rax
:00066 
:00068 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00dae: 01 	sub    DWORD PTR [rip+0xcab],0x1        # 0x1a60
  00db5:    	je     0x3197f
  00dbb:    	mov    rdi,QWORD PTR [rbp-0x58]
  00dbf:    	mov    rsi,QWORD PTR [rbp-0x78]
  00dc3:    	sub    rsp,0x20
  00dc7:    	movq   QWORD PTR [rsp],xmm2
  00dcc:    	movq   QWORD PTR [rsp+0x8],xmm4
  00dd2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00dd8:    	movq   QWORD PTR [rsp+0x18],xmm6
  00dde:    	mov    rdx,rdi
  00de1:    	mov    rcx,rsi
  00de4:    	mov    rdi,rbx
  00de7:    	mov    rsi,r12
  00dea: 31 	movabs rax,0x563184089e00
  00df4:    	call   rax
  00df6:    	movq   xmm2,QWORD PTR [rsp]
  00dfb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e01:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e07:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e0d:    	add    rsp,0x20
  00e11: 31 	movabs r13,0x563184c876f0
  00e1b:    	test   rax,rax
  00e1e:    	je     0xfffdd903
  00e24:    	mov    QWORD PTR [rbp-0x78],rax
:00069 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00e28: 01 	sub    DWORD PTR [rip+0xc35],0x1        # 0x1a64
  00e2f:    	je     0x319bd
  00e35:    	mov    rdi,QWORD PTR [rbp-0x70]
  00e39:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e3d:    	sub    rsp,0x20
  00e41:    	movq   QWORD PTR [rsp],xmm2
  00e46:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e4c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e52:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e58:    	mov    rdx,rdi
  00e5b:    	mov    rcx,rsi
  00e5e:    	mov    rdi,rbx
  00e61:    	mov    rsi,r12
  00e64: 31 	movabs rax,0x563184087f80
  00e6e:    	call   rax
  00e70:    	movq   xmm2,QWORD PTR [rsp]
  00e75:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e7b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e81:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e87:    	add    rsp,0x20
  00e8b: 31 	movabs r13,0x563184c87700
  00e95:    	test   rax,rax
  00e98:    	je     0xfffdd903
  00e9e:    	mov    QWORD PTR [rbp-0x70],rax
:00070 %11 = %1.call org()                  [<INVALID>]
  00ea2: 01 	sub    DWORD PTR [rip+0xbbf],0x1        # 0x1a68
  00ea9:    	je     0x319fb
  00eaf:    	sub    rsp,0x20
  00eb3:    	movq   QWORD PTR [rsp],xmm2
  00eb8:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ebe:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ec4:    	movq   QWORD PTR [rsp+0x18],xmm6
  00eca:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ece: 31 	movabs rax,0x5631840958d0
  00ed8:    	call   rax
  00eda:    	mov    r15d,eax
  00edd: 00 	cmp    r15d,DWORD PTR [rip+0xb8c]        # 0x1a70
  00ee4:    	jne    0x31a1d
  00eea:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf4f1]        # 0xfffe03e1
  00ef0:    	cmp    DWORD PTR [rip+0xb76],eax        # 0x1a6c
  00ef6:    	jne    0x31a1d
  00efc:    	mov    rax,QWORD PTR [rbx]
  00eff:    	lea    rdi,[rsp-0x18]
  00f04:    	mov    QWORD PTR [rdi],rax
  00f07:    	mov    QWORD PTR [rbx],rdi
  00f0a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f13:    	mov    QWORD PTR [rsp-0x38],rcx
  00f18:    	mov    rax,QWORD PTR [rbp-0x30]
  00f1c:    	mov    QWORD PTR [rsp-0x38],rax
  00f21: 00 	mov    rdi,0x0
  00f28: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f31: 00 	movabs rax,0x0
  00f3b:    	mov    QWORD PTR [rsp-0x28],rax
  00f40: 00 	movabs r13,0x0
  00f4a:    	call   0xfffdd8c8
  00f4f:    	lea    rdi,[rbp-0x8]
  00f53:    	mov    QWORD PTR [rbx],rdi
  00f56:    	movq   xmm2,QWORD PTR [rsp]
  00f5b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f61:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f67:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f6d:    	add    rsp,0x20
  00f71:    	test   rax,rax
  00f74:    	je     0x31a89
  00f7a:    	mov    QWORD PTR [rbp-0x80],rax
:00071 
:00073 %10 = %11.call y()                   [<INVALID>]
  00f7e: 01 	sub    DWORD PTR [rip+0xaef],0x1        # 0x1a74
  00f85:    	je     0x31ab4
  00f8b:    	sub    rsp,0x20
  00f8f:    	movq   QWORD PTR [rsp],xmm2
  00f94:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f9a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00fa0:    	movq   QWORD PTR [rsp+0x18],xmm6
  00fa6:    	mov    rdi,QWORD PTR [rbp-0x80]
  00faa: 31 	movabs rax,0x5631840958d0
  00fb4:    	call   rax
  00fb6:    	mov    r15d,eax
  00fb9: 00 	cmp    r15d,DWORD PTR [rip+0xabc]        # 0x1a7c
  00fc0:    	jne    0x31ad6
  00fc6:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf415]        # 0xfffe03e1
  00fcc:    	cmp    DWORD PTR [rip+0xaa6],eax        # 0x1a78
  00fd2:    	jne    0x31ad6
  00fd8:    	mov    rax,QWORD PTR [rbx]
  00fdb:    	lea    rdi,[rsp-0x18]
  00fe0:    	mov    QWORD PTR [rdi],rax
  00fe3:    	mov    QWORD PTR [rbx],rdi
  00fe6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fef:    	mov    QWORD PTR [rsp-0x38],rcx
  00ff4:    	mov    rax,QWORD PTR [rbp-0x80]
  00ff8:    	mov    QWORD PTR [rsp-0x38],rax
  00ffd: 00 	mov    rdi,0x0
  01004: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0100d: 00 	movabs rax,0x0
  01017:    	mov    QWORD PTR [rsp-0x28],rax
  0101c: 00 	movabs r13,0x0
  01026:    	call   0xfffdd8c8
  0102b:    	lea    rdi,[rbp-0x8]
  0102f:    	mov    QWORD PTR [rbx],rdi
  01032:    	movq   xmm2,QWORD PTR [rsp]
  01037:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0103d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01043:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01049:    	add    rsp,0x20
  0104d:    	test   rax,rax
  01050:    	je     0x31b42
  01056:    	mov    QWORD PTR [rbp-0x78],rax
:00074 
:00076 %12 = %1.call dir()                  [<INVALID>]
  0105a: 01 	sub    DWORD PTR [rip+0xa1f],0x1        # 0x1a80
  01061:    	je     0x31b6d
  01067:    	sub    rsp,0x20
  0106b:    	movq   QWORD PTR [rsp],xmm2
  01070:    	movq   QWORD PTR [rsp+0x8],xmm4
  01076:    	movq   QWORD PTR [rsp+0x10],xmm5
  0107c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01082:    	mov    rdi,QWORD PTR [rbp-0x30]
  01086: 31 	movabs rax,0x5631840958d0
  01090:    	call   rax
  01092:    	mov    r15d,eax
  01095: 00 	cmp    r15d,DWORD PTR [rip+0x9ec]        # 0x1a88
  0109c:    	jne    0x31b8f
  010a2:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf339]        # 0xfffe03e1
  010a8:    	cmp    DWORD PTR [rip+0x9d6],eax        # 0x1a84
  010ae:    	jne    0x31b8f
  010b4:    	mov    rax,QWORD PTR [rbx]
  010b7:    	lea    rdi,[rsp-0x18]
  010bc:    	mov    QWORD PTR [rdi],rax
  010bf:    	mov    QWORD PTR [rbx],rdi
  010c2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010cb:    	mov    QWORD PTR [rsp-0x38],rcx
  010d0:    	mov    rax,QWORD PTR [rbp-0x30]
  010d4:    	mov    QWORD PTR [rsp-0x38],rax
  010d9: 00 	mov    rdi,0x0
  010e0: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010e9: 00 	movabs rax,0x0
  010f3:    	mov    QWORD PTR [rsp-0x28],rax
  010f8: 00 	movabs r13,0x0
  01102:    	call   0xfffdd8c8
  01107:    	lea    rdi,[rbp-0x8]
  0110b:    	mov    QWORD PTR [rbx],rdi
  0110e:    	movq   xmm2,QWORD PTR [rsp]
  01113:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01119:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0111f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01125:    	add    rsp,0x20
  01129:    	test   rax,rax
  0112c:    	je     0x31bfb
  01132: ff 	mov    QWORD PTR [rbp-0x88],rax
:00077 
:00079 %11 = %12.call y()                   [<INVALID>]
  01139: 01 	sub    DWORD PTR [rip+0x94c],0x1        # 0x1a8c
  01140:    	je     0x31c26
  01146:    	sub    rsp,0x20
  0114a:    	movq   QWORD PTR [rsp],xmm2
  0114f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01155:    	movq   QWORD PTR [rsp+0x10],xmm5
  0115b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01161: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01168: 31 	movabs rax,0x5631840958d0
  01172:    	call   rax
  01174:    	mov    r15d,eax
  01177: 00 	cmp    r15d,DWORD PTR [rip+0x916]        # 0x1a94
  0117e:    	jne    0x31c48
  01184:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf257]        # 0xfffe03e1
  0118a:    	cmp    DWORD PTR [rip+0x900],eax        # 0x1a90
  01190:    	jne    0x31c48
  01196:    	mov    rax,QWORD PTR [rbx]
  01199:    	lea    rdi,[rsp-0x18]
  0119e:    	mov    QWORD PTR [rdi],rax
  011a1:    	mov    QWORD PTR [rbx],rdi
  011a4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  011ad:    	mov    QWORD PTR [rsp-0x38],rcx
  011b2: ff 	mov    rax,QWORD PTR [rbp-0x88]
  011b9:    	mov    QWORD PTR [rsp-0x38],rax
  011be: 00 	mov    rdi,0x0
  011c5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011ce: 00 	movabs rax,0x0
  011d8:    	mov    QWORD PTR [rsp-0x28],rax
  011dd: 00 	movabs r13,0x0
  011e7:    	call   0xfffdd8c8
  011ec:    	lea    rdi,[rbp-0x8]
  011f0:    	mov    QWORD PTR [rbx],rdi
  011f3:    	movq   xmm2,QWORD PTR [rsp]
  011f8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011fe:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01204:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0120a:    	add    rsp,0x20
  0120e:    	test   rax,rax
  01211:    	je     0x31cb7
  01217:    	mov    QWORD PTR [rbp-0x80],rax
:00080 
:00082 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  0121b: 01 	sub    DWORD PTR [rip+0x876],0x1        # 0x1a98
  01222:    	je     0x31ce2
  01228:    	mov    rdi,QWORD PTR [rbp-0x58]
  0122c:    	mov    rsi,QWORD PTR [rbp-0x80]
  01230:    	sub    rsp,0x20
  01234:    	movq   QWORD PTR [rsp],xmm2
  01239:    	movq   QWORD PTR [rsp+0x8],xmm4
  0123f:    	movq   QWORD PTR [rsp+0x10],xmm5
  01245:    	movq   QWORD PTR [rsp+0x18],xmm6
  0124b:    	mov    rdx,rdi
  0124e:    	mov    rcx,rsi
  01251:    	mov    rdi,rbx
  01254:    	mov    rsi,r12
  01257: 31 	movabs rax,0x563184089e00
  01261:    	call   rax
  01263:    	movq   xmm2,QWORD PTR [rsp]
  01268:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0126e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01274:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0127a:    	add    rsp,0x20
  0127e: 31 	movabs r13,0x563184c877d0
  01288:    	test   rax,rax
  0128b:    	je     0xfffdd903
  01291:    	mov    QWORD PTR [rbp-0x80],rax
:00083 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  01295: 01 	sub    DWORD PTR [rip+0x800],0x1        # 0x1a9c
  0129c:    	je     0x31d20
  012a2:    	mov    rdi,QWORD PTR [rbp-0x78]
  012a6:    	mov    rsi,QWORD PTR [rbp-0x80]
  012aa:    	sub    rsp,0x20
  012ae:    	movq   QWORD PTR [rsp],xmm2
  012b3:    	movq   QWORD PTR [rsp+0x8],xmm4
  012b9:    	movq   QWORD PTR [rsp+0x10],xmm5
  012bf:    	movq   QWORD PTR [rsp+0x18],xmm6
  012c5:    	mov    rdx,rdi
  012c8:    	mov    rcx,rsi
  012cb:    	mov    rdi,rbx
  012ce:    	mov    rsi,r12
  012d1: 31 	movabs rax,0x563184087f80
  012db:    	call   rax
  012dd:    	movq   xmm2,QWORD PTR [rsp]
  012e2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012e8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012ee:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012f4:    	add    rsp,0x20
  012f8: 31 	movabs r13,0x563184c877e0
  01302:    	test   rax,rax
  01305:    	je     0xfffdd903
  0130b:    	mov    QWORD PTR [rbp-0x78],rax
:00084 %12 = %1.call org()                  [<INVALID>]
  0130f: 01 	sub    DWORD PTR [rip+0x78a],0x1        # 0x1aa0
  01316:    	je     0x31d5e
  0131c:    	sub    rsp,0x20
  01320:    	movq   QWORD PTR [rsp],xmm2
  01325:    	movq   QWORD PTR [rsp+0x8],xmm4
  0132b:    	movq   QWORD PTR [rsp+0x10],xmm5
  01331:    	movq   QWORD PTR [rsp+0x18],xmm6
  01337:    	mov    rdi,QWORD PTR [rbp-0x30]
  0133b: 31 	movabs rax,0x5631840958d0
  01345:    	call   rax
  01347:    	mov    r15d,eax
  0134a: 00 	cmp    r15d,DWORD PTR [rip+0x757]        # 0x1aa8
  01351:    	jne    0x31d80
  01357:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf084]        # 0xfffe03e1
  0135d:    	cmp    DWORD PTR [rip+0x741],eax        # 0x1aa4
  01363:    	jne    0x31d80
  01369:    	mov    rax,QWORD PTR [rbx]
  0136c:    	lea    rdi,[rsp-0x18]
  01371:    	mov    QWORD PTR [rdi],rax
  01374:    	mov    QWORD PTR [rbx],rdi
  01377: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01380:    	mov    QWORD PTR [rsp-0x38],rcx
  01385:    	mov    rax,QWORD PTR [rbp-0x30]
  01389:    	mov    QWORD PTR [rsp-0x38],rax
  0138e: 00 	mov    rdi,0x0
  01395: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0139e: 00 	movabs rax,0x0
  013a8:    	mov    QWORD PTR [rsp-0x28],rax
  013ad: 00 	movabs r13,0x0
  013b7:    	call   0xfffdd8c8
  013bc:    	lea    rdi,[rbp-0x8]
  013c0:    	mov    QWORD PTR [rbx],rdi
  013c3:    	movq   xmm2,QWORD PTR [rsp]
  013c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013ce:    	movq   xmm5,QWORD PTR [rsp+0x10]
  013d4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  013da:    	add    rsp,0x20
  013de:    	test   rax,rax
  013e1:    	je     0x31dec
  013e7: ff 	mov    QWORD PTR [rbp-0x88],rax
:00085 
:00087 %11 = %12.call z()                   [<INVALID>]
  013ee: 01 	sub    DWORD PTR [rip+0x6b7],0x1        # 0x1aac
  013f5:    	je     0x31e17
  013fb:    	sub    rsp,0x20
  013ff:    	movq   QWORD PTR [rsp],xmm2
  01404:    	movq   QWORD PTR [rsp+0x8],xmm4
  0140a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01410:    	movq   QWORD PTR [rsp+0x18],xmm6
  01416: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0141d: 31 	movabs rax,0x5631840958d0
  01427:    	call   rax
  01429:    	mov    r15d,eax
  0142c: 00 	cmp    r15d,DWORD PTR [rip+0x681]        # 0x1ab4
  01433:    	jne    0x31e39
  01439:    	mov    eax,DWORD PTR [rip+0xfffffffffffdefa2]        # 0xfffe03e1
  0143f:    	cmp    DWORD PTR [rip+0x66b],eax        # 0x1ab0
  01445:    	jne    0x31e39
  0144b:    	mov    rax,QWORD PTR [rbx]
  0144e:    	lea    rdi,[rsp-0x18]
  01453:    	mov    QWORD PTR [rdi],rax
  01456:    	mov    QWORD PTR [rbx],rdi
  01459: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01462:    	mov    QWORD PTR [rsp-0x38],rcx
  01467: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0146e:    	mov    QWORD PTR [rsp-0x38],rax
  01473: 00 	mov    rdi,0x0
  0147a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01483: 00 	movabs rax,0x0
  0148d:    	mov    QWORD PTR [rsp-0x28],rax
  01492: 00 	movabs r13,0x0
  0149c:    	call   0xfffdd8c8
  014a1:    	lea    rdi,[rbp-0x8]
  014a5:    	mov    QWORD PTR [rbx],rdi
  014a8:    	movq   xmm2,QWORD PTR [rsp]
  014ad:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014b3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  014b9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  014bf:    	add    rsp,0x20
  014c3:    	test   rax,rax
  014c6:    	je     0x31ea8
  014cc:    	mov    QWORD PTR [rbp-0x80],rax
:00088 
:00090 %13 = %1.call dir()                  [<INVALID>]
  014d0: 01 	sub    DWORD PTR [rip+0x5e1],0x1        # 0x1ab8
  014d7:    	je     0x31ed3
  014dd:    	sub    rsp,0x20
  014e1:    	movq   QWORD PTR [rsp],xmm2
  014e6:    	movq   QWORD PTR [rsp+0x8],xmm4
  014ec:    	movq   QWORD PTR [rsp+0x10],xmm5
  014f2:    	movq   QWORD PTR [rsp+0x18],xmm6
  014f8:    	mov    rdi,QWORD PTR [rbp-0x30]
  014fc: 31 	movabs rax,0x5631840958d0
  01506:    	call   rax
  01508:    	mov    r15d,eax
  0150b: 00 	cmp    r15d,DWORD PTR [rip+0x5ae]        # 0x1ac0
  01512:    	jne    0x31ef5
  01518:    	mov    eax,DWORD PTR [rip+0xfffffffffffdeec3]        # 0xfffe03e1
  0151e:    	cmp    DWORD PTR [rip+0x598],eax        # 0x1abc
  01524:    	jne    0x31ef5
  0152a:    	mov    rax,QWORD PTR [rbx]
  0152d:    	lea    rdi,[rsp-0x18]
  01532:    	mov    QWORD PTR [rdi],rax
  01535:    	mov    QWORD PTR [rbx],rdi
  01538: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01541:    	mov    QWORD PTR [rsp-0x38],rcx
  01546:    	mov    rax,QWORD PTR [rbp-0x30]
  0154a:    	mov    QWORD PTR [rsp-0x38],rax
  0154f: 00 	mov    rdi,0x0
  01556: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0155f: 00 	movabs rax,0x0
  01569:    	mov    QWORD PTR [rsp-0x28],rax
  0156e: 00 	movabs r13,0x0
  01578:    	call   0xfffdd8c8
  0157d:    	lea    rdi,[rbp-0x8]
  01581:    	mov    QWORD PTR [rbx],rdi
  01584:    	movq   xmm2,QWORD PTR [rsp]
  01589:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0158f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01595:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0159b:    	add    rsp,0x20
  0159f:    	test   rax,rax
  015a2:    	je     0x31f61
  015a8: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %12 = %13.call z()                   [<INVALID>]
  015af: 01 	sub    DWORD PTR [rip+0x50e],0x1        # 0x1ac4
  015b6:    	je     0x31f8c
  015bc:    	sub    rsp,0x20
  015c0:    	movq   QWORD PTR [rsp],xmm2
  015c5:    	movq   QWORD PTR [rsp+0x8],xmm4
  015cb:    	movq   QWORD PTR [rsp+0x10],xmm5
  015d1:    	movq   QWORD PTR [rsp+0x18],xmm6
  015d7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  015de: 31 	movabs rax,0x5631840958d0
  015e8:    	call   rax
  015ea:    	mov    r15d,eax
  015ed: 00 	cmp    r15d,DWORD PTR [rip+0x4d8]        # 0x1acc
  015f4:    	jne    0x31fae
  015fa:    	mov    eax,DWORD PTR [rip+0xfffffffffffdede1]        # 0xfffe03e1
  01600:    	cmp    DWORD PTR [rip+0x4c2],eax        # 0x1ac8
  01606:    	jne    0x31fae
  0160c:    	mov    rax,QWORD PTR [rbx]
  0160f:    	lea    rdi,[rsp-0x18]
  01614:    	mov    QWORD PTR [rdi],rax
  01617:    	mov    QWORD PTR [rbx],rdi
  0161a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01623:    	mov    QWORD PTR [rsp-0x38],rcx
  01628: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0162f:    	mov    QWORD PTR [rsp-0x38],rax
  01634: 00 	mov    rdi,0x0
  0163b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01644: 00 	movabs rax,0x0
  0164e:    	mov    QWORD PTR [rsp-0x28],rax
  01653: 00 	movabs r13,0x0
  0165d:    	call   0xfffdd8c8
  01662:    	lea    rdi,[rbp-0x8]
  01666:    	mov    QWORD PTR [rbx],rdi
  01669:    	movq   xmm2,QWORD PTR [rsp]
  0166e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01674:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0167a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01680:    	add    rsp,0x20
  01684:    	test   rax,rax
  01687:    	je     0x3201d
  0168d: ff 	mov    QWORD PTR [rbp-0x88],rax
:00094 
:00096 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  01694: 01 	sub    DWORD PTR [rip+0x435],0x1        # 0x1ad0
  0169b:    	je     0x32048
  016a1:    	mov    rdi,QWORD PTR [rbp-0x58]
  016a5: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  016ac:    	sub    rsp,0x20
  016b0:    	movq   QWORD PTR [rsp],xmm2
  016b5:    	movq   QWORD PTR [rsp+0x8],xmm4
  016bb:    	movq   QWORD PTR [rsp+0x10],xmm5
  016c1:    	movq   QWORD PTR [rsp+0x18],xmm6
  016c7:    	mov    rdx,rdi
  016ca:    	mov    rcx,rsi
  016cd:    	mov    rdi,rbx
  016d0:    	mov    rsi,r12
  016d3: 31 	movabs rax,0x563184089e00
  016dd:    	call   rax
  016df:    	movq   xmm2,QWORD PTR [rsp]
  016e4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016ea:    	movq   xmm5,QWORD PTR [rsp+0x10]
  016f0:    	movq   xmm6,QWORD PTR [rsp+0x18]
  016f6:    	add    rsp,0x20
  016fa: 31 	movabs r13,0x563184c878b0
  01704:    	test   rax,rax
  01707:    	je     0xfffdd903
  0170d: ff 	mov    QWORD PTR [rbp-0x88],rax
:00097 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  01714: 01 	sub    DWORD PTR [rip+0x3b9],0x1        # 0x1ad4
  0171b:    	je     0x32086
  01721:    	mov    rdi,QWORD PTR [rbp-0x80]
  01725: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  0172c:    	sub    rsp,0x20
  01730:    	movq   QWORD PTR [rsp],xmm2
  01735:    	movq   QWORD PTR [rsp+0x8],xmm4
  0173b:    	movq   QWORD PTR [rsp+0x10],xmm5
  01741:    	movq   QWORD PTR [rsp+0x18],xmm6
  01747:    	mov    rdx,rdi
  0174a:    	mov    rcx,rsi
  0174d:    	mov    rdi,rbx
  01750:    	mov    rsi,r12
  01753: 31 	movabs rax,0x563184087f80
  0175d:    	call   rax
  0175f:    	movq   xmm2,QWORD PTR [rsp]
  01764:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0176a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01770:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01776:    	add    rsp,0x20
  0177a: 31 	movabs r13,0x563184c878c0
  01784:    	test   rax,rax
  01787:    	je     0xfffdd903
  0178d:    	mov    QWORD PTR [rbp-0x80],rax
:00098 %7 = %8.call new(%9; 3)              [<INVALID>]
  01791: 01 	sub    DWORD PTR [rip+0x340],0x1        # 0x1ad8
  01798:    	je     0x320c4
  0179e:    	sub    rsp,0x20
  017a2:    	movq   QWORD PTR [rsp],xmm2
  017a7:    	movq   QWORD PTR [rsp+0x8],xmm4
  017ad:    	movq   QWORD PTR [rsp+0x10],xmm5
  017b3:    	movq   QWORD PTR [rsp+0x18],xmm6
  017b9:    	mov    rdi,QWORD PTR [rbp-0x68]
  017bd: 31 	movabs rax,0x5631840958d0
  017c7:    	call   rax
  017c9:    	mov    r15d,eax
  017cc: 00 	cmp    r15d,DWORD PTR [rip+0x30d]        # 0x1ae0
  017d3:    	jne    0x320e6
  017d9:    	mov    eax,DWORD PTR [rip+0xfffffffffffdec02]        # 0xfffe03e1
  017df:    	cmp    DWORD PTR [rip+0x2f7],eax        # 0x1adc
  017e5:    	jne    0x320e6
  017eb:    	mov    rax,QWORD PTR [rbx]
  017ee:    	lea    rdi,[rsp-0x18]
  017f3:    	mov    QWORD PTR [rdi],rax
  017f6:    	mov    QWORD PTR [rbx],rdi
  017f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01802:    	mov    QWORD PTR [rsp-0x38],rcx
  01807:    	mov    rax,QWORD PTR [rbp-0x68]
  0180b:    	mov    QWORD PTR [rsp-0x38],rax
  01810: 00 	mov    rdi,0x3
  01817:    	mov    rax,QWORD PTR [rbp-0x70]
  0181b:    	mov    QWORD PTR [rsp-0x40],rax
  01820:    	mov    rax,QWORD PTR [rbp-0x78]
  01824:    	mov    QWORD PTR [rsp-0x48],rax
  01829:    	mov    rax,QWORD PTR [rbp-0x80]
  0182d:    	mov    QWORD PTR [rsp-0x50],rax
  01832: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0183b: 00 	movabs rax,0x0
  01845:    	mov    QWORD PTR [rsp-0x28],rax
  0184a: 00 	movabs r13,0x0
  01854:    	call   0xfffdd8c8
  01859:    	lea    rdi,[rbp-0x8]
  0185d:    	mov    QWORD PTR [rbx],rdi
  01860:    	movq   xmm2,QWORD PTR [rsp]
  01865:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0186b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01871:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01877:    	add    rsp,0x20
  0187b:    	test   rax,rax
  0187e:    	je     0x32152
  01884:    	mov    QWORD PTR [rbp-0x60],rax
:00099 
:00101 _ = %2.call pl=(%7; 1)               [<INVALID>]
  01888: 01 	sub    DWORD PTR [rip+0x255],0x1        # 0x1ae4
  0188f:    	je     0x3217d
  01895:    	sub    rsp,0x20
  01899:    	movq   QWORD PTR [rsp],xmm2
  0189e:    	movq   QWORD PTR [rsp+0x8],xmm4
  018a4:    	movq   QWORD PTR [rsp+0x10],xmm5
  018aa:    	movq   QWORD PTR [rsp+0x18],xmm6
  018b0:    	mov    rdi,QWORD PTR [rbp-0x38]
  018b4: 31 	movabs rax,0x5631840958d0
  018be:    	call   rax
  018c0:    	mov    r15d,eax
  018c3: 00 	cmp    r15d,DWORD PTR [rip+0x222]        # 0x1aec
  018ca:    	jne    0x3219f
  018d0:    	mov    eax,DWORD PTR [rip+0xfffffffffffdeb0b]        # 0xfffe03e1
  018d6:    	cmp    DWORD PTR [rip+0x20c],eax        # 0x1ae8
  018dc:    	jne    0x3219f
  018e2:    	mov    rax,QWORD PTR [rbx]
  018e5:    	lea    rdi,[rsp-0x18]
  018ea:    	mov    QWORD PTR [rdi],rax
  018ed:    	mov    QWORD PTR [rbx],rdi
  018f0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018f9:    	mov    QWORD PTR [rsp-0x38],rcx
  018fe:    	mov    rax,QWORD PTR [rbp-0x38]
  01902:    	mov    QWORD PTR [rsp-0x38],rax
  01907: 00 	mov    rdi,0x1
  0190e:    	mov    rax,QWORD PTR [rbp-0x60]
  01912:    	mov    QWORD PTR [rsp-0x40],rax
  01917: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01920: 00 	movabs rax,0x0
  0192a:    	mov    QWORD PTR [rsp-0x28],rax
  0192f: 00 	movabs r13,0x0
  01939:    	call   0xfffdd8c8
  0193e:    	lea    rdi,[rbp-0x8]
  01942:    	mov    QWORD PTR [rbx],rdi
  01945:    	movq   xmm2,QWORD PTR [rsp]
  0194a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01950:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01956:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0195c:    	add    rsp,0x20
  01960:    	test   rax,rax
  01963:    	je     0x3220b
:00102 
:00104 br =>:00105
  01969:    	jmp    0x32273
:00105 %7 = nil
  0196e: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00106 ret %7
  01976:    	mov    rax,QWORD PTR [rbp-0x60]
  0197a:    	leave  
  0197b:    	ret    
==> start whole compile: intersect FuncId(71) self_class:Plane start:[00000] bytecode:0x563184c872a0
<== finished compile. elapsed:166.3µs
offset:Pos(148008) code: 5635 bytes  data: 261 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xa0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044:    	mov    rdi,QWORD PTR [rbp-0x28]
  00048: 00 	test   rdi,0x7
  0004f:    	jne    0x307a9
  00055:    	cmp    DWORD PTR [rdi+0x4],0x2c
  00059:    	jne    0x307a9
:00000 %7 = @p: Plane[IvarId(0)]
  0005f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00063:    	mov    rax,QWORD PTR [rdi+0x10]
  00067:    	mov    QWORD PTR [rbp-0x60],rax
:00001 %8 = @n: Plane[IvarId(1)]
  0006b:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006f:    	mov    rax,QWORD PTR [rdi+0x18]
  00073:    	mov    QWORD PTR [rbp-0x68],rax
:00002 %3 = %7.call vdot(%8; 1)             [Vec]
  00077:    	mov    rdi,QWORD PTR [rbp-0x60]
  0007b: 00 	test   rdi,0x7
  00082:    	jne    0x307b8
  00088:    	cmp    DWORD PTR [rdi+0x4],0x28
  0008c:    	jne    0x307b8
  00092: 26 	cmp    DWORD PTR [rip+0xfffffffffffde858],0x26        # 0xfffde8f1
  00099:    	jne    0x307b8
  0009f:    	mov    rax,QWORD PTR [rbx]
  000a2:    	lea    rdi,[rsp-0x18]
  000a7:    	mov    QWORD PTR [rdi],rax
  000aa:    	mov    QWORD PTR [rbx],rdi
  000ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000b6:    	mov    QWORD PTR [rsp-0x38],rcx
  000bb:    	mov    rax,QWORD PTR [rbp-0x60]
  000bf:    	mov    QWORD PTR [rsp-0x38],rax
  000c4: 00 	mov    rdi,0x1
  000cb:    	mov    rax,QWORD PTR [rbp-0x68]
  000cf:    	mov    QWORD PTR [rsp-0x40],rax
  000d4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  000dd: 05 	movabs rax,0x1000500000041
  000e7:    	mov    QWORD PTR [rsp-0x28],rax
  000ec: 31 	movabs r13,0x563184c66dc0
  000f6:    	call   0xfffdf614
  000fb:    	lea    rdi,[rbp-0x8]
  000ff:    	mov    QWORD PTR [rbx],rdi
  00102: 31 	movabs r13,0x563184c872e0
  0010c:    	test   rax,rax
  0010f:    	je     0xfffdbe13
  00115:    	mov    QWORD PTR [rbp-0x40],rax
:00003 
:00005 %3 = neg %3                          [Float]
  00119:    	mov    rdi,QWORD PTR [rbp-0x40]
  0011d: 00 	test   rdi,0x1
  00124:    	jne    0x307c7
  0012a: 00 	test   rdi,0x2
  00131:    	je     0x16d
  00137:    	xorps  xmm2,xmm2
  0013a: 00 	movabs rax,0x8000000000000002
  00144:    	cmp    rdi,rax
  00147:    	je     0x17f
  0014d:    	mov    rax,rdi
  00150:    	sar    rax,0x3f
  00154:    	add    rax,0x2
  00158:    	and    rdi,0xfffffffffffffffc
  0015c:    	or     rdi,rax
  0015f:    	rol    rdi,0x3d
  00163:    	movq   xmm2,rdi
  00168:    	jmp    0x17f
  0016d:    	call   0xfffdbe4c
  00172:    	test   rax,rax
  00175:    	je     0x307c7
  0017b:    	movq   xmm2,xmm0
  0017f: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1482]        # 0x1608
:00006 %7 = %1.call dir()                   [Ray]
  00186:    	mov    rdi,QWORD PTR [rbp-0x30]
  0018a: 00 	test   rdi,0x7
  00191:    	jne    0x307d6
  00197:    	cmp    DWORD PTR [rdi+0x4],0x2e
  0019b:    	jne    0x307d6
  001a1: 26 	cmp    DWORD PTR [rip+0xfffffffffffde749],0x26        # 0xfffde8f1
  001a8:    	jne    0x307d6
  001ae:    	mov    esi,DWORD PTR [rip+0x1460]        # 0x1614
  001b4:    	cmp    esi,0xffffffff
  001b7:    	je     0x307f2
  001bd:    	cmp    WORD PTR [rdi+0x2],0x3
  001c2:    	jne    0x1db
  001c8:    	cmp    esi,0x6
  001cb:    	jge    0x1db
  001d1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d6:    	jmp    0x1f9
  001db:    	sub    rsp,0x10
  001df:    	movq   QWORD PTR [rsp],xmm2
  001e4: 31 	movabs rax,0x563184053740
  001ee:    	call   rax
  001f0:    	movq   xmm2,QWORD PTR [rsp]
  001f5:    	add    rsp,0x10
  001f9:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = @n: Plane[IvarId(1)]
  001fd:    	mov    rdi,QWORD PTR [rbp-0x28]
  00201:    	mov    rax,QWORD PTR [rdi+0x18]
  00205:    	mov    QWORD PTR [rbp-0x68],rax
:00010 %4 = %7.call vdot(%8; 1)             [Vec]
  00209:    	mov    rdi,QWORD PTR [rbp-0x60]
  0020d: 00 	test   rdi,0x7
  00214:    	jne    0x3082d
  0021a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0021e:    	jne    0x3082d
  00224: 26 	cmp    DWORD PTR [rip+0xfffffffffffde6c6],0x26        # 0xfffde8f1
  0022b:    	jne    0x3082d
  00231:    	sub    rsp,0x10
  00235:    	movq   QWORD PTR [rsp],xmm2
  0023a:    	mov    rax,QWORD PTR [rbx]
  0023d:    	lea    rdi,[rsp-0x18]
  00242:    	mov    QWORD PTR [rdi],rax
  00245:    	mov    QWORD PTR [rbx],rdi
  00248: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00251:    	mov    QWORD PTR [rsp-0x38],rcx
  00256:    	mov    rax,QWORD PTR [rbp-0x60]
  0025a:    	mov    QWORD PTR [rsp-0x38],rax
  0025f: 00 	mov    rdi,0x1
  00266:    	mov    rax,QWORD PTR [rbp-0x68]
  0026a:    	mov    QWORD PTR [rsp-0x40],rax
  0026f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00278: 05 	movabs rax,0x1000500000041
  00282:    	mov    QWORD PTR [rsp-0x28],rax
  00287: 31 	movabs r13,0x563184c66dc0
  00291:    	call   0xfffdf614
  00296:    	lea    rdi,[rbp-0x8]
  0029a:    	mov    QWORD PTR [rbx],rdi
  0029d:    	movq   xmm2,QWORD PTR [rsp]
  002a2:    	add    rsp,0x10
  002a6: 31 	movabs r13,0x563184c87360
  002b0:    	test   rax,rax
  002b3:    	je     0xfffdbe13
  002b9:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %5 = %4
  002bd:    	mov    rax,QWORD PTR [rbp-0x48]
  002c1:    	mov    QWORD PTR [rbp-0x50],rax
:00014 %7 = literal[0.0]
  002c5: 00 	movq   xmm3,QWORD PTR [rip+0x134b]        # 0x1618
  002cd: 00 	movabs rax,0x8000000000000002
  002d7:    	mov    QWORD PTR [rbp-0x60],rax
:00015 _%7 = %4 < %7                        [Float][Float]
:00016 condnotbr _%7 =>:00020
  002db:    	mov    rdi,QWORD PTR [rbp-0x48]
  002df: 00 	test   rdi,0x1
  002e6:    	jne    0x30849
  002ec: 00 	test   rdi,0x2
  002f3:    	je     0x32f
  002f9:    	xorps  xmm4,xmm4
  002fc: 00 	movabs rax,0x8000000000000002
  00306:    	cmp    rdi,rax
  00309:    	je     0x341
  0030f:    	mov    rax,rdi
  00312:    	sar    rax,0x3f
  00316:    	add    rax,0x2
  0031a:    	and    rdi,0xfffffffffffffffc
  0031e:    	or     rdi,rax
  00321:    	rol    rdi,0x3d
  00325:    	movq   xmm4,rdi
  0032a:    	jmp    0x341
  0032f:    	call   0xfffdbe4c
  00334:    	test   rax,rax
  00337:    	je     0x30849
  0033d:    	movq   xmm4,xmm0
  00341:    	ucomisd xmm4,xmm3
  00345:    	jae    0x30865
:00017 %5 = %4
:00018 %5 = neg %5                          [Float]
  0034b:    	movq   xmm5,xmm4
  0034f: 00 	xorps  xmm5,XMMWORD PTR [rip+0x12d2]        # 0x1628
:00019 br =>:00020
  00356:    	jmp    0x3088b
:00020 %7 = literal[1e-17]
  0035b: 00 	movq   xmm3,QWORD PTR [rip+0x12d5]        # 0x1638
  00363: aa 	movabs rax,0xe33877aa3236a4ba
  0036d:    	mov    QWORD PTR [rbp-0x60],rax
:00021 _%7 = %5 < %7                        [Float][Float]
:00022 condnotbr _%7 =>:00026
  00371:    	mov    rdi,QWORD PTR [rbp-0x50]
  00375: 00 	test   rdi,0x1
  0037c:    	jne    0x308be
  00382: 00 	test   rdi,0x2
  00389:    	je     0x3c5
  0038f:    	xorps  xmm5,xmm5
  00392: 00 	movabs rax,0x8000000000000002
  0039c:    	cmp    rdi,rax
  0039f:    	je     0x3d7
  003a5:    	mov    rax,rdi
  003a8:    	sar    rax,0x3f
  003ac:    	add    rax,0x2
  003b0:    	and    rdi,0xfffffffffffffffc
  003b4:    	or     rdi,rax
  003b7:    	rol    rdi,0x3d
  003bb:    	movq   xmm5,rdi
  003c0:    	jmp    0x3d7
  003c5:    	call   0xfffdbe4c
  003ca:    	test   rax,rax
  003cd:    	je     0x308be
  003d3:    	movq   xmm5,xmm0
  003d7:    	ucomisd xmm5,xmm3
  003db:    	jae    0x3ef
:00023 %7 = nil
  003e1: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00024 ret %7
  003e9:    	mov    rax,QWORD PTR [rbp-0x60]
  003ed:    	leave  
  003ee:    	ret    
:00026 %8 = %1.call org()                   [Ray]
  003ef:    	mov    rdi,QWORD PTR [rbp-0x30]
  003f3: 00 	test   rdi,0x7
  003fa:    	jne    0x308da
  00400:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00404:    	jne    0x308da
  0040a: 26 	cmp    DWORD PTR [rip+0xfffffffffffde4e0],0x26        # 0xfffde8f1
  00411:    	jne    0x308da
  00417:    	mov    esi,DWORD PTR [rip+0x1227]        # 0x1644
  0041d:    	cmp    esi,0xffffffff
  00420:    	je     0x308f6
  00426:    	cmp    WORD PTR [rdi+0x2],0x3
  0042b:    	jne    0x444
  00431:    	cmp    esi,0x6
  00434:    	jge    0x444
  0043a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0043f:    	jmp    0x486
  00444:    	sub    rsp,0x20
  00448:    	movq   QWORD PTR [rsp],xmm2
  0044d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00453:    	movq   QWORD PTR [rsp+0x10],xmm4
  00459:    	movq   QWORD PTR [rsp+0x18],xmm5
  0045f: 31 	movabs rax,0x563184053740
  00469:    	call   rax
  0046b:    	movq   xmm2,QWORD PTR [rsp]
  00470:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00476:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0047c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00482:    	add    rsp,0x20
  00486:    	mov    QWORD PTR [rbp-0x68],rax
:00027 
:00029 %9 = @n: Plane[IvarId(1)]
  0048a:    	mov    rdi,QWORD PTR [rbp-0x28]
  0048e:    	mov    rax,QWORD PTR [rdi+0x18]
  00492:    	mov    QWORD PTR [rbp-0x70],rax
:00030 %7 = %8.call vdot(%9; 1)             [Vec]
  00496:    	mov    rdi,QWORD PTR [rbp-0x68]
  0049a: 00 	test   rdi,0x7
  004a1:    	jne    0x30955
  004a7:    	cmp    DWORD PTR [rdi+0x4],0x28
  004ab:    	jne    0x30955
  004b1: 26 	cmp    DWORD PTR [rip+0xfffffffffffde439],0x26        # 0xfffde8f1
  004b8:    	jne    0x30955
  004be:    	sub    rsp,0x20
  004c2:    	movq   QWORD PTR [rsp],xmm2
  004c7:    	movq   QWORD PTR [rsp+0x8],xmm4
  004cd:    	movq   QWORD PTR [rsp+0x10],xmm5
  004d3:    	mov    rax,QWORD PTR [rbx]
  004d6:    	lea    rdi,[rsp-0x18]
  004db:    	mov    QWORD PTR [rdi],rax
  004de:    	mov    QWORD PTR [rbx],rdi
  004e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  004ea:    	mov    QWORD PTR [rsp-0x38],rcx
  004ef:    	mov    rax,QWORD PTR [rbp-0x68]
  004f3:    	mov    QWORD PTR [rsp-0x38],rax
  004f8: 00 	mov    rdi,0x1
  004ff:    	mov    rax,QWORD PTR [rbp-0x70]
  00503:    	mov    QWORD PTR [rsp-0x40],rax
  00508: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00511: 05 	movabs rax,0x1000500000041
  0051b:    	mov    QWORD PTR [rsp-0x28],rax
  00520: 31 	movabs r13,0x563184c66dc0
  0052a:    	call   0xfffdf614
  0052f:    	lea    rdi,[rbp-0x8]
  00533:    	mov    QWORD PTR [rbx],rdi
  00536:    	movq   xmm2,QWORD PTR [rsp]
  0053b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00541:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00547:    	add    rsp,0x20
  0054b: 31 	movabs r13,0x563184c874a0
  00555:    	test   rax,rax
  00558:    	je     0xfffdbe13
  0055e:    	mov    QWORD PTR [rbp-0x60],rax
:00031 
:00033 %7 = %7 + %3                         [Float][Float]
  00562:    	mov    rdi,QWORD PTR [rbp-0x60]
  00566: 00 	test   rdi,0x1
  0056d:    	jne    0x30971
  00573: 00 	test   rdi,0x2
  0057a:    	je     0x5b6
  00580:    	xorps  xmm3,xmm3
  00583: 00 	movabs rax,0x8000000000000002
  0058d:    	cmp    rdi,rax
  00590:    	je     0x5c8
  00596:    	mov    rax,rdi
  00599:    	sar    rax,0x3f
  0059d:    	add    rax,0x2
  005a1:    	and    rdi,0xfffffffffffffffc
  005a5:    	or     rdi,rax
  005a8:    	rol    rdi,0x3d
  005ac:    	movq   xmm3,rdi
  005b1:    	jmp    0x5c8
  005b6:    	call   0xfffdbe4c
  005bb:    	test   rax,rax
  005be:    	je     0x30971
  005c4:    	movq   xmm3,xmm0
  005c8:    	addsd  xmm3,xmm2
:00034 %7 = neg %7                          [Float]
  005cc: 00 	xorps  xmm3,XMMWORD PTR [rip+0x1075]        # 0x1648
:00035 %6 = %7 / %4                         [Float][Float]
  005d3:    	movq   xmm6,xmm3
  005d7:    	movq   rax,xmm4
  005dc:    	test   rax,rax
  005df:    	je     0xfffdbe38
  005e5:    	divsd  xmm6,xmm4
:00036 %7 = literal[0.0]
  005e9: 00 	movq   xmm3,QWORD PTR [rip+0x1067]        # 0x1658
  005f1: 00 	movabs rax,0x8000000000000002
  005fb:    	mov    QWORD PTR [rbp-0x60],rax
:00037 _%7 = %6 > %7                        [Float][Float]
:00038 condnotbr _%7 =>:00105
  005ff:    	ucomisd xmm6,xmm3
  00603:    	jbe    0x315c1
:00039 %7 = %2.call t()                     [Isect]
  00609:    	mov    rdi,QWORD PTR [rbp-0x38]
  0060d: 00 	test   rdi,0x7
  00614:    	jne    0x3098d
  0061a:    	cmp    DWORD PTR [rdi+0x4],0x30
  0061e:    	jne    0x3098d
  00624: 26 	cmp    DWORD PTR [rip+0xfffffffffffde2c6],0x26        # 0xfffde8f1
  0062b:    	jne    0x3098d
  00631:    	mov    esi,DWORD PTR [rip+0x102d]        # 0x1664
  00637:    	cmp    esi,0xffffffff
  0063a:    	je     0x309b6
  00640:    	cmp    WORD PTR [rdi+0x2],0x3
  00645:    	jne    0x65e
  0064b:    	cmp    esi,0x6
  0064e:    	jge    0x65e
  00654:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00659:    	jmp    0x6a0
  0065e:    	sub    rsp,0x20
  00662:    	movq   QWORD PTR [rsp],xmm2
  00667:    	movq   QWORD PTR [rsp+0x8],xmm4
  0066d:    	movq   QWORD PTR [rsp+0x10],xmm5
  00673:    	movq   QWORD PTR [rsp+0x18],xmm6
  00679: 31 	movabs rax,0x563184053740
  00683:    	call   rax
  00685:    	movq   xmm2,QWORD PTR [rsp]
  0068a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00690:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00696:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0069c:    	add    rsp,0x20
  006a0:    	mov    QWORD PTR [rbp-0x60],rax
:00040 
:00042 _%7 = %6 < %7                        [Float][Float]
:00043 condnotbr _%7 =>:00105
  006a4:    	mov    rdi,QWORD PTR [rbp-0x60]
  006a8: 00 	test   rdi,0x1
  006af:    	jne    0x30a15
  006b5: 00 	test   rdi,0x2
  006bc:    	je     0x6f8
  006c2:    	xorps  xmm3,xmm3
  006c5: 00 	movabs rax,0x8000000000000002
  006cf:    	cmp    rdi,rax
  006d2:    	je     0x70a
  006d8:    	mov    rax,rdi
  006db:    	sar    rax,0x3f
  006df:    	add    rax,0x2
  006e3:    	and    rdi,0xfffffffffffffffc
  006e7:    	or     rdi,rax
  006ea:    	rol    rdi,0x3d
  006ee:    	movq   xmm3,rdi
  006f3:    	jmp    0x70a
  006f8:    	call   0xfffdbe4c
  006fd:    	test   rax,rax
  00700:    	je     0x30a15
  00706:    	movq   xmm3,xmm0
  0070a:    	ucomisd xmm6,xmm3
  0070e:    	jae    0x315f4
:00044 %7 = literal[true]
  00714: 00 	mov    rax,0x1c
  0071b:    	mov    QWORD PTR [rbp-0x60],rax
:00045 _ = %2.call hit=(%7; 1)              [Isect]
  0071f:    	mov    rdi,QWORD PTR [rbp-0x38]
  00723: 00 	test   rdi,0x7
  0072a:    	jne    0x30a3e
  00730:    	cmp    DWORD PTR [rdi+0x4],0x30
  00734:    	jne    0x30a3e
  0073a: 26 	cmp    DWORD PTR [rip+0xfffffffffffde1b0],0x26        # 0xfffde8f1
  00741:    	jne    0x30a3e
  00747:    	mov    esi,DWORD PTR [rip+0xf1f]        # 0x166c
  0074d:    	cmp    esi,0xffffffff
  00750:    	je     0x30a67
  00756:    	cmp    WORD PTR [rdi+0x2],0x3
  0075b:    	jne    0x778
  00761:    	cmp    esi,0x6
  00764:    	jge    0x778
  0076a:    	mov    rax,QWORD PTR [rbp-0x60]
  0076e:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00773:    	jmp    0x7d1
  00778:    	sub    rsp,0x20
  0077c:    	movq   QWORD PTR [rsp],xmm2
  00781:    	movq   QWORD PTR [rsp+0x8],xmm4
  00787:    	movq   QWORD PTR [rsp+0x10],xmm5
  0078d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00793:    	mov    rdx,QWORD PTR [rbp-0x60]
  00797: 31 	movabs rax,0x5631840539e0
  007a1:    	call   rax
  007a3:    	movq   xmm2,QWORD PTR [rsp]
  007a8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007ae:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007b4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007ba:    	add    rsp,0x20
  007be: 31 	movabs r13,0x563184c87590
  007c8:    	test   rax,rax
  007cb:    	je     0xfffdbe13
:00046 
:00048 _ = %2.call t=(%6; 1)                [Isect]
  007d1:    	movq   xmm0,xmm6
  007d5:    	call   0xfffdbf3f
  007da:    	mov    QWORD PTR [rbp-0x58],rax
  007de:    	mov    rdi,QWORD PTR [rbp-0x38]
  007e2: 00 	test   rdi,0x7
  007e9:    	jne    0x30acd
  007ef:    	cmp    DWORD PTR [rdi+0x4],0x30
  007f3:    	jne    0x30acd
  007f9: 26 	cmp    DWORD PTR [rip+0xfffffffffffde0f1],0x26        # 0xfffde8f1
  00800:    	jne    0x30acd
  00806:    	mov    esi,DWORD PTR [rip+0xe68]        # 0x1674
  0080c:    	cmp    esi,0xffffffff
  0080f:    	je     0x30ae9
  00815:    	cmp    WORD PTR [rdi+0x2],0x3
  0081a:    	jne    0x837
  00820:    	cmp    esi,0x6
  00823:    	jge    0x837
  00829:    	mov    rax,QWORD PTR [rbp-0x58]
  0082d:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00832:    	jmp    0x890
  00837:    	sub    rsp,0x20
  0083b:    	movq   QWORD PTR [rsp],xmm2
  00840:    	movq   QWORD PTR [rsp+0x8],xmm4
  00846:    	movq   QWORD PTR [rsp+0x10],xmm5
  0084c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00852:    	mov    rdx,QWORD PTR [rbp-0x58]
  00856: 31 	movabs rax,0x5631840539e0
  00860:    	call   rax
  00862:    	movq   xmm2,QWORD PTR [rsp]
  00867:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0086d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00873:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00879:    	add    rsp,0x20
  0087d: 31 	movabs r13,0x563184c875c0
  00887:    	test   rax,rax
  0088a:    	je     0xfffdbe13
:00049 
:00051 %7 = @n: Plane[IvarId(1)]
  00890:    	mov    rdi,QWORD PTR [rbp-0x28]
  00894:    	mov    rax,QWORD PTR [rdi+0x18]
  00898:    	mov    QWORD PTR [rbp-0x60],rax
:00052 _ = %2.call n=(%7; 1)                [Isect]
  0089c:    	mov    rdi,QWORD PTR [rbp-0x38]
  008a0: 00 	test   rdi,0x7
  008a7:    	jne    0x30b4f
  008ad:    	cmp    DWORD PTR [rdi+0x4],0x30
  008b1:    	jne    0x30b4f
  008b7: 26 	cmp    DWORD PTR [rip+0xfffffffffffde033],0x26        # 0xfffde8f1
  008be:    	jne    0x30b4f
  008c4:    	mov    esi,DWORD PTR [rip+0xdb2]        # 0x167c
  008ca:    	cmp    esi,0xffffffff
  008cd:    	je     0x30b6b
  008d3:    	cmp    WORD PTR [rdi+0x2],0x3
  008d8:    	jne    0x8f5
  008de:    	cmp    esi,0x6
  008e1:    	jge    0x8f5
  008e7:    	mov    rax,QWORD PTR [rbp-0x60]
  008eb:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  008f0:    	jmp    0x94e
  008f5:    	sub    rsp,0x20
  008f9:    	movq   QWORD PTR [rsp],xmm2
  008fe:    	movq   QWORD PTR [rsp+0x8],xmm4
  00904:    	movq   QWORD PTR [rsp+0x10],xmm5
  0090a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00910:    	mov    rdx,QWORD PTR [rbp-0x60]
  00914: 31 	movabs rax,0x5631840539e0
  0091e:    	call   rax
  00920:    	movq   xmm2,QWORD PTR [rsp]
  00925:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0092b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00931:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00937:    	add    rsp,0x20
  0093b: 31 	movabs r13,0x563184c87600
  00945:    	test   rax,rax
  00948:    	je     0xfffdbe13
:00053 
:00055 %8 = const[Vec]                      [Vec]
  0094e: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffddfa3]        # 0xfffde8f8
  00955: 00 	cmp    rax,QWORD PTR [rip+0xd3c]        # 0x1698
  0095c:    	jne    0x30bd1
  00962: 00 	mov    rax,QWORD PTR [rip+0xd1f]        # 0x1688
  00969:    	mov    QWORD PTR [rbp-0x68],rax
:00056 %10 = %1.call org()                  [Ray]
  0096d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00971: 00 	test   rdi,0x7
  00978:    	jne    0x30c4d
  0097e:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00982:    	jne    0x30c4d
  00988: 26 	cmp    DWORD PTR [rip+0xfffffffffffddf62],0x26        # 0xfffde8f1
  0098f:    	jne    0x30c4d
  00995:    	mov    esi,DWORD PTR [rip+0xd09]        # 0x16a4
  0099b:    	cmp    esi,0xffffffff
  0099e:    	je     0x30c69
  009a4:    	cmp    WORD PTR [rdi+0x2],0x3
  009a9:    	jne    0x9c2
  009af:    	cmp    esi,0x6
  009b2:    	jge    0x9c2
  009b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  009bd:    	jmp    0xa04
  009c2:    	sub    rsp,0x20
  009c6:    	movq   QWORD PTR [rsp],xmm2
  009cb:    	movq   QWORD PTR [rsp+0x8],xmm4
  009d1:    	movq   QWORD PTR [rsp+0x10],xmm5
  009d7:    	movq   QWORD PTR [rsp+0x18],xmm6
  009dd: 31 	movabs rax,0x563184053740
  009e7:    	call   rax
  009e9:    	movq   xmm2,QWORD PTR [rsp]
  009ee:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009f4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009fa:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a00:    	add    rsp,0x20
  00a04:    	mov    QWORD PTR [rbp-0x78],rax
:00057 
:00059 %9 = %10.call x()                    [Vec]
  00a08:    	mov    rdi,QWORD PTR [rbp-0x78]
  00a0c: 00 	test   rdi,0x7
  00a13:    	jne    0x30cc8
  00a19:    	cmp    DWORD PTR [rdi+0x4],0x28
  00a1d:    	jne    0x30cc8
  00a23: 26 	cmp    DWORD PTR [rip+0xfffffffffffddec7],0x26        # 0xfffde8f1
  00a2a:    	jne    0x30cc8
  00a30:    	mov    esi,DWORD PTR [rip+0xc76]        # 0x16ac
  00a36:    	cmp    esi,0xffffffff
  00a39:    	je     0x30ce4
  00a3f:    	cmp    WORD PTR [rdi+0x2],0x3
  00a44:    	jne    0xa5d
  00a4a:    	cmp    esi,0x6
  00a4d:    	jge    0xa5d
  00a53:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a58:    	jmp    0xa9f
  00a5d:    	sub    rsp,0x20
  00a61:    	movq   QWORD PTR [rsp],xmm2
  00a66:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a6c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a72:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a78: 31 	movabs rax,0x563184053740
  00a82:    	call   rax
  00a84:    	movq   xmm2,QWORD PTR [rsp]
  00a89:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a8f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a95:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a9b:    	add    rsp,0x20
  00a9f:    	mov    QWORD PTR [rbp-0x70],rax
:00060 
:00062 %11 = %1.call dir()                  [Ray]
  00aa3:    	mov    rdi,QWORD PTR [rbp-0x30]
  00aa7: 00 	test   rdi,0x7
  00aae:    	jne    0x30d43
  00ab4:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00ab8:    	jne    0x30d43
  00abe: 26 	cmp    DWORD PTR [rip+0xfffffffffffdde2c],0x26        # 0xfffde8f1
  00ac5:    	jne    0x30d43
  00acb:    	mov    esi,DWORD PTR [rip+0xbe3]        # 0x16b4
  00ad1:    	cmp    esi,0xffffffff
  00ad4:    	je     0x30d5f
  00ada:    	cmp    WORD PTR [rdi+0x2],0x3
  00adf:    	jne    0xaf8
  00ae5:    	cmp    esi,0x6
  00ae8:    	jge    0xaf8
  00aee:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00af3:    	jmp    0xb3a
  00af8:    	sub    rsp,0x20
  00afc:    	movq   QWORD PTR [rsp],xmm2
  00b01:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b07:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b0d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b13: 31 	movabs rax,0x563184053740
  00b1d:    	call   rax
  00b1f:    	movq   xmm2,QWORD PTR [rsp]
  00b24:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b2a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b30:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b36:    	add    rsp,0x20
  00b3a:    	mov    QWORD PTR [rbp-0x80],rax
:00063 
:00065 %10 = %11.call x()                   [Vec]
  00b3e:    	mov    rdi,QWORD PTR [rbp-0x80]
  00b42: 00 	test   rdi,0x7
  00b49:    	jne    0x30dbe
  00b4f:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b53:    	jne    0x30dbe
  00b59: 26 	cmp    DWORD PTR [rip+0xfffffffffffddd91],0x26        # 0xfffde8f1
  00b60:    	jne    0x30dbe
  00b66:    	mov    esi,DWORD PTR [rip+0xb50]        # 0x16bc
  00b6c:    	cmp    esi,0xffffffff
  00b6f:    	je     0x30dda
  00b75:    	cmp    WORD PTR [rdi+0x2],0x3
  00b7a:    	jne    0xb93
  00b80:    	cmp    esi,0x6
  00b83:    	jge    0xb93
  00b89:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b8e:    	jmp    0xbd5
  00b93:    	sub    rsp,0x20
  00b97:    	movq   QWORD PTR [rsp],xmm2
  00b9c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ba2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ba8:    	movq   QWORD PTR [rsp+0x18],xmm6
  00bae: 31 	movabs rax,0x563184053740
  00bb8:    	call   rax
  00bba:    	movq   xmm2,QWORD PTR [rsp]
  00bbf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00bc5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bcb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00bd1:    	add    rsp,0x20
  00bd5:    	mov    QWORD PTR [rbp-0x78],rax
:00066 
:00068 %10 = %6 * %10                       [Float][Float]
  00bd9:    	mov    rdi,QWORD PTR [rbp-0x78]
  00bdd: 00 	test   rdi,0x1
  00be4:    	jne    0x30e39
  00bea: 00 	test   rdi,0x2
  00bf1:    	je     0xc2d
  00bf7:    	xorps  xmm3,xmm3
  00bfa: 00 	movabs rax,0x8000000000000002
  00c04:    	cmp    rdi,rax
  00c07:    	je     0xc3f
  00c0d:    	mov    rax,rdi
  00c10:    	sar    rax,0x3f
  00c14:    	add    rax,0x2
  00c18:    	and    rdi,0xfffffffffffffffc
  00c1c:    	or     rdi,rax
  00c1f:    	rol    rdi,0x3d
  00c23:    	movq   xmm3,rdi
  00c28:    	jmp    0xc3f
  00c2d:    	call   0xfffdbe4c
  00c32:    	test   rax,rax
  00c35:    	je     0x30e39
  00c3b:    	movq   xmm3,xmm0
  00c3f:    	mulsd  xmm3,xmm6
:00069 %9 = %9 + %10                        [Float][Float]
  00c43:    	mov    rdi,QWORD PTR [rbp-0x70]
  00c47: 00 	test   rdi,0x1
  00c4e:    	jne    0x30e55
  00c54: 00 	test   rdi,0x2
  00c5b:    	je     0xc97
  00c61:    	xorps  xmm7,xmm7
  00c64: 00 	movabs rax,0x8000000000000002
  00c6e:    	cmp    rdi,rax
  00c71:    	je     0xca9
  00c77:    	mov    rax,rdi
  00c7a:    	sar    rax,0x3f
  00c7e:    	add    rax,0x2
  00c82:    	and    rdi,0xfffffffffffffffc
  00c86:    	or     rdi,rax
  00c89:    	rol    rdi,0x3d
  00c8d:    	movq   xmm7,rdi
  00c92:    	jmp    0xca9
  00c97:    	call   0xfffdbe4c
  00c9c:    	test   rax,rax
  00c9f:    	je     0x30e55
  00ca5:    	movq   xmm7,xmm0
  00ca9:    	addsd  xmm7,xmm3
:00070 %11 = %1.call org()                  [Ray]
  00cad:    	mov    rdi,QWORD PTR [rbp-0x30]
  00cb1: 00 	test   rdi,0x7
  00cb8:    	jne    0x30e7e
  00cbe:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00cc2:    	jne    0x30e7e
  00cc8: 26 	cmp    DWORD PTR [rip+0xfffffffffffddc22],0x26        # 0xfffde8f1
  00ccf:    	jne    0x30e7e
  00cd5:    	mov    esi,DWORD PTR [rip+0x9e9]        # 0x16c4
  00cdb:    	cmp    esi,0xffffffff
  00cde:    	je     0x30eb4
  00ce4:    	cmp    WORD PTR [rdi+0x2],0x3
  00ce9:    	jne    0xd02
  00cef:    	cmp    esi,0x6
  00cf2:    	jge    0xd02
  00cf8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00cfd:    	jmp    0xd5c
  00d02:    	sub    rsp,0x30
  00d06:    	movq   QWORD PTR [rsp],xmm2
  00d0b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d11:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d17:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d1d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00d23:    	movq   QWORD PTR [rsp+0x28],xmm7
  00d29: 31 	movabs rax,0x563184053740
  00d33:    	call   rax
  00d35:    	movq   xmm2,QWORD PTR [rsp]
  00d3a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d40:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d46:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d4c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d52:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d58:    	add    rsp,0x30
  00d5c:    	mov    QWORD PTR [rbp-0x80],rax
:00071 
:00073 %10 = %11.call y()                   [Vec]
  00d60:    	mov    rdi,QWORD PTR [rbp-0x80]
  00d64: 00 	test   rdi,0x7
  00d6b:    	jne    0x30f2b
  00d71:    	cmp    DWORD PTR [rdi+0x4],0x28
  00d75:    	jne    0x30f2b
  00d7b: 26 	cmp    DWORD PTR [rip+0xfffffffffffddb6f],0x26        # 0xfffde8f1
  00d82:    	jne    0x30f2b
  00d88:    	mov    esi,DWORD PTR [rip+0x93e]        # 0x16cc
  00d8e:    	cmp    esi,0xffffffff
  00d91:    	je     0x30f54
  00d97:    	cmp    WORD PTR [rdi+0x2],0x3
  00d9c:    	jne    0xdb5
  00da2:    	cmp    esi,0x6
  00da5:    	jge    0xdb5
  00dab:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00db0:    	jmp    0xe03
  00db5:    	sub    rsp,0x30
  00db9:    	movq   QWORD PTR [rsp],xmm2
  00dbe:    	movq   QWORD PTR [rsp+0x8],xmm4
  00dc4:    	movq   QWORD PTR [rsp+0x10],xmm5
  00dca:    	movq   QWORD PTR [rsp+0x18],xmm6
  00dd0:    	movq   QWORD PTR [rsp+0x20],xmm7
  00dd6: 31 	movabs rax,0x563184053740
  00de0:    	call   rax
  00de2:    	movq   xmm2,QWORD PTR [rsp]
  00de7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ded:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00df3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00df9:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00dff:    	add    rsp,0x30
  00e03:    	mov    QWORD PTR [rbp-0x78],rax
:00074 
:00076 %12 = %1.call dir()                  [Ray]
  00e07:    	mov    rdi,QWORD PTR [rbp-0x30]
  00e0b: 00 	test   rdi,0x7
  00e12:    	jne    0x30fbf
  00e18:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00e1c:    	jne    0x30fbf
  00e22: 26 	cmp    DWORD PTR [rip+0xfffffffffffddac8],0x26        # 0xfffde8f1
  00e29:    	jne    0x30fbf
  00e2f:    	mov    esi,DWORD PTR [rip+0x89f]        # 0x16d4
  00e35:    	cmp    esi,0xffffffff
  00e38:    	je     0x30fe8
  00e3e:    	cmp    WORD PTR [rdi+0x2],0x3
  00e43:    	jne    0xe5c
  00e49:    	cmp    esi,0x6
  00e4c:    	jge    0xe5c
  00e52:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e57:    	jmp    0xeaa
  00e5c:    	sub    rsp,0x30
  00e60:    	movq   QWORD PTR [rsp],xmm2
  00e65:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e6b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e71:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e77:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e7d: 31 	movabs rax,0x563184053740
  00e87:    	call   rax
  00e89:    	movq   xmm2,QWORD PTR [rsp]
  00e8e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e94:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e9a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ea0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00ea6:    	add    rsp,0x30
  00eaa: ff 	mov    QWORD PTR [rbp-0x88],rax
:00077 
:00079 %11 = %12.call y()                   [Vec]
  00eb1: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00eb8: 00 	test   rdi,0x7
  00ebf:    	jne    0x31053
  00ec5:    	cmp    DWORD PTR [rdi+0x4],0x28
  00ec9:    	jne    0x31053
  00ecf: 26 	cmp    DWORD PTR [rip+0xfffffffffffdda1b],0x26        # 0xfffde8f1
  00ed6:    	jne    0x31053
  00edc:    	mov    esi,DWORD PTR [rip+0x7fa]        # 0x16dc
  00ee2:    	cmp    esi,0xffffffff
  00ee5:    	je     0x3107c
  00eeb:    	cmp    WORD PTR [rdi+0x2],0x3
  00ef0:    	jne    0xf09
  00ef6:    	cmp    esi,0x6
  00ef9:    	jge    0xf09
  00eff:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f04:    	jmp    0xf57
  00f09:    	sub    rsp,0x30
  00f0d:    	movq   QWORD PTR [rsp],xmm2
  00f12:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f18:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f1e:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f24:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f2a: 31 	movabs rax,0x563184053740
  00f34:    	call   rax
  00f36:    	movq   xmm2,QWORD PTR [rsp]
  00f3b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f41:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f47:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f4d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00f53:    	add    rsp,0x30
  00f57:    	mov    QWORD PTR [rbp-0x80],rax
:00080 
:00082 %11 = %6 * %11                       [Float][Float]
  00f5b:    	mov    rdi,QWORD PTR [rbp-0x80]
  00f5f: 00 	test   rdi,0x1
  00f66:    	jne    0x310e7
  00f6c: 00 	test   rdi,0x2
  00f73:    	je     0xfaf
  00f79:    	xorps  xmm3,xmm3
  00f7c: 00 	movabs rax,0x8000000000000002
  00f86:    	cmp    rdi,rax
  00f89:    	je     0xfc1
  00f8f:    	mov    rax,rdi
  00f92:    	sar    rax,0x3f
  00f96:    	add    rax,0x2
  00f9a:    	and    rdi,0xfffffffffffffffc
  00f9e:    	or     rdi,rax
  00fa1:    	rol    rdi,0x3d
  00fa5:    	movq   xmm3,rdi
  00faa:    	jmp    0xfc1
  00faf:    	call   0xfffdbe4c
  00fb4:    	test   rax,rax
  00fb7:    	je     0x310e7
  00fbd:    	movq   xmm3,xmm0
  00fc1:    	mulsd  xmm3,xmm6
:00083 %10 = %10 + %11                      [Float][Float]
  00fc5:    	mov    rdi,QWORD PTR [rbp-0x78]
  00fc9: 00 	test   rdi,0x1
  00fd0:    	jne    0x31110
  00fd6: 00 	test   rdi,0x2
  00fdd:    	je     0x101a
  00fe3:    	xorps  xmm8,xmm8
  00fe7: 00 	movabs rax,0x8000000000000002
  00ff1:    	cmp    rdi,rax
  00ff4:    	je     0x102d
  00ffa:    	mov    rax,rdi
  00ffd:    	sar    rax,0x3f
  01001:    	add    rax,0x2
  01005:    	and    rdi,0xfffffffffffffffc
  01009:    	or     rdi,rax
  0100c:    	rol    rdi,0x3d
  01010:    	movq   xmm8,rdi
  01015:    	jmp    0x102d
  0101a:    	call   0xfffdbe4c
  0101f:    	test   rax,rax
  01022:    	je     0x31110
  01028:    	movq   xmm8,xmm0
  0102d:    	addsd  xmm8,xmm3
:00084 %12 = %1.call org()                  [Ray]
  01032:    	mov    rdi,QWORD PTR [rbp-0x30]
  01036: 00 	test   rdi,0x7
  0103d:    	jne    0x31146
  01043:    	cmp    DWORD PTR [rdi+0x4],0x2e
  01047:    	jne    0x31146
  0104d: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd89d],0x26        # 0xfffde8f1
  01054:    	jne    0x31146
  0105a:    	mov    esi,DWORD PTR [rip+0x684]        # 0x16e4
  01060:    	cmp    esi,0xffffffff
  01063:    	je     0x3118a
  01069:    	cmp    WORD PTR [rdi+0x2],0x3
  0106e:    	jne    0x1087
  01074:    	cmp    esi,0x6
  01077:    	jge    0x1087
  0107d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01082:    	jmp    0x10ef
  01087:    	sub    rsp,0x40
  0108b:    	movq   QWORD PTR [rsp],xmm2
  01090:    	movq   QWORD PTR [rsp+0x8],xmm3
  01096:    	movq   QWORD PTR [rsp+0x10],xmm4
  0109c:    	movq   QWORD PTR [rsp+0x18],xmm5
  010a2:    	movq   QWORD PTR [rsp+0x20],xmm6
  010a8:    	movq   QWORD PTR [rsp+0x28],xmm7
  010ae: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  010b5: 31 	movabs rax,0x563184053740
  010bf:    	call   rax
  010c1:    	movq   xmm2,QWORD PTR [rsp]
  010c6:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010cc:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010d2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010d8:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010de:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010e4: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010eb:    	add    rsp,0x40
  010ef: ff 	mov    QWORD PTR [rbp-0x88],rax
:00085 
:00087 %11 = %12.call z()                   [Vec]
  010f6: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  010fd: 00 	test   rdi,0x7
  01104:    	jne    0x3120f
  0110a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0110e:    	jne    0x3120f
  01114: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd7d6],0x26        # 0xfffde8f1
  0111b:    	jne    0x3120f
  01121:    	mov    esi,DWORD PTR [rip+0x5c5]        # 0x16ec
  01127:    	cmp    esi,0xffffffff
  0112a:    	je     0x31246
  01130:    	cmp    WORD PTR [rdi+0x2],0x3
  01135:    	jne    0x114e
  0113b:    	cmp    esi,0x6
  0113e:    	jge    0x114e
  01144:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01149:    	jmp    0x11aa
  0114e:    	sub    rsp,0x30
  01152:    	movq   QWORD PTR [rsp],xmm2
  01157:    	movq   QWORD PTR [rsp+0x8],xmm4
  0115d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01163:    	movq   QWORD PTR [rsp+0x18],xmm6
  01169:    	movq   QWORD PTR [rsp+0x20],xmm7
  0116f: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01176: 31 	movabs rax,0x563184053740
  01180:    	call   rax
  01182:    	movq   xmm2,QWORD PTR [rsp]
  01187:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0118d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01193:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01199:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0119f: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  011a6:    	add    rsp,0x30
  011aa:    	mov    QWORD PTR [rbp-0x80],rax
:00088 
:00090 %13 = %1.call dir()                  [Ray]
  011ae:    	mov    rdi,QWORD PTR [rbp-0x30]
  011b2: 00 	test   rdi,0x7
  011b9:    	jne    0x312bf
  011bf:    	cmp    DWORD PTR [rdi+0x4],0x2e
  011c3:    	jne    0x312bf
  011c9: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd721],0x26        # 0xfffde8f1
  011d0:    	jne    0x312bf
  011d6:    	mov    esi,DWORD PTR [rip+0x518]        # 0x16f4
  011dc:    	cmp    esi,0xffffffff
  011df:    	je     0x312f6
  011e5:    	cmp    WORD PTR [rdi+0x2],0x3
  011ea:    	jne    0x1203
  011f0:    	cmp    esi,0x6
  011f3:    	jge    0x1203
  011f9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  011fe:    	jmp    0x125f
  01203:    	sub    rsp,0x30
  01207:    	movq   QWORD PTR [rsp],xmm2
  0120c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01212:    	movq   QWORD PTR [rsp+0x10],xmm5
  01218:    	movq   QWORD PTR [rsp+0x18],xmm6
  0121e:    	movq   QWORD PTR [rsp+0x20],xmm7
  01224: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0122b: 31 	movabs rax,0x563184053740
  01235:    	call   rax
  01237:    	movq   xmm2,QWORD PTR [rsp]
  0123c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01242:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01248:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0124e:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01254: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0125b:    	add    rsp,0x30
  0125f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %12 = %13.call z()                   [Vec]
  01266: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0126d: 00 	test   rdi,0x7
  01274:    	jne    0x3136f
  0127a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0127e:    	jne    0x3136f
  01284: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd666],0x26        # 0xfffde8f1
  0128b:    	jne    0x3136f
  01291:    	mov    esi,DWORD PTR [rip+0x465]        # 0x16fc
  01297:    	cmp    esi,0xffffffff
  0129a:    	je     0x313a6
  012a0:    	cmp    WORD PTR [rdi+0x2],0x3
  012a5:    	jne    0x12be
  012ab:    	cmp    esi,0x6
  012ae:    	jge    0x12be
  012b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  012b9:    	jmp    0x131a
  012be:    	sub    rsp,0x30
  012c2:    	movq   QWORD PTR [rsp],xmm2
  012c7:    	movq   QWORD PTR [rsp+0x8],xmm4
  012cd:    	movq   QWORD PTR [rsp+0x10],xmm5
  012d3:    	movq   QWORD PTR [rsp+0x18],xmm6
  012d9:    	movq   QWORD PTR [rsp+0x20],xmm7
  012df: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  012e6: 31 	movabs rax,0x563184053740
  012f0:    	call   rax
  012f2:    	movq   xmm2,QWORD PTR [rsp]
  012f7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012fd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01303:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01309:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0130f: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01316:    	add    rsp,0x30
  0131a: ff 	mov    QWORD PTR [rbp-0x88],rax
:00094 
:00096 %12 = %6 * %12                       [Float][Float]
  01321: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01328: 00 	test   rdi,0x1
  0132f:    	jne    0x3141f
  01335: 00 	test   rdi,0x2
  0133c:    	je     0x1378
  01342:    	xorps  xmm3,xmm3
  01345: 00 	movabs rax,0x8000000000000002
  0134f:    	cmp    rdi,rax
  01352:    	je     0x138a
  01358:    	mov    rax,rdi
  0135b:    	sar    rax,0x3f
  0135f:    	add    rax,0x2
  01363:    	and    rdi,0xfffffffffffffffc
  01367:    	or     rdi,rax
  0136a:    	rol    rdi,0x3d
  0136e:    	movq   xmm3,rdi
  01373:    	jmp    0x138a
  01378:    	call   0xfffdbe4c
  0137d:    	test   rax,rax
  01380:    	je     0x3141f
  01386:    	movq   xmm3,xmm0
  0138a:    	mulsd  xmm3,xmm6
:00097 %11 = %11 + %12                      [Float][Float]
  0138e:    	mov    rdi,QWORD PTR [rbp-0x80]
  01392: 00 	test   rdi,0x1
  01399:    	jne    0x31456
  0139f: 00 	test   rdi,0x2
  013a6:    	je     0x13e3
  013ac:    	xorps  xmm9,xmm9
  013b0: 00 	movabs rax,0x8000000000000002
  013ba:    	cmp    rdi,rax
  013bd:    	je     0x13f6
  013c3:    	mov    rax,rdi
  013c6:    	sar    rax,0x3f
  013ca:    	add    rax,0x2
  013ce:    	and    rdi,0xfffffffffffffffc
  013d2:    	or     rdi,rax
  013d5:    	rol    rdi,0x3d
  013d9:    	movq   xmm9,rdi
  013de:    	jmp    0x13f6
  013e3:    	call   0xfffdbe4c
  013e8:    	test   rax,rax
  013eb:    	je     0x31456
  013f1:    	movq   xmm9,xmm0
  013f6:    	addsd  xmm9,xmm3
:00098 %7 = %8.call new(%9; 3)              [#<Class:Vec>]
  013fb:    	movq   xmm0,xmm7
  013ff:    	call   0xfffdbf3f
  01404:    	mov    QWORD PTR [rbp-0x70],rax
  01408:    	movq   xmm0,xmm8
  0140d:    	call   0xfffdbf3f
  01412:    	mov    QWORD PTR [rbp-0x78],rax
  01416:    	movq   xmm0,xmm9
  0141b:    	call   0xfffdbf3f
  01420:    	mov    QWORD PTR [rbp-0x80],rax
  01424:    	mov    rdi,QWORD PTR [rbp-0x68]
  01428: 00 	test   rdi,0x7
  0142f:    	jne    0x3149d
  01435:    	cmp    DWORD PTR [rdi+0x4],0x29
  01439:    	jne    0x3149d
  0143f: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd4ab],0x26        # 0xfffde8f1
  01446:    	jne    0x3149d
  0144c: 00 	mov    r9,0x0
  01453:    	sub    rsp,0x40
  01457:    	movq   QWORD PTR [rsp],xmm2
  0145c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01462:    	movq   QWORD PTR [rsp+0x10],xmm4
  01468:    	movq   QWORD PTR [rsp+0x18],xmm5
  0146e:    	movq   QWORD PTR [rsp+0x20],xmm6
  01474:    	movq   QWORD PTR [rsp+0x28],xmm7
  0147a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01481: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01488:    	mov    rdx,rdi
  0148b:    	mov    rax,QWORD PTR [rbx]
  0148e:    	lea    rdi,[rsp-0x18]
  01493:    	mov    QWORD PTR [rdi],rax
  01496:    	mov    QWORD PTR [rbx],rdi
  01499: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014a2:    	mov    QWORD PTR [rsp-0x38],rcx
  014a7:    	lea    rcx,[rbp-0x70]
  014ab: 00 	mov    r8,0x3
  014b2:    	call   0x314c9
  014b7:    	lea    rdi,[rbp-0x8]
  014bb:    	mov    QWORD PTR [rbx],rdi
  014be:    	movq   xmm2,QWORD PTR [rsp]
  014c3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  014c9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  014cf:    	movq   xmm5,QWORD PTR [rsp+0x18]
  014d5:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014db:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014e1: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  014e8: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  014ef:    	add    rsp,0x40
  014f3: 31 	movabs r13,0x563184c878e0
  014fd:    	test   rax,rax
  01500:    	je     0xfffdbe13
  01506:    	mov    QWORD PTR [rbp-0x60],rax
:00099 
:00101 _ = %2.call pl=(%7; 1)               [Isect]
  0150a:    	mov    rdi,QWORD PTR [rbp-0x38]
  0150e: 00 	test   rdi,0x7
  01515:    	jne    0x314fb
  0151b:    	cmp    DWORD PTR [rdi+0x4],0x30
  0151f:    	jne    0x314fb
  01525: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd3c5],0x26        # 0xfffde8f1
  0152c:    	jne    0x314fb
  01532:    	mov    esi,DWORD PTR [rip+0x1cc]        # 0x1704
  01538:    	cmp    esi,0xffffffff
  0153b:    	je     0x31527
  01541:    	cmp    WORD PTR [rdi+0x2],0x3
  01546:    	jne    0x1563
  0154c:    	cmp    esi,0x6
  0154f:    	jge    0x1563
  01555:    	mov    rax,QWORD PTR [rbp-0x60]
  01559:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0155e:    	jmp    0x15f0
  01563:    	sub    rsp,0x40
  01567:    	movq   QWORD PTR [rsp],xmm2
  0156c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01572:    	movq   QWORD PTR [rsp+0x10],xmm4
  01578:    	movq   QWORD PTR [rsp+0x18],xmm5
  0157e:    	movq   QWORD PTR [rsp+0x20],xmm6
  01584:    	movq   QWORD PTR [rsp+0x28],xmm7
  0158a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01591: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01598:    	mov    rdx,QWORD PTR [rbp-0x60]
  0159c: 31 	movabs rax,0x5631840539e0
  015a6:    	call   rax
  015a8:    	movq   xmm2,QWORD PTR [rsp]
  015ad:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015b3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015b9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015bf:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015c5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015cb: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  015d2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015d9:    	add    rsp,0x40
  015dd: 31 	movabs r13,0x563184c87910
  015e7:    	test   rax,rax
  015ea:    	je     0xfffdbe13
:00102 
:00104 br =>:00105
  015f0:    	jmp    0x31627
:00105 %7 = nil
  015f5: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00106 ret %7
  015fd:    	mov    rax,QWORD PTR [rbp-0x60]
  01601:    	leave  
  01602:    	ret    
==> start whole compile: <unnamed> FuncId(82) self_class:Scene start:[00000] bytecode:0x563184ccb970
<== finished compile. elapsed:152µs
offset:Pos(153904) code: 8877 bytes  data: 347 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xd0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00064: ff 	mov    QWORD PTR [rbp-0xb8],rax
  0006b: ff 	mov    QWORD PTR [rbp-0xc0],rax
  00072:    	mov    rdi,QWORD PTR [rbp-0x28]
  00076: 00 	test   rdi,0x7
  0007d:    	jne    0x2ff55
  00083:    	cmp    DWORD PTR [rdi+0x4],0x32
  00087:    	jne    0x2ff55
:00000 %14 = dynvar(4, %4)
  0008d:    	mov    rax,QWORD PTR [rbp-0x10]
  00091:    	mov    rax,QWORD PTR [rax]
  00094:    	mov    rax,QWORD PTR [rax]
  00097:    	mov    rax,QWORD PTR [rax]
  0009a:    	mov    rax,QWORD PTR [rax-0x38]
  0009e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00001 %14 = %14 + 1: i16                   [Integer][Integer]
  000a5: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000ac: 00 	test   rdi,0x1
  000b3:    	je     0x2ff64
  000b9:    	add    rdi,0x2
  000bd:    	jo     0x2ff64
  000c3: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00002 dynvar(4, %4) = %14
  000ca:    	mov    rax,QWORD PTR [rbp-0x10]
  000ce:    	mov    rax,QWORD PTR [rax]
  000d1:    	mov    rax,QWORD PTR [rax]
  000d4:    	mov    rax,QWORD PTR [rax]
  000d7: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000de:    	mov    QWORD PTR [rax-0x38],rdi
:00003 %14 = dynvar(4, %1)
  000e2:    	mov    rax,QWORD PTR [rbp-0x10]
  000e6:    	mov    rax,QWORD PTR [rax]
  000e9:    	mov    rax,QWORD PTR [rax]
  000ec:    	mov    rax,QWORD PTR [rax]
  000ef:    	mov    rax,QWORD PTR [rax-0x20]
  000f3: ff 	mov    QWORD PTR [rbp-0x98],rax
:00004 %2 = %14.call to_f()                 [Integer]
  000fa: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00101: 00 	test   rdi,0x1
  00108:    	je     0x2ff73
  0010e: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd0d4],0x26        # 0xfffdd1e9
  00115:    	jne    0x2ff73
  0011b:    	sar    rdi,1
  0011e:    	cvtsi2sd xmm2,rdi
:00005 
:00007 %14 = dynvar(4, %2)
  00123:    	mov    rax,QWORD PTR [rbp-0x10]
  00127:    	mov    rax,QWORD PTR [rax]
  0012a:    	mov    rax,QWORD PTR [rax]
  0012d:    	mov    rax,QWORD PTR [rax]
  00130:    	mov    rax,QWORD PTR [rax-0x28]
  00134: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 %3 = %14.call to_f()                 [Integer]
  0013b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00142: 00 	test   rdi,0x1
  00149:    	je     0x2ff82
  0014f: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd093],0x26        # 0xfffdd1e9
  00156:    	jne    0x2ff82
  0015c:    	sar    rdi,1
  0015f:    	cvtsi2sd xmm3,rdi
:00009 
:00011 %14 = dynvar(2, %1)
  00164:    	mov    rax,QWORD PTR [rbp-0x10]
  00168:    	mov    rax,QWORD PTR [rax]
  0016b:    	mov    rax,QWORD PTR [rax-0x20]
  0016f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %4 = %14.call to_f()                 [Integer]
  00176: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0017d: 00 	test   rdi,0x1
  00184:    	je     0x2ff9e
  0018a: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd058],0x26        # 0xfffdd1e9
  00191:    	jne    0x2ff9e
  00197:    	sar    rdi,1
  0019a:    	cvtsi2sd xmm4,rdi
:00013 
:00015 %14 = dynvar(3, %1)
  0019f:    	mov    rax,QWORD PTR [rbp-0x10]
  001a3:    	mov    rax,QWORD PTR [rax]
  001a6:    	mov    rax,QWORD PTR [rax]
  001a9:    	mov    rax,QWORD PTR [rax-0x20]
  001ad: ff 	mov    QWORD PTR [rbp-0x98],rax
:00016 %5 = %14.call to_f()                 [Integer]
  001b4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001bb: 00 	test   rdi,0x1
  001c2:    	je     0x2ffc7
  001c8: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd01a],0x26        # 0xfffdd1e9
  001cf:    	jne    0x2ffc7
  001d5:    	sar    rdi,1
  001d8:    	cvtsi2sd xmm5,rdi
:00017 
:00019 %6 = %1.call to_f()                  [Integer]
  001dd:    	mov    rdi,QWORD PTR [rbp-0x30]
  001e1: 00 	test   rdi,0x1
  001e8:    	je     0x2fffd
  001ee: 26 	cmp    DWORD PTR [rip+0xfffffffffffdcff4],0x26        # 0xfffdd1e9
  001f5:    	jne    0x2fffd
  001fb:    	sar    rdi,1
  001fe:    	cvtsi2sd xmm6,rdi
:00020 
:00022 %14 = dynvar(1, %1)
  00203:    	mov    rax,QWORD PTR [rbp-0x10]
  00207:    	mov    rax,QWORD PTR [rax-0x20]
  0020b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00023 %7 = %14.call to_f()                 [Integer]
  00212: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00219: 00 	test   rdi,0x1
  00220:    	je     0x30040
  00226: 26 	cmp    DWORD PTR [rip+0xfffffffffffdcfbc],0x26        # 0xfffdd1e9
  0022d:    	jne    0x30040
  00233:    	sar    rdi,1
  00236:    	cvtsi2sd xmm7,rdi
:00024 
:00026 %14 = dynvar(4, %5)
  0023b:    	mov    rax,QWORD PTR [rbp-0x10]
  0023f:    	mov    rax,QWORD PTR [rax]
  00242:    	mov    rax,QWORD PTR [rax]
  00245:    	mov    rax,QWORD PTR [rax]
  00248:    	mov    rax,QWORD PTR [rax-0x40]
  0024c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00027 %14 = %6 / %14                       [Float][Float]
  00253: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0025a: 00 	test   rdi,0x1
  00261:    	jne    0x30090
  00267: 00 	test   rdi,0x2
  0026e:    	je     0x2ab
  00274:    	xorps  xmm8,xmm8
  00278: 00 	movabs rax,0x8000000000000002
  00282:    	cmp    rdi,rax
  00285:    	je     0x2be
  0028b:    	mov    rax,rdi
  0028e:    	sar    rax,0x3f
  00292:    	add    rax,0x2
  00296:    	and    rdi,0xfffffffffffffffc
  0029a:    	or     rdi,rax
  0029d:    	rol    rdi,0x3d
  002a1:    	movq   xmm8,rdi
  002a6:    	jmp    0x2be
  002ab:    	call   0xfffda744
  002b0:    	test   rax,rax
  002b3:    	je     0x30090
  002b9:    	movq   xmm8,xmm0
  002be:    	movq   rax,xmm8
  002c3:    	test   rax,rax
  002c6:    	je     0xfffda730
  002cc:    	movq   xmm0,xmm6
  002d0:    	divsd  xmm0,xmm8
  002d5:    	movq   xmm8,xmm0
:00028 %14 = %4 + %14                       [Float][Float]
  002da:    	addsd  xmm8,xmm4
:00029 %15 = literal[2.0]
  002df: 1f 	movq   xmm9,QWORD PTR [rip+0x1fc8]        # 0x22b0
  002e8: 00 	mov    rax,0x2
  002ef: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00030 %15 = %2 / %15                       [Float][Float]
  002f6:    	movq   rax,xmm9
  002fb:    	test   rax,rax
  002fe:    	je     0xfffda730
  00304:    	movq   xmm0,xmm2
  00308:    	divsd  xmm0,xmm9
  0030d:    	movq   xmm9,xmm0
:00031 %14 = %14 - %15                      [Float][Float]
  00312:    	subsd  xmm8,xmm9
:00032 %15 = literal[2.0]
  00317: 1f 	movq   xmm9,QWORD PTR [rip+0x1fa0]        # 0x22c0
  00320: 00 	mov    rax,0x2
  00327: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00033 %15 = %2 / %15                       [Float][Float]
  0032e:    	movq   rax,xmm9
  00333:    	test   rax,rax
  00336:    	je     0xfffda730
  0033c:    	movq   xmm0,xmm2
  00340:    	divsd  xmm0,xmm9
  00345:    	movq   xmm9,xmm0
:00034 %8 = %14 / %15                       [Float][Float]
  0034a:    	movq   xmm10,xmm8
  0034f:    	movq   rax,xmm9
  00354:    	test   rax,rax
  00357:    	je     0xfffda730
  0035d:    	divsd  xmm10,xmm9
:00035 %14 = dynvar(4, %5)
  00362:    	mov    rax,QWORD PTR [rbp-0x10]
  00366:    	mov    rax,QWORD PTR [rax]
  00369:    	mov    rax,QWORD PTR [rax]
  0036c:    	mov    rax,QWORD PTR [rax]
  0036f:    	mov    rax,QWORD PTR [rax-0x40]
  00373: ff 	mov    QWORD PTR [rbp-0x98],rax
:00036 %14 = %7 / %14                       [Float][Float]
  0037a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00381: 00 	test   rdi,0x1
  00388:    	jne    0x300ed
  0038e: 00 	test   rdi,0x2
  00395:    	je     0x3d2
  0039b:    	xorps  xmm8,xmm8
  0039f: 00 	movabs rax,0x8000000000000002
  003a9:    	cmp    rdi,rax
  003ac:    	je     0x3e5
  003b2:    	mov    rax,rdi
  003b5:    	sar    rax,0x3f
  003b9:    	add    rax,0x2
  003bd:    	and    rdi,0xfffffffffffffffc
  003c1:    	or     rdi,rax
  003c4:    	rol    rdi,0x3d
  003c8:    	movq   xmm8,rdi
  003cd:    	jmp    0x3e5
  003d2:    	call   0xfffda744
  003d7:    	test   rax,rax
  003da:    	je     0x300ed
  003e0:    	movq   xmm8,xmm0
  003e5:    	movq   rax,xmm8
  003ea:    	test   rax,rax
  003ed:    	je     0xfffda730
  003f3:    	movq   xmm0,xmm7
  003f7:    	divsd  xmm0,xmm8
  003fc:    	movq   xmm8,xmm0
:00037 %14 = %5 + %14                       [Float][Float]
  00401:    	addsd  xmm8,xmm5
:00038 %15 = literal[2.0]
  00406: 1e 	movq   xmm9,QWORD PTR [rip+0x1ec1]        # 0x22d0
  0040f: 00 	mov    rax,0x2
  00416: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00039 %15 = %3 / %15                       [Float][Float]
  0041d:    	movq   rax,xmm9
  00422:    	test   rax,rax
  00425:    	je     0xfffda730
  0042b:    	movq   xmm0,xmm3
  0042f:    	divsd  xmm0,xmm9
  00434:    	movq   xmm9,xmm0
:00040 %14 = %14 - %15                      [Float][Float]
  00439:    	subsd  xmm8,xmm9
:00041 %14 = neg %14                        [Float]
  0043e: 00 	xorps  xmm8,XMMWORD PTR [rip+0x1e9a]        # 0x22e0
:00042 %15 = literal[2.0]
  00446: 1e 	movq   xmm9,QWORD PTR [rip+0x1ea1]        # 0x22f0
  0044f: 00 	mov    rax,0x2
  00456: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00043 %15 = %3 / %15                       [Float][Float]
  0045d:    	movq   rax,xmm9
  00462:    	test   rax,rax
  00465:    	je     0xfffda730
  0046b:    	movq   xmm0,xmm3
  0046f:    	divsd  xmm0,xmm9
  00474:    	movq   xmm9,xmm0
:00044 %9 = %14 / %15                       [Float][Float]
  00479:    	movq   xmm11,xmm8
  0047e:    	movq   rax,xmm9
  00483:    	test   rax,rax
  00486:    	je     0xfffda730
  0048c:    	divsd  xmm11,xmm9
:00045 %15 = const[Vec]                     [Vec]
  00491: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdcd58]        # 0xfffdd1f0
  00498: 00 	cmp    rax,QWORD PTR [rip+0x1e71]        # 0x2310
  0049f:    	jne    0x30169
  004a5: 00 	mov    rax,QWORD PTR [rip+0x1e54]        # 0x2300
  004ac: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00046 %16 = %8
:00047 %17 = %9
:00048 %18 = literal[-1.0]
  004b3: 1e 	movq   xmm9,QWORD PTR [rip+0x1e64]        # 0x2320
  004bc: 00 	movabs rax,0xff80000000000006
  004c6: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00049 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
  004cd:    	movq   xmm0,xmm10
  004d2:    	call   0xfffda837
  004d7: ff 	mov    QWORD PTR [rbp-0xa8],rax
  004de:    	movq   xmm0,xmm11
  004e3:    	call   0xfffda837
  004e8: ff 	mov    QWORD PTR [rbp-0xb0],rax
  004ef: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  004f6: 00 	test   rdi,0x7
  004fd:    	jne    0x30227
  00503:    	cmp    DWORD PTR [rdi+0x4],0x29
  00507:    	jne    0x30227
  0050d: 26 	cmp    DWORD PTR [rip+0xfffffffffffdccd5],0x26        # 0xfffdd1e9
  00514:    	jne    0x30227
  0051a: 00 	mov    r9,0x0
  00521:    	sub    rsp,0x50
  00525:    	movq   QWORD PTR [rsp],xmm2
  0052a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00530:    	movq   QWORD PTR [rsp+0x10],xmm4
  00536:    	movq   QWORD PTR [rsp+0x18],xmm5
  0053c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00542:    	movq   QWORD PTR [rsp+0x28],xmm7
  00548: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0054f: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00556: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0055d:    	mov    rdx,rdi
  00560:    	mov    rax,QWORD PTR [rbx]
  00563:    	lea    rdi,[rsp-0x18]
  00568:    	mov    QWORD PTR [rdi],rax
  0056b:    	mov    QWORD PTR [rbx],rdi
  0056e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00577:    	mov    QWORD PTR [rsp-0x38],rcx
  0057c: ff 	lea    rcx,[rbp-0xa8]
  00583: 00 	mov    r8,0x3
  0058a:    	call   0x302a0
  0058f:    	lea    rdi,[rbp-0x8]
  00593:    	mov    QWORD PTR [rbx],rdi
  00596:    	movq   xmm2,QWORD PTR [rsp]
  0059b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005a1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005a7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005ad:    	movq   xmm6,QWORD PTR [rsp+0x20]
  005b3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  005b9: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  005c0: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  005c7: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  005ce:    	add    rsp,0x50
  005d2: 31 	movabs r13,0x563184ccbca0
  005dc:    	test   rax,rax
  005df:    	je     0xfffda70b
  005e5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00050 
:00052 %10 = %14.call vnormalize()          [Vec]
  005ec: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  005f3: 00 	test   rdi,0x7
  005fa:    	jne    0x302d2
  00600:    	cmp    DWORD PTR [rdi+0x4],0x28
  00604:    	jne    0x302d2
  0060a: 26 	cmp    DWORD PTR [rip+0xfffffffffffdcbd8],0x26        # 0xfffdd1e9
  00611:    	jne    0x302d2
  00617:    	sub    rsp,0x50
  0061b:    	movq   QWORD PTR [rsp],xmm2
  00620:    	movq   QWORD PTR [rsp+0x8],xmm3
  00626:    	movq   QWORD PTR [rsp+0x10],xmm4
  0062c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00632:    	movq   QWORD PTR [rsp+0x20],xmm6
  00638:    	movq   QWORD PTR [rsp+0x28],xmm7
  0063e: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00645: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0064c: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00653:    	mov    rax,QWORD PTR [rbx]
  00656:    	lea    rdi,[rsp-0x18]
  0065b:    	mov    QWORD PTR [rdi],rax
  0065e:    	mov    QWORD PTR [rbx],rdi
  00661: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0066a:    	mov    QWORD PTR [rsp-0x38],rcx
  0066f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00676:    	mov    QWORD PTR [rsp-0x38],rax
  0067b: 00 	mov    rdi,0x0
  00682: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0068b: 07 	movabs rax,0x700000043
  00695:    	mov    QWORD PTR [rsp-0x28],rax
  0069a: 31 	movabs r13,0x563184c828e0
  006a4:    	call   0xfffddae0
  006a9:    	lea    rdi,[rbp-0x8]
  006ad:    	mov    QWORD PTR [rbx],rdi
  006b0:    	movq   xmm2,QWORD PTR [rsp]
  006b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  006c7:    	movq   xmm6,QWORD PTR [rsp+0x20]
  006cd:    	movq   xmm7,QWORD PTR [rsp+0x28]
  006d3: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  006da: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  006e1: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  006e8:    	add    rsp,0x50
  006ec: 31 	movabs r13,0x563184ccbcd0
  006f6:    	test   rax,rax
  006f9:    	je     0xfffda70b
  006ff:    	mov    QWORD PTR [rbp-0x78],rax
:00053 
:00055 %14 = const[Ray]                     [Ray]
  00703: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdcae6]        # 0xfffdd1f0
  0070a: 00 	cmp    rax,QWORD PTR [rip+0x1c2f]        # 0x2340
  00711:    	jne    0x3034b
  00717: 00 	mov    rax,QWORD PTR [rip+0x1c12]        # 0x2330
  0071e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00056 %16 = const[Vec]                     [Vec]
  00725: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdcac4]        # 0xfffdd1f0
  0072c: 00 	cmp    rax,QWORD PTR [rip+0x1c2d]        # 0x2360
  00733:    	jne    0x30409
  00739: 00 	mov    rax,QWORD PTR [rip+0x1c10]        # 0x2350
  00740: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00057 %17 = literal[0.0]
  00747: 1c 	movq   xmm8,QWORD PTR [rip+0x1c20]        # 0x2370
  00750: 00 	movabs rax,0x8000000000000002
  0075a: ff 	mov    QWORD PTR [rbp-0xb0],rax
:00058 %18 = literal[0.0]
  00761: 1c 	movq   xmm9,QWORD PTR [rip+0x1c16]        # 0x2380
  0076a: 00 	movabs rax,0x8000000000000002
  00774: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00059 %19 = literal[0.0]
  0077b: 1c 	movq   xmm12,QWORD PTR [rip+0x1c0c]        # 0x2390
  00784: 00 	movabs rax,0x8000000000000002
  0078e: ff 	mov    QWORD PTR [rbp-0xc0],rax
:00060 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
  00795: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0079c: 00 	test   rdi,0x7
  007a3:    	jne    0x304c7
  007a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  007ad:    	jne    0x304c7
  007b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffdca2f],0x26        # 0xfffdd1e9
  007ba:    	jne    0x304c7
  007c0: 00 	mov    r9,0x0
  007c7:    	sub    rsp,0x60
  007cb:    	movq   QWORD PTR [rsp],xmm2
  007d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  007d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  007dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  007e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  007e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  007ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  007f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  007fc: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00803: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0080a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00811:    	mov    rdx,rdi
  00814:    	mov    rax,QWORD PTR [rbx]
  00817:    	lea    rdi,[rsp-0x18]
  0081c:    	mov    QWORD PTR [rdi],rax
  0081f:    	mov    QWORD PTR [rbx],rdi
  00822: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0082b:    	mov    QWORD PTR [rsp-0x38],rcx
  00830: ff 	lea    rcx,[rbp-0xb0]
  00837: 00 	mov    r8,0x3
  0083e:    	call   0x30540
  00843:    	lea    rdi,[rbp-0x8]
  00847:    	mov    QWORD PTR [rbx],rdi
  0084a:    	movq   xmm2,QWORD PTR [rsp]
  0084f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00855:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0085b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00861:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00867:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0086d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00874: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0087b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00882: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00889: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00890:    	add    rsp,0x60
  00894: 31 	movabs r13,0x563184ccbd50
  0089e:    	test   rax,rax
  008a1:    	je     0xfffda70b
  008a7: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00061 
:00063 %16 = %10
  008ae:    	mov    rax,QWORD PTR [rbp-0x78]
  008b2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00064 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  008b9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  008c0: 00 	test   rdi,0x7
  008c7:    	jne    0x30572
  008cd:    	cmp    DWORD PTR [rdi+0x4],0x2f
  008d1:    	jne    0x30572
  008d7: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc90b],0x26        # 0xfffdd1e9
  008de:    	jne    0x30572
  008e4: 00 	mov    r9,0x0
  008eb:    	sub    rsp,0x60
  008ef:    	movq   QWORD PTR [rsp],xmm2
  008f4:    	movq   QWORD PTR [rsp+0x8],xmm3
  008fa:    	movq   QWORD PTR [rsp+0x10],xmm4
  00900:    	movq   QWORD PTR [rsp+0x18],xmm5
  00906:    	movq   QWORD PTR [rsp+0x20],xmm6
  0090c:    	movq   QWORD PTR [rsp+0x28],xmm7
  00912: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00919: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00920: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00927: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0092e: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00935:    	mov    rdx,rdi
  00938:    	mov    rax,QWORD PTR [rbx]
  0093b:    	lea    rdi,[rsp-0x18]
  00940:    	mov    QWORD PTR [rdi],rax
  00943:    	mov    QWORD PTR [rbx],rdi
  00946: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0094f:    	mov    QWORD PTR [rsp-0x38],rcx
  00954: ff 	lea    rcx,[rbp-0xa0]
  0095b: 00 	mov    r8,0x2
  00962:    	call   0x305eb
  00967:    	lea    rdi,[rbp-0x8]
  0096b:    	mov    QWORD PTR [rbx],rdi
  0096e:    	movq   xmm2,QWORD PTR [rsp]
  00973:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00979:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0097f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00985:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0098b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00991: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00998: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0099f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  009a6: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  009ad: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  009b4:    	add    rsp,0x60
  009b8: 31 	movabs r13,0x563184ccbd90
  009c2:    	test   rax,rax
  009c5:    	je     0xfffda70b
  009cb:    	mov    QWORD PTR [rbp-0x80],rax
:00065 
:00067 %14 = const[Isect]                   [Isect]
  009cf: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdc81a]        # 0xfffdd1f0
  009d6: 00 	cmp    rax,QWORD PTR [rip+0x19d3]        # 0x23b0
  009dd:    	jne    0x3061d
  009e3: 00 	mov    rax,QWORD PTR [rip+0x19b6]        # 0x23a0
  009ea: ff 	mov    QWORD PTR [rbp-0x98],rax
:00068 %12 = %14.call new()                 [#<Class:Isect>]
  009f1: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  009f8: 00 	test   rdi,0x7
  009ff:    	jne    0x306f7
  00a05:    	cmp    DWORD PTR [rdi+0x4],0x31
  00a09:    	jne    0x306f7
  00a0f: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc7d3],0x26        # 0xfffdd1e9
  00a16:    	jne    0x306f7
  00a1c: 00 	mov    r9,0x0
  00a23:    	sub    rsp,0x60
  00a27:    	movq   QWORD PTR [rsp],xmm2
  00a2c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a32:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a38:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a3e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a44:    	movq   QWORD PTR [rsp+0x28],xmm7
  00a4a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00a51: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00a58: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00a5f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00a66: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00a6d:    	mov    rdx,rdi
  00a70:    	mov    rax,QWORD PTR [rbx]
  00a73:    	lea    rdi,[rsp-0x18]
  00a78:    	mov    QWORD PTR [rdi],rax
  00a7b:    	mov    QWORD PTR [rbx],rdi
  00a7e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a87:    	mov    QWORD PTR [rsp-0x38],rcx
  00a8c: ff 	lea    rcx,[rbp-0xa0]
  00a93: 00 	mov    r8,0x0
  00a9a:    	call   0x30770
  00a9f:    	lea    rdi,[rbp-0x8]
  00aa3:    	mov    QWORD PTR [rbx],rdi
  00aa6:    	movq   xmm2,QWORD PTR [rsp]
  00aab:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ab1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ab7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00abd:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ac3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00ac9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00ad0: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00ad7: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00ade: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00ae5: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00aec:    	add    rsp,0x60
  00af0: 31 	movabs r13,0x563184ccbdd0
  00afa:    	test   rax,rax
  00afd:    	je     0xfffda70b
  00b03: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = @spheres: Scene[IvarId(0)]
  00b0a:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b0e:    	mov    rax,QWORD PTR [rdi+0x10]
  00b12: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 %15 = 0: i32
  00b19: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00073 %14 = %14.[%15]                      [Array][Integer]
  00b24:    	sub    rsp,0x60
  00b28:    	movq   QWORD PTR [rsp],xmm2
  00b2d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b33:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b39:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b3f:    	movq   QWORD PTR [rsp+0x20],xmm6
  00b45:    	movq   QWORD PTR [rsp+0x28],xmm7
  00b4b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00b52: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00b59: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00b60: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00b67: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00b6e: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00b75: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00b7c:    	mov    rdi,rbx
  00b7f:    	mov    rsi,r12
  00b82: 31 	movabs r8,0x563184ccbe08
  00b8c: 31 	movabs rax,0x5631840b8230
  00b96:    	call   rax
  00b98:    	movq   xmm2,QWORD PTR [rsp]
  00b9d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ba3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ba9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00baf:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00bb5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00bbb: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00bc2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00bc9: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00bd0: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00bd7: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00bde:    	add    rsp,0x60
  00be2: 31 	movabs r13,0x563184ccbe10
  00bec:    	test   rax,rax
  00bef:    	je     0xfffda70b
  00bf5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 %15 = %11
  00bfc:    	mov    rax,QWORD PTR [rbp-0x80]
  00c00: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00075 %16 = %12
  00c07: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c0e: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00076 _ = %14.call intersect(%15; 2)       [Sphere]
  00c15: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c1c: 00 	test   rdi,0x7
  00c23:    	jne    0x307a2
  00c29:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00c2d:    	jne    0x307a2
  00c33: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc5af],0x26        # 0xfffdd1e9
  00c3a:    	jne    0x307a2
  00c40:    	sub    rsp,0x60
  00c44:    	movq   QWORD PTR [rsp],xmm2
  00c49:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c4f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c55:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c5b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c61:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c67: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00c6e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00c75: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00c7c: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00c83: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00c8a:    	mov    rax,QWORD PTR [rbx]
  00c8d:    	lea    rdi,[rsp-0x18]
  00c92:    	mov    QWORD PTR [rdi],rax
  00c95:    	mov    QWORD PTR [rbx],rdi
  00c98: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ca1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ca6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00cad:    	mov    QWORD PTR [rsp-0x38],rax
  00cb2: 00 	mov    rdi,0x2
  00cb9: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00cc0:    	mov    QWORD PTR [rsp-0x40],rax
  00cc5: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00ccc:    	mov    QWORD PTR [rsp-0x48],rax
  00cd1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cda: 10 	movabs rax,0x1000000045
  00ce4:    	mov    QWORD PTR [rsp-0x28],rax
  00ce9: 31 	movabs r13,0x563184c85400
  00cf3:    	call   0xfffddde8
  00cf8:    	lea    rdi,[rbp-0x8]
  00cfc:    	mov    QWORD PTR [rbx],rdi
  00cff:    	movq   xmm2,QWORD PTR [rsp]
  00d04:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d0a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d10:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d16:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d1c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d22: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d29: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d30: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d37: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00d3e: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00d45:    	add    rsp,0x60
  00d49: 31 	movabs r13,0x563184ccbe50
  00d53:    	test   rax,rax
  00d56:    	je     0xfffda70b
:00077 
:00079 %14 = @spheres: Scene[IvarId(0)]
  00d5c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00d60:    	mov    rax,QWORD PTR [rdi+0x10]
  00d64: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 %15 = 1: i32
  00d6b: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00081 %14 = %14.[%15]                      [Array][Integer]
  00d76:    	sub    rsp,0x60
  00d7a:    	movq   QWORD PTR [rsp],xmm2
  00d7f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d85:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d8b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d91:    	movq   QWORD PTR [rsp+0x20],xmm6
  00d97:    	movq   QWORD PTR [rsp+0x28],xmm7
  00d9d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00da4: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00dab: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00db2: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00db9: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00dc0: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00dc7: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00dce:    	mov    rdi,rbx
  00dd1:    	mov    rsi,r12
  00dd4: 31 	movabs r8,0x563184ccbe88
  00dde: 31 	movabs rax,0x5631840b8230
  00de8:    	call   rax
  00dea:    	movq   xmm2,QWORD PTR [rsp]
  00def:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00df5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dfb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e01:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e07:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e0d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e14: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e1b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e22: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e29: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e30:    	add    rsp,0x60
  00e34: 31 	movabs r13,0x563184ccbe90
  00e3e:    	test   rax,rax
  00e41:    	je     0xfffda70b
  00e47: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 %15 = %11
  00e4e:    	mov    rax,QWORD PTR [rbp-0x80]
  00e52: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00083 %16 = %12
  00e59: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00e60: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00084 _ = %14.call intersect(%15; 2)       [Sphere]
  00e67: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e6e: 00 	test   rdi,0x7
  00e75:    	jne    0x3081b
  00e7b:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00e7f:    	jne    0x3081b
  00e85: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc35d],0x26        # 0xfffdd1e9
  00e8c:    	jne    0x3081b
  00e92:    	sub    rsp,0x60
  00e96:    	movq   QWORD PTR [rsp],xmm2
  00e9b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ea1:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ea7:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ead:    	movq   QWORD PTR [rsp+0x20],xmm6
  00eb3:    	movq   QWORD PTR [rsp+0x28],xmm7
  00eb9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ec0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ec7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ece: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ed5: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00edc:    	mov    rax,QWORD PTR [rbx]
  00edf:    	lea    rdi,[rsp-0x18]
  00ee4:    	mov    QWORD PTR [rdi],rax
  00ee7:    	mov    QWORD PTR [rbx],rdi
  00eea: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ef3:    	mov    QWORD PTR [rsp-0x38],rcx
  00ef8: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00eff:    	mov    QWORD PTR [rsp-0x38],rax
  00f04: 00 	mov    rdi,0x2
  00f0b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f12:    	mov    QWORD PTR [rsp-0x40],rax
  00f17: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f1e:    	mov    QWORD PTR [rsp-0x48],rax
  00f23: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f2c: 10 	movabs rax,0x1000000045
  00f36:    	mov    QWORD PTR [rsp-0x28],rax
  00f3b: 31 	movabs r13,0x563184c85400
  00f45:    	call   0xfffddde8
  00f4a:    	lea    rdi,[rbp-0x8]
  00f4e:    	mov    QWORD PTR [rbx],rdi
  00f51:    	movq   xmm2,QWORD PTR [rsp]
  00f56:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f5c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f62:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f68:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f6e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f74: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f7b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f82: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00f89: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00f90: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00f97:    	add    rsp,0x60
  00f9b: 31 	movabs r13,0x563184ccbed0
  00fa5:    	test   rax,rax
  00fa8:    	je     0xfffda70b
:00085 
:00087 %14 = @spheres: Scene[IvarId(0)]
  00fae:    	mov    rdi,QWORD PTR [rbp-0x28]
  00fb2:    	mov    rax,QWORD PTR [rdi+0x10]
  00fb6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 2: i32
  00fbd: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00089 %14 = %14.[%15]                      [Array][Integer]
  00fc8:    	sub    rsp,0x60
  00fcc:    	movq   QWORD PTR [rsp],xmm2
  00fd1:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fd7:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fdd:    	movq   QWORD PTR [rsp+0x18],xmm5
  00fe3:    	movq   QWORD PTR [rsp+0x20],xmm6
  00fe9:    	movq   QWORD PTR [rsp+0x28],xmm7
  00fef: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ff6: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ffd: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01004: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0100b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01012: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01019: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01020:    	mov    rdi,rbx
  01023:    	mov    rsi,r12
  01026: 31 	movabs r8,0x563184ccbf08
  01030: 31 	movabs rax,0x5631840b8230
  0103a:    	call   rax
  0103c:    	movq   xmm2,QWORD PTR [rsp]
  01041:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01047:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0104d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01053:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01059:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0105f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01066: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0106d: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01074: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0107b: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01082:    	add    rsp,0x60
  01086: 31 	movabs r13,0x563184ccbf10
  01090:    	test   rax,rax
  01093:    	je     0xfffda70b
  01099: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %15 = %11
  010a0:    	mov    rax,QWORD PTR [rbp-0x80]
  010a4: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00091 %16 = %12
  010ab: ff 	mov    rax,QWORD PTR [rbp-0x88]
  010b2: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00092 _ = %14.call intersect(%15; 2)       [Sphere]
  010b9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  010c0: 00 	test   rdi,0x7
  010c7:    	jne    0x30894
  010cd:    	cmp    DWORD PTR [rdi+0x4],0x2a
  010d1:    	jne    0x30894
  010d7: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc10b],0x26        # 0xfffdd1e9
  010de:    	jne    0x30894
  010e4:    	sub    rsp,0x60
  010e8:    	movq   QWORD PTR [rsp],xmm2
  010ed:    	movq   QWORD PTR [rsp+0x8],xmm3
  010f3:    	movq   QWORD PTR [rsp+0x10],xmm4
  010f9:    	movq   QWORD PTR [rsp+0x18],xmm5
  010ff:    	movq   QWORD PTR [rsp+0x20],xmm6
  01105:    	movq   QWORD PTR [rsp+0x28],xmm7
  0110b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01112: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01119: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01120: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01127: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0112e:    	mov    rax,QWORD PTR [rbx]
  01131:    	lea    rdi,[rsp-0x18]
  01136:    	mov    QWORD PTR [rdi],rax
  01139:    	mov    QWORD PTR [rbx],rdi
  0113c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01145:    	mov    QWORD PTR [rsp-0x38],rcx
  0114a: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01151:    	mov    QWORD PTR [rsp-0x38],rax
  01156: 00 	mov    rdi,0x2
  0115d: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01164:    	mov    QWORD PTR [rsp-0x40],rax
  01169: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01170:    	mov    QWORD PTR [rsp-0x48],rax
  01175: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0117e: 10 	movabs rax,0x1000000045
  01188:    	mov    QWORD PTR [rsp-0x28],rax
  0118d: 31 	movabs r13,0x563184c85400
  01197:    	call   0xfffddde8
  0119c:    	lea    rdi,[rbp-0x8]
  011a0:    	mov    QWORD PTR [rbx],rdi
  011a3:    	movq   xmm2,QWORD PTR [rsp]
  011a8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  011ae:    	movq   xmm4,QWORD PTR [rsp+0x10]
  011b4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  011ba:    	movq   xmm6,QWORD PTR [rsp+0x20]
  011c0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  011c6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  011cd: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  011d4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  011db: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  011e2: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  011e9:    	add    rsp,0x60
  011ed: 31 	movabs r13,0x563184ccbf50
  011f7:    	test   rax,rax
  011fa:    	je     0xfffda70b
:00093 
:00095 %14 = @plane: Scene[IvarId(1)]
  01200:    	mov    rdi,QWORD PTR [rbp-0x28]
  01204:    	mov    rax,QWORD PTR [rdi+0x18]
  01208: ff 	mov    QWORD PTR [rbp-0x98],rax
:00096 %15 = %11
  0120f:    	mov    rax,QWORD PTR [rbp-0x80]
  01213: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %16 = %12
  0121a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01221: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00098 _ = %14.call intersect(%15; 2)       [Plane]
  01228: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0122f: 00 	test   rdi,0x7
  01236:    	jne    0x3090d
  0123c:    	cmp    DWORD PTR [rdi+0x4],0x2c
  01240:    	jne    0x3090d
  01246: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbf9c],0x26        # 0xfffdd1e9
  0124d:    	jne    0x3090d
  01253:    	sub    rsp,0x60
  01257:    	movq   QWORD PTR [rsp],xmm2
  0125c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01262:    	movq   QWORD PTR [rsp+0x10],xmm4
  01268:    	movq   QWORD PTR [rsp+0x18],xmm5
  0126e:    	movq   QWORD PTR [rsp+0x20],xmm6
  01274:    	movq   QWORD PTR [rsp+0x28],xmm7
  0127a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01281: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01288: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0128f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01296: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0129d:    	mov    rax,QWORD PTR [rbx]
  012a0:    	lea    rdi,[rsp-0x18]
  012a5:    	mov    QWORD PTR [rdi],rax
  012a8:    	mov    QWORD PTR [rbx],rdi
  012ab: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012b4:    	mov    QWORD PTR [rsp-0x38],rcx
  012b9: ff 	mov    rax,QWORD PTR [rbp-0x98]
  012c0:    	mov    QWORD PTR [rsp-0x38],rax
  012c5: 00 	mov    rdi,0x2
  012cc: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  012d3:    	mov    QWORD PTR [rsp-0x40],rax
  012d8: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  012df:    	mov    QWORD PTR [rsp-0x48],rax
  012e4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012ed: 0e 	movabs rax,0xe00000047
  012f7:    	mov    QWORD PTR [rsp-0x28],rax
  012fc: 31 	movabs r13,0x563184c872a0
  01306:    	call   0xfffde3b4
  0130b:    	lea    rdi,[rbp-0x8]
  0130f:    	mov    QWORD PTR [rbx],rdi
  01312:    	movq   xmm2,QWORD PTR [rsp]
  01317:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0131d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01323:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01329:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0132f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01335: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0133c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01343: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0134a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01351: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01358:    	add    rsp,0x60
  0135c: 31 	movabs r13,0x563184ccbfb0
  01366:    	test   rax,rax
  01369:    	je     0xfffda70b
:00099 
:00101 %14 = %12.call hit()                 [Isect]
  0136f: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01376: 00 	test   rdi,0x7
  0137d:    	jne    0x30986
  01383:    	cmp    DWORD PTR [rdi+0x4],0x30
  01387:    	jne    0x30986
  0138d: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbe55],0x26        # 0xfffdd1e9
  01394:    	jne    0x30986
  0139a:    	mov    esi,DWORD PTR [rip+0x101c]        # 0x23bc
  013a0:    	cmp    esi,0xffffffff
  013a3:    	je     0x309ff
  013a9:    	cmp    WORD PTR [rdi+0x2],0x3
  013ae:    	jne    0x13c7
  013b4:    	cmp    esi,0x6
  013b7:    	jge    0x13c7
  013bd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  013c2:    	jmp    0x1467
  013c7:    	sub    rsp,0x60
  013cb:    	movq   QWORD PTR [rsp],xmm2
  013d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  013d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  013dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  013e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  013e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  013ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  013f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  013fc: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01403: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0140a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01411: 31 	movabs rax,0x563184053740
  0141b:    	call   rax
  0141d:    	movq   xmm2,QWORD PTR [rsp]
  01422:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01428:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0142e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01434:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0143a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01440: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01447: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0144e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01455: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0145c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01463:    	add    rsp,0x60
  01467: ff 	mov    QWORD PTR [rbp-0x98],rax
:00102 
:00104 condnotbr %14 =>:00147
  0146e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01475:    	or     rax,0x10
  01479:    	cmp    rax,0x14
  0147d:    	je     0x2299
:00105 %14 = %12
  01483: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0148a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 %13 = %0.call ambient_occlusion(%14; 1) [Scene]
  01491:    	mov    rdi,QWORD PTR [rbp-0x28]
  01495: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbd4d],0x26        # 0xfffdd1e9
  0149c:    	jne    0x30abc
  014a2:    	sub    rsp,0x60
  014a6:    	movq   QWORD PTR [rsp],xmm2
  014ab:    	movq   QWORD PTR [rsp+0x8],xmm3
  014b1:    	movq   QWORD PTR [rsp+0x10],xmm4
  014b7:    	movq   QWORD PTR [rsp+0x18],xmm5
  014bd:    	movq   QWORD PTR [rsp+0x20],xmm6
  014c3:    	movq   QWORD PTR [rsp+0x28],xmm7
  014c9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014d0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014d7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  014de: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  014e5: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  014ec:    	mov    rax,QWORD PTR [rbx]
  014ef:    	lea    rdi,[rsp-0x18]
  014f4:    	mov    QWORD PTR [rdi],rax
  014f7:    	mov    QWORD PTR [rbx],rdi
  014fa: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01503:    	mov    QWORD PTR [rsp-0x38],rcx
  01508:    	mov    rax,QWORD PTR [rbp-0x28]
  0150c:    	mov    QWORD PTR [rsp-0x38],rax
  01511: 00 	mov    rdi,0x1
  01518: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0151f:    	mov    QWORD PTR [rsp-0x40],rax
  01524: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0152d: 0e 	movabs rax,0xe0000004b
  01537:    	mov    QWORD PTR [rsp-0x28],rax
  0153c: 31 	movabs r13,0x563184c879b0
  01546:    	call   0xfffe6c13
  0154b:    	lea    rdi,[rbp-0x8]
  0154f:    	mov    QWORD PTR [rbx],rdi
  01552:    	movq   xmm2,QWORD PTR [rsp]
  01557:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0155d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01563:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01569:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0156f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01575: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0157c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01583: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0158a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01591: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01598:    	add    rsp,0x60
  0159c: 31 	movabs r13,0x563184ccc030
  015a6:    	test   rax,rax
  015a9:    	je     0xfffda70b
  015af: ff 	mov    QWORD PTR [rbp-0x90],rax
:00107 
:00109 %14 = dynvar(2, %2)
  015b6:    	mov    rax,QWORD PTR [rbp-0x10]
  015ba:    	mov    rax,QWORD PTR [rax]
  015bd:    	mov    rax,QWORD PTR [rax-0x28]
  015c1: ff 	mov    QWORD PTR [rbp-0x98],rax
:00110 %16 = dynvar(2, %2)
  015c8:    	mov    rax,QWORD PTR [rbp-0x10]
  015cc:    	mov    rax,QWORD PTR [rax]
  015cf:    	mov    rax,QWORD PTR [rax-0x28]
  015d3: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00111 %15 = %16.call x()                   [Vec]
  015da: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  015e1: 00 	test   rdi,0x7
  015e8:    	jne    0x30b35
  015ee:    	cmp    DWORD PTR [rdi+0x4],0x28
  015f2:    	jne    0x30b35
  015f8: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbbea],0x26        # 0xfffdd1e9
  015ff:    	jne    0x30b35
  01605:    	mov    esi,DWORD PTR [rip+0xdb9]        # 0x23c4
  0160b:    	cmp    esi,0xffffffff
  0160e:    	je     0x30bae
  01614:    	cmp    WORD PTR [rdi+0x2],0x3
  01619:    	jne    0x1632
  0161f:    	cmp    esi,0x6
  01622:    	jge    0x1632
  01628:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0162d:    	jmp    0x16d2
  01632:    	sub    rsp,0x60
  01636:    	movq   QWORD PTR [rsp],xmm2
  0163b:    	movq   QWORD PTR [rsp+0x8],xmm3
  01641:    	movq   QWORD PTR [rsp+0x10],xmm4
  01647:    	movq   QWORD PTR [rsp+0x18],xmm5
  0164d:    	movq   QWORD PTR [rsp+0x20],xmm6
  01653:    	movq   QWORD PTR [rsp+0x28],xmm7
  01659: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01660: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01667: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0166e: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01675: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0167c: 31 	movabs rax,0x563184053740
  01686:    	call   rax
  01688:    	movq   xmm2,QWORD PTR [rsp]
  0168d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01693:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01699:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0169f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  016a5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  016ab: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  016b2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  016b9: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  016c0: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  016c7: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  016ce:    	add    rsp,0x60
  016d2: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00112 
:00114 %16 = %13.call x()                   [Vec]
  016d9: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  016e0: 00 	test   rdi,0x7
  016e7:    	jne    0x30c6b
  016ed:    	cmp    DWORD PTR [rdi+0x4],0x28
  016f1:    	jne    0x30c6b
  016f7: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbaeb],0x26        # 0xfffdd1e9
  016fe:    	jne    0x30c6b
  01704:    	mov    esi,DWORD PTR [rip+0xcc2]        # 0x23cc
  0170a:    	cmp    esi,0xffffffff
  0170d:    	je     0x30ce4
  01713:    	cmp    WORD PTR [rdi+0x2],0x3
  01718:    	jne    0x1731
  0171e:    	cmp    esi,0x6
  01721:    	jge    0x1731
  01727:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0172c:    	jmp    0x17d1
  01731:    	sub    rsp,0x60
  01735:    	movq   QWORD PTR [rsp],xmm2
  0173a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01740:    	movq   QWORD PTR [rsp+0x10],xmm4
  01746:    	movq   QWORD PTR [rsp+0x18],xmm5
  0174c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01752:    	movq   QWORD PTR [rsp+0x28],xmm7
  01758: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0175f: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01766: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0176d: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01774: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0177b: 31 	movabs rax,0x563184053740
  01785:    	call   rax
  01787:    	movq   xmm2,QWORD PTR [rsp]
  0178c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01792:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01798:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0179e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  017a4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  017aa: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  017b1: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  017b8: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  017bf: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  017c6: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  017cd:    	add    rsp,0x60
  017d1: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00115 
:00117 %15 = %15 + %16                      [Float][Float]
  017d8: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  017df: 00 	test   rdi,0x1
  017e6:    	jne    0x30da1
  017ec: 00 	test   rdi,0x2
  017f3:    	je     0x1830
  017f9:    	xorps  xmm13,xmm13
  017fd: 00 	movabs rax,0x8000000000000002
  01807:    	cmp    rdi,rax
  0180a:    	je     0x1843
  01810:    	mov    rax,rdi
  01813:    	sar    rax,0x3f
  01817:    	add    rax,0x2
  0181b:    	and    rdi,0xfffffffffffffffc
  0181f:    	or     rdi,rax
  01822:    	rol    rdi,0x3d
  01826:    	movq   xmm13,rdi
  0182b:    	jmp    0x1843
  01830:    	call   0xfffda744
  01835:    	test   rax,rax
  01838:    	je     0x30da1
  0183e:    	movq   xmm13,xmm0
  01843: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0184a: 00 	test   rdi,0x1
  01851:    	jne    0x30e1a
  01857: 00 	test   rdi,0x2
  0185e:    	je     0x189b
  01864:    	xorps  xmm14,xmm14
  01868: 00 	movabs rax,0x8000000000000002
  01872:    	cmp    rdi,rax
  01875:    	je     0x18ae
  0187b:    	mov    rax,rdi
  0187e:    	sar    rax,0x3f
  01882:    	add    rax,0x2
  01886:    	and    rdi,0xfffffffffffffffc
  0188a:    	or     rdi,rax
  0188d:    	rol    rdi,0x3d
  01891:    	movq   xmm14,rdi
  01896:    	jmp    0x18ae
  0189b:    	call   0xfffda744
  018a0:    	test   rax,rax
  018a3:    	je     0x30e1a
  018a9:    	movq   xmm14,xmm0
  018ae:    	addsd  xmm13,xmm14
:00118 _ = %14.call x=(%15; 1)              [Vec]
  018b3:    	movq   xmm0,xmm13
  018b8:    	call   0xfffda837
  018bd: ff 	mov    QWORD PTR [rbp-0xa0],rax
  018c4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  018cb: 00 	test   rdi,0x7
  018d2:    	jne    0x30e93
  018d8:    	cmp    DWORD PTR [rdi+0x4],0x28
  018dc:    	jne    0x30e93
  018e2: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb900],0x26        # 0xfffdd1e9
  018e9:    	jne    0x30e93
  018ef:    	mov    esi,DWORD PTR [rip+0xadf]        # 0x23d4
  018f5:    	cmp    esi,0xffffffff
  018f8:    	je     0x30f0c
  018fe:    	cmp    WORD PTR [rdi+0x2],0x3
  01903:    	jne    0x1923
  01909:    	cmp    esi,0x6
  0190c:    	jge    0x1923
  01912: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01919:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0191e:    	jmp    0x19f9
  01923:    	sub    rsp,0x70
  01927:    	movq   QWORD PTR [rsp],xmm2
  0192c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01932:    	movq   QWORD PTR [rsp+0x10],xmm4
  01938:    	movq   QWORD PTR [rsp+0x18],xmm5
  0193e:    	movq   QWORD PTR [rsp+0x20],xmm6
  01944:    	movq   QWORD PTR [rsp+0x28],xmm7
  0194a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01951: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01958: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0195f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01966: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0196d: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  01974: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  0197b: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01982: 31 	movabs rax,0x5631840539e0
  0198c:    	call   rax
  0198e:    	movq   xmm2,QWORD PTR [rsp]
  01993:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01999:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0199f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  019a5:    	movq   xmm6,QWORD PTR [rsp+0x20]
  019ab:    	movq   xmm7,QWORD PTR [rsp+0x28]
  019b1: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  019b8: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  019bf: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  019c6: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  019cd: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  019d4: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  019db: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  019e2:    	add    rsp,0x70
  019e6: 31 	movabs r13,0x563184ccc0f0
  019f0:    	test   rax,rax
  019f3:    	je     0xfffda70b
:00119 
:00121 %14 = dynvar(2, %2)
  019f9:    	mov    rax,QWORD PTR [rbp-0x10]
  019fd:    	mov    rax,QWORD PTR [rax]
  01a00:    	mov    rax,QWORD PTR [rax-0x28]
  01a04: ff 	mov    QWORD PTR [rbp-0x98],rax
:00122 %16 = dynvar(2, %2)
  01a0b:    	mov    rax,QWORD PTR [rbp-0x10]
  01a0f:    	mov    rax,QWORD PTR [rax]
  01a12:    	mov    rax,QWORD PTR [rax-0x28]
  01a16: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00123 %15 = %16.call y()                   [Vec]
  01a1d: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01a24: 00 	test   rdi,0x7
  01a2b:    	jne    0x30fef
  01a31:    	cmp    DWORD PTR [rdi+0x4],0x28
  01a35:    	jne    0x30fef
  01a3b: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb7a7],0x26        # 0xfffdd1e9
  01a42:    	jne    0x30fef
  01a48:    	mov    esi,DWORD PTR [rip+0x98e]        # 0x23dc
  01a4e:    	cmp    esi,0xffffffff
  01a51:    	je     0x31068
  01a57:    	cmp    WORD PTR [rdi+0x2],0x3
  01a5c:    	jne    0x1a75
  01a62:    	cmp    esi,0x6
  01a65:    	jge    0x1a75
  01a6b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01a70:    	jmp    0x1b15
  01a75:    	sub    rsp,0x60
  01a79:    	movq   QWORD PTR [rsp],xmm2
  01a7e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01a84:    	movq   QWORD PTR [rsp+0x10],xmm4
  01a8a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01a90:    	movq   QWORD PTR [rsp+0x20],xmm6
  01a96:    	movq   QWORD PTR [rsp+0x28],xmm7
  01a9c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01aa3: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01aaa: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01ab1: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01ab8: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01abf: 31 	movabs rax,0x563184053740
  01ac9:    	call   rax
  01acb:    	movq   xmm2,QWORD PTR [rsp]
  01ad0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01ad6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01adc:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01ae2:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01ae8:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01aee: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01af5: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01afc: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01b03: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01b0a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01b11:    	add    rsp,0x60
  01b15: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00124 
:00126 %16 = %13.call y()                   [Vec]
  01b1c: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b23: 00 	test   rdi,0x7
  01b2a:    	jne    0x31125
  01b30:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b34:    	jne    0x31125
  01b3a: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb6a8],0x26        # 0xfffdd1e9
  01b41:    	jne    0x31125
  01b47:    	mov    esi,DWORD PTR [rip+0x897]        # 0x23e4
  01b4d:    	cmp    esi,0xffffffff
  01b50:    	je     0x3119e
  01b56:    	cmp    WORD PTR [rdi+0x2],0x3
  01b5b:    	jne    0x1b74
  01b61:    	cmp    esi,0x6
  01b64:    	jge    0x1b74
  01b6a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01b6f:    	jmp    0x1c14
  01b74:    	sub    rsp,0x60
  01b78:    	movq   QWORD PTR [rsp],xmm2
  01b7d:    	movq   QWORD PTR [rsp+0x8],xmm3
  01b83:    	movq   QWORD PTR [rsp+0x10],xmm4
  01b89:    	movq   QWORD PTR [rsp+0x18],xmm5
  01b8f:    	movq   QWORD PTR [rsp+0x20],xmm6
  01b95:    	movq   QWORD PTR [rsp+0x28],xmm7
  01b9b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01ba2: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01ba9: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01bb0: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01bb7: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01bbe: 31 	movabs rax,0x563184053740
  01bc8:    	call   rax
  01bca:    	movq   xmm2,QWORD PTR [rsp]
  01bcf:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01bd5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01bdb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01be1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01be7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01bed: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01bf4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01bfb: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01c02: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01c09: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01c10:    	add    rsp,0x60
  01c14: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00127 
:00129 %15 = %15 + %16                      [Float][Float]
  01c1b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01c22: 00 	test   rdi,0x1
  01c29:    	jne    0x3125b
  01c2f: 00 	test   rdi,0x2
  01c36:    	je     0x1c73
  01c3c:    	xorps  xmm13,xmm13
  01c40: 00 	movabs rax,0x8000000000000002
  01c4a:    	cmp    rdi,rax
  01c4d:    	je     0x1c86
  01c53:    	mov    rax,rdi
  01c56:    	sar    rax,0x3f
  01c5a:    	add    rax,0x2
  01c5e:    	and    rdi,0xfffffffffffffffc
  01c62:    	or     rdi,rax
  01c65:    	rol    rdi,0x3d
  01c69:    	movq   xmm13,rdi
  01c6e:    	jmp    0x1c86
  01c73:    	call   0xfffda744
  01c78:    	test   rax,rax
  01c7b:    	je     0x3125b
  01c81:    	movq   xmm13,xmm0
  01c86: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01c8d: 00 	test   rdi,0x1
  01c94:    	jne    0x312d4
  01c9a: 00 	test   rdi,0x2
  01ca1:    	je     0x1cde
  01ca7:    	xorps  xmm14,xmm14
  01cab: 00 	movabs rax,0x8000000000000002
  01cb5:    	cmp    rdi,rax
  01cb8:    	je     0x1cf1
  01cbe:    	mov    rax,rdi
  01cc1:    	sar    rax,0x3f
  01cc5:    	add    rax,0x2
  01cc9:    	and    rdi,0xfffffffffffffffc
  01ccd:    	or     rdi,rax
  01cd0:    	rol    rdi,0x3d
  01cd4:    	movq   xmm14,rdi
  01cd9:    	jmp    0x1cf1
  01cde:    	call   0xfffda744
  01ce3:    	test   rax,rax
  01ce6:    	je     0x312d4
  01cec:    	movq   xmm14,xmm0
  01cf1:    	addsd  xmm13,xmm14
:00130 _ = %14.call y=(%15; 1)              [Vec]
  01cf6:    	movq   xmm0,xmm13
  01cfb:    	call   0xfffda837
  01d00: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01d07: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01d0e: 00 	test   rdi,0x7
  01d15:    	jne    0x3134d
  01d1b:    	cmp    DWORD PTR [rdi+0x4],0x28
  01d1f:    	jne    0x3134d
  01d25: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb4bd],0x26        # 0xfffdd1e9
  01d2c:    	jne    0x3134d
  01d32:    	mov    esi,DWORD PTR [rip+0x6b4]        # 0x23ec
  01d38:    	cmp    esi,0xffffffff
  01d3b:    	je     0x313c6
  01d41:    	cmp    WORD PTR [rdi+0x2],0x3
  01d46:    	jne    0x1d66
  01d4c:    	cmp    esi,0x6
  01d4f:    	jge    0x1d66
  01d55: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01d5c:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01d61:    	jmp    0x1e3c
  01d66:    	sub    rsp,0x70
  01d6a:    	movq   QWORD PTR [rsp],xmm2
  01d6f:    	movq   QWORD PTR [rsp+0x8],xmm3
  01d75:    	movq   QWORD PTR [rsp+0x10],xmm4
  01d7b:    	movq   QWORD PTR [rsp+0x18],xmm5
  01d81:    	movq   QWORD PTR [rsp+0x20],xmm6
  01d87:    	movq   QWORD PTR [rsp+0x28],xmm7
  01d8d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01d94: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01d9b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01da2: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01da9: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01db0: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  01db7: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  01dbe: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01dc5: 31 	movabs rax,0x5631840539e0
  01dcf:    	call   rax
  01dd1:    	movq   xmm2,QWORD PTR [rsp]
  01dd6:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01ddc:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01de2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01de8:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01dee:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01df4: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01dfb: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01e02: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01e09: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01e10: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01e17: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  01e1e: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  01e25:    	add    rsp,0x70
  01e29: 31 	movabs r13,0x563184ccc1b0
  01e33:    	test   rax,rax
  01e36:    	je     0xfffda70b
:00131 
:00133 %14 = dynvar(2, %2)
  01e3c:    	mov    rax,QWORD PTR [rbp-0x10]
  01e40:    	mov    rax,QWORD PTR [rax]
  01e43:    	mov    rax,QWORD PTR [rax-0x28]
  01e47: ff 	mov    QWORD PTR [rbp-0x98],rax
:00134 %16 = dynvar(2, %2)
  01e4e:    	mov    rax,QWORD PTR [rbp-0x10]
  01e52:    	mov    rax,QWORD PTR [rax]
  01e55:    	mov    rax,QWORD PTR [rax-0x28]
  01e59: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00135 %15 = %16.call z()                   [Vec]
  01e60: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01e67: 00 	test   rdi,0x7
  01e6e:    	jne    0x314a9
  01e74:    	cmp    DWORD PTR [rdi+0x4],0x28
  01e78:    	jne    0x314a9
  01e7e: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb364],0x26        # 0xfffdd1e9
  01e85:    	jne    0x314a9
  01e8b:    	mov    esi,DWORD PTR [rip+0x563]        # 0x23f4
  01e91:    	cmp    esi,0xffffffff
  01e94:    	je     0x31522
  01e9a:    	cmp    WORD PTR [rdi+0x2],0x3
  01e9f:    	jne    0x1eb8
  01ea5:    	cmp    esi,0x6
  01ea8:    	jge    0x1eb8
  01eae:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01eb3:    	jmp    0x1f58
  01eb8:    	sub    rsp,0x60
  01ebc:    	movq   QWORD PTR [rsp],xmm2
  01ec1:    	movq   QWORD PTR [rsp+0x8],xmm3
  01ec7:    	movq   QWORD PTR [rsp+0x10],xmm4
  01ecd:    	movq   QWORD PTR [rsp+0x18],xmm5
  01ed3:    	movq   QWORD PTR [rsp+0x20],xmm6
  01ed9:    	movq   QWORD PTR [rsp+0x28],xmm7
  01edf: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01ee6: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01eed: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01ef4: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01efb: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01f02: 31 	movabs rax,0x563184053740
  01f0c:    	call   rax
  01f0e:    	movq   xmm2,QWORD PTR [rsp]
  01f13:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01f19:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01f1f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01f25:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01f2b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01f31: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01f38: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01f3f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01f46: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01f4d: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01f54:    	add    rsp,0x60
  01f58: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00136 
:00138 %16 = %13.call z()                   [Vec]
  01f5f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01f66: 00 	test   rdi,0x7
  01f6d:    	jne    0x315df
  01f73:    	cmp    DWORD PTR [rdi+0x4],0x28
  01f77:    	jne    0x315df
  01f7d: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb265],0x26        # 0xfffdd1e9
  01f84:    	jne    0x315df
  01f8a:    	mov    esi,DWORD PTR [rip+0x46c]        # 0x23fc
  01f90:    	cmp    esi,0xffffffff
  01f93:    	je     0x31658
  01f99:    	cmp    WORD PTR [rdi+0x2],0x3
  01f9e:    	jne    0x1fb7
  01fa4:    	cmp    esi,0x6
  01fa7:    	jge    0x1fb7
  01fad:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01fb2:    	jmp    0x2057
  01fb7:    	sub    rsp,0x60
  01fbb:    	movq   QWORD PTR [rsp],xmm2
  01fc0:    	movq   QWORD PTR [rsp+0x8],xmm3
  01fc6:    	movq   QWORD PTR [rsp+0x10],xmm4
  01fcc:    	movq   QWORD PTR [rsp+0x18],xmm5
  01fd2:    	movq   QWORD PTR [rsp+0x20],xmm6
  01fd8:    	movq   QWORD PTR [rsp+0x28],xmm7
  01fde: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01fe5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01fec: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01ff3: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01ffa: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02001: 31 	movabs rax,0x563184053740
  0200b:    	call   rax
  0200d:    	movq   xmm2,QWORD PTR [rsp]
  02012:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02018:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0201e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02024:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0202a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02030: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02037: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0203e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  02045: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0204c: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02053:    	add    rsp,0x60
  02057: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00139 
:00141 %15 = %15 + %16                      [Float][Float]
  0205e: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  02065: 00 	test   rdi,0x1
  0206c:    	jne    0x31715
  02072: 00 	test   rdi,0x2
  02079:    	je     0x20b6
  0207f:    	xorps  xmm13,xmm13
  02083: 00 	movabs rax,0x8000000000000002
  0208d:    	cmp    rdi,rax
  02090:    	je     0x20c9
  02096:    	mov    rax,rdi
  02099:    	sar    rax,0x3f
  0209d:    	add    rax,0x2
  020a1:    	and    rdi,0xfffffffffffffffc
  020a5:    	or     rdi,rax
  020a8:    	rol    rdi,0x3d
  020ac:    	movq   xmm13,rdi
  020b1:    	jmp    0x20c9
  020b6:    	call   0xfffda744
  020bb:    	test   rax,rax
  020be:    	je     0x31715
  020c4:    	movq   xmm13,xmm0
  020c9: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  020d0: 00 	test   rdi,0x1
  020d7:    	jne    0x3178e
  020dd: 00 	test   rdi,0x2
  020e4:    	je     0x2121
  020ea:    	xorps  xmm14,xmm14
  020ee: 00 	movabs rax,0x8000000000000002
  020f8:    	cmp    rdi,rax
  020fb:    	je     0x2134
  02101:    	mov    rax,rdi
  02104:    	sar    rax,0x3f
  02108:    	add    rax,0x2
  0210c:    	and    rdi,0xfffffffffffffffc
  02110:    	or     rdi,rax
  02113:    	rol    rdi,0x3d
  02117:    	movq   xmm14,rdi
  0211c:    	jmp    0x2134
  02121:    	call   0xfffda744
  02126:    	test   rax,rax
  02129:    	je     0x3178e
  0212f:    	movq   xmm14,xmm0
  02134:    	addsd  xmm13,xmm14
:00142 _ = %14.call z=(%15; 1)              [Vec]
  02139:    	movq   xmm0,xmm13
  0213e:    	call   0xfffda837
  02143: ff 	mov    QWORD PTR [rbp-0xa0],rax
  0214a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  02151: 00 	test   rdi,0x7
  02158:    	jne    0x31807
  0215e:    	cmp    DWORD PTR [rdi+0x4],0x28
  02162:    	jne    0x31807
  02168: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb07a],0x26        # 0xfffdd1e9
  0216f:    	jne    0x31807
  02175:    	mov    esi,DWORD PTR [rip+0x289]        # 0x2404
  0217b:    	cmp    esi,0xffffffff
  0217e:    	je     0x31880
  02184:    	cmp    WORD PTR [rdi+0x2],0x3
  02189:    	jne    0x21a9
  0218f:    	cmp    esi,0x6
  02192:    	jge    0x21a9
  02198: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0219f:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  021a4:    	jmp    0x227f
  021a9:    	sub    rsp,0x70
  021ad:    	movq   QWORD PTR [rsp],xmm2
  021b2:    	movq   QWORD PTR [rsp+0x8],xmm3
  021b8:    	movq   QWORD PTR [rsp+0x10],xmm4
  021be:    	movq   QWORD PTR [rsp+0x18],xmm5
  021c4:    	movq   QWORD PTR [rsp+0x20],xmm6
  021ca:    	movq   QWORD PTR [rsp+0x28],xmm7
  021d0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  021d7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  021de: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  021e5: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  021ec: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  021f3: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  021fa: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  02201: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  02208: 31 	movabs rax,0x5631840539e0
  02212:    	call   rax
  02214:    	movq   xmm2,QWORD PTR [rsp]
  02219:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0221f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02225:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0222b:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02231:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02237: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0223e: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  02245: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0224c: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02253: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0225a: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  02261: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  02268:    	add    rsp,0x70
  0226c: 31 	movabs r13,0x563184ccc270
  02276:    	test   rax,rax
  02279:    	je     0xfffda70b
:00143 
:00145 %14 = %15
:00146 ret %14
  0227f:    	movq   xmm0,xmm13
  02284:    	call   0xfffda837
  02289: ff 	mov    QWORD PTR [rbp-0x98],rax
  02290: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02297:    	leave  
  02298:    	ret    
:00147 %14 = nil
  02299: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00148 ret %14
  022a4: ff 	mov    rax,QWORD PTR [rbp-0x98]
  022ab:    	leave  
  022ac:    	ret    
==> start whole compile: intersect FuncId(69) self_class:Sphere start:[00000] bytecode:0x563184c85400
<== finished compile. elapsed:143.3µs
offset:Pos(163128) code: 6412 bytes  data: 268 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004b: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00052:    	mov    rdi,QWORD PTR [rbp-0x28]
  00056: 00 	test   rdi,0x7
  0005d:    	jne    0x2f55b
  00063:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00067:    	jne    0x2f55b
:00000 %9 = %1.call org()                   [Ray]
  0006d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00071: 00 	test   rdi,0x7
  00078:    	jne    0x2f56a
  0007e:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00082:    	jne    0x2f56a
  00088: 26 	cmp    DWORD PTR [rip+0xfffffffffffdad52],0x26        # 0xfffdade1
  0008f:    	jne    0x2f56a
  00095:    	mov    esi,DWORD PTR [rip+0x1875]        # 0x1910
  0009b:    	cmp    esi,0xffffffff
  0009e:    	je     0x2f579
  000a4:    	cmp    WORD PTR [rdi+0x2],0x3
  000a9:    	jne    0xc2
  000af:    	cmp    esi,0x6
  000b2:    	jge    0xc2
  000b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd:    	jmp    0xce
  000c2: 31 	movabs rax,0x563184053740
  000cc:    	call   rax
  000ce:    	mov    QWORD PTR [rbp-0x70],rax
:00001 
:00003 %10 = @center: Sphere[IvarId(0)]
  000d2:    	mov    rdi,QWORD PTR [rbp-0x28]
  000d6:    	mov    rax,QWORD PTR [rdi+0x10]
  000da:    	mov    QWORD PTR [rbp-0x78],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
  000de:    	mov    rdi,QWORD PTR [rbp-0x70]
  000e2: 00 	test   rdi,0x7
  000e9:    	jne    0x2f5a2
  000ef:    	cmp    DWORD PTR [rdi+0x4],0x28
  000f3:    	jne    0x2f5a2
  000f9: 26 	cmp    DWORD PTR [rip+0xfffffffffffdace1],0x26        # 0xfffdade1
  00100:    	jne    0x2f5a2
  00106:    	mov    rax,QWORD PTR [rbx]
  00109:    	lea    rdi,[rsp-0x18]
  0010e:    	mov    QWORD PTR [rdi],rax
  00111:    	mov    QWORD PTR [rbx],rdi
  00114: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0011d:    	mov    QWORD PTR [rsp-0x38],rcx
  00122:    	mov    rax,QWORD PTR [rbp-0x70]
  00126:    	mov    QWORD PTR [rsp-0x38],rax
  0012b: 00 	mov    rdi,0x1
  00132:    	mov    rax,QWORD PTR [rbp-0x78]
  00136:    	mov    QWORD PTR [rsp-0x40],rax
  0013b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00144: 08 	movabs rax,0x80000003f
  0014e:    	mov    QWORD PTR [rsp-0x28],rax
  00153: 31 	movabs r13,0x563184c81a90
  0015d:    	call   0xfffdba72
  00162:    	lea    rdi,[rbp-0x8]
  00166:    	mov    QWORD PTR [rbx],rdi
  00169: 31 	movabs r13,0x563184c85460
  00173:    	test   rax,rax
  00176:    	je     0xfffd8303
  0017c:    	mov    QWORD PTR [rbp-0x40],rax
:00005 
:00007 %9 = %1.call dir()                   [Ray]
  00180:    	mov    rdi,QWORD PTR [rbp-0x30]
  00184: 00 	test   rdi,0x7
  0018b:    	jne    0x2f5b1
  00191:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00195:    	jne    0x2f5b1
  0019b: 26 	cmp    DWORD PTR [rip+0xfffffffffffdac3f],0x26        # 0xfffdade1
  001a2:    	jne    0x2f5b1
  001a8:    	mov    esi,DWORD PTR [rip+0x176a]        # 0x1918
  001ae:    	cmp    esi,0xffffffff
  001b1:    	je     0x2f5c0
  001b7:    	cmp    WORD PTR [rdi+0x2],0x3
  001bc:    	jne    0x1d5
  001c2:    	cmp    esi,0x6
  001c5:    	jge    0x1d5
  001cb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001d0:    	jmp    0x1e1
  001d5: 31 	movabs rax,0x563184053740
  001df:    	call   rax
  001e1:    	mov    QWORD PTR [rbp-0x70],rax
:00008 
:00010 %4 = %3.call vdot(%9; 1)             [Vec]
  001e5:    	mov    rdi,QWORD PTR [rbp-0x40]
  001e9: 00 	test   rdi,0x7
  001f0:    	jne    0x2f5e9
  001f6:    	cmp    DWORD PTR [rdi+0x4],0x28
  001fa:    	jne    0x2f5e9
  00200: 26 	cmp    DWORD PTR [rip+0xfffffffffffdabda],0x26        # 0xfffdade1
  00207:    	jne    0x2f5e9
  0020d:    	mov    rax,QWORD PTR [rbx]
  00210:    	lea    rdi,[rsp-0x18]
  00215:    	mov    QWORD PTR [rdi],rax
  00218:    	mov    QWORD PTR [rbx],rdi
  0021b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00224:    	mov    QWORD PTR [rsp-0x38],rcx
  00229:    	mov    rax,QWORD PTR [rbp-0x40]
  0022d:    	mov    QWORD PTR [rsp-0x38],rax
  00232: 00 	mov    rdi,0x1
  00239:    	mov    rax,QWORD PTR [rbp-0x70]
  0023d:    	mov    QWORD PTR [rsp-0x40],rax
  00242: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0024b: 05 	movabs rax,0x500000041
  00255:    	mov    QWORD PTR [rsp-0x28],rax
  0025a: 31 	movabs r13,0x563184c66dc0
  00264:    	call   0xfffdbb04
  00269:    	lea    rdi,[rbp-0x8]
  0026d:    	mov    QWORD PTR [rbx],rdi
  00270: 31 	movabs r13,0x563184c854c0
  0027a:    	test   rax,rax
  0027d:    	je     0xfffd8303
  00283:    	mov    QWORD PTR [rbp-0x48],rax
:00011 
:00013 %10 = %3
  00287:    	mov    rax,QWORD PTR [rbp-0x40]
  0028b:    	mov    QWORD PTR [rbp-0x78],rax
:00014 %9 = %3.call vdot(%10; 1)            [Vec]
  0028f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00293: 00 	test   rdi,0x7
  0029a:    	jne    0x2f5f8
  002a0:    	cmp    DWORD PTR [rdi+0x4],0x28
  002a4:    	jne    0x2f5f8
  002aa: 26 	cmp    DWORD PTR [rip+0xfffffffffffdab30],0x26        # 0xfffdade1
  002b1:    	jne    0x2f5f8
  002b7:    	mov    rax,QWORD PTR [rbx]
  002ba:    	lea    rdi,[rsp-0x18]
  002bf:    	mov    QWORD PTR [rdi],rax
  002c2:    	mov    QWORD PTR [rbx],rdi
  002c5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  002ce:    	mov    QWORD PTR [rsp-0x38],rcx
  002d3:    	mov    rax,QWORD PTR [rbp-0x40]
  002d7:    	mov    QWORD PTR [rsp-0x38],rax
  002dc: 00 	mov    rdi,0x1
  002e3:    	mov    rax,QWORD PTR [rbp-0x78]
  002e7:    	mov    QWORD PTR [rsp-0x40],rax
  002ec: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002f5: 05 	movabs rax,0x500000041
  002ff:    	mov    QWORD PTR [rsp-0x28],rax
  00304: 31 	movabs r13,0x563184c66dc0
  0030e:    	call   0xfffdbb04
  00313:    	lea    rdi,[rbp-0x8]
  00317:    	mov    QWORD PTR [rbx],rdi
  0031a: 31 	movabs r13,0x563184c85500
  00324:    	test   rax,rax
  00327:    	je     0xfffd8303
  0032d:    	mov    QWORD PTR [rbp-0x70],rax
:00015 
:00017 %10 = @radius: Sphere[IvarId(1)]
  00331:    	mov    rdi,QWORD PTR [rbp-0x28]
  00335:    	mov    rax,QWORD PTR [rdi+0x18]
  00339:    	mov    QWORD PTR [rbp-0x78],rax
:00018 %11 = @radius: Sphere[IvarId(1)]
  0033d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00341:    	mov    rax,QWORD PTR [rdi+0x18]
  00345:    	mov    QWORD PTR [rbp-0x80],rax
:00019 %10 = %10 * %11                      [Float][Float]
  00349:    	mov    rdi,QWORD PTR [rbp-0x78]
  0034d: 00 	test   rdi,0x1
  00354:    	jne    0x2f607
  0035a: 00 	test   rdi,0x2
  00361:    	je     0x39d
  00367:    	xorps  xmm2,xmm2
  0036a: 00 	movabs rax,0x8000000000000002
  00374:    	cmp    rdi,rax
  00377:    	je     0x3af
  0037d:    	mov    rax,rdi
  00380:    	sar    rax,0x3f
  00384:    	add    rax,0x2
  00388:    	and    rdi,0xfffffffffffffffc
  0038c:    	or     rdi,rax
  0038f:    	rol    rdi,0x3d
  00393:    	movq   xmm2,rdi
  00398:    	jmp    0x3af
  0039d:    	call   0xfffd833c
  003a2:    	test   rax,rax
  003a5:    	je     0x2f607
  003ab:    	movq   xmm2,xmm0
  003af:    	mov    rdi,QWORD PTR [rbp-0x80]
  003b3: 00 	test   rdi,0x1
  003ba:    	jne    0x2f616
  003c0: 00 	test   rdi,0x2
  003c7:    	je     0x403
  003cd:    	xorps  xmm3,xmm3
  003d0: 00 	movabs rax,0x8000000000000002
  003da:    	cmp    rdi,rax
  003dd:    	je     0x415
  003e3:    	mov    rax,rdi
  003e6:    	sar    rax,0x3f
  003ea:    	add    rax,0x2
  003ee:    	and    rdi,0xfffffffffffffffc
  003f2:    	or     rdi,rax
  003f5:    	rol    rdi,0x3d
  003f9:    	movq   xmm3,rdi
  003fe:    	jmp    0x415
  00403:    	call   0xfffd833c
  00408:    	test   rax,rax
  0040b:    	je     0x2f616
  00411:    	movq   xmm3,xmm0
  00415:    	mulsd  xmm2,xmm3
:00020 %5 = %9 - %10                        [Float][Float]
  00419:    	mov    rdi,QWORD PTR [rbp-0x70]
  0041d: 00 	test   rdi,0x1
  00424:    	jne    0x2f625
  0042a: 00 	test   rdi,0x2
  00431:    	je     0x46d
  00437:    	xorps  xmm4,xmm4
  0043a: 00 	movabs rax,0x8000000000000002
  00444:    	cmp    rdi,rax
  00447:    	je     0x47f
  0044d:    	mov    rax,rdi
  00450:    	sar    rax,0x3f
  00454:    	add    rax,0x2
  00458:    	and    rdi,0xfffffffffffffffc
  0045c:    	or     rdi,rax
  0045f:    	rol    rdi,0x3d
  00463:    	movq   xmm4,rdi
  00468:    	jmp    0x47f
  0046d:    	call   0xfffd833c
  00472:    	test   rax,rax
  00475:    	je     0x2f625
  0047b:    	movq   xmm4,xmm0
  0047f:    	movq   xmm5,xmm4
  00483:    	subsd  xmm5,xmm2
:00021 %9 = %4 * %4                         [Float][Float]
  00487:    	mov    rdi,QWORD PTR [rbp-0x48]
  0048b: 00 	test   rdi,0x1
  00492:    	jne    0x2f641
  00498: 00 	test   rdi,0x2
  0049f:    	je     0x4db
  004a5:    	xorps  xmm6,xmm6
  004a8: 00 	movabs rax,0x8000000000000002
  004b2:    	cmp    rdi,rax
  004b5:    	je     0x4ed
  004bb:    	mov    rax,rdi
  004be:    	sar    rax,0x3f
  004c2:    	add    rax,0x2
  004c6:    	and    rdi,0xfffffffffffffffc
  004ca:    	or     rdi,rax
  004cd:    	rol    rdi,0x3d
  004d1:    	movq   xmm6,rdi
  004d6:    	jmp    0x4ed
  004db:    	call   0xfffd833c
  004e0:    	test   rax,rax
  004e3:    	je     0x2f641
  004e9:    	movq   xmm6,xmm0
  004ed:    	movq   xmm4,xmm6
  004f1:    	mulsd  xmm4,xmm6
:00022 %6 = %9 - %5                         [Float][Float]
  004f5:    	movq   xmm7,xmm4
  004f9:    	subsd  xmm7,xmm5
:00023 %9 = literal[0.0]
  004fd: 00 	movq   xmm4,QWORD PTR [rip+0x1423]        # 0x1928
  00505: 00 	movabs rax,0x8000000000000002
  0050f:    	mov    QWORD PTR [rbp-0x70],rax
:00024 _%9 = %6 > %9                        [Float][Float]
:00025 condnotbr _%9 =>:00113
  00513:    	ucomisd xmm7,xmm4
  00517:    	jbe    0x307c7
:00026 %9 = %4
:00027 %9 = neg %9                          [Float]
  0051d:    	movq   xmm4,xmm6
  00521: 00 	xorps  xmm4,XMMWORD PTR [rip+0x1410]        # 0x1938
:00028 %11 = const[Math]                    [Math]
  00528: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffda8b9]        # 0xfffdade8
  0052f: 00 	cmp    rax,QWORD PTR [rip+0x1422]        # 0x1958
  00536:    	jne    0x2f66a
  0053c: 00 	mov    rax,QWORD PTR [rip+0x1405]        # 0x1948
  00543:    	mov    QWORD PTR [rbp-0x80],rax
:00029 %12 = %6
:00030 %10 = %11.call sqrt(%12; 1)          [#<Class:Math>]
  00547:    	mov    rdi,QWORD PTR [rbp-0x80]
  0054b: 00 	test   rdi,0x7
  00552:    	jne    0x2f6f2
  00558:    	cmp    DWORD PTR [rdi+0x4],0x21
  0055c:    	jne    0x2f6f2
  00562: 26 	cmp    DWORD PTR [rip+0xfffffffffffda878],0x26        # 0xfffdade1
  00569:    	jne    0x2f6f2
  0056f:    	sqrtsd xmm2,xmm7
:00031 
:00033 %7 = %9 - %10                        [Float][Float]
  00573:    	movq   xmm3,xmm4
  00577:    	subsd  xmm3,xmm2
:00034 %9 = literal[0.0]
  0057b: 00 	movq   xmm4,QWORD PTR [rip+0x13e5]        # 0x1968
  00583: 00 	movabs rax,0x8000000000000002
  0058d:    	mov    QWORD PTR [rbp-0x70],rax
:00035 _%9 = %7 > %9                        [Float][Float]
:00036 condnotbr _%9 =>:00112
  00591:    	ucomisd xmm3,xmm4
  00595:    	jbe    0x306bb
:00037 %9 = %2.call t()                     [Isect]
  0059b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0059f: 00 	test   rdi,0x7
  005a6:    	jne    0x2f72f
  005ac:    	cmp    DWORD PTR [rdi+0x4],0x30
  005b0:    	jne    0x2f72f
  005b6: 26 	cmp    DWORD PTR [rip+0xfffffffffffda824],0x26        # 0xfffdade1
  005bd:    	jne    0x2f72f
  005c3:    	mov    esi,DWORD PTR [rip+0x13ab]        # 0x1974
  005c9:    	cmp    esi,0xffffffff
  005cc:    	je     0x2f779
  005d2:    	cmp    WORD PTR [rdi+0x2],0x3
  005d7:    	jne    0x5f0
  005dd:    	cmp    esi,0x6
  005e0:    	jge    0x5f0
  005e6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005eb:    	jmp    0x63e
  005f0:    	sub    rsp,0x30
  005f4:    	movq   QWORD PTR [rsp],xmm2
  005f9:    	movq   QWORD PTR [rsp+0x8],xmm3
  005ff:    	movq   QWORD PTR [rsp+0x10],xmm5
  00605:    	movq   QWORD PTR [rsp+0x18],xmm6
  0060b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00611: 31 	movabs rax,0x563184053740
  0061b:    	call   rax
  0061d:    	movq   xmm2,QWORD PTR [rsp]
  00622:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00628:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0062e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00634:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0063a:    	add    rsp,0x30
  0063e:    	mov    QWORD PTR [rbp-0x70],rax
:00038 
:00040 _%9 = %7 < %9                        [Float][Float]
:00041 condnotbr _%9 =>:00112
  00642:    	mov    rdi,QWORD PTR [rbp-0x70]
  00646: 00 	test   rdi,0x1
  0064d:    	jne    0x2f7e4
  00653: 00 	test   rdi,0x2
  0065a:    	je     0x696
  00660:    	xorps  xmm4,xmm4
  00663: 00 	movabs rax,0x8000000000000002
  0066d:    	cmp    rdi,rax
  00670:    	je     0x6a8
  00676:    	mov    rax,rdi
  00679:    	sar    rax,0x3f
  0067d:    	add    rax,0x2
  00681:    	and    rdi,0xfffffffffffffffc
  00685:    	or     rdi,rax
  00688:    	rol    rdi,0x3d
  0068c:    	movq   xmm4,rdi
  00691:    	jmp    0x6a8
  00696:    	call   0xfffd833c
  0069b:    	test   rax,rax
  0069e:    	je     0x2f7e4
  006a4:    	movq   xmm4,xmm0
  006a8:    	ucomisd xmm3,xmm4
  006ac:    	jae    0x30718
:00042 _ = %2.call t=(%7; 1)                [Isect]
  006b2:    	movq   xmm0,xmm3
  006b6:    	call   0xfffd842f
  006bb:    	mov    QWORD PTR [rbp-0x60],rax
  006bf:    	mov    rdi,QWORD PTR [rbp-0x38]
  006c3: 00 	test   rdi,0x7
  006ca:    	jne    0x2f82e
  006d0:    	cmp    DWORD PTR [rdi+0x4],0x30
  006d4:    	jne    0x2f82e
  006da: 26 	cmp    DWORD PTR [rip+0xfffffffffffda700],0x26        # 0xfffdade1
  006e1:    	jne    0x2f82e
  006e7:    	mov    esi,DWORD PTR [rip+0x128f]        # 0x197c
  006ed:    	cmp    esi,0xffffffff
  006f0:    	je     0x2f86b
  006f6:    	cmp    WORD PTR [rdi+0x2],0x3
  006fb:    	jne    0x718
  00701:    	cmp    esi,0x6
  00704:    	jge    0x718
  0070a:    	mov    rax,QWORD PTR [rbp-0x60]
  0070e:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00713:    	jmp    0x789
  00718:    	sub    rsp,0x30
  0071c:    	movq   QWORD PTR [rsp],xmm2
  00721:    	movq   QWORD PTR [rsp+0x8],xmm3
  00727:    	movq   QWORD PTR [rsp+0x10],xmm4
  0072d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00733:    	movq   QWORD PTR [rsp+0x20],xmm6
  00739:    	movq   QWORD PTR [rsp+0x28],xmm7
  0073f:    	mov    rdx,QWORD PTR [rbp-0x60]
  00743: 31 	movabs rax,0x5631840539e0
  0074d:    	call   rax
  0074f:    	movq   xmm2,QWORD PTR [rsp]
  00754:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0075a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00760:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00766:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0076c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00772:    	add    rsp,0x30
  00776: 31 	movabs r13,0x563184c856c0
  00780:    	test   rax,rax
  00783:    	je     0xfffd8303
:00043 
:00045 %9 = literal[true]
  00789: 00 	mov    rax,0x1c
  00790:    	mov    QWORD PTR [rbp-0x70],rax
:00046 _ = %2.call hit=(%9; 1)              [Isect]
  00794:    	mov    rdi,QWORD PTR [rbp-0x38]
  00798: 00 	test   rdi,0x7
  0079f:    	jne    0x2f8e9
  007a5:    	cmp    DWORD PTR [rdi+0x4],0x30
  007a9:    	jne    0x2f8e9
  007af: 26 	cmp    DWORD PTR [rip+0xfffffffffffda62b],0x26        # 0xfffdade1
  007b6:    	jne    0x2f8e9
  007bc:    	mov    esi,DWORD PTR [rip+0x11c2]        # 0x1984
  007c2:    	cmp    esi,0xffffffff
  007c5:    	je     0x2f926
  007cb:    	cmp    WORD PTR [rdi+0x2],0x3
  007d0:    	jne    0x7ed
  007d6:    	cmp    esi,0x6
  007d9:    	jge    0x7ed
  007df:    	mov    rax,QWORD PTR [rbp-0x70]
  007e3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  007e8:    	jmp    0x852
  007ed:    	sub    rsp,0x30
  007f1:    	movq   QWORD PTR [rsp],xmm2
  007f6:    	movq   QWORD PTR [rsp+0x8],xmm3
  007fc:    	movq   QWORD PTR [rsp+0x10],xmm5
  00802:    	movq   QWORD PTR [rsp+0x18],xmm6
  00808:    	movq   QWORD PTR [rsp+0x20],xmm7
  0080e:    	mov    rdx,QWORD PTR [rbp-0x70]
  00812: 31 	movabs rax,0x5631840539e0
  0081c:    	call   rax
  0081e:    	movq   xmm2,QWORD PTR [rsp]
  00823:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00829:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0082f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00835:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0083b:    	add    rsp,0x30
  0083f: 31 	movabs r13,0x563184c85700
  00849:    	test   rax,rax
  0084c:    	je     0xfffd8303
:00047 
:00049 %10 = const[Vec]                     [Vec]
  00852: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffda58f]        # 0xfffdade8
  00859: 00 	cmp    rax,QWORD PTR [rip+0x1138]        # 0x1998
  00860:    	jne    0x2f998
  00866: 00 	mov    rax,QWORD PTR [rip+0x111b]        # 0x1988
  0086d:    	mov    QWORD PTR [rbp-0x78],rax
:00050 %12 = %1.call org()                  [Ray]
  00871:    	mov    rdi,QWORD PTR [rbp-0x30]
  00875: 00 	test   rdi,0x7
  0087c:    	jne    0x2fa14
  00882:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00886:    	jne    0x2fa14
  0088c: 26 	cmp    DWORD PTR [rip+0xfffffffffffda54e],0x26        # 0xfffdade1
  00893:    	jne    0x2fa14
  00899:    	mov    esi,DWORD PTR [rip+0x1105]        # 0x19a4
  0089f:    	cmp    esi,0xffffffff
  008a2:    	je     0x2fa3d
  008a8:    	cmp    WORD PTR [rdi+0x2],0x3
  008ad:    	jne    0x8c6
  008b3:    	cmp    esi,0x6
  008b6:    	jge    0x8c6
  008bc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  008c1:    	jmp    0x908
  008c6:    	sub    rsp,0x20
  008ca:    	movq   QWORD PTR [rsp],xmm3
  008cf:    	movq   QWORD PTR [rsp+0x8],xmm5
  008d5:    	movq   QWORD PTR [rsp+0x10],xmm6
  008db:    	movq   QWORD PTR [rsp+0x18],xmm7
  008e1: 31 	movabs rax,0x563184053740
  008eb:    	call   rax
  008ed:    	movq   xmm3,QWORD PTR [rsp]
  008f2:    	movq   xmm5,QWORD PTR [rsp+0x8]
  008f8:    	movq   xmm6,QWORD PTR [rsp+0x10]
  008fe:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00904:    	add    rsp,0x20
  00908: ff 	mov    QWORD PTR [rbp-0x88],rax
:00051 
:00053 %11 = %12.call x()                   [Vec]
  0090f: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00916: 00 	test   rdi,0x7
  0091d:    	jne    0x2fa9c
  00923:    	cmp    DWORD PTR [rdi+0x4],0x28
  00927:    	jne    0x2fa9c
  0092d: 26 	cmp    DWORD PTR [rip+0xfffffffffffda4ad],0x26        # 0xfffdade1
  00934:    	jne    0x2fa9c
  0093a:    	mov    esi,DWORD PTR [rip+0x106c]        # 0x19ac
  00940:    	cmp    esi,0xffffffff
  00943:    	je     0x2fac5
  00949:    	cmp    WORD PTR [rdi+0x2],0x3
  0094e:    	jne    0x967
  00954:    	cmp    esi,0x6
  00957:    	jge    0x967
  0095d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00962:    	jmp    0x9a9
  00967:    	sub    rsp,0x20
  0096b:    	movq   QWORD PTR [rsp],xmm3
  00970:    	movq   QWORD PTR [rsp+0x8],xmm5
  00976:    	movq   QWORD PTR [rsp+0x10],xmm6
  0097c:    	movq   QWORD PTR [rsp+0x18],xmm7
  00982: 31 	movabs rax,0x563184053740
  0098c:    	call   rax
  0098e:    	movq   xmm3,QWORD PTR [rsp]
  00993:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00999:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0099f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  009a5:    	add    rsp,0x20
  009a9:    	mov    QWORD PTR [rbp-0x80],rax
:00054 
:00056 %13 = %1.call dir()                  [Ray]
  009ad:    	mov    rdi,QWORD PTR [rbp-0x30]
  009b1: 00 	test   rdi,0x7
  009b8:    	jne    0x2fb24
  009be:    	cmp    DWORD PTR [rdi+0x4],0x2e
  009c2:    	jne    0x2fb24
  009c8: 26 	cmp    DWORD PTR [rip+0xfffffffffffda412],0x26        # 0xfffdade1
  009cf:    	jne    0x2fb24
  009d5:    	mov    esi,DWORD PTR [rip+0xfd9]        # 0x19b4
  009db:    	cmp    esi,0xffffffff
  009de:    	je     0x2fb4d
  009e4:    	cmp    WORD PTR [rdi+0x2],0x3
  009e9:    	jne    0xa02
  009ef:    	cmp    esi,0x6
  009f2:    	jge    0xa02
  009f8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  009fd:    	jmp    0xa44
  00a02:    	sub    rsp,0x20
  00a06:    	movq   QWORD PTR [rsp],xmm3
  00a0b:    	movq   QWORD PTR [rsp+0x8],xmm5
  00a11:    	movq   QWORD PTR [rsp+0x10],xmm6
  00a17:    	movq   QWORD PTR [rsp+0x18],xmm7
  00a1d: 31 	movabs rax,0x563184053740
  00a27:    	call   rax
  00a29:    	movq   xmm3,QWORD PTR [rsp]
  00a2e:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00a34:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00a3a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00a40:    	add    rsp,0x20
  00a44: ff 	mov    QWORD PTR [rbp-0x90],rax
:00057 
:00059 %12 = %13.call x()                   [Vec]
  00a4b: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00a52: 00 	test   rdi,0x7
  00a59:    	jne    0x2fbac
  00a5f:    	cmp    DWORD PTR [rdi+0x4],0x28
  00a63:    	jne    0x2fbac
  00a69: 26 	cmp    DWORD PTR [rip+0xfffffffffffda371],0x26        # 0xfffdade1
  00a70:    	jne    0x2fbac
  00a76:    	mov    esi,DWORD PTR [rip+0xf40]        # 0x19bc
  00a7c:    	cmp    esi,0xffffffff
  00a7f:    	je     0x2fbd5
  00a85:    	cmp    WORD PTR [rdi+0x2],0x3
  00a8a:    	jne    0xaa3
  00a90:    	cmp    esi,0x6
  00a93:    	jge    0xaa3
  00a99:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a9e:    	jmp    0xae5
  00aa3:    	sub    rsp,0x20
  00aa7:    	movq   QWORD PTR [rsp],xmm3
  00aac:    	movq   QWORD PTR [rsp+0x8],xmm5
  00ab2:    	movq   QWORD PTR [rsp+0x10],xmm6
  00ab8:    	movq   QWORD PTR [rsp+0x18],xmm7
  00abe: 31 	movabs rax,0x563184053740
  00ac8:    	call   rax
  00aca:    	movq   xmm3,QWORD PTR [rsp]
  00acf:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00ad5:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00adb:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ae1:    	add    rsp,0x20
  00ae5: ff 	mov    QWORD PTR [rbp-0x88],rax
:00060 
:00062 %12 = %12 * %7                       [Float][Float]
  00aec: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00af3: 00 	test   rdi,0x1
  00afa:    	jne    0x2fc34
  00b00: 00 	test   rdi,0x2
  00b07:    	je     0xb43
  00b0d:    	xorps  xmm2,xmm2
  00b10: 00 	movabs rax,0x8000000000000002
  00b1a:    	cmp    rdi,rax
  00b1d:    	je     0xb55
  00b23:    	mov    rax,rdi
  00b26:    	sar    rax,0x3f
  00b2a:    	add    rax,0x2
  00b2e:    	and    rdi,0xfffffffffffffffc
  00b32:    	or     rdi,rax
  00b35:    	rol    rdi,0x3d
  00b39:    	movq   xmm2,rdi
  00b3e:    	jmp    0xb55
  00b43:    	call   0xfffd833c
  00b48:    	test   rax,rax
  00b4b:    	je     0x2fc34
  00b51:    	movq   xmm2,xmm0
  00b55:    	mulsd  xmm2,xmm3
:00063 %11 = %11 + %12                      [Float][Float]
  00b59:    	mov    rdi,QWORD PTR [rbp-0x80]
  00b5d: 00 	test   rdi,0x1
  00b64:    	jne    0x2fc5d
  00b6a: 00 	test   rdi,0x2
  00b71:    	je     0xbad
  00b77:    	xorps  xmm4,xmm4
  00b7a: 00 	movabs rax,0x8000000000000002
  00b84:    	cmp    rdi,rax
  00b87:    	je     0xbbf
  00b8d:    	mov    rax,rdi
  00b90:    	sar    rax,0x3f
  00b94:    	add    rax,0x2
  00b98:    	and    rdi,0xfffffffffffffffc
  00b9c:    	or     rdi,rax
  00b9f:    	rol    rdi,0x3d
  00ba3:    	movq   xmm4,rdi
  00ba8:    	jmp    0xbbf
  00bad:    	call   0xfffd833c
  00bb2:    	test   rax,rax
  00bb5:    	je     0x2fc5d
  00bbb:    	movq   xmm4,xmm0
  00bbf:    	addsd  xmm4,xmm2
:00064 %13 = %1.call org()                  [Ray]
  00bc3:    	mov    rdi,QWORD PTR [rbp-0x30]
  00bc7: 00 	test   rdi,0x7
  00bce:    	jne    0x2fc96
  00bd4:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00bd8:    	jne    0x2fc96
  00bde: 26 	cmp    DWORD PTR [rip+0xfffffffffffda1fc],0x26        # 0xfffdade1
  00be5:    	jne    0x2fc96
  00beb:    	mov    esi,DWORD PTR [rip+0xdd3]        # 0x19c4
  00bf1:    	cmp    esi,0xffffffff
  00bf4:    	je     0x2fcdc
  00bfa:    	cmp    WORD PTR [rdi+0x2],0x3
  00bff:    	jne    0xc18
  00c05:    	cmp    esi,0x6
  00c08:    	jge    0xc18
  00c0e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c13:    	jmp    0xc72
  00c18:    	sub    rsp,0x30
  00c1c:    	movq   QWORD PTR [rsp],xmm2
  00c21:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c27:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c2d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c33:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c39:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c3f: 31 	movabs rax,0x563184053740
  00c49:    	call   rax
  00c4b:    	movq   xmm2,QWORD PTR [rsp]
  00c50:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c56:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c5c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c62:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00c68:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00c6e:    	add    rsp,0x30
  00c72: ff 	mov    QWORD PTR [rbp-0x90],rax
:00065 
:00067 %12 = %13.call y()                   [Vec]
  00c79: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00c80: 00 	test   rdi,0x7
  00c87:    	jne    0x2fd53
  00c8d:    	cmp    DWORD PTR [rdi+0x4],0x28
  00c91:    	jne    0x2fd53
  00c97: 26 	cmp    DWORD PTR [rip+0xfffffffffffda143],0x26        # 0xfffdade1
  00c9e:    	jne    0x2fd53
  00ca4:    	mov    esi,DWORD PTR [rip+0xd22]        # 0x19cc
  00caa:    	cmp    esi,0xffffffff
  00cad:    	je     0x2fd89
  00cb3:    	cmp    WORD PTR [rdi+0x2],0x3
  00cb8:    	jne    0xcd1
  00cbe:    	cmp    esi,0x6
  00cc1:    	jge    0xcd1
  00cc7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ccc:    	jmp    0xd1f
  00cd1:    	sub    rsp,0x30
  00cd5:    	movq   QWORD PTR [rsp],xmm3
  00cda:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ce0:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ce6:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cec:    	movq   QWORD PTR [rsp+0x20],xmm7
  00cf2: 31 	movabs rax,0x563184053740
  00cfc:    	call   rax
  00cfe:    	movq   xmm3,QWORD PTR [rsp]
  00d03:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d09:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d0f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d15:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d1b:    	add    rsp,0x30
  00d1f: ff 	mov    QWORD PTR [rbp-0x88],rax
:00068 
:00070 %14 = %1.call dir()                  [Ray]
  00d26:    	mov    rdi,QWORD PTR [rbp-0x30]
  00d2a: 00 	test   rdi,0x7
  00d31:    	jne    0x2fdf4
  00d37:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00d3b:    	jne    0x2fdf4
  00d41: 26 	cmp    DWORD PTR [rip+0xfffffffffffda099],0x26        # 0xfffdade1
  00d48:    	jne    0x2fdf4
  00d4e:    	mov    esi,DWORD PTR [rip+0xc80]        # 0x19d4
  00d54:    	cmp    esi,0xffffffff
  00d57:    	je     0x2fe2a
  00d5d:    	cmp    WORD PTR [rdi+0x2],0x3
  00d62:    	jne    0xd7b
  00d68:    	cmp    esi,0x6
  00d6b:    	jge    0xd7b
  00d71:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d76:    	jmp    0xdc9
  00d7b:    	sub    rsp,0x30
  00d7f:    	movq   QWORD PTR [rsp],xmm3
  00d84:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d8a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d90:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d96:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d9c: 31 	movabs rax,0x563184053740
  00da6:    	call   rax
  00da8:    	movq   xmm3,QWORD PTR [rsp]
  00dad:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00db3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00db9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00dbf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00dc5:    	add    rsp,0x30
  00dc9: ff 	mov    QWORD PTR [rbp-0x98],rax
:00071 
:00073 %13 = %14.call y()                   [Vec]
  00dd0: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00dd7: 00 	test   rdi,0x7
  00dde:    	jne    0x2fe95
  00de4:    	cmp    DWORD PTR [rdi+0x4],0x28
  00de8:    	jne    0x2fe95
  00dee: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9fec],0x26        # 0xfffdade1
  00df5:    	jne    0x2fe95
  00dfb:    	mov    esi,DWORD PTR [rip+0xbdb]        # 0x19dc
  00e01:    	cmp    esi,0xffffffff
  00e04:    	je     0x2fecb
  00e0a:    	cmp    WORD PTR [rdi+0x2],0x3
  00e0f:    	jne    0xe28
  00e15:    	cmp    esi,0x6
  00e18:    	jge    0xe28
  00e1e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e23:    	jmp    0xe76
  00e28:    	sub    rsp,0x30
  00e2c:    	movq   QWORD PTR [rsp],xmm3
  00e31:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e37:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e3d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e43:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e49: 31 	movabs rax,0x563184053740
  00e53:    	call   rax
  00e55:    	movq   xmm3,QWORD PTR [rsp]
  00e5a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e60:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e66:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e6c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e72:    	add    rsp,0x30
  00e76: ff 	mov    QWORD PTR [rbp-0x90],rax
:00074 
:00076 %13 = %13 * %7                       [Float][Float]
  00e7d: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00e84: 00 	test   rdi,0x1
  00e8b:    	jne    0x2ff36
  00e91: 00 	test   rdi,0x2
  00e98:    	je     0xed4
  00e9e:    	xorps  xmm2,xmm2
  00ea1: 00 	movabs rax,0x8000000000000002
  00eab:    	cmp    rdi,rax
  00eae:    	je     0xee6
  00eb4:    	mov    rax,rdi
  00eb7:    	sar    rax,0x3f
  00ebb:    	add    rax,0x2
  00ebf:    	and    rdi,0xfffffffffffffffc
  00ec3:    	or     rdi,rax
  00ec6:    	rol    rdi,0x3d
  00eca:    	movq   xmm2,rdi
  00ecf:    	jmp    0xee6
  00ed4:    	call   0xfffd833c
  00ed9:    	test   rax,rax
  00edc:    	je     0x2ff36
  00ee2:    	movq   xmm2,xmm0
  00ee6:    	mulsd  xmm2,xmm3
:00077 %12 = %12 + %13                      [Float][Float]
  00eea: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00ef1: 00 	test   rdi,0x1
  00ef8:    	jne    0x2ff6c
  00efe: 00 	test   rdi,0x2
  00f05:    	je     0xf42
  00f0b:    	xorps  xmm8,xmm8
  00f0f: 00 	movabs rax,0x8000000000000002
  00f19:    	cmp    rdi,rax
  00f1c:    	je     0xf55
  00f22:    	mov    rax,rdi
  00f25:    	sar    rax,0x3f
  00f29:    	add    rax,0x2
  00f2d:    	and    rdi,0xfffffffffffffffc
  00f31:    	or     rdi,rax
  00f34:    	rol    rdi,0x3d
  00f38:    	movq   xmm8,rdi
  00f3d:    	jmp    0xf55
  00f42:    	call   0xfffd833c
  00f47:    	test   rax,rax
  00f4a:    	je     0x2ff6c
  00f50:    	movq   xmm8,xmm0
  00f55:    	addsd  xmm8,xmm2
:00078 %14 = %1.call org()                  [Ray]
  00f5a:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f5e: 00 	test   rdi,0x7
  00f65:    	jne    0x2ffb2
  00f6b:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00f6f:    	jne    0x2ffb2
  00f75: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9e65],0x26        # 0xfffdade1
  00f7c:    	jne    0x2ffb2
  00f82:    	mov    esi,DWORD PTR [rip+0xa5c]        # 0x19e4
  00f88:    	cmp    esi,0xffffffff
  00f8b:    	je     0x30009
  00f91:    	cmp    WORD PTR [rdi+0x2],0x3
  00f96:    	jne    0xfaf
  00f9c:    	cmp    esi,0x6
  00f9f:    	jge    0xfaf
  00fa5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00faa:    	jmp    0x1017
  00faf:    	sub    rsp,0x40
  00fb3:    	movq   QWORD PTR [rsp],xmm2
  00fb8:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fbe:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fc4:    	movq   QWORD PTR [rsp+0x18],xmm5
  00fca:    	movq   QWORD PTR [rsp+0x20],xmm6
  00fd0:    	movq   QWORD PTR [rsp+0x28],xmm7
  00fd6: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00fdd: 31 	movabs rax,0x563184053740
  00fe7:    	call   rax
  00fe9:    	movq   xmm2,QWORD PTR [rsp]
  00fee:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ff4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ffa:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01000:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01006:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0100c: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01013:    	add    rsp,0x40
  01017: ff 	mov    QWORD PTR [rbp-0x98],rax
:00079 
:00081 %13 = %14.call z()                   [Vec]
  0101e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01025: 00 	test   rdi,0x7
  0102c:    	jne    0x3008e
  01032:    	cmp    DWORD PTR [rdi+0x4],0x28
  01036:    	jne    0x3008e
  0103c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9d9e],0x26        # 0xfffdade1
  01043:    	jne    0x3008e
  01049:    	mov    esi,DWORD PTR [rip+0x99d]        # 0x19ec
  0104f:    	cmp    esi,0xffffffff
  01052:    	je     0x300d5
  01058:    	cmp    WORD PTR [rdi+0x2],0x3
  0105d:    	jne    0x1076
  01063:    	cmp    esi,0x6
  01066:    	jge    0x1076
  0106c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01071:    	jmp    0x10d2
  01076:    	sub    rsp,0x30
  0107a:    	movq   QWORD PTR [rsp],xmm3
  0107f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01085:    	movq   QWORD PTR [rsp+0x10],xmm5
  0108b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01091:    	movq   QWORD PTR [rsp+0x20],xmm7
  01097: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0109e: 31 	movabs rax,0x563184053740
  010a8:    	call   rax
  010aa:    	movq   xmm3,QWORD PTR [rsp]
  010af:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010b5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010bb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  010c1:    	movq   xmm7,QWORD PTR [rsp+0x20]
  010c7: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  010ce:    	add    rsp,0x30
  010d2: ff 	mov    QWORD PTR [rbp-0x90],rax
:00082 
:00084 %15 = %1.call dir()                  [Ray]
  010d9:    	mov    rdi,QWORD PTR [rbp-0x30]
  010dd: 00 	test   rdi,0x7
  010e4:    	jne    0x3014e
  010ea:    	cmp    DWORD PTR [rdi+0x4],0x2e
  010ee:    	jne    0x3014e
  010f4: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9ce6],0x26        # 0xfffdade1
  010fb:    	jne    0x3014e
  01101:    	mov    esi,DWORD PTR [rip+0x8ed]        # 0x19f4
  01107:    	cmp    esi,0xffffffff
  0110a:    	je     0x30195
  01110:    	cmp    WORD PTR [rdi+0x2],0x3
  01115:    	jne    0x112e
  0111b:    	cmp    esi,0x6
  0111e:    	jge    0x112e
  01124:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01129:    	jmp    0x118a
  0112e:    	sub    rsp,0x30
  01132:    	movq   QWORD PTR [rsp],xmm3
  01137:    	movq   QWORD PTR [rsp+0x8],xmm4
  0113d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01143:    	movq   QWORD PTR [rsp+0x18],xmm6
  01149:    	movq   QWORD PTR [rsp+0x20],xmm7
  0114f: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01156: 31 	movabs rax,0x563184053740
  01160:    	call   rax
  01162:    	movq   xmm3,QWORD PTR [rsp]
  01167:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0116d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01173:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01179:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0117f: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01186:    	add    rsp,0x30
  0118a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00085 
:00087 %14 = %15.call z()                   [Vec]
  01191: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01198: 00 	test   rdi,0x7
  0119f:    	jne    0x3020e
  011a5:    	cmp    DWORD PTR [rdi+0x4],0x28
  011a9:    	jne    0x3020e
  011af: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9c2b],0x26        # 0xfffdade1
  011b6:    	jne    0x3020e
  011bc:    	mov    esi,DWORD PTR [rip+0x83a]        # 0x19fc
  011c2:    	cmp    esi,0xffffffff
  011c5:    	je     0x30255
  011cb:    	cmp    WORD PTR [rdi+0x2],0x3
  011d0:    	jne    0x11e9
  011d6:    	cmp    esi,0x6
  011d9:    	jge    0x11e9
  011df:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  011e4:    	jmp    0x1245
  011e9:    	sub    rsp,0x30
  011ed:    	movq   QWORD PTR [rsp],xmm3
  011f2:    	movq   QWORD PTR [rsp+0x8],xmm4
  011f8:    	movq   QWORD PTR [rsp+0x10],xmm5
  011fe:    	movq   QWORD PTR [rsp+0x18],xmm6
  01204:    	movq   QWORD PTR [rsp+0x20],xmm7
  0120a: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01211: 31 	movabs rax,0x563184053740
  0121b:    	call   rax
  0121d:    	movq   xmm3,QWORD PTR [rsp]
  01222:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01228:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0122e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01234:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0123a: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01241:    	add    rsp,0x30
  01245: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 
:00090 %14 = %14 * %7                       [Float][Float]
  0124c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01253: 00 	test   rdi,0x1
  0125a:    	jne    0x302ce
  01260: 00 	test   rdi,0x2
  01267:    	je     0x12a3
  0126d:    	xorps  xmm2,xmm2
  01270: 00 	movabs rax,0x8000000000000002
  0127a:    	cmp    rdi,rax
  0127d:    	je     0x12b5
  01283:    	mov    rax,rdi
  01286:    	sar    rax,0x3f
  0128a:    	add    rax,0x2
  0128e:    	and    rdi,0xfffffffffffffffc
  01292:    	or     rdi,rax
  01295:    	rol    rdi,0x3d
  01299:    	movq   xmm2,rdi
  0129e:    	jmp    0x12b5
  012a3:    	call   0xfffd833c
  012a8:    	test   rax,rax
  012ab:    	je     0x302ce
  012b1:    	movq   xmm2,xmm0
  012b5:    	mulsd  xmm2,xmm3
:00091 %13 = %13 + %14                      [Float][Float]
  012b9: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  012c0: 00 	test   rdi,0x1
  012c7:    	jne    0x30315
  012cd: 00 	test   rdi,0x2
  012d4:    	je     0x1311
  012da:    	xorps  xmm9,xmm9
  012de: 00 	movabs rax,0x8000000000000002
  012e8:    	cmp    rdi,rax
  012eb:    	je     0x1324
  012f1:    	mov    rax,rdi
  012f4:    	sar    rax,0x3f
  012f8:    	add    rax,0x2
  012fc:    	and    rdi,0xfffffffffffffffc
  01300:    	or     rdi,rax
  01303:    	rol    rdi,0x3d
  01307:    	movq   xmm9,rdi
  0130c:    	jmp    0x1324
  01311:    	call   0xfffd833c
  01316:    	test   rax,rax
  01319:    	je     0x30315
  0131f:    	movq   xmm9,xmm0
  01324:    	addsd  xmm9,xmm2
:00092 %9 = %10.call new(%11; 3)            [#<Class:Vec>]
  01329:    	movq   xmm0,xmm4
  0132d:    	call   0xfffd842f
  01332:    	mov    QWORD PTR [rbp-0x80],rax
  01336:    	movq   xmm0,xmm8
  0133b:    	call   0xfffd842f
  01340: ff 	mov    QWORD PTR [rbp-0x88],rax
  01347:    	movq   xmm0,xmm9
  0134c:    	call   0xfffd842f
  01351: ff 	mov    QWORD PTR [rbp-0x90],rax
  01358:    	mov    rdi,QWORD PTR [rbp-0x78]
  0135c: 00 	test   rdi,0x7
  01363:    	jne    0x3036c
  01369:    	cmp    DWORD PTR [rdi+0x4],0x29
  0136d:    	jne    0x3036c
  01373: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9a67],0x26        # 0xfffdade1
  0137a:    	jne    0x3036c
  01380: 00 	mov    r9,0x0
  01387:    	sub    rsp,0x40
  0138b:    	movq   QWORD PTR [rsp],xmm2
  01390:    	movq   QWORD PTR [rsp+0x8],xmm3
  01396:    	movq   QWORD PTR [rsp+0x10],xmm4
  0139c:    	movq   QWORD PTR [rsp+0x18],xmm5
  013a2:    	movq   QWORD PTR [rsp+0x20],xmm6
  013a8:    	movq   QWORD PTR [rsp+0x28],xmm7
  013ae: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  013b5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  013bc:    	mov    rdx,rdi
  013bf:    	mov    rax,QWORD PTR [rbx]
  013c2:    	lea    rdi,[rsp-0x18]
  013c7:    	mov    QWORD PTR [rdi],rax
  013ca:    	mov    QWORD PTR [rbx],rdi
  013cd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013d6:    	mov    QWORD PTR [rsp-0x38],rcx
  013db:    	lea    rcx,[rbp-0x80]
  013df: 00 	mov    r8,0x3
  013e6:    	call   0x303a5
  013eb:    	lea    rdi,[rbp-0x8]
  013ef:    	mov    QWORD PTR [rbx],rdi
  013f2:    	movq   xmm2,QWORD PTR [rsp]
  013f7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013fd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01403:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01409:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0140f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01415: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0141c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01423:    	add    rsp,0x40
  01427: 31 	movabs r13,0x563184c859e0
  01431:    	test   rax,rax
  01434:    	je     0xfffd8303
  0143a:    	mov    QWORD PTR [rbp-0x70],rax
:00093 
:00095 _ = %2.call pl=(%9; 1)               [Isect]
  0143e:    	mov    rdi,QWORD PTR [rbp-0x38]
  01442: 00 	test   rdi,0x7
  01449:    	jne    0x303d7
  0144f:    	cmp    DWORD PTR [rdi+0x4],0x30
  01453:    	jne    0x303d7
  01459: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9981],0x26        # 0xfffdade1
  01460:    	jne    0x303d7
  01466:    	mov    esi,DWORD PTR [rip+0x598]        # 0x1a04
  0146c:    	cmp    esi,0xffffffff
  0146f:    	je     0x30410
  01475:    	cmp    WORD PTR [rdi+0x2],0x3
  0147a:    	jne    0x1497
  01480:    	cmp    esi,0x6
  01483:    	jge    0x1497
  01489:    	mov    rax,QWORD PTR [rbp-0x70]
  0148d:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01492:    	jmp    0x1524
  01497:    	sub    rsp,0x40
  0149b:    	movq   QWORD PTR [rsp],xmm2
  014a0:    	movq   QWORD PTR [rsp+0x8],xmm3
  014a6:    	movq   QWORD PTR [rsp+0x10],xmm4
  014ac:    	movq   QWORD PTR [rsp+0x18],xmm5
  014b2:    	movq   QWORD PTR [rsp+0x20],xmm6
  014b8:    	movq   QWORD PTR [rsp+0x28],xmm7
  014be: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014c5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014cc:    	mov    rdx,QWORD PTR [rbp-0x70]
  014d0: 31 	movabs rax,0x5631840539e0
  014da:    	call   rax
  014dc:    	movq   xmm2,QWORD PTR [rsp]
  014e1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  014e7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  014ed:    	movq   xmm5,QWORD PTR [rsp+0x18]
  014f3:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014f9:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014ff: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01506: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0150d:    	add    rsp,0x40
  01511: 31 	movabs r13,0x563184c85a10
  0151b:    	test   rax,rax
  0151e:    	je     0xfffd8303
:00096 
:00098 %9 = %2.call pl()                    [Isect]
  01524:    	mov    rdi,QWORD PTR [rbp-0x38]
  01528: 00 	test   rdi,0x7
  0152f:    	jne    0x304aa
  01535:    	cmp    DWORD PTR [rdi+0x4],0x30
  01539:    	jne    0x304aa
  0153f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd989b],0x26        # 0xfffdade1
  01546:    	jne    0x304aa
  0154c:    	mov    esi,DWORD PTR [rip+0x4ba]        # 0x1a0c
  01552:    	cmp    esi,0xffffffff
  01555:    	je     0x304e3
  0155b:    	cmp    WORD PTR [rdi+0x2],0x3
  01560:    	jne    0x1579
  01566:    	cmp    esi,0x6
  01569:    	jge    0x1579
  0156f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01574:    	jmp    0x15ef
  01579:    	sub    rsp,0x40
  0157d:    	movq   QWORD PTR [rsp],xmm2
  01582:    	movq   QWORD PTR [rsp+0x8],xmm3
  01588:    	movq   QWORD PTR [rsp+0x10],xmm4
  0158e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01594:    	movq   QWORD PTR [rsp+0x20],xmm6
  0159a:    	movq   QWORD PTR [rsp+0x28],xmm7
  015a0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  015a7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  015ae: 31 	movabs rax,0x563184053740
  015b8:    	call   rax
  015ba:    	movq   xmm2,QWORD PTR [rsp]
  015bf:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015c5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015cb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015d1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015d7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015dd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  015e4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015eb:    	add    rsp,0x40
  015ef:    	mov    QWORD PTR [rbp-0x70],rax
:00099 
:00101 %10 = @center: Sphere[IvarId(0)]
  015f3:    	mov    rdi,QWORD PTR [rbp-0x28]
  015f7:    	mov    rax,QWORD PTR [rdi+0x10]
  015fb:    	mov    QWORD PTR [rbp-0x78],rax
:00102 %8 = %9.call vsub(%10; 1)            [Vec]
  015ff:    	mov    rdi,QWORD PTR [rbp-0x70]
  01603: 00 	test   rdi,0x7
  0160a:    	jne    0x30576
  01610:    	cmp    DWORD PTR [rdi+0x4],0x28
  01614:    	jne    0x30576
  0161a: 26 	cmp    DWORD PTR [rip+0xfffffffffffd97c0],0x26        # 0xfffdade1
  01621:    	jne    0x30576
  01627:    	sub    rsp,0x40
  0162b:    	movq   QWORD PTR [rsp],xmm2
  01630:    	movq   QWORD PTR [rsp+0x8],xmm3
  01636:    	movq   QWORD PTR [rsp+0x10],xmm4
  0163c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01642:    	movq   QWORD PTR [rsp+0x20],xmm6
  01648:    	movq   QWORD PTR [rsp+0x28],xmm7
  0164e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01655: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0165c:    	mov    rax,QWORD PTR [rbx]
  0165f:    	lea    rdi,[rsp-0x18]
  01664:    	mov    QWORD PTR [rdi],rax
  01667:    	mov    QWORD PTR [rbx],rdi
  0166a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01673:    	mov    QWORD PTR [rsp-0x38],rcx
  01678:    	mov    rax,QWORD PTR [rbp-0x70]
  0167c:    	mov    QWORD PTR [rsp-0x38],rax
  01681: 00 	mov    rdi,0x1
  01688:    	mov    rax,QWORD PTR [rbp-0x78]
  0168c:    	mov    QWORD PTR [rsp-0x40],rax
  01691: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0169a: 08 	movabs rax,0x100080000003f
  016a4:    	mov    QWORD PTR [rsp-0x28],rax
  016a9: 31 	movabs r13,0x563184c81a90
  016b3:    	call   0xfffdba72
  016b8:    	lea    rdi,[rbp-0x8]
  016bc:    	mov    QWORD PTR [rbx],rdi
  016bf:    	movq   xmm2,QWORD PTR [rsp]
  016c4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016ca:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016d0:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016d6:    	movq   xmm6,QWORD PTR [rsp+0x20]
  016dc:    	movq   xmm7,QWORD PTR [rsp+0x28]
  016e2: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  016e9: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  016f0:    	add    rsp,0x40
  016f4: 31 	movabs r13,0x563184c85a80
  016fe:    	test   rax,rax
  01701:    	je     0xfffd8303
  01707:    	mov    QWORD PTR [rbp-0x68],rax
:00103 
:00105 %9 = %8.call vnormalize()            [Vec]
  0170b:    	mov    rdi,QWORD PTR [rbp-0x68]
  0170f: 00 	test   rdi,0x7
  01716:    	jne    0x305af
  0171c:    	cmp    DWORD PTR [rdi+0x4],0x28
  01720:    	jne    0x305af
  01726: 26 	cmp    DWORD PTR [rip+0xfffffffffffd96b4],0x26        # 0xfffdade1
  0172d:    	jne    0x305af
  01733:    	sub    rsp,0x40
  01737:    	movq   QWORD PTR [rsp],xmm2
  0173c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01742:    	movq   QWORD PTR [rsp+0x10],xmm4
  01748:    	movq   QWORD PTR [rsp+0x18],xmm5
  0174e:    	movq   QWORD PTR [rsp+0x20],xmm6
  01754:    	movq   QWORD PTR [rsp+0x28],xmm7
  0175a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01761: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01768:    	mov    rax,QWORD PTR [rbx]
  0176b:    	lea    rdi,[rsp-0x18]
  01770:    	mov    QWORD PTR [rdi],rax
  01773:    	mov    QWORD PTR [rbx],rdi
  01776: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0177f:    	mov    QWORD PTR [rsp-0x38],rcx
  01784:    	mov    rax,QWORD PTR [rbp-0x68]
  01788:    	mov    QWORD PTR [rsp-0x38],rax
  0178d: 00 	mov    rdi,0x0
  01794: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0179d: 07 	movabs rax,0x1000700000043
  017a7:    	mov    QWORD PTR [rsp-0x28],rax
  017ac: 31 	movabs r13,0x563184c828e0
  017b6:    	call   0xfffdb6d8
  017bb:    	lea    rdi,[rbp-0x8]
  017bf:    	mov    QWORD PTR [rbx],rdi
  017c2:    	movq   xmm2,QWORD PTR [rsp]
  017c7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  017cd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  017d3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  017d9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  017df:    	movq   xmm7,QWORD PTR [rsp+0x28]
  017e5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  017ec: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  017f3:    	add    rsp,0x40
  017f7: 31 	movabs r13,0x563184c85ab0
  01801:    	test   rax,rax
  01804:    	je     0xfffd8303
  0180a:    	mov    QWORD PTR [rbp-0x70],rax
:00106 
:00108 _ = %2.call n=(%9; 1)                [Isect]
  0180e:    	mov    rdi,QWORD PTR [rbp-0x38]
  01812: 00 	test   rdi,0x7
  01819:    	jne    0x305e8
  0181f:    	cmp    DWORD PTR [rdi+0x4],0x30
  01823:    	jne    0x305e8
  01829: 26 	cmp    DWORD PTR [rip+0xfffffffffffd95b1],0x26        # 0xfffdade1
  01830:    	jne    0x305e8
  01836:    	mov    esi,DWORD PTR [rip+0x1d8]        # 0x1a14
  0183c:    	cmp    esi,0xffffffff
  0183f:    	je     0x30621
  01845:    	cmp    WORD PTR [rdi+0x2],0x3
  0184a:    	jne    0x1867
  01850:    	cmp    esi,0x6
  01853:    	jge    0x1867
  01859:    	mov    rax,QWORD PTR [rbp-0x70]
  0185d:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01862:    	jmp    0x18f4
  01867:    	sub    rsp,0x40
  0186b:    	movq   QWORD PTR [rsp],xmm2
  01870:    	movq   QWORD PTR [rsp+0x8],xmm3
  01876:    	movq   QWORD PTR [rsp+0x10],xmm4
  0187c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01882:    	movq   QWORD PTR [rsp+0x20],xmm6
  01888:    	movq   QWORD PTR [rsp+0x28],xmm7
  0188e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01895: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0189c:    	mov    rdx,QWORD PTR [rbp-0x70]
  018a0: 31 	movabs rax,0x5631840539e0
  018aa:    	call   rax
  018ac:    	movq   xmm2,QWORD PTR [rsp]
  018b1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  018b7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  018bd:    	movq   xmm5,QWORD PTR [rsp+0x18]
  018c3:    	movq   xmm6,QWORD PTR [rsp+0x20]
  018c9:    	movq   xmm7,QWORD PTR [rsp+0x28]
  018cf: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  018d6: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  018dd:    	add    rsp,0x40
  018e1: 31 	movabs r13,0x563184c85ae0
  018eb:    	test   rax,rax
  018ee:    	je     0xfffd8303
:00109 
:00111 br =>:00112
  018f4:    	jmp    0x30775
:00112 br =>:00113
  018f9:    	jmp    0x30807
:00113 %9 = nil
  018fe: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00114 ret %9
  01906:    	mov    rax,QWORD PTR [rbp-0x70]
  0190a:    	leave  
  0190b:    	ret    
==> start whole compile: otherBasis FuncId(59) self_class:Scene start:[00000] bytecode:0x563184c9dfe0
<== finished compile. elapsed:150.7µs
offset:Pos(169808) code: 7549 bytes  data: 375 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x2ee22
  00038:    	cmp    DWORD PTR [rdi+0x4],0x32
  0003c:    	jne    0x2ee22
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd937f]        # 0xfffd93d0
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1d38]        # 0x1d90
  00058:    	jne    0x2ee31
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1d1b]        # 0x1d80
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2ee77
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0007e:    	jne    0x2ee77
  00084: 26 	cmp    DWORD PTR [rip+0xfffffffffffd933e],0x26        # 0xfffd93c9
  0008b:    	jne    0x2ee77
  00091:    	mov    esi,DWORD PTR [rip+0x1d05]        # 0x1d9c
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x2ee86
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 31 	movabs rax,0x563184053740
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00003 
:00005 %7 = %2.call y()                     [Vec]
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x2eeaf
  000df:    	cmp    DWORD PTR [rdi+0x4],0x28
  000e3:    	jne    0x2eeaf
  000e9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd92d9],0x26        # 0xfffd93c9
  000f0:    	jne    0x2eeaf
  000f6:    	mov    esi,DWORD PTR [rip+0x1ca8]        # 0x1da4
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x2eebe
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 31 	movabs rax,0x563184053740
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00006 
:00008 %8 = %2.call z()                     [Vec]
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x2eee7
  00144:    	cmp    DWORD PTR [rdi+0x4],0x28
  00148:    	jne    0x2eee7
  0014e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9274],0x26        # 0xfffd93c9
  00155:    	jne    0x2eee7
  0015b:    	mov    esi,DWORD PTR [rip+0x1c4b]        # 0x1dac
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x2eef6
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 31 	movabs rax,0x563184053740
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00009 
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x2ef1f
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ad:    	jne    0x2ef1f
  001b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd920f],0x26        # 0xfffd93c9
  001ba:    	jne    0x2ef1f
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x2ef2e
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 31 	movabs r13,0x563184c9e0b0
  00207:    	test   rax,rax
  0020a:    	je     0xfffd68eb
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %1:.[%3:] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 31 	movabs rax,0x5631840b8360
  00230:    	call   rax
  00232: 31 	movabs r13,0x563184c9e0d0
  0023c:    	test   rax,rax
  0023f:    	je     0xfffd68eb
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd917c]        # 0xfffd93d0
  00254: 00 	cmp    rax,QWORD PTR [rip+0x1b65]        # 0x1dc0
  0025b:    	jne    0x2ef60
  00261: 00 	mov    rax,QWORD PTR [rip+0x1b48]        # 0x1db0
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x1b5c]        # 0x1dd0
  00274: 00 	movabs rax,0x8000000000000002
  0027e:    	mov    QWORD PTR [rbp-0x58],rax
:00018 %7 = literal[0.0]
  00282: 00 	movq   xmm3,QWORD PTR [rip+0x1b56]        # 0x1de0
  0028a: 00 	movabs rax,0x8000000000000002
  00294:    	mov    QWORD PTR [rbp-0x60],rax
:00019 %8 = literal[0.0]
  00298: 00 	movq   xmm4,QWORD PTR [rip+0x1b50]        # 0x1df0
  002a0: 00 	movabs rax,0x8000000000000002
  002aa:    	mov    QWORD PTR [rbp-0x68],rax
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002ae:    	mov    rdi,QWORD PTR [rbp-0x50]
  002b2: 00 	test   rdi,0x7
  002b9:    	jne    0x2efa6
  002bf:    	cmp    DWORD PTR [rdi+0x4],0x29
  002c3:    	jne    0x2efa6
  002c9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd90f9],0x26        # 0xfffd93c9
  002d0:    	jne    0x2efa6
  002d6: 00 	mov    r9,0x0
  002dd:    	sub    rsp,0x20
  002e1:    	movq   QWORD PTR [rsp],xmm2
  002e6:    	movq   QWORD PTR [rsp+0x8],xmm3
  002ec:    	movq   QWORD PTR [rsp+0x10],xmm4
  002f2:    	mov    rdx,rdi
  002f5:    	mov    rax,QWORD PTR [rbx]
  002f8:    	lea    rdi,[rsp-0x18]
  002fd:    	mov    QWORD PTR [rdi],rax
  00300:    	mov    QWORD PTR [rbx],rdi
  00303: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0030c:    	mov    QWORD PTR [rsp-0x38],rcx
  00311:    	lea    rcx,[rbp-0x58]
  00315: 00 	mov    r8,0x3
  0031c:    	call   0x2efb5
  00321:    	lea    rdi,[rbp-0x8]
  00325:    	mov    QWORD PTR [rbx],rdi
  00328:    	movq   xmm2,QWORD PTR [rsp]
  0032d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00333:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00339:    	add    rsp,0x20
  0033d: 31 	movabs r13,0x563184c9e140
  00347:    	test   rax,rax
  0034a:    	je     0xfffd68eb
  00350:    	mov    QWORD PTR [rbp-0x48],rax
:00021 
:00023 %1:.[%3:] = %4
  00354:    	sub    rsp,0x20
  00358:    	movq   QWORD PTR [rsp],xmm2
  0035d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00363:    	movq   QWORD PTR [rsp+0x10],xmm4
  00369:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00371:    	mov    r8,QWORD PTR [rbp-0x48]
  00375:    	mov    rdi,rbx
  00378:    	mov    rsi,r12
  0037b: 31 	movabs rax,0x5631840b8360
  00385:    	call   rax
  00387:    	movq   xmm2,QWORD PTR [rsp]
  0038c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00392:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00398:    	add    rsp,0x20
  0039c: 31 	movabs r13,0x563184c9e160
  003a6:    	test   rax,rax
  003a9:    	je     0xfffd68eb
:00024 %3 = %2.call x()                     [Vec]
  003af:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b3: 00 	test   rdi,0x7
  003ba:    	jne    0x2efe7
  003c0:    	cmp    DWORD PTR [rdi+0x4],0x28
  003c4:    	jne    0x2efe7
  003ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8ff8],0x26        # 0xfffd93c9
  003d1:    	jne    0x2efe7
  003d7:    	mov    esi,DWORD PTR [rip+0x1a1f]        # 0x1dfc
  003dd:    	cmp    esi,0xffffffff
  003e0:    	je     0x2eff6
  003e6:    	cmp    WORD PTR [rdi+0x2],0x3
  003eb:    	jne    0x404
  003f1:    	cmp    esi,0x6
  003f4:    	jge    0x404
  003fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003ff:    	jmp    0x43a
  00404:    	sub    rsp,0x20
  00408:    	movq   QWORD PTR [rsp],xmm2
  0040d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00413:    	movq   QWORD PTR [rsp+0x10],xmm4
  00419: 31 	movabs rax,0x563184053740
  00423:    	call   rax
  00425:    	movq   xmm2,QWORD PTR [rsp]
  0042a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00430:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00436:    	add    rsp,0x20
  0043a:    	mov    QWORD PTR [rbp-0x40],rax
:00025 
:00027 %4 = literal[0.6]
  0043e: 00 	movq   xmm5,QWORD PTR [rip+0x19ba]        # 0x1e00
  00446: 99 	movabs rax,0xff1999999999999a
  00450:    	mov    QWORD PTR [rbp-0x48],rax
:00028 _%3 = %3 < %4                        [Float][Float]
:00029 condnotbr _%3 =>:00043
  00454:    	mov    rdi,QWORD PTR [rbp-0x40]
  00458: 00 	test   rdi,0x1
  0045f:    	jne    0x2f049
  00465: 00 	test   rdi,0x2
  0046c:    	je     0x4a8
  00472:    	xorps  xmm6,xmm6
  00475: 00 	movabs rax,0x8000000000000002
  0047f:    	cmp    rdi,rax
  00482:    	je     0x4ba
  00488:    	mov    rax,rdi
  0048b:    	sar    rax,0x3f
  0048f:    	add    rax,0x2
  00493:    	and    rdi,0xfffffffffffffffc
  00497:    	or     rdi,rax
  0049a:    	rol    rdi,0x3d
  0049e:    	movq   xmm6,rdi
  004a3:    	jmp    0x4ba
  004a8:    	call   0xfffd6924
  004ad:    	test   rax,rax
  004b0:    	je     0x2f049
  004b6:    	movq   xmm6,xmm0
  004ba:    	ucomisd xmm6,xmm5
  004be:    	jae    0x2f14a
:00030 %3 = %2.call x()                     [Vec]
  004c4:    	mov    rdi,QWORD PTR [rbp-0x38]
  004c8: 00 	test   rdi,0x7
  004cf:    	jne    0x2f058
  004d5:    	cmp    DWORD PTR [rdi+0x4],0x28
  004d9:    	jne    0x2f058
  004df: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8ee3],0x26        # 0xfffd93c9
  004e6:    	jne    0x2f058
  004ec:    	mov    esi,DWORD PTR [rip+0x191a]        # 0x1e0c
  004f2:    	cmp    esi,0xffffffff
  004f5:    	je     0x2f067
  004fb:    	cmp    WORD PTR [rdi+0x2],0x3
  00500:    	jne    0x519
  00506:    	cmp    esi,0x6
  00509:    	jge    0x519
  0050f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00514:    	jmp    0x55b
  00519:    	sub    rsp,0x20
  0051d:    	movq   QWORD PTR [rsp],xmm2
  00522:    	movq   QWORD PTR [rsp+0x8],xmm3
  00528:    	movq   QWORD PTR [rsp+0x10],xmm4
  0052e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00534: 31 	movabs rax,0x563184053740
  0053e:    	call   rax
  00540:    	movq   xmm2,QWORD PTR [rsp]
  00545:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0054b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00551:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00557:    	add    rsp,0x20
  0055b:    	mov    QWORD PTR [rbp-0x40],rax
:00031 
:00033 %4 = literal[-0.6]
  0055f: 00 	movq   xmm5,QWORD PTR [rip+0x18a9]        # 0x1e10
  00567: 99 	movabs rax,0xff1999999999999e
  00571:    	mov    QWORD PTR [rbp-0x48],rax
:00034 _%3 = %3 > %4                        [Float][Float]
:00035 condnotbr _%3 =>:00043
  00575:    	mov    rdi,QWORD PTR [rbp-0x40]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x2f0c6
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffd6924
  005ce:    	test   rax,rax
  005d1:    	je     0x2f0c6
  005d7:    	movq   xmm6,xmm0
  005db:    	ucomisd xmm6,xmm5
  005df:    	jbe    0x2f163
:00036 %3 = 1: i32
  005e5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]                         [Array][Integer]
  005ed:    	sub    rsp,0x20
  005f1:    	movq   QWORD PTR [rsp],xmm2
  005f6:    	movq   QWORD PTR [rsp+0x8],xmm3
  005fc:    	movq   QWORD PTR [rsp+0x10],xmm4
  00602:    	movq   QWORD PTR [rsp+0x18],xmm5
  00608:    	mov    rdx,QWORD PTR [rbp-0x30]
  0060c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00610:    	mov    rdi,rbx
  00613:    	mov    rsi,r12
  00616: 31 	movabs r8,0x563184c9e238
  00620: 31 	movabs rax,0x5631840b8230
  0062a:    	call   rax
  0062c:    	movq   xmm2,QWORD PTR [rsp]
  00631:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00637:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0063d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00643:    	add    rsp,0x20
  00647: 31 	movabs r13,0x563184c9e240
  00651:    	test   rax,rax
  00654:    	je     0xfffd68eb
  0065a:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  0065e: 00 	movq   xmm5,QWORD PTR [rip+0x17ba]        # 0x1e20
  00666: 00 	movabs rax,0xff80000000000002
  00670:    	mov    QWORD PTR [rbp-0x48],rax
:00039 _ = %3.call x=(%4; 1)                [Vec]
  00674:    	mov    rdi,QWORD PTR [rbp-0x40]
  00678: 00 	test   rdi,0x7
  0067f:    	jne    0x2f0d5
  00685:    	cmp    DWORD PTR [rdi+0x4],0x28
  00689:    	jne    0x2f0d5
  0068f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8d33],0x26        # 0xfffd93c9
  00696:    	jne    0x2f0d5
  0069c:    	mov    esi,DWORD PTR [rip+0x178a]        # 0x1e2c
  006a2:    	cmp    esi,0xffffffff
  006a5:    	je     0x2f0e4
  006ab:    	cmp    WORD PTR [rdi+0x2],0x3
  006b0:    	jne    0x6cd
  006b6:    	cmp    esi,0x6
  006b9:    	jge    0x6cd
  006bf:    	mov    rax,QWORD PTR [rbp-0x48]
  006c3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006c8:    	jmp    0x726
  006cd:    	sub    rsp,0x20
  006d1:    	movq   QWORD PTR [rsp],xmm2
  006d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  006dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  006e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  006e8:    	mov    rdx,QWORD PTR [rbp-0x48]
  006ec: 31 	movabs rax,0x5631840539e0
  006f6:    	call   rax
  006f8:    	movq   xmm2,QWORD PTR [rsp]
  006fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00703:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00709:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0070f:    	add    rsp,0x20
  00713: 31 	movabs r13,0x563184c9e270
  0071d:    	test   rax,rax
  00720:    	je     0xfffd68eb
:00040 
:00042 br =>:00087
  00726:    	jmp    0x2f824
:00043 %3 = %2.call y()                     [<INVALID>]
  0072b: 01 	sub    DWORD PTR [rip+0x16fe],0x1        # 0x1e30
  00732:    	je     0x2f18b
  00738:    	sub    rsp,0x20
  0073c:    	movq   QWORD PTR [rsp],xmm2
  00741:    	movq   QWORD PTR [rsp+0x8],xmm3
  00747:    	movq   QWORD PTR [rsp+0x10],xmm4
  0074d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00753:    	mov    rdi,QWORD PTR [rbp-0x38]
  00757: 31 	movabs rax,0x5631840958d0
  00761:    	call   rax
  00763:    	mov    r15d,eax
  00766: 00 	cmp    r15d,DWORD PTR [rip+0x16cb]        # 0x1e38
  0076d:    	jne    0x2f1ad
  00773:    	mov    eax,DWORD PTR [rip+0xfffffffffffd8c50]        # 0xfffd93c9
  00779:    	cmp    DWORD PTR [rip+0x16b5],eax        # 0x1e34
  0077f:    	jne    0x2f1ad
  00785:    	mov    rax,QWORD PTR [rbx]
  00788:    	lea    rdi,[rsp-0x18]
  0078d:    	mov    QWORD PTR [rdi],rax
  00790:    	mov    QWORD PTR [rbx],rdi
  00793: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0079c:    	mov    QWORD PTR [rsp-0x38],rcx
  007a1:    	mov    rax,QWORD PTR [rbp-0x38]
  007a5:    	mov    QWORD PTR [rsp-0x38],rax
  007aa: 00 	mov    rdi,0x0
  007b1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007ba: 00 	movabs rax,0x0
  007c4:    	mov    QWORD PTR [rsp-0x28],rax
  007c9: 00 	movabs r13,0x0
  007d3:    	call   0xfffd68b0
  007d8:    	lea    rdi,[rbp-0x8]
  007dc:    	mov    QWORD PTR [rbx],rdi
  007df:    	movq   xmm2,QWORD PTR [rsp]
  007e4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007ea:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007f0:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007f6:    	add    rsp,0x20
  007fa:    	test   rax,rax
  007fd:    	je     0x2f219
  00803:    	mov    QWORD PTR [rbp-0x40],rax
:00044 
:00046 %4 = literal[0.6]
  00807: 00 	movq   xmm5,QWORD PTR [rip+0x1631]        # 0x1e40
  0080f: 99 	movabs rax,0xff1999999999999a
  00819:    	mov    QWORD PTR [rbp-0x48],rax
:00047 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00048 condnotbr _%3 =>:00062
  0081d:    	mov    rdi,QWORD PTR [rbp-0x40]
  00821:    	mov    rsi,QWORD PTR [rbp-0x48]
  00825: 00 	test   rdi,0x1
  0082c:    	je     0x2f228
  00832: 00 	test   rsi,0x1
  00839:    	je     0x2f228
  0083f:    	cmp    rdi,rsi
  00842:    	jge    0x2f42a
:00049 %3 = %2.call y()                     [<INVALID>]
  00848: 01 	sub    DWORD PTR [rip+0x15f9],0x1        # 0x1e48
  0084f:    	je     0x2f28c
  00855:    	sub    rsp,0x20
  00859:    	movq   QWORD PTR [rsp],xmm2
  0085e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00864:    	movq   QWORD PTR [rsp+0x10],xmm4
  0086a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00870:    	mov    rdi,QWORD PTR [rbp-0x38]
  00874: 31 	movabs rax,0x5631840958d0
  0087e:    	call   rax
  00880:    	mov    r15d,eax
  00883: 00 	cmp    r15d,DWORD PTR [rip+0x15c6]        # 0x1e50
  0088a:    	jne    0x2f2ae
  00890:    	mov    eax,DWORD PTR [rip+0xfffffffffffd8b33]        # 0xfffd93c9
  00896:    	cmp    DWORD PTR [rip+0x15b0],eax        # 0x1e4c
  0089c:    	jne    0x2f2ae
  008a2:    	mov    rax,QWORD PTR [rbx]
  008a5:    	lea    rdi,[rsp-0x18]
  008aa:    	mov    QWORD PTR [rdi],rax
  008ad:    	mov    QWORD PTR [rbx],rdi
  008b0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008b9:    	mov    QWORD PTR [rsp-0x38],rcx
  008be:    	mov    rax,QWORD PTR [rbp-0x38]
  008c2:    	mov    QWORD PTR [rsp-0x38],rax
  008c7: 00 	mov    rdi,0x0
  008ce: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008d7: 00 	movabs rax,0x0
  008e1:    	mov    QWORD PTR [rsp-0x28],rax
  008e6: 00 	movabs r13,0x0
  008f0:    	call   0xfffd68b0
  008f5:    	lea    rdi,[rbp-0x8]
  008f9:    	mov    QWORD PTR [rbx],rdi
  008fc:    	movq   xmm2,QWORD PTR [rsp]
  00901:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00907:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0090d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00913:    	add    rsp,0x20
  00917:    	test   rax,rax
  0091a:    	je     0x2f31a
  00920:    	mov    QWORD PTR [rbp-0x40],rax
:00050 
:00052 %4 = literal[-0.6]
  00924: 00 	movq   xmm5,QWORD PTR [rip+0x1534]        # 0x1e60
  0092c: 99 	movabs rax,0xff1999999999999e
  00936:    	mov    QWORD PTR [rbp-0x48],rax
:00053 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00054 condnotbr _%3 =>:00062
  0093a:    	mov    rdi,QWORD PTR [rbp-0x40]
  0093e:    	mov    rsi,QWORD PTR [rbp-0x48]
  00942: 00 	test   rdi,0x1
  00949:    	je     0x2f329
  0094f: 00 	test   rsi,0x1
  00956:    	je     0x2f329
  0095c:    	cmp    rdi,rsi
  0095f:    	jle    0x2f443
:00055 %3 = 1: i32
  00965: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  0096d:    	sub    rsp,0x20
  00971:    	movq   QWORD PTR [rsp],xmm2
  00976:    	movq   QWORD PTR [rsp+0x8],xmm3
  0097c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00982:    	movq   QWORD PTR [rsp+0x18],xmm5
  00988:    	mov    rdx,QWORD PTR [rbp-0x30]
  0098c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00990:    	mov    rdi,rbx
  00993:    	mov    rsi,r12
  00996: 31 	movabs r8,0x563184c9e368
  009a0: 31 	movabs rax,0x5631840b8230
  009aa:    	call   rax
  009ac:    	movq   xmm2,QWORD PTR [rsp]
  009b1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009b7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009bd:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009c3:    	add    rsp,0x20
  009c7: 31 	movabs r13,0x563184c9e370
  009d1:    	test   rax,rax
  009d4:    	je     0xfffd68eb
  009da:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  009de: 00 	movq   xmm5,QWORD PTR [rip+0x148a]        # 0x1e70
  009e6: 00 	movabs rax,0xff80000000000002
  009f0:    	mov    QWORD PTR [rbp-0x48],rax
:00058 _ = %3.call y=(%4; 1)                [<INVALID>]
  009f4: 01 	sub    DWORD PTR [rip+0x147d],0x1        # 0x1e78
  009fb:    	je     0x2f38d
  00a01:    	sub    rsp,0x20
  00a05:    	movq   QWORD PTR [rsp],xmm2
  00a0a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a10:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a16:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a1c:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a20: 31 	movabs rax,0x5631840958d0
  00a2a:    	call   rax
  00a2c:    	mov    r15d,eax
  00a2f: 00 	cmp    r15d,DWORD PTR [rip+0x144a]        # 0x1e80
  00a36:    	jne    0x2f3af
  00a3c:    	mov    eax,DWORD PTR [rip+0xfffffffffffd8987]        # 0xfffd93c9
  00a42:    	cmp    DWORD PTR [rip+0x1434],eax        # 0x1e7c
  00a48:    	jne    0x2f3af
  00a4e:    	mov    rax,QWORD PTR [rbx]
  00a51:    	lea    rdi,[rsp-0x18]
  00a56:    	mov    QWORD PTR [rdi],rax
  00a59:    	mov    QWORD PTR [rbx],rdi
  00a5c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a65:    	mov    QWORD PTR [rsp-0x38],rcx
  00a6a:    	mov    rax,QWORD PTR [rbp-0x40]
  00a6e:    	mov    QWORD PTR [rsp-0x38],rax
  00a73: 00 	mov    rdi,0x1
  00a7a:    	mov    rax,QWORD PTR [rbp-0x48]
  00a7e:    	mov    QWORD PTR [rsp-0x40],rax
  00a83: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a8c: 00 	movabs rax,0x0
  00a96:    	mov    QWORD PTR [rsp-0x28],rax
  00a9b: 00 	movabs r13,0x0
  00aa5:    	call   0xfffd68b0
  00aaa:    	lea    rdi,[rbp-0x8]
  00aae:    	mov    QWORD PTR [rbx],rdi
  00ab1:    	movq   xmm2,QWORD PTR [rsp]
  00ab6:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00abc:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ac2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ac8:    	add    rsp,0x20
  00acc:    	test   rax,rax
  00acf:    	je     0x2f41b
:00059 
:00061 br =>:00087
  00ad5:    	jmp    0x2f83d
:00062 %3 = %2.call z()                     [<INVALID>]
  00ada: 01 	sub    DWORD PTR [rip+0x13a3],0x1        # 0x1e84
  00ae1:    	je     0x2f46b
  00ae7:    	sub    rsp,0x20
  00aeb:    	movq   QWORD PTR [rsp],xmm2
  00af0:    	movq   QWORD PTR [rsp+0x8],xmm3
  00af6:    	movq   QWORD PTR [rsp+0x10],xmm4
  00afc:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b02:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b06: 31 	movabs rax,0x5631840958d0
  00b10:    	call   rax
  00b12:    	mov    r15d,eax
  00b15: 00 	cmp    r15d,DWORD PTR [rip+0x1370]        # 0x1e8c
  00b1c:    	jne    0x2f48d
  00b22:    	mov    eax,DWORD PTR [rip+0xfffffffffffd88a1]        # 0xfffd93c9
  00b28:    	cmp    DWORD PTR [rip+0x135a],eax        # 0x1e88
  00b2e:    	jne    0x2f48d
  00b34:    	mov    rax,QWORD PTR [rbx]
  00b37:    	lea    rdi,[rsp-0x18]
  00b3c:    	mov    QWORD PTR [rdi],rax
  00b3f:    	mov    QWORD PTR [rbx],rdi
  00b42: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b4b:    	mov    QWORD PTR [rsp-0x38],rcx
  00b50:    	mov    rax,QWORD PTR [rbp-0x38]
  00b54:    	mov    QWORD PTR [rsp-0x38],rax
  00b59: 00 	mov    rdi,0x0
  00b60: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b69: 00 	movabs rax,0x0
  00b73:    	mov    QWORD PTR [rsp-0x28],rax
  00b78: 00 	movabs r13,0x0
  00b82:    	call   0xfffd68b0
  00b87:    	lea    rdi,[rbp-0x8]
  00b8b:    	mov    QWORD PTR [rbx],rdi
  00b8e:    	movq   xmm2,QWORD PTR [rsp]
  00b93:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b99:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b9f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ba5:    	add    rsp,0x20
  00ba9:    	test   rax,rax
  00bac:    	je     0x2f4f9
  00bb2:    	mov    QWORD PTR [rbp-0x40],rax
:00063 
:00065 %4 = literal[0.6]
  00bb6: 00 	movq   xmm5,QWORD PTR [rip+0x12d2]        # 0x1e90
  00bbe: 99 	movabs rax,0xff1999999999999a
  00bc8:    	mov    QWORD PTR [rbp-0x48],rax
:00066 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00067 condnotbr _%3 =>:00081
  00bcc:    	mov    rdi,QWORD PTR [rbp-0x40]
  00bd0:    	mov    rsi,QWORD PTR [rbp-0x48]
  00bd4: 00 	test   rdi,0x1
  00bdb:    	je     0x2f508
  00be1: 00 	test   rsi,0x1
  00be8:    	je     0x2f508
  00bee:    	cmp    rdi,rsi
  00bf1:    	jge    0x2f70a
:00068 %3 = %2.call z()                     [<INVALID>]
  00bf7: 01 	sub    DWORD PTR [rip+0x129a],0x1        # 0x1e98
  00bfe:    	je     0x2f56c
  00c04:    	sub    rsp,0x20
  00c08:    	movq   QWORD PTR [rsp],xmm2
  00c0d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c13:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c19:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c1f:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c23: 31 	movabs rax,0x5631840958d0
  00c2d:    	call   rax
  00c2f:    	mov    r15d,eax
  00c32: 00 	cmp    r15d,DWORD PTR [rip+0x1267]        # 0x1ea0
  00c39:    	jne    0x2f58e
  00c3f:    	mov    eax,DWORD PTR [rip+0xfffffffffffd8784]        # 0xfffd93c9
  00c45:    	cmp    DWORD PTR [rip+0x1251],eax        # 0x1e9c
  00c4b:    	jne    0x2f58e
  00c51:    	mov    rax,QWORD PTR [rbx]
  00c54:    	lea    rdi,[rsp-0x18]
  00c59:    	mov    QWORD PTR [rdi],rax
  00c5c:    	mov    QWORD PTR [rbx],rdi
  00c5f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c68:    	mov    QWORD PTR [rsp-0x38],rcx
  00c6d:    	mov    rax,QWORD PTR [rbp-0x38]
  00c71:    	mov    QWORD PTR [rsp-0x38],rax
  00c76: 00 	mov    rdi,0x0
  00c7d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c86: 00 	movabs rax,0x0
  00c90:    	mov    QWORD PTR [rsp-0x28],rax
  00c95: 00 	movabs r13,0x0
  00c9f:    	call   0xfffd68b0
  00ca4:    	lea    rdi,[rbp-0x8]
  00ca8:    	mov    QWORD PTR [rbx],rdi
  00cab:    	movq   xmm2,QWORD PTR [rsp]
  00cb0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cb6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cbc:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cc2:    	add    rsp,0x20
  00cc6:    	test   rax,rax
  00cc9:    	je     0x2f5fa
  00ccf:    	mov    QWORD PTR [rbp-0x40],rax
:00069 
:00071 %4 = literal[-0.6]
  00cd3: 00 	movq   xmm5,QWORD PTR [rip+0x11d5]        # 0x1eb0
  00cdb: 99 	movabs rax,0xff1999999999999e
  00ce5:    	mov    QWORD PTR [rbp-0x48],rax
:00072 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00073 condnotbr _%3 =>:00081
  00ce9:    	mov    rdi,QWORD PTR [rbp-0x40]
  00ced:    	mov    rsi,QWORD PTR [rbp-0x48]
  00cf1: 00 	test   rdi,0x1
  00cf8:    	je     0x2f609
  00cfe: 00 	test   rsi,0x1
  00d05:    	je     0x2f609
  00d0b:    	cmp    rdi,rsi
  00d0e:    	jle    0x2f723
:00074 %3 = 1: i32
  00d14: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]                         [Array][Integer]
  00d1c:    	sub    rsp,0x20
  00d20:    	movq   QWORD PTR [rsp],xmm2
  00d25:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d2b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d31:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d37:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d3b:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d3f:    	mov    rdi,rbx
  00d42:    	mov    rsi,r12
  00d45: 31 	movabs r8,0x563184c9e498
  00d4f: 31 	movabs rax,0x5631840b8230
  00d59:    	call   rax
  00d5b:    	movq   xmm2,QWORD PTR [rsp]
  00d60:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d66:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d6c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d72:    	add    rsp,0x20
  00d76: 31 	movabs r13,0x563184c9e4a0
  00d80:    	test   rax,rax
  00d83:    	je     0xfffd68eb
  00d89:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00d8d: 00 	movq   xmm5,QWORD PTR [rip+0x112b]        # 0x1ec0
  00d95: 00 	movabs rax,0xff80000000000002
  00d9f:    	mov    QWORD PTR [rbp-0x48],rax
:00077 _ = %3.call z=(%4; 1)                [<INVALID>]
  00da3: 01 	sub    DWORD PTR [rip+0x111e],0x1        # 0x1ec8
  00daa:    	je     0x2f66d
  00db0:    	sub    rsp,0x20
  00db4:    	movq   QWORD PTR [rsp],xmm2
  00db9:    	movq   QWORD PTR [rsp+0x8],xmm3
  00dbf:    	movq   QWORD PTR [rsp+0x10],xmm4
  00dc5:    	movq   QWORD PTR [rsp+0x18],xmm5
  00dcb:    	mov    rdi,QWORD PTR [rbp-0x40]
  00dcf: 31 	movabs rax,0x5631840958d0
  00dd9:    	call   rax
  00ddb:    	mov    r15d,eax
  00dde: 00 	cmp    r15d,DWORD PTR [rip+0x10eb]        # 0x1ed0
  00de5:    	jne    0x2f68f
  00deb:    	mov    eax,DWORD PTR [rip+0xfffffffffffd85d8]        # 0xfffd93c9
  00df1:    	cmp    DWORD PTR [rip+0x10d5],eax        # 0x1ecc
  00df7:    	jne    0x2f68f
  00dfd:    	mov    rax,QWORD PTR [rbx]
  00e00:    	lea    rdi,[rsp-0x18]
  00e05:    	mov    QWORD PTR [rdi],rax
  00e08:    	mov    QWORD PTR [rbx],rdi
  00e0b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00e14:    	mov    QWORD PTR [rsp-0x38],rcx
  00e19:    	mov    rax,QWORD PTR [rbp-0x40]
  00e1d:    	mov    QWORD PTR [rsp-0x38],rax
  00e22: 00 	mov    rdi,0x1
  00e29:    	mov    rax,QWORD PTR [rbp-0x48]
  00e2d:    	mov    QWORD PTR [rsp-0x40],rax
  00e32: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e3b: 00 	movabs rax,0x0
  00e45:    	mov    QWORD PTR [rsp-0x28],rax
  00e4a: 00 	movabs r13,0x0
  00e54:    	call   0xfffd68b0
  00e59:    	lea    rdi,[rbp-0x8]
  00e5d:    	mov    QWORD PTR [rbx],rdi
  00e60:    	movq   xmm2,QWORD PTR [rsp]
  00e65:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e6b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e71:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e77:    	add    rsp,0x20
  00e7b:    	test   rax,rax
  00e7e:    	je     0x2f6fb
:00078 
:00080 br =>:00087
  00e84:    	jmp    0x2f856
:00081 %3 = 1: i32
  00e89: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00e91:    	sub    rsp,0x20
  00e95:    	movq   QWORD PTR [rsp],xmm2
  00e9a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ea0:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ea6:    	movq   QWORD PTR [rsp+0x18],xmm5
  00eac:    	mov    rdx,QWORD PTR [rbp-0x30]
  00eb0:    	mov    rcx,QWORD PTR [rbp-0x40]
  00eb4:    	mov    rdi,rbx
  00eb7:    	mov    rsi,r12
  00eba: 31 	movabs r8,0x563184c9e508
  00ec4: 31 	movabs rax,0x5631840b8230
  00ece:    	call   rax
  00ed0:    	movq   xmm2,QWORD PTR [rsp]
  00ed5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00edb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ee1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ee7:    	add    rsp,0x20
  00eeb: 31 	movabs r13,0x563184c9e510
  00ef5:    	test   rax,rax
  00ef8:    	je     0xfffd68eb
  00efe:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00f02: 00 	movq   xmm5,QWORD PTR [rip+0xfd6]        # 0x1ee0
  00f0a: 00 	movabs rax,0xff80000000000002
  00f14:    	mov    QWORD PTR [rbp-0x48],rax
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f18: 01 	sub    DWORD PTR [rip+0xfc9],0x1        # 0x1ee8
  00f1f:    	je     0x2f74b
  00f25:    	sub    rsp,0x20
  00f29:    	movq   QWORD PTR [rsp],xmm2
  00f2e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f34:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f3a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f40:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f44: 31 	movabs rax,0x5631840958d0
  00f4e:    	call   rax
  00f50:    	mov    r15d,eax
  00f53: 00 	cmp    r15d,DWORD PTR [rip+0xf96]        # 0x1ef0
  00f5a:    	jne    0x2f76d
  00f60:    	mov    eax,DWORD PTR [rip+0xfffffffffffd8463]        # 0xfffd93c9
  00f66:    	cmp    DWORD PTR [rip+0xf80],eax        # 0x1eec
  00f6c:    	jne    0x2f76d
  00f72:    	mov    rax,QWORD PTR [rbx]
  00f75:    	lea    rdi,[rsp-0x18]
  00f7a:    	mov    QWORD PTR [rdi],rax
  00f7d:    	mov    QWORD PTR [rbx],rdi
  00f80: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f89:    	mov    QWORD PTR [rsp-0x38],rcx
  00f8e:    	mov    rax,QWORD PTR [rbp-0x40]
  00f92:    	mov    QWORD PTR [rsp-0x38],rax
  00f97: 00 	mov    rdi,0x1
  00f9e:    	mov    rax,QWORD PTR [rbp-0x48]
  00fa2:    	mov    QWORD PTR [rsp-0x40],rax
  00fa7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fb0: 00 	movabs rax,0x0
  00fba:    	mov    QWORD PTR [rsp-0x28],rax
  00fbf: 00 	movabs r13,0x0
  00fc9:    	call   0xfffd68b0
  00fce:    	lea    rdi,[rbp-0x8]
  00fd2:    	mov    QWORD PTR [rbx],rdi
  00fd5:    	movq   xmm2,QWORD PTR [rsp]
  00fda:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fe0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fe6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fec:    	add    rsp,0x20
  00ff0:    	test   rax,rax
  00ff3:    	je     0x2f7d9
:00085 
:00087 %3 = 0: i32
  00ff9: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  01001: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  01009:    	sub    rsp,0x20
  0100d:    	movq   QWORD PTR [rsp],xmm2
  01012:    	movq   QWORD PTR [rsp+0x8],xmm3
  01018:    	movq   QWORD PTR [rsp+0x10],xmm4
  0101e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01024:    	mov    rdx,QWORD PTR [rbp-0x30]
  01028:    	mov    rcx,QWORD PTR [rbp-0x50]
  0102c:    	mov    rdi,rbx
  0102f:    	mov    rsi,r12
  01032: 31 	movabs r8,0x563184c9e578
  0103c: 31 	movabs rax,0x5631840b8230
  01046:    	call   rax
  01048:    	movq   xmm2,QWORD PTR [rsp]
  0104d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01053:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01059:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0105f:    	add    rsp,0x20
  01063: 31 	movabs r13,0x563184c9e580
  0106d:    	test   rax,rax
  01070:    	je     0xfffd68eb
  01076:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  0107a: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  01082:    	sub    rsp,0x20
  01086:    	movq   QWORD PTR [rsp],xmm3
  0108b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01091:    	movq   QWORD PTR [rsp+0x10],xmm5
  01097:    	mov    rdx,QWORD PTR [rbp-0x30]
  0109b:    	mov    rcx,QWORD PTR [rbp-0x58]
  0109f:    	mov    rdi,rbx
  010a2:    	mov    rsi,r12
  010a5: 31 	movabs r8,0x563184c9e598
  010af: 31 	movabs rax,0x5631840b8230
  010b9:    	call   rax
  010bb:    	movq   xmm3,QWORD PTR [rsp]
  010c0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010c6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010cc:    	add    rsp,0x20
  010d0: 31 	movabs r13,0x563184c9e5a0
  010da:    	test   rax,rax
  010dd:    	je     0xfffd68eb
  010e3:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  010e7:    	mov    rdi,QWORD PTR [rbp-0x50]
  010eb: 00 	test   rdi,0x7
  010f2:    	jne    0x2f7e8
  010f8:    	cmp    DWORD PTR [rdi+0x4],0x28
  010fc:    	jne    0x2f7e8
  01102: 26 	cmp    DWORD PTR [rip+0xfffffffffffd82c0],0x26        # 0xfffd93c9
  01109:    	jne    0x2f7e8
  0110f:    	sub    rsp,0x10
  01113:    	movq   QWORD PTR [rsp],xmm3
  01118:    	movq   QWORD PTR [rsp+0x8],xmm4
  0111e:    	mov    rax,QWORD PTR [rbx]
  01121:    	lea    rdi,[rsp-0x18]
  01126:    	mov    QWORD PTR [rdi],rax
  01129:    	mov    QWORD PTR [rbx],rdi
  0112c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01135:    	mov    QWORD PTR [rsp-0x38],rcx
  0113a:    	mov    rax,QWORD PTR [rbp-0x50]
  0113e:    	mov    QWORD PTR [rsp-0x38],rax
  01143: 00 	mov    rdi,0x1
  0114a:    	mov    rax,QWORD PTR [rbp-0x58]
  0114e:    	mov    QWORD PTR [rsp-0x40],rax
  01153: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0115c: 09 	movabs rax,0x900000040
  01166:    	mov    QWORD PTR [rsp-0x28],rax
  0116b: 31 	movabs r13,0x563184c82c10
  01175:    	call   0xfffe2edd
  0117a:    	lea    rdi,[rbp-0x8]
  0117e:    	mov    QWORD PTR [rbx],rdi
  01181:    	movq   xmm3,QWORD PTR [rsp]
  01186:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0118c:    	add    rsp,0x10
  01190: 31 	movabs r13,0x563184c9e5c0
  0119a:    	test   rax,rax
  0119d:    	je     0xfffd68eb
  011a3:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  011a7:    	sub    rsp,0x10
  011ab:    	movq   QWORD PTR [rsp],xmm3
  011b0:    	movq   QWORD PTR [rsp+0x8],xmm4
  011b6:    	mov    rdx,QWORD PTR [rbp-0x30]
  011ba:    	mov    rcx,QWORD PTR [rbp-0x40]
  011be:    	mov    r8,QWORD PTR [rbp-0x48]
  011c2:    	mov    rdi,rbx
  011c5:    	mov    rsi,r12
  011c8: 31 	movabs rax,0x5631840b8360
  011d2:    	call   rax
  011d4:    	movq   xmm3,QWORD PTR [rsp]
  011d9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011df:    	add    rsp,0x10
  011e3: 31 	movabs r13,0x563184c9e5e0
  011ed:    	test   rax,rax
  011f0:    	je     0xfffd68eb
:00096 %3 = 0: i32
  011f6: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  011fe: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  01206:    	sub    rsp,0x10
  0120a:    	movq   QWORD PTR [rsp],xmm3
  0120f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01215:    	mov    rdx,QWORD PTR [rbp-0x30]
  01219:    	mov    rcx,QWORD PTR [rbp-0x50]
  0121d:    	mov    rdi,rbx
  01220:    	mov    rsi,r12
  01223: 31 	movabs r8,0x563184c9e608
  0122d: 31 	movabs rax,0x5631840b8230
  01237:    	call   rax
  01239:    	movq   xmm3,QWORD PTR [rsp]
  0123e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01244:    	add    rsp,0x10
  01248: 31 	movabs r13,0x563184c9e610
  01252:    	test   rax,rax
  01255:    	je     0xfffd68eb
  0125b:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  0125f:    	mov    rdi,QWORD PTR [rbp-0x50]
  01263: 00 	test   rdi,0x7
  0126a:    	jne    0x2f7f7
  01270:    	cmp    DWORD PTR [rdi+0x4],0x28
  01274:    	jne    0x2f7f7
  0127a: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8148],0x26        # 0xfffd93c9
  01281:    	jne    0x2f7f7
  01287:    	sub    rsp,0x10
  0128b:    	movq   QWORD PTR [rsp],xmm3
  01290:    	movq   QWORD PTR [rsp+0x8],xmm4
  01296:    	mov    rax,QWORD PTR [rbx]
  01299:    	lea    rdi,[rsp-0x18]
  0129e:    	mov    QWORD PTR [rdi],rax
  012a1:    	mov    QWORD PTR [rbx],rdi
  012a4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012ad:    	mov    QWORD PTR [rsp-0x38],rcx
  012b2:    	mov    rax,QWORD PTR [rbp-0x50]
  012b6:    	mov    QWORD PTR [rsp-0x38],rax
  012bb: 00 	mov    rdi,0x0
  012c2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012cb: 07 	movabs rax,0x1000700000043
  012d5:    	mov    QWORD PTR [rsp-0x28],rax
  012da: 31 	movabs r13,0x563184c828e0
  012e4:    	call   0xfffd9cc0
  012e9:    	lea    rdi,[rbp-0x8]
  012ed:    	mov    QWORD PTR [rbx],rdi
  012f0:    	movq   xmm3,QWORD PTR [rsp]
  012f5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012fb:    	add    rsp,0x10
  012ff: 31 	movabs r13,0x563184c9e630
  01309:    	test   rax,rax
  0130c:    	je     0xfffd68eb
  01312:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  01316:    	sub    rsp,0x10
  0131a:    	movq   QWORD PTR [rsp],xmm3
  0131f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01325:    	mov    rdx,QWORD PTR [rbp-0x30]
  01329:    	mov    rcx,QWORD PTR [rbp-0x40]
  0132d:    	mov    r8,QWORD PTR [rbp-0x48]
  01331:    	mov    rdi,rbx
  01334:    	mov    rsi,r12
  01337: 31 	movabs rax,0x5631840b8360
  01341:    	call   rax
  01343:    	movq   xmm3,QWORD PTR [rsp]
  01348:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0134e:    	add    rsp,0x10
  01352: 31 	movabs r13,0x563184c9e650
  0135c:    	test   rax,rax
  0135f:    	je     0xfffd68eb
:00103 %3 = 1: i32
  01365: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  0136d: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01375:    	sub    rsp,0x10
  01379:    	movq   QWORD PTR [rsp],xmm3
  0137e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01384:    	mov    rdx,QWORD PTR [rbp-0x30]
  01388:    	mov    rcx,QWORD PTR [rbp-0x50]
  0138c:    	mov    rdi,rbx
  0138f:    	mov    rsi,r12
  01392: 31 	movabs r8,0x563184c9e678
  0139c: 31 	movabs rax,0x5631840b8230
  013a6:    	call   rax
  013a8:    	movq   xmm3,QWORD PTR [rsp]
  013ad:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013b3:    	add    rsp,0x10
  013b7: 31 	movabs r13,0x563184c9e680
  013c1:    	test   rax,rax
  013c4:    	je     0xfffd68eb
  013ca:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  013ce: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  013d6:    	sub    rsp,0x10
  013da:    	movq   QWORD PTR [rsp],xmm3
  013df:    	movq   QWORD PTR [rsp+0x8],xmm4
  013e5:    	mov    rdx,QWORD PTR [rbp-0x30]
  013e9:    	mov    rcx,QWORD PTR [rbp-0x58]
  013ed:    	mov    rdi,rbx
  013f0:    	mov    rsi,r12
  013f3: 31 	movabs r8,0x563184c9e698
  013fd: 31 	movabs rax,0x5631840b8230
  01407:    	call   rax
  01409:    	movq   xmm3,QWORD PTR [rsp]
  0140e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01414:    	add    rsp,0x10
  01418: 31 	movabs r13,0x563184c9e6a0
  01422:    	test   rax,rax
  01425:    	je     0xfffd68eb
  0142b:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  0142f:    	mov    rdi,QWORD PTR [rbp-0x50]
  01433: 00 	test   rdi,0x7
  0143a:    	jne    0x2f806
  01440:    	cmp    DWORD PTR [rdi+0x4],0x28
  01444:    	jne    0x2f806
  0144a: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7f78],0x26        # 0xfffd93c9
  01451:    	jne    0x2f806
  01457:    	sub    rsp,0x10
  0145b:    	movq   QWORD PTR [rsp],xmm3
  01460:    	movq   QWORD PTR [rsp+0x8],xmm4
  01466:    	mov    rax,QWORD PTR [rbx]
  01469:    	lea    rdi,[rsp-0x18]
  0146e:    	mov    QWORD PTR [rdi],rax
  01471:    	mov    QWORD PTR [rbx],rdi
  01474: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0147d:    	mov    QWORD PTR [rsp-0x38],rcx
  01482:    	mov    rax,QWORD PTR [rbp-0x50]
  01486:    	mov    QWORD PTR [rsp-0x38],rax
  0148b: 00 	mov    rdi,0x1
  01492:    	mov    rax,QWORD PTR [rbp-0x58]
  01496:    	mov    QWORD PTR [rsp-0x40],rax
  0149b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014a4: 09 	movabs rax,0x900000040
  014ae:    	mov    QWORD PTR [rsp-0x28],rax
  014b3: 31 	movabs r13,0x563184c82c10
  014bd:    	call   0xfffe2edd
  014c2:    	lea    rdi,[rbp-0x8]
  014c6:    	mov    QWORD PTR [rbx],rdi
  014c9:    	movq   xmm3,QWORD PTR [rsp]
  014ce:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014d4:    	add    rsp,0x10
  014d8: 31 	movabs r13,0x563184c9e6c0
  014e2:    	test   rax,rax
  014e5:    	je     0xfffd68eb
  014eb:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  014ef:    	sub    rsp,0x10
  014f3:    	movq   QWORD PTR [rsp],xmm3
  014f8:    	movq   QWORD PTR [rsp+0x8],xmm4
  014fe:    	mov    rdx,QWORD PTR [rbp-0x30]
  01502:    	mov    rcx,QWORD PTR [rbp-0x40]
  01506:    	mov    r8,QWORD PTR [rbp-0x48]
  0150a:    	mov    rdi,rbx
  0150d:    	mov    rsi,r12
  01510: 31 	movabs rax,0x5631840b8360
  0151a:    	call   rax
  0151c:    	movq   xmm3,QWORD PTR [rsp]
  01521:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01527:    	add    rsp,0x10
  0152b: 31 	movabs r13,0x563184c9e6e0
  01535:    	test   rax,rax
  01538:    	je     0xfffd68eb
:00112 %3 = 1: i32
  0153e: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01546: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  0154e:    	sub    rsp,0x10
  01552:    	movq   QWORD PTR [rsp],xmm3
  01557:    	movq   QWORD PTR [rsp+0x8],xmm4
  0155d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01561:    	mov    rcx,QWORD PTR [rbp-0x50]
  01565:    	mov    rdi,rbx
  01568:    	mov    rsi,r12
  0156b: 31 	movabs r8,0x563184c9e708
  01575: 31 	movabs rax,0x5631840b8230
  0157f:    	call   rax
  01581:    	movq   xmm3,QWORD PTR [rsp]
  01586:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0158c:    	add    rsp,0x10
  01590: 31 	movabs r13,0x563184c9e710
  0159a:    	test   rax,rax
  0159d:    	je     0xfffd68eb
  015a3:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  015a7:    	mov    rdi,QWORD PTR [rbp-0x50]
  015ab: 00 	test   rdi,0x7
  015b2:    	jne    0x2f815
  015b8:    	cmp    DWORD PTR [rdi+0x4],0x28
  015bc:    	jne    0x2f815
  015c2: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7e00],0x26        # 0xfffd93c9
  015c9:    	jne    0x2f815
  015cf:    	sub    rsp,0x10
  015d3:    	movq   QWORD PTR [rsp],xmm3
  015d8:    	movq   QWORD PTR [rsp+0x8],xmm4
  015de:    	mov    rax,QWORD PTR [rbx]
  015e1:    	lea    rdi,[rsp-0x18]
  015e6:    	mov    QWORD PTR [rdi],rax
  015e9:    	mov    QWORD PTR [rbx],rdi
  015ec: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015f5:    	mov    QWORD PTR [rsp-0x38],rcx
  015fa:    	mov    rax,QWORD PTR [rbp-0x50]
  015fe:    	mov    QWORD PTR [rsp-0x38],rax
  01603: 00 	mov    rdi,0x0
  0160a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01613: 07 	movabs rax,0x1000700000043
  0161d:    	mov    QWORD PTR [rsp-0x28],rax
  01622: 31 	movabs r13,0x563184c828e0
  0162c:    	call   0xfffd9cc0
  01631:    	lea    rdi,[rbp-0x8]
  01635:    	mov    QWORD PTR [rbx],rdi
  01638:    	movq   xmm3,QWORD PTR [rsp]
  0163d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01643:    	add    rsp,0x10
  01647: 31 	movabs r13,0x563184c9e730
  01651:    	test   rax,rax
  01654:    	je     0xfffd68eb
  0165a:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  0165e:    	sub    rsp,0x10
  01662:    	movq   QWORD PTR [rsp],xmm3
  01667:    	movq   QWORD PTR [rsp+0x8],xmm4
  0166d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01671:    	mov    rcx,QWORD PTR [rbp-0x40]
  01675:    	mov    r8,QWORD PTR [rbp-0x48]
  01679:    	mov    rdi,rbx
  0167c:    	mov    rsi,r12
  0167f: 31 	movabs rax,0x5631840b8360
  01689:    	call   rax
  0168b:    	movq   xmm3,QWORD PTR [rsp]
  01690:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01696:    	add    rsp,0x10
  0169a: 31 	movabs r13,0x563184c9e750
  016a4:    	test   rax,rax
  016a7:    	je     0xfffd68eb
:00119 %3 = %4
  016ad:    	mov    rax,QWORD PTR [rbp-0x48]
  016b1:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  016b5:    	mov    rax,QWORD PTR [rbp-0x40]
  016b9:    	leave  
  016ba:    	ret    
:00087 %3 = 0: i32
  016bb: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  016c3: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  016cb:    	sub    rsp,0x20
  016cf:    	movq   QWORD PTR [rsp],xmm2
  016d4:    	movq   QWORD PTR [rsp+0x8],xmm3
  016da:    	movq   QWORD PTR [rsp+0x10],xmm4
  016e0:    	movq   QWORD PTR [rsp+0x18],xmm5
  016e6:    	mov    rdx,QWORD PTR [rbp-0x30]
  016ea:    	mov    rcx,QWORD PTR [rbp-0x50]
  016ee:    	mov    rdi,rbx
  016f1:    	mov    rsi,r12
  016f4: 31 	movabs r8,0x563184c9e578
  016fe: 31 	movabs rax,0x5631840b8230
  01708:    	call   rax
  0170a:    	movq   xmm2,QWORD PTR [rsp]
  0170f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01715:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0171b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01721:    	add    rsp,0x20
  01725: 31 	movabs r13,0x563184c9e580
  0172f:    	test   rax,rax
  01732:    	je     0xfffd68eb
  01738:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  0173c: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  01744:    	sub    rsp,0x20
  01748:    	movq   QWORD PTR [rsp],xmm3
  0174d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01753:    	movq   QWORD PTR [rsp+0x10],xmm5
  01759:    	mov    rdx,QWORD PTR [rbp-0x30]
  0175d:    	mov    rcx,QWORD PTR [rbp-0x58]
  01761:    	mov    rdi,rbx
  01764:    	mov    rsi,r12
  01767: 31 	movabs r8,0x563184c9e598
  01771: 31 	movabs rax,0x5631840b8230
  0177b:    	call   rax
  0177d:    	movq   xmm3,QWORD PTR [rsp]
  01782:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01788:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0178e:    	add    rsp,0x20
  01792: 31 	movabs r13,0x563184c9e5a0
  0179c:    	test   rax,rax
  0179f:    	je     0xfffd68eb
  017a5:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  017a9:    	mov    rdi,QWORD PTR [rbp-0x50]
  017ad: 00 	test   rdi,0x7
  017b4:    	jne    0x2f86f
  017ba:    	cmp    DWORD PTR [rdi+0x4],0x28
  017be:    	jne    0x2f86f
  017c4: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7bfe],0x26        # 0xfffd93c9
  017cb:    	jne    0x2f86f
  017d1:    	sub    rsp,0x10
  017d5:    	movq   QWORD PTR [rsp],xmm3
  017da:    	movq   QWORD PTR [rsp+0x8],xmm4
  017e0:    	mov    rax,QWORD PTR [rbx]
  017e3:    	lea    rdi,[rsp-0x18]
  017e8:    	mov    QWORD PTR [rdi],rax
  017eb:    	mov    QWORD PTR [rbx],rdi
  017ee: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017f7:    	mov    QWORD PTR [rsp-0x38],rcx
  017fc:    	mov    rax,QWORD PTR [rbp-0x50]
  01800:    	mov    QWORD PTR [rsp-0x38],rax
  01805: 00 	mov    rdi,0x1
  0180c:    	mov    rax,QWORD PTR [rbp-0x58]
  01810:    	mov    QWORD PTR [rsp-0x40],rax
  01815: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0181e: 09 	movabs rax,0x900000040
  01828:    	mov    QWORD PTR [rsp-0x28],rax
  0182d: 31 	movabs r13,0x563184c82c10
  01837:    	call   0xfffe2edd
  0183c:    	lea    rdi,[rbp-0x8]
  01840:    	mov    QWORD PTR [rbx],rdi
  01843:    	movq   xmm3,QWORD PTR [rsp]
  01848:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0184e:    	add    rsp,0x10
  01852: 31 	movabs r13,0x563184c9e5c0
  0185c:    	test   rax,rax
  0185f:    	je     0xfffd68eb
  01865:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  01869:    	sub    rsp,0x10
  0186d:    	movq   QWORD PTR [rsp],xmm3
  01872:    	movq   QWORD PTR [rsp+0x8],xmm4
  01878:    	mov    rdx,QWORD PTR [rbp-0x30]
  0187c:    	mov    rcx,QWORD PTR [rbp-0x40]
  01880:    	mov    r8,QWORD PTR [rbp-0x48]
  01884:    	mov    rdi,rbx
  01887:    	mov    rsi,r12
  0188a: 31 	movabs rax,0x5631840b8360
  01894:    	call   rax
  01896:    	movq   xmm3,QWORD PTR [rsp]
  0189b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018a1:    	add    rsp,0x10
  018a5: 31 	movabs r13,0x563184c9e5e0
  018af:    	test   rax,rax
  018b2:    	je     0xfffd68eb
:00096 %3 = 0: i32
  018b8: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  018c0: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  018c8:    	sub    rsp,0x10
  018cc:    	movq   QWORD PTR [rsp],xmm3
  018d1:    	movq   QWORD PTR [rsp+0x8],xmm4
  018d7:    	mov    rdx,QWORD PTR [rbp-0x30]
  018db:    	mov    rcx,QWORD PTR [rbp-0x50]
  018df:    	mov    rdi,rbx
  018e2:    	mov    rsi,r12
  018e5: 31 	movabs r8,0x563184c9e608
  018ef: 31 	movabs rax,0x5631840b8230
  018f9:    	call   rax
  018fb:    	movq   xmm3,QWORD PTR [rsp]
  01900:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01906:    	add    rsp,0x10
  0190a: 31 	movabs r13,0x563184c9e610
  01914:    	test   rax,rax
  01917:    	je     0xfffd68eb
  0191d:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  01921:    	mov    rdi,QWORD PTR [rbp-0x50]
  01925: 00 	test   rdi,0x7
  0192c:    	jne    0x2f87e
  01932:    	cmp    DWORD PTR [rdi+0x4],0x28
  01936:    	jne    0x2f87e
  0193c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7a86],0x26        # 0xfffd93c9
  01943:    	jne    0x2f87e
  01949:    	sub    rsp,0x10
  0194d:    	movq   QWORD PTR [rsp],xmm3
  01952:    	movq   QWORD PTR [rsp+0x8],xmm4
  01958:    	mov    rax,QWORD PTR [rbx]
  0195b:    	lea    rdi,[rsp-0x18]
  01960:    	mov    QWORD PTR [rdi],rax
  01963:    	mov    QWORD PTR [rbx],rdi
  01966: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0196f:    	mov    QWORD PTR [rsp-0x38],rcx
  01974:    	mov    rax,QWORD PTR [rbp-0x50]
  01978:    	mov    QWORD PTR [rsp-0x38],rax
  0197d: 00 	mov    rdi,0x0
  01984: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0198d: 07 	movabs rax,0x1000700000043
  01997:    	mov    QWORD PTR [rsp-0x28],rax
  0199c: 31 	movabs r13,0x563184c828e0
  019a6:    	call   0xfffd9cc0
  019ab:    	lea    rdi,[rbp-0x8]
  019af:    	mov    QWORD PTR [rbx],rdi
  019b2:    	movq   xmm3,QWORD PTR [rsp]
  019b7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019bd:    	add    rsp,0x10
  019c1: 31 	movabs r13,0x563184c9e630
  019cb:    	test   rax,rax
  019ce:    	je     0xfffd68eb
  019d4:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  019d8:    	sub    rsp,0x10
  019dc:    	movq   QWORD PTR [rsp],xmm3
  019e1:    	movq   QWORD PTR [rsp+0x8],xmm4
  019e7:    	mov    rdx,QWORD PTR [rbp-0x30]
  019eb:    	mov    rcx,QWORD PTR [rbp-0x40]
  019ef:    	mov    r8,QWORD PTR [rbp-0x48]
  019f3:    	mov    rdi,rbx
  019f6:    	mov    rsi,r12
  019f9: 31 	movabs rax,0x5631840b8360
  01a03:    	call   rax
  01a05:    	movq   xmm3,QWORD PTR [rsp]
  01a0a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a10:    	add    rsp,0x10
  01a14: 31 	movabs r13,0x563184c9e650
  01a1e:    	test   rax,rax
  01a21:    	je     0xfffd68eb
:00103 %3 = 1: i32
  01a27: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  01a2f: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01a37:    	sub    rsp,0x10
  01a3b:    	movq   QWORD PTR [rsp],xmm3
  01a40:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a46:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a4a:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a4e:    	mov    rdi,rbx
  01a51:    	mov    rsi,r12
  01a54: 31 	movabs r8,0x563184c9e678
  01a5e: 31 	movabs rax,0x5631840b8230
  01a68:    	call   rax
  01a6a:    	movq   xmm3,QWORD PTR [rsp]
  01a6f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a75:    	add    rsp,0x10
  01a79: 31 	movabs r13,0x563184c9e680
  01a83:    	test   rax,rax
  01a86:    	je     0xfffd68eb
  01a8c:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  01a90: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  01a98:    	sub    rsp,0x10
  01a9c:    	movq   QWORD PTR [rsp],xmm3
  01aa1:    	movq   QWORD PTR [rsp+0x8],xmm4
  01aa7:    	mov    rdx,QWORD PTR [rbp-0x30]
  01aab:    	mov    rcx,QWORD PTR [rbp-0x58]
  01aaf:    	mov    rdi,rbx
  01ab2:    	mov    rsi,r12
  01ab5: 31 	movabs r8,0x563184c9e698
  01abf: 31 	movabs rax,0x5631840b8230
  01ac9:    	call   rax
  01acb:    	movq   xmm3,QWORD PTR [rsp]
  01ad0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ad6:    	add    rsp,0x10
  01ada: 31 	movabs r13,0x563184c9e6a0
  01ae4:    	test   rax,rax
  01ae7:    	je     0xfffd68eb
  01aed:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  01af1:    	mov    rdi,QWORD PTR [rbp-0x50]
  01af5: 00 	test   rdi,0x7
  01afc:    	jne    0x2f88d
  01b02:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b06:    	jne    0x2f88d
  01b0c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd78b6],0x26        # 0xfffd93c9
  01b13:    	jne    0x2f88d
  01b19:    	sub    rsp,0x10
  01b1d:    	movq   QWORD PTR [rsp],xmm3
  01b22:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b28:    	mov    rax,QWORD PTR [rbx]
  01b2b:    	lea    rdi,[rsp-0x18]
  01b30:    	mov    QWORD PTR [rdi],rax
  01b33:    	mov    QWORD PTR [rbx],rdi
  01b36: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b3f:    	mov    QWORD PTR [rsp-0x38],rcx
  01b44:    	mov    rax,QWORD PTR [rbp-0x50]
  01b48:    	mov    QWORD PTR [rsp-0x38],rax
  01b4d: 00 	mov    rdi,0x1
  01b54:    	mov    rax,QWORD PTR [rbp-0x58]
  01b58:    	mov    QWORD PTR [rsp-0x40],rax
  01b5d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b66: 09 	movabs rax,0x900000040
  01b70:    	mov    QWORD PTR [rsp-0x28],rax
  01b75: 31 	movabs r13,0x563184c82c10
  01b7f:    	call   0xfffe2edd
  01b84:    	lea    rdi,[rbp-0x8]
  01b88:    	mov    QWORD PTR [rbx],rdi
  01b8b:    	movq   xmm3,QWORD PTR [rsp]
  01b90:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b96:    	add    rsp,0x10
  01b9a: 31 	movabs r13,0x563184c9e6c0
  01ba4:    	test   rax,rax
  01ba7:    	je     0xfffd68eb
  01bad:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  01bb1:    	sub    rsp,0x10
  01bb5:    	movq   QWORD PTR [rsp],xmm3
  01bba:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bc0:    	mov    rdx,QWORD PTR [rbp-0x30]
  01bc4:    	mov    rcx,QWORD PTR [rbp-0x40]
  01bc8:    	mov    r8,QWORD PTR [rbp-0x48]
  01bcc:    	mov    rdi,rbx
  01bcf:    	mov    rsi,r12
  01bd2: 31 	movabs rax,0x5631840b8360
  01bdc:    	call   rax
  01bde:    	movq   xmm3,QWORD PTR [rsp]
  01be3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01be9:    	add    rsp,0x10
  01bed: 31 	movabs r13,0x563184c9e6e0
  01bf7:    	test   rax,rax
  01bfa:    	je     0xfffd68eb
:00112 %3 = 1: i32
  01c00: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01c08: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  01c10:    	sub    rsp,0x10
  01c14:    	movq   QWORD PTR [rsp],xmm3
  01c19:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c1f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c23:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c27:    	mov    rdi,rbx
  01c2a:    	mov    rsi,r12
  01c2d: 31 	movabs r8,0x563184c9e708
  01c37: 31 	movabs rax,0x5631840b8230
  01c41:    	call   rax
  01c43:    	movq   xmm3,QWORD PTR [rsp]
  01c48:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c4e:    	add    rsp,0x10
  01c52: 31 	movabs r13,0x563184c9e710
  01c5c:    	test   rax,rax
  01c5f:    	je     0xfffd68eb
  01c65:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01c69:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c6d: 00 	test   rdi,0x7
  01c74:    	jne    0x2f89c
  01c7a:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c7e:    	jne    0x2f89c
  01c84: 26 	cmp    DWORD PTR [rip+0xfffffffffffd773e],0x26        # 0xfffd93c9
  01c8b:    	jne    0x2f89c
  01c91:    	sub    rsp,0x10
  01c95:    	movq   QWORD PTR [rsp],xmm3
  01c9a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ca0:    	mov    rax,QWORD PTR [rbx]
  01ca3:    	lea    rdi,[rsp-0x18]
  01ca8:    	mov    QWORD PTR [rdi],rax
  01cab:    	mov    QWORD PTR [rbx],rdi
  01cae: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01cb7:    	mov    QWORD PTR [rsp-0x38],rcx
  01cbc:    	mov    rax,QWORD PTR [rbp-0x50]
  01cc0:    	mov    QWORD PTR [rsp-0x38],rax
  01cc5: 00 	mov    rdi,0x0
  01ccc: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01cd5: 07 	movabs rax,0x1000700000043
  01cdf:    	mov    QWORD PTR [rsp-0x28],rax
  01ce4: 31 	movabs r13,0x563184c828e0
  01cee:    	call   0xfffd9cc0
  01cf3:    	lea    rdi,[rbp-0x8]
  01cf7:    	mov    QWORD PTR [rbx],rdi
  01cfa:    	movq   xmm3,QWORD PTR [rsp]
  01cff:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d05:    	add    rsp,0x10
  01d09: 31 	movabs r13,0x563184c9e730
  01d13:    	test   rax,rax
  01d16:    	je     0xfffd68eb
  01d1c:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  01d20:    	sub    rsp,0x10
  01d24:    	movq   QWORD PTR [rsp],xmm3
  01d29:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d2f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d33:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d37:    	mov    r8,QWORD PTR [rbp-0x48]
  01d3b:    	mov    rdi,rbx
  01d3e:    	mov    rsi,r12
  01d41: 31 	movabs rax,0x5631840b8360
  01d4b:    	call   rax
  01d4d:    	movq   xmm3,QWORD PTR [rsp]
  01d52:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d58:    	add    rsp,0x10
  01d5c: 31 	movabs r13,0x563184c9e750
  01d66:    	test   rax,rax
  01d69:    	je     0xfffd68eb
:00119 %3 = %4
  01d6f:    	mov    rax,QWORD PTR [rbp-0x48]
  01d73:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01d77:    	mov    rax,QWORD PTR [rbp-0x40]
  01d7b:    	leave  
  01d7c:    	ret    
==> start whole compile: otherBasis FuncId(59) self_class:Scene start:[00000] bytecode:0x563184c9dfe0
<== finished compile. elapsed:126.9µs
offset:Pos(177732) code: 7514 bytes  data: 342 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x2d9b7
  00038:    	cmp    DWORD PTR [rdi+0x4],0x32
  0003c:    	jne    0x2d9b7
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd748b]        # 0xfffd74dc
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1d14]        # 0x1d6c
  00058:    	jne    0x2d9c6
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1cf7]        # 0x1d5c
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2da0c
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0007e:    	jne    0x2da0c
  00084: 26 	cmp    DWORD PTR [rip+0xfffffffffffd744a],0x26        # 0xfffd74d5
  0008b:    	jne    0x2da0c
  00091:    	mov    esi,DWORD PTR [rip+0x1ce1]        # 0x1d78
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x2da1b
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 31 	movabs rax,0x563184053740
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00003 
:00005 %7 = %2.call y()                     [Vec]
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x2da44
  000df:    	cmp    DWORD PTR [rdi+0x4],0x28
  000e3:    	jne    0x2da44
  000e9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd73e5],0x26        # 0xfffd74d5
  000f0:    	jne    0x2da44
  000f6:    	mov    esi,DWORD PTR [rip+0x1c84]        # 0x1d80
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x2da53
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 31 	movabs rax,0x563184053740
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00006 
:00008 %8 = %2.call z()                     [Vec]
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x2da7c
  00144:    	cmp    DWORD PTR [rdi+0x4],0x28
  00148:    	jne    0x2da7c
  0014e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7380],0x26        # 0xfffd74d5
  00155:    	jne    0x2da7c
  0015b:    	mov    esi,DWORD PTR [rip+0x1c27]        # 0x1d88
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x2da8b
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 31 	movabs rax,0x563184053740
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00009 
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x2dab4
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ad:    	jne    0x2dab4
  001b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd731b],0x26        # 0xfffd74d5
  001ba:    	jne    0x2dab4
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x2dac3
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 31 	movabs r13,0x563184c9e0b0
  00207:    	test   rax,rax
  0020a:    	je     0xfffd49f7
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %1:.[%3:] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 31 	movabs rax,0x5631840b8360
  00230:    	call   rax
  00232: 31 	movabs r13,0x563184c9e0d0
  0023c:    	test   rax,rax
  0023f:    	je     0xfffd49f7
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd7288]        # 0xfffd74dc
  00254: 00 	cmp    rax,QWORD PTR [rip+0x1b41]        # 0x1d9c
  0025b:    	jne    0x2daf5
  00261: 00 	mov    rax,QWORD PTR [rip+0x1b24]        # 0x1d8c
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x1b38]        # 0x1dac
  00274: 00 	movabs rax,0x8000000000000002
  0027e:    	mov    QWORD PTR [rbp-0x58],rax
:00018 %7 = literal[0.0]
  00282: 00 	movq   xmm3,QWORD PTR [rip+0x1b32]        # 0x1dbc
  0028a: 00 	movabs rax,0x8000000000000002
  00294:    	mov    QWORD PTR [rbp-0x60],rax
:00019 %8 = literal[0.0]
  00298: 00 	movq   xmm4,QWORD PTR [rip+0x1b2c]        # 0x1dcc
  002a0: 00 	movabs rax,0x8000000000000002
  002aa:    	mov    QWORD PTR [rbp-0x68],rax
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002ae:    	mov    rdi,QWORD PTR [rbp-0x50]
  002b2: 00 	test   rdi,0x7
  002b9:    	jne    0x2db3b
  002bf:    	cmp    DWORD PTR [rdi+0x4],0x29
  002c3:    	jne    0x2db3b
  002c9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7205],0x26        # 0xfffd74d5
  002d0:    	jne    0x2db3b
  002d6: 00 	mov    r9,0x0
  002dd:    	sub    rsp,0x20
  002e1:    	movq   QWORD PTR [rsp],xmm2
  002e6:    	movq   QWORD PTR [rsp+0x8],xmm3
  002ec:    	movq   QWORD PTR [rsp+0x10],xmm4
  002f2:    	mov    rdx,rdi
  002f5:    	mov    rax,QWORD PTR [rbx]
  002f8:    	lea    rdi,[rsp-0x18]
  002fd:    	mov    QWORD PTR [rdi],rax
  00300:    	mov    QWORD PTR [rbx],rdi
  00303: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0030c:    	mov    QWORD PTR [rsp-0x38],rcx
  00311:    	lea    rcx,[rbp-0x58]
  00315: 00 	mov    r8,0x3
  0031c:    	call   0x2db4a
  00321:    	lea    rdi,[rbp-0x8]
  00325:    	mov    QWORD PTR [rbx],rdi
  00328:    	movq   xmm2,QWORD PTR [rsp]
  0032d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00333:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00339:    	add    rsp,0x20
  0033d: 31 	movabs r13,0x563184c9e140
  00347:    	test   rax,rax
  0034a:    	je     0xfffd49f7
  00350:    	mov    QWORD PTR [rbp-0x48],rax
:00021 
:00023 %1:.[%3:] = %4
  00354:    	sub    rsp,0x20
  00358:    	movq   QWORD PTR [rsp],xmm2
  0035d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00363:    	movq   QWORD PTR [rsp+0x10],xmm4
  00369:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00371:    	mov    r8,QWORD PTR [rbp-0x48]
  00375:    	mov    rdi,rbx
  00378:    	mov    rsi,r12
  0037b: 31 	movabs rax,0x5631840b8360
  00385:    	call   rax
  00387:    	movq   xmm2,QWORD PTR [rsp]
  0038c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00392:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00398:    	add    rsp,0x20
  0039c: 31 	movabs r13,0x563184c9e160
  003a6:    	test   rax,rax
  003a9:    	je     0xfffd49f7
:00024 %3 = %2.call x()                     [Vec]
  003af:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b3: 00 	test   rdi,0x7
  003ba:    	jne    0x2db7c
  003c0:    	cmp    DWORD PTR [rdi+0x4],0x28
  003c4:    	jne    0x2db7c
  003ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7104],0x26        # 0xfffd74d5
  003d1:    	jne    0x2db7c
  003d7:    	mov    esi,DWORD PTR [rip+0x19fb]        # 0x1dd8
  003dd:    	cmp    esi,0xffffffff
  003e0:    	je     0x2db8b
  003e6:    	cmp    WORD PTR [rdi+0x2],0x3
  003eb:    	jne    0x404
  003f1:    	cmp    esi,0x6
  003f4:    	jge    0x404
  003fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003ff:    	jmp    0x43a
  00404:    	sub    rsp,0x20
  00408:    	movq   QWORD PTR [rsp],xmm2
  0040d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00413:    	movq   QWORD PTR [rsp+0x10],xmm4
  00419: 31 	movabs rax,0x563184053740
  00423:    	call   rax
  00425:    	movq   xmm2,QWORD PTR [rsp]
  0042a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00430:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00436:    	add    rsp,0x20
  0043a:    	mov    QWORD PTR [rbp-0x40],rax
:00025 
:00027 %4 = literal[0.6]
  0043e: 00 	movq   xmm5,QWORD PTR [rip+0x1996]        # 0x1ddc
  00446: 99 	movabs rax,0xff1999999999999a
  00450:    	mov    QWORD PTR [rbp-0x48],rax
:00028 _%3 = %3 < %4                        [Float][Float]
:00029 condnotbr _%3 =>:00043
  00454:    	mov    rdi,QWORD PTR [rbp-0x40]
  00458: 00 	test   rdi,0x1
  0045f:    	jne    0x2dbde
  00465: 00 	test   rdi,0x2
  0046c:    	je     0x4a8
  00472:    	xorps  xmm6,xmm6
  00475: 00 	movabs rax,0x8000000000000002
  0047f:    	cmp    rdi,rax
  00482:    	je     0x4ba
  00488:    	mov    rax,rdi
  0048b:    	sar    rax,0x3f
  0048f:    	add    rax,0x2
  00493:    	and    rdi,0xfffffffffffffffc
  00497:    	or     rdi,rax
  0049a:    	rol    rdi,0x3d
  0049e:    	movq   xmm6,rdi
  004a3:    	jmp    0x4ba
  004a8:    	call   0xfffd4a30
  004ad:    	test   rax,rax
  004b0:    	je     0x2dbde
  004b6:    	movq   xmm6,xmm0
  004ba:    	ucomisd xmm6,xmm5
  004be:    	jae    0x2dcdf
:00030 %3 = %2.call x()                     [Vec]
  004c4:    	mov    rdi,QWORD PTR [rbp-0x38]
  004c8: 00 	test   rdi,0x7
  004cf:    	jne    0x2dbed
  004d5:    	cmp    DWORD PTR [rdi+0x4],0x28
  004d9:    	jne    0x2dbed
  004df: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6fef],0x26        # 0xfffd74d5
  004e6:    	jne    0x2dbed
  004ec:    	mov    esi,DWORD PTR [rip+0x18f6]        # 0x1de8
  004f2:    	cmp    esi,0xffffffff
  004f5:    	je     0x2dbfc
  004fb:    	cmp    WORD PTR [rdi+0x2],0x3
  00500:    	jne    0x519
  00506:    	cmp    esi,0x6
  00509:    	jge    0x519
  0050f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00514:    	jmp    0x55b
  00519:    	sub    rsp,0x20
  0051d:    	movq   QWORD PTR [rsp],xmm2
  00522:    	movq   QWORD PTR [rsp+0x8],xmm3
  00528:    	movq   QWORD PTR [rsp+0x10],xmm4
  0052e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00534: 31 	movabs rax,0x563184053740
  0053e:    	call   rax
  00540:    	movq   xmm2,QWORD PTR [rsp]
  00545:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0054b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00551:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00557:    	add    rsp,0x20
  0055b:    	mov    QWORD PTR [rbp-0x40],rax
:00031 
:00033 %4 = literal[-0.6]
  0055f: 00 	movq   xmm5,QWORD PTR [rip+0x1885]        # 0x1dec
  00567: 99 	movabs rax,0xff1999999999999e
  00571:    	mov    QWORD PTR [rbp-0x48],rax
:00034 _%3 = %3 > %4                        [Float][Float]
:00035 condnotbr _%3 =>:00043
  00575:    	mov    rdi,QWORD PTR [rbp-0x40]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x2dc5b
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffd4a30
  005ce:    	test   rax,rax
  005d1:    	je     0x2dc5b
  005d7:    	movq   xmm6,xmm0
  005db:    	ucomisd xmm6,xmm5
  005df:    	jbe    0x2dcf8
:00036 %3 = 1: i32
  005e5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]                         [Array][Integer]
  005ed:    	sub    rsp,0x20
  005f1:    	movq   QWORD PTR [rsp],xmm2
  005f6:    	movq   QWORD PTR [rsp+0x8],xmm3
  005fc:    	movq   QWORD PTR [rsp+0x10],xmm4
  00602:    	movq   QWORD PTR [rsp+0x18],xmm5
  00608:    	mov    rdx,QWORD PTR [rbp-0x30]
  0060c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00610:    	mov    rdi,rbx
  00613:    	mov    rsi,r12
  00616: 31 	movabs r8,0x563184c9e238
  00620: 31 	movabs rax,0x5631840b8230
  0062a:    	call   rax
  0062c:    	movq   xmm2,QWORD PTR [rsp]
  00631:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00637:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0063d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00643:    	add    rsp,0x20
  00647: 31 	movabs r13,0x563184c9e240
  00651:    	test   rax,rax
  00654:    	je     0xfffd49f7
  0065a:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  0065e: 00 	movq   xmm5,QWORD PTR [rip+0x1796]        # 0x1dfc
  00666: 00 	movabs rax,0xff80000000000002
  00670:    	mov    QWORD PTR [rbp-0x48],rax
:00039 _ = %3.call x=(%4; 1)                [Vec]
  00674:    	mov    rdi,QWORD PTR [rbp-0x40]
  00678: 00 	test   rdi,0x7
  0067f:    	jne    0x2dc6a
  00685:    	cmp    DWORD PTR [rdi+0x4],0x28
  00689:    	jne    0x2dc6a
  0068f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6e3f],0x26        # 0xfffd74d5
  00696:    	jne    0x2dc6a
  0069c:    	mov    esi,DWORD PTR [rip+0x1766]        # 0x1e08
  006a2:    	cmp    esi,0xffffffff
  006a5:    	je     0x2dc79
  006ab:    	cmp    WORD PTR [rdi+0x2],0x3
  006b0:    	jne    0x6cd
  006b6:    	cmp    esi,0x6
  006b9:    	jge    0x6cd
  006bf:    	mov    rax,QWORD PTR [rbp-0x48]
  006c3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006c8:    	jmp    0x726
  006cd:    	sub    rsp,0x20
  006d1:    	movq   QWORD PTR [rsp],xmm2
  006d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  006dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  006e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  006e8:    	mov    rdx,QWORD PTR [rbp-0x48]
  006ec: 31 	movabs rax,0x5631840539e0
  006f6:    	call   rax
  006f8:    	movq   xmm2,QWORD PTR [rsp]
  006fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00703:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00709:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0070f:    	add    rsp,0x20
  00713: 31 	movabs r13,0x563184c9e270
  0071d:    	test   rax,rax
  00720:    	je     0xfffd49f7
:00040 
:00042 br =>:00087
  00726:    	jmp    0x2e1f6
:00043 %3 = %2.call y()                     [Vec]
  0072b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0072f: 00 	test   rdi,0x7
  00736:    	jne    0x2dd11
  0073c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00740:    	jne    0x2dd11
  00746: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6d88],0x26        # 0xfffd74d5
  0074d:    	jne    0x2dd11
  00753:    	mov    esi,DWORD PTR [rip+0x16b7]        # 0x1e10
  00759:    	cmp    esi,0xffffffff
  0075c:    	je     0x2dd20
  00762:    	cmp    WORD PTR [rdi+0x2],0x3
  00767:    	jne    0x780
  0076d:    	cmp    esi,0x6
  00770:    	jge    0x780
  00776:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0077b:    	jmp    0x7c2
  00780:    	sub    rsp,0x20
  00784:    	movq   QWORD PTR [rsp],xmm2
  00789:    	movq   QWORD PTR [rsp+0x8],xmm3
  0078f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00795:    	movq   QWORD PTR [rsp+0x18],xmm5
  0079b: 31 	movabs rax,0x563184053740
  007a5:    	call   rax
  007a7:    	movq   xmm2,QWORD PTR [rsp]
  007ac:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007b2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007b8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007be:    	add    rsp,0x20
  007c2:    	mov    QWORD PTR [rbp-0x40],rax
:00044 
:00046 %4 = literal[0.6]
  007c6: 00 	movq   xmm5,QWORD PTR [rip+0x164e]        # 0x1e1c
  007ce: 99 	movabs rax,0xff1999999999999a
  007d8:    	mov    QWORD PTR [rbp-0x48],rax
:00047 _%3 = %3 < %4                        [Float][Float]
:00048 condnotbr _%3 =>:00062
  007dc:    	mov    rdi,QWORD PTR [rbp-0x40]
  007e0: 00 	test   rdi,0x1
  007e7:    	jne    0x2dd7f
  007ed: 00 	test   rdi,0x2
  007f4:    	je     0x830
  007fa:    	xorps  xmm6,xmm6
  007fd: 00 	movabs rax,0x8000000000000002
  00807:    	cmp    rdi,rax
  0080a:    	je     0x842
  00810:    	mov    rax,rdi
  00813:    	sar    rax,0x3f
  00817:    	add    rax,0x2
  0081b:    	and    rdi,0xfffffffffffffffc
  0081f:    	or     rdi,rax
  00822:    	rol    rdi,0x3d
  00826:    	movq   xmm6,rdi
  0082b:    	jmp    0x842
  00830:    	call   0xfffd4a30
  00835:    	test   rax,rax
  00838:    	je     0x2dd7f
  0083e:    	movq   xmm6,xmm0
  00842:    	ucomisd xmm6,xmm5
  00846:    	jae    0x2df3b
:00049 %3 = %2.call y()                     [<INVALID>]
  0084c: 01 	sub    DWORD PTR [rip+0x15d1],0x1        # 0x1e24
  00853:    	je     0x2dd9d
  00859:    	sub    rsp,0x20
  0085d:    	movq   QWORD PTR [rsp],xmm2
  00862:    	movq   QWORD PTR [rsp+0x8],xmm3
  00868:    	movq   QWORD PTR [rsp+0x10],xmm4
  0086e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00874:    	mov    rdi,QWORD PTR [rbp-0x38]
  00878: 31 	movabs rax,0x5631840958d0
  00882:    	call   rax
  00884:    	mov    r15d,eax
  00887: 00 	cmp    r15d,DWORD PTR [rip+0x159e]        # 0x1e2c
  0088e:    	jne    0x2ddbf
  00894:    	mov    eax,DWORD PTR [rip+0xfffffffffffd6c3b]        # 0xfffd74d5
  0089a:    	cmp    DWORD PTR [rip+0x1588],eax        # 0x1e28
  008a0:    	jne    0x2ddbf
  008a6:    	mov    rax,QWORD PTR [rbx]
  008a9:    	lea    rdi,[rsp-0x18]
  008ae:    	mov    QWORD PTR [rdi],rax
  008b1:    	mov    QWORD PTR [rbx],rdi
  008b4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008bd:    	mov    QWORD PTR [rsp-0x38],rcx
  008c2:    	mov    rax,QWORD PTR [rbp-0x38]
  008c6:    	mov    QWORD PTR [rsp-0x38],rax
  008cb: 00 	mov    rdi,0x0
  008d2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008db: 00 	movabs rax,0x0
  008e5:    	mov    QWORD PTR [rsp-0x28],rax
  008ea: 00 	movabs r13,0x0
  008f4:    	call   0xfffd49bc
  008f9:    	lea    rdi,[rbp-0x8]
  008fd:    	mov    QWORD PTR [rbx],rdi
  00900:    	movq   xmm2,QWORD PTR [rsp]
  00905:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0090b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00911:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00917:    	add    rsp,0x20
  0091b:    	test   rax,rax
  0091e:    	je     0x2de2b
  00924:    	mov    QWORD PTR [rbp-0x40],rax
:00050 
:00052 %4 = literal[-0.6]
  00928: 00 	movq   xmm5,QWORD PTR [rip+0x150c]        # 0x1e3c
  00930: 99 	movabs rax,0xff1999999999999e
  0093a:    	mov    QWORD PTR [rbp-0x48],rax
:00053 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00054 condnotbr _%3 =>:00062
  0093e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00942:    	mov    rsi,QWORD PTR [rbp-0x48]
  00946: 00 	test   rdi,0x1
  0094d:    	je     0x2de3a
  00953: 00 	test   rsi,0x1
  0095a:    	je     0x2de3a
  00960:    	cmp    rdi,rsi
  00963:    	jle    0x2df54
:00055 %3 = 1: i32
  00969: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00971:    	sub    rsp,0x20
  00975:    	movq   QWORD PTR [rsp],xmm2
  0097a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00980:    	movq   QWORD PTR [rsp+0x10],xmm4
  00986:    	movq   QWORD PTR [rsp+0x18],xmm5
  0098c:    	mov    rdx,QWORD PTR [rbp-0x30]
  00990:    	mov    rcx,QWORD PTR [rbp-0x40]
  00994:    	mov    rdi,rbx
  00997:    	mov    rsi,r12
  0099a: 31 	movabs r8,0x563184c9e368
  009a4: 31 	movabs rax,0x5631840b8230
  009ae:    	call   rax
  009b0:    	movq   xmm2,QWORD PTR [rsp]
  009b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009c7:    	add    rsp,0x20
  009cb: 31 	movabs r13,0x563184c9e370
  009d5:    	test   rax,rax
  009d8:    	je     0xfffd49f7
  009de:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  009e2: 00 	movq   xmm5,QWORD PTR [rip+0x1462]        # 0x1e4c
  009ea: 00 	movabs rax,0xff80000000000002
  009f4:    	mov    QWORD PTR [rbp-0x48],rax
:00058 _ = %3.call y=(%4; 1)                [<INVALID>]
  009f8: 01 	sub    DWORD PTR [rip+0x1455],0x1        # 0x1e54
  009ff:    	je     0x2de9e
  00a05:    	sub    rsp,0x20
  00a09:    	movq   QWORD PTR [rsp],xmm2
  00a0e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a14:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a1a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a20:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a24: 31 	movabs rax,0x5631840958d0
  00a2e:    	call   rax
  00a30:    	mov    r15d,eax
  00a33: 00 	cmp    r15d,DWORD PTR [rip+0x1422]        # 0x1e5c
  00a3a:    	jne    0x2dec0
  00a40:    	mov    eax,DWORD PTR [rip+0xfffffffffffd6a8f]        # 0xfffd74d5
  00a46:    	cmp    DWORD PTR [rip+0x140c],eax        # 0x1e58
  00a4c:    	jne    0x2dec0
  00a52:    	mov    rax,QWORD PTR [rbx]
  00a55:    	lea    rdi,[rsp-0x18]
  00a5a:    	mov    QWORD PTR [rdi],rax
  00a5d:    	mov    QWORD PTR [rbx],rdi
  00a60: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a69:    	mov    QWORD PTR [rsp-0x38],rcx
  00a6e:    	mov    rax,QWORD PTR [rbp-0x40]
  00a72:    	mov    QWORD PTR [rsp-0x38],rax
  00a77: 00 	mov    rdi,0x1
  00a7e:    	mov    rax,QWORD PTR [rbp-0x48]
  00a82:    	mov    QWORD PTR [rsp-0x40],rax
  00a87: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a90: 00 	movabs rax,0x0
  00a9a:    	mov    QWORD PTR [rsp-0x28],rax
  00a9f: 00 	movabs r13,0x0
  00aa9:    	call   0xfffd49bc
  00aae:    	lea    rdi,[rbp-0x8]
  00ab2:    	mov    QWORD PTR [rbx],rdi
  00ab5:    	movq   xmm2,QWORD PTR [rsp]
  00aba:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ac0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ac6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00acc:    	add    rsp,0x20
  00ad0:    	test   rax,rax
  00ad3:    	je     0x2df2c
:00059 
:00061 br =>:00087
  00ad9:    	jmp    0x2e20f
:00062 %3 = %2.call z()                     [Vec]
  00ade:    	mov    rdi,QWORD PTR [rbp-0x38]
  00ae2: 00 	test   rdi,0x7
  00ae9:    	jne    0x2df6d
  00aef:    	cmp    DWORD PTR [rdi+0x4],0x28
  00af3:    	jne    0x2df6d
  00af9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd69d5],0x26        # 0xfffd74d5
  00b00:    	jne    0x2df6d
  00b06:    	mov    esi,DWORD PTR [rip+0x1358]        # 0x1e64
  00b0c:    	cmp    esi,0xffffffff
  00b0f:    	je     0x2df7c
  00b15:    	cmp    WORD PTR [rdi+0x2],0x3
  00b1a:    	jne    0xb33
  00b20:    	cmp    esi,0x6
  00b23:    	jge    0xb33
  00b29:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b2e:    	jmp    0xb75
  00b33:    	sub    rsp,0x20
  00b37:    	movq   QWORD PTR [rsp],xmm2
  00b3c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b42:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b48:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b4e: 31 	movabs rax,0x563184053740
  00b58:    	call   rax
  00b5a:    	movq   xmm2,QWORD PTR [rsp]
  00b5f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b65:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b6b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b71:    	add    rsp,0x20
  00b75:    	mov    QWORD PTR [rbp-0x40],rax
:00063 
:00065 %4 = literal[0.6]
  00b79: 00 	movq   xmm5,QWORD PTR [rip+0x12eb]        # 0x1e6c
  00b81: 99 	movabs rax,0xff1999999999999a
  00b8b:    	mov    QWORD PTR [rbp-0x48],rax
:00066 _%3 = %3 < %4                        [Float][Float]
:00067 condnotbr _%3 =>:00081
  00b8f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00b93: 00 	test   rdi,0x1
  00b9a:    	jne    0x2dfdb
  00ba0: 00 	test   rdi,0x2
  00ba7:    	je     0xbe3
  00bad:    	xorps  xmm6,xmm6
  00bb0: 00 	movabs rax,0x8000000000000002
  00bba:    	cmp    rdi,rax
  00bbd:    	je     0xbf5
  00bc3:    	mov    rax,rdi
  00bc6:    	sar    rax,0x3f
  00bca:    	add    rax,0x2
  00bce:    	and    rdi,0xfffffffffffffffc
  00bd2:    	or     rdi,rax
  00bd5:    	rol    rdi,0x3d
  00bd9:    	movq   xmm6,rdi
  00bde:    	jmp    0xbf5
  00be3:    	call   0xfffd4a30
  00be8:    	test   rax,rax
  00beb:    	je     0x2dfdb
  00bf1:    	movq   xmm6,xmm0
  00bf5:    	ucomisd xmm6,xmm5
  00bf9:    	jae    0x2e0dc
:00068 %3 = %2.call z()                     [Vec]
  00bff:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c03: 00 	test   rdi,0x7
  00c0a:    	jne    0x2dfea
  00c10:    	cmp    DWORD PTR [rdi+0x4],0x28
  00c14:    	jne    0x2dfea
  00c1a: 26 	cmp    DWORD PTR [rip+0xfffffffffffd68b4],0x26        # 0xfffd74d5
  00c21:    	jne    0x2dfea
  00c27:    	mov    esi,DWORD PTR [rip+0x124b]        # 0x1e78
  00c2d:    	cmp    esi,0xffffffff
  00c30:    	je     0x2dff9
  00c36:    	cmp    WORD PTR [rdi+0x2],0x3
  00c3b:    	jne    0xc54
  00c41:    	cmp    esi,0x6
  00c44:    	jge    0xc54
  00c4a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c4f:    	jmp    0xc96
  00c54:    	sub    rsp,0x20
  00c58:    	movq   QWORD PTR [rsp],xmm2
  00c5d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c63:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c69:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c6f: 31 	movabs rax,0x563184053740
  00c79:    	call   rax
  00c7b:    	movq   xmm2,QWORD PTR [rsp]
  00c80:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c86:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c8c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c92:    	add    rsp,0x20
  00c96:    	mov    QWORD PTR [rbp-0x40],rax
:00069 
:00071 %4 = literal[-0.6]
  00c9a: 00 	movq   xmm5,QWORD PTR [rip+0x11da]        # 0x1e7c
  00ca2: 99 	movabs rax,0xff1999999999999e
  00cac:    	mov    QWORD PTR [rbp-0x48],rax
:00072 _%3 = %3 > %4                        [Float][Float]
:00073 condnotbr _%3 =>:00081
  00cb0:    	mov    rdi,QWORD PTR [rbp-0x40]
  00cb4: 00 	test   rdi,0x1
  00cbb:    	jne    0x2e058
  00cc1: 00 	test   rdi,0x2
  00cc8:    	je     0xd04
  00cce:    	xorps  xmm6,xmm6
  00cd1: 00 	movabs rax,0x8000000000000002
  00cdb:    	cmp    rdi,rax
  00cde:    	je     0xd16
  00ce4:    	mov    rax,rdi
  00ce7:    	sar    rax,0x3f
  00ceb:    	add    rax,0x2
  00cef:    	and    rdi,0xfffffffffffffffc
  00cf3:    	or     rdi,rax
  00cf6:    	rol    rdi,0x3d
  00cfa:    	movq   xmm6,rdi
  00cff:    	jmp    0xd16
  00d04:    	call   0xfffd4a30
  00d09:    	test   rax,rax
  00d0c:    	je     0x2e058
  00d12:    	movq   xmm6,xmm0
  00d16:    	ucomisd xmm6,xmm5
  00d1a:    	jbe    0x2e0f5
:00074 %3 = 1: i32
  00d20: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]                         [Array][Integer]
  00d28:    	sub    rsp,0x20
  00d2c:    	movq   QWORD PTR [rsp],xmm2
  00d31:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d37:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d3d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d43:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d47:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d4b:    	mov    rdi,rbx
  00d4e:    	mov    rsi,r12
  00d51: 31 	movabs r8,0x563184c9e498
  00d5b: 31 	movabs rax,0x5631840b8230
  00d65:    	call   rax
  00d67:    	movq   xmm2,QWORD PTR [rsp]
  00d6c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d72:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d78:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d7e:    	add    rsp,0x20
  00d82: 31 	movabs r13,0x563184c9e4a0
  00d8c:    	test   rax,rax
  00d8f:    	je     0xfffd49f7
  00d95:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00d99: 00 	movq   xmm5,QWORD PTR [rip+0x10eb]        # 0x1e8c
  00da1: 00 	movabs rax,0xff80000000000002
  00dab:    	mov    QWORD PTR [rbp-0x48],rax
:00077 _ = %3.call z=(%4; 1)                [Vec]
  00daf:    	mov    rdi,QWORD PTR [rbp-0x40]
  00db3: 00 	test   rdi,0x7
  00dba:    	jne    0x2e067
  00dc0:    	cmp    DWORD PTR [rdi+0x4],0x28
  00dc4:    	jne    0x2e067
  00dca: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6704],0x26        # 0xfffd74d5
  00dd1:    	jne    0x2e067
  00dd7:    	mov    esi,DWORD PTR [rip+0x10bb]        # 0x1e98
  00ddd:    	cmp    esi,0xffffffff
  00de0:    	je     0x2e076
  00de6:    	cmp    WORD PTR [rdi+0x2],0x3
  00deb:    	jne    0xe08
  00df1:    	cmp    esi,0x6
  00df4:    	jge    0xe08
  00dfa:    	mov    rax,QWORD PTR [rbp-0x48]
  00dfe:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e03:    	jmp    0xe61
  00e08:    	sub    rsp,0x20
  00e0c:    	movq   QWORD PTR [rsp],xmm2
  00e11:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e17:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e1d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e23:    	mov    rdx,QWORD PTR [rbp-0x48]
  00e27: 31 	movabs rax,0x5631840539e0
  00e31:    	call   rax
  00e33:    	movq   xmm2,QWORD PTR [rsp]
  00e38:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e3e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e44:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e4a:    	add    rsp,0x20
  00e4e: 31 	movabs r13,0x563184c9e4d0
  00e58:    	test   rax,rax
  00e5b:    	je     0xfffd49f7
:00078 
:00080 br =>:00087
  00e61:    	jmp    0x2e228
:00081 %3 = 1: i32
  00e66: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00e6e:    	sub    rsp,0x20
  00e72:    	movq   QWORD PTR [rsp],xmm2
  00e77:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e7d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e83:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e89:    	mov    rdx,QWORD PTR [rbp-0x30]
  00e8d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00e91:    	mov    rdi,rbx
  00e94:    	mov    rsi,r12
  00e97: 31 	movabs r8,0x563184c9e508
  00ea1: 31 	movabs rax,0x5631840b8230
  00eab:    	call   rax
  00ead:    	movq   xmm2,QWORD PTR [rsp]
  00eb2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00eb8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ebe:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ec4:    	add    rsp,0x20
  00ec8: 31 	movabs r13,0x563184c9e510
  00ed2:    	test   rax,rax
  00ed5:    	je     0xfffd49f7
  00edb:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00edf: 00 	movq   xmm5,QWORD PTR [rip+0xfb5]        # 0x1e9c
  00ee7: 00 	movabs rax,0xff80000000000002
  00ef1:    	mov    QWORD PTR [rbp-0x48],rax
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
  00ef5: 01 	sub    DWORD PTR [rip+0xfa8],0x1        # 0x1ea4
  00efc:    	je     0x2e11d
  00f02:    	sub    rsp,0x20
  00f06:    	movq   QWORD PTR [rsp],xmm2
  00f0b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f11:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f17:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f1d:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f21: 31 	movabs rax,0x5631840958d0
  00f2b:    	call   rax
  00f2d:    	mov    r15d,eax
  00f30: 00 	cmp    r15d,DWORD PTR [rip+0xf75]        # 0x1eac
  00f37:    	jne    0x2e13f
  00f3d:    	mov    eax,DWORD PTR [rip+0xfffffffffffd6592]        # 0xfffd74d5
  00f43:    	cmp    DWORD PTR [rip+0xf5f],eax        # 0x1ea8
  00f49:    	jne    0x2e13f
  00f4f:    	mov    rax,QWORD PTR [rbx]
  00f52:    	lea    rdi,[rsp-0x18]
  00f57:    	mov    QWORD PTR [rdi],rax
  00f5a:    	mov    QWORD PTR [rbx],rdi
  00f5d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f66:    	mov    QWORD PTR [rsp-0x38],rcx
  00f6b:    	mov    rax,QWORD PTR [rbp-0x40]
  00f6f:    	mov    QWORD PTR [rsp-0x38],rax
  00f74: 00 	mov    rdi,0x1
  00f7b:    	mov    rax,QWORD PTR [rbp-0x48]
  00f7f:    	mov    QWORD PTR [rsp-0x40],rax
  00f84: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f8d: 00 	movabs rax,0x0
  00f97:    	mov    QWORD PTR [rsp-0x28],rax
  00f9c: 00 	movabs r13,0x0
  00fa6:    	call   0xfffd49bc
  00fab:    	lea    rdi,[rbp-0x8]
  00faf:    	mov    QWORD PTR [rbx],rdi
  00fb2:    	movq   xmm2,QWORD PTR [rsp]
  00fb7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fbd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fc3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fc9:    	add    rsp,0x20
  00fcd:    	test   rax,rax
  00fd0:    	je     0x2e1ab
:00085 
:00087 %3 = 0: i32
  00fd6: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  00fde: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  00fe6:    	sub    rsp,0x20
  00fea:    	movq   QWORD PTR [rsp],xmm2
  00fef:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ff5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ffb:    	movq   QWORD PTR [rsp+0x18],xmm5
  01001:    	mov    rdx,QWORD PTR [rbp-0x30]
  01005:    	mov    rcx,QWORD PTR [rbp-0x50]
  01009:    	mov    rdi,rbx
  0100c:    	mov    rsi,r12
  0100f: 31 	movabs r8,0x563184c9e578
  01019: 31 	movabs rax,0x5631840b8230
  01023:    	call   rax
  01025:    	movq   xmm2,QWORD PTR [rsp]
  0102a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01030:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01036:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0103c:    	add    rsp,0x20
  01040: 31 	movabs r13,0x563184c9e580
  0104a:    	test   rax,rax
  0104d:    	je     0xfffd49f7
  01053:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  01057: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  0105f:    	sub    rsp,0x20
  01063:    	movq   QWORD PTR [rsp],xmm3
  01068:    	movq   QWORD PTR [rsp+0x8],xmm4
  0106e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01074:    	mov    rdx,QWORD PTR [rbp-0x30]
  01078:    	mov    rcx,QWORD PTR [rbp-0x58]
  0107c:    	mov    rdi,rbx
  0107f:    	mov    rsi,r12
  01082: 31 	movabs r8,0x563184c9e598
  0108c: 31 	movabs rax,0x5631840b8230
  01096:    	call   rax
  01098:    	movq   xmm3,QWORD PTR [rsp]
  0109d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010a3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010a9:    	add    rsp,0x20
  010ad: 31 	movabs r13,0x563184c9e5a0
  010b7:    	test   rax,rax
  010ba:    	je     0xfffd49f7
  010c0:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  010c4:    	mov    rdi,QWORD PTR [rbp-0x50]
  010c8: 00 	test   rdi,0x7
  010cf:    	jne    0x2e1ba
  010d5:    	cmp    DWORD PTR [rdi+0x4],0x28
  010d9:    	jne    0x2e1ba
  010df: 26 	cmp    DWORD PTR [rip+0xfffffffffffd63ef],0x26        # 0xfffd74d5
  010e6:    	jne    0x2e1ba
  010ec:    	sub    rsp,0x10
  010f0:    	movq   QWORD PTR [rsp],xmm3
  010f5:    	movq   QWORD PTR [rsp+0x8],xmm4
  010fb:    	mov    rax,QWORD PTR [rbx]
  010fe:    	lea    rdi,[rsp-0x18]
  01103:    	mov    QWORD PTR [rdi],rax
  01106:    	mov    QWORD PTR [rbx],rdi
  01109: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01112:    	mov    QWORD PTR [rsp-0x38],rcx
  01117:    	mov    rax,QWORD PTR [rbp-0x50]
  0111b:    	mov    QWORD PTR [rsp-0x38],rax
  01120: 00 	mov    rdi,0x1
  01127:    	mov    rax,QWORD PTR [rbp-0x58]
  0112b:    	mov    QWORD PTR [rsp-0x40],rax
  01130: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01139: 09 	movabs rax,0x900000040
  01143:    	mov    QWORD PTR [rsp-0x28],rax
  01148: 31 	movabs r13,0x563184c82c10
  01152:    	call   0xfffe0fe9
  01157:    	lea    rdi,[rbp-0x8]
  0115b:    	mov    QWORD PTR [rbx],rdi
  0115e:    	movq   xmm3,QWORD PTR [rsp]
  01163:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01169:    	add    rsp,0x10
  0116d: 31 	movabs r13,0x563184c9e5c0
  01177:    	test   rax,rax
  0117a:    	je     0xfffd49f7
  01180:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  01184:    	sub    rsp,0x10
  01188:    	movq   QWORD PTR [rsp],xmm3
  0118d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01193:    	mov    rdx,QWORD PTR [rbp-0x30]
  01197:    	mov    rcx,QWORD PTR [rbp-0x40]
  0119b:    	mov    r8,QWORD PTR [rbp-0x48]
  0119f:    	mov    rdi,rbx
  011a2:    	mov    rsi,r12
  011a5: 31 	movabs rax,0x5631840b8360
  011af:    	call   rax
  011b1:    	movq   xmm3,QWORD PTR [rsp]
  011b6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011bc:    	add    rsp,0x10
  011c0: 31 	movabs r13,0x563184c9e5e0
  011ca:    	test   rax,rax
  011cd:    	je     0xfffd49f7
:00096 %3 = 0: i32
  011d3: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  011db: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  011e3:    	sub    rsp,0x10
  011e7:    	movq   QWORD PTR [rsp],xmm3
  011ec:    	movq   QWORD PTR [rsp+0x8],xmm4
  011f2:    	mov    rdx,QWORD PTR [rbp-0x30]
  011f6:    	mov    rcx,QWORD PTR [rbp-0x50]
  011fa:    	mov    rdi,rbx
  011fd:    	mov    rsi,r12
  01200: 31 	movabs r8,0x563184c9e608
  0120a: 31 	movabs rax,0x5631840b8230
  01214:    	call   rax
  01216:    	movq   xmm3,QWORD PTR [rsp]
  0121b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01221:    	add    rsp,0x10
  01225: 31 	movabs r13,0x563184c9e610
  0122f:    	test   rax,rax
  01232:    	je     0xfffd49f7
  01238:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  0123c:    	mov    rdi,QWORD PTR [rbp-0x50]
  01240: 00 	test   rdi,0x7
  01247:    	jne    0x2e1c9
  0124d:    	cmp    DWORD PTR [rdi+0x4],0x28
  01251:    	jne    0x2e1c9
  01257: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6277],0x26        # 0xfffd74d5
  0125e:    	jne    0x2e1c9
  01264:    	sub    rsp,0x10
  01268:    	movq   QWORD PTR [rsp],xmm3
  0126d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01273:    	mov    rax,QWORD PTR [rbx]
  01276:    	lea    rdi,[rsp-0x18]
  0127b:    	mov    QWORD PTR [rdi],rax
  0127e:    	mov    QWORD PTR [rbx],rdi
  01281: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0128a:    	mov    QWORD PTR [rsp-0x38],rcx
  0128f:    	mov    rax,QWORD PTR [rbp-0x50]
  01293:    	mov    QWORD PTR [rsp-0x38],rax
  01298: 00 	mov    rdi,0x0
  0129f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012a8: 07 	movabs rax,0x1000700000043
  012b2:    	mov    QWORD PTR [rsp-0x28],rax
  012b7: 31 	movabs r13,0x563184c828e0
  012c1:    	call   0xfffd7dcc
  012c6:    	lea    rdi,[rbp-0x8]
  012ca:    	mov    QWORD PTR [rbx],rdi
  012cd:    	movq   xmm3,QWORD PTR [rsp]
  012d2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012d8:    	add    rsp,0x10
  012dc: 31 	movabs r13,0x563184c9e630
  012e6:    	test   rax,rax
  012e9:    	je     0xfffd49f7
  012ef:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  012f3:    	sub    rsp,0x10
  012f7:    	movq   QWORD PTR [rsp],xmm3
  012fc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01302:    	mov    rdx,QWORD PTR [rbp-0x30]
  01306:    	mov    rcx,QWORD PTR [rbp-0x40]
  0130a:    	mov    r8,QWORD PTR [rbp-0x48]
  0130e:    	mov    rdi,rbx
  01311:    	mov    rsi,r12
  01314: 31 	movabs rax,0x5631840b8360
  0131e:    	call   rax
  01320:    	movq   xmm3,QWORD PTR [rsp]
  01325:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0132b:    	add    rsp,0x10
  0132f: 31 	movabs r13,0x563184c9e650
  01339:    	test   rax,rax
  0133c:    	je     0xfffd49f7
:00103 %3 = 1: i32
  01342: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  0134a: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01352:    	sub    rsp,0x10
  01356:    	movq   QWORD PTR [rsp],xmm3
  0135b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01361:    	mov    rdx,QWORD PTR [rbp-0x30]
  01365:    	mov    rcx,QWORD PTR [rbp-0x50]
  01369:    	mov    rdi,rbx
  0136c:    	mov    rsi,r12
  0136f: 31 	movabs r8,0x563184c9e678
  01379: 31 	movabs rax,0x5631840b8230
  01383:    	call   rax
  01385:    	movq   xmm3,QWORD PTR [rsp]
  0138a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01390:    	add    rsp,0x10
  01394: 31 	movabs r13,0x563184c9e680
  0139e:    	test   rax,rax
  013a1:    	je     0xfffd49f7
  013a7:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  013ab: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  013b3:    	sub    rsp,0x10
  013b7:    	movq   QWORD PTR [rsp],xmm3
  013bc:    	movq   QWORD PTR [rsp+0x8],xmm4
  013c2:    	mov    rdx,QWORD PTR [rbp-0x30]
  013c6:    	mov    rcx,QWORD PTR [rbp-0x58]
  013ca:    	mov    rdi,rbx
  013cd:    	mov    rsi,r12
  013d0: 31 	movabs r8,0x563184c9e698
  013da: 31 	movabs rax,0x5631840b8230
  013e4:    	call   rax
  013e6:    	movq   xmm3,QWORD PTR [rsp]
  013eb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013f1:    	add    rsp,0x10
  013f5: 31 	movabs r13,0x563184c9e6a0
  013ff:    	test   rax,rax
  01402:    	je     0xfffd49f7
  01408:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  0140c:    	mov    rdi,QWORD PTR [rbp-0x50]
  01410: 00 	test   rdi,0x7
  01417:    	jne    0x2e1d8
  0141d:    	cmp    DWORD PTR [rdi+0x4],0x28
  01421:    	jne    0x2e1d8
  01427: 26 	cmp    DWORD PTR [rip+0xfffffffffffd60a7],0x26        # 0xfffd74d5
  0142e:    	jne    0x2e1d8
  01434:    	sub    rsp,0x10
  01438:    	movq   QWORD PTR [rsp],xmm3
  0143d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01443:    	mov    rax,QWORD PTR [rbx]
  01446:    	lea    rdi,[rsp-0x18]
  0144b:    	mov    QWORD PTR [rdi],rax
  0144e:    	mov    QWORD PTR [rbx],rdi
  01451: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0145a:    	mov    QWORD PTR [rsp-0x38],rcx
  0145f:    	mov    rax,QWORD PTR [rbp-0x50]
  01463:    	mov    QWORD PTR [rsp-0x38],rax
  01468: 00 	mov    rdi,0x1
  0146f:    	mov    rax,QWORD PTR [rbp-0x58]
  01473:    	mov    QWORD PTR [rsp-0x40],rax
  01478: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01481: 09 	movabs rax,0x900000040
  0148b:    	mov    QWORD PTR [rsp-0x28],rax
  01490: 31 	movabs r13,0x563184c82c10
  0149a:    	call   0xfffe0fe9
  0149f:    	lea    rdi,[rbp-0x8]
  014a3:    	mov    QWORD PTR [rbx],rdi
  014a6:    	movq   xmm3,QWORD PTR [rsp]
  014ab:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014b1:    	add    rsp,0x10
  014b5: 31 	movabs r13,0x563184c9e6c0
  014bf:    	test   rax,rax
  014c2:    	je     0xfffd49f7
  014c8:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  014cc:    	sub    rsp,0x10
  014d0:    	movq   QWORD PTR [rsp],xmm3
  014d5:    	movq   QWORD PTR [rsp+0x8],xmm4
  014db:    	mov    rdx,QWORD PTR [rbp-0x30]
  014df:    	mov    rcx,QWORD PTR [rbp-0x40]
  014e3:    	mov    r8,QWORD PTR [rbp-0x48]
  014e7:    	mov    rdi,rbx
  014ea:    	mov    rsi,r12
  014ed: 31 	movabs rax,0x5631840b8360
  014f7:    	call   rax
  014f9:    	movq   xmm3,QWORD PTR [rsp]
  014fe:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01504:    	add    rsp,0x10
  01508: 31 	movabs r13,0x563184c9e6e0
  01512:    	test   rax,rax
  01515:    	je     0xfffd49f7
:00112 %3 = 1: i32
  0151b: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01523: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  0152b:    	sub    rsp,0x10
  0152f:    	movq   QWORD PTR [rsp],xmm3
  01534:    	movq   QWORD PTR [rsp+0x8],xmm4
  0153a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0153e:    	mov    rcx,QWORD PTR [rbp-0x50]
  01542:    	mov    rdi,rbx
  01545:    	mov    rsi,r12
  01548: 31 	movabs r8,0x563184c9e708
  01552: 31 	movabs rax,0x5631840b8230
  0155c:    	call   rax
  0155e:    	movq   xmm3,QWORD PTR [rsp]
  01563:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01569:    	add    rsp,0x10
  0156d: 31 	movabs r13,0x563184c9e710
  01577:    	test   rax,rax
  0157a:    	je     0xfffd49f7
  01580:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01584:    	mov    rdi,QWORD PTR [rbp-0x50]
  01588: 00 	test   rdi,0x7
  0158f:    	jne    0x2e1e7
  01595:    	cmp    DWORD PTR [rdi+0x4],0x28
  01599:    	jne    0x2e1e7
  0159f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5f2f],0x26        # 0xfffd74d5
  015a6:    	jne    0x2e1e7
  015ac:    	sub    rsp,0x10
  015b0:    	movq   QWORD PTR [rsp],xmm3
  015b5:    	movq   QWORD PTR [rsp+0x8],xmm4
  015bb:    	mov    rax,QWORD PTR [rbx]
  015be:    	lea    rdi,[rsp-0x18]
  015c3:    	mov    QWORD PTR [rdi],rax
  015c6:    	mov    QWORD PTR [rbx],rdi
  015c9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015d2:    	mov    QWORD PTR [rsp-0x38],rcx
  015d7:    	mov    rax,QWORD PTR [rbp-0x50]
  015db:    	mov    QWORD PTR [rsp-0x38],rax
  015e0: 00 	mov    rdi,0x0
  015e7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015f0: 07 	movabs rax,0x1000700000043
  015fa:    	mov    QWORD PTR [rsp-0x28],rax
  015ff: 31 	movabs r13,0x563184c828e0
  01609:    	call   0xfffd7dcc
  0160e:    	lea    rdi,[rbp-0x8]
  01612:    	mov    QWORD PTR [rbx],rdi
  01615:    	movq   xmm3,QWORD PTR [rsp]
  0161a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01620:    	add    rsp,0x10
  01624: 31 	movabs r13,0x563184c9e730
  0162e:    	test   rax,rax
  01631:    	je     0xfffd49f7
  01637:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  0163b:    	sub    rsp,0x10
  0163f:    	movq   QWORD PTR [rsp],xmm3
  01644:    	movq   QWORD PTR [rsp+0x8],xmm4
  0164a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0164e:    	mov    rcx,QWORD PTR [rbp-0x40]
  01652:    	mov    r8,QWORD PTR [rbp-0x48]
  01656:    	mov    rdi,rbx
  01659:    	mov    rsi,r12
  0165c: 31 	movabs rax,0x5631840b8360
  01666:    	call   rax
  01668:    	movq   xmm3,QWORD PTR [rsp]
  0166d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01673:    	add    rsp,0x10
  01677: 31 	movabs r13,0x563184c9e750
  01681:    	test   rax,rax
  01684:    	je     0xfffd49f7
:00119 %3 = %4
  0168a:    	mov    rax,QWORD PTR [rbp-0x48]
  0168e:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01692:    	mov    rax,QWORD PTR [rbp-0x40]
  01696:    	leave  
  01697:    	ret    
:00087 %3 = 0: i32
  01698: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  016a0: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  016a8:    	sub    rsp,0x20
  016ac:    	movq   QWORD PTR [rsp],xmm2
  016b1:    	movq   QWORD PTR [rsp+0x8],xmm3
  016b7:    	movq   QWORD PTR [rsp+0x10],xmm4
  016bd:    	movq   QWORD PTR [rsp+0x18],xmm5
  016c3:    	mov    rdx,QWORD PTR [rbp-0x30]
  016c7:    	mov    rcx,QWORD PTR [rbp-0x50]
  016cb:    	mov    rdi,rbx
  016ce:    	mov    rsi,r12
  016d1: 31 	movabs r8,0x563184c9e578
  016db: 31 	movabs rax,0x5631840b8230
  016e5:    	call   rax
  016e7:    	movq   xmm2,QWORD PTR [rsp]
  016ec:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016f2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016f8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016fe:    	add    rsp,0x20
  01702: 31 	movabs r13,0x563184c9e580
  0170c:    	test   rax,rax
  0170f:    	je     0xfffd49f7
  01715:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  01719: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  01721:    	sub    rsp,0x20
  01725:    	movq   QWORD PTR [rsp],xmm3
  0172a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01730:    	movq   QWORD PTR [rsp+0x10],xmm5
  01736:    	mov    rdx,QWORD PTR [rbp-0x30]
  0173a:    	mov    rcx,QWORD PTR [rbp-0x58]
  0173e:    	mov    rdi,rbx
  01741:    	mov    rsi,r12
  01744: 31 	movabs r8,0x563184c9e598
  0174e: 31 	movabs rax,0x5631840b8230
  01758:    	call   rax
  0175a:    	movq   xmm3,QWORD PTR [rsp]
  0175f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01765:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0176b:    	add    rsp,0x20
  0176f: 31 	movabs r13,0x563184c9e5a0
  01779:    	test   rax,rax
  0177c:    	je     0xfffd49f7
  01782:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  01786:    	mov    rdi,QWORD PTR [rbp-0x50]
  0178a: 00 	test   rdi,0x7
  01791:    	jne    0x2e241
  01797:    	cmp    DWORD PTR [rdi+0x4],0x28
  0179b:    	jne    0x2e241
  017a1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5d2d],0x26        # 0xfffd74d5
  017a8:    	jne    0x2e241
  017ae:    	sub    rsp,0x10
  017b2:    	movq   QWORD PTR [rsp],xmm3
  017b7:    	movq   QWORD PTR [rsp+0x8],xmm4
  017bd:    	mov    rax,QWORD PTR [rbx]
  017c0:    	lea    rdi,[rsp-0x18]
  017c5:    	mov    QWORD PTR [rdi],rax
  017c8:    	mov    QWORD PTR [rbx],rdi
  017cb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017d4:    	mov    QWORD PTR [rsp-0x38],rcx
  017d9:    	mov    rax,QWORD PTR [rbp-0x50]
  017dd:    	mov    QWORD PTR [rsp-0x38],rax
  017e2: 00 	mov    rdi,0x1
  017e9:    	mov    rax,QWORD PTR [rbp-0x58]
  017ed:    	mov    QWORD PTR [rsp-0x40],rax
  017f2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017fb: 09 	movabs rax,0x900000040
  01805:    	mov    QWORD PTR [rsp-0x28],rax
  0180a: 31 	movabs r13,0x563184c82c10
  01814:    	call   0xfffe0fe9
  01819:    	lea    rdi,[rbp-0x8]
  0181d:    	mov    QWORD PTR [rbx],rdi
  01820:    	movq   xmm3,QWORD PTR [rsp]
  01825:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0182b:    	add    rsp,0x10
  0182f: 31 	movabs r13,0x563184c9e5c0
  01839:    	test   rax,rax
  0183c:    	je     0xfffd49f7
  01842:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  01846:    	sub    rsp,0x10
  0184a:    	movq   QWORD PTR [rsp],xmm3
  0184f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01855:    	mov    rdx,QWORD PTR [rbp-0x30]
  01859:    	mov    rcx,QWORD PTR [rbp-0x40]
  0185d:    	mov    r8,QWORD PTR [rbp-0x48]
  01861:    	mov    rdi,rbx
  01864:    	mov    rsi,r12
  01867: 31 	movabs rax,0x5631840b8360
  01871:    	call   rax
  01873:    	movq   xmm3,QWORD PTR [rsp]
  01878:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0187e:    	add    rsp,0x10
  01882: 31 	movabs r13,0x563184c9e5e0
  0188c:    	test   rax,rax
  0188f:    	je     0xfffd49f7
:00096 %3 = 0: i32
  01895: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  0189d: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  018a5:    	sub    rsp,0x10
  018a9:    	movq   QWORD PTR [rsp],xmm3
  018ae:    	movq   QWORD PTR [rsp+0x8],xmm4
  018b4:    	mov    rdx,QWORD PTR [rbp-0x30]
  018b8:    	mov    rcx,QWORD PTR [rbp-0x50]
  018bc:    	mov    rdi,rbx
  018bf:    	mov    rsi,r12
  018c2: 31 	movabs r8,0x563184c9e608
  018cc: 31 	movabs rax,0x5631840b8230
  018d6:    	call   rax
  018d8:    	movq   xmm3,QWORD PTR [rsp]
  018dd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018e3:    	add    rsp,0x10
  018e7: 31 	movabs r13,0x563184c9e610
  018f1:    	test   rax,rax
  018f4:    	je     0xfffd49f7
  018fa:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  018fe:    	mov    rdi,QWORD PTR [rbp-0x50]
  01902: 00 	test   rdi,0x7
  01909:    	jne    0x2e250
  0190f:    	cmp    DWORD PTR [rdi+0x4],0x28
  01913:    	jne    0x2e250
  01919: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5bb5],0x26        # 0xfffd74d5
  01920:    	jne    0x2e250
  01926:    	sub    rsp,0x10
  0192a:    	movq   QWORD PTR [rsp],xmm3
  0192f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01935:    	mov    rax,QWORD PTR [rbx]
  01938:    	lea    rdi,[rsp-0x18]
  0193d:    	mov    QWORD PTR [rdi],rax
  01940:    	mov    QWORD PTR [rbx],rdi
  01943: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0194c:    	mov    QWORD PTR [rsp-0x38],rcx
  01951:    	mov    rax,QWORD PTR [rbp-0x50]
  01955:    	mov    QWORD PTR [rsp-0x38],rax
  0195a: 00 	mov    rdi,0x0
  01961: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0196a: 07 	movabs rax,0x1000700000043
  01974:    	mov    QWORD PTR [rsp-0x28],rax
  01979: 31 	movabs r13,0x563184c828e0
  01983:    	call   0xfffd7dcc
  01988:    	lea    rdi,[rbp-0x8]
  0198c:    	mov    QWORD PTR [rbx],rdi
  0198f:    	movq   xmm3,QWORD PTR [rsp]
  01994:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0199a:    	add    rsp,0x10
  0199e: 31 	movabs r13,0x563184c9e630
  019a8:    	test   rax,rax
  019ab:    	je     0xfffd49f7
  019b1:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  019b5:    	sub    rsp,0x10
  019b9:    	movq   QWORD PTR [rsp],xmm3
  019be:    	movq   QWORD PTR [rsp+0x8],xmm4
  019c4:    	mov    rdx,QWORD PTR [rbp-0x30]
  019c8:    	mov    rcx,QWORD PTR [rbp-0x40]
  019cc:    	mov    r8,QWORD PTR [rbp-0x48]
  019d0:    	mov    rdi,rbx
  019d3:    	mov    rsi,r12
  019d6: 31 	movabs rax,0x5631840b8360
  019e0:    	call   rax
  019e2:    	movq   xmm3,QWORD PTR [rsp]
  019e7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ed:    	add    rsp,0x10
  019f1: 31 	movabs r13,0x563184c9e650
  019fb:    	test   rax,rax
  019fe:    	je     0xfffd49f7
:00103 %3 = 1: i32
  01a04: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  01a0c: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01a14:    	sub    rsp,0x10
  01a18:    	movq   QWORD PTR [rsp],xmm3
  01a1d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a23:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a27:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a2b:    	mov    rdi,rbx
  01a2e:    	mov    rsi,r12
  01a31: 31 	movabs r8,0x563184c9e678
  01a3b: 31 	movabs rax,0x5631840b8230
  01a45:    	call   rax
  01a47:    	movq   xmm3,QWORD PTR [rsp]
  01a4c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a52:    	add    rsp,0x10
  01a56: 31 	movabs r13,0x563184c9e680
  01a60:    	test   rax,rax
  01a63:    	je     0xfffd49f7
  01a69:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  01a6d: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  01a75:    	sub    rsp,0x10
  01a79:    	movq   QWORD PTR [rsp],xmm3
  01a7e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a84:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a88:    	mov    rcx,QWORD PTR [rbp-0x58]
  01a8c:    	mov    rdi,rbx
  01a8f:    	mov    rsi,r12
  01a92: 31 	movabs r8,0x563184c9e698
  01a9c: 31 	movabs rax,0x5631840b8230
  01aa6:    	call   rax
  01aa8:    	movq   xmm3,QWORD PTR [rsp]
  01aad:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ab3:    	add    rsp,0x10
  01ab7: 31 	movabs r13,0x563184c9e6a0
  01ac1:    	test   rax,rax
  01ac4:    	je     0xfffd49f7
  01aca:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  01ace:    	mov    rdi,QWORD PTR [rbp-0x50]
  01ad2: 00 	test   rdi,0x7
  01ad9:    	jne    0x2e25f
  01adf:    	cmp    DWORD PTR [rdi+0x4],0x28
  01ae3:    	jne    0x2e25f
  01ae9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd59e5],0x26        # 0xfffd74d5
  01af0:    	jne    0x2e25f
  01af6:    	sub    rsp,0x10
  01afa:    	movq   QWORD PTR [rsp],xmm3
  01aff:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b05:    	mov    rax,QWORD PTR [rbx]
  01b08:    	lea    rdi,[rsp-0x18]
  01b0d:    	mov    QWORD PTR [rdi],rax
  01b10:    	mov    QWORD PTR [rbx],rdi
  01b13: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b1c:    	mov    QWORD PTR [rsp-0x38],rcx
  01b21:    	mov    rax,QWORD PTR [rbp-0x50]
  01b25:    	mov    QWORD PTR [rsp-0x38],rax
  01b2a: 00 	mov    rdi,0x1
  01b31:    	mov    rax,QWORD PTR [rbp-0x58]
  01b35:    	mov    QWORD PTR [rsp-0x40],rax
  01b3a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b43: 09 	movabs rax,0x900000040
  01b4d:    	mov    QWORD PTR [rsp-0x28],rax
  01b52: 31 	movabs r13,0x563184c82c10
  01b5c:    	call   0xfffe0fe9
  01b61:    	lea    rdi,[rbp-0x8]
  01b65:    	mov    QWORD PTR [rbx],rdi
  01b68:    	movq   xmm3,QWORD PTR [rsp]
  01b6d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b73:    	add    rsp,0x10
  01b77: 31 	movabs r13,0x563184c9e6c0
  01b81:    	test   rax,rax
  01b84:    	je     0xfffd49f7
  01b8a:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  01b8e:    	sub    rsp,0x10
  01b92:    	movq   QWORD PTR [rsp],xmm3
  01b97:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b9d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01ba1:    	mov    rcx,QWORD PTR [rbp-0x40]
  01ba5:    	mov    r8,QWORD PTR [rbp-0x48]
  01ba9:    	mov    rdi,rbx
  01bac:    	mov    rsi,r12
  01baf: 31 	movabs rax,0x5631840b8360
  01bb9:    	call   rax
  01bbb:    	movq   xmm3,QWORD PTR [rsp]
  01bc0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bc6:    	add    rsp,0x10
  01bca: 31 	movabs r13,0x563184c9e6e0
  01bd4:    	test   rax,rax
  01bd7:    	je     0xfffd49f7
:00112 %3 = 1: i32
  01bdd: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01be5: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  01bed:    	sub    rsp,0x10
  01bf1:    	movq   QWORD PTR [rsp],xmm3
  01bf6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bfc:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c00:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c04:    	mov    rdi,rbx
  01c07:    	mov    rsi,r12
  01c0a: 31 	movabs r8,0x563184c9e708
  01c14: 31 	movabs rax,0x5631840b8230
  01c1e:    	call   rax
  01c20:    	movq   xmm3,QWORD PTR [rsp]
  01c25:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c2b:    	add    rsp,0x10
  01c2f: 31 	movabs r13,0x563184c9e710
  01c39:    	test   rax,rax
  01c3c:    	je     0xfffd49f7
  01c42:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01c46:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c4a: 00 	test   rdi,0x7
  01c51:    	jne    0x2e26e
  01c57:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c5b:    	jne    0x2e26e
  01c61: 26 	cmp    DWORD PTR [rip+0xfffffffffffd586d],0x26        # 0xfffd74d5
  01c68:    	jne    0x2e26e
  01c6e:    	sub    rsp,0x10
  01c72:    	movq   QWORD PTR [rsp],xmm3
  01c77:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c7d:    	mov    rax,QWORD PTR [rbx]
  01c80:    	lea    rdi,[rsp-0x18]
  01c85:    	mov    QWORD PTR [rdi],rax
  01c88:    	mov    QWORD PTR [rbx],rdi
  01c8b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01c94:    	mov    QWORD PTR [rsp-0x38],rcx
  01c99:    	mov    rax,QWORD PTR [rbp-0x50]
  01c9d:    	mov    QWORD PTR [rsp-0x38],rax
  01ca2: 00 	mov    rdi,0x0
  01ca9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01cb2: 07 	movabs rax,0x1000700000043
  01cbc:    	mov    QWORD PTR [rsp-0x28],rax
  01cc1: 31 	movabs r13,0x563184c828e0
  01ccb:    	call   0xfffd7dcc
  01cd0:    	lea    rdi,[rbp-0x8]
  01cd4:    	mov    QWORD PTR [rbx],rdi
  01cd7:    	movq   xmm3,QWORD PTR [rsp]
  01cdc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ce2:    	add    rsp,0x10
  01ce6: 31 	movabs r13,0x563184c9e730
  01cf0:    	test   rax,rax
  01cf3:    	je     0xfffd49f7
  01cf9:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  01cfd:    	sub    rsp,0x10
  01d01:    	movq   QWORD PTR [rsp],xmm3
  01d06:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d0c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d10:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d14:    	mov    r8,QWORD PTR [rbp-0x48]
  01d18:    	mov    rdi,rbx
  01d1b:    	mov    rsi,r12
  01d1e: 31 	movabs rax,0x5631840b8360
  01d28:    	call   rax
  01d2a:    	movq   xmm3,QWORD PTR [rsp]
  01d2f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d35:    	add    rsp,0x10
  01d39: 31 	movabs r13,0x563184c9e750
  01d43:    	test   rax,rax
  01d46:    	je     0xfffd49f7
:00119 %3 = %4
  01d4c:    	mov    rax,QWORD PTR [rbp-0x48]
  01d50:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01d54:    	mov    rax,QWORD PTR [rbp-0x40]
  01d58:    	leave  
  01d59:    	ret    
==> start whole compile: otherBasis FuncId(59) self_class:Scene start:[00000] bytecode:0x563184c9dfe0
<== finished compile. elapsed:134.2µs
offset:Pos(185588) code: 7514 bytes  data: 342 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x2c3cd
  00038:    	cmp    DWORD PTR [rdi+0x4],0x32
  0003c:    	jne    0x2c3cd
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd55db]        # 0xfffd562c
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1d14]        # 0x1d6c
  00058:    	jne    0x2c3dc
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1cf7]        # 0x1d5c
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2c422
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0007e:    	jne    0x2c422
  00084: 26 	cmp    DWORD PTR [rip+0xfffffffffffd559a],0x26        # 0xfffd5625
  0008b:    	jne    0x2c422
  00091:    	mov    esi,DWORD PTR [rip+0x1ce1]        # 0x1d78
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x2c431
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 31 	movabs rax,0x563184053740
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00003 
:00005 %7 = %2.call y()                     [Vec]
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x2c45a
  000df:    	cmp    DWORD PTR [rdi+0x4],0x28
  000e3:    	jne    0x2c45a
  000e9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5535],0x26        # 0xfffd5625
  000f0:    	jne    0x2c45a
  000f6:    	mov    esi,DWORD PTR [rip+0x1c84]        # 0x1d80
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x2c469
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 31 	movabs rax,0x563184053740
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00006 
:00008 %8 = %2.call z()                     [Vec]
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x2c492
  00144:    	cmp    DWORD PTR [rdi+0x4],0x28
  00148:    	jne    0x2c492
  0014e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd54d0],0x26        # 0xfffd5625
  00155:    	jne    0x2c492
  0015b:    	mov    esi,DWORD PTR [rip+0x1c27]        # 0x1d88
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x2c4a1
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 31 	movabs rax,0x563184053740
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00009 
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x2c4ca
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ad:    	jne    0x2c4ca
  001b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd546b],0x26        # 0xfffd5625
  001ba:    	jne    0x2c4ca
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x2c4d9
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 31 	movabs r13,0x563184c9e0b0
  00207:    	test   rax,rax
  0020a:    	je     0xfffd2b47
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %1:.[%3:] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 31 	movabs rax,0x5631840b8360
  00230:    	call   rax
  00232: 31 	movabs r13,0x563184c9e0d0
  0023c:    	test   rax,rax
  0023f:    	je     0xfffd2b47
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd53d8]        # 0xfffd562c
  00254: 00 	cmp    rax,QWORD PTR [rip+0x1b41]        # 0x1d9c
  0025b:    	jne    0x2c50b
  00261: 00 	mov    rax,QWORD PTR [rip+0x1b24]        # 0x1d8c
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x1b38]        # 0x1dac
  00274: 00 	movabs rax,0x8000000000000002
  0027e:    	mov    QWORD PTR [rbp-0x58],rax
:00018 %7 = literal[0.0]
  00282: 00 	movq   xmm3,QWORD PTR [rip+0x1b32]        # 0x1dbc
  0028a: 00 	movabs rax,0x8000000000000002
  00294:    	mov    QWORD PTR [rbp-0x60],rax
:00019 %8 = literal[0.0]
  00298: 00 	movq   xmm4,QWORD PTR [rip+0x1b2c]        # 0x1dcc
  002a0: 00 	movabs rax,0x8000000000000002
  002aa:    	mov    QWORD PTR [rbp-0x68],rax
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002ae:    	mov    rdi,QWORD PTR [rbp-0x50]
  002b2: 00 	test   rdi,0x7
  002b9:    	jne    0x2c551
  002bf:    	cmp    DWORD PTR [rdi+0x4],0x29
  002c3:    	jne    0x2c551
  002c9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5355],0x26        # 0xfffd5625
  002d0:    	jne    0x2c551
  002d6: 00 	mov    r9,0x0
  002dd:    	sub    rsp,0x20
  002e1:    	movq   QWORD PTR [rsp],xmm2
  002e6:    	movq   QWORD PTR [rsp+0x8],xmm3
  002ec:    	movq   QWORD PTR [rsp+0x10],xmm4
  002f2:    	mov    rdx,rdi
  002f5:    	mov    rax,QWORD PTR [rbx]
  002f8:    	lea    rdi,[rsp-0x18]
  002fd:    	mov    QWORD PTR [rdi],rax
  00300:    	mov    QWORD PTR [rbx],rdi
  00303: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0030c:    	mov    QWORD PTR [rsp-0x38],rcx
  00311:    	lea    rcx,[rbp-0x58]
  00315: 00 	mov    r8,0x3
  0031c:    	call   0x2c560
  00321:    	lea    rdi,[rbp-0x8]
  00325:    	mov    QWORD PTR [rbx],rdi
  00328:    	movq   xmm2,QWORD PTR [rsp]
  0032d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00333:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00339:    	add    rsp,0x20
  0033d: 31 	movabs r13,0x563184c9e140
  00347:    	test   rax,rax
  0034a:    	je     0xfffd2b47
  00350:    	mov    QWORD PTR [rbp-0x48],rax
:00021 
:00023 %1:.[%3:] = %4
  00354:    	sub    rsp,0x20
  00358:    	movq   QWORD PTR [rsp],xmm2
  0035d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00363:    	movq   QWORD PTR [rsp+0x10],xmm4
  00369:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00371:    	mov    r8,QWORD PTR [rbp-0x48]
  00375:    	mov    rdi,rbx
  00378:    	mov    rsi,r12
  0037b: 31 	movabs rax,0x5631840b8360
  00385:    	call   rax
  00387:    	movq   xmm2,QWORD PTR [rsp]
  0038c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00392:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00398:    	add    rsp,0x20
  0039c: 31 	movabs r13,0x563184c9e160
  003a6:    	test   rax,rax
  003a9:    	je     0xfffd2b47
:00024 %3 = %2.call x()                     [Vec]
  003af:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b3: 00 	test   rdi,0x7
  003ba:    	jne    0x2c592
  003c0:    	cmp    DWORD PTR [rdi+0x4],0x28
  003c4:    	jne    0x2c592
  003ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5254],0x26        # 0xfffd5625
  003d1:    	jne    0x2c592
  003d7:    	mov    esi,DWORD PTR [rip+0x19fb]        # 0x1dd8
  003dd:    	cmp    esi,0xffffffff
  003e0:    	je     0x2c5a1
  003e6:    	cmp    WORD PTR [rdi+0x2],0x3
  003eb:    	jne    0x404
  003f1:    	cmp    esi,0x6
  003f4:    	jge    0x404
  003fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003ff:    	jmp    0x43a
  00404:    	sub    rsp,0x20
  00408:    	movq   QWORD PTR [rsp],xmm2
  0040d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00413:    	movq   QWORD PTR [rsp+0x10],xmm4
  00419: 31 	movabs rax,0x563184053740
  00423:    	call   rax
  00425:    	movq   xmm2,QWORD PTR [rsp]
  0042a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00430:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00436:    	add    rsp,0x20
  0043a:    	mov    QWORD PTR [rbp-0x40],rax
:00025 
:00027 %4 = literal[0.6]
  0043e: 00 	movq   xmm5,QWORD PTR [rip+0x1996]        # 0x1ddc
  00446: 99 	movabs rax,0xff1999999999999a
  00450:    	mov    QWORD PTR [rbp-0x48],rax
:00028 _%3 = %3 < %4                        [Float][Float]
:00029 condnotbr _%3 =>:00043
  00454:    	mov    rdi,QWORD PTR [rbp-0x40]
  00458: 00 	test   rdi,0x1
  0045f:    	jne    0x2c5f4
  00465: 00 	test   rdi,0x2
  0046c:    	je     0x4a8
  00472:    	xorps  xmm6,xmm6
  00475: 00 	movabs rax,0x8000000000000002
  0047f:    	cmp    rdi,rax
  00482:    	je     0x4ba
  00488:    	mov    rax,rdi
  0048b:    	sar    rax,0x3f
  0048f:    	add    rax,0x2
  00493:    	and    rdi,0xfffffffffffffffc
  00497:    	or     rdi,rax
  0049a:    	rol    rdi,0x3d
  0049e:    	movq   xmm6,rdi
  004a3:    	jmp    0x4ba
  004a8:    	call   0xfffd2b80
  004ad:    	test   rax,rax
  004b0:    	je     0x2c5f4
  004b6:    	movq   xmm6,xmm0
  004ba:    	ucomisd xmm6,xmm5
  004be:    	jae    0x2c6f5
:00030 %3 = %2.call x()                     [Vec]
  004c4:    	mov    rdi,QWORD PTR [rbp-0x38]
  004c8: 00 	test   rdi,0x7
  004cf:    	jne    0x2c603
  004d5:    	cmp    DWORD PTR [rdi+0x4],0x28
  004d9:    	jne    0x2c603
  004df: 26 	cmp    DWORD PTR [rip+0xfffffffffffd513f],0x26        # 0xfffd5625
  004e6:    	jne    0x2c603
  004ec:    	mov    esi,DWORD PTR [rip+0x18f6]        # 0x1de8
  004f2:    	cmp    esi,0xffffffff
  004f5:    	je     0x2c612
  004fb:    	cmp    WORD PTR [rdi+0x2],0x3
  00500:    	jne    0x519
  00506:    	cmp    esi,0x6
  00509:    	jge    0x519
  0050f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00514:    	jmp    0x55b
  00519:    	sub    rsp,0x20
  0051d:    	movq   QWORD PTR [rsp],xmm2
  00522:    	movq   QWORD PTR [rsp+0x8],xmm3
  00528:    	movq   QWORD PTR [rsp+0x10],xmm4
  0052e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00534: 31 	movabs rax,0x563184053740
  0053e:    	call   rax
  00540:    	movq   xmm2,QWORD PTR [rsp]
  00545:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0054b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00551:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00557:    	add    rsp,0x20
  0055b:    	mov    QWORD PTR [rbp-0x40],rax
:00031 
:00033 %4 = literal[-0.6]
  0055f: 00 	movq   xmm5,QWORD PTR [rip+0x1885]        # 0x1dec
  00567: 99 	movabs rax,0xff1999999999999e
  00571:    	mov    QWORD PTR [rbp-0x48],rax
:00034 _%3 = %3 > %4                        [Float][Float]
:00035 condnotbr _%3 =>:00043
  00575:    	mov    rdi,QWORD PTR [rbp-0x40]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x2c671
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffd2b80
  005ce:    	test   rax,rax
  005d1:    	je     0x2c671
  005d7:    	movq   xmm6,xmm0
  005db:    	ucomisd xmm6,xmm5
  005df:    	jbe    0x2c70e
:00036 %3 = 1: i32
  005e5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]                         [Array][Integer]
  005ed:    	sub    rsp,0x20
  005f1:    	movq   QWORD PTR [rsp],xmm2
  005f6:    	movq   QWORD PTR [rsp+0x8],xmm3
  005fc:    	movq   QWORD PTR [rsp+0x10],xmm4
  00602:    	movq   QWORD PTR [rsp+0x18],xmm5
  00608:    	mov    rdx,QWORD PTR [rbp-0x30]
  0060c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00610:    	mov    rdi,rbx
  00613:    	mov    rsi,r12
  00616: 31 	movabs r8,0x563184c9e238
  00620: 31 	movabs rax,0x5631840b8230
  0062a:    	call   rax
  0062c:    	movq   xmm2,QWORD PTR [rsp]
  00631:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00637:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0063d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00643:    	add    rsp,0x20
  00647: 31 	movabs r13,0x563184c9e240
  00651:    	test   rax,rax
  00654:    	je     0xfffd2b47
  0065a:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  0065e: 00 	movq   xmm5,QWORD PTR [rip+0x1796]        # 0x1dfc
  00666: 00 	movabs rax,0xff80000000000002
  00670:    	mov    QWORD PTR [rbp-0x48],rax
:00039 _ = %3.call x=(%4; 1)                [Vec]
  00674:    	mov    rdi,QWORD PTR [rbp-0x40]
  00678: 00 	test   rdi,0x7
  0067f:    	jne    0x2c680
  00685:    	cmp    DWORD PTR [rdi+0x4],0x28
  00689:    	jne    0x2c680
  0068f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4f8f],0x26        # 0xfffd5625
  00696:    	jne    0x2c680
  0069c:    	mov    esi,DWORD PTR [rip+0x1766]        # 0x1e08
  006a2:    	cmp    esi,0xffffffff
  006a5:    	je     0x2c68f
  006ab:    	cmp    WORD PTR [rdi+0x2],0x3
  006b0:    	jne    0x6cd
  006b6:    	cmp    esi,0x6
  006b9:    	jge    0x6cd
  006bf:    	mov    rax,QWORD PTR [rbp-0x48]
  006c3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006c8:    	jmp    0x726
  006cd:    	sub    rsp,0x20
  006d1:    	movq   QWORD PTR [rsp],xmm2
  006d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  006dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  006e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  006e8:    	mov    rdx,QWORD PTR [rbp-0x48]
  006ec: 31 	movabs rax,0x5631840539e0
  006f6:    	call   rax
  006f8:    	movq   xmm2,QWORD PTR [rsp]
  006fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00703:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00709:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0070f:    	add    rsp,0x20
  00713: 31 	movabs r13,0x563184c9e270
  0071d:    	test   rax,rax
  00720:    	je     0xfffd2b47
:00040 
:00042 br =>:00087
  00726:    	jmp    0x2cc0c
:00043 %3 = %2.call y()                     [Vec]
  0072b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0072f: 00 	test   rdi,0x7
  00736:    	jne    0x2c727
  0073c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00740:    	jne    0x2c727
  00746: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4ed8],0x26        # 0xfffd5625
  0074d:    	jne    0x2c727
  00753:    	mov    esi,DWORD PTR [rip+0x16b7]        # 0x1e10
  00759:    	cmp    esi,0xffffffff
  0075c:    	je     0x2c736
  00762:    	cmp    WORD PTR [rdi+0x2],0x3
  00767:    	jne    0x780
  0076d:    	cmp    esi,0x6
  00770:    	jge    0x780
  00776:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0077b:    	jmp    0x7c2
  00780:    	sub    rsp,0x20
  00784:    	movq   QWORD PTR [rsp],xmm2
  00789:    	movq   QWORD PTR [rsp+0x8],xmm3
  0078f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00795:    	movq   QWORD PTR [rsp+0x18],xmm5
  0079b: 31 	movabs rax,0x563184053740
  007a5:    	call   rax
  007a7:    	movq   xmm2,QWORD PTR [rsp]
  007ac:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007b2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007b8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007be:    	add    rsp,0x20
  007c2:    	mov    QWORD PTR [rbp-0x40],rax
:00044 
:00046 %4 = literal[0.6]
  007c6: 00 	movq   xmm5,QWORD PTR [rip+0x164e]        # 0x1e1c
  007ce: 99 	movabs rax,0xff1999999999999a
  007d8:    	mov    QWORD PTR [rbp-0x48],rax
:00047 _%3 = %3 < %4                        [Float][Float]
:00048 condnotbr _%3 =>:00062
  007dc:    	mov    rdi,QWORD PTR [rbp-0x40]
  007e0: 00 	test   rdi,0x1
  007e7:    	jne    0x2c795
  007ed: 00 	test   rdi,0x2
  007f4:    	je     0x830
  007fa:    	xorps  xmm6,xmm6
  007fd: 00 	movabs rax,0x8000000000000002
  00807:    	cmp    rdi,rax
  0080a:    	je     0x842
  00810:    	mov    rax,rdi
  00813:    	sar    rax,0x3f
  00817:    	add    rax,0x2
  0081b:    	and    rdi,0xfffffffffffffffc
  0081f:    	or     rdi,rax
  00822:    	rol    rdi,0x3d
  00826:    	movq   xmm6,rdi
  0082b:    	jmp    0x842
  00830:    	call   0xfffd2b80
  00835:    	test   rax,rax
  00838:    	je     0x2c795
  0083e:    	movq   xmm6,xmm0
  00842:    	ucomisd xmm6,xmm5
  00846:    	jae    0x2c951
:00049 %3 = %2.call y()                     [<INVALID>]
  0084c: 01 	sub    DWORD PTR [rip+0x15d1],0x1        # 0x1e24
  00853:    	je     0x2c7b3
  00859:    	sub    rsp,0x20
  0085d:    	movq   QWORD PTR [rsp],xmm2
  00862:    	movq   QWORD PTR [rsp+0x8],xmm3
  00868:    	movq   QWORD PTR [rsp+0x10],xmm4
  0086e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00874:    	mov    rdi,QWORD PTR [rbp-0x38]
  00878: 31 	movabs rax,0x5631840958d0
  00882:    	call   rax
  00884:    	mov    r15d,eax
  00887: 00 	cmp    r15d,DWORD PTR [rip+0x159e]        # 0x1e2c
  0088e:    	jne    0x2c7d5
  00894:    	mov    eax,DWORD PTR [rip+0xfffffffffffd4d8b]        # 0xfffd5625
  0089a:    	cmp    DWORD PTR [rip+0x1588],eax        # 0x1e28
  008a0:    	jne    0x2c7d5
  008a6:    	mov    rax,QWORD PTR [rbx]
  008a9:    	lea    rdi,[rsp-0x18]
  008ae:    	mov    QWORD PTR [rdi],rax
  008b1:    	mov    QWORD PTR [rbx],rdi
  008b4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008bd:    	mov    QWORD PTR [rsp-0x38],rcx
  008c2:    	mov    rax,QWORD PTR [rbp-0x38]
  008c6:    	mov    QWORD PTR [rsp-0x38],rax
  008cb: 00 	mov    rdi,0x0
  008d2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008db: 00 	movabs rax,0x0
  008e5:    	mov    QWORD PTR [rsp-0x28],rax
  008ea: 00 	movabs r13,0x0
  008f4:    	call   0xfffd2b0c
  008f9:    	lea    rdi,[rbp-0x8]
  008fd:    	mov    QWORD PTR [rbx],rdi
  00900:    	movq   xmm2,QWORD PTR [rsp]
  00905:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0090b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00911:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00917:    	add    rsp,0x20
  0091b:    	test   rax,rax
  0091e:    	je     0x2c841
  00924:    	mov    QWORD PTR [rbp-0x40],rax
:00050 
:00052 %4 = literal[-0.6]
  00928: 00 	movq   xmm5,QWORD PTR [rip+0x150c]        # 0x1e3c
  00930: 99 	movabs rax,0xff1999999999999e
  0093a:    	mov    QWORD PTR [rbp-0x48],rax
:00053 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00054 condnotbr _%3 =>:00062
  0093e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00942:    	mov    rsi,QWORD PTR [rbp-0x48]
  00946: 00 	test   rdi,0x1
  0094d:    	je     0x2c850
  00953: 00 	test   rsi,0x1
  0095a:    	je     0x2c850
  00960:    	cmp    rdi,rsi
  00963:    	jle    0x2c96a
:00055 %3 = 1: i32
  00969: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]                         [Array][Integer]
  00971:    	sub    rsp,0x20
  00975:    	movq   QWORD PTR [rsp],xmm2
  0097a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00980:    	movq   QWORD PTR [rsp+0x10],xmm4
  00986:    	movq   QWORD PTR [rsp+0x18],xmm5
  0098c:    	mov    rdx,QWORD PTR [rbp-0x30]
  00990:    	mov    rcx,QWORD PTR [rbp-0x40]
  00994:    	mov    rdi,rbx
  00997:    	mov    rsi,r12
  0099a: 31 	movabs r8,0x563184c9e368
  009a4: 31 	movabs rax,0x5631840b8230
  009ae:    	call   rax
  009b0:    	movq   xmm2,QWORD PTR [rsp]
  009b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009c7:    	add    rsp,0x20
  009cb: 31 	movabs r13,0x563184c9e370
  009d5:    	test   rax,rax
  009d8:    	je     0xfffd2b47
  009de:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  009e2: 00 	movq   xmm5,QWORD PTR [rip+0x1462]        # 0x1e4c
  009ea: 00 	movabs rax,0xff80000000000002
  009f4:    	mov    QWORD PTR [rbp-0x48],rax
:00058 _ = %3.call y=(%4; 1)                [<INVALID>]
  009f8: 01 	sub    DWORD PTR [rip+0x1455],0x1        # 0x1e54
  009ff:    	je     0x2c8b4
  00a05:    	sub    rsp,0x20
  00a09:    	movq   QWORD PTR [rsp],xmm2
  00a0e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a14:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a1a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a20:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a24: 31 	movabs rax,0x5631840958d0
  00a2e:    	call   rax
  00a30:    	mov    r15d,eax
  00a33: 00 	cmp    r15d,DWORD PTR [rip+0x1422]        # 0x1e5c
  00a3a:    	jne    0x2c8d6
  00a40:    	mov    eax,DWORD PTR [rip+0xfffffffffffd4bdf]        # 0xfffd5625
  00a46:    	cmp    DWORD PTR [rip+0x140c],eax        # 0x1e58
  00a4c:    	jne    0x2c8d6
  00a52:    	mov    rax,QWORD PTR [rbx]
  00a55:    	lea    rdi,[rsp-0x18]
  00a5a:    	mov    QWORD PTR [rdi],rax
  00a5d:    	mov    QWORD PTR [rbx],rdi
  00a60: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a69:    	mov    QWORD PTR [rsp-0x38],rcx
  00a6e:    	mov    rax,QWORD PTR [rbp-0x40]
  00a72:    	mov    QWORD PTR [rsp-0x38],rax
  00a77: 00 	mov    rdi,0x1
  00a7e:    	mov    rax,QWORD PTR [rbp-0x48]
  00a82:    	mov    QWORD PTR [rsp-0x40],rax
  00a87: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a90: 00 	movabs rax,0x0
  00a9a:    	mov    QWORD PTR [rsp-0x28],rax
  00a9f: 00 	movabs r13,0x0
  00aa9:    	call   0xfffd2b0c
  00aae:    	lea    rdi,[rbp-0x8]
  00ab2:    	mov    QWORD PTR [rbx],rdi
  00ab5:    	movq   xmm2,QWORD PTR [rsp]
  00aba:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ac0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ac6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00acc:    	add    rsp,0x20
  00ad0:    	test   rax,rax
  00ad3:    	je     0x2c942
:00059 
:00061 br =>:00087
  00ad9:    	jmp    0x2cc25
:00062 %3 = %2.call z()                     [Vec]
  00ade:    	mov    rdi,QWORD PTR [rbp-0x38]
  00ae2: 00 	test   rdi,0x7
  00ae9:    	jne    0x2c983
  00aef:    	cmp    DWORD PTR [rdi+0x4],0x28
  00af3:    	jne    0x2c983
  00af9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4b25],0x26        # 0xfffd5625
  00b00:    	jne    0x2c983
  00b06:    	mov    esi,DWORD PTR [rip+0x1358]        # 0x1e64
  00b0c:    	cmp    esi,0xffffffff
  00b0f:    	je     0x2c992
  00b15:    	cmp    WORD PTR [rdi+0x2],0x3
  00b1a:    	jne    0xb33
  00b20:    	cmp    esi,0x6
  00b23:    	jge    0xb33
  00b29:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b2e:    	jmp    0xb75
  00b33:    	sub    rsp,0x20
  00b37:    	movq   QWORD PTR [rsp],xmm2
  00b3c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b42:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b48:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b4e: 31 	movabs rax,0x563184053740
  00b58:    	call   rax
  00b5a:    	movq   xmm2,QWORD PTR [rsp]
  00b5f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b65:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b6b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b71:    	add    rsp,0x20
  00b75:    	mov    QWORD PTR [rbp-0x40],rax
:00063 
:00065 %4 = literal[0.6]
  00b79: 00 	movq   xmm5,QWORD PTR [rip+0x12eb]        # 0x1e6c
  00b81: 99 	movabs rax,0xff1999999999999a
  00b8b:    	mov    QWORD PTR [rbp-0x48],rax
:00066 _%3 = %3 < %4                        [Float][Float]
:00067 condnotbr _%3 =>:00081
  00b8f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00b93: 00 	test   rdi,0x1
  00b9a:    	jne    0x2c9f1
  00ba0: 00 	test   rdi,0x2
  00ba7:    	je     0xbe3
  00bad:    	xorps  xmm6,xmm6
  00bb0: 00 	movabs rax,0x8000000000000002
  00bba:    	cmp    rdi,rax
  00bbd:    	je     0xbf5
  00bc3:    	mov    rax,rdi
  00bc6:    	sar    rax,0x3f
  00bca:    	add    rax,0x2
  00bce:    	and    rdi,0xfffffffffffffffc
  00bd2:    	or     rdi,rax
  00bd5:    	rol    rdi,0x3d
  00bd9:    	movq   xmm6,rdi
  00bde:    	jmp    0xbf5
  00be3:    	call   0xfffd2b80
  00be8:    	test   rax,rax
  00beb:    	je     0x2c9f1
  00bf1:    	movq   xmm6,xmm0
  00bf5:    	ucomisd xmm6,xmm5
  00bf9:    	jae    0x2caf2
:00068 %3 = %2.call z()                     [Vec]
  00bff:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c03: 00 	test   rdi,0x7
  00c0a:    	jne    0x2ca00
  00c10:    	cmp    DWORD PTR [rdi+0x4],0x28
  00c14:    	jne    0x2ca00
  00c1a: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4a04],0x26        # 0xfffd5625
  00c21:    	jne    0x2ca00
  00c27:    	mov    esi,DWORD PTR [rip+0x124b]        # 0x1e78
  00c2d:    	cmp    esi,0xffffffff
  00c30:    	je     0x2ca0f
  00c36:    	cmp    WORD PTR [rdi+0x2],0x3
  00c3b:    	jne    0xc54
  00c41:    	cmp    esi,0x6
  00c44:    	jge    0xc54
  00c4a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c4f:    	jmp    0xc96
  00c54:    	sub    rsp,0x20
  00c58:    	movq   QWORD PTR [rsp],xmm2
  00c5d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c63:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c69:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c6f: 31 	movabs rax,0x563184053740
  00c79:    	call   rax
  00c7b:    	movq   xmm2,QWORD PTR [rsp]
  00c80:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c86:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c8c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c92:    	add    rsp,0x20
  00c96:    	mov    QWORD PTR [rbp-0x40],rax
:00069 
:00071 %4 = literal[-0.6]
  00c9a: 00 	movq   xmm5,QWORD PTR [rip+0x11da]        # 0x1e7c
  00ca2: 99 	movabs rax,0xff1999999999999e
  00cac:    	mov    QWORD PTR [rbp-0x48],rax
:00072 _%3 = %3 > %4                        [Float][Float]
:00073 condnotbr _%3 =>:00081
  00cb0:    	mov    rdi,QWORD PTR [rbp-0x40]
  00cb4: 00 	test   rdi,0x1
  00cbb:    	jne    0x2ca6e
  00cc1: 00 	test   rdi,0x2
  00cc8:    	je     0xd04
  00cce:    	xorps  xmm6,xmm6
  00cd1: 00 	movabs rax,0x8000000000000002
  00cdb:    	cmp    rdi,rax
  00cde:    	je     0xd16
  00ce4:    	mov    rax,rdi
  00ce7:    	sar    rax,0x3f
  00ceb:    	add    rax,0x2
  00cef:    	and    rdi,0xfffffffffffffffc
  00cf3:    	or     rdi,rax
  00cf6:    	rol    rdi,0x3d
  00cfa:    	movq   xmm6,rdi
  00cff:    	jmp    0xd16
  00d04:    	call   0xfffd2b80
  00d09:    	test   rax,rax
  00d0c:    	je     0x2ca6e
  00d12:    	movq   xmm6,xmm0
  00d16:    	ucomisd xmm6,xmm5
  00d1a:    	jbe    0x2cb0b
:00074 %3 = 1: i32
  00d20: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]                         [Array][Integer]
  00d28:    	sub    rsp,0x20
  00d2c:    	movq   QWORD PTR [rsp],xmm2
  00d31:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d37:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d3d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d43:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d47:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d4b:    	mov    rdi,rbx
  00d4e:    	mov    rsi,r12
  00d51: 31 	movabs r8,0x563184c9e498
  00d5b: 31 	movabs rax,0x5631840b8230
  00d65:    	call   rax
  00d67:    	movq   xmm2,QWORD PTR [rsp]
  00d6c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d72:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d78:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d7e:    	add    rsp,0x20
  00d82: 31 	movabs r13,0x563184c9e4a0
  00d8c:    	test   rax,rax
  00d8f:    	je     0xfffd2b47
  00d95:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00d99: 00 	movq   xmm5,QWORD PTR [rip+0x10eb]        # 0x1e8c
  00da1: 00 	movabs rax,0xff80000000000002
  00dab:    	mov    QWORD PTR [rbp-0x48],rax
:00077 _ = %3.call z=(%4; 1)                [Vec]
  00daf:    	mov    rdi,QWORD PTR [rbp-0x40]
  00db3: 00 	test   rdi,0x7
  00dba:    	jne    0x2ca7d
  00dc0:    	cmp    DWORD PTR [rdi+0x4],0x28
  00dc4:    	jne    0x2ca7d
  00dca: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4854],0x26        # 0xfffd5625
  00dd1:    	jne    0x2ca7d
  00dd7:    	mov    esi,DWORD PTR [rip+0x10bb]        # 0x1e98
  00ddd:    	cmp    esi,0xffffffff
  00de0:    	je     0x2ca8c
  00de6:    	cmp    WORD PTR [rdi+0x2],0x3
  00deb:    	jne    0xe08
  00df1:    	cmp    esi,0x6
  00df4:    	jge    0xe08
  00dfa:    	mov    rax,QWORD PTR [rbp-0x48]
  00dfe:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e03:    	jmp    0xe61
  00e08:    	sub    rsp,0x20
  00e0c:    	movq   QWORD PTR [rsp],xmm2
  00e11:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e17:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e1d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e23:    	mov    rdx,QWORD PTR [rbp-0x48]
  00e27: 31 	movabs rax,0x5631840539e0
  00e31:    	call   rax
  00e33:    	movq   xmm2,QWORD PTR [rsp]
  00e38:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e3e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e44:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e4a:    	add    rsp,0x20
  00e4e: 31 	movabs r13,0x563184c9e4d0
  00e58:    	test   rax,rax
  00e5b:    	je     0xfffd2b47
:00078 
:00080 br =>:00087
  00e61:    	jmp    0x2cc3e
:00081 %3 = 1: i32
  00e66: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00e6e:    	sub    rsp,0x20
  00e72:    	movq   QWORD PTR [rsp],xmm2
  00e77:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e7d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e83:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e89:    	mov    rdx,QWORD PTR [rbp-0x30]
  00e8d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00e91:    	mov    rdi,rbx
  00e94:    	mov    rsi,r12
  00e97: 31 	movabs r8,0x563184c9e508
  00ea1: 31 	movabs rax,0x5631840b8230
  00eab:    	call   rax
  00ead:    	movq   xmm2,QWORD PTR [rsp]
  00eb2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00eb8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ebe:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ec4:    	add    rsp,0x20
  00ec8: 31 	movabs r13,0x563184c9e510
  00ed2:    	test   rax,rax
  00ed5:    	je     0xfffd2b47
  00edb:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00edf: 00 	movq   xmm5,QWORD PTR [rip+0xfb5]        # 0x1e9c
  00ee7: 00 	movabs rax,0xff80000000000002
  00ef1:    	mov    QWORD PTR [rbp-0x48],rax
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
  00ef5: 01 	sub    DWORD PTR [rip+0xfa8],0x1        # 0x1ea4
  00efc:    	je     0x2cb33
  00f02:    	sub    rsp,0x20
  00f06:    	movq   QWORD PTR [rsp],xmm2
  00f0b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f11:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f17:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f1d:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f21: 31 	movabs rax,0x5631840958d0
  00f2b:    	call   rax
  00f2d:    	mov    r15d,eax
  00f30: 00 	cmp    r15d,DWORD PTR [rip+0xf75]        # 0x1eac
  00f37:    	jne    0x2cb55
  00f3d:    	mov    eax,DWORD PTR [rip+0xfffffffffffd46e2]        # 0xfffd5625
  00f43:    	cmp    DWORD PTR [rip+0xf5f],eax        # 0x1ea8
  00f49:    	jne    0x2cb55
  00f4f:    	mov    rax,QWORD PTR [rbx]
  00f52:    	lea    rdi,[rsp-0x18]
  00f57:    	mov    QWORD PTR [rdi],rax
  00f5a:    	mov    QWORD PTR [rbx],rdi
  00f5d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f66:    	mov    QWORD PTR [rsp-0x38],rcx
  00f6b:    	mov    rax,QWORD PTR [rbp-0x40]
  00f6f:    	mov    QWORD PTR [rsp-0x38],rax
  00f74: 00 	mov    rdi,0x1
  00f7b:    	mov    rax,QWORD PTR [rbp-0x48]
  00f7f:    	mov    QWORD PTR [rsp-0x40],rax
  00f84: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f8d: 00 	movabs rax,0x0
  00f97:    	mov    QWORD PTR [rsp-0x28],rax
  00f9c: 00 	movabs r13,0x0
  00fa6:    	call   0xfffd2b0c
  00fab:    	lea    rdi,[rbp-0x8]
  00faf:    	mov    QWORD PTR [rbx],rdi
  00fb2:    	movq   xmm2,QWORD PTR [rsp]
  00fb7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fbd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fc3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fc9:    	add    rsp,0x20
  00fcd:    	test   rax,rax
  00fd0:    	je     0x2cbc1
:00085 
:00087 %3 = 0: i32
  00fd6: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  00fde: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  00fe6:    	sub    rsp,0x20
  00fea:    	movq   QWORD PTR [rsp],xmm2
  00fef:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ff5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ffb:    	movq   QWORD PTR [rsp+0x18],xmm5
  01001:    	mov    rdx,QWORD PTR [rbp-0x30]
  01005:    	mov    rcx,QWORD PTR [rbp-0x50]
  01009:    	mov    rdi,rbx
  0100c:    	mov    rsi,r12
  0100f: 31 	movabs r8,0x563184c9e578
  01019: 31 	movabs rax,0x5631840b8230
  01023:    	call   rax
  01025:    	movq   xmm2,QWORD PTR [rsp]
  0102a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01030:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01036:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0103c:    	add    rsp,0x20
  01040: 31 	movabs r13,0x563184c9e580
  0104a:    	test   rax,rax
  0104d:    	je     0xfffd2b47
  01053:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  01057: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  0105f:    	sub    rsp,0x20
  01063:    	movq   QWORD PTR [rsp],xmm3
  01068:    	movq   QWORD PTR [rsp+0x8],xmm4
  0106e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01074:    	mov    rdx,QWORD PTR [rbp-0x30]
  01078:    	mov    rcx,QWORD PTR [rbp-0x58]
  0107c:    	mov    rdi,rbx
  0107f:    	mov    rsi,r12
  01082: 31 	movabs r8,0x563184c9e598
  0108c: 31 	movabs rax,0x5631840b8230
  01096:    	call   rax
  01098:    	movq   xmm3,QWORD PTR [rsp]
  0109d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010a3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010a9:    	add    rsp,0x20
  010ad: 31 	movabs r13,0x563184c9e5a0
  010b7:    	test   rax,rax
  010ba:    	je     0xfffd2b47
  010c0:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  010c4:    	mov    rdi,QWORD PTR [rbp-0x50]
  010c8: 00 	test   rdi,0x7
  010cf:    	jne    0x2cbd0
  010d5:    	cmp    DWORD PTR [rdi+0x4],0x28
  010d9:    	jne    0x2cbd0
  010df: 26 	cmp    DWORD PTR [rip+0xfffffffffffd453f],0x26        # 0xfffd5625
  010e6:    	jne    0x2cbd0
  010ec:    	sub    rsp,0x10
  010f0:    	movq   QWORD PTR [rsp],xmm3
  010f5:    	movq   QWORD PTR [rsp+0x8],xmm4
  010fb:    	mov    rax,QWORD PTR [rbx]
  010fe:    	lea    rdi,[rsp-0x18]
  01103:    	mov    QWORD PTR [rdi],rax
  01106:    	mov    QWORD PTR [rbx],rdi
  01109: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01112:    	mov    QWORD PTR [rsp-0x38],rcx
  01117:    	mov    rax,QWORD PTR [rbp-0x50]
  0111b:    	mov    QWORD PTR [rsp-0x38],rax
  01120: 00 	mov    rdi,0x1
  01127:    	mov    rax,QWORD PTR [rbp-0x58]
  0112b:    	mov    QWORD PTR [rsp-0x40],rax
  01130: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01139: 09 	movabs rax,0x900000040
  01143:    	mov    QWORD PTR [rsp-0x28],rax
  01148: 31 	movabs r13,0x563184c82c10
  01152:    	call   0xfffdf139
  01157:    	lea    rdi,[rbp-0x8]
  0115b:    	mov    QWORD PTR [rbx],rdi
  0115e:    	movq   xmm3,QWORD PTR [rsp]
  01163:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01169:    	add    rsp,0x10
  0116d: 31 	movabs r13,0x563184c9e5c0
  01177:    	test   rax,rax
  0117a:    	je     0xfffd2b47
  01180:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  01184:    	sub    rsp,0x10
  01188:    	movq   QWORD PTR [rsp],xmm3
  0118d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01193:    	mov    rdx,QWORD PTR [rbp-0x30]
  01197:    	mov    rcx,QWORD PTR [rbp-0x40]
  0119b:    	mov    r8,QWORD PTR [rbp-0x48]
  0119f:    	mov    rdi,rbx
  011a2:    	mov    rsi,r12
  011a5: 31 	movabs rax,0x5631840b8360
  011af:    	call   rax
  011b1:    	movq   xmm3,QWORD PTR [rsp]
  011b6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011bc:    	add    rsp,0x10
  011c0: 31 	movabs r13,0x563184c9e5e0
  011ca:    	test   rax,rax
  011cd:    	je     0xfffd2b47
:00096 %3 = 0: i32
  011d3: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  011db: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  011e3:    	sub    rsp,0x10
  011e7:    	movq   QWORD PTR [rsp],xmm3
  011ec:    	movq   QWORD PTR [rsp+0x8],xmm4
  011f2:    	mov    rdx,QWORD PTR [rbp-0x30]
  011f6:    	mov    rcx,QWORD PTR [rbp-0x50]
  011fa:    	mov    rdi,rbx
  011fd:    	mov    rsi,r12
  01200: 31 	movabs r8,0x563184c9e608
  0120a: 31 	movabs rax,0x5631840b8230
  01214:    	call   rax
  01216:    	movq   xmm3,QWORD PTR [rsp]
  0121b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01221:    	add    rsp,0x10
  01225: 31 	movabs r13,0x563184c9e610
  0122f:    	test   rax,rax
  01232:    	je     0xfffd2b47
  01238:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  0123c:    	mov    rdi,QWORD PTR [rbp-0x50]
  01240: 00 	test   rdi,0x7
  01247:    	jne    0x2cbdf
  0124d:    	cmp    DWORD PTR [rdi+0x4],0x28
  01251:    	jne    0x2cbdf
  01257: 26 	cmp    DWORD PTR [rip+0xfffffffffffd43c7],0x26        # 0xfffd5625
  0125e:    	jne    0x2cbdf
  01264:    	sub    rsp,0x10
  01268:    	movq   QWORD PTR [rsp],xmm3
  0126d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01273:    	mov    rax,QWORD PTR [rbx]
  01276:    	lea    rdi,[rsp-0x18]
  0127b:    	mov    QWORD PTR [rdi],rax
  0127e:    	mov    QWORD PTR [rbx],rdi
  01281: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0128a:    	mov    QWORD PTR [rsp-0x38],rcx
  0128f:    	mov    rax,QWORD PTR [rbp-0x50]
  01293:    	mov    QWORD PTR [rsp-0x38],rax
  01298: 00 	mov    rdi,0x0
  0129f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012a8: 07 	movabs rax,0x1000700000043
  012b2:    	mov    QWORD PTR [rsp-0x28],rax
  012b7: 31 	movabs r13,0x563184c828e0
  012c1:    	call   0xfffd5f1c
  012c6:    	lea    rdi,[rbp-0x8]
  012ca:    	mov    QWORD PTR [rbx],rdi
  012cd:    	movq   xmm3,QWORD PTR [rsp]
  012d2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012d8:    	add    rsp,0x10
  012dc: 31 	movabs r13,0x563184c9e630
  012e6:    	test   rax,rax
  012e9:    	je     0xfffd2b47
  012ef:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  012f3:    	sub    rsp,0x10
  012f7:    	movq   QWORD PTR [rsp],xmm3
  012fc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01302:    	mov    rdx,QWORD PTR [rbp-0x30]
  01306:    	mov    rcx,QWORD PTR [rbp-0x40]
  0130a:    	mov    r8,QWORD PTR [rbp-0x48]
  0130e:    	mov    rdi,rbx
  01311:    	mov    rsi,r12
  01314: 31 	movabs rax,0x5631840b8360
  0131e:    	call   rax
  01320:    	movq   xmm3,QWORD PTR [rsp]
  01325:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0132b:    	add    rsp,0x10
  0132f: 31 	movabs r13,0x563184c9e650
  01339:    	test   rax,rax
  0133c:    	je     0xfffd2b47
:00103 %3 = 1: i32
  01342: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  0134a: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01352:    	sub    rsp,0x10
  01356:    	movq   QWORD PTR [rsp],xmm3
  0135b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01361:    	mov    rdx,QWORD PTR [rbp-0x30]
  01365:    	mov    rcx,QWORD PTR [rbp-0x50]
  01369:    	mov    rdi,rbx
  0136c:    	mov    rsi,r12
  0136f: 31 	movabs r8,0x563184c9e678
  01379: 31 	movabs rax,0x5631840b8230
  01383:    	call   rax
  01385:    	movq   xmm3,QWORD PTR [rsp]
  0138a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01390:    	add    rsp,0x10
  01394: 31 	movabs r13,0x563184c9e680
  0139e:    	test   rax,rax
  013a1:    	je     0xfffd2b47
  013a7:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  013ab: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  013b3:    	sub    rsp,0x10
  013b7:    	movq   QWORD PTR [rsp],xmm3
  013bc:    	movq   QWORD PTR [rsp+0x8],xmm4
  013c2:    	mov    rdx,QWORD PTR [rbp-0x30]
  013c6:    	mov    rcx,QWORD PTR [rbp-0x58]
  013ca:    	mov    rdi,rbx
  013cd:    	mov    rsi,r12
  013d0: 31 	movabs r8,0x563184c9e698
  013da: 31 	movabs rax,0x5631840b8230
  013e4:    	call   rax
  013e6:    	movq   xmm3,QWORD PTR [rsp]
  013eb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013f1:    	add    rsp,0x10
  013f5: 31 	movabs r13,0x563184c9e6a0
  013ff:    	test   rax,rax
  01402:    	je     0xfffd2b47
  01408:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  0140c:    	mov    rdi,QWORD PTR [rbp-0x50]
  01410: 00 	test   rdi,0x7
  01417:    	jne    0x2cbee
  0141d:    	cmp    DWORD PTR [rdi+0x4],0x28
  01421:    	jne    0x2cbee
  01427: 26 	cmp    DWORD PTR [rip+0xfffffffffffd41f7],0x26        # 0xfffd5625
  0142e:    	jne    0x2cbee
  01434:    	sub    rsp,0x10
  01438:    	movq   QWORD PTR [rsp],xmm3
  0143d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01443:    	mov    rax,QWORD PTR [rbx]
  01446:    	lea    rdi,[rsp-0x18]
  0144b:    	mov    QWORD PTR [rdi],rax
  0144e:    	mov    QWORD PTR [rbx],rdi
  01451: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0145a:    	mov    QWORD PTR [rsp-0x38],rcx
  0145f:    	mov    rax,QWORD PTR [rbp-0x50]
  01463:    	mov    QWORD PTR [rsp-0x38],rax
  01468: 00 	mov    rdi,0x1
  0146f:    	mov    rax,QWORD PTR [rbp-0x58]
  01473:    	mov    QWORD PTR [rsp-0x40],rax
  01478: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01481: 09 	movabs rax,0x900000040
  0148b:    	mov    QWORD PTR [rsp-0x28],rax
  01490: 31 	movabs r13,0x563184c82c10
  0149a:    	call   0xfffdf139
  0149f:    	lea    rdi,[rbp-0x8]
  014a3:    	mov    QWORD PTR [rbx],rdi
  014a6:    	movq   xmm3,QWORD PTR [rsp]
  014ab:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014b1:    	add    rsp,0x10
  014b5: 31 	movabs r13,0x563184c9e6c0
  014bf:    	test   rax,rax
  014c2:    	je     0xfffd2b47
  014c8:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  014cc:    	sub    rsp,0x10
  014d0:    	movq   QWORD PTR [rsp],xmm3
  014d5:    	movq   QWORD PTR [rsp+0x8],xmm4
  014db:    	mov    rdx,QWORD PTR [rbp-0x30]
  014df:    	mov    rcx,QWORD PTR [rbp-0x40]
  014e3:    	mov    r8,QWORD PTR [rbp-0x48]
  014e7:    	mov    rdi,rbx
  014ea:    	mov    rsi,r12
  014ed: 31 	movabs rax,0x5631840b8360
  014f7:    	call   rax
  014f9:    	movq   xmm3,QWORD PTR [rsp]
  014fe:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01504:    	add    rsp,0x10
  01508: 31 	movabs r13,0x563184c9e6e0
  01512:    	test   rax,rax
  01515:    	je     0xfffd2b47
:00112 %3 = 1: i32
  0151b: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01523: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  0152b:    	sub    rsp,0x10
  0152f:    	movq   QWORD PTR [rsp],xmm3
  01534:    	movq   QWORD PTR [rsp+0x8],xmm4
  0153a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0153e:    	mov    rcx,QWORD PTR [rbp-0x50]
  01542:    	mov    rdi,rbx
  01545:    	mov    rsi,r12
  01548: 31 	movabs r8,0x563184c9e708
  01552: 31 	movabs rax,0x5631840b8230
  0155c:    	call   rax
  0155e:    	movq   xmm3,QWORD PTR [rsp]
  01563:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01569:    	add    rsp,0x10
  0156d: 31 	movabs r13,0x563184c9e710
  01577:    	test   rax,rax
  0157a:    	je     0xfffd2b47
  01580:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01584:    	mov    rdi,QWORD PTR [rbp-0x50]
  01588: 00 	test   rdi,0x7
  0158f:    	jne    0x2cbfd
  01595:    	cmp    DWORD PTR [rdi+0x4],0x28
  01599:    	jne    0x2cbfd
  0159f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd407f],0x26        # 0xfffd5625
  015a6:    	jne    0x2cbfd
  015ac:    	sub    rsp,0x10
  015b0:    	movq   QWORD PTR [rsp],xmm3
  015b5:    	movq   QWORD PTR [rsp+0x8],xmm4
  015bb:    	mov    rax,QWORD PTR [rbx]
  015be:    	lea    rdi,[rsp-0x18]
  015c3:    	mov    QWORD PTR [rdi],rax
  015c6:    	mov    QWORD PTR [rbx],rdi
  015c9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015d2:    	mov    QWORD PTR [rsp-0x38],rcx
  015d7:    	mov    rax,QWORD PTR [rbp-0x50]
  015db:    	mov    QWORD PTR [rsp-0x38],rax
  015e0: 00 	mov    rdi,0x0
  015e7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015f0: 07 	movabs rax,0x1000700000043
  015fa:    	mov    QWORD PTR [rsp-0x28],rax
  015ff: 31 	movabs r13,0x563184c828e0
  01609:    	call   0xfffd5f1c
  0160e:    	lea    rdi,[rbp-0x8]
  01612:    	mov    QWORD PTR [rbx],rdi
  01615:    	movq   xmm3,QWORD PTR [rsp]
  0161a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01620:    	add    rsp,0x10
  01624: 31 	movabs r13,0x563184c9e730
  0162e:    	test   rax,rax
  01631:    	je     0xfffd2b47
  01637:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  0163b:    	sub    rsp,0x10
  0163f:    	movq   QWORD PTR [rsp],xmm3
  01644:    	movq   QWORD PTR [rsp+0x8],xmm4
  0164a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0164e:    	mov    rcx,QWORD PTR [rbp-0x40]
  01652:    	mov    r8,QWORD PTR [rbp-0x48]
  01656:    	mov    rdi,rbx
  01659:    	mov    rsi,r12
  0165c: 31 	movabs rax,0x5631840b8360
  01666:    	call   rax
  01668:    	movq   xmm3,QWORD PTR [rsp]
  0166d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01673:    	add    rsp,0x10
  01677: 31 	movabs r13,0x563184c9e750
  01681:    	test   rax,rax
  01684:    	je     0xfffd2b47
:00119 %3 = %4
  0168a:    	mov    rax,QWORD PTR [rbp-0x48]
  0168e:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01692:    	mov    rax,QWORD PTR [rbp-0x40]
  01696:    	leave  
  01697:    	ret    
:00087 %3 = 0: i32
  01698: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  016a0: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  016a8:    	sub    rsp,0x20
  016ac:    	movq   QWORD PTR [rsp],xmm2
  016b1:    	movq   QWORD PTR [rsp+0x8],xmm3
  016b7:    	movq   QWORD PTR [rsp+0x10],xmm4
  016bd:    	movq   QWORD PTR [rsp+0x18],xmm5
  016c3:    	mov    rdx,QWORD PTR [rbp-0x30]
  016c7:    	mov    rcx,QWORD PTR [rbp-0x50]
  016cb:    	mov    rdi,rbx
  016ce:    	mov    rsi,r12
  016d1: 31 	movabs r8,0x563184c9e578
  016db: 31 	movabs rax,0x5631840b8230
  016e5:    	call   rax
  016e7:    	movq   xmm2,QWORD PTR [rsp]
  016ec:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016f2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016f8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016fe:    	add    rsp,0x20
  01702: 31 	movabs r13,0x563184c9e580
  0170c:    	test   rax,rax
  0170f:    	je     0xfffd2b47
  01715:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  01719: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  01721:    	sub    rsp,0x20
  01725:    	movq   QWORD PTR [rsp],xmm3
  0172a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01730:    	movq   QWORD PTR [rsp+0x10],xmm5
  01736:    	mov    rdx,QWORD PTR [rbp-0x30]
  0173a:    	mov    rcx,QWORD PTR [rbp-0x58]
  0173e:    	mov    rdi,rbx
  01741:    	mov    rsi,r12
  01744: 31 	movabs r8,0x563184c9e598
  0174e: 31 	movabs rax,0x5631840b8230
  01758:    	call   rax
  0175a:    	movq   xmm3,QWORD PTR [rsp]
  0175f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01765:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0176b:    	add    rsp,0x20
  0176f: 31 	movabs r13,0x563184c9e5a0
  01779:    	test   rax,rax
  0177c:    	je     0xfffd2b47
  01782:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  01786:    	mov    rdi,QWORD PTR [rbp-0x50]
  0178a: 00 	test   rdi,0x7
  01791:    	jne    0x2cc57
  01797:    	cmp    DWORD PTR [rdi+0x4],0x28
  0179b:    	jne    0x2cc57
  017a1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3e7d],0x26        # 0xfffd5625
  017a8:    	jne    0x2cc57
  017ae:    	sub    rsp,0x10
  017b2:    	movq   QWORD PTR [rsp],xmm3
  017b7:    	movq   QWORD PTR [rsp+0x8],xmm4
  017bd:    	mov    rax,QWORD PTR [rbx]
  017c0:    	lea    rdi,[rsp-0x18]
  017c5:    	mov    QWORD PTR [rdi],rax
  017c8:    	mov    QWORD PTR [rbx],rdi
  017cb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017d4:    	mov    QWORD PTR [rsp-0x38],rcx
  017d9:    	mov    rax,QWORD PTR [rbp-0x50]
  017dd:    	mov    QWORD PTR [rsp-0x38],rax
  017e2: 00 	mov    rdi,0x1
  017e9:    	mov    rax,QWORD PTR [rbp-0x58]
  017ed:    	mov    QWORD PTR [rsp-0x40],rax
  017f2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017fb: 09 	movabs rax,0x900000040
  01805:    	mov    QWORD PTR [rsp-0x28],rax
  0180a: 31 	movabs r13,0x563184c82c10
  01814:    	call   0xfffdf139
  01819:    	lea    rdi,[rbp-0x8]
  0181d:    	mov    QWORD PTR [rbx],rdi
  01820:    	movq   xmm3,QWORD PTR [rsp]
  01825:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0182b:    	add    rsp,0x10
  0182f: 31 	movabs r13,0x563184c9e5c0
  01839:    	test   rax,rax
  0183c:    	je     0xfffd2b47
  01842:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  01846:    	sub    rsp,0x10
  0184a:    	movq   QWORD PTR [rsp],xmm3
  0184f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01855:    	mov    rdx,QWORD PTR [rbp-0x30]
  01859:    	mov    rcx,QWORD PTR [rbp-0x40]
  0185d:    	mov    r8,QWORD PTR [rbp-0x48]
  01861:    	mov    rdi,rbx
  01864:    	mov    rsi,r12
  01867: 31 	movabs rax,0x5631840b8360
  01871:    	call   rax
  01873:    	movq   xmm3,QWORD PTR [rsp]
  01878:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0187e:    	add    rsp,0x10
  01882: 31 	movabs r13,0x563184c9e5e0
  0188c:    	test   rax,rax
  0188f:    	je     0xfffd2b47
:00096 %3 = 0: i32
  01895: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  0189d: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  018a5:    	sub    rsp,0x10
  018a9:    	movq   QWORD PTR [rsp],xmm3
  018ae:    	movq   QWORD PTR [rsp+0x8],xmm4
  018b4:    	mov    rdx,QWORD PTR [rbp-0x30]
  018b8:    	mov    rcx,QWORD PTR [rbp-0x50]
  018bc:    	mov    rdi,rbx
  018bf:    	mov    rsi,r12
  018c2: 31 	movabs r8,0x563184c9e608
  018cc: 31 	movabs rax,0x5631840b8230
  018d6:    	call   rax
  018d8:    	movq   xmm3,QWORD PTR [rsp]
  018dd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018e3:    	add    rsp,0x10
  018e7: 31 	movabs r13,0x563184c9e610
  018f1:    	test   rax,rax
  018f4:    	je     0xfffd2b47
  018fa:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  018fe:    	mov    rdi,QWORD PTR [rbp-0x50]
  01902: 00 	test   rdi,0x7
  01909:    	jne    0x2cc66
  0190f:    	cmp    DWORD PTR [rdi+0x4],0x28
  01913:    	jne    0x2cc66
  01919: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3d05],0x26        # 0xfffd5625
  01920:    	jne    0x2cc66
  01926:    	sub    rsp,0x10
  0192a:    	movq   QWORD PTR [rsp],xmm3
  0192f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01935:    	mov    rax,QWORD PTR [rbx]
  01938:    	lea    rdi,[rsp-0x18]
  0193d:    	mov    QWORD PTR [rdi],rax
  01940:    	mov    QWORD PTR [rbx],rdi
  01943: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0194c:    	mov    QWORD PTR [rsp-0x38],rcx
  01951:    	mov    rax,QWORD PTR [rbp-0x50]
  01955:    	mov    QWORD PTR [rsp-0x38],rax
  0195a: 00 	mov    rdi,0x0
  01961: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0196a: 07 	movabs rax,0x1000700000043
  01974:    	mov    QWORD PTR [rsp-0x28],rax
  01979: 31 	movabs r13,0x563184c828e0
  01983:    	call   0xfffd5f1c
  01988:    	lea    rdi,[rbp-0x8]
  0198c:    	mov    QWORD PTR [rbx],rdi
  0198f:    	movq   xmm3,QWORD PTR [rsp]
  01994:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0199a:    	add    rsp,0x10
  0199e: 31 	movabs r13,0x563184c9e630
  019a8:    	test   rax,rax
  019ab:    	je     0xfffd2b47
  019b1:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  019b5:    	sub    rsp,0x10
  019b9:    	movq   QWORD PTR [rsp],xmm3
  019be:    	movq   QWORD PTR [rsp+0x8],xmm4
  019c4:    	mov    rdx,QWORD PTR [rbp-0x30]
  019c8:    	mov    rcx,QWORD PTR [rbp-0x40]
  019cc:    	mov    r8,QWORD PTR [rbp-0x48]
  019d0:    	mov    rdi,rbx
  019d3:    	mov    rsi,r12
  019d6: 31 	movabs rax,0x5631840b8360
  019e0:    	call   rax
  019e2:    	movq   xmm3,QWORD PTR [rsp]
  019e7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ed:    	add    rsp,0x10
  019f1: 31 	movabs r13,0x563184c9e650
  019fb:    	test   rax,rax
  019fe:    	je     0xfffd2b47
:00103 %3 = 1: i32
  01a04: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  01a0c: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01a14:    	sub    rsp,0x10
  01a18:    	movq   QWORD PTR [rsp],xmm3
  01a1d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a23:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a27:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a2b:    	mov    rdi,rbx
  01a2e:    	mov    rsi,r12
  01a31: 31 	movabs r8,0x563184c9e678
  01a3b: 31 	movabs rax,0x5631840b8230
  01a45:    	call   rax
  01a47:    	movq   xmm3,QWORD PTR [rsp]
  01a4c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a52:    	add    rsp,0x10
  01a56: 31 	movabs r13,0x563184c9e680
  01a60:    	test   rax,rax
  01a63:    	je     0xfffd2b47
  01a69:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  01a6d: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  01a75:    	sub    rsp,0x10
  01a79:    	movq   QWORD PTR [rsp],xmm3
  01a7e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a84:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a88:    	mov    rcx,QWORD PTR [rbp-0x58]
  01a8c:    	mov    rdi,rbx
  01a8f:    	mov    rsi,r12
  01a92: 31 	movabs r8,0x563184c9e698
  01a9c: 31 	movabs rax,0x5631840b8230
  01aa6:    	call   rax
  01aa8:    	movq   xmm3,QWORD PTR [rsp]
  01aad:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ab3:    	add    rsp,0x10
  01ab7: 31 	movabs r13,0x563184c9e6a0
  01ac1:    	test   rax,rax
  01ac4:    	je     0xfffd2b47
  01aca:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  01ace:    	mov    rdi,QWORD PTR [rbp-0x50]
  01ad2: 00 	test   rdi,0x7
  01ad9:    	jne    0x2cc75
  01adf:    	cmp    DWORD PTR [rdi+0x4],0x28
  01ae3:    	jne    0x2cc75
  01ae9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3b35],0x26        # 0xfffd5625
  01af0:    	jne    0x2cc75
  01af6:    	sub    rsp,0x10
  01afa:    	movq   QWORD PTR [rsp],xmm3
  01aff:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b05:    	mov    rax,QWORD PTR [rbx]
  01b08:    	lea    rdi,[rsp-0x18]
  01b0d:    	mov    QWORD PTR [rdi],rax
  01b10:    	mov    QWORD PTR [rbx],rdi
  01b13: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b1c:    	mov    QWORD PTR [rsp-0x38],rcx
  01b21:    	mov    rax,QWORD PTR [rbp-0x50]
  01b25:    	mov    QWORD PTR [rsp-0x38],rax
  01b2a: 00 	mov    rdi,0x1
  01b31:    	mov    rax,QWORD PTR [rbp-0x58]
  01b35:    	mov    QWORD PTR [rsp-0x40],rax
  01b3a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b43: 09 	movabs rax,0x900000040
  01b4d:    	mov    QWORD PTR [rsp-0x28],rax
  01b52: 31 	movabs r13,0x563184c82c10
  01b5c:    	call   0xfffdf139
  01b61:    	lea    rdi,[rbp-0x8]
  01b65:    	mov    QWORD PTR [rbx],rdi
  01b68:    	movq   xmm3,QWORD PTR [rsp]
  01b6d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b73:    	add    rsp,0x10
  01b77: 31 	movabs r13,0x563184c9e6c0
  01b81:    	test   rax,rax
  01b84:    	je     0xfffd2b47
  01b8a:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  01b8e:    	sub    rsp,0x10
  01b92:    	movq   QWORD PTR [rsp],xmm3
  01b97:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b9d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01ba1:    	mov    rcx,QWORD PTR [rbp-0x40]
  01ba5:    	mov    r8,QWORD PTR [rbp-0x48]
  01ba9:    	mov    rdi,rbx
  01bac:    	mov    rsi,r12
  01baf: 31 	movabs rax,0x5631840b8360
  01bb9:    	call   rax
  01bbb:    	movq   xmm3,QWORD PTR [rsp]
  01bc0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bc6:    	add    rsp,0x10
  01bca: 31 	movabs r13,0x563184c9e6e0
  01bd4:    	test   rax,rax
  01bd7:    	je     0xfffd2b47
:00112 %3 = 1: i32
  01bdd: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01be5: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  01bed:    	sub    rsp,0x10
  01bf1:    	movq   QWORD PTR [rsp],xmm3
  01bf6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bfc:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c00:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c04:    	mov    rdi,rbx
  01c07:    	mov    rsi,r12
  01c0a: 31 	movabs r8,0x563184c9e708
  01c14: 31 	movabs rax,0x5631840b8230
  01c1e:    	call   rax
  01c20:    	movq   xmm3,QWORD PTR [rsp]
  01c25:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c2b:    	add    rsp,0x10
  01c2f: 31 	movabs r13,0x563184c9e710
  01c39:    	test   rax,rax
  01c3c:    	je     0xfffd2b47
  01c42:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01c46:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c4a: 00 	test   rdi,0x7
  01c51:    	jne    0x2cc84
  01c57:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c5b:    	jne    0x2cc84
  01c61: 26 	cmp    DWORD PTR [rip+0xfffffffffffd39bd],0x26        # 0xfffd5625
  01c68:    	jne    0x2cc84
  01c6e:    	sub    rsp,0x10
  01c72:    	movq   QWORD PTR [rsp],xmm3
  01c77:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c7d:    	mov    rax,QWORD PTR [rbx]
  01c80:    	lea    rdi,[rsp-0x18]
  01c85:    	mov    QWORD PTR [rdi],rax
  01c88:    	mov    QWORD PTR [rbx],rdi
  01c8b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01c94:    	mov    QWORD PTR [rsp-0x38],rcx
  01c99:    	mov    rax,QWORD PTR [rbp-0x50]
  01c9d:    	mov    QWORD PTR [rsp-0x38],rax
  01ca2: 00 	mov    rdi,0x0
  01ca9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01cb2: 07 	movabs rax,0x1000700000043
  01cbc:    	mov    QWORD PTR [rsp-0x28],rax
  01cc1: 31 	movabs r13,0x563184c828e0
  01ccb:    	call   0xfffd5f1c
  01cd0:    	lea    rdi,[rbp-0x8]
  01cd4:    	mov    QWORD PTR [rbx],rdi
  01cd7:    	movq   xmm3,QWORD PTR [rsp]
  01cdc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ce2:    	add    rsp,0x10
  01ce6: 31 	movabs r13,0x563184c9e730
  01cf0:    	test   rax,rax
  01cf3:    	je     0xfffd2b47
  01cf9:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  01cfd:    	sub    rsp,0x10
  01d01:    	movq   QWORD PTR [rsp],xmm3
  01d06:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d0c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d10:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d14:    	mov    r8,QWORD PTR [rbp-0x48]
  01d18:    	mov    rdi,rbx
  01d1b:    	mov    rsi,r12
  01d1e: 31 	movabs rax,0x5631840b8360
  01d28:    	call   rax
  01d2a:    	movq   xmm3,QWORD PTR [rsp]
  01d2f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d35:    	add    rsp,0x10
  01d39: 31 	movabs r13,0x563184c9e750
  01d43:    	test   rax,rax
  01d46:    	je     0xfffd2b47
:00119 %3 = %4
  01d4c:    	mov    rax,QWORD PTR [rbp-0x48]
  01d50:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01d54:    	mov    rax,QWORD PTR [rbp-0x40]
  01d58:    	leave  
  01d59:    	ret    
==> start whole compile: otherBasis FuncId(59) self_class:Scene start:[00000] bytecode:0x563184c9dfe0
<== finished compile. elapsed:196.1µs
offset:Pos(193444) code: 7471 bytes  data: 337 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x2ade3
  00038:    	cmp    DWORD PTR [rdi+0x4],0x32
  0003c:    	jne    0x2ade3
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd372b]        # 0xfffd377c
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1cf4]        # 0x1d4c
  00058:    	jne    0x2adf2
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1cd7]        # 0x1d3c
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2ae38
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0007e:    	jne    0x2ae38
  00084: 26 	cmp    DWORD PTR [rip+0xfffffffffffd36ea],0x26        # 0xfffd3775
  0008b:    	jne    0x2ae38
  00091:    	mov    esi,DWORD PTR [rip+0x1cc1]        # 0x1d58
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x2ae47
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 31 	movabs rax,0x563184053740
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00003 
:00005 %7 = %2.call y()                     [Vec]
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x2ae70
  000df:    	cmp    DWORD PTR [rdi+0x4],0x28
  000e3:    	jne    0x2ae70
  000e9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3685],0x26        # 0xfffd3775
  000f0:    	jne    0x2ae70
  000f6:    	mov    esi,DWORD PTR [rip+0x1c64]        # 0x1d60
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x2ae7f
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 31 	movabs rax,0x563184053740
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00006 
:00008 %8 = %2.call z()                     [Vec]
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x2aea8
  00144:    	cmp    DWORD PTR [rdi+0x4],0x28
  00148:    	jne    0x2aea8
  0014e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3620],0x26        # 0xfffd3775
  00155:    	jne    0x2aea8
  0015b:    	mov    esi,DWORD PTR [rip+0x1c07]        # 0x1d68
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x2aeb7
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 31 	movabs rax,0x563184053740
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00009 
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x2aee0
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ad:    	jne    0x2aee0
  001b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd35bb],0x26        # 0xfffd3775
  001ba:    	jne    0x2aee0
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x2aeef
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 31 	movabs r13,0x563184c9e0b0
  00207:    	test   rax,rax
  0020a:    	je     0xfffd0c97
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %1:.[%3:] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 31 	movabs rax,0x5631840b8360
  00230:    	call   rax
  00232: 31 	movabs r13,0x563184c9e0d0
  0023c:    	test   rax,rax
  0023f:    	je     0xfffd0c97
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd3528]        # 0xfffd377c
  00254: 00 	cmp    rax,QWORD PTR [rip+0x1b21]        # 0x1d7c
  0025b:    	jne    0x2af21
  00261: 00 	mov    rax,QWORD PTR [rip+0x1b04]        # 0x1d6c
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x1b18]        # 0x1d8c
  00274: 00 	movabs rax,0x8000000000000002
  0027e:    	mov    QWORD PTR [rbp-0x58],rax
:00018 %7 = literal[0.0]
  00282: 00 	movq   xmm3,QWORD PTR [rip+0x1b12]        # 0x1d9c
  0028a: 00 	movabs rax,0x8000000000000002
  00294:    	mov    QWORD PTR [rbp-0x60],rax
:00019 %8 = literal[0.0]
  00298: 00 	movq   xmm4,QWORD PTR [rip+0x1b0c]        # 0x1dac
  002a0: 00 	movabs rax,0x8000000000000002
  002aa:    	mov    QWORD PTR [rbp-0x68],rax
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002ae:    	mov    rdi,QWORD PTR [rbp-0x50]
  002b2: 00 	test   rdi,0x7
  002b9:    	jne    0x2af67
  002bf:    	cmp    DWORD PTR [rdi+0x4],0x29
  002c3:    	jne    0x2af67
  002c9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd34a5],0x26        # 0xfffd3775
  002d0:    	jne    0x2af67
  002d6: 00 	mov    r9,0x0
  002dd:    	sub    rsp,0x20
  002e1:    	movq   QWORD PTR [rsp],xmm2
  002e6:    	movq   QWORD PTR [rsp+0x8],xmm3
  002ec:    	movq   QWORD PTR [rsp+0x10],xmm4
  002f2:    	mov    rdx,rdi
  002f5:    	mov    rax,QWORD PTR [rbx]
  002f8:    	lea    rdi,[rsp-0x18]
  002fd:    	mov    QWORD PTR [rdi],rax
  00300:    	mov    QWORD PTR [rbx],rdi
  00303: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0030c:    	mov    QWORD PTR [rsp-0x38],rcx
  00311:    	lea    rcx,[rbp-0x58]
  00315: 00 	mov    r8,0x3
  0031c:    	call   0x2af76
  00321:    	lea    rdi,[rbp-0x8]
  00325:    	mov    QWORD PTR [rbx],rdi
  00328:    	movq   xmm2,QWORD PTR [rsp]
  0032d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00333:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00339:    	add    rsp,0x20
  0033d: 31 	movabs r13,0x563184c9e140
  00347:    	test   rax,rax
  0034a:    	je     0xfffd0c97
  00350:    	mov    QWORD PTR [rbp-0x48],rax
:00021 
:00023 %1:.[%3:] = %4
  00354:    	sub    rsp,0x20
  00358:    	movq   QWORD PTR [rsp],xmm2
  0035d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00363:    	movq   QWORD PTR [rsp+0x10],xmm4
  00369:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00371:    	mov    r8,QWORD PTR [rbp-0x48]
  00375:    	mov    rdi,rbx
  00378:    	mov    rsi,r12
  0037b: 31 	movabs rax,0x5631840b8360
  00385:    	call   rax
  00387:    	movq   xmm2,QWORD PTR [rsp]
  0038c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00392:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00398:    	add    rsp,0x20
  0039c: 31 	movabs r13,0x563184c9e160
  003a6:    	test   rax,rax
  003a9:    	je     0xfffd0c97
:00024 %3 = %2.call x()                     [Vec]
  003af:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b3: 00 	test   rdi,0x7
  003ba:    	jne    0x2afa8
  003c0:    	cmp    DWORD PTR [rdi+0x4],0x28
  003c4:    	jne    0x2afa8
  003ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffd33a4],0x26        # 0xfffd3775
  003d1:    	jne    0x2afa8
  003d7:    	mov    esi,DWORD PTR [rip+0x19db]        # 0x1db8
  003dd:    	cmp    esi,0xffffffff
  003e0:    	je     0x2afb7
  003e6:    	cmp    WORD PTR [rdi+0x2],0x3
  003eb:    	jne    0x404
  003f1:    	cmp    esi,0x6
  003f4:    	jge    0x404
  003fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003ff:    	jmp    0x43a
  00404:    	sub    rsp,0x20
  00408:    	movq   QWORD PTR [rsp],xmm2
  0040d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00413:    	movq   QWORD PTR [rsp+0x10],xmm4
  00419: 31 	movabs rax,0x563184053740
  00423:    	call   rax
  00425:    	movq   xmm2,QWORD PTR [rsp]
  0042a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00430:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00436:    	add    rsp,0x20
  0043a:    	mov    QWORD PTR [rbp-0x40],rax
:00025 
:00027 %4 = literal[0.6]
  0043e: 00 	movq   xmm5,QWORD PTR [rip+0x1976]        # 0x1dbc
  00446: 99 	movabs rax,0xff1999999999999a
  00450:    	mov    QWORD PTR [rbp-0x48],rax
:00028 _%3 = %3 < %4                        [Float][Float]
:00029 condnotbr _%3 =>:00043
  00454:    	mov    rdi,QWORD PTR [rbp-0x40]
  00458: 00 	test   rdi,0x1
  0045f:    	jne    0x2b00a
  00465: 00 	test   rdi,0x2
  0046c:    	je     0x4a8
  00472:    	xorps  xmm6,xmm6
  00475: 00 	movabs rax,0x8000000000000002
  0047f:    	cmp    rdi,rax
  00482:    	je     0x4ba
  00488:    	mov    rax,rdi
  0048b:    	sar    rax,0x3f
  0048f:    	add    rax,0x2
  00493:    	and    rdi,0xfffffffffffffffc
  00497:    	or     rdi,rax
  0049a:    	rol    rdi,0x3d
  0049e:    	movq   xmm6,rdi
  004a3:    	jmp    0x4ba
  004a8:    	call   0xfffd0cd0
  004ad:    	test   rax,rax
  004b0:    	je     0x2b00a
  004b6:    	movq   xmm6,xmm0
  004ba:    	ucomisd xmm6,xmm5
  004be:    	jae    0x2b10b
:00030 %3 = %2.call x()                     [Vec]
  004c4:    	mov    rdi,QWORD PTR [rbp-0x38]
  004c8: 00 	test   rdi,0x7
  004cf:    	jne    0x2b019
  004d5:    	cmp    DWORD PTR [rdi+0x4],0x28
  004d9:    	jne    0x2b019
  004df: 26 	cmp    DWORD PTR [rip+0xfffffffffffd328f],0x26        # 0xfffd3775
  004e6:    	jne    0x2b019
  004ec:    	mov    esi,DWORD PTR [rip+0x18d6]        # 0x1dc8
  004f2:    	cmp    esi,0xffffffff
  004f5:    	je     0x2b028
  004fb:    	cmp    WORD PTR [rdi+0x2],0x3
  00500:    	jne    0x519
  00506:    	cmp    esi,0x6
  00509:    	jge    0x519
  0050f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00514:    	jmp    0x55b
  00519:    	sub    rsp,0x20
  0051d:    	movq   QWORD PTR [rsp],xmm2
  00522:    	movq   QWORD PTR [rsp+0x8],xmm3
  00528:    	movq   QWORD PTR [rsp+0x10],xmm4
  0052e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00534: 31 	movabs rax,0x563184053740
  0053e:    	call   rax
  00540:    	movq   xmm2,QWORD PTR [rsp]
  00545:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0054b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00551:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00557:    	add    rsp,0x20
  0055b:    	mov    QWORD PTR [rbp-0x40],rax
:00031 
:00033 %4 = literal[-0.6]
  0055f: 00 	movq   xmm5,QWORD PTR [rip+0x1865]        # 0x1dcc
  00567: 99 	movabs rax,0xff1999999999999e
  00571:    	mov    QWORD PTR [rbp-0x48],rax
:00034 _%3 = %3 > %4                        [Float][Float]
:00035 condnotbr _%3 =>:00043
  00575:    	mov    rdi,QWORD PTR [rbp-0x40]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x2b087
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffd0cd0
  005ce:    	test   rax,rax
  005d1:    	je     0x2b087
  005d7:    	movq   xmm6,xmm0
  005db:    	ucomisd xmm6,xmm5
  005df:    	jbe    0x2b124
:00036 %3 = 1: i32
  005e5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]                         [Array][Integer]
  005ed:    	sub    rsp,0x20
  005f1:    	movq   QWORD PTR [rsp],xmm2
  005f6:    	movq   QWORD PTR [rsp+0x8],xmm3
  005fc:    	movq   QWORD PTR [rsp+0x10],xmm4
  00602:    	movq   QWORD PTR [rsp+0x18],xmm5
  00608:    	mov    rdx,QWORD PTR [rbp-0x30]
  0060c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00610:    	mov    rdi,rbx
  00613:    	mov    rsi,r12
  00616: 31 	movabs r8,0x563184c9e238
  00620: 31 	movabs rax,0x5631840b8230
  0062a:    	call   rax
  0062c:    	movq   xmm2,QWORD PTR [rsp]
  00631:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00637:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0063d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00643:    	add    rsp,0x20
  00647: 31 	movabs r13,0x563184c9e240
  00651:    	test   rax,rax
  00654:    	je     0xfffd0c97
  0065a:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  0065e: 00 	movq   xmm5,QWORD PTR [rip+0x1776]        # 0x1ddc
  00666: 00 	movabs rax,0xff80000000000002
  00670:    	mov    QWORD PTR [rbp-0x48],rax
:00039 _ = %3.call x=(%4; 1)                [Vec]
  00674:    	mov    rdi,QWORD PTR [rbp-0x40]
  00678: 00 	test   rdi,0x7
  0067f:    	jne    0x2b096
  00685:    	cmp    DWORD PTR [rdi+0x4],0x28
  00689:    	jne    0x2b096
  0068f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd30df],0x26        # 0xfffd3775
  00696:    	jne    0x2b096
  0069c:    	mov    esi,DWORD PTR [rip+0x1746]        # 0x1de8
  006a2:    	cmp    esi,0xffffffff
  006a5:    	je     0x2b0a5
  006ab:    	cmp    WORD PTR [rdi+0x2],0x3
  006b0:    	jne    0x6cd
  006b6:    	cmp    esi,0x6
  006b9:    	jge    0x6cd
  006bf:    	mov    rax,QWORD PTR [rbp-0x48]
  006c3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006c8:    	jmp    0x726
  006cd:    	sub    rsp,0x20
  006d1:    	movq   QWORD PTR [rsp],xmm2
  006d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  006dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  006e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  006e8:    	mov    rdx,QWORD PTR [rbp-0x48]
  006ec: 31 	movabs rax,0x5631840539e0
  006f6:    	call   rax
  006f8:    	movq   xmm2,QWORD PTR [rsp]
  006fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00703:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00709:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0070f:    	add    rsp,0x20
  00713: 31 	movabs r13,0x563184c9e270
  0071d:    	test   rax,rax
  00720:    	je     0xfffd0c97
:00040 
:00042 br =>:00087
  00726:    	jmp    0x2b567
:00043 %3 = %2.call y()                     [Vec]
  0072b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0072f: 00 	test   rdi,0x7
  00736:    	jne    0x2b13d
  0073c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00740:    	jne    0x2b13d
  00746: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3028],0x26        # 0xfffd3775
  0074d:    	jne    0x2b13d
  00753:    	mov    esi,DWORD PTR [rip+0x1697]        # 0x1df0
  00759:    	cmp    esi,0xffffffff
  0075c:    	je     0x2b14c
  00762:    	cmp    WORD PTR [rdi+0x2],0x3
  00767:    	jne    0x780
  0076d:    	cmp    esi,0x6
  00770:    	jge    0x780
  00776:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0077b:    	jmp    0x7c2
  00780:    	sub    rsp,0x20
  00784:    	movq   QWORD PTR [rsp],xmm2
  00789:    	movq   QWORD PTR [rsp+0x8],xmm3
  0078f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00795:    	movq   QWORD PTR [rsp+0x18],xmm5
  0079b: 31 	movabs rax,0x563184053740
  007a5:    	call   rax
  007a7:    	movq   xmm2,QWORD PTR [rsp]
  007ac:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007b2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007b8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007be:    	add    rsp,0x20
  007c2:    	mov    QWORD PTR [rbp-0x40],rax
:00044 
:00046 %4 = literal[0.6]
  007c6: 00 	movq   xmm5,QWORD PTR [rip+0x162e]        # 0x1dfc
  007ce: 99 	movabs rax,0xff1999999999999a
  007d8:    	mov    QWORD PTR [rbp-0x48],rax
:00047 _%3 = %3 < %4                        [Float][Float]
:00048 condnotbr _%3 =>:00062
  007dc:    	mov    rdi,QWORD PTR [rbp-0x40]
  007e0: 00 	test   rdi,0x1
  007e7:    	jne    0x2b1ab
  007ed: 00 	test   rdi,0x2
  007f4:    	je     0x830
  007fa:    	xorps  xmm6,xmm6
  007fd: 00 	movabs rax,0x8000000000000002
  00807:    	cmp    rdi,rax
  0080a:    	je     0x842
  00810:    	mov    rax,rdi
  00813:    	sar    rax,0x3f
  00817:    	add    rax,0x2
  0081b:    	and    rdi,0xfffffffffffffffc
  0081f:    	or     rdi,rax
  00822:    	rol    rdi,0x3d
  00826:    	movq   xmm6,rdi
  0082b:    	jmp    0x842
  00830:    	call   0xfffd0cd0
  00835:    	test   rax,rax
  00838:    	je     0x2b1ab
  0083e:    	movq   xmm6,xmm0
  00842:    	ucomisd xmm6,xmm5
  00846:    	jae    0x2b2ac
:00049 %3 = %2.call y()                     [Vec]
  0084c:    	mov    rdi,QWORD PTR [rbp-0x38]
  00850: 00 	test   rdi,0x7
  00857:    	jne    0x2b1ba
  0085d:    	cmp    DWORD PTR [rdi+0x4],0x28
  00861:    	jne    0x2b1ba
  00867: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2f07],0x26        # 0xfffd3775
  0086e:    	jne    0x2b1ba
  00874:    	mov    esi,DWORD PTR [rip+0x158e]        # 0x1e08
  0087a:    	cmp    esi,0xffffffff
  0087d:    	je     0x2b1c9
  00883:    	cmp    WORD PTR [rdi+0x2],0x3
  00888:    	jne    0x8a1
  0088e:    	cmp    esi,0x6
  00891:    	jge    0x8a1
  00897:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0089c:    	jmp    0x8e3
  008a1:    	sub    rsp,0x20
  008a5:    	movq   QWORD PTR [rsp],xmm2
  008aa:    	movq   QWORD PTR [rsp+0x8],xmm3
  008b0:    	movq   QWORD PTR [rsp+0x10],xmm4
  008b6:    	movq   QWORD PTR [rsp+0x18],xmm5
  008bc: 31 	movabs rax,0x563184053740
  008c6:    	call   rax
  008c8:    	movq   xmm2,QWORD PTR [rsp]
  008cd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008d3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008d9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008df:    	add    rsp,0x20
  008e3:    	mov    QWORD PTR [rbp-0x40],rax
:00050 
:00052 %4 = literal[-0.6]
  008e7: 00 	movq   xmm5,QWORD PTR [rip+0x151d]        # 0x1e0c
  008ef: 99 	movabs rax,0xff1999999999999e
  008f9:    	mov    QWORD PTR [rbp-0x48],rax
:00053 _%3 = %3 > %4                        [Float][Float]
:00054 condnotbr _%3 =>:00062
  008fd:    	mov    rdi,QWORD PTR [rbp-0x40]
  00901: 00 	test   rdi,0x1
  00908:    	jne    0x2b228
  0090e: 00 	test   rdi,0x2
  00915:    	je     0x951
  0091b:    	xorps  xmm6,xmm6
  0091e: 00 	movabs rax,0x8000000000000002
  00928:    	cmp    rdi,rax
  0092b:    	je     0x963
  00931:    	mov    rax,rdi
  00934:    	sar    rax,0x3f
  00938:    	add    rax,0x2
  0093c:    	and    rdi,0xfffffffffffffffc
  00940:    	or     rdi,rax
  00943:    	rol    rdi,0x3d
  00947:    	movq   xmm6,rdi
  0094c:    	jmp    0x963
  00951:    	call   0xfffd0cd0
  00956:    	test   rax,rax
  00959:    	je     0x2b228
  0095f:    	movq   xmm6,xmm0
  00963:    	ucomisd xmm6,xmm5
  00967:    	jbe    0x2b2c5
:00055 %3 = 1: i32
  0096d: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]                         [Array][Integer]
  00975:    	sub    rsp,0x20
  00979:    	movq   QWORD PTR [rsp],xmm2
  0097e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00984:    	movq   QWORD PTR [rsp+0x10],xmm4
  0098a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00990:    	mov    rdx,QWORD PTR [rbp-0x30]
  00994:    	mov    rcx,QWORD PTR [rbp-0x40]
  00998:    	mov    rdi,rbx
  0099b:    	mov    rsi,r12
  0099e: 31 	movabs r8,0x563184c9e368
  009a8: 31 	movabs rax,0x5631840b8230
  009b2:    	call   rax
  009b4:    	movq   xmm2,QWORD PTR [rsp]
  009b9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009bf:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009c5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009cb:    	add    rsp,0x20
  009cf: 31 	movabs r13,0x563184c9e370
  009d9:    	test   rax,rax
  009dc:    	je     0xfffd0c97
  009e2:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  009e6: 00 	movq   xmm5,QWORD PTR [rip+0x142e]        # 0x1e1c
  009ee: 00 	movabs rax,0xff80000000000002
  009f8:    	mov    QWORD PTR [rbp-0x48],rax
:00058 _ = %3.call y=(%4; 1)                [Vec]
  009fc:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a00: 00 	test   rdi,0x7
  00a07:    	jne    0x2b237
  00a0d:    	cmp    DWORD PTR [rdi+0x4],0x28
  00a11:    	jne    0x2b237
  00a17: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2d57],0x26        # 0xfffd3775
  00a1e:    	jne    0x2b237
  00a24:    	mov    esi,DWORD PTR [rip+0x13fe]        # 0x1e28
  00a2a:    	cmp    esi,0xffffffff
  00a2d:    	je     0x2b246
  00a33:    	cmp    WORD PTR [rdi+0x2],0x3
  00a38:    	jne    0xa55
  00a3e:    	cmp    esi,0x6
  00a41:    	jge    0xa55
  00a47:    	mov    rax,QWORD PTR [rbp-0x48]
  00a4b:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00a50:    	jmp    0xaae
  00a55:    	sub    rsp,0x20
  00a59:    	movq   QWORD PTR [rsp],xmm2
  00a5e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a64:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a6a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a70:    	mov    rdx,QWORD PTR [rbp-0x48]
  00a74: 31 	movabs rax,0x5631840539e0
  00a7e:    	call   rax
  00a80:    	movq   xmm2,QWORD PTR [rsp]
  00a85:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a8b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a91:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a97:    	add    rsp,0x20
  00a9b: 31 	movabs r13,0x563184c9e3a0
  00aa5:    	test   rax,rax
  00aa8:    	je     0xfffd0c97
:00059 
:00061 br =>:00087
  00aae:    	jmp    0x2b580
:00062 %3 = %2.call z()                     [Vec]
  00ab3:    	mov    rdi,QWORD PTR [rbp-0x38]
  00ab7: 00 	test   rdi,0x7
  00abe:    	jne    0x2b2de
  00ac4:    	cmp    DWORD PTR [rdi+0x4],0x28
  00ac8:    	jne    0x2b2de
  00ace: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2ca0],0x26        # 0xfffd3775
  00ad5:    	jne    0x2b2de
  00adb:    	mov    esi,DWORD PTR [rip+0x134f]        # 0x1e30
  00ae1:    	cmp    esi,0xffffffff
  00ae4:    	je     0x2b2ed
  00aea:    	cmp    WORD PTR [rdi+0x2],0x3
  00aef:    	jne    0xb08
  00af5:    	cmp    esi,0x6
  00af8:    	jge    0xb08
  00afe:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b03:    	jmp    0xb4a
  00b08:    	sub    rsp,0x20
  00b0c:    	movq   QWORD PTR [rsp],xmm2
  00b11:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b17:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b1d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b23: 31 	movabs rax,0x563184053740
  00b2d:    	call   rax
  00b2f:    	movq   xmm2,QWORD PTR [rsp]
  00b34:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b3a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b40:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b46:    	add    rsp,0x20
  00b4a:    	mov    QWORD PTR [rbp-0x40],rax
:00063 
:00065 %4 = literal[0.6]
  00b4e: 00 	movq   xmm5,QWORD PTR [rip+0x12e6]        # 0x1e3c
  00b56: 99 	movabs rax,0xff1999999999999a
  00b60:    	mov    QWORD PTR [rbp-0x48],rax
:00066 _%3 = %3 < %4                        [Float][Float]
:00067 condnotbr _%3 =>:00081
  00b64:    	mov    rdi,QWORD PTR [rbp-0x40]
  00b68: 00 	test   rdi,0x1
  00b6f:    	jne    0x2b34c
  00b75: 00 	test   rdi,0x2
  00b7c:    	je     0xbb8
  00b82:    	xorps  xmm6,xmm6
  00b85: 00 	movabs rax,0x8000000000000002
  00b8f:    	cmp    rdi,rax
  00b92:    	je     0xbca
  00b98:    	mov    rax,rdi
  00b9b:    	sar    rax,0x3f
  00b9f:    	add    rax,0x2
  00ba3:    	and    rdi,0xfffffffffffffffc
  00ba7:    	or     rdi,rax
  00baa:    	rol    rdi,0x3d
  00bae:    	movq   xmm6,rdi
  00bb3:    	jmp    0xbca
  00bb8:    	call   0xfffd0cd0
  00bbd:    	test   rax,rax
  00bc0:    	je     0x2b34c
  00bc6:    	movq   xmm6,xmm0
  00bca:    	ucomisd xmm6,xmm5
  00bce:    	jae    0x2b44d
:00068 %3 = %2.call z()                     [Vec]
  00bd4:    	mov    rdi,QWORD PTR [rbp-0x38]
  00bd8: 00 	test   rdi,0x7
  00bdf:    	jne    0x2b35b
  00be5:    	cmp    DWORD PTR [rdi+0x4],0x28
  00be9:    	jne    0x2b35b
  00bef: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2b7f],0x26        # 0xfffd3775
  00bf6:    	jne    0x2b35b
  00bfc:    	mov    esi,DWORD PTR [rip+0x1246]        # 0x1e48
  00c02:    	cmp    esi,0xffffffff
  00c05:    	je     0x2b36a
  00c0b:    	cmp    WORD PTR [rdi+0x2],0x3
  00c10:    	jne    0xc29
  00c16:    	cmp    esi,0x6
  00c19:    	jge    0xc29
  00c1f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c24:    	jmp    0xc6b
  00c29:    	sub    rsp,0x20
  00c2d:    	movq   QWORD PTR [rsp],xmm2
  00c32:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c38:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c3e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c44: 31 	movabs rax,0x563184053740
  00c4e:    	call   rax
  00c50:    	movq   xmm2,QWORD PTR [rsp]
  00c55:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c5b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c61:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c67:    	add    rsp,0x20
  00c6b:    	mov    QWORD PTR [rbp-0x40],rax
:00069 
:00071 %4 = literal[-0.6]
  00c6f: 00 	movq   xmm5,QWORD PTR [rip+0x11d5]        # 0x1e4c
  00c77: 99 	movabs rax,0xff1999999999999e
  00c81:    	mov    QWORD PTR [rbp-0x48],rax
:00072 _%3 = %3 > %4                        [Float][Float]
:00073 condnotbr _%3 =>:00081
  00c85:    	mov    rdi,QWORD PTR [rbp-0x40]
  00c89: 00 	test   rdi,0x1
  00c90:    	jne    0x2b3c9
  00c96: 00 	test   rdi,0x2
  00c9d:    	je     0xcd9
  00ca3:    	xorps  xmm6,xmm6
  00ca6: 00 	movabs rax,0x8000000000000002
  00cb0:    	cmp    rdi,rax
  00cb3:    	je     0xceb
  00cb9:    	mov    rax,rdi
  00cbc:    	sar    rax,0x3f
  00cc0:    	add    rax,0x2
  00cc4:    	and    rdi,0xfffffffffffffffc
  00cc8:    	or     rdi,rax
  00ccb:    	rol    rdi,0x3d
  00ccf:    	movq   xmm6,rdi
  00cd4:    	jmp    0xceb
  00cd9:    	call   0xfffd0cd0
  00cde:    	test   rax,rax
  00ce1:    	je     0x2b3c9
  00ce7:    	movq   xmm6,xmm0
  00ceb:    	ucomisd xmm6,xmm5
  00cef:    	jbe    0x2b466
:00074 %3 = 1: i32
  00cf5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]                         [Array][Integer]
  00cfd:    	sub    rsp,0x20
  00d01:    	movq   QWORD PTR [rsp],xmm2
  00d06:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d0c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d12:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d18:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d1c:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d20:    	mov    rdi,rbx
  00d23:    	mov    rsi,r12
  00d26: 31 	movabs r8,0x563184c9e498
  00d30: 31 	movabs rax,0x5631840b8230
  00d3a:    	call   rax
  00d3c:    	movq   xmm2,QWORD PTR [rsp]
  00d41:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d47:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d4d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d53:    	add    rsp,0x20
  00d57: 31 	movabs r13,0x563184c9e4a0
  00d61:    	test   rax,rax
  00d64:    	je     0xfffd0c97
  00d6a:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00d6e: 00 	movq   xmm5,QWORD PTR [rip+0x10e6]        # 0x1e5c
  00d76: 00 	movabs rax,0xff80000000000002
  00d80:    	mov    QWORD PTR [rbp-0x48],rax
:00077 _ = %3.call z=(%4; 1)                [Vec]
  00d84:    	mov    rdi,QWORD PTR [rbp-0x40]
  00d88: 00 	test   rdi,0x7
  00d8f:    	jne    0x2b3d8
  00d95:    	cmp    DWORD PTR [rdi+0x4],0x28
  00d99:    	jne    0x2b3d8
  00d9f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd29cf],0x26        # 0xfffd3775
  00da6:    	jne    0x2b3d8
  00dac:    	mov    esi,DWORD PTR [rip+0x10b6]        # 0x1e68
  00db2:    	cmp    esi,0xffffffff
  00db5:    	je     0x2b3e7
  00dbb:    	cmp    WORD PTR [rdi+0x2],0x3
  00dc0:    	jne    0xddd
  00dc6:    	cmp    esi,0x6
  00dc9:    	jge    0xddd
  00dcf:    	mov    rax,QWORD PTR [rbp-0x48]
  00dd3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00dd8:    	jmp    0xe36
  00ddd:    	sub    rsp,0x20
  00de1:    	movq   QWORD PTR [rsp],xmm2
  00de6:    	movq   QWORD PTR [rsp+0x8],xmm3
  00dec:    	movq   QWORD PTR [rsp+0x10],xmm4
  00df2:    	movq   QWORD PTR [rsp+0x18],xmm5
  00df8:    	mov    rdx,QWORD PTR [rbp-0x48]
  00dfc: 31 	movabs rax,0x5631840539e0
  00e06:    	call   rax
  00e08:    	movq   xmm2,QWORD PTR [rsp]
  00e0d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e13:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e19:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e1f:    	add    rsp,0x20
  00e23: 31 	movabs r13,0x563184c9e4d0
  00e2d:    	test   rax,rax
  00e30:    	je     0xfffd0c97
:00078 
:00080 br =>:00087
  00e36:    	jmp    0x2b599
:00081 %3 = 1: i32
  00e3b: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00e43:    	sub    rsp,0x20
  00e47:    	movq   QWORD PTR [rsp],xmm2
  00e4c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e52:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e58:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e5e:    	mov    rdx,QWORD PTR [rbp-0x30]
  00e62:    	mov    rcx,QWORD PTR [rbp-0x40]
  00e66:    	mov    rdi,rbx
  00e69:    	mov    rsi,r12
  00e6c: 31 	movabs r8,0x563184c9e508
  00e76: 31 	movabs rax,0x5631840b8230
  00e80:    	call   rax
  00e82:    	movq   xmm2,QWORD PTR [rsp]
  00e87:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e8d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e93:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e99:    	add    rsp,0x20
  00e9d: 31 	movabs r13,0x563184c9e510
  00ea7:    	test   rax,rax
  00eaa:    	je     0xfffd0c97
  00eb0:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00eb4: 00 	movq   xmm5,QWORD PTR [rip+0xfb0]        # 0x1e6c
  00ebc: 00 	movabs rax,0xff80000000000002
  00ec6:    	mov    QWORD PTR [rbp-0x48],rax
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
  00eca: 01 	sub    DWORD PTR [rip+0xfa3],0x1        # 0x1e74
  00ed1:    	je     0x2b48e
  00ed7:    	sub    rsp,0x20
  00edb:    	movq   QWORD PTR [rsp],xmm2
  00ee0:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ee6:    	movq   QWORD PTR [rsp+0x10],xmm4
  00eec:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ef2:    	mov    rdi,QWORD PTR [rbp-0x40]
  00ef6: 31 	movabs rax,0x5631840958d0
  00f00:    	call   rax
  00f02:    	mov    r15d,eax
  00f05: 00 	cmp    r15d,DWORD PTR [rip+0xf70]        # 0x1e7c
  00f0c:    	jne    0x2b4b0
  00f12:    	mov    eax,DWORD PTR [rip+0xfffffffffffd285d]        # 0xfffd3775
  00f18:    	cmp    DWORD PTR [rip+0xf5a],eax        # 0x1e78
  00f1e:    	jne    0x2b4b0
  00f24:    	mov    rax,QWORD PTR [rbx]
  00f27:    	lea    rdi,[rsp-0x18]
  00f2c:    	mov    QWORD PTR [rdi],rax
  00f2f:    	mov    QWORD PTR [rbx],rdi
  00f32: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f3b:    	mov    QWORD PTR [rsp-0x38],rcx
  00f40:    	mov    rax,QWORD PTR [rbp-0x40]
  00f44:    	mov    QWORD PTR [rsp-0x38],rax
  00f49: 00 	mov    rdi,0x1
  00f50:    	mov    rax,QWORD PTR [rbp-0x48]
  00f54:    	mov    QWORD PTR [rsp-0x40],rax
  00f59: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f62: 00 	movabs rax,0x0
  00f6c:    	mov    QWORD PTR [rsp-0x28],rax
  00f71: 00 	movabs r13,0x0
  00f7b:    	call   0xfffd0c5c
  00f80:    	lea    rdi,[rbp-0x8]
  00f84:    	mov    QWORD PTR [rbx],rdi
  00f87:    	movq   xmm2,QWORD PTR [rsp]
  00f8c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f92:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f98:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f9e:    	add    rsp,0x20
  00fa2:    	test   rax,rax
  00fa5:    	je     0x2b51c
:00085 
:00087 %3 = 0: i32
  00fab: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  00fb3: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  00fbb:    	sub    rsp,0x20
  00fbf:    	movq   QWORD PTR [rsp],xmm2
  00fc4:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fca:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fd0:    	movq   QWORD PTR [rsp+0x18],xmm5
  00fd6:    	mov    rdx,QWORD PTR [rbp-0x30]
  00fda:    	mov    rcx,QWORD PTR [rbp-0x50]
  00fde:    	mov    rdi,rbx
  00fe1:    	mov    rsi,r12
  00fe4: 31 	movabs r8,0x563184c9e578
  00fee: 31 	movabs rax,0x5631840b8230
  00ff8:    	call   rax
  00ffa:    	movq   xmm2,QWORD PTR [rsp]
  00fff:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01005:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0100b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01011:    	add    rsp,0x20
  01015: 31 	movabs r13,0x563184c9e580
  0101f:    	test   rax,rax
  01022:    	je     0xfffd0c97
  01028:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  0102c: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  01034:    	sub    rsp,0x20
  01038:    	movq   QWORD PTR [rsp],xmm3
  0103d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01043:    	movq   QWORD PTR [rsp+0x10],xmm5
  01049:    	mov    rdx,QWORD PTR [rbp-0x30]
  0104d:    	mov    rcx,QWORD PTR [rbp-0x58]
  01051:    	mov    rdi,rbx
  01054:    	mov    rsi,r12
  01057: 31 	movabs r8,0x563184c9e598
  01061: 31 	movabs rax,0x5631840b8230
  0106b:    	call   rax
  0106d:    	movq   xmm3,QWORD PTR [rsp]
  01072:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01078:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0107e:    	add    rsp,0x20
  01082: 31 	movabs r13,0x563184c9e5a0
  0108c:    	test   rax,rax
  0108f:    	je     0xfffd0c97
  01095:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  01099:    	mov    rdi,QWORD PTR [rbp-0x50]
  0109d: 00 	test   rdi,0x7
  010a4:    	jne    0x2b52b
  010aa:    	cmp    DWORD PTR [rdi+0x4],0x28
  010ae:    	jne    0x2b52b
  010b4: 26 	cmp    DWORD PTR [rip+0xfffffffffffd26ba],0x26        # 0xfffd3775
  010bb:    	jne    0x2b52b
  010c1:    	sub    rsp,0x10
  010c5:    	movq   QWORD PTR [rsp],xmm3
  010ca:    	movq   QWORD PTR [rsp+0x8],xmm4
  010d0:    	mov    rax,QWORD PTR [rbx]
  010d3:    	lea    rdi,[rsp-0x18]
  010d8:    	mov    QWORD PTR [rdi],rax
  010db:    	mov    QWORD PTR [rbx],rdi
  010de: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010e7:    	mov    QWORD PTR [rsp-0x38],rcx
  010ec:    	mov    rax,QWORD PTR [rbp-0x50]
  010f0:    	mov    QWORD PTR [rsp-0x38],rax
  010f5: 00 	mov    rdi,0x1
  010fc:    	mov    rax,QWORD PTR [rbp-0x58]
  01100:    	mov    QWORD PTR [rsp-0x40],rax
  01105: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0110e: 09 	movabs rax,0x900000040
  01118:    	mov    QWORD PTR [rsp-0x28],rax
  0111d: 31 	movabs r13,0x563184c82c10
  01127:    	call   0xfffdd289
  0112c:    	lea    rdi,[rbp-0x8]
  01130:    	mov    QWORD PTR [rbx],rdi
  01133:    	movq   xmm3,QWORD PTR [rsp]
  01138:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0113e:    	add    rsp,0x10
  01142: 31 	movabs r13,0x563184c9e5c0
  0114c:    	test   rax,rax
  0114f:    	je     0xfffd0c97
  01155:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  01159:    	sub    rsp,0x10
  0115d:    	movq   QWORD PTR [rsp],xmm3
  01162:    	movq   QWORD PTR [rsp+0x8],xmm4
  01168:    	mov    rdx,QWORD PTR [rbp-0x30]
  0116c:    	mov    rcx,QWORD PTR [rbp-0x40]
  01170:    	mov    r8,QWORD PTR [rbp-0x48]
  01174:    	mov    rdi,rbx
  01177:    	mov    rsi,r12
  0117a: 31 	movabs rax,0x5631840b8360
  01184:    	call   rax
  01186:    	movq   xmm3,QWORD PTR [rsp]
  0118b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01191:    	add    rsp,0x10
  01195: 31 	movabs r13,0x563184c9e5e0
  0119f:    	test   rax,rax
  011a2:    	je     0xfffd0c97
:00096 %3 = 0: i32
  011a8: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  011b0: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  011b8:    	sub    rsp,0x10
  011bc:    	movq   QWORD PTR [rsp],xmm3
  011c1:    	movq   QWORD PTR [rsp+0x8],xmm4
  011c7:    	mov    rdx,QWORD PTR [rbp-0x30]
  011cb:    	mov    rcx,QWORD PTR [rbp-0x50]
  011cf:    	mov    rdi,rbx
  011d2:    	mov    rsi,r12
  011d5: 31 	movabs r8,0x563184c9e608
  011df: 31 	movabs rax,0x5631840b8230
  011e9:    	call   rax
  011eb:    	movq   xmm3,QWORD PTR [rsp]
  011f0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011f6:    	add    rsp,0x10
  011fa: 31 	movabs r13,0x563184c9e610
  01204:    	test   rax,rax
  01207:    	je     0xfffd0c97
  0120d:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  01211:    	mov    rdi,QWORD PTR [rbp-0x50]
  01215: 00 	test   rdi,0x7
  0121c:    	jne    0x2b53a
  01222:    	cmp    DWORD PTR [rdi+0x4],0x28
  01226:    	jne    0x2b53a
  0122c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2542],0x26        # 0xfffd3775
  01233:    	jne    0x2b53a
  01239:    	sub    rsp,0x10
  0123d:    	movq   QWORD PTR [rsp],xmm3
  01242:    	movq   QWORD PTR [rsp+0x8],xmm4
  01248:    	mov    rax,QWORD PTR [rbx]
  0124b:    	lea    rdi,[rsp-0x18]
  01250:    	mov    QWORD PTR [rdi],rax
  01253:    	mov    QWORD PTR [rbx],rdi
  01256: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0125f:    	mov    QWORD PTR [rsp-0x38],rcx
  01264:    	mov    rax,QWORD PTR [rbp-0x50]
  01268:    	mov    QWORD PTR [rsp-0x38],rax
  0126d: 00 	mov    rdi,0x0
  01274: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0127d: 07 	movabs rax,0x1000700000043
  01287:    	mov    QWORD PTR [rsp-0x28],rax
  0128c: 31 	movabs r13,0x563184c828e0
  01296:    	call   0xfffd406c
  0129b:    	lea    rdi,[rbp-0x8]
  0129f:    	mov    QWORD PTR [rbx],rdi
  012a2:    	movq   xmm3,QWORD PTR [rsp]
  012a7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012ad:    	add    rsp,0x10
  012b1: 31 	movabs r13,0x563184c9e630
  012bb:    	test   rax,rax
  012be:    	je     0xfffd0c97
  012c4:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  012c8:    	sub    rsp,0x10
  012cc:    	movq   QWORD PTR [rsp],xmm3
  012d1:    	movq   QWORD PTR [rsp+0x8],xmm4
  012d7:    	mov    rdx,QWORD PTR [rbp-0x30]
  012db:    	mov    rcx,QWORD PTR [rbp-0x40]
  012df:    	mov    r8,QWORD PTR [rbp-0x48]
  012e3:    	mov    rdi,rbx
  012e6:    	mov    rsi,r12
  012e9: 31 	movabs rax,0x5631840b8360
  012f3:    	call   rax
  012f5:    	movq   xmm3,QWORD PTR [rsp]
  012fa:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01300:    	add    rsp,0x10
  01304: 31 	movabs r13,0x563184c9e650
  0130e:    	test   rax,rax
  01311:    	je     0xfffd0c97
:00103 %3 = 1: i32
  01317: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  0131f: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  01327:    	sub    rsp,0x10
  0132b:    	movq   QWORD PTR [rsp],xmm3
  01330:    	movq   QWORD PTR [rsp+0x8],xmm4
  01336:    	mov    rdx,QWORD PTR [rbp-0x30]
  0133a:    	mov    rcx,QWORD PTR [rbp-0x50]
  0133e:    	mov    rdi,rbx
  01341:    	mov    rsi,r12
  01344: 31 	movabs r8,0x563184c9e678
  0134e: 31 	movabs rax,0x5631840b8230
  01358:    	call   rax
  0135a:    	movq   xmm3,QWORD PTR [rsp]
  0135f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01365:    	add    rsp,0x10
  01369: 31 	movabs r13,0x563184c9e680
  01373:    	test   rax,rax
  01376:    	je     0xfffd0c97
  0137c:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  01380: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  01388:    	sub    rsp,0x10
  0138c:    	movq   QWORD PTR [rsp],xmm3
  01391:    	movq   QWORD PTR [rsp+0x8],xmm4
  01397:    	mov    rdx,QWORD PTR [rbp-0x30]
  0139b:    	mov    rcx,QWORD PTR [rbp-0x58]
  0139f:    	mov    rdi,rbx
  013a2:    	mov    rsi,r12
  013a5: 31 	movabs r8,0x563184c9e698
  013af: 31 	movabs rax,0x5631840b8230
  013b9:    	call   rax
  013bb:    	movq   xmm3,QWORD PTR [rsp]
  013c0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013c6:    	add    rsp,0x10
  013ca: 31 	movabs r13,0x563184c9e6a0
  013d4:    	test   rax,rax
  013d7:    	je     0xfffd0c97
  013dd:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  013e1:    	mov    rdi,QWORD PTR [rbp-0x50]
  013e5: 00 	test   rdi,0x7
  013ec:    	jne    0x2b549
  013f2:    	cmp    DWORD PTR [rdi+0x4],0x28
  013f6:    	jne    0x2b549
  013fc: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2372],0x26        # 0xfffd3775
  01403:    	jne    0x2b549
  01409:    	sub    rsp,0x10
  0140d:    	movq   QWORD PTR [rsp],xmm3
  01412:    	movq   QWORD PTR [rsp+0x8],xmm4
  01418:    	mov    rax,QWORD PTR [rbx]
  0141b:    	lea    rdi,[rsp-0x18]
  01420:    	mov    QWORD PTR [rdi],rax
  01423:    	mov    QWORD PTR [rbx],rdi
  01426: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0142f:    	mov    QWORD PTR [rsp-0x38],rcx
  01434:    	mov    rax,QWORD PTR [rbp-0x50]
  01438:    	mov    QWORD PTR [rsp-0x38],rax
  0143d: 00 	mov    rdi,0x1
  01444:    	mov    rax,QWORD PTR [rbp-0x58]
  01448:    	mov    QWORD PTR [rsp-0x40],rax
  0144d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01456: 09 	movabs rax,0x900000040
  01460:    	mov    QWORD PTR [rsp-0x28],rax
  01465: 31 	movabs r13,0x563184c82c10
  0146f:    	call   0xfffdd289
  01474:    	lea    rdi,[rbp-0x8]
  01478:    	mov    QWORD PTR [rbx],rdi
  0147b:    	movq   xmm3,QWORD PTR [rsp]
  01480:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01486:    	add    rsp,0x10
  0148a: 31 	movabs r13,0x563184c9e6c0
  01494:    	test   rax,rax
  01497:    	je     0xfffd0c97
  0149d:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  014a1:    	sub    rsp,0x10
  014a5:    	movq   QWORD PTR [rsp],xmm3
  014aa:    	movq   QWORD PTR [rsp+0x8],xmm4
  014b0:    	mov    rdx,QWORD PTR [rbp-0x30]
  014b4:    	mov    rcx,QWORD PTR [rbp-0x40]
  014b8:    	mov    r8,QWORD PTR [rbp-0x48]
  014bc:    	mov    rdi,rbx
  014bf:    	mov    rsi,r12
  014c2: 31 	movabs rax,0x5631840b8360
  014cc:    	call   rax
  014ce:    	movq   xmm3,QWORD PTR [rsp]
  014d3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014d9:    	add    rsp,0x10
  014dd: 31 	movabs r13,0x563184c9e6e0
  014e7:    	test   rax,rax
  014ea:    	je     0xfffd0c97
:00112 %3 = 1: i32
  014f0: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  014f8: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  01500:    	sub    rsp,0x10
  01504:    	movq   QWORD PTR [rsp],xmm3
  01509:    	movq   QWORD PTR [rsp+0x8],xmm4
  0150f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01513:    	mov    rcx,QWORD PTR [rbp-0x50]
  01517:    	mov    rdi,rbx
  0151a:    	mov    rsi,r12
  0151d: 31 	movabs r8,0x563184c9e708
  01527: 31 	movabs rax,0x5631840b8230
  01531:    	call   rax
  01533:    	movq   xmm3,QWORD PTR [rsp]
  01538:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0153e:    	add    rsp,0x10
  01542: 31 	movabs r13,0x563184c9e710
  0154c:    	test   rax,rax
  0154f:    	je     0xfffd0c97
  01555:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01559:    	mov    rdi,QWORD PTR [rbp-0x50]
  0155d: 00 	test   rdi,0x7
  01564:    	jne    0x2b558
  0156a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0156e:    	jne    0x2b558
  01574: 26 	cmp    DWORD PTR [rip+0xfffffffffffd21fa],0x26        # 0xfffd3775
  0157b:    	jne    0x2b558
  01581:    	sub    rsp,0x10
  01585:    	movq   QWORD PTR [rsp],xmm3
  0158a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01590:    	mov    rax,QWORD PTR [rbx]
  01593:    	lea    rdi,[rsp-0x18]
  01598:    	mov    QWORD PTR [rdi],rax
  0159b:    	mov    QWORD PTR [rbx],rdi
  0159e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015a7:    	mov    QWORD PTR [rsp-0x38],rcx
  015ac:    	mov    rax,QWORD PTR [rbp-0x50]
  015b0:    	mov    QWORD PTR [rsp-0x38],rax
  015b5: 00 	mov    rdi,0x0
  015bc: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015c5: 07 	movabs rax,0x1000700000043
  015cf:    	mov    QWORD PTR [rsp-0x28],rax
  015d4: 31 	movabs r13,0x563184c828e0
  015de:    	call   0xfffd406c
  015e3:    	lea    rdi,[rbp-0x8]
  015e7:    	mov    QWORD PTR [rbx],rdi
  015ea:    	movq   xmm3,QWORD PTR [rsp]
  015ef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015f5:    	add    rsp,0x10
  015f9: 31 	movabs r13,0x563184c9e730
  01603:    	test   rax,rax
  01606:    	je     0xfffd0c97
  0160c:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  01610:    	sub    rsp,0x10
  01614:    	movq   QWORD PTR [rsp],xmm3
  01619:    	movq   QWORD PTR [rsp+0x8],xmm4
  0161f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01623:    	mov    rcx,QWORD PTR [rbp-0x40]
  01627:    	mov    r8,QWORD PTR [rbp-0x48]
  0162b:    	mov    rdi,rbx
  0162e:    	mov    rsi,r12
  01631: 31 	movabs rax,0x5631840b8360
  0163b:    	call   rax
  0163d:    	movq   xmm3,QWORD PTR [rsp]
  01642:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01648:    	add    rsp,0x10
  0164c: 31 	movabs r13,0x563184c9e750
  01656:    	test   rax,rax
  01659:    	je     0xfffd0c97
:00119 %3 = %4
  0165f:    	mov    rax,QWORD PTR [rbp-0x48]
  01663:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01667:    	mov    rax,QWORD PTR [rbp-0x40]
  0166b:    	leave  
  0166c:    	ret    
:00087 %3 = 0: i32
  0166d: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  01675: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]                         [Array][Integer]
  0167d:    	sub    rsp,0x20
  01681:    	movq   QWORD PTR [rsp],xmm2
  01686:    	movq   QWORD PTR [rsp+0x8],xmm3
  0168c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01692:    	movq   QWORD PTR [rsp+0x18],xmm5
  01698:    	mov    rdx,QWORD PTR [rbp-0x30]
  0169c:    	mov    rcx,QWORD PTR [rbp-0x50]
  016a0:    	mov    rdi,rbx
  016a3:    	mov    rsi,r12
  016a6: 31 	movabs r8,0x563184c9e578
  016b0: 31 	movabs rax,0x5631840b8230
  016ba:    	call   rax
  016bc:    	movq   xmm2,QWORD PTR [rsp]
  016c1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016c7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016cd:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016d3:    	add    rsp,0x20
  016d7: 31 	movabs r13,0x563184c9e580
  016e1:    	test   rax,rax
  016e4:    	je     0xfffd0c97
  016ea:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  016ee: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]                         [Array][Integer]
  016f6:    	sub    rsp,0x20
  016fa:    	movq   QWORD PTR [rsp],xmm3
  016ff:    	movq   QWORD PTR [rsp+0x8],xmm4
  01705:    	movq   QWORD PTR [rsp+0x10],xmm5
  0170b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0170f:    	mov    rcx,QWORD PTR [rbp-0x58]
  01713:    	mov    rdi,rbx
  01716:    	mov    rsi,r12
  01719: 31 	movabs r8,0x563184c9e598
  01723: 31 	movabs rax,0x5631840b8230
  0172d:    	call   rax
  0172f:    	movq   xmm3,QWORD PTR [rsp]
  01734:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0173a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01740:    	add    rsp,0x20
  01744: 31 	movabs r13,0x563184c9e5a0
  0174e:    	test   rax,rax
  01751:    	je     0xfffd0c97
  01757:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
  0175b:    	mov    rdi,QWORD PTR [rbp-0x50]
  0175f: 00 	test   rdi,0x7
  01766:    	jne    0x2b5b2
  0176c:    	cmp    DWORD PTR [rdi+0x4],0x28
  01770:    	jne    0x2b5b2
  01776: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1ff8],0x26        # 0xfffd3775
  0177d:    	jne    0x2b5b2
  01783:    	sub    rsp,0x10
  01787:    	movq   QWORD PTR [rsp],xmm3
  0178c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01792:    	mov    rax,QWORD PTR [rbx]
  01795:    	lea    rdi,[rsp-0x18]
  0179a:    	mov    QWORD PTR [rdi],rax
  0179d:    	mov    QWORD PTR [rbx],rdi
  017a0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017a9:    	mov    QWORD PTR [rsp-0x38],rcx
  017ae:    	mov    rax,QWORD PTR [rbp-0x50]
  017b2:    	mov    QWORD PTR [rsp-0x38],rax
  017b7: 00 	mov    rdi,0x1
  017be:    	mov    rax,QWORD PTR [rbp-0x58]
  017c2:    	mov    QWORD PTR [rsp-0x40],rax
  017c7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017d0: 09 	movabs rax,0x900000040
  017da:    	mov    QWORD PTR [rsp-0x28],rax
  017df: 31 	movabs r13,0x563184c82c10
  017e9:    	call   0xfffdd289
  017ee:    	lea    rdi,[rbp-0x8]
  017f2:    	mov    QWORD PTR [rbx],rdi
  017f5:    	movq   xmm3,QWORD PTR [rsp]
  017fa:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01800:    	add    rsp,0x10
  01804: 31 	movabs r13,0x563184c9e5c0
  0180e:    	test   rax,rax
  01811:    	je     0xfffd0c97
  01817:    	mov    QWORD PTR [rbp-0x48],rax
:00093 
:00095 %1:.[%3:] = %4
  0181b:    	sub    rsp,0x10
  0181f:    	movq   QWORD PTR [rsp],xmm3
  01824:    	movq   QWORD PTR [rsp+0x8],xmm4
  0182a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0182e:    	mov    rcx,QWORD PTR [rbp-0x40]
  01832:    	mov    r8,QWORD PTR [rbp-0x48]
  01836:    	mov    rdi,rbx
  01839:    	mov    rsi,r12
  0183c: 31 	movabs rax,0x5631840b8360
  01846:    	call   rax
  01848:    	movq   xmm3,QWORD PTR [rsp]
  0184d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01853:    	add    rsp,0x10
  01857: 31 	movabs r13,0x563184c9e5e0
  01861:    	test   rax,rax
  01864:    	je     0xfffd0c97
:00096 %3 = 0: i32
  0186a: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  01872: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]                         [Array][Integer]
  0187a:    	sub    rsp,0x10
  0187e:    	movq   QWORD PTR [rsp],xmm3
  01883:    	movq   QWORD PTR [rsp+0x8],xmm4
  01889:    	mov    rdx,QWORD PTR [rbp-0x30]
  0188d:    	mov    rcx,QWORD PTR [rbp-0x50]
  01891:    	mov    rdi,rbx
  01894:    	mov    rsi,r12
  01897: 31 	movabs r8,0x563184c9e608
  018a1: 31 	movabs rax,0x5631840b8230
  018ab:    	call   rax
  018ad:    	movq   xmm3,QWORD PTR [rsp]
  018b2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018b8:    	add    rsp,0x10
  018bc: 31 	movabs r13,0x563184c9e610
  018c6:    	test   rax,rax
  018c9:    	je     0xfffd0c97
  018cf:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
  018d3:    	mov    rdi,QWORD PTR [rbp-0x50]
  018d7: 00 	test   rdi,0x7
  018de:    	jne    0x2b5c1
  018e4:    	cmp    DWORD PTR [rdi+0x4],0x28
  018e8:    	jne    0x2b5c1
  018ee: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1e80],0x26        # 0xfffd3775
  018f5:    	jne    0x2b5c1
  018fb:    	sub    rsp,0x10
  018ff:    	movq   QWORD PTR [rsp],xmm3
  01904:    	movq   QWORD PTR [rsp+0x8],xmm4
  0190a:    	mov    rax,QWORD PTR [rbx]
  0190d:    	lea    rdi,[rsp-0x18]
  01912:    	mov    QWORD PTR [rdi],rax
  01915:    	mov    QWORD PTR [rbx],rdi
  01918: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01921:    	mov    QWORD PTR [rsp-0x38],rcx
  01926:    	mov    rax,QWORD PTR [rbp-0x50]
  0192a:    	mov    QWORD PTR [rsp-0x38],rax
  0192f: 00 	mov    rdi,0x0
  01936: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0193f: 07 	movabs rax,0x1000700000043
  01949:    	mov    QWORD PTR [rsp-0x28],rax
  0194e: 31 	movabs r13,0x563184c828e0
  01958:    	call   0xfffd406c
  0195d:    	lea    rdi,[rbp-0x8]
  01961:    	mov    QWORD PTR [rbx],rdi
  01964:    	movq   xmm3,QWORD PTR [rsp]
  01969:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0196f:    	add    rsp,0x10
  01973: 31 	movabs r13,0x563184c9e630
  0197d:    	test   rax,rax
  01980:    	je     0xfffd0c97
  01986:    	mov    QWORD PTR [rbp-0x48],rax
:00100 
:00102 %1:.[%3:] = %4
  0198a:    	sub    rsp,0x10
  0198e:    	movq   QWORD PTR [rsp],xmm3
  01993:    	movq   QWORD PTR [rsp+0x8],xmm4
  01999:    	mov    rdx,QWORD PTR [rbp-0x30]
  0199d:    	mov    rcx,QWORD PTR [rbp-0x40]
  019a1:    	mov    r8,QWORD PTR [rbp-0x48]
  019a5:    	mov    rdi,rbx
  019a8:    	mov    rsi,r12
  019ab: 31 	movabs rax,0x5631840b8360
  019b5:    	call   rax
  019b7:    	movq   xmm3,QWORD PTR [rsp]
  019bc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019c2:    	add    rsp,0x10
  019c6: 31 	movabs r13,0x563184c9e650
  019d0:    	test   rax,rax
  019d3:    	je     0xfffd0c97
:00103 %3 = 1: i32
  019d9: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  019e1: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]                         [Array][Integer]
  019e9:    	sub    rsp,0x10
  019ed:    	movq   QWORD PTR [rsp],xmm3
  019f2:    	movq   QWORD PTR [rsp+0x8],xmm4
  019f8:    	mov    rdx,QWORD PTR [rbp-0x30]
  019fc:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a00:    	mov    rdi,rbx
  01a03:    	mov    rsi,r12
  01a06: 31 	movabs r8,0x563184c9e678
  01a10: 31 	movabs rax,0x5631840b8230
  01a1a:    	call   rax
  01a1c:    	movq   xmm3,QWORD PTR [rsp]
  01a21:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a27:    	add    rsp,0x10
  01a2b: 31 	movabs r13,0x563184c9e680
  01a35:    	test   rax,rax
  01a38:    	je     0xfffd0c97
  01a3e:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  01a42: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]                         [Array][Integer]
  01a4a:    	sub    rsp,0x10
  01a4e:    	movq   QWORD PTR [rsp],xmm3
  01a53:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a59:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a5d:    	mov    rcx,QWORD PTR [rbp-0x58]
  01a61:    	mov    rdi,rbx
  01a64:    	mov    rsi,r12
  01a67: 31 	movabs r8,0x563184c9e698
  01a71: 31 	movabs rax,0x5631840b8230
  01a7b:    	call   rax
  01a7d:    	movq   xmm3,QWORD PTR [rsp]
  01a82:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a88:    	add    rsp,0x10
  01a8c: 31 	movabs r13,0x563184c9e6a0
  01a96:    	test   rax,rax
  01a99:    	je     0xfffd0c97
  01a9f:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
  01aa3:    	mov    rdi,QWORD PTR [rbp-0x50]
  01aa7: 00 	test   rdi,0x7
  01aae:    	jne    0x2b5d0
  01ab4:    	cmp    DWORD PTR [rdi+0x4],0x28
  01ab8:    	jne    0x2b5d0
  01abe: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1cb0],0x26        # 0xfffd3775
  01ac5:    	jne    0x2b5d0
  01acb:    	sub    rsp,0x10
  01acf:    	movq   QWORD PTR [rsp],xmm3
  01ad4:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ada:    	mov    rax,QWORD PTR [rbx]
  01add:    	lea    rdi,[rsp-0x18]
  01ae2:    	mov    QWORD PTR [rdi],rax
  01ae5:    	mov    QWORD PTR [rbx],rdi
  01ae8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01af1:    	mov    QWORD PTR [rsp-0x38],rcx
  01af6:    	mov    rax,QWORD PTR [rbp-0x50]
  01afa:    	mov    QWORD PTR [rsp-0x38],rax
  01aff: 00 	mov    rdi,0x1
  01b06:    	mov    rax,QWORD PTR [rbp-0x58]
  01b0a:    	mov    QWORD PTR [rsp-0x40],rax
  01b0f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b18: 09 	movabs rax,0x900000040
  01b22:    	mov    QWORD PTR [rsp-0x28],rax
  01b27: 31 	movabs r13,0x563184c82c10
  01b31:    	call   0xfffdd289
  01b36:    	lea    rdi,[rbp-0x8]
  01b3a:    	mov    QWORD PTR [rbx],rdi
  01b3d:    	movq   xmm3,QWORD PTR [rsp]
  01b42:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b48:    	add    rsp,0x10
  01b4c: 31 	movabs r13,0x563184c9e6c0
  01b56:    	test   rax,rax
  01b59:    	je     0xfffd0c97
  01b5f:    	mov    QWORD PTR [rbp-0x48],rax
:00109 
:00111 %1:.[%3:] = %4
  01b63:    	sub    rsp,0x10
  01b67:    	movq   QWORD PTR [rsp],xmm3
  01b6c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b72:    	mov    rdx,QWORD PTR [rbp-0x30]
  01b76:    	mov    rcx,QWORD PTR [rbp-0x40]
  01b7a:    	mov    r8,QWORD PTR [rbp-0x48]
  01b7e:    	mov    rdi,rbx
  01b81:    	mov    rsi,r12
  01b84: 31 	movabs rax,0x5631840b8360
  01b8e:    	call   rax
  01b90:    	movq   xmm3,QWORD PTR [rsp]
  01b95:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b9b:    	add    rsp,0x10
  01b9f: 31 	movabs r13,0x563184c9e6e0
  01ba9:    	test   rax,rax
  01bac:    	je     0xfffd0c97
:00112 %3 = 1: i32
  01bb2: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01bba: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]                         [Array][Integer]
  01bc2:    	sub    rsp,0x10
  01bc6:    	movq   QWORD PTR [rsp],xmm3
  01bcb:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bd1:    	mov    rdx,QWORD PTR [rbp-0x30]
  01bd5:    	mov    rcx,QWORD PTR [rbp-0x50]
  01bd9:    	mov    rdi,rbx
  01bdc:    	mov    rsi,r12
  01bdf: 31 	movabs r8,0x563184c9e708
  01be9: 31 	movabs rax,0x5631840b8230
  01bf3:    	call   rax
  01bf5:    	movq   xmm3,QWORD PTR [rsp]
  01bfa:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c00:    	add    rsp,0x10
  01c04: 31 	movabs r13,0x563184c9e710
  01c0e:    	test   rax,rax
  01c11:    	je     0xfffd0c97
  01c17:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
  01c1b:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c1f: 00 	test   rdi,0x7
  01c26:    	jne    0x2b5df
  01c2c:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c30:    	jne    0x2b5df
  01c36: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1b38],0x26        # 0xfffd3775
  01c3d:    	jne    0x2b5df
  01c43:    	sub    rsp,0x10
  01c47:    	movq   QWORD PTR [rsp],xmm3
  01c4c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c52:    	mov    rax,QWORD PTR [rbx]
  01c55:    	lea    rdi,[rsp-0x18]
  01c5a:    	mov    QWORD PTR [rdi],rax
  01c5d:    	mov    QWORD PTR [rbx],rdi
  01c60: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01c69:    	mov    QWORD PTR [rsp-0x38],rcx
  01c6e:    	mov    rax,QWORD PTR [rbp-0x50]
  01c72:    	mov    QWORD PTR [rsp-0x38],rax
  01c77: 00 	mov    rdi,0x0
  01c7e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c87: 07 	movabs rax,0x1000700000043
  01c91:    	mov    QWORD PTR [rsp-0x28],rax
  01c96: 31 	movabs r13,0x563184c828e0
  01ca0:    	call   0xfffd406c
  01ca5:    	lea    rdi,[rbp-0x8]
  01ca9:    	mov    QWORD PTR [rbx],rdi
  01cac:    	movq   xmm3,QWORD PTR [rsp]
  01cb1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01cb7:    	add    rsp,0x10
  01cbb: 31 	movabs r13,0x563184c9e730
  01cc5:    	test   rax,rax
  01cc8:    	je     0xfffd0c97
  01cce:    	mov    QWORD PTR [rbp-0x48],rax
:00116 
:00118 %1:.[%3:] = %4
  01cd2:    	sub    rsp,0x10
  01cd6:    	movq   QWORD PTR [rsp],xmm3
  01cdb:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ce1:    	mov    rdx,QWORD PTR [rbp-0x30]
  01ce5:    	mov    rcx,QWORD PTR [rbp-0x40]
  01ce9:    	mov    r8,QWORD PTR [rbp-0x48]
  01ced:    	mov    rdi,rbx
  01cf0:    	mov    rsi,r12
  01cf3: 31 	movabs rax,0x5631840b8360
  01cfd:    	call   rax
  01cff:    	movq   xmm3,QWORD PTR [rsp]
  01d04:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d0a:    	add    rsp,0x10
  01d0e: 31 	movabs r13,0x563184c9e750
  01d18:    	test   rax,rax
  01d1b:    	je     0xfffd0c97
:00119 %3 = %4
  01d21:    	mov    rax,QWORD PTR [rbp-0x48]
  01d25:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01d29:    	mov    rax,QWORD PTR [rbp-0x40]
  01d2d:    	leave  
  01d2e:    	ret    
