==> start whole compile: initialize FuncId(55) self_class:Vec start:[00000] bytecode:0x55573cf73a20
<== finished compile. elapsed:10.7µs
offset:Pos(12241) code: 126 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x48],0x4
  00010: mov    rdi,QWORD PTR [rbp-0x28]
  00014: test   rdi,0x7
  0001b: jne    0x3d59b
  00021: cmp    DWORD PTR [rdi+0x4],0x25
  00025: jne    0x3d59b
:00000 @x: Vec[IvarId(0)] = %1
  0002b: mov    rdi,QWORD PTR [rbp-0x28]
  0002f: cmp    WORD PTR [rdi+0x2],0x3
  00034: jne    0x3d5aa
  0003a: mov    rax,QWORD PTR [rbp-0x30]
  0003e: mov    QWORD PTR [rdi+0x10],rax
:00001 @y: Vec[IvarId(1)] = %2
  00042: mov    rdi,QWORD PTR [rbp-0x28]
  00046: cmp    WORD PTR [rdi+0x2],0x3
  0004b: jne    0x3d5c4
  00051: mov    rax,QWORD PTR [rbp-0x38]
  00055: mov    QWORD PTR [rdi+0x18],rax
:00002 @z: Vec[IvarId(2)] = %3
  00059: mov    rdi,QWORD PTR [rbp-0x28]
  0005d: cmp    WORD PTR [rdi+0x2],0x3
  00062: jne    0x3d5de
  00068: mov    rax,QWORD PTR [rbp-0x40]
  0006c: mov    QWORD PTR [rdi+0x20],rax
:00003 %4 = %3
  00070: mov    rax,QWORD PTR [rbp-0x40]
  00074: mov    QWORD PTR [rbp-0x48],rax
:00004 ret %4
  00078: mov    rax,QWORD PTR [rbp-0x48]
  0007c: leave  
  0007d: ret    
==> start whole compile: vdot FuncId(59) self_class:Vec start:[00000] bytecode:0x55573cfe1010
<== finished compile. elapsed:51.3µs
offset:Pos(14173) code: 1113 bytes  data: 24 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    rdi,QWORD PTR [rbp-0x28]
  0001f: test   rdi,0x7
  00026: jne    0x3ce6c
  0002c: cmp    DWORD PTR [rdi+0x4],0x25
  00030: jne    0x3ce6c
:00000 %2 = @x: Vec[IvarId(0)]
  00036: mov    rdi,QWORD PTR [rbp-0x28]
  0003a: cmp    WORD PTR [rdi+0x2],0x3
  0003f: jne    0x3ce7b
  00045: mov    rax,QWORD PTR [rdi+0x10]
  00049: mov    QWORD PTR [rbp-0x38],rax
:00001 %3 = %1.call x()                     [Vec]
:00002 
  0004d: mov    rdi,QWORD PTR [rbp-0x30]
  00051: test   rdi,0x7
  00058: jne    0x3ce91
  0005e: cmp    DWORD PTR [rdi+0x4],0x25
  00062: jne    0x3ce91
  00068: cmp    DWORD PTR [rip+0xfffffffffffff248],0x26        # 0xfffff2b7
  0006f: jne    0x3ce91
  00075: mov    esi,DWORD PTR [rip+0x3e2]        # 0x45d
  0007b: cmp    esi,0xffffffff
  0007e: je     0x3cea0
  00084: cmp    WORD PTR [rdi+0x2],0x3
  00089: jne    0xa2
  0008f: cmp    esi,0x6
  00092: jge    0xa2
  00098: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0009d: jmp    0xae
  000a2: movabs rax,0x55573c900b50
  000ac: call   rax
  000ae: mov    QWORD PTR [rbp-0x40],rax
:00004 %2 = %2 * %3                         [Float][Float]
  000b2: mov    rdi,QWORD PTR [rbp-0x38]
  000b6: test   rdi,0x1
  000bd: jne    0x3cec9
  000c3: test   rdi,0x2
  000ca: je     0x106
  000d0: xorps  xmm2,xmm2
  000d3: movabs rax,0x8000000000000002
  000dd: cmp    rdi,rax
  000e0: je     0x118
  000e6: mov    rax,rdi
  000e9: sar    rax,0x3f
  000ed: add    rax,0x2
  000f1: and    rdi,0xfffffffffffffffc
  000f5: or     rdi,rax
  000f8: rol    rdi,0x3d
  000fc: movq   xmm2,rdi
  00101: jmp    0x118
  00106: call   0xffffc917
  0010b: test   rax,rax
  0010e: je     0x3cec9
  00114: movq   xmm2,xmm0
  00118: mov    rdi,QWORD PTR [rbp-0x40]
  0011c: test   rdi,0x1
  00123: jne    0x3ced8
  00129: test   rdi,0x2
  00130: je     0x16c
  00136: xorps  xmm3,xmm3
  00139: movabs rax,0x8000000000000002
  00143: cmp    rdi,rax
  00146: je     0x17e
  0014c: mov    rax,rdi
  0014f: sar    rax,0x3f
  00153: add    rax,0x2
  00157: and    rdi,0xfffffffffffffffc
  0015b: or     rdi,rax
  0015e: rol    rdi,0x3d
  00162: movq   xmm3,rdi
  00167: jmp    0x17e
  0016c: call   0xffffc917
  00171: test   rax,rax
  00174: je     0x3ced8
  0017a: movq   xmm3,xmm0
  0017e: mulsd  xmm2,xmm3
:00005 %3 = @y: Vec[IvarId(1)]
  00182: mov    rdi,QWORD PTR [rbp-0x28]
  00186: cmp    WORD PTR [rdi+0x2],0x3
  0018b: jne    0x3cee7
  00191: mov    rax,QWORD PTR [rdi+0x18]
  00195: mov    QWORD PTR [rbp-0x40],rax
:00006 %4 = %1.call y()                     [Vec]
:00007 
  00199: mov    rdi,QWORD PTR [rbp-0x30]
  0019d: test   rdi,0x7
  001a4: jne    0x3cf0f
  001aa: cmp    DWORD PTR [rdi+0x4],0x25
  001ae: jne    0x3cf0f
  001b4: cmp    DWORD PTR [rip+0xfffffffffffff0fc],0x26        # 0xfffff2b7
  001bb: jne    0x3cf0f
  001c1: mov    esi,DWORD PTR [rip+0x29e]        # 0x465
  001c7: cmp    esi,0xffffffff
  001ca: je     0x3cf2b
  001d0: cmp    WORD PTR [rdi+0x2],0x3
  001d5: jne    0x1ee
  001db: cmp    esi,0x6
  001de: jge    0x1ee
  001e4: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001e9: jmp    0x20c
  001ee: sub    rsp,0x10
  001f2: movq   QWORD PTR [rsp],xmm2
  001f7: movabs rax,0x55573c900b50
  00201: call   rax
  00203: movq   xmm2,QWORD PTR [rsp]
  00208: add    rsp,0x10
  0020c: mov    QWORD PTR [rbp-0x48],rax
:00009 %3 = %3 * %4                         [Float][Float]
  00210: mov    rdi,QWORD PTR [rbp-0x40]
  00214: test   rdi,0x1
  0021b: jne    0x3cf66
  00221: test   rdi,0x2
  00228: je     0x264
  0022e: xorps  xmm3,xmm3
  00231: movabs rax,0x8000000000000002
  0023b: cmp    rdi,rax
  0023e: je     0x276
  00244: mov    rax,rdi
  00247: sar    rax,0x3f
  0024b: add    rax,0x2
  0024f: and    rdi,0xfffffffffffffffc
  00253: or     rdi,rax
  00256: rol    rdi,0x3d
  0025a: movq   xmm3,rdi
  0025f: jmp    0x276
  00264: call   0xffffc917
  00269: test   rax,rax
  0026c: je     0x3cf66
  00272: movq   xmm3,xmm0
  00276: mov    rdi,QWORD PTR [rbp-0x48]
  0027a: test   rdi,0x1
  00281: jne    0x3cf82
  00287: test   rdi,0x2
  0028e: je     0x2ca
  00294: xorps  xmm4,xmm4
  00297: movabs rax,0x8000000000000002
  002a1: cmp    rdi,rax
  002a4: je     0x2dc
  002aa: mov    rax,rdi
  002ad: sar    rax,0x3f
  002b1: add    rax,0x2
  002b5: and    rdi,0xfffffffffffffffc
  002b9: or     rdi,rax
  002bc: rol    rdi,0x3d
  002c0: movq   xmm4,rdi
  002c5: jmp    0x2dc
  002ca: call   0xffffc917
  002cf: test   rax,rax
  002d2: je     0x3cf82
  002d8: movq   xmm4,xmm0
  002dc: mulsd  xmm3,xmm4
:00010 %2 = %2 + %3                         [Float][Float]
  002e0: addsd  xmm2,xmm3
:00011 %3 = @z: Vec[IvarId(2)]
  002e4: mov    rdi,QWORD PTR [rbp-0x28]
  002e8: cmp    WORD PTR [rdi+0x2],0x3
  002ed: jne    0x3cf9e
  002f3: mov    rax,QWORD PTR [rdi+0x20]
  002f7: mov    QWORD PTR [rbp-0x40],rax
:00012 %4 = %1.call z()                     [Vec]
:00013 
  002fb: mov    rdi,QWORD PTR [rbp-0x30]
  002ff: test   rdi,0x7
  00306: jne    0x3cfd2
  0030c: cmp    DWORD PTR [rdi+0x4],0x25
  00310: jne    0x3cfd2
  00316: cmp    DWORD PTR [rip+0xffffffffffffef9a],0x26        # 0xfffff2b7
  0031d: jne    0x3cfd2
  00323: mov    esi,DWORD PTR [rip+0x144]        # 0x46d
  00329: cmp    esi,0xffffffff
  0032c: je     0x3cfee
  00332: cmp    WORD PTR [rdi+0x2],0x3
  00337: jne    0x350
  0033d: cmp    esi,0x6
  00340: jge    0x350
  00346: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0034b: jmp    0x36e
  00350: sub    rsp,0x10
  00354: movq   QWORD PTR [rsp],xmm2
  00359: movabs rax,0x55573c900b50
  00363: call   rax
  00365: movq   xmm2,QWORD PTR [rsp]
  0036a: add    rsp,0x10
  0036e: mov    QWORD PTR [rbp-0x48],rax
:00015 %3 = %3 * %4                         [Float][Float]
  00372: mov    rdi,QWORD PTR [rbp-0x40]
  00376: test   rdi,0x1
  0037d: jne    0x3d029
  00383: test   rdi,0x2
  0038a: je     0x3c6
  00390: xorps  xmm3,xmm3
  00393: movabs rax,0x8000000000000002
  0039d: cmp    rdi,rax
  003a0: je     0x3d8
  003a6: mov    rax,rdi
  003a9: sar    rax,0x3f
  003ad: add    rax,0x2
  003b1: and    rdi,0xfffffffffffffffc
  003b5: or     rdi,rax
  003b8: rol    rdi,0x3d
  003bc: movq   xmm3,rdi
  003c1: jmp    0x3d8
  003c6: call   0xffffc917
  003cb: test   rax,rax
  003ce: je     0x3d029
  003d4: movq   xmm3,xmm0
  003d8: mov    rdi,QWORD PTR [rbp-0x48]
  003dc: test   rdi,0x1
  003e3: jne    0x3d045
  003e9: test   rdi,0x2
  003f0: je     0x42c
  003f6: xorps  xmm4,xmm4
  003f9: movabs rax,0x8000000000000002
  00403: cmp    rdi,rax
  00406: je     0x43e
  0040c: mov    rax,rdi
  0040f: sar    rax,0x3f
  00413: add    rax,0x2
  00417: and    rdi,0xfffffffffffffffc
  0041b: or     rdi,rax
  0041e: rol    rdi,0x3d
  00422: movq   xmm4,rdi
  00427: jmp    0x43e
  0042c: call   0xffffc917
  00431: test   rax,rax
  00434: je     0x3d045
  0043a: movq   xmm4,xmm0
  0043e: mulsd  xmm3,xmm4
:00016 %2 = %2 + %3                         [Float][Float]
  00442: addsd  xmm2,xmm3
:00017 ret %2
  00446: movq   xmm0,xmm2
  0044a: call   0xffffca0a
  0044f: mov    QWORD PTR [rbp-0x38],rax
  00453: mov    rax,QWORD PTR [rbp-0x38]
  00457: leave  
  00458: ret    
==> start whole compile: intersect FuncId(63) self_class:Sphere start:[00000] bytecode:0x55573cf976a0
<== finished compile. elapsed:76.3µs
offset:Pos(15456) code: 3274 bytes  data: 222 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0xb0
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x40],rax
  00016: mov    QWORD PTR [rbp-0x48],rax
  0001a: mov    QWORD PTR [rbp-0x50],rax
  0001e: mov    QWORD PTR [rbp-0x58],rax
  00022: mov    QWORD PTR [rbp-0x60],rax
  00026: mov    QWORD PTR [rbp-0x68],rax
  0002a: mov    QWORD PTR [rbp-0x70],rax
  0002e: mov    QWORD PTR [rbp-0x78],rax
  00032: mov    QWORD PTR [rbp-0x80],rax
  00036: mov    QWORD PTR [rbp-0x88],rax
  0003d: mov    QWORD PTR [rbp-0x90],rax
  00044: mov    QWORD PTR [rbp-0x98],rax
  0004b: mov    QWORD PTR [rbp-0xa0],rax
  00052: mov    rdi,QWORD PTR [rbp-0x28]
  00056: test   rdi,0x7
  0005d: jne    0x3cb5e
  00063: cmp    DWORD PTR [rdi+0x4],0x27
  00067: jne    0x3cb5e
:00000 %9 = %1.call org()                   [Ray]
:00001 
  0006d: mov    rdi,QWORD PTR [rbp-0x30]
  00071: test   rdi,0x7
  00078: jne    0x3cb6d
  0007e: cmp    DWORD PTR [rdi+0x4],0x2b
  00082: jne    0x3cb6d
  00088: cmp    DWORD PTR [rip+0xffffffffffffed25],0x26        # 0xffffedb4
  0008f: jne    0x3cb6d
  00095: mov    esi,DWORD PTR [rip+0xc33]        # 0xcce
  0009b: cmp    esi,0xffffffff
  0009e: je     0x3cb7c
  000a4: cmp    WORD PTR [rdi+0x2],0x3
  000a9: jne    0xc2
  000af: cmp    esi,0x6
  000b2: jge    0xc2
  000b8: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd: jmp    0xce
  000c2: movabs rax,0x55573c900b50
  000cc: call   rax
  000ce: mov    QWORD PTR [rbp-0x70],rax
:00003 %10 = @center: Sphere[IvarId(0)]
  000d2: mov    rdi,QWORD PTR [rbp-0x28]
  000d6: cmp    WORD PTR [rdi+0x2],0x3
  000db: jne    0x3cba5
  000e1: mov    rax,QWORD PTR [rdi+0x10]
  000e5: mov    QWORD PTR [rbp-0x78],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
:00005 
  000e9: mov    rdi,QWORD PTR [rbp-0x70]
  000ed: test   rdi,0x7
  000f4: jne    0x3cbbb
  000fa: cmp    DWORD PTR [rdi+0x4],0x25
  000fe: jne    0x3cbbb
  00104: cmp    DWORD PTR [rip+0xffffffffffffeca9],0x26        # 0xffffedb4
  0010b: jne    0x3cbbb
  00111: mov    rax,QWORD PTR [rbx]
  00114: lea    rdi,[rsp-0x18]
  00119: mov    QWORD PTR [rdi],rax
  0011c: mov    QWORD PTR [rbx],rdi
  0011f: mov    QWORD PTR [rsp-0x20],0x0
  00128: mov    QWORD PTR [rsp-0x38],rcx
  0012d: mov    rax,QWORD PTR [rbp-0x70]
  00131: mov    QWORD PTR [rsp-0x38],rax
  00136: mov    rdi,0x1
  0013d: mov    rax,QWORD PTR [rbp-0x78]
  00141: mov    QWORD PTR [rsp-0x40],rax
  00146: mov    QWORD PTR [rsp-0x30],0x0
  0014f: movabs rax,0x800000039
  00159: mov    QWORD PTR [rsp-0x28],rax
  0015e: movabs r13,0x55573cf9efb0
  00168: call   0xfffffa13
  0016d: lea    rdi,[rbp-0x8]
  00171: mov    QWORD PTR [rbx],rdi
  00174: movabs r13,0x55573cf97700
  0017e: test   rax,rax
  00181: je     0xffffc3db
  00187: mov    QWORD PTR [rbp-0x40],rax
:00007 %9 = %1.call dir()                   [Ray]
:00008 
  0018b: mov    rdi,QWORD PTR [rbp-0x30]
  0018f: test   rdi,0x7
  00196: jne    0x3cbca
  0019c: cmp    DWORD PTR [rdi+0x4],0x2b
  001a0: jne    0x3cbca
  001a6: cmp    DWORD PTR [rip+0xffffffffffffec07],0x26        # 0xffffedb4
  001ad: jne    0x3cbca
  001b3: mov    esi,DWORD PTR [rip+0xb1d]        # 0xcd6
  001b9: cmp    esi,0xffffffff
  001bc: je     0x3cbd9
  001c2: cmp    WORD PTR [rdi+0x2],0x3
  001c7: jne    0x1e0
  001cd: cmp    esi,0x6
  001d0: jge    0x1e0
  001d6: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001db: jmp    0x1ec
  001e0: movabs rax,0x55573c900b50
  001ea: call   rax
  001ec: mov    QWORD PTR [rbp-0x70],rax
:00010 %4 = %3.call vdot(%9; 1)             [Vec]
:00011 
  001f0: mov    rdi,QWORD PTR [rbp-0x40]
  001f4: test   rdi,0x7
  001fb: jne    0x3cc02
  00201: cmp    DWORD PTR [rdi+0x4],0x25
  00205: jne    0x3cc02
  0020b: cmp    DWORD PTR [rip+0xffffffffffffeba2],0x26        # 0xffffedb4
  00212: jne    0x3cc02
  00218: mov    rax,QWORD PTR [rbx]
  0021b: lea    rdi,[rsp-0x18]
  00220: mov    QWORD PTR [rdi],rax
  00223: mov    QWORD PTR [rbx],rdi
  00226: mov    QWORD PTR [rsp-0x20],0x0
  0022f: mov    QWORD PTR [rsp-0x38],rcx
  00234: mov    rax,QWORD PTR [rbp-0x40]
  00238: mov    QWORD PTR [rsp-0x38],rax
  0023d: mov    rdi,0x1
  00244: mov    rax,QWORD PTR [rbp-0x70]
  00248: mov    QWORD PTR [rsp-0x40],rax
  0024d: mov    QWORD PTR [rsp-0x30],0x0
  00256: movabs rax,0x50000003b
  00260: mov    QWORD PTR [rsp-0x28],rax
  00265: movabs r13,0x55573cfe1010
  0026f: call   0xfffffaa5
  00274: lea    rdi,[rbp-0x8]
  00278: mov    QWORD PTR [rbx],rdi
  0027b: movabs r13,0x55573cf97760
  00285: test   rax,rax
  00288: je     0xffffc3db
  0028e: mov    QWORD PTR [rbp-0x48],rax
:00013 %10 = %3
  00292: mov    rax,QWORD PTR [rbp-0x40]
  00296: mov    QWORD PTR [rbp-0x78],rax
:00014 %9 = %3.call vdot(%10; 1)            [Vec]
:00015 
  0029a: mov    rdi,QWORD PTR [rbp-0x40]
  0029e: test   rdi,0x7
  002a5: jne    0x3cc11
  002ab: cmp    DWORD PTR [rdi+0x4],0x25
  002af: jne    0x3cc11
  002b5: cmp    DWORD PTR [rip+0xffffffffffffeaf8],0x26        # 0xffffedb4
  002bc: jne    0x3cc11
  002c2: mov    rax,QWORD PTR [rbx]
  002c5: lea    rdi,[rsp-0x18]
  002ca: mov    QWORD PTR [rdi],rax
  002cd: mov    QWORD PTR [rbx],rdi
  002d0: mov    QWORD PTR [rsp-0x20],0x0
  002d9: mov    QWORD PTR [rsp-0x38],rcx
  002de: mov    rax,QWORD PTR [rbp-0x40]
  002e2: mov    QWORD PTR [rsp-0x38],rax
  002e7: mov    rdi,0x1
  002ee: mov    rax,QWORD PTR [rbp-0x78]
  002f2: mov    QWORD PTR [rsp-0x40],rax
  002f7: mov    QWORD PTR [rsp-0x30],0x0
  00300: movabs rax,0x50000003b
  0030a: mov    QWORD PTR [rsp-0x28],rax
  0030f: movabs r13,0x55573cfe1010
  00319: call   0xfffffaa5
  0031e: lea    rdi,[rbp-0x8]
  00322: mov    QWORD PTR [rbx],rdi
  00325: movabs r13,0x55573cf977a0
  0032f: test   rax,rax
  00332: je     0xffffc3db
  00338: mov    QWORD PTR [rbp-0x70],rax
:00017 %10 = @radius: Sphere[IvarId(1)]
  0033c: mov    rdi,QWORD PTR [rbp-0x28]
  00340: cmp    WORD PTR [rdi+0x2],0x3
  00345: jne    0x3cc20
  0034b: mov    rax,QWORD PTR [rdi+0x18]
  0034f: mov    QWORD PTR [rbp-0x78],rax
:00018 %11 = @radius: Sphere[IvarId(1)]
  00353: mov    rdi,QWORD PTR [rbp-0x28]
  00357: cmp    WORD PTR [rdi+0x2],0x3
  0035c: jne    0x3cc36
  00362: mov    rax,QWORD PTR [rdi+0x18]
  00366: mov    QWORD PTR [rbp-0x80],rax
:00019 %10 = %10 * %11                      [Float][Float]
  0036a: mov    rdi,QWORD PTR [rbp-0x78]
  0036e: test   rdi,0x1
  00375: jne    0x3cc4c
  0037b: test   rdi,0x2
  00382: je     0x3be
  00388: xorps  xmm2,xmm2
  0038b: movabs rax,0x8000000000000002
  00395: cmp    rdi,rax
  00398: je     0x3d0
  0039e: mov    rax,rdi
  003a1: sar    rax,0x3f
  003a5: add    rax,0x2
  003a9: and    rdi,0xfffffffffffffffc
  003ad: or     rdi,rax
  003b0: rol    rdi,0x3d
  003b4: movq   xmm2,rdi
  003b9: jmp    0x3d0
  003be: call   0xffffc414
  003c3: test   rax,rax
  003c6: je     0x3cc4c
  003cc: movq   xmm2,xmm0
  003d0: mov    rdi,QWORD PTR [rbp-0x80]
  003d4: test   rdi,0x1
  003db: jne    0x3cc5b
  003e1: test   rdi,0x2
  003e8: je     0x424
  003ee: xorps  xmm3,xmm3
  003f1: movabs rax,0x8000000000000002
  003fb: cmp    rdi,rax
  003fe: je     0x436
  00404: mov    rax,rdi
  00407: sar    rax,0x3f
  0040b: add    rax,0x2
  0040f: and    rdi,0xfffffffffffffffc
  00413: or     rdi,rax
  00416: rol    rdi,0x3d
  0041a: movq   xmm3,rdi
  0041f: jmp    0x436
  00424: call   0xffffc414
  00429: test   rax,rax
  0042c: je     0x3cc5b
  00432: movq   xmm3,xmm0
  00436: mulsd  xmm2,xmm3
:00020 %5 = %9 - %10                        [Float][Float]
  0043a: mov    rdi,QWORD PTR [rbp-0x70]
  0043e: test   rdi,0x1
  00445: jne    0x3cc6a
  0044b: test   rdi,0x2
  00452: je     0x48e
  00458: xorps  xmm4,xmm4
  0045b: movabs rax,0x8000000000000002
  00465: cmp    rdi,rax
  00468: je     0x4a0
  0046e: mov    rax,rdi
  00471: sar    rax,0x3f
  00475: add    rax,0x2
  00479: and    rdi,0xfffffffffffffffc
  0047d: or     rdi,rax
  00480: rol    rdi,0x3d
  00484: movq   xmm4,rdi
  00489: jmp    0x4a0
  0048e: call   0xffffc414
  00493: test   rax,rax
  00496: je     0x3cc6a
  0049c: movq   xmm4,xmm0
  004a0: movq   xmm5,xmm4
  004a4: subsd  xmm5,xmm2
:00021 %9 = %4 * %4                         [Float][Float]
  004a8: mov    rdi,QWORD PTR [rbp-0x48]
  004ac: test   rdi,0x1
  004b3: jne    0x3cc86
  004b9: test   rdi,0x2
  004c0: je     0x4fc
  004c6: xorps  xmm6,xmm6
  004c9: movabs rax,0x8000000000000002
  004d3: cmp    rdi,rax
  004d6: je     0x50e
  004dc: mov    rax,rdi
  004df: sar    rax,0x3f
  004e3: add    rax,0x2
  004e7: and    rdi,0xfffffffffffffffc
  004eb: or     rdi,rax
  004ee: rol    rdi,0x3d
  004f2: movq   xmm6,rdi
  004f7: jmp    0x50e
  004fc: call   0xffffc414
  00501: test   rax,rax
  00504: je     0x3cc86
  0050a: movq   xmm6,xmm0
  0050e: movq   xmm4,xmm6
  00512: mulsd  xmm4,xmm6
:00022 %6 = %9 - %5                         [Float][Float]
  00516: movq   xmm7,xmm4
  0051a: subsd  xmm7,xmm5
:00023 %9 = literal[0.0]
  0051e: movq   xmm4,QWORD PTR [rip+0x7ba]        # 0xce0
:00024 _%9 = %6 > %9                        [Float][Float]
:00025 condnotbr _%9 =>:00113
  00526: ucomisd xmm7,xmm4
  0052a: jbe    0x3d591
:00026 %9 = %4
:00027 %9 = neg %9                          [<INVALID>]
  00530: mov    rdi,0x4
  00537: sub    DWORD PTR [rip+0x7aa],0x1        # 0xce8
  0053e: jne    0x3ccaf
  00544: mov    rdi,r12
  00547: mov    esi,DWORD PTR [rbp-0x18]
  0054a: mov    rdx,QWORD PTR [rbp-0x28]
  0054e: movabs rax,0x55573c962b00
  00558: call   rax
  0055a: mov    rdi,0x4
  00561: jmp    0x3ccaf
:00028 %11 = const[Math]                    [<INVALID>]
  00566: mov    rax,QWORD PTR [rip+0xffffffffffffe853]        # 0xffffedc0
  0056d: cmp    rax,QWORD PTR [rip+0x78c]        # 0xd00
  00574: jne    0x3ccf2
  0057a: mov    rax,QWORD PTR [rip+0x76f]        # 0xcf0
  00581: mov    QWORD PTR [rbp-0x80],rax
:00029 %12 = %6
:00030 %10 = %11.call sqrt(%12; 1)          [<INVALID>]
:00031 
  00585: mov    rdi,0x4
  0058c: sub    DWORD PTR [rip+0x775],0x1        # 0xd08
  00593: jne    0x3cd6e
  00599: mov    rdi,r12
  0059c: mov    esi,DWORD PTR [rbp-0x18]
  0059f: mov    rdx,QWORD PTR [rbp-0x28]
  005a3: movabs rax,0x55573c962b00
  005ad: call   rax
  005af: mov    rdi,0x4
  005b6: jmp    0x3cd6e
:00033 %7 = %9 - %10                        [<INVALID>][<INVALID>]
  005bb: mov    rdi,0x4
  005c2: sub    DWORD PTR [rip+0x743],0x1        # 0xd0c
  005c9: jne    0x3cdb8
  005cf: mov    rdi,r12
  005d2: mov    esi,DWORD PTR [rbp-0x18]
  005d5: mov    rdx,QWORD PTR [rbp-0x28]
  005d9: movabs rax,0x55573c962b00
  005e3: call   rax
  005e5: mov    rdi,0x4
  005ec: jmp    0x3cdb8
:00034 %10 = literal[0.0]
  005f1: movq   xmm2,QWORD PTR [rip+0x717]        # 0xd10
:00035 %9 = %7 > %10                        [<INVALID>][<INVALID>]
  005f9: mov    rdi,0x4
  00600: sub    DWORD PTR [rip+0x711],0x1        # 0xd18
  00607: jne    0x3ce02
  0060d: mov    rdi,r12
  00610: mov    esi,DWORD PTR [rbp-0x18]
  00613: mov    rdx,QWORD PTR [rbp-0x28]
  00617: movabs rax,0x55573c962b00
  00621: call   rax
  00623: mov    rdi,0x4
  0062a: jmp    0x3ce02
:00036 condnotbr %9 =>:00041
  0062f: mov    rax,QWORD PTR [rbp-0x70]
  00633: or     rax,0x10
  00637: cmp    rax,0x14
  0063b: je     0x3cee0
:00037 %10 = %2.call t()                    [<INVALID>]
:00038 
  00641: mov    rdi,0x4
  00648: sub    DWORD PTR [rip+0x6cd],0x1        # 0xd1c
  0064f: jne    0x3ce4c
  00655: mov    rdi,r12
  00658: mov    esi,DWORD PTR [rbp-0x18]
  0065b: mov    rdx,QWORD PTR [rbp-0x28]
  0065f: movabs rax,0x55573c962b00
  00669: call   rax
  0066b: mov    rdi,0x4
  00672: jmp    0x3ce4c
:00040 %9 = %7 < %10                        [<INVALID>][<INVALID>]
  00677: mov    rdi,0x4
  0067e: sub    DWORD PTR [rip+0x69b],0x1        # 0xd20
  00685: jne    0x3ce96
  0068b: mov    rdi,r12
  0068e: mov    esi,DWORD PTR [rbp-0x18]
  00691: mov    rdx,QWORD PTR [rbp-0x28]
  00695: movabs rax,0x55573c962b00
  0069f: call   rax
  006a1: mov    rdi,0x4
  006a8: jmp    0x3ce96
  006ad: jmp    0x3cf34
:00041 condnotbr %9 =>:00112
  006b2: mov    rax,QWORD PTR [rbp-0x70]
  006b6: or     rax,0x10
  006ba: cmp    rax,0x14
  006be: je     0x3d4ff
:00042 _ = %2.call t=(%7; 1)                [<INVALID>]
:00043 
  006c4: mov    rdi,0x4
  006cb: sub    DWORD PTR [rip+0x652],0x1        # 0xd24
  006d2: jne    0x3cf88
  006d8: mov    rdi,r12
  006db: mov    esi,DWORD PTR [rbp-0x18]
  006de: mov    rdx,QWORD PTR [rbp-0x28]
  006e2: movabs rax,0x55573c962b00
  006ec: call   rax
  006ee: mov    rdi,0x4
  006f5: jmp    0x3cf88
:00045 %9 = literal[true]
  006fa: mov    rax,0x1c
  00701: mov    QWORD PTR [rbp-0x70],rax
:00046 _ = %2.call hit=(%9; 1)              [<INVALID>]
:00047 
  00705: mov    rdi,0x4
  0070c: sub    DWORD PTR [rip+0x615],0x1        # 0xd28
  00713: jne    0x3cfd2
  00719: mov    rdi,r12
  0071c: mov    esi,DWORD PTR [rbp-0x18]
  0071f: mov    rdx,QWORD PTR [rbp-0x28]
  00723: movabs rax,0x55573c962b00
  0072d: call   rax
  0072f: mov    rdi,0x4
  00736: jmp    0x3cfd2
:00049 %10 = const[Vec]                     [<INVALID>]
  0073b: mov    rax,QWORD PTR [rip+0xffffffffffffe67e]        # 0xffffedc0
  00742: cmp    rax,QWORD PTR [rip+0x5f7]        # 0xd40
  00749: jne    0x3d00f
  0074f: mov    rax,QWORD PTR [rip+0x5da]        # 0xd30
  00756: mov    QWORD PTR [rbp-0x78],rax
:00050 %12 = %1.call org()                  [<INVALID>]
:00051 
  0075a: mov    rdi,0x4
  00761: sub    DWORD PTR [rip+0x5e0],0x1        # 0xd48
  00768: jne    0x3d07f
  0076e: mov    rdi,r12
  00771: mov    esi,DWORD PTR [rbp-0x18]
  00774: mov    rdx,QWORD PTR [rbp-0x28]
  00778: movabs rax,0x55573c962b00
  00782: call   rax
  00784: mov    rdi,0x4
  0078b: jmp    0x3d07f
:00053 %11 = %12.call x()                   [<INVALID>]
:00054 
  00790: mov    rdi,0x4
  00797: sub    DWORD PTR [rip+0x5ae],0x1        # 0xd4c
  0079e: jne    0x3d0af
  007a4: mov    rdi,r12
  007a7: mov    esi,DWORD PTR [rbp-0x18]
  007aa: mov    rdx,QWORD PTR [rbp-0x28]
  007ae: movabs rax,0x55573c962b00
  007b8: call   rax
  007ba: mov    rdi,0x4
  007c1: jmp    0x3d0af
:00056 %13 = %1.call dir()                  [<INVALID>]
:00057 
  007c6: mov    rdi,0x4
  007cd: sub    DWORD PTR [rip+0x57c],0x1        # 0xd50
  007d4: jne    0x3d0df
  007da: mov    rdi,r12
  007dd: mov    esi,DWORD PTR [rbp-0x18]
  007e0: mov    rdx,QWORD PTR [rbp-0x28]
  007e4: movabs rax,0x55573c962b00
  007ee: call   rax
  007f0: mov    rdi,0x4
  007f7: jmp    0x3d0df
:00059 %12 = %13.call x()                   [<INVALID>]
:00060 
  007fc: mov    rdi,0x4
  00803: sub    DWORD PTR [rip+0x54a],0x1        # 0xd54
  0080a: jne    0x3d10f
  00810: mov    rdi,r12
  00813: mov    esi,DWORD PTR [rbp-0x18]
  00816: mov    rdx,QWORD PTR [rbp-0x28]
  0081a: movabs rax,0x55573c962b00
  00824: call   rax
  00826: mov    rdi,0x4
  0082d: jmp    0x3d10f
:00062 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00832: mov    rdi,0x4
  00839: sub    DWORD PTR [rip+0x518],0x1        # 0xd58
  00840: jne    0x3d13f
  00846: mov    rdi,r12
  00849: mov    esi,DWORD PTR [rbp-0x18]
  0084c: mov    rdx,QWORD PTR [rbp-0x28]
  00850: movabs rax,0x55573c962b00
  0085a: call   rax
  0085c: mov    rdi,0x4
  00863: jmp    0x3d13f
:00063 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00868: mov    rdi,0x4
  0086f: sub    DWORD PTR [rip+0x4e6],0x1        # 0xd5c
  00876: jne    0x3d16f
  0087c: mov    rdi,r12
  0087f: mov    esi,DWORD PTR [rbp-0x18]
  00882: mov    rdx,QWORD PTR [rbp-0x28]
  00886: movabs rax,0x55573c962b00
  00890: call   rax
  00892: mov    rdi,0x4
  00899: jmp    0x3d16f
:00064 %13 = %1.call org()                  [<INVALID>]
:00065 
  0089e: mov    rdi,0x4
  008a5: sub    DWORD PTR [rip+0x4b4],0x1        # 0xd60
  008ac: jne    0x3d19f
  008b2: mov    rdi,r12
  008b5: mov    esi,DWORD PTR [rbp-0x18]
  008b8: mov    rdx,QWORD PTR [rbp-0x28]
  008bc: movabs rax,0x55573c962b00
  008c6: call   rax
  008c8: mov    rdi,0x4
  008cf: jmp    0x3d19f
:00067 %12 = %13.call y()                   [<INVALID>]
:00068 
  008d4: mov    rdi,0x4
  008db: sub    DWORD PTR [rip+0x482],0x1        # 0xd64
  008e2: jne    0x3d1cf
  008e8: mov    rdi,r12
  008eb: mov    esi,DWORD PTR [rbp-0x18]
  008ee: mov    rdx,QWORD PTR [rbp-0x28]
  008f2: movabs rax,0x55573c962b00
  008fc: call   rax
  008fe: mov    rdi,0x4
  00905: jmp    0x3d1cf
:00070 %14 = %1.call dir()                  [<INVALID>]
:00071 
  0090a: mov    rdi,0x4
  00911: sub    DWORD PTR [rip+0x450],0x1        # 0xd68
  00918: jne    0x3d1ff
  0091e: mov    rdi,r12
  00921: mov    esi,DWORD PTR [rbp-0x18]
  00924: mov    rdx,QWORD PTR [rbp-0x28]
  00928: movabs rax,0x55573c962b00
  00932: call   rax
  00934: mov    rdi,0x4
  0093b: jmp    0x3d1ff
:00073 %13 = %14.call y()                   [<INVALID>]
:00074 
  00940: mov    rdi,0x4
  00947: sub    DWORD PTR [rip+0x41e],0x1        # 0xd6c
  0094e: jne    0x3d22f
  00954: mov    rdi,r12
  00957: mov    esi,DWORD PTR [rbp-0x18]
  0095a: mov    rdx,QWORD PTR [rbp-0x28]
  0095e: movabs rax,0x55573c962b00
  00968: call   rax
  0096a: mov    rdi,0x4
  00971: jmp    0x3d22f
:00076 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  00976: mov    rdi,0x4
  0097d: sub    DWORD PTR [rip+0x3ec],0x1        # 0xd70
  00984: jne    0x3d25f
  0098a: mov    rdi,r12
  0098d: mov    esi,DWORD PTR [rbp-0x18]
  00990: mov    rdx,QWORD PTR [rbp-0x28]
  00994: movabs rax,0x55573c962b00
  0099e: call   rax
  009a0: mov    rdi,0x4
  009a7: jmp    0x3d25f
:00077 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  009ac: mov    rdi,0x4
  009b3: sub    DWORD PTR [rip+0x3ba],0x1        # 0xd74
  009ba: jne    0x3d28f
  009c0: mov    rdi,r12
  009c3: mov    esi,DWORD PTR [rbp-0x18]
  009c6: mov    rdx,QWORD PTR [rbp-0x28]
  009ca: movabs rax,0x55573c962b00
  009d4: call   rax
  009d6: mov    rdi,0x4
  009dd: jmp    0x3d28f
:00078 %14 = %1.call org()                  [<INVALID>]
:00079 
  009e2: mov    rdi,0x4
  009e9: sub    DWORD PTR [rip+0x388],0x1        # 0xd78
  009f0: jne    0x3d2bf
  009f6: mov    rdi,r12
  009f9: mov    esi,DWORD PTR [rbp-0x18]
  009fc: mov    rdx,QWORD PTR [rbp-0x28]
  00a00: movabs rax,0x55573c962b00
  00a0a: call   rax
  00a0c: mov    rdi,0x4
  00a13: jmp    0x3d2bf
:00081 %13 = %14.call z()                   [<INVALID>]
:00082 
  00a18: mov    rdi,0x4
  00a1f: sub    DWORD PTR [rip+0x356],0x1        # 0xd7c
  00a26: jne    0x3d2ef
  00a2c: mov    rdi,r12
  00a2f: mov    esi,DWORD PTR [rbp-0x18]
  00a32: mov    rdx,QWORD PTR [rbp-0x28]
  00a36: movabs rax,0x55573c962b00
  00a40: call   rax
  00a42: mov    rdi,0x4
  00a49: jmp    0x3d2ef
:00084 %15 = %1.call dir()                  [<INVALID>]
:00085 
  00a4e: mov    rdi,0x4
  00a55: sub    DWORD PTR [rip+0x324],0x1        # 0xd80
  00a5c: jne    0x3d31f
  00a62: mov    rdi,r12
  00a65: mov    esi,DWORD PTR [rbp-0x18]
  00a68: mov    rdx,QWORD PTR [rbp-0x28]
  00a6c: movabs rax,0x55573c962b00
  00a76: call   rax
  00a78: mov    rdi,0x4
  00a7f: jmp    0x3d31f
:00087 %14 = %15.call z()                   [<INVALID>]
:00088 
  00a84: mov    rdi,0x4
  00a8b: sub    DWORD PTR [rip+0x2f2],0x1        # 0xd84
  00a92: jne    0x3d34f
  00a98: mov    rdi,r12
  00a9b: mov    esi,DWORD PTR [rbp-0x18]
  00a9e: mov    rdx,QWORD PTR [rbp-0x28]
  00aa2: movabs rax,0x55573c962b00
  00aac: call   rax
  00aae: mov    rdi,0x4
  00ab5: jmp    0x3d34f
:00090 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  00aba: mov    rdi,0x4
  00ac1: sub    DWORD PTR [rip+0x2c0],0x1        # 0xd88
  00ac8: jne    0x3d37f
  00ace: mov    rdi,r12
  00ad1: mov    esi,DWORD PTR [rbp-0x18]
  00ad4: mov    rdx,QWORD PTR [rbp-0x28]
  00ad8: movabs rax,0x55573c962b00
  00ae2: call   rax
  00ae4: mov    rdi,0x4
  00aeb: jmp    0x3d37f
:00091 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  00af0: mov    rdi,0x4
  00af7: sub    DWORD PTR [rip+0x28e],0x1        # 0xd8c
  00afe: jne    0x3d3af
  00b04: mov    rdi,r12
  00b07: mov    esi,DWORD PTR [rbp-0x18]
  00b0a: mov    rdx,QWORD PTR [rbp-0x28]
  00b0e: movabs rax,0x55573c962b00
  00b18: call   rax
  00b1a: mov    rdi,0x4
  00b21: jmp    0x3d3af
:00092 %9 = %10.call new(%11; 3)            [<INVALID>]
:00093 
  00b26: mov    rdi,0x4
  00b2d: sub    DWORD PTR [rip+0x25c],0x1        # 0xd90
  00b34: jne    0x3d3df
  00b3a: mov    rdi,r12
  00b3d: mov    esi,DWORD PTR [rbp-0x18]
  00b40: mov    rdx,QWORD PTR [rbp-0x28]
  00b44: movabs rax,0x55573c962b00
  00b4e: call   rax
  00b50: mov    rdi,0x4
  00b57: jmp    0x3d3df
:00095 _ = %2.call pl=(%9; 1)               [<INVALID>]
:00096 
  00b5c: mov    rdi,0x4
  00b63: sub    DWORD PTR [rip+0x22a],0x1        # 0xd94
  00b6a: jne    0x3d40f
  00b70: mov    rdi,r12
  00b73: mov    esi,DWORD PTR [rbp-0x18]
  00b76: mov    rdx,QWORD PTR [rbp-0x28]
  00b7a: movabs rax,0x55573c962b00
  00b84: call   rax
  00b86: mov    rdi,0x4
  00b8d: jmp    0x3d40f
:00098 %9 = %2.call pl()                    [<INVALID>]
:00099 
  00b92: mov    rdi,0x4
  00b99: sub    DWORD PTR [rip+0x1f8],0x1        # 0xd98
  00ba0: jne    0x3d43f
  00ba6: mov    rdi,r12
  00ba9: mov    esi,DWORD PTR [rbp-0x18]
  00bac: mov    rdx,QWORD PTR [rbp-0x28]
  00bb0: movabs rax,0x55573c962b00
  00bba: call   rax
  00bbc: mov    rdi,0x4
  00bc3: jmp    0x3d43f
:00101 %10 = @center: <INVALID>[IvarId(0)]
  00bc8: mov    rdi,QWORD PTR [rbp-0x28]
  00bcc: sub    rsp,0x20
  00bd0: movq   QWORD PTR [rsp],xmm5
  00bd5: movq   QWORD PTR [rsp+0x8],xmm6
  00bdb: movq   QWORD PTR [rsp+0x10],xmm7
  00be1: mov    rsi,0x7b
  00be8: mov    rdx,r12
  00beb: movabs rax,0x55573c95d1a0
  00bf5: call   rax
  00bf7: movq   xmm5,QWORD PTR [rsp]
  00bfc: movq   xmm6,QWORD PTR [rsp+0x8]
  00c02: movq   xmm7,QWORD PTR [rsp+0x10]
  00c08: add    rsp,0x20
  00c0c: mov    QWORD PTR [rbp-0x78],rax
:00102 %8 = %9.call vsub(%10; 1)            [<INVALID>]
:00103 
  00c10: mov    rdi,0x4
  00c17: sub    DWORD PTR [rip+0x17e],0x1        # 0xd9c
  00c1e: jne    0x3d46f
  00c24: mov    rdi,r12
  00c27: mov    esi,DWORD PTR [rbp-0x18]
  00c2a: mov    rdx,QWORD PTR [rbp-0x28]
  00c2e: movabs rax,0x55573c962b00
  00c38: call   rax
  00c3a: mov    rdi,0x4
  00c41: jmp    0x3d46f
:00105 %9 = %8.call vnormalize()            [<INVALID>]
:00106 
  00c46: mov    rdi,0x4
  00c4d: sub    DWORD PTR [rip+0x14c],0x1        # 0xda0
  00c54: jne    0x3d49f
  00c5a: mov    rdi,r12
  00c5d: mov    esi,DWORD PTR [rbp-0x18]
  00c60: mov    rdx,QWORD PTR [rbp-0x28]
  00c64: movabs rax,0x55573c962b00
  00c6e: call   rax
  00c70: mov    rdi,0x4
  00c77: jmp    0x3d49f
:00108 _ = %2.call n=(%9; 1)                [<INVALID>]
:00109 
  00c7c: mov    rdi,0x4
  00c83: sub    DWORD PTR [rip+0x11a],0x1        # 0xda4
  00c8a: jne    0x3d4cf
  00c90: mov    rdi,r12
  00c93: mov    esi,DWORD PTR [rbp-0x18]
  00c96: mov    rdx,QWORD PTR [rbp-0x28]
  00c9a: movabs rax,0x55573c962b00
  00ca4: call   rax
  00ca6: mov    rdi,0x4
  00cad: jmp    0x3d4cf
:00111 br =>:00112
  00cb2: jmp    0x3d557
:00112 br =>:00113
  00cb7: jmp    0x3d5de
:00113 %9 = nil
  00cbc: mov    QWORD PTR [rbp-0x70],0x4
:00114 ret %9
  00cc4: mov    rax,QWORD PTR [rbp-0x70]
  00cc8: leave  
  00cc9: ret    
==> start whole compile: vsub FuncId(57) self_class:Vec start:[00000] bytecode:0x55573cf9efb0
<== finished compile. elapsed:37.4µs
offset:Pos(18952) code: 1364 bytes  data: 52 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x70
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    QWORD PTR [rbp-0x50],rax
  0001f: mov    QWORD PTR [rbp-0x58],rax
  00023: mov    QWORD PTR [rbp-0x60],rax
  00027: mov    rdi,QWORD PTR [rbp-0x28]
  0002b: test   rdi,0x7
  00032: jne    0x3c8a9
  00038: cmp    DWORD PTR [rdi+0x4],0x25
  0003c: jne    0x3c8a9
:00000 %3 = const[Vec]                      [Vec]
  00042: mov    rax,QWORD PTR [rip+0xffffffffffffdfcf]        # 0xffffe018
  00049: cmp    rax,QWORD PTR [rip+0x518]        # 0x568
  00050: jne    0x3c8b8
  00056: mov    rax,QWORD PTR [rip+0x4fb]        # 0x558
  0005d: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = @x: Vec[IvarId(0)]
  00061: mov    rdi,QWORD PTR [rbp-0x28]
  00065: cmp    WORD PTR [rdi+0x2],0x3
  0006a: jne    0x3c8fe
  00070: mov    rax,QWORD PTR [rdi+0x10]
  00074: mov    QWORD PTR [rbp-0x48],rax
:00002 %5 = %1.call x()                     [Vec]
:00003 
  00078: mov    rdi,QWORD PTR [rbp-0x30]
  0007c: test   rdi,0x7
  00083: jne    0x3c914
  00089: cmp    DWORD PTR [rdi+0x4],0x25
  0008d: jne    0x3c914
  00093: cmp    DWORD PTR [rip+0xffffffffffffdf72],0x26        # 0xffffe00c
  0009a: jne    0x3c914
  000a0: mov    esi,DWORD PTR [rip+0x4ce]        # 0x574
  000a6: cmp    esi,0xffffffff
  000a9: je     0x3c923
  000af: cmp    WORD PTR [rdi+0x2],0x3
  000b4: jne    0xcd
  000ba: cmp    esi,0x6
  000bd: jge    0xcd
  000c3: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c8: jmp    0xd9
  000cd: movabs rax,0x55573c900b50
  000d7: call   rax
  000d9: mov    QWORD PTR [rbp-0x50],rax
:00005 %4 = %4 - %5                         [Float][Float]
  000dd: mov    rdi,QWORD PTR [rbp-0x48]
  000e1: test   rdi,0x1
  000e8: jne    0x3c94c
  000ee: test   rdi,0x2
  000f5: je     0x131
  000fb: xorps  xmm2,xmm2
  000fe: movabs rax,0x8000000000000002
  00108: cmp    rdi,rax
  0010b: je     0x143
  00111: mov    rax,rdi
  00114: sar    rax,0x3f
  00118: add    rax,0x2
  0011c: and    rdi,0xfffffffffffffffc
  00120: or     rdi,rax
  00123: rol    rdi,0x3d
  00127: movq   xmm2,rdi
  0012c: jmp    0x143
  00131: call   0xffffb66c
  00136: test   rax,rax
  00139: je     0x3c94c
  0013f: movq   xmm2,xmm0
  00143: mov    rdi,QWORD PTR [rbp-0x50]
  00147: test   rdi,0x1
  0014e: jne    0x3c95b
  00154: test   rdi,0x2
  0015b: je     0x197
  00161: xorps  xmm3,xmm3
  00164: movabs rax,0x8000000000000002
  0016e: cmp    rdi,rax
  00171: je     0x1a9
  00177: mov    rax,rdi
  0017a: sar    rax,0x3f
  0017e: add    rax,0x2
  00182: and    rdi,0xfffffffffffffffc
  00186: or     rdi,rax
  00189: rol    rdi,0x3d
  0018d: movq   xmm3,rdi
  00192: jmp    0x1a9
  00197: call   0xffffb66c
  0019c: test   rax,rax
  0019f: je     0x3c95b
  001a5: movq   xmm3,xmm0
  001a9: subsd  xmm2,xmm3
:00006 %5 = @y: Vec[IvarId(1)]
  001ad: mov    rdi,QWORD PTR [rbp-0x28]
  001b1: cmp    WORD PTR [rdi+0x2],0x3
  001b6: jne    0x3c96a
  001bc: mov    rax,QWORD PTR [rdi+0x18]
  001c0: mov    QWORD PTR [rbp-0x50],rax
:00007 %6 = %1.call y()                     [Vec]
:00008 
  001c4: mov    rdi,QWORD PTR [rbp-0x30]
  001c8: test   rdi,0x7
  001cf: jne    0x3c992
  001d5: cmp    DWORD PTR [rdi+0x4],0x25
  001d9: jne    0x3c992
  001df: cmp    DWORD PTR [rip+0xffffffffffffde26],0x26        # 0xffffe00c
  001e6: jne    0x3c992
  001ec: mov    esi,DWORD PTR [rip+0x38a]        # 0x57c
  001f2: cmp    esi,0xffffffff
  001f5: je     0x3c9ae
  001fb: cmp    WORD PTR [rdi+0x2],0x3
  00200: jne    0x219
  00206: cmp    esi,0x6
  00209: jge    0x219
  0020f: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00214: jmp    0x237
  00219: sub    rsp,0x10
  0021d: movq   QWORD PTR [rsp],xmm2
  00222: movabs rax,0x55573c900b50
  0022c: call   rax
  0022e: movq   xmm2,QWORD PTR [rsp]
  00233: add    rsp,0x10
  00237: mov    QWORD PTR [rbp-0x58],rax
:00010 %5 = %5 - %6                         [Float][Float]
  0023b: mov    rdi,QWORD PTR [rbp-0x50]
  0023f: test   rdi,0x1
  00246: jne    0x3c9e9
  0024c: test   rdi,0x2
  00253: je     0x28f
  00259: xorps  xmm3,xmm3
  0025c: movabs rax,0x8000000000000002
  00266: cmp    rdi,rax
  00269: je     0x2a1
  0026f: mov    rax,rdi
  00272: sar    rax,0x3f
  00276: add    rax,0x2
  0027a: and    rdi,0xfffffffffffffffc
  0027e: or     rdi,rax
  00281: rol    rdi,0x3d
  00285: movq   xmm3,rdi
  0028a: jmp    0x2a1
  0028f: call   0xffffb66c
  00294: test   rax,rax
  00297: je     0x3c9e9
  0029d: movq   xmm3,xmm0
  002a1: mov    rdi,QWORD PTR [rbp-0x58]
  002a5: test   rdi,0x1
  002ac: jne    0x3ca05
  002b2: test   rdi,0x2
  002b9: je     0x2f5
  002bf: xorps  xmm4,xmm4
  002c2: movabs rax,0x8000000000000002
  002cc: cmp    rdi,rax
  002cf: je     0x307
  002d5: mov    rax,rdi
  002d8: sar    rax,0x3f
  002dc: add    rax,0x2
  002e0: and    rdi,0xfffffffffffffffc
  002e4: or     rdi,rax
  002e7: rol    rdi,0x3d
  002eb: movq   xmm4,rdi
  002f0: jmp    0x307
  002f5: call   0xffffb66c
  002fa: test   rax,rax
  002fd: je     0x3ca05
  00303: movq   xmm4,xmm0
  00307: subsd  xmm3,xmm4
:00011 %6 = @z: Vec[IvarId(2)]
  0030b: mov    rdi,QWORD PTR [rbp-0x28]
  0030f: cmp    WORD PTR [rdi+0x2],0x3
  00314: jne    0x3ca21
  0031a: mov    rax,QWORD PTR [rdi+0x20]
  0031e: mov    QWORD PTR [rbp-0x58],rax
:00012 %7 = %1.call z()                     [Vec]
:00013 
  00322: mov    rdi,QWORD PTR [rbp-0x30]
  00326: test   rdi,0x7
  0032d: jne    0x3ca55
  00333: cmp    DWORD PTR [rdi+0x4],0x25
  00337: jne    0x3ca55
  0033d: cmp    DWORD PTR [rip+0xffffffffffffdcc8],0x26        # 0xffffe00c
  00344: jne    0x3ca55
  0034a: mov    esi,DWORD PTR [rip+0x234]        # 0x584
  00350: cmp    esi,0xffffffff
  00353: je     0x3ca7e
  00359: cmp    WORD PTR [rdi+0x2],0x3
  0035e: jne    0x377
  00364: cmp    esi,0x6
  00367: jge    0x377
  0036d: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00372: jmp    0x3a1
  00377: sub    rsp,0x10
  0037b: movq   QWORD PTR [rsp],xmm2
  00380: movq   QWORD PTR [rsp+0x8],xmm3
  00386: movabs rax,0x55573c900b50
  00390: call   rax
  00392: movq   xmm2,QWORD PTR [rsp]
  00397: movq   xmm3,QWORD PTR [rsp+0x8]
  0039d: add    rsp,0x10
  003a1: mov    QWORD PTR [rbp-0x60],rax
:00015 %6 = %6 - %7                         [Float][Float]
  003a5: mov    rdi,QWORD PTR [rbp-0x58]
  003a9: test   rdi,0x1
  003b0: jne    0x3cac5
  003b6: test   rdi,0x2
  003bd: je     0x3f9
  003c3: xorps  xmm4,xmm4
  003c6: movabs rax,0x8000000000000002
  003d0: cmp    rdi,rax
  003d3: je     0x40b
  003d9: mov    rax,rdi
  003dc: sar    rax,0x3f
  003e0: add    rax,0x2
  003e4: and    rdi,0xfffffffffffffffc
  003e8: or     rdi,rax
  003eb: rol    rdi,0x3d
  003ef: movq   xmm4,rdi
  003f4: jmp    0x40b
  003f9: call   0xffffb66c
  003fe: test   rax,rax
  00401: je     0x3cac5
  00407: movq   xmm4,xmm0
  0040b: mov    rdi,QWORD PTR [rbp-0x60]
  0040f: test   rdi,0x1
  00416: jne    0x3caee
  0041c: test   rdi,0x2
  00423: je     0x45f
  00429: xorps  xmm5,xmm5
  0042c: movabs rax,0x8000000000000002
  00436: cmp    rdi,rax
  00439: je     0x471
  0043f: mov    rax,rdi
  00442: sar    rax,0x3f
  00446: add    rax,0x2
  0044a: and    rdi,0xfffffffffffffffc
  0044e: or     rdi,rax
  00451: rol    rdi,0x3d
  00455: movq   xmm5,rdi
  0045a: jmp    0x471
  0045f: call   0xffffb66c
  00464: test   rax,rax
  00467: je     0x3caee
  0046d: movq   xmm5,xmm0
  00471: subsd  xmm4,xmm5
:00016 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
:00017 
  00475: movq   xmm0,xmm2
  00479: call   0xffffb75f
  0047e: mov    QWORD PTR [rbp-0x48],rax
  00482: movq   xmm0,xmm3
  00486: call   0xffffb75f
  0048b: mov    QWORD PTR [rbp-0x50],rax
  0048f: movq   xmm0,xmm4
  00493: call   0xffffb75f
  00498: mov    QWORD PTR [rbp-0x58],rax
  0049c: mov    rdi,QWORD PTR [rbp-0x40]
  004a0: test   rdi,0x7
  004a7: jne    0x3cb17
  004ad: cmp    DWORD PTR [rdi+0x4],0x26
  004b1: jne    0x3cb17
  004b7: cmp    DWORD PTR [rip+0xffffffffffffdb4e],0x26        # 0xffffe00c
  004be: jne    0x3cb17
  004c4: mov    r9,0x0
  004cb: sub    rsp,0x20
  004cf: movq   QWORD PTR [rsp],xmm2
  004d4: movq   QWORD PTR [rsp+0x8],xmm3
  004da: movq   QWORD PTR [rsp+0x10],xmm4
  004e0: movq   QWORD PTR [rsp+0x18],xmm5
  004e6: mov    rdx,rdi
  004e9: mov    rax,QWORD PTR [rbx]
  004ec: lea    rdi,[rsp-0x18]
  004f1: mov    QWORD PTR [rdi],rax
  004f4: mov    QWORD PTR [rbx],rdi
  004f7: mov    QWORD PTR [rsp-0x20],0x0
  00500: mov    QWORD PTR [rsp-0x38],rcx
  00505: lea    rcx,[rbp-0x48]
  00509: mov    r8,0x3
  00510: call   0x3cb26
  00515: lea    rdi,[rbp-0x8]
  00519: mov    QWORD PTR [rbx],rdi
  0051c: movq   xmm2,QWORD PTR [rsp]
  00521: movq   xmm3,QWORD PTR [rsp+0x8]
  00527: movq   xmm4,QWORD PTR [rsp+0x10]
  0052d: movq   xmm5,QWORD PTR [rsp+0x18]
  00533: add    rsp,0x20
  00537: movabs r13,0x55573cf9f0d0
  00541: test   rax,rax
  00544: je     0xffffb633
  0054a: mov    QWORD PTR [rbp-0x38],rax
:00019 ret %2
  0054e: mov    rax,QWORD PTR [rbp-0x38]
  00552: leave  
  00553: ret    
==> start whole compile: <unnamed> FuncId(76) self_class:Scene start:[00000] bytecode:0x55573cfddc10
<== finished compile. elapsed:113.8µs
offset:Pos(20639) code: 6214 bytes  data: 335 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xd0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00064: ff 	mov    QWORD PTR [rbp-0xb8],rax
  0006b: ff 	mov    QWORD PTR [rbp-0xc0],rax
  00072:    	mov    rdi,QWORD PTR [rbp-0x28]
  00076: 00 	test   rdi,0x7
  0007d:    	jne    0x3c4c1
  00083:    	cmp    DWORD PTR [rdi+0x4],0x2f
  00087:    	jne    0x3c4c1
:00000 %14 = dynvar(4, %4)
  0008d:    	mov    rax,QWORD PTR [rbp-0x10]
  00091:    	mov    rax,QWORD PTR [rax]
  00094:    	mov    rax,QWORD PTR [rax]
  00097:    	mov    rax,QWORD PTR [rax]
  0009a:    	mov    rax,QWORD PTR [rax-0x38]
  0009e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00001 %14 = %14 + 1: i16                   [Integer][Integer]
  000a5: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000ac: 00 	test   rdi,0x1
  000b3:    	je     0x3c4d0
  000b9:    	add    rdi,0x2
  000bd:    	jo     0x3c4d0
  000c3: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00002 dynvar(4, %4) = %14
  000ca:    	mov    rax,QWORD PTR [rbp-0x10]
  000ce:    	mov    rax,QWORD PTR [rax]
  000d1:    	mov    rax,QWORD PTR [rax]
  000d4:    	mov    rax,QWORD PTR [rax]
  000d7: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000de:    	mov    QWORD PTR [rax-0x38],rdi
:00003 %14 = dynvar(4, %1)
  000e2:    	mov    rax,QWORD PTR [rbp-0x10]
  000e6:    	mov    rax,QWORD PTR [rax]
  000e9:    	mov    rax,QWORD PTR [rax]
  000ec:    	mov    rax,QWORD PTR [rax]
  000ef:    	mov    rax,QWORD PTR [rax-0x20]
  000f3: ff 	mov    QWORD PTR [rbp-0x98],rax
:00004 %2 = %14.call to_f()                 [Integer]
:00005 
  000fa: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00101: 00 	test   rdi,0x1
  00108:    	jne    0x125
  0010e: 00 	test   rdi,0x7
  00115:    	jne    0x3c4df
  0011b:    	cmp    DWORD PTR [rdi+0x4],0x6
  0011f:    	jne    0x3c4df
  00125: 26 	cmp    DWORD PTR [rip+0xffffffffffffd849],0x26        # 0xffffd975
  0012c:    	jne    0x3c4df
  00132:    	sar    rdi,1
  00135:    	cvtsi2sd xmm2,rdi
:00007 %14 = dynvar(4, %2)
  0013a:    	mov    rax,QWORD PTR [rbp-0x10]
  0013e:    	mov    rax,QWORD PTR [rax]
  00141:    	mov    rax,QWORD PTR [rax]
  00144:    	mov    rax,QWORD PTR [rax]
  00147:    	mov    rax,QWORD PTR [rax-0x28]
  0014b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 %3 = %14.call to_f()                 [Integer]
:00009 
  00152: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00159: 00 	test   rdi,0x1
  00160:    	jne    0x17d
  00166: 00 	test   rdi,0x7
  0016d:    	jne    0x3c4ee
  00173:    	cmp    DWORD PTR [rdi+0x4],0x6
  00177:    	jne    0x3c4ee
  0017d: 26 	cmp    DWORD PTR [rip+0xffffffffffffd7f1],0x26        # 0xffffd975
  00184:    	jne    0x3c4ee
  0018a:    	sar    rdi,1
  0018d:    	cvtsi2sd xmm3,rdi
:00011 %14 = dynvar(2, %1)
  00192:    	mov    rax,QWORD PTR [rbp-0x10]
  00196:    	mov    rax,QWORD PTR [rax]
  00199:    	mov    rax,QWORD PTR [rax-0x20]
  0019d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %4 = %14.call to_f()                 [Integer]
:00013 
  001a4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001ab: 00 	test   rdi,0x1
  001b2:    	jne    0x1cf
  001b8: 00 	test   rdi,0x7
  001bf:    	jne    0x3c50a
  001c5:    	cmp    DWORD PTR [rdi+0x4],0x6
  001c9:    	jne    0x3c50a
  001cf: 26 	cmp    DWORD PTR [rip+0xffffffffffffd79f],0x26        # 0xffffd975
  001d6:    	jne    0x3c50a
  001dc:    	sar    rdi,1
  001df:    	cvtsi2sd xmm4,rdi
:00015 %14 = dynvar(3, %1)
  001e4:    	mov    rax,QWORD PTR [rbp-0x10]
  001e8:    	mov    rax,QWORD PTR [rax]
  001eb:    	mov    rax,QWORD PTR [rax]
  001ee:    	mov    rax,QWORD PTR [rax-0x20]
  001f2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00016 %5 = %14.call to_f()                 [Integer]
:00017 
  001f9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00200: 00 	test   rdi,0x1
  00207:    	jne    0x224
  0020d: 00 	test   rdi,0x7
  00214:    	jne    0x3c533
  0021a:    	cmp    DWORD PTR [rdi+0x4],0x6
  0021e:    	jne    0x3c533
  00224: 26 	cmp    DWORD PTR [rip+0xffffffffffffd74a],0x26        # 0xffffd975
  0022b:    	jne    0x3c533
  00231:    	sar    rdi,1
  00234:    	cvtsi2sd xmm5,rdi
:00019 %6 = %1.call to_f()                  [Integer]
:00020 
  00239:    	mov    rdi,QWORD PTR [rbp-0x30]
  0023d: 00 	test   rdi,0x1
  00244:    	jne    0x261
  0024a: 00 	test   rdi,0x7
  00251:    	jne    0x3c569
  00257:    	cmp    DWORD PTR [rdi+0x4],0x6
  0025b:    	jne    0x3c569
  00261: 26 	cmp    DWORD PTR [rip+0xffffffffffffd70d],0x26        # 0xffffd975
  00268:    	jne    0x3c569
  0026e:    	sar    rdi,1
  00271:    	cvtsi2sd xmm6,rdi
:00022 %14 = dynvar(1, %1)
  00276:    	mov    rax,QWORD PTR [rbp-0x10]
  0027a:    	mov    rax,QWORD PTR [rax-0x20]
  0027e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00023 %7 = %14.call to_f()                 [Integer]
:00024 
  00285: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0028c: 00 	test   rdi,0x1
  00293:    	jne    0x2b0
  00299: 00 	test   rdi,0x7
  002a0:    	jne    0x3c5ac
  002a6:    	cmp    DWORD PTR [rdi+0x4],0x6
  002aa:    	jne    0x3c5ac
  002b0: 26 	cmp    DWORD PTR [rip+0xffffffffffffd6be],0x26        # 0xffffd975
  002b7:    	jne    0x3c5ac
  002bd:    	sar    rdi,1
  002c0:    	cvtsi2sd xmm7,rdi
:00026 %14 = dynvar(4, %5)
  002c5:    	mov    rax,QWORD PTR [rbp-0x10]
  002c9:    	mov    rax,QWORD PTR [rax]
  002cc:    	mov    rax,QWORD PTR [rax]
  002cf:    	mov    rax,QWORD PTR [rax]
  002d2:    	mov    rax,QWORD PTR [rax-0x40]
  002d6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00027 %14 = %6 / %14                       [Float][Float]
  002dd: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002e4: 00 	test   rdi,0x1
  002eb:    	jne    0x3c5fc
  002f1: 00 	test   rdi,0x2
  002f8:    	je     0x335
  002fe:    	xorps  xmm8,xmm8
  00302: 00 	movabs rax,0x8000000000000002
  0030c:    	cmp    rdi,rax
  0030f:    	je     0x348
  00315:    	mov    rax,rdi
  00318:    	sar    rax,0x3f
  0031c:    	add    rax,0x2
  00320:    	and    rdi,0xfffffffffffffffc
  00324:    	or     rdi,rax
  00327:    	rol    rdi,0x3d
  0032b:    	movq   xmm8,rdi
  00330:    	jmp    0x348
  00335:    	call   0xffffafd5
  0033a:    	test   rax,rax
  0033d:    	je     0x3c5fc
  00343:    	movq   xmm8,xmm0
  00348:    	movq   rax,xmm8
  0034d:    	test   rax,rax
  00350:    	je     0xffffafc1
  00356:    	movq   xmm0,xmm6
  0035a:    	divsd  xmm0,xmm8
  0035f:    	movq   xmm8,xmm0
:00028 %14 = %4 + %14                       [Float][Float]
  00364:    	addsd  xmm8,xmm4
:00029 %15 = literal[2.0]
  00369: 14 	movq   xmm9,QWORD PTR [rip+0x14df]        # 0x1851
:00030 %15 = %2 / %15                       [Float][Float]
  00372:    	movq   rax,xmm9
  00377:    	test   rax,rax
  0037a:    	je     0xffffafc1
  00380:    	movq   xmm0,xmm2
  00384:    	divsd  xmm0,xmm9
  00389:    	movq   xmm9,xmm0
:00031 %14 = %14 - %15                      [Float][Float]
  0038e:    	subsd  xmm8,xmm9
:00032 %15 = literal[2.0]
  00393: 14 	movq   xmm9,QWORD PTR [rip+0x14c5]        # 0x1861
:00033 %15 = %2 / %15                       [Float][Float]
  0039c:    	movq   rax,xmm9
  003a1:    	test   rax,rax
  003a4:    	je     0xffffafc1
  003aa:    	movq   xmm0,xmm2
  003ae:    	divsd  xmm0,xmm9
  003b3:    	movq   xmm9,xmm0
:00034 %8 = %14 / %15                       [Float][Float]
  003b8:    	movq   xmm10,xmm8
  003bd:    	movq   rax,xmm9
  003c2:    	test   rax,rax
  003c5:    	je     0xffffafc1
  003cb:    	divsd  xmm10,xmm9
:00035 %14 = dynvar(4, %5)
  003d0:    	mov    rax,QWORD PTR [rbp-0x10]
  003d4:    	mov    rax,QWORD PTR [rax]
  003d7:    	mov    rax,QWORD PTR [rax]
  003da:    	mov    rax,QWORD PTR [rax]
  003dd:    	mov    rax,QWORD PTR [rax-0x40]
  003e1: ff 	mov    QWORD PTR [rbp-0x98],rax
:00036 %14 = %7 / %14                       [Float][Float]
  003e8: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003ef: 00 	test   rdi,0x1
  003f6:    	jne    0x3c659
  003fc: 00 	test   rdi,0x2
  00403:    	je     0x440
  00409:    	xorps  xmm8,xmm8
  0040d: 00 	movabs rax,0x8000000000000002
  00417:    	cmp    rdi,rax
  0041a:    	je     0x453
  00420:    	mov    rax,rdi
  00423:    	sar    rax,0x3f
  00427:    	add    rax,0x2
  0042b:    	and    rdi,0xfffffffffffffffc
  0042f:    	or     rdi,rax
  00432:    	rol    rdi,0x3d
  00436:    	movq   xmm8,rdi
  0043b:    	jmp    0x453
  00440:    	call   0xffffafd5
  00445:    	test   rax,rax
  00448:    	je     0x3c659
  0044e:    	movq   xmm8,xmm0
  00453:    	movq   rax,xmm8
  00458:    	test   rax,rax
  0045b:    	je     0xffffafc1
  00461:    	movq   xmm0,xmm7
  00465:    	divsd  xmm0,xmm8
  0046a:    	movq   xmm8,xmm0
:00037 %14 = %5 + %14                       [Float][Float]
  0046f:    	addsd  xmm8,xmm5
:00038 %15 = literal[2.0]
  00474: 13 	movq   xmm9,QWORD PTR [rip+0x13f4]        # 0x1871
:00039 %15 = %3 / %15                       [Float][Float]
  0047d:    	movq   rax,xmm9
  00482:    	test   rax,rax
  00485:    	je     0xffffafc1
  0048b:    	movq   xmm0,xmm3
  0048f:    	divsd  xmm0,xmm9
  00494:    	movq   xmm9,xmm0
:00040 %14 = %14 - %15                      [Float][Float]
  00499:    	subsd  xmm8,xmm9
:00041 %14 = neg %14                        [Float]
  0049e: 00 	xorps  xmm8,XMMWORD PTR [rip+0x13db]        # 0x1881
:00042 %15 = literal[2.0]
  004a6: 13 	movq   xmm9,QWORD PTR [rip+0x13e2]        # 0x1891
:00043 %15 = %3 / %15                       [Float][Float]
  004af:    	movq   rax,xmm9
  004b4:    	test   rax,rax
  004b7:    	je     0xffffafc1
  004bd:    	movq   xmm0,xmm3
  004c1:    	divsd  xmm0,xmm9
  004c6:    	movq   xmm9,xmm0
:00044 %9 = %14 / %15                       [Float][Float]
  004cb:    	movq   xmm11,xmm8
  004d0:    	movq   rax,xmm9
  004d5:    	test   rax,rax
  004d8:    	je     0xffffafc1
  004de:    	divsd  xmm11,xmm9
:00045 %15 = const[Vec]                     [Vec]
  004e3: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffd497]        # 0xffffd981
  004ea: 00 	cmp    rax,QWORD PTR [rip+0x13c0]        # 0x18b1
  004f1:    	jne    0x3c6d5
  004f7: 00 	mov    rax,QWORD PTR [rip+0x13a3]        # 0x18a1
  004fe: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00046 %16 = %8
:00047 %17 = %9
:00048 %18 = literal[-1.0]
  00505: 13 	movq   xmm9,QWORD PTR [rip+0x13b3]        # 0x18c1
:00049 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
:00050 
  0050e:    	movq   xmm0,xmm10
  00513:    	call   0xffffb0c8
  00518: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0051f:    	movq   xmm0,xmm11
  00524:    	call   0xffffb0c8
  00529: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00530:    	movq   xmm0,xmm9
  00535:    	call   0xffffb0c8
  0053a: ff 	mov    QWORD PTR [rbp-0xb8],rax
  00541: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00548: 00 	test   rdi,0x7
  0054f:    	jne    0x3c793
  00555:    	cmp    DWORD PTR [rdi+0x4],0x26
  00559:    	jne    0x3c793
  0055f: 26 	cmp    DWORD PTR [rip+0xffffffffffffd40f],0x26        # 0xffffd975
  00566:    	jne    0x3c793
  0056c: 00 	mov    r9,0x0
  00573:    	sub    rsp,0x50
  00577:    	movq   QWORD PTR [rsp],xmm2
  0057c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00582:    	movq   QWORD PTR [rsp+0x10],xmm4
  00588:    	movq   QWORD PTR [rsp+0x18],xmm5
  0058e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00594:    	movq   QWORD PTR [rsp+0x28],xmm7
  0059a: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  005a1: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  005a8: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  005af:    	mov    rdx,rdi
  005b2:    	mov    rax,QWORD PTR [rbx]
  005b5:    	lea    rdi,[rsp-0x18]
  005ba:    	mov    QWORD PTR [rdi],rax
  005bd:    	mov    QWORD PTR [rbx],rdi
  005c0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  005c9:    	mov    QWORD PTR [rsp-0x38],rcx
  005ce: ff 	lea    rcx,[rbp-0xa8]
  005d5: 00 	mov    r8,0x3
  005dc:    	call   0x3c80c
  005e1:    	lea    rdi,[rbp-0x8]
  005e5:    	mov    QWORD PTR [rbx],rdi
  005e8:    	movq   xmm2,QWORD PTR [rsp]
  005ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005ff:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00605:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0060b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00612: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00619: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00620:    	add    rsp,0x50
  00624: 57 	movabs r13,0x55573cfddf40
  0062e:    	test   rax,rax
  00631:    	je     0xffffaf9c
  00637: ff 	mov    QWORD PTR [rbp-0x98],rax
:00052 %10 = %14.call vnormalize()          [Vec]
:00053 
  0063e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00645: 00 	test   rdi,0x7
  0064c:    	jne    0x3c83e
  00652:    	cmp    DWORD PTR [rdi+0x4],0x25
  00656:    	jne    0x3c83e
  0065c: 26 	cmp    DWORD PTR [rip+0xffffffffffffd312],0x26        # 0xffffd975
  00663:    	jne    0x3c83e
  00669:    	sub    rsp,0x50
  0066d:    	movq   QWORD PTR [rsp],xmm2
  00672:    	movq   QWORD PTR [rsp+0x8],xmm3
  00678:    	movq   QWORD PTR [rsp+0x10],xmm4
  0067e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00684:    	movq   QWORD PTR [rsp+0x20],xmm6
  0068a:    	movq   QWORD PTR [rsp+0x28],xmm7
  00690: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00697: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0069e: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  006a5:    	mov    rax,QWORD PTR [rbx]
  006a8:    	lea    rdi,[rsp-0x18]
  006ad:    	mov    QWORD PTR [rdi],rax
  006b0:    	mov    QWORD PTR [rbx],rdi
  006b3: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006bc:    	mov    QWORD PTR [rsp-0x38],rcx
  006c1: ff 	mov    rax,QWORD PTR [rbp-0x98]
  006c8:    	mov    QWORD PTR [rsp-0x38],rax
  006cd: 00 	mov    rdi,0x0
  006d4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006dd: 07 	movabs rax,0x70000003d
  006e7:    	mov    QWORD PTR [rsp-0x28],rax
  006ec: 57 	movabs r13,0x55573cfa76a0
  006f6:    	call   0xffffe23a
  006fb:    	lea    rdi,[rbp-0x8]
  006ff:    	mov    QWORD PTR [rbx],rdi
  00702:    	movq   xmm2,QWORD PTR [rsp]
  00707:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0070d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00713:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00719:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0071f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00725: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0072c: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00733: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0073a:    	add    rsp,0x50
  0073e: 57 	movabs r13,0x55573cfddf70
  00748:    	test   rax,rax
  0074b:    	je     0xffffaf9c
  00751:    	mov    QWORD PTR [rbp-0x78],rax
:00055 %14 = const[Ray]                     [Ray]
  00755: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffd225]        # 0xffffd981
  0075c: 00 	cmp    rax,QWORD PTR [rip+0x117e]        # 0x18e1
  00763:    	jne    0x3c8b7
  00769: 00 	mov    rax,QWORD PTR [rip+0x1161]        # 0x18d1
  00770: ff 	mov    QWORD PTR [rbp-0x98],rax
:00056 %16 = const[Vec]                     [Vec]
  00777: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffd203]        # 0xffffd981
  0077e: 00 	cmp    rax,QWORD PTR [rip+0x117c]        # 0x1901
  00785:    	jne    0x3c975
  0078b: 00 	mov    rax,QWORD PTR [rip+0x115f]        # 0x18f1
  00792: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00057 %17 = literal[0.0]
  00799: 11 	movq   xmm8,QWORD PTR [rip+0x116f]        # 0x1911
:00058 %18 = literal[0.0]
  007a2: 11 	movq   xmm9,QWORD PTR [rip+0x1176]        # 0x1921
:00059 %19 = literal[0.0]
  007ab: 11 	movq   xmm12,QWORD PTR [rip+0x117d]        # 0x1931
:00060 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
:00061 
  007b4:    	movq   xmm0,xmm8
  007b9:    	call   0xffffb0c8
  007be: ff 	mov    QWORD PTR [rbp-0xb0],rax
  007c5:    	movq   xmm0,xmm9
  007ca:    	call   0xffffb0c8
  007cf: ff 	mov    QWORD PTR [rbp-0xb8],rax
  007d6:    	movq   xmm0,xmm12
  007db:    	call   0xffffb0c8
  007e0: ff 	mov    QWORD PTR [rbp-0xc0],rax
  007e7: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  007ee: 00 	test   rdi,0x7
  007f5:    	jne    0x3ca33
  007fb:    	cmp    DWORD PTR [rdi+0x4],0x26
  007ff:    	jne    0x3ca33
  00805: 26 	cmp    DWORD PTR [rip+0xffffffffffffd169],0x26        # 0xffffd975
  0080c:    	jne    0x3ca33
  00812: 00 	mov    r9,0x0
  00819:    	sub    rsp,0x60
  0081d:    	movq   QWORD PTR [rsp],xmm2
  00822:    	movq   QWORD PTR [rsp+0x8],xmm3
  00828:    	movq   QWORD PTR [rsp+0x10],xmm4
  0082e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00834:    	movq   QWORD PTR [rsp+0x20],xmm6
  0083a:    	movq   QWORD PTR [rsp+0x28],xmm7
  00840: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00847: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0084e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00855: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0085c: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00863:    	mov    rdx,rdi
  00866:    	mov    rax,QWORD PTR [rbx]
  00869:    	lea    rdi,[rsp-0x18]
  0086e:    	mov    QWORD PTR [rdi],rax
  00871:    	mov    QWORD PTR [rbx],rdi
  00874: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0087d:    	mov    QWORD PTR [rsp-0x38],rcx
  00882: ff 	lea    rcx,[rbp-0xb0]
  00889: 00 	mov    r8,0x3
  00890:    	call   0x3caac
  00895:    	lea    rdi,[rbp-0x8]
  00899:    	mov    QWORD PTR [rbx],rdi
  0089c:    	movq   xmm2,QWORD PTR [rsp]
  008a1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008a7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008ad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008b3:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008b9:    	movq   xmm7,QWORD PTR [rsp+0x28]
  008bf: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  008c6: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  008cd: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  008d4: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  008db: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  008e2:    	add    rsp,0x60
  008e6: 57 	movabs r13,0x55573cfddff0
  008f0:    	test   rax,rax
  008f3:    	je     0xffffaf9c
  008f9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00063 %16 = %10
  00900:    	mov    rax,QWORD PTR [rbp-0x78]
  00904: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00064 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
:00065 
  0090b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00912: 00 	test   rdi,0x7
  00919:    	jne    0x3cade
  0091f:    	cmp    DWORD PTR [rdi+0x4],0x2c
  00923:    	jne    0x3cade
  00929: 26 	cmp    DWORD PTR [rip+0xffffffffffffd045],0x26        # 0xffffd975
  00930:    	jne    0x3cade
  00936: 00 	mov    r9,0x0
  0093d:    	sub    rsp,0x60
  00941:    	movq   QWORD PTR [rsp],xmm2
  00946:    	movq   QWORD PTR [rsp+0x8],xmm3
  0094c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00952:    	movq   QWORD PTR [rsp+0x18],xmm5
  00958:    	movq   QWORD PTR [rsp+0x20],xmm6
  0095e:    	movq   QWORD PTR [rsp+0x28],xmm7
  00964: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0096b: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00972: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00979: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00980: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00987:    	mov    rdx,rdi
  0098a:    	mov    rax,QWORD PTR [rbx]
  0098d:    	lea    rdi,[rsp-0x18]
  00992:    	mov    QWORD PTR [rdi],rax
  00995:    	mov    QWORD PTR [rbx],rdi
  00998: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009a1:    	mov    QWORD PTR [rsp-0x38],rcx
  009a6: ff 	lea    rcx,[rbp-0xa0]
  009ad: 00 	mov    r8,0x2
  009b4:    	call   0x3cb57
  009b9:    	lea    rdi,[rbp-0x8]
  009bd:    	mov    QWORD PTR [rbx],rdi
  009c0:    	movq   xmm2,QWORD PTR [rsp]
  009c5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009cb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009d1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009d7:    	movq   xmm6,QWORD PTR [rsp+0x20]
  009dd:    	movq   xmm7,QWORD PTR [rsp+0x28]
  009e3: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  009ea: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  009f1: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  009f8: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  009ff: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00a06:    	add    rsp,0x60
  00a0a: 57 	movabs r13,0x55573cfde030
  00a14:    	test   rax,rax
  00a17:    	je     0xffffaf9c
  00a1d:    	mov    QWORD PTR [rbp-0x80],rax
:00067 %14 = const[Isect]                   [Isect]
  00a21: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffcf59]        # 0xffffd981
  00a28: 00 	cmp    rax,QWORD PTR [rip+0xf22]        # 0x1951
  00a2f:    	jne    0x3cb89
  00a35: 00 	mov    rax,QWORD PTR [rip+0xf05]        # 0x1941
  00a3c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00068 %12 = %14.call new()                 [#<Class:Isect>]
:00069 
  00a43: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a4a: 00 	test   rdi,0x7
  00a51:    	jne    0x3cc63
  00a57:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00a5b:    	jne    0x3cc63
  00a61: 26 	cmp    DWORD PTR [rip+0xffffffffffffcf0d],0x26        # 0xffffd975
  00a68:    	jne    0x3cc63
  00a6e: 00 	mov    r9,0x0
  00a75:    	sub    rsp,0x60
  00a79:    	movq   QWORD PTR [rsp],xmm2
  00a7e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a84:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a8a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a90:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a96:    	movq   QWORD PTR [rsp+0x28],xmm7
  00a9c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00aa3: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00aaa: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ab1: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ab8: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00abf:    	mov    rdx,rdi
  00ac2:    	mov    rax,QWORD PTR [rbx]
  00ac5:    	lea    rdi,[rsp-0x18]
  00aca:    	mov    QWORD PTR [rdi],rax
  00acd:    	mov    QWORD PTR [rbx],rdi
  00ad0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ad9:    	mov    QWORD PTR [rsp-0x38],rcx
  00ade: ff 	lea    rcx,[rbp-0xa0]
  00ae5: 00 	mov    r8,0x0
  00aec:    	call   0x3ccdc
  00af1:    	lea    rdi,[rbp-0x8]
  00af5:    	mov    QWORD PTR [rbx],rdi
  00af8:    	movq   xmm2,QWORD PTR [rsp]
  00afd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b03:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b09:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b0f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00b15:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00b1b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00b22: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00b29: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00b30: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00b37: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00b3e:    	add    rsp,0x60
  00b42: 57 	movabs r13,0x55573cfde070
  00b4c:    	test   rax,rax
  00b4f:    	je     0xffffaf9c
  00b55: ff 	mov    QWORD PTR [rbp-0x88],rax
:00071 %14 = @spheres: Scene[IvarId(0)]
  00b5c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b60:    	cmp    WORD PTR [rdi+0x2],0x3
  00b65:    	jne    0x3cd0e
  00b6b:    	mov    rax,QWORD PTR [rdi+0x10]
  00b6f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 %15 = 0: i32
  00b76: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00073 %14 = %14.[%15]
  00b81:    	sub    rsp,0x60
  00b85:    	movq   QWORD PTR [rsp],xmm2
  00b8a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b90:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b96:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b9c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00ba2:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ba8: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00baf: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00bb6: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00bbd: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00bc4: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00bcb: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00bd2: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00bd9:    	mov    rdi,rbx
  00bdc:    	mov    rsi,r12
  00bdf: 57 	movabs rax,0x55573c95cc80
  00be9:    	call   rax
  00beb:    	movq   xmm2,QWORD PTR [rsp]
  00bf0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bf6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00bfc:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c02:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00c08:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00c0e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00c15: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00c1c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00c23: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00c2a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00c31:    	add    rsp,0x60
  00c35: 57 	movabs r13,0x55573cfde0b0
  00c3f:    	test   rax,rax
  00c42:    	je     0xffffaf9c
  00c48: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 %15 = %11
  00c4f:    	mov    rax,QWORD PTR [rbp-0x80]
  00c53: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00075 %16 = %12
  00c5a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c61: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00076 _ = %14.call intersect(%15; 2)       [Sphere]
:00077 
  00c68: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c6f: 00 	test   rdi,0x7
  00c76:    	jne    0x3cdb8
  00c7c:    	cmp    DWORD PTR [rdi+0x4],0x27
  00c80:    	jne    0x3cdb8
  00c86: 26 	cmp    DWORD PTR [rip+0xffffffffffffcce8],0x26        # 0xffffd975
  00c8d:    	jne    0x3cdb8
  00c93:    	sub    rsp,0x60
  00c97:    	movq   QWORD PTR [rsp],xmm2
  00c9c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ca2:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ca8:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cae:    	movq   QWORD PTR [rsp+0x20],xmm6
  00cb4:    	movq   QWORD PTR [rsp+0x28],xmm7
  00cba: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00cc1: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00cc8: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ccf: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00cd6: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00cdd:    	mov    rax,QWORD PTR [rbx]
  00ce0:    	lea    rdi,[rsp-0x18]
  00ce5:    	mov    QWORD PTR [rdi],rax
  00ce8:    	mov    QWORD PTR [rbx],rdi
  00ceb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cf4:    	mov    QWORD PTR [rsp-0x38],rcx
  00cf9: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00d00:    	mov    QWORD PTR [rsp-0x38],rax
  00d05: 00 	mov    rdi,0x2
  00d0c: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00d13:    	mov    QWORD PTR [rsp-0x40],rax
  00d18: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00d1f:    	mov    QWORD PTR [rsp-0x48],rax
  00d24: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d2d: 10 	movabs rax,0x100000003f
  00d37:    	mov    QWORD PTR [rsp-0x28],rax
  00d3c: 57 	movabs r13,0x55573cf976a0
  00d46:    	call   0xffffe542
  00d4b:    	lea    rdi,[rbp-0x8]
  00d4f:    	mov    QWORD PTR [rbx],rdi
  00d52:    	movq   xmm2,QWORD PTR [rsp]
  00d57:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d5d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d63:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d69:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d6f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d75: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d7c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d83: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d8a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00d91: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00d98:    	add    rsp,0x60
  00d9c: 57 	movabs r13,0x55573cfde0f0
  00da6:    	test   rax,rax
  00da9:    	je     0xffffaf9c
:00079 %14 = @spheres: Scene[IvarId(0)]
  00daf:    	mov    rdi,QWORD PTR [rbp-0x28]
  00db3:    	cmp    WORD PTR [rdi+0x2],0x3
  00db8:    	jne    0x3ce31
  00dbe:    	mov    rax,QWORD PTR [rdi+0x10]
  00dc2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 %15 = 1: i32
  00dc9: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00081 %14 = %14.[%15]
  00dd4:    	sub    rsp,0x60
  00dd8:    	movq   QWORD PTR [rsp],xmm2
  00ddd:    	movq   QWORD PTR [rsp+0x8],xmm3
  00de3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00de9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00def:    	movq   QWORD PTR [rsp+0x20],xmm6
  00df5:    	movq   QWORD PTR [rsp+0x28],xmm7
  00dfb: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e02: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e09: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00e10: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00e17: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00e1e: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00e25: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00e2c:    	mov    rdi,rbx
  00e2f:    	mov    rsi,r12
  00e32: 57 	movabs rax,0x55573c95cc80
  00e3c:    	call   rax
  00e3e:    	movq   xmm2,QWORD PTR [rsp]
  00e43:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e49:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e4f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e55:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e5b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e61: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e68: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e6f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e76: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e7d: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e84:    	add    rsp,0x60
  00e88: 57 	movabs r13,0x55573cfde130
  00e92:    	test   rax,rax
  00e95:    	je     0xffffaf9c
  00e9b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 %15 = %11
  00ea2:    	mov    rax,QWORD PTR [rbp-0x80]
  00ea6: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00083 %16 = %12
  00ead: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00eb4: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00084 _ = %14.call intersect(%15; 2)       [Sphere]
:00085 
  00ebb: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ec2: 00 	test   rdi,0x7
  00ec9:    	jne    0x3cedb
  00ecf:    	cmp    DWORD PTR [rdi+0x4],0x27
  00ed3:    	jne    0x3cedb
  00ed9: 26 	cmp    DWORD PTR [rip+0xffffffffffffca95],0x26        # 0xffffd975
  00ee0:    	jne    0x3cedb
  00ee6:    	sub    rsp,0x60
  00eea:    	movq   QWORD PTR [rsp],xmm2
  00eef:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ef5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00efb:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f01:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f07:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f0d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f14: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f1b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00f22: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00f29: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00f30:    	mov    rax,QWORD PTR [rbx]
  00f33:    	lea    rdi,[rsp-0x18]
  00f38:    	mov    QWORD PTR [rdi],rax
  00f3b:    	mov    QWORD PTR [rbx],rdi
  00f3e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f47:    	mov    QWORD PTR [rsp-0x38],rcx
  00f4c: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00f53:    	mov    QWORD PTR [rsp-0x38],rax
  00f58: 00 	mov    rdi,0x2
  00f5f: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f66:    	mov    QWORD PTR [rsp-0x40],rax
  00f6b: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f72:    	mov    QWORD PTR [rsp-0x48],rax
  00f77: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f80: 10 	movabs rax,0x100000003f
  00f8a:    	mov    QWORD PTR [rsp-0x28],rax
  00f8f: 57 	movabs r13,0x55573cf976a0
  00f99:    	call   0xffffe542
  00f9e:    	lea    rdi,[rbp-0x8]
  00fa2:    	mov    QWORD PTR [rbx],rdi
  00fa5:    	movq   xmm2,QWORD PTR [rsp]
  00faa:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fb0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fb6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fbc:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00fc2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00fc8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00fcf: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00fd6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00fdd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00fe4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00feb:    	add    rsp,0x60
  00fef: 57 	movabs r13,0x55573cfde170
  00ff9:    	test   rax,rax
  00ffc:    	je     0xffffaf9c
:00087 %14 = @spheres: Scene[IvarId(0)]
  01002:    	mov    rdi,QWORD PTR [rbp-0x28]
  01006:    	cmp    WORD PTR [rdi+0x2],0x3
  0100b:    	jne    0x3cf54
  01011:    	mov    rax,QWORD PTR [rdi+0x10]
  01015: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 2: i32
  0101c: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00089 %14 = %14.[%15]
  01027:    	sub    rsp,0x60
  0102b:    	movq   QWORD PTR [rsp],xmm2
  01030:    	movq   QWORD PTR [rsp+0x8],xmm3
  01036:    	movq   QWORD PTR [rsp+0x10],xmm4
  0103c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01042:    	movq   QWORD PTR [rsp+0x20],xmm6
  01048:    	movq   QWORD PTR [rsp+0x28],xmm7
  0104e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01055: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0105c: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01063: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0106a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01071: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01078: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  0107f:    	mov    rdi,rbx
  01082:    	mov    rsi,r12
  01085: 57 	movabs rax,0x55573c95cc80
  0108f:    	call   rax
  01091:    	movq   xmm2,QWORD PTR [rsp]
  01096:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0109c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010a2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010a8:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010ae:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010b4: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010bb: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  010c2: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  010c9: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  010d0: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  010d7:    	add    rsp,0x60
  010db: 57 	movabs r13,0x55573cfde1b0
  010e5:    	test   rax,rax
  010e8:    	je     0xffffaf9c
  010ee: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %15 = %11
  010f5:    	mov    rax,QWORD PTR [rbp-0x80]
  010f9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00091 %16 = %12
  01100: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01107: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00092 _ = %14.call intersect(%15; 2)       [Sphere]
:00093 
  0110e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01115: 00 	test   rdi,0x7
  0111c:    	jne    0x3cffe
  01122:    	cmp    DWORD PTR [rdi+0x4],0x27
  01126:    	jne    0x3cffe
  0112c: 26 	cmp    DWORD PTR [rip+0xffffffffffffc842],0x26        # 0xffffd975
  01133:    	jne    0x3cffe
  01139:    	sub    rsp,0x60
  0113d:    	movq   QWORD PTR [rsp],xmm2
  01142:    	movq   QWORD PTR [rsp+0x8],xmm3
  01148:    	movq   QWORD PTR [rsp+0x10],xmm4
  0114e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01154:    	movq   QWORD PTR [rsp+0x20],xmm6
  0115a:    	movq   QWORD PTR [rsp+0x28],xmm7
  01160: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01167: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0116e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01175: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0117c: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01183:    	mov    rax,QWORD PTR [rbx]
  01186:    	lea    rdi,[rsp-0x18]
  0118b:    	mov    QWORD PTR [rdi],rax
  0118e:    	mov    QWORD PTR [rbx],rdi
  01191: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0119a:    	mov    QWORD PTR [rsp-0x38],rcx
  0119f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  011a6:    	mov    QWORD PTR [rsp-0x38],rax
  011ab: 00 	mov    rdi,0x2
  011b2: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  011b9:    	mov    QWORD PTR [rsp-0x40],rax
  011be: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  011c5:    	mov    QWORD PTR [rsp-0x48],rax
  011ca: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011d3: 10 	movabs rax,0x100000003f
  011dd:    	mov    QWORD PTR [rsp-0x28],rax
  011e2: 57 	movabs r13,0x55573cf976a0
  011ec:    	call   0xffffe542
  011f1:    	lea    rdi,[rbp-0x8]
  011f5:    	mov    QWORD PTR [rbx],rdi
  011f8:    	movq   xmm2,QWORD PTR [rsp]
  011fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01203:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01209:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0120f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01215:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0121b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01222: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01229: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01230: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01237: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0123e:    	add    rsp,0x60
  01242: 57 	movabs r13,0x55573cfde1f0
  0124c:    	test   rax,rax
  0124f:    	je     0xffffaf9c
:00095 %14 = @plane: Scene[IvarId(1)]
  01255:    	mov    rdi,QWORD PTR [rbp-0x28]
  01259:    	cmp    WORD PTR [rdi+0x2],0x3
  0125e:    	jne    0x3d077
  01264:    	mov    rax,QWORD PTR [rdi+0x18]
  01268: ff 	mov    QWORD PTR [rbp-0x98],rax
:00096 %15 = %11
  0126f:    	mov    rax,QWORD PTR [rbp-0x80]
  01273: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %16 = %12
  0127a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01281: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00098 _ = %14.call intersect(%15; 2)       [Plane]
:00099 
  01288: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0128f: 00 	test   rdi,0x7
  01296:    	jne    0x3d121
  0129c:    	cmp    DWORD PTR [rdi+0x4],0x29
  012a0:    	jne    0x3d121
  012a6: 26 	cmp    DWORD PTR [rip+0xffffffffffffc6c8],0x26        # 0xffffd975
  012ad:    	jne    0x3d121
  012b3:    	sub    rsp,0x60
  012b7:    	movq   QWORD PTR [rsp],xmm2
  012bc:    	movq   QWORD PTR [rsp+0x8],xmm3
  012c2:    	movq   QWORD PTR [rsp+0x10],xmm4
  012c8:    	movq   QWORD PTR [rsp+0x18],xmm5
  012ce:    	movq   QWORD PTR [rsp+0x20],xmm6
  012d4:    	movq   QWORD PTR [rsp+0x28],xmm7
  012da: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  012e1: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  012e8: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  012ef: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  012f6: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  012fd:    	mov    rax,QWORD PTR [rbx]
  01300:    	lea    rdi,[rsp-0x18]
  01305:    	mov    QWORD PTR [rdi],rax
  01308:    	mov    QWORD PTR [rbx],rdi
  0130b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01314:    	mov    QWORD PTR [rsp-0x38],rcx
  01319: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01320:    	mov    QWORD PTR [rsp-0x38],rax
  01325: 00 	mov    rdi,0x2
  0132c: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01333:    	mov    QWORD PTR [rsp-0x40],rax
  01338: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  0133f:    	mov    QWORD PTR [rsp-0x48],rax
  01344: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0134d: 0e 	movabs rax,0xe00000041
  01357:    	mov    QWORD PTR [rsp-0x28],rax
  0135c: 57 	movabs r13,0x55573cf99540
  01366:    	call   0xffffeb2f
  0136b:    	lea    rdi,[rbp-0x8]
  0136f:    	mov    QWORD PTR [rbx],rdi
  01372:    	movq   xmm2,QWORD PTR [rsp]
  01377:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0137d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01383:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01389:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0138f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01395: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0139c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  013a3: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  013aa: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  013b1: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  013b8:    	add    rsp,0x60
  013bc: 57 	movabs r13,0x55573cfde250
  013c6:    	test   rax,rax
  013c9:    	je     0xffffaf9c
:00101 %14 = %12.call hit()                 [Isect]
:00102 
  013cf: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  013d6: 00 	test   rdi,0x7
  013dd:    	jne    0x3d19a
  013e3:    	cmp    DWORD PTR [rdi+0x4],0x2d
  013e7:    	jne    0x3d19a
  013ed: 26 	cmp    DWORD PTR [rip+0xffffffffffffc581],0x26        # 0xffffd975
  013f4:    	jne    0x3d19a
  013fa:    	mov    esi,DWORD PTR [rip+0x55d]        # 0x195d
  01400:    	cmp    esi,0xffffffff
  01403:    	je     0x3d213
  01409:    	cmp    WORD PTR [rdi+0x2],0x3
  0140e:    	jne    0x1427
  01414:    	cmp    esi,0x6
  01417:    	jge    0x1427
  0141d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01422:    	jmp    0x14c7
  01427:    	sub    rsp,0x60
  0142b:    	movq   QWORD PTR [rsp],xmm2
  01430:    	movq   QWORD PTR [rsp+0x8],xmm3
  01436:    	movq   QWORD PTR [rsp+0x10],xmm4
  0143c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01442:    	movq   QWORD PTR [rsp+0x20],xmm6
  01448:    	movq   QWORD PTR [rsp+0x28],xmm7
  0144e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01455: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0145c: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01463: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0146a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01471: 57 	movabs rax,0x55573c900b50
  0147b:    	call   rax
  0147d:    	movq   xmm2,QWORD PTR [rsp]
  01482:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01488:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0148e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01494:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0149a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014a0: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  014a7: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  014ae: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  014b5: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  014bc: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  014c3:    	add    rsp,0x60
  014c7: ff 	mov    QWORD PTR [rbp-0x98],rax
:00104 condnotbr %14 =>:00147
  014ce: ff 	mov    rax,QWORD PTR [rbp-0x98]
  014d5:    	or     rax,0x10
  014d9:    	cmp    rax,0x14
  014dd:    	je     0x1832
:00105 %14 = %12
  014e3: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014ea: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 %13 = %0.call ambient_occlusion(%14; 1) [<INVALID>]
:00107 
  014f1: 00 	mov    rdi,0x4
  014f8: 01 	sub    DWORD PTR [rip+0x462],0x1        # 0x1961
  014ff:    	jne    0x3d2d0
  01505:    	mov    rdi,r12
  01508:    	mov    esi,DWORD PTR [rbp-0x18]
  0150b:    	mov    rdx,QWORD PTR [rbp-0x28]
  0150f: 57 	movabs rax,0x55573c962b00
  01519:    	call   rax
  0151b: 00 	mov    rdi,0x4
  01522:    	jmp    0x3d2d0
:00109 %14 = dynvar(2, %2)
  01527:    	mov    rax,QWORD PTR [rbp-0x10]
  0152b:    	mov    rax,QWORD PTR [rax]
  0152e:    	mov    rax,QWORD PTR [rax-0x28]
  01532: ff 	mov    QWORD PTR [rbp-0x98],rax
:00110 %16 = dynvar(2, %2)
  01539:    	mov    rax,QWORD PTR [rbp-0x10]
  0153d:    	mov    rax,QWORD PTR [rax]
  01540:    	mov    rax,QWORD PTR [rax-0x28]
  01544: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00111 %15 = %16.call x()                   [<INVALID>]
:00112 
  0154b: 00 	mov    rdi,0x4
  01552: 01 	sub    DWORD PTR [rip+0x40c],0x1        # 0x1965
  01559:    	jne    0x3d349
  0155f:    	mov    rdi,r12
  01562:    	mov    esi,DWORD PTR [rbp-0x18]
  01565:    	mov    rdx,QWORD PTR [rbp-0x28]
  01569: 57 	movabs rax,0x55573c962b00
  01573:    	call   rax
  01575: 00 	mov    rdi,0x4
  0157c:    	jmp    0x3d349
:00114 %16 = %13.call x()                   [<INVALID>]
:00115 
  01581: 00 	mov    rdi,0x4
  01588: 01 	sub    DWORD PTR [rip+0x3da],0x1        # 0x1969
  0158f:    	jne    0x3d3c2
  01595:    	mov    rdi,r12
  01598:    	mov    esi,DWORD PTR [rbp-0x18]
  0159b:    	mov    rdx,QWORD PTR [rbp-0x28]
  0159f: 57 	movabs rax,0x55573c962b00
  015a9:    	call   rax
  015ab: 00 	mov    rdi,0x4
  015b2:    	jmp    0x3d3c2
:00117 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  015b7: 00 	mov    rdi,0x4
  015be: 01 	sub    DWORD PTR [rip+0x3a8],0x1        # 0x196d
  015c5:    	jne    0x3d43b
  015cb:    	mov    rdi,r12
  015ce:    	mov    esi,DWORD PTR [rbp-0x18]
  015d1:    	mov    rdx,QWORD PTR [rbp-0x28]
  015d5: 57 	movabs rax,0x55573c962b00
  015df:    	call   rax
  015e1: 00 	mov    rdi,0x4
  015e8:    	jmp    0x3d43b
:00118 _ = %14.call x=(%15; 1)              [<INVALID>]
:00119 
  015ed: 00 	mov    rdi,0x4
  015f4: 01 	sub    DWORD PTR [rip+0x376],0x1        # 0x1971
  015fb:    	jne    0x3d4b4
  01601:    	mov    rdi,r12
  01604:    	mov    esi,DWORD PTR [rbp-0x18]
  01607:    	mov    rdx,QWORD PTR [rbp-0x28]
  0160b: 57 	movabs rax,0x55573c962b00
  01615:    	call   rax
  01617: 00 	mov    rdi,0x4
  0161e:    	jmp    0x3d4b4
:00121 %14 = dynvar(2, %2)
  01623:    	mov    rax,QWORD PTR [rbp-0x10]
  01627:    	mov    rax,QWORD PTR [rax]
  0162a:    	mov    rax,QWORD PTR [rax-0x28]
  0162e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00122 %16 = dynvar(2, %2)
  01635:    	mov    rax,QWORD PTR [rbp-0x10]
  01639:    	mov    rax,QWORD PTR [rax]
  0163c:    	mov    rax,QWORD PTR [rax-0x28]
  01640: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00123 %15 = %16.call y()                   [<INVALID>]
:00124 
  01647: 00 	mov    rdi,0x4
  0164e: 01 	sub    DWORD PTR [rip+0x320],0x1        # 0x1975
  01655:    	jne    0x3d52d
  0165b:    	mov    rdi,r12
  0165e:    	mov    esi,DWORD PTR [rbp-0x18]
  01661:    	mov    rdx,QWORD PTR [rbp-0x28]
  01665: 57 	movabs rax,0x55573c962b00
  0166f:    	call   rax
  01671: 00 	mov    rdi,0x4
  01678:    	jmp    0x3d52d
:00126 %16 = %13.call y()                   [<INVALID>]
:00127 
  0167d: 00 	mov    rdi,0x4
  01684: 01 	sub    DWORD PTR [rip+0x2ee],0x1        # 0x1979
  0168b:    	jne    0x3d5a6
  01691:    	mov    rdi,r12
  01694:    	mov    esi,DWORD PTR [rbp-0x18]
  01697:    	mov    rdx,QWORD PTR [rbp-0x28]
  0169b: 57 	movabs rax,0x55573c962b00
  016a5:    	call   rax
  016a7: 00 	mov    rdi,0x4
  016ae:    	jmp    0x3d5a6
:00129 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  016b3: 00 	mov    rdi,0x4
  016ba: 01 	sub    DWORD PTR [rip+0x2bc],0x1        # 0x197d
  016c1:    	jne    0x3d61f
  016c7:    	mov    rdi,r12
  016ca:    	mov    esi,DWORD PTR [rbp-0x18]
  016cd:    	mov    rdx,QWORD PTR [rbp-0x28]
  016d1: 57 	movabs rax,0x55573c962b00
  016db:    	call   rax
  016dd: 00 	mov    rdi,0x4
  016e4:    	jmp    0x3d61f
:00130 _ = %14.call y=(%15; 1)              [<INVALID>]
:00131 
  016e9: 00 	mov    rdi,0x4
  016f0: 01 	sub    DWORD PTR [rip+0x28a],0x1        # 0x1981
  016f7:    	jne    0x3d698
  016fd:    	mov    rdi,r12
  01700:    	mov    esi,DWORD PTR [rbp-0x18]
  01703:    	mov    rdx,QWORD PTR [rbp-0x28]
  01707: 57 	movabs rax,0x55573c962b00
  01711:    	call   rax
  01713: 00 	mov    rdi,0x4
  0171a:    	jmp    0x3d698
:00133 %14 = dynvar(2, %2)
  0171f:    	mov    rax,QWORD PTR [rbp-0x10]
  01723:    	mov    rax,QWORD PTR [rax]
  01726:    	mov    rax,QWORD PTR [rax-0x28]
  0172a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00134 %16 = dynvar(2, %2)
  01731:    	mov    rax,QWORD PTR [rbp-0x10]
  01735:    	mov    rax,QWORD PTR [rax]
  01738:    	mov    rax,QWORD PTR [rax-0x28]
  0173c: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00135 %15 = %16.call z()                   [<INVALID>]
:00136 
  01743: 00 	mov    rdi,0x4
  0174a: 01 	sub    DWORD PTR [rip+0x234],0x1        # 0x1985
  01751:    	jne    0x3d711
  01757:    	mov    rdi,r12
  0175a:    	mov    esi,DWORD PTR [rbp-0x18]
  0175d:    	mov    rdx,QWORD PTR [rbp-0x28]
  01761: 57 	movabs rax,0x55573c962b00
  0176b:    	call   rax
  0176d: 00 	mov    rdi,0x4
  01774:    	jmp    0x3d711
:00138 %16 = %13.call z()                   [<INVALID>]
:00139 
  01779: 00 	mov    rdi,0x4
  01780: 01 	sub    DWORD PTR [rip+0x202],0x1        # 0x1989
  01787:    	jne    0x3d78a
  0178d:    	mov    rdi,r12
  01790:    	mov    esi,DWORD PTR [rbp-0x18]
  01793:    	mov    rdx,QWORD PTR [rbp-0x28]
  01797: 57 	movabs rax,0x55573c962b00
  017a1:    	call   rax
  017a3: 00 	mov    rdi,0x4
  017aa:    	jmp    0x3d78a
:00141 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  017af: 00 	mov    rdi,0x4
  017b6: 01 	sub    DWORD PTR [rip+0x1d0],0x1        # 0x198d
  017bd:    	jne    0x3d803
  017c3:    	mov    rdi,r12
  017c6:    	mov    esi,DWORD PTR [rbp-0x18]
  017c9:    	mov    rdx,QWORD PTR [rbp-0x28]
  017cd: 57 	movabs rax,0x55573c962b00
  017d7:    	call   rax
  017d9: 00 	mov    rdi,0x4
  017e0:    	jmp    0x3d803
:00142 _ = %14.call z=(%15; 1)              [<INVALID>]
:00143 
  017e5: 00 	mov    rdi,0x4
  017ec: 01 	sub    DWORD PTR [rip+0x19e],0x1        # 0x1991
  017f3:    	jne    0x3d87c
  017f9:    	mov    rdi,r12
  017fc:    	mov    esi,DWORD PTR [rbp-0x18]
  017ff:    	mov    rdx,QWORD PTR [rbp-0x28]
  01803: 57 	movabs rax,0x55573c962b00
  0180d:    	call   rax
  0180f: 00 	mov    rdi,0x4
  01816:    	jmp    0x3d87c
:00145 %14 = %15
  0181b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01822: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 ret %14
  01829: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01830:    	leave  
  01831:    	ret    
:00147 %14 = nil
  01832: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00148 ret %14
  0183d: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01844:    	leave  
  01845:    	ret    
==> start whole compile: vnormalize FuncId(61) self_class:Vec start:[00000] bytecode:0x55573cfa76a0
<== finished compile. elapsed:70µs
offset:Pos(27188) code: 1777 bytes  data: 99 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x60
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x30],rax
  00013: mov    QWORD PTR [rbp-0x38],rax
  00017: mov    QWORD PTR [rbp-0x40],rax
  0001b: mov    QWORD PTR [rbp-0x48],rax
  0001f: mov    QWORD PTR [rbp-0x50],rax
  00023: mov    QWORD PTR [rbp-0x58],rax
  00027: mov    rdi,QWORD PTR [rbp-0x28]
  0002b: test   rdi,0x7
  00032: jne    0x3bf60
  00038: cmp    DWORD PTR [rdi+0x4],0x25
  0003c: jne    0x3bf60
:00000 %3 = %0.call vlength()               [Vec]
:00001 
  00042: mov    rdi,QWORD PTR [rbp-0x28]
  00046: cmp    DWORD PTR [rip+0xffffffffffffbf93],0x26        # 0xffffbfe0
  0004d: jne    0x3bf6f
  00053: mov    rax,QWORD PTR [rbx]
  00056: lea    rdi,[rsp-0x18]
  0005b: mov    QWORD PTR [rdi],rax
  0005e: mov    QWORD PTR [rbx],rdi
  00061: mov    QWORD PTR [rsp-0x20],0x0
  0006a: mov    QWORD PTR [rsp-0x38],rcx
  0006f: mov    rax,QWORD PTR [rbp-0x28]
  00073: mov    QWORD PTR [rsp-0x38],rax
  00078: mov    rdi,0x0
  0007f: mov    QWORD PTR [rsp-0x30],0x0
  00088: movabs rax,0x60000003c
  00092: mov    QWORD PTR [rsp-0x28],rax
  00097: movabs r13,0x55573cf93d30
  000a1: call   0xffffc8fd
  000a6: lea    rdi,[rbp-0x8]
  000aa: mov    QWORD PTR [rbx],rdi
  000ad: movabs r13,0x55573cfa76c0
  000b7: test   rax,rax
  000ba: je     0xffff9607
  000c0: mov    QWORD PTR [rbp-0x40],rax
:00003 %1 = %3
  000c4: mov    rax,QWORD PTR [rbp-0x40]
  000c8: mov    QWORD PTR [rbp-0x30],rax
:00004 %3 = const[Vec]                      [Vec]
  000cc: mov    rax,QWORD PTR [rip+0xffffffffffffbf19]        # 0xffffbfec
  000d3: cmp    rax,QWORD PTR [rip+0x632]        # 0x70c
  000da: jne    0x3bf7e
  000e0: mov    rax,QWORD PTR [rip+0x615]        # 0x6fc
  000e7: mov    QWORD PTR [rbp-0x40],rax
:00005 %4 = @x: Vec[IvarId(0)]
  000eb: mov    rdi,QWORD PTR [rbp-0x28]
  000ef: cmp    WORD PTR [rdi+0x2],0x3
  000f4: jne    0x3bfc4
  000fa: mov    rax,QWORD PTR [rdi+0x10]
  000fe: mov    QWORD PTR [rbp-0x48],rax
:00006 %5 = @y: Vec[IvarId(1)]
  00102: mov    rdi,QWORD PTR [rbp-0x28]
  00106: cmp    WORD PTR [rdi+0x2],0x3
  0010b: jne    0x3bfda
  00111: mov    rax,QWORD PTR [rdi+0x18]
  00115: mov    QWORD PTR [rbp-0x50],rax
:00007 %6 = @z: Vec[IvarId(2)]
  00119: mov    rdi,QWORD PTR [rbp-0x28]
  0011d: cmp    WORD PTR [rdi+0x2],0x3
  00122: jne    0x3bff0
  00128: mov    rax,QWORD PTR [rdi+0x20]
  0012c: mov    QWORD PTR [rbp-0x58],rax
:00008 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
:00009 
  00130: mov    rdi,QWORD PTR [rbp-0x40]
  00134: test   rdi,0x7
  0013b: jne    0x3c006
  00141: cmp    DWORD PTR [rdi+0x4],0x26
  00145: jne    0x3c006
  0014b: cmp    DWORD PTR [rip+0xffffffffffffbe8e],0x26        # 0xffffbfe0
  00152: jne    0x3c006
  00158: mov    r9,0x0
  0015f: mov    rdx,rdi
  00162: mov    rax,QWORD PTR [rbx]
  00165: lea    rdi,[rsp-0x18]
  0016a: mov    QWORD PTR [rdi],rax
  0016d: mov    QWORD PTR [rbx],rdi
  00170: mov    QWORD PTR [rsp-0x20],0x0
  00179: mov    QWORD PTR [rsp-0x38],rcx
  0017e: lea    rcx,[rbp-0x48]
  00182: mov    r8,0x3
  00189: call   0x3c015
  0018e: lea    rdi,[rbp-0x8]
  00192: mov    QWORD PTR [rbx],rdi
  00195: movabs r13,0x55573cfa7740
  0019f: test   rax,rax
  001a2: je     0xffff9607
  001a8: mov    QWORD PTR [rbp-0x38],rax
:00011 %3 = literal[1e-17]
  001ac: movq   xmm2,QWORD PTR [rip+0x568]        # 0x71c
:00012 _%3 = %1 > %3                        [Float][Float]
:00013 condnotbr _%3 =>:00036
  001b4: mov    rdi,QWORD PTR [rbp-0x30]
  001b8: test   rdi,0x1
  001bf: jne    0x3c047
  001c5: test   rdi,0x2
  001cc: je     0x208
  001d2: xorps  xmm3,xmm3
  001d5: movabs rax,0x8000000000000002
  001df: cmp    rdi,rax
  001e2: je     0x21a
  001e8: mov    rax,rdi
  001eb: sar    rax,0x3f
  001ef: add    rax,0x2
  001f3: and    rdi,0xfffffffffffffffc
  001f7: or     rdi,rax
  001fa: rol    rdi,0x3d
  001fe: movq   xmm3,rdi
  00203: jmp    0x21a
  00208: call   0xffff9640
  0020d: test   rax,rax
  00210: je     0x3c047
  00216: movq   xmm3,xmm0
  0021a: ucomisd xmm3,xmm2
  0021e: jbe    0x3c285
:00014 %3 = %2.call x()                     [Vec]
:00015 
  00224: mov    rdi,QWORD PTR [rbp-0x38]
  00228: test   rdi,0x7
  0022f: jne    0x3c063
  00235: cmp    DWORD PTR [rdi+0x4],0x25
  00239: jne    0x3c063
  0023f: cmp    DWORD PTR [rip+0xffffffffffffbd9a],0x26        # 0xffffbfe0
  00246: jne    0x3c063
  0024c: mov    esi,DWORD PTR [rip+0x4d6]        # 0x728
  00252: cmp    esi,0xffffffff
  00255: je     0x3c072
  0025b: cmp    WORD PTR [rdi+0x2],0x3
  00260: jne    0x279
  00266: cmp    esi,0x6
  00269: jge    0x279
  0026f: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00274: jmp    0x297
  00279: sub    rsp,0x10
  0027d: movq   QWORD PTR [rsp],xmm3
  00282: movabs rax,0x55573c900b50
  0028c: call   rax
  0028e: movq   xmm3,QWORD PTR [rsp]
  00293: add    rsp,0x10
  00297: mov    QWORD PTR [rbp-0x40],rax
:00017 %3 = %3 / %1                         [Float][Float]
  0029b: mov    rdi,QWORD PTR [rbp-0x40]
  0029f: test   rdi,0x1
  002a6: jne    0x3c0ad
  002ac: test   rdi,0x2
  002b3: je     0x2ef
  002b9: xorps  xmm2,xmm2
  002bc: movabs rax,0x8000000000000002
  002c6: cmp    rdi,rax
  002c9: je     0x301
  002cf: mov    rax,rdi
  002d2: sar    rax,0x3f
  002d6: add    rax,0x2
  002da: and    rdi,0xfffffffffffffffc
  002de: or     rdi,rax
  002e1: rol    rdi,0x3d
  002e5: movq   xmm2,rdi
  002ea: jmp    0x301
  002ef: call   0xffff9640
  002f4: test   rax,rax
  002f7: je     0x3c0ad
  002fd: movq   xmm2,xmm0
  00301: movq   rax,xmm3
  00306: test   rax,rax
  00309: je     0xffff962c
  0030f: divsd  xmm2,xmm3
:00018 _ = %2.call x=(%3; 1)                [Vec]
:00019 
  00313: movq   xmm0,xmm2
  00317: call   0xffff9733
  0031c: mov    QWORD PTR [rbp-0x40],rax
  00320: mov    rdi,QWORD PTR [rbp-0x38]
  00324: test   rdi,0x7
  0032b: jne    0x3c0bc
  00331: cmp    DWORD PTR [rdi+0x4],0x25
  00335: jne    0x3c0bc
  0033b: cmp    DWORD PTR [rip+0xffffffffffffbc9e],0x26        # 0xffffbfe0
  00342: jne    0x3c0bc
  00348: mov    esi,DWORD PTR [rip+0x3e2]        # 0x730
  0034e: cmp    esi,0xffffffff
  00351: je     0x3c0cb
  00357: cmp    WORD PTR [rdi+0x2],0x3
  0035c: jne    0x379
  00362: cmp    esi,0x6
  00365: jge    0x379
  0036b: mov    rax,QWORD PTR [rbp-0x40]
  0036f: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00374: jmp    0x3ba
  00379: sub    rsp,0x10
  0037d: movq   QWORD PTR [rsp],xmm2
  00382: movq   QWORD PTR [rsp+0x8],xmm3
  00388: mov    rdx,QWORD PTR [rbp-0x40]
  0038c: movabs rax,0x55573c900dd0
  00396: call   rax
  00398: movq   xmm2,QWORD PTR [rsp]
  0039d: movq   xmm3,QWORD PTR [rsp+0x8]
  003a3: add    rsp,0x10
  003a7: movabs r13,0x55573cfa77e0
  003b1: test   rax,rax
  003b4: je     0xffff9607
:00021 %3 = %2.call y()                     [Vec]
:00022 
  003ba: mov    rdi,QWORD PTR [rbp-0x38]
  003be: test   rdi,0x7
  003c5: jne    0x3c119
  003cb: cmp    DWORD PTR [rdi+0x4],0x25
  003cf: jne    0x3c119
  003d5: cmp    DWORD PTR [rip+0xffffffffffffbc04],0x26        # 0xffffbfe0
  003dc: jne    0x3c119
  003e2: mov    esi,DWORD PTR [rip+0x350]        # 0x738
  003e8: cmp    esi,0xffffffff
  003eb: je     0x3c128
  003f1: cmp    WORD PTR [rdi+0x2],0x3
  003f6: jne    0x40f
  003fc: cmp    esi,0x6
  003ff: jge    0x40f
  00405: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0040a: jmp    0x42d
  0040f: sub    rsp,0x10
  00413: movq   QWORD PTR [rsp],xmm3
  00418: movabs rax,0x55573c900b50
  00422: call   rax
  00424: movq   xmm3,QWORD PTR [rsp]
  00429: add    rsp,0x10
  0042d: mov    QWORD PTR [rbp-0x40],rax
:00024 %3 = %3 / %1                         [Float][Float]
  00431: mov    rdi,QWORD PTR [rbp-0x40]
  00435: test   rdi,0x1
  0043c: jne    0x3c163
  00442: test   rdi,0x2
  00449: je     0x485
  0044f: xorps  xmm2,xmm2
  00452: movabs rax,0x8000000000000002
  0045c: cmp    rdi,rax
  0045f: je     0x497
  00465: mov    rax,rdi
  00468: sar    rax,0x3f
  0046c: add    rax,0x2
  00470: and    rdi,0xfffffffffffffffc
  00474: or     rdi,rax
  00477: rol    rdi,0x3d
  0047b: movq   xmm2,rdi
  00480: jmp    0x497
  00485: call   0xffff9640
  0048a: test   rax,rax
  0048d: je     0x3c163
  00493: movq   xmm2,xmm0
  00497: movq   rax,xmm3
  0049c: test   rax,rax
  0049f: je     0xffff962c
  004a5: divsd  xmm2,xmm3
:00025 _ = %2.call y=(%3; 1)                [Vec]
:00026 
  004a9: movq   xmm0,xmm2
  004ad: call   0xffff9733
  004b2: mov    QWORD PTR [rbp-0x40],rax
  004b6: mov    rdi,QWORD PTR [rbp-0x38]
  004ba: test   rdi,0x7
  004c1: jne    0x3c172
  004c7: cmp    DWORD PTR [rdi+0x4],0x25
  004cb: jne    0x3c172
  004d1: cmp    DWORD PTR [rip+0xffffffffffffbb08],0x26        # 0xffffbfe0
  004d8: jne    0x3c172
  004de: mov    esi,DWORD PTR [rip+0x25c]        # 0x740
  004e4: cmp    esi,0xffffffff
  004e7: je     0x3c181
  004ed: cmp    WORD PTR [rdi+0x2],0x3
  004f2: jne    0x50f
  004f8: cmp    esi,0x6
  004fb: jge    0x50f
  00501: mov    rax,QWORD PTR [rbp-0x40]
  00505: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0050a: jmp    0x550
  0050f: sub    rsp,0x10
  00513: movq   QWORD PTR [rsp],xmm2
  00518: movq   QWORD PTR [rsp+0x8],xmm3
  0051e: mov    rdx,QWORD PTR [rbp-0x40]
  00522: movabs rax,0x55573c900dd0
  0052c: call   rax
  0052e: movq   xmm2,QWORD PTR [rsp]
  00533: movq   xmm3,QWORD PTR [rsp+0x8]
  00539: add    rsp,0x10
  0053d: movabs r13,0x55573cfa7850
  00547: test   rax,rax
  0054a: je     0xffff9607
:00028 %3 = %2.call z()                     [Vec]
:00029 
  00550: mov    rdi,QWORD PTR [rbp-0x38]
  00554: test   rdi,0x7
  0055b: jne    0x3c1cf
  00561: cmp    DWORD PTR [rdi+0x4],0x25
  00565: jne    0x3c1cf
  0056b: cmp    DWORD PTR [rip+0xffffffffffffba6e],0x26        # 0xffffbfe0
  00572: jne    0x3c1cf
  00578: mov    esi,DWORD PTR [rip+0x1ca]        # 0x748
  0057e: cmp    esi,0xffffffff
  00581: je     0x3c1de
  00587: cmp    WORD PTR [rdi+0x2],0x3
  0058c: jne    0x5a5
  00592: cmp    esi,0x6
  00595: jge    0x5a5
  0059b: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005a0: jmp    0x5c3
  005a5: sub    rsp,0x10
  005a9: movq   QWORD PTR [rsp],xmm3
  005ae: movabs rax,0x55573c900b50
  005b8: call   rax
  005ba: movq   xmm3,QWORD PTR [rsp]
  005bf: add    rsp,0x10
  005c3: mov    QWORD PTR [rbp-0x40],rax
:00031 %3 = %3 / %1                         [Float][Float]
  005c7: mov    rdi,QWORD PTR [rbp-0x40]
  005cb: test   rdi,0x1
  005d2: jne    0x3c219
  005d8: test   rdi,0x2
  005df: je     0x61b
  005e5: xorps  xmm2,xmm2
  005e8: movabs rax,0x8000000000000002
  005f2: cmp    rdi,rax
  005f5: je     0x62d
  005fb: mov    rax,rdi
  005fe: sar    rax,0x3f
  00602: add    rax,0x2
  00606: and    rdi,0xfffffffffffffffc
  0060a: or     rdi,rax
  0060d: rol    rdi,0x3d
  00611: movq   xmm2,rdi
  00616: jmp    0x62d
  0061b: call   0xffff9640
  00620: test   rax,rax
  00623: je     0x3c219
  00629: movq   xmm2,xmm0
  0062d: movq   rax,xmm3
  00632: test   rax,rax
  00635: je     0xffff962c
  0063b: divsd  xmm2,xmm3
:00032 _ = %2.call z=(%3; 1)                [Vec]
:00033 
  0063f: movq   xmm0,xmm2
  00643: call   0xffff9733
  00648: mov    QWORD PTR [rbp-0x40],rax
  0064c: mov    rdi,QWORD PTR [rbp-0x38]
  00650: test   rdi,0x7
  00657: jne    0x3c228
  0065d: cmp    DWORD PTR [rdi+0x4],0x25
  00661: jne    0x3c228
  00667: cmp    DWORD PTR [rip+0xffffffffffffb972],0x26        # 0xffffbfe0
  0066e: jne    0x3c228
  00674: mov    esi,DWORD PTR [rip+0xd6]        # 0x750
  0067a: cmp    esi,0xffffffff
  0067d: je     0x3c237
  00683: cmp    WORD PTR [rdi+0x2],0x3
  00688: jne    0x6a5
  0068e: cmp    esi,0x6
  00691: jge    0x6a5
  00697: mov    rax,QWORD PTR [rbp-0x40]
  0069b: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006a0: jmp    0x6e6
  006a5: sub    rsp,0x10
  006a9: movq   QWORD PTR [rsp],xmm2
  006ae: movq   QWORD PTR [rsp+0x8],xmm3
  006b4: mov    rdx,QWORD PTR [rbp-0x40]
  006b8: movabs rax,0x55573c900dd0
  006c2: call   rax
  006c4: movq   xmm2,QWORD PTR [rsp]
  006c9: movq   xmm3,QWORD PTR [rsp+0x8]
  006cf: add    rsp,0x10
  006d3: movabs r13,0x55573cfa78c0
  006dd: test   rax,rax
  006e0: je     0xffff9607
:00035 br =>:00036
  006e6: jmp    0x3c2ab
:00036 ret %2
  006eb: mov    rax,QWORD PTR [rbp-0x38]
  006ef: leave  
  006f0: ret    
==> start whole compile: vlength FuncId(60) self_class:Vec start:[00000] bytecode:0x55573cf93d30
<== finished compile. elapsed:26.9µs
offset:Pos(29064) code: 926 bytes  data: 34 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x60
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x30],rax
  00013: mov    QWORD PTR [rbp-0x38],rax
  00017: mov    QWORD PTR [rbp-0x40],rax
  0001b: mov    QWORD PTR [rbp-0x48],rax
  0001f: mov    QWORD PTR [rbp-0x50],rax
  00023: mov    rdi,QWORD PTR [rbp-0x28]
  00027: test   rdi,0x7
  0002e: jne    0x3bb70
  00034: cmp    DWORD PTR [rdi+0x4],0x25
  00038: jne    0x3bb70
:00000 %2 = const[Math]                     [Math]
  0003e: mov    rax,QWORD PTR [rip+0xffffffffffffb853]        # 0xffffb898
  00045: cmp    rax,QWORD PTR [rip+0x36c]        # 0x3b8
  0004c: jne    0x3bb7f
  00052: mov    rax,QWORD PTR [rip+0x34f]        # 0x3a8
  00059: mov    QWORD PTR [rbp-0x38],rax
:00001 %3 = @x: Vec[IvarId(0)]
  0005d: mov    rdi,QWORD PTR [rbp-0x28]
  00061: cmp    WORD PTR [rdi+0x2],0x3
  00066: jne    0x3bbc5
  0006c: mov    rax,QWORD PTR [rdi+0x10]
  00070: mov    QWORD PTR [rbp-0x40],rax
:00002 %4 = @x: Vec[IvarId(0)]
  00074: mov    rdi,QWORD PTR [rbp-0x28]
  00078: cmp    WORD PTR [rdi+0x2],0x3
  0007d: jne    0x3bbdb
  00083: mov    rax,QWORD PTR [rdi+0x10]
  00087: mov    QWORD PTR [rbp-0x48],rax
:00003 %3 = %3 * %4                         [Float][Float]
  0008b: mov    rdi,QWORD PTR [rbp-0x40]
  0008f: test   rdi,0x1
  00096: jne    0x3bbf1
  0009c: test   rdi,0x2
  000a3: je     0xdf
  000a9: xorps  xmm2,xmm2
  000ac: movabs rax,0x8000000000000002
  000b6: cmp    rdi,rax
  000b9: je     0xf1
  000bf: mov    rax,rdi
  000c2: sar    rax,0x3f
  000c6: add    rax,0x2
  000ca: and    rdi,0xfffffffffffffffc
  000ce: or     rdi,rax
  000d1: rol    rdi,0x3d
  000d5: movq   xmm2,rdi
  000da: jmp    0xf1
  000df: call   0xffff8eec
  000e4: test   rax,rax
  000e7: je     0x3bbf1
  000ed: movq   xmm2,xmm0
  000f1: mov    rdi,QWORD PTR [rbp-0x48]
  000f5: test   rdi,0x1
  000fc: jne    0x3bc00
  00102: test   rdi,0x2
  00109: je     0x145
  0010f: xorps  xmm3,xmm3
  00112: movabs rax,0x8000000000000002
  0011c: cmp    rdi,rax
  0011f: je     0x157
  00125: mov    rax,rdi
  00128: sar    rax,0x3f
  0012c: add    rax,0x2
  00130: and    rdi,0xfffffffffffffffc
  00134: or     rdi,rax
  00137: rol    rdi,0x3d
  0013b: movq   xmm3,rdi
  00140: jmp    0x157
  00145: call   0xffff8eec
  0014a: test   rax,rax
  0014d: je     0x3bc00
  00153: movq   xmm3,xmm0
  00157: mulsd  xmm2,xmm3
:00004 %4 = @y: Vec[IvarId(1)]
  0015b: mov    rdi,QWORD PTR [rbp-0x28]
  0015f: cmp    WORD PTR [rdi+0x2],0x3
  00164: jne    0x3bc0f
  0016a: mov    rax,QWORD PTR [rdi+0x18]
  0016e: mov    QWORD PTR [rbp-0x48],rax
:00005 %5 = @y: Vec[IvarId(1)]
  00172: mov    rdi,QWORD PTR [rbp-0x28]
  00176: cmp    WORD PTR [rdi+0x2],0x3
  0017b: jne    0x3bc37
  00181: mov    rax,QWORD PTR [rdi+0x18]
  00185: mov    QWORD PTR [rbp-0x50],rax
:00006 %4 = %4 * %5                         [Float][Float]
  00189: mov    rdi,QWORD PTR [rbp-0x48]
  0018d: test   rdi,0x1
  00194: jne    0x3bc5f
  0019a: test   rdi,0x2
  001a1: je     0x1dd
  001a7: xorps  xmm3,xmm3
  001aa: movabs rax,0x8000000000000002
  001b4: cmp    rdi,rax
  001b7: je     0x1ef
  001bd: mov    rax,rdi
  001c0: sar    rax,0x3f
  001c4: add    rax,0x2
  001c8: and    rdi,0xfffffffffffffffc
  001cc: or     rdi,rax
  001cf: rol    rdi,0x3d
  001d3: movq   xmm3,rdi
  001d8: jmp    0x1ef
  001dd: call   0xffff8eec
  001e2: test   rax,rax
  001e5: je     0x3bc5f
  001eb: movq   xmm3,xmm0
  001ef: mov    rdi,QWORD PTR [rbp-0x50]
  001f3: test   rdi,0x1
  001fa: jne    0x3bc7b
  00200: test   rdi,0x2
  00207: je     0x243
  0020d: xorps  xmm4,xmm4
  00210: movabs rax,0x8000000000000002
  0021a: cmp    rdi,rax
  0021d: je     0x255
  00223: mov    rax,rdi
  00226: sar    rax,0x3f
  0022a: add    rax,0x2
  0022e: and    rdi,0xfffffffffffffffc
  00232: or     rdi,rax
  00235: rol    rdi,0x3d
  00239: movq   xmm4,rdi
  0023e: jmp    0x255
  00243: call   0xffff8eec
  00248: test   rax,rax
  0024b: je     0x3bc7b
  00251: movq   xmm4,xmm0
  00255: mulsd  xmm3,xmm4
:00007 %3 = %3 + %4                         [Float][Float]
  00259: addsd  xmm2,xmm3
:00008 %4 = @z: Vec[IvarId(2)]
  0025d: mov    rdi,QWORD PTR [rbp-0x28]
  00261: cmp    WORD PTR [rdi+0x2],0x3
  00266: jne    0x3bc97
  0026c: mov    rax,QWORD PTR [rdi+0x20]
  00270: mov    QWORD PTR [rbp-0x48],rax
:00009 %5 = @z: Vec[IvarId(2)]
  00274: mov    rdi,QWORD PTR [rbp-0x28]
  00278: cmp    WORD PTR [rdi+0x2],0x3
  0027d: jne    0x3bccb
  00283: mov    rax,QWORD PTR [rdi+0x20]
  00287: mov    QWORD PTR [rbp-0x50],rax
:00010 %4 = %4 * %5                         [Float][Float]
  0028b: mov    rdi,QWORD PTR [rbp-0x48]
  0028f: test   rdi,0x1
  00296: jne    0x3bcf3
  0029c: test   rdi,0x2
  002a3: je     0x2df
  002a9: xorps  xmm3,xmm3
  002ac: movabs rax,0x8000000000000002
  002b6: cmp    rdi,rax
  002b9: je     0x2f1
  002bf: mov    rax,rdi
  002c2: sar    rax,0x3f
  002c6: add    rax,0x2
  002ca: and    rdi,0xfffffffffffffffc
  002ce: or     rdi,rax
  002d1: rol    rdi,0x3d
  002d5: movq   xmm3,rdi
  002da: jmp    0x2f1
  002df: call   0xffff8eec
  002e4: test   rax,rax
  002e7: je     0x3bcf3
  002ed: movq   xmm3,xmm0
  002f1: mov    rdi,QWORD PTR [rbp-0x50]
  002f5: test   rdi,0x1
  002fc: jne    0x3bd0f
  00302: test   rdi,0x2
  00309: je     0x345
  0030f: xorps  xmm4,xmm4
  00312: movabs rax,0x8000000000000002
  0031c: cmp    rdi,rax
  0031f: je     0x357
  00325: mov    rax,rdi
  00328: sar    rax,0x3f
  0032c: add    rax,0x2
  00330: and    rdi,0xfffffffffffffffc
  00334: or     rdi,rax
  00337: rol    rdi,0x3d
  0033b: movq   xmm4,rdi
  00340: jmp    0x357
  00345: call   0xffff8eec
  0034a: test   rax,rax
  0034d: je     0x3bd0f
  00353: movq   xmm4,xmm0
  00357: mulsd  xmm3,xmm4
:00011 %3 = %3 + %4                         [Float][Float]
  0035b: addsd  xmm2,xmm3
:00012 %1 = %2.call sqrt(%3; 1)             [#<Class:Math>]
:00013 
  0035f: mov    rdi,QWORD PTR [rbp-0x38]
  00363: test   rdi,0x7
  0036a: jne    0x3bd2b
  00370: cmp    DWORD PTR [rdi+0x4],0x20
  00374: jne    0x3bd2b
  0037a: cmp    DWORD PTR [rip+0xffffffffffffb50b],0x26        # 0xffffb88c
  00381: jne    0x3bd2b
  00387: sqrtsd xmm5,xmm2
:00015 ret %1
  0038b: movq   xmm0,xmm5
  0038f: call   0xffff8fdf
  00394: mov    QWORD PTR [rbp-0x30],rax
  00398: mov    rax,QWORD PTR [rbp-0x30]
  0039c: leave  
  0039d: ret    
==> start whole compile: initialize FuncId(66) self_class:Ray start:[00000] bytecode:0x55573cf735c0
<== finished compile. elapsed:11.2µs
offset:Pos(30024) code: 103 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x40],0x4
  00010: mov    rdi,QWORD PTR [rbp-0x28]
  00014: test   rdi,0x7
  0001b: jne    0x3b994
  00021: cmp    DWORD PTR [rdi+0x4],0x2b
  00025: jne    0x3b994
:00000 @org: Ray[IvarId(0)] = %1
  0002b: mov    rdi,QWORD PTR [rbp-0x28]
  0002f: cmp    WORD PTR [rdi+0x2],0x3
  00034: jne    0x3b9a3
  0003a: mov    rax,QWORD PTR [rbp-0x30]
  0003e: mov    QWORD PTR [rdi+0x10],rax
:00001 @dir: Ray[IvarId(1)] = %2
  00042: mov    rdi,QWORD PTR [rbp-0x28]
  00046: cmp    WORD PTR [rdi+0x2],0x3
  0004b: jne    0x3b9bd
  00051: mov    rax,QWORD PTR [rbp-0x38]
  00055: mov    QWORD PTR [rdi+0x18],rax
:00002 %3 = %2
  00059: mov    rax,QWORD PTR [rbp-0x38]
  0005d: mov    QWORD PTR [rbp-0x40],rax
:00003 ret %3
  00061: mov    rax,QWORD PTR [rbp-0x40]
  00065: leave  
  00066: ret    
==> start whole compile: initialize FuncId(67) self_class:Isect start:[00000] bytecode:0x55573cf97e40
<== finished compile. elapsed:28µs
offset:Pos(30127) code: 712 bytes  data: 177 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x60
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x30],rax
  00013: mov    QWORD PTR [rbp-0x38],rax
  00017: mov    QWORD PTR [rbp-0x40],rax
  0001b: mov    QWORD PTR [rbp-0x48],rax
  0001f: mov    QWORD PTR [rbp-0x50],rax
  00023: mov    rdi,QWORD PTR [rbp-0x28]
  00027: test   rdi,0x7
  0002e: jne    0x3b970
  00034: cmp    DWORD PTR [rdi+0x4],0x2d
  00038: jne    0x3b970
:00000 %1 = literal[10000000.0]
  0003e: movq   xmm2,QWORD PTR [rip+0x28b]        # 0x2d1
:00001 @t: Isect[IvarId(0)] = %1
  00046: movq   xmm0,xmm2
  0004a: call   0xffff8bb8
  0004f: mov    QWORD PTR [rbp-0x30],rax
  00053: mov    rdi,QWORD PTR [rbp-0x28]
  00057: cmp    WORD PTR [rdi+0x2],0x3
  0005c: jne    0x3b97f
  00062: mov    rax,QWORD PTR [rbp-0x30]
  00066: mov    QWORD PTR [rdi+0x10],rax
:00002 %1 = literal[false]
  0006a: mov    rax,0x14
  00071: mov    QWORD PTR [rbp-0x30],rax
:00003 @hit: Isect[IvarId(1)] = %1
  00075: mov    rdi,QWORD PTR [rbp-0x28]
  00079: cmp    WORD PTR [rdi+0x2],0x3
  0007e: jne    0x3b9ab
  00084: mov    rax,QWORD PTR [rbp-0x30]
  00088: mov    QWORD PTR [rdi+0x18],rax
:00004 %2 = const[Vec]                      [Vec]
  0008c: mov    rax,QWORD PTR [rip+0xffffffffffffb3de]        # 0xffffb471
  00093: cmp    rax,QWORD PTR [rip+0x257]        # 0x2f1
  0009a: jne    0x3b9c5
  000a0: mov    rax,QWORD PTR [rip+0x23a]        # 0x2e1
  000a7: mov    QWORD PTR [rbp-0x38],rax
:00005 %3 = literal[0.0]
  000ab: movq   xmm2,QWORD PTR [rip+0x24e]        # 0x301
:00006 %4 = literal[0.0]
  000b3: movq   xmm3,QWORD PTR [rip+0x256]        # 0x311
:00007 %5 = literal[0.0]
  000bb: movq   xmm4,QWORD PTR [rip+0x25e]        # 0x321
:00008 %1 = %2.call new(%3; 3)              [#<Class:Vec>]
:00009 
  000c3: movq   xmm0,xmm2
  000c7: call   0xffff8bb8
  000cc: mov    QWORD PTR [rbp-0x40],rax
  000d0: movq   xmm0,xmm3
  000d4: call   0xffff8bb8
  000d9: mov    QWORD PTR [rbp-0x48],rax
  000dd: movq   xmm0,xmm4
  000e1: call   0xffff8bb8
  000e6: mov    QWORD PTR [rbp-0x50],rax
  000ea: mov    rdi,QWORD PTR [rbp-0x38]
  000ee: test   rdi,0x7
  000f5: jne    0x3ba0b
  000fb: cmp    DWORD PTR [rdi+0x4],0x26
  000ff: jne    0x3ba0b
  00105: cmp    DWORD PTR [rip+0xffffffffffffb359],0x26        # 0xffffb465
  0010c: jne    0x3ba0b
  00112: mov    r9,0x0
  00119: sub    rsp,0x20
  0011d: movq   QWORD PTR [rsp],xmm2
  00122: movq   QWORD PTR [rsp+0x8],xmm3
  00128: movq   QWORD PTR [rsp+0x10],xmm4
  0012e: mov    rdx,rdi
  00131: mov    rax,QWORD PTR [rbx]
  00134: lea    rdi,[rsp-0x18]
  00139: mov    QWORD PTR [rdi],rax
  0013c: mov    QWORD PTR [rbx],rdi
  0013f: mov    QWORD PTR [rsp-0x20],0x0
  00148: mov    QWORD PTR [rsp-0x38],rcx
  0014d: lea    rcx,[rbp-0x40]
  00151: mov    r8,0x3
  00158: call   0x3ba1a
  0015d: lea    rdi,[rbp-0x8]
  00161: mov    QWORD PTR [rbx],rdi
  00164: movq   xmm2,QWORD PTR [rsp]
  00169: movq   xmm3,QWORD PTR [rsp+0x8]
  0016f: movq   xmm4,QWORD PTR [rsp+0x10]
  00175: add    rsp,0x20
  00179: movabs r13,0x55573cf97ee0
  00183: test   rax,rax
  00186: je     0xffff8a8c
  0018c: mov    QWORD PTR [rbp-0x30],rax
:00011 @pl: Isect[IvarId(2)] = %1
  00190: mov    rdi,QWORD PTR [rbp-0x28]
  00194: cmp    WORD PTR [rdi+0x2],0x3
  00199: jne    0x3ba4c
  0019f: mov    rax,QWORD PTR [rbp-0x30]
  001a3: mov    QWORD PTR [rdi+0x20],rax
:00012 %2 = const[Vec]                      [Vec]
  001a7: mov    rax,QWORD PTR [rip+0xffffffffffffb2c3]        # 0xffffb471
  001ae: cmp    rax,QWORD PTR [rip+0x18c]        # 0x341
  001b5: jne    0x3ba90
  001bb: mov    rax,QWORD PTR [rip+0x16f]        # 0x331
  001c2: mov    QWORD PTR [rbp-0x38],rax
:00013 %3 = literal[0.0]
  001c6: movq   xmm2,QWORD PTR [rip+0x183]        # 0x351
:00014 %4 = literal[0.0]
  001ce: movq   xmm3,QWORD PTR [rip+0x18b]        # 0x361
:00015 %5 = literal[0.0]
  001d6: movq   xmm4,QWORD PTR [rip+0x193]        # 0x371
:00016 %1 = %2.call new(%3; 3)              [#<Class:Vec>]
:00017 
  001de: movq   xmm0,xmm2
  001e2: call   0xffff8bb8
  001e7: mov    QWORD PTR [rbp-0x40],rax
  001eb: movq   xmm0,xmm3
  001ef: call   0xffff8bb8
  001f4: mov    QWORD PTR [rbp-0x48],rax
  001f8: movq   xmm0,xmm4
  001fc: call   0xffff8bb8
  00201: mov    QWORD PTR [rbp-0x50],rax
  00205: mov    rdi,QWORD PTR [rbp-0x38]
  00209: test   rdi,0x7
  00210: jne    0x3bb00
  00216: cmp    DWORD PTR [rdi+0x4],0x26
  0021a: jne    0x3bb00
  00220: cmp    DWORD PTR [rip+0xffffffffffffb23e],0x26        # 0xffffb465
  00227: jne    0x3bb00
  0022d: mov    r9,0x0
  00234: sub    rsp,0x20
  00238: movq   QWORD PTR [rsp],xmm2
  0023d: movq   QWORD PTR [rsp+0x8],xmm3
  00243: movq   QWORD PTR [rsp+0x10],xmm4
  00249: mov    rdx,rdi
  0024c: mov    rax,QWORD PTR [rbx]
  0024f: lea    rdi,[rsp-0x18]
  00254: mov    QWORD PTR [rdi],rax
  00257: mov    QWORD PTR [rbx],rdi
  0025a: mov    QWORD PTR [rsp-0x20],0x0
  00263: mov    QWORD PTR [rsp-0x38],rcx
  00268: lea    rcx,[rbp-0x40]
  0026c: mov    r8,0x3
  00273: call   0x3bb0f
  00278: lea    rdi,[rbp-0x8]
  0027c: mov    QWORD PTR [rbx],rdi
  0027f: movq   xmm2,QWORD PTR [rsp]
  00284: movq   xmm3,QWORD PTR [rsp+0x8]
  0028a: movq   xmm4,QWORD PTR [rsp+0x10]
  00290: add    rsp,0x20
  00294: movabs r13,0x55573cf97f60
  0029e: test   rax,rax
  002a1: je     0xffff8a8c
  002a7: mov    QWORD PTR [rbp-0x30],rax
:00019 @n: Isect[IvarId(3)] = %1
  002ab: mov    rdi,QWORD PTR [rbp-0x28]
  002af: cmp    WORD PTR [rdi+0x2],0x3
  002b4: jne    0x3bb41
  002ba: mov    rax,QWORD PTR [rbp-0x30]
  002be: mov    QWORD PTR [rdi+0x28],rax
:00020 ret %1
  002c2: mov    rax,QWORD PTR [rbp-0x30]
  002c6: leave  
  002c7: ret    
==> start whole compile: intersect FuncId(65) self_class:Plane start:[00000] bytecode:0x55573cf99540
<== finished compile. elapsed:100.6µs
offset:Pos(31016) code: 3151 bytes  data: 209 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0xa0
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x40],rax
  00016: mov    QWORD PTR [rbp-0x48],rax
  0001a: mov    QWORD PTR [rbp-0x50],rax
  0001e: mov    QWORD PTR [rbp-0x58],rax
  00022: mov    QWORD PTR [rbp-0x60],rax
  00026: mov    QWORD PTR [rbp-0x68],rax
  0002a: mov    QWORD PTR [rbp-0x70],rax
  0002e: mov    QWORD PTR [rbp-0x78],rax
  00032: mov    QWORD PTR [rbp-0x80],rax
  00036: mov    QWORD PTR [rbp-0x88],rax
  0003d: mov    QWORD PTR [rbp-0x90],rax
  00044: mov    rdi,QWORD PTR [rbp-0x28]
  00048: test   rdi,0x7
  0004f: jne    0x3b80c
  00055: cmp    DWORD PTR [rdi+0x4],0x29
  00059: jne    0x3b80c
:00000 %7 = @p: Plane[IvarId(0)]
  0005f: mov    rdi,QWORD PTR [rbp-0x28]
  00063: cmp    WORD PTR [rdi+0x2],0x3
  00068: jne    0x3b81b
  0006e: mov    rax,QWORD PTR [rdi+0x10]
  00072: mov    QWORD PTR [rbp-0x60],rax
:00001 %8 = @n: Plane[IvarId(1)]
  00076: mov    rdi,QWORD PTR [rbp-0x28]
  0007a: cmp    WORD PTR [rdi+0x2],0x3
  0007f: jne    0x3b831
  00085: mov    rax,QWORD PTR [rdi+0x18]
  00089: mov    QWORD PTR [rbp-0x68],rax
:00002 %3 = %7.call vdot(%8; 1)             [Vec]
:00003 
  0008d: mov    rdi,QWORD PTR [rbp-0x60]
  00091: test   rdi,0x7
  00098: jne    0x3b847
  0009e: cmp    DWORD PTR [rdi+0x4],0x25
  000a2: jne    0x3b847
  000a8: cmp    DWORD PTR [rip+0xffffffffffffb03d],0x26        # 0xffffb0ec
  000af: jne    0x3b847
  000b5: mov    rax,QWORD PTR [rbx]
  000b8: lea    rdi,[rsp-0x18]
  000bd: mov    QWORD PTR [rdi],rax
  000c0: mov    QWORD PTR [rbx],rdi
  000c3: mov    QWORD PTR [rsp-0x20],0x0
  000cc: mov    QWORD PTR [rsp-0x38],rcx
  000d1: mov    rax,QWORD PTR [rbp-0x60]
  000d5: mov    QWORD PTR [rsp-0x38],rax
  000da: mov    rdi,0x1
  000e1: mov    rax,QWORD PTR [rbp-0x68]
  000e5: mov    QWORD PTR [rsp-0x40],rax
  000ea: mov    QWORD PTR [rsp-0x30],0x0
  000f3: movabs rax,0x100050000003b
  000fd: mov    QWORD PTR [rsp-0x28],rax
  00102: movabs r13,0x55573cfe1010
  0010c: call   0xffffbddd
  00111: lea    rdi,[rbp-0x8]
  00115: mov    QWORD PTR [rbx],rdi
  00118: movabs r13,0x55573cf99580
  00122: test   rax,rax
  00125: je     0xffff8713
  0012b: mov    QWORD PTR [rbp-0x40],rax
:00005 %3 = neg %3                          [Float]
  0012f: mov    rdi,QWORD PTR [rbp-0x40]
  00133: test   rdi,0x1
  0013a: jne    0x3b856
  00140: test   rdi,0x2
  00147: je     0x183
  0014d: xorps  xmm2,xmm2
  00150: movabs rax,0x8000000000000002
  0015a: cmp    rdi,rax
  0015d: je     0x195
  00163: mov    rax,rdi
  00166: sar    rax,0x3f
  0016a: add    rax,0x2
  0016e: and    rdi,0xfffffffffffffffc
  00172: or     rdi,rax
  00175: rol    rdi,0x3d
  00179: movq   xmm2,rdi
  0017e: jmp    0x195
  00183: call   0xffff874c
  00188: test   rax,rax
  0018b: je     0x3b856
  00191: movq   xmm2,xmm0
  00195: xorps  xmm2,XMMWORD PTR [rip+0xabc]        # 0xc58
:00006 %7 = %1.call dir()                   [Ray]
:00007 
  0019c: mov    rdi,QWORD PTR [rbp-0x30]
  001a0: test   rdi,0x7
  001a7: jne    0x3b865
  001ad: cmp    DWORD PTR [rdi+0x4],0x2b
  001b1: jne    0x3b865
  001b7: cmp    DWORD PTR [rip+0xffffffffffffaf2e],0x26        # 0xffffb0ec
  001be: jne    0x3b865
  001c4: mov    esi,DWORD PTR [rip+0xa9a]        # 0xc64
  001ca: cmp    esi,0xffffffff
  001cd: je     0x3b881
  001d3: cmp    WORD PTR [rdi+0x2],0x3
  001d8: jne    0x1f1
  001de: cmp    esi,0x6
  001e1: jge    0x1f1
  001e7: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001ec: jmp    0x20f
  001f1: sub    rsp,0x10
  001f5: movq   QWORD PTR [rsp],xmm2
  001fa: movabs rax,0x55573c900b50
  00204: call   rax
  00206: movq   xmm2,QWORD PTR [rsp]
  0020b: add    rsp,0x10
  0020f: mov    QWORD PTR [rbp-0x60],rax
:00009 %8 = @n: Plane[IvarId(1)]
  00213: mov    rdi,QWORD PTR [rbp-0x28]
  00217: cmp    WORD PTR [rdi+0x2],0x3
  0021c: jne    0x3b8bc
  00222: mov    rax,QWORD PTR [rdi+0x18]
  00226: mov    QWORD PTR [rbp-0x68],rax
:00010 %4 = %7.call vdot(%8; 1)             [Vec]
:00011 
  0022a: mov    rdi,QWORD PTR [rbp-0x60]
  0022e: test   rdi,0x7
  00235: jne    0x3b8e4
  0023b: cmp    DWORD PTR [rdi+0x4],0x25
  0023f: jne    0x3b8e4
  00245: cmp    DWORD PTR [rip+0xffffffffffffaea0],0x26        # 0xffffb0ec
  0024c: jne    0x3b8e4
  00252: sub    rsp,0x10
  00256: movq   QWORD PTR [rsp],xmm2
  0025b: mov    rax,QWORD PTR [rbx]
  0025e: lea    rdi,[rsp-0x18]
  00263: mov    QWORD PTR [rdi],rax
  00266: mov    QWORD PTR [rbx],rdi
  00269: mov    QWORD PTR [rsp-0x20],0x0
  00272: mov    QWORD PTR [rsp-0x38],rcx
  00277: mov    rax,QWORD PTR [rbp-0x60]
  0027b: mov    QWORD PTR [rsp-0x38],rax
  00280: mov    rdi,0x1
  00287: mov    rax,QWORD PTR [rbp-0x68]
  0028b: mov    QWORD PTR [rsp-0x40],rax
  00290: mov    QWORD PTR [rsp-0x30],0x0
  00299: movabs rax,0x100050000003b
  002a3: mov    QWORD PTR [rsp-0x28],rax
  002a8: movabs r13,0x55573cfe1010
  002b2: call   0xffffbddd
  002b7: lea    rdi,[rbp-0x8]
  002bb: mov    QWORD PTR [rbx],rdi
  002be: movq   xmm2,QWORD PTR [rsp]
  002c3: add    rsp,0x10
  002c7: movabs r13,0x55573cf99600
  002d1: test   rax,rax
  002d4: je     0xffff8713
  002da: mov    QWORD PTR [rbp-0x48],rax
:00013 %5 = %4
  002de: mov    rax,QWORD PTR [rbp-0x48]
  002e2: mov    QWORD PTR [rbp-0x50],rax
:00014 %7 = literal[0.0]
  002e6: movq   xmm3,QWORD PTR [rip+0x97a]        # 0xc68
:00015 _%7 = %4 < %7                        [Float][Float]
:00016 condnotbr _%7 =>:00020
  002ee: mov    rdi,QWORD PTR [rbp-0x48]
  002f2: test   rdi,0x1
  002f9: jne    0x3b900
  002ff: test   rdi,0x2
  00306: je     0x342
  0030c: xorps  xmm4,xmm4
  0030f: movabs rax,0x8000000000000002
  00319: cmp    rdi,rax
  0031c: je     0x354
  00322: mov    rax,rdi
  00325: sar    rax,0x3f
  00329: add    rax,0x2
  0032d: and    rdi,0xfffffffffffffffc
  00331: or     rdi,rax
  00334: rol    rdi,0x3d
  00338: movq   xmm4,rdi
  0033d: jmp    0x354
  00342: call   0xffff874c
  00347: test   rax,rax
  0034a: je     0x3b900
  00350: movq   xmm4,xmm0
  00354: ucomisd xmm4,xmm3
  00358: jae    0x3b95f
:00017 %5 = %4
:00018 %5 = neg %5                          [<INVALID>]
  0035e: mov    rdi,0x4
  00365: sub    DWORD PTR [rip+0x904],0x1        # 0xc70
  0036c: jne    0x3b929
  00372: mov    rdi,r12
  00375: mov    esi,DWORD PTR [rbp-0x18]
  00378: mov    rdx,QWORD PTR [rbp-0x28]
  0037c: movabs rax,0x55573c962b00
  00386: call   rax
  00388: mov    rdi,0x4
  0038f: jmp    0x3b929
:00019 br =>:00020
  00394: jmp    0x3b992
:00020 %7 = literal[1e-17]
  00399: movq   xmm3,QWORD PTR [rip+0x8d7]        # 0xc78
:00021 _%7 = %5 < %7                        [Float][Float]
:00022 condnotbr _%7 =>:00026
  003a1: mov    rdi,QWORD PTR [rbp-0x50]
  003a5: test   rdi,0x1
  003ac: jne    0x3b9d6
  003b2: test   rdi,0x2
  003b9: je     0x3f5
  003bf: xorps  xmm5,xmm5
  003c2: movabs rax,0x8000000000000002
  003cc: cmp    rdi,rax
  003cf: je     0x407
  003d5: mov    rax,rdi
  003d8: sar    rax,0x3f
  003dc: add    rax,0x2
  003e0: and    rdi,0xfffffffffffffffc
  003e4: or     rdi,rax
  003e7: rol    rdi,0x3d
  003eb: movq   xmm5,rdi
  003f0: jmp    0x407
  003f5: call   0xffff874c
  003fa: test   rax,rax
  003fd: je     0x3b9d6
  00403: movq   xmm5,xmm0
  00407: ucomisd xmm5,xmm3
  0040b: jae    0x41f
:00023 %7 = nil
  00411: mov    QWORD PTR [rbp-0x60],0x4
:00024 ret %7
  00419: mov    rax,QWORD PTR [rbp-0x60]
  0041d: leave  
  0041e: ret    
:00026 %8 = %1.call org()                   [Ray]
:00027 
  0041f: mov    rdi,QWORD PTR [rbp-0x30]
  00423: test   rdi,0x7
  0042a: jne    0x3b9ff
  00430: cmp    DWORD PTR [rdi+0x4],0x2b
  00434: jne    0x3b9ff
  0043a: cmp    DWORD PTR [rip+0xffffffffffffacab],0x26        # 0xffffb0ec
  00441: jne    0x3b9ff
  00447: mov    esi,DWORD PTR [rip+0x837]        # 0xc84
  0044d: cmp    esi,0xffffffff
  00450: je     0x3ba28
  00456: cmp    WORD PTR [rdi+0x2],0x3
  0045b: jne    0x474
  00461: cmp    esi,0x6
  00464: jge    0x474
  0046a: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0046f: jmp    0x4b6
  00474: sub    rsp,0x20
  00478: movq   QWORD PTR [rsp],xmm2
  0047d: movq   QWORD PTR [rsp+0x8],xmm3
  00483: movq   QWORD PTR [rsp+0x10],xmm4
  00489: movq   QWORD PTR [rsp+0x18],xmm5
  0048f: movabs rax,0x55573c900b50
  00499: call   rax
  0049b: movq   xmm2,QWORD PTR [rsp]
  004a0: movq   xmm3,QWORD PTR [rsp+0x8]
  004a6: movq   xmm4,QWORD PTR [rsp+0x10]
  004ac: movq   xmm5,QWORD PTR [rsp+0x18]
  004b2: add    rsp,0x20
  004b6: mov    QWORD PTR [rbp-0x68],rax
:00029 %9 = @n: Plane[IvarId(1)]
  004ba: mov    rdi,QWORD PTR [rbp-0x28]
  004be: cmp    WORD PTR [rdi+0x2],0x3
  004c3: jne    0x3ba87
  004c9: mov    rax,QWORD PTR [rdi+0x18]
  004cd: mov    QWORD PTR [rbp-0x70],rax
:00030 %7 = %8.call vdot(%9; 1)             [Vec]
:00031 
  004d1: mov    rdi,QWORD PTR [rbp-0x68]
  004d5: test   rdi,0x7
  004dc: jne    0x3bad3
  004e2: cmp    DWORD PTR [rdi+0x4],0x25
  004e6: jne    0x3bad3
  004ec: cmp    DWORD PTR [rip+0xffffffffffffabf9],0x26        # 0xffffb0ec
  004f3: jne    0x3bad3
  004f9: sub    rsp,0x20
  004fd: movq   QWORD PTR [rsp],xmm2
  00502: movq   QWORD PTR [rsp+0x8],xmm4
  00508: movq   QWORD PTR [rsp+0x10],xmm5
  0050e: mov    rax,QWORD PTR [rbx]
  00511: lea    rdi,[rsp-0x18]
  00516: mov    QWORD PTR [rdi],rax
  00519: mov    QWORD PTR [rbx],rdi
  0051c: mov    QWORD PTR [rsp-0x20],0x0
  00525: mov    QWORD PTR [rsp-0x38],rcx
  0052a: mov    rax,QWORD PTR [rbp-0x68]
  0052e: mov    QWORD PTR [rsp-0x38],rax
  00533: mov    rdi,0x1
  0053a: mov    rax,QWORD PTR [rbp-0x70]
  0053e: mov    QWORD PTR [rsp-0x40],rax
  00543: mov    QWORD PTR [rsp-0x30],0x0
  0054c: movabs rax,0x100050000003b
  00556: mov    QWORD PTR [rsp-0x28],rax
  0055b: movabs r13,0x55573cfe1010
  00565: call   0xffffbddd
  0056a: lea    rdi,[rbp-0x8]
  0056e: mov    QWORD PTR [rbx],rdi
  00571: movq   xmm2,QWORD PTR [rsp]
  00576: movq   xmm4,QWORD PTR [rsp+0x8]
  0057c: movq   xmm5,QWORD PTR [rsp+0x10]
  00582: add    rsp,0x20
  00586: movabs r13,0x55573cf99740
  00590: test   rax,rax
  00593: je     0xffff8713
  00599: mov    QWORD PTR [rbp-0x60],rax
:00033 %7 = %7 + %3                         [Float][Float]
  0059d: mov    rdi,QWORD PTR [rbp-0x60]
  005a1: test   rdi,0x1
  005a8: jne    0x3baef
  005ae: test   rdi,0x2
  005b5: je     0x5f1
  005bb: xorps  xmm3,xmm3
  005be: movabs rax,0x8000000000000002
  005c8: cmp    rdi,rax
  005cb: je     0x603
  005d1: mov    rax,rdi
  005d4: sar    rax,0x3f
  005d8: add    rax,0x2
  005dc: and    rdi,0xfffffffffffffffc
  005e0: or     rdi,rax
  005e3: rol    rdi,0x3d
  005e7: movq   xmm3,rdi
  005ec: jmp    0x603
  005f1: call   0xffff874c
  005f6: test   rax,rax
  005f9: je     0x3baef
  005ff: movq   xmm3,xmm0
  00603: addsd  xmm3,xmm2
:00034 %7 = neg %7                          [Float]
  00607: xorps  xmm3,XMMWORD PTR [rip+0x67a]        # 0xc88
:00035 %6 = %7 / %4                         [Float][Float]
  0060e: movq   xmm6,xmm3
  00612: movq   rax,xmm4
  00617: test   rax,rax
  0061a: je     0xffff8738
  00620: divsd  xmm6,xmm4
:00036 %8 = literal[0.0]
  00624: movq   xmm7,QWORD PTR [rip+0x66c]        # 0xc98
:00037 %7 = %6 > %8                         [Float][Float]
  0062c: xor    rax,rax
  0062f: ucomisd xmm6,xmm7
  00633: seta   al
  00637: shl    rax,0x3
  0063b: or     rax,0x14
  0063f: mov    QWORD PTR [rbp-0x60],rax
:00038 condnotbr %7 =>:00043
  00643: mov    rax,QWORD PTR [rbp-0x60]
  00647: or     rax,0x10
  0064b: cmp    rax,0x14
  0064f: je     0x3bb77
:00039 %8 = %2.call t()                     [<INVALID>]
:00040 
  00655: mov    rdi,0x4
  0065c: sub    DWORD PTR [rip+0x63d],0x1        # 0xca0
  00663: jne    0x3bb0b
  00669: mov    rdi,r12
  0066c: mov    esi,DWORD PTR [rbp-0x18]
  0066f: mov    rdx,QWORD PTR [rbp-0x28]
  00673: movabs rax,0x55573c962b00
  0067d: call   rax
  0067f: mov    rdi,0x4
  00686: jmp    0x3bb0b
:00042 %7 = %6 < %8                         [<INVALID>][<INVALID>]
  0068b: mov    rdi,0x4
  00692: sub    DWORD PTR [rip+0x60b],0x1        # 0xca4
  00699: jne    0x3bb41
  0069f: mov    rdi,r12
  006a2: mov    esi,DWORD PTR [rbp-0x18]
  006a5: mov    rdx,QWORD PTR [rbp-0x28]
  006a9: movabs rax,0x55573c962b00
  006b3: call   rax
  006b5: mov    rdi,0x4
  006bc: jmp    0x3bb41
  006c1: jmp    0x3bbb7
:00043 condnotbr %7 =>:00105
  006c6: mov    rax,QWORD PTR [rbp-0x60]
  006ca: or     rax,0x10
  006ce: cmp    rax,0x14
  006d2: je     0x3c049
:00044 %7 = literal[true]
  006d8: mov    rax,0x1c
  006df: mov    QWORD PTR [rbp-0x60],rax
:00045 _ = %2.call hit=(%7; 1)              [<INVALID>]
:00046 
  006e3: mov    rdi,0x4
  006ea: sub    DWORD PTR [rip+0x5b7],0x1        # 0xca8
  006f1: jne    0x3bbf7
  006f7: mov    rdi,r12
  006fa: mov    esi,DWORD PTR [rbp-0x18]
  006fd: mov    rdx,QWORD PTR [rbp-0x28]
  00701: movabs rax,0x55573c962b00
  0070b: call   rax
  0070d: mov    rdi,0x4
  00714: jmp    0x3bbf7
:00048 _ = %2.call t=(%6; 1)                [<INVALID>]
:00049 
  00719: mov    rdi,0x4
  00720: sub    DWORD PTR [rip+0x585],0x1        # 0xcac
  00727: jne    0x3bc2d
  0072d: mov    rdi,r12
  00730: mov    esi,DWORD PTR [rbp-0x18]
  00733: mov    rdx,QWORD PTR [rbp-0x28]
  00737: movabs rax,0x55573c962b00
  00741: call   rax
  00743: mov    rdi,0x4
  0074a: jmp    0x3bc2d
:00051 %7 = @n: <INVALID>[IvarId(0)]
  0074f: mov    rdi,QWORD PTR [rbp-0x28]
  00753: sub    rsp,0x30
  00757: movq   QWORD PTR [rsp],xmm2
  0075c: movq   QWORD PTR [rsp+0x8],xmm4
  00762: movq   QWORD PTR [rsp+0x10],xmm5
  00768: movq   QWORD PTR [rsp+0x18],xmm6
  0076e: movq   QWORD PTR [rsp+0x20],xmm7
  00774: mov    rsi,0x82
  0077b: mov    rdx,r12
  0077e: movabs rax,0x55573c95d1a0
  00788: call   rax
  0078a: movq   xmm2,QWORD PTR [rsp]
  0078f: movq   xmm4,QWORD PTR [rsp+0x8]
  00795: movq   xmm5,QWORD PTR [rsp+0x10]
  0079b: movq   xmm6,QWORD PTR [rsp+0x18]
  007a1: movq   xmm7,QWORD PTR [rsp+0x20]
  007a7: add    rsp,0x30
  007ab: mov    QWORD PTR [rbp-0x60],rax
:00052 _ = %2.call n=(%7; 1)                [<INVALID>]
:00053 
  007af: mov    rdi,0x4
  007b6: sub    DWORD PTR [rip+0x4f3],0x1        # 0xcb0
  007bd: jne    0x3bc63
  007c3: mov    rdi,r12
  007c6: mov    esi,DWORD PTR [rbp-0x18]
  007c9: mov    rdx,QWORD PTR [rbp-0x28]
  007cd: movabs rax,0x55573c962b00
  007d7: call   rax
  007d9: mov    rdi,0x4
  007e0: jmp    0x3bc63
:00055 %8 = const[Vec]                      [<INVALID>]
  007e5: mov    rax,QWORD PTR [rip+0xffffffffffffa90c]        # 0xffffb0f8
  007ec: cmp    rax,QWORD PTR [rip+0x4d5]        # 0xcc8
  007f3: jne    0x3bc99
  007f9: mov    rax,QWORD PTR [rip+0x4b8]        # 0xcb8
  00800: mov    QWORD PTR [rbp-0x68],rax
:00056 %10 = %1.call org()                  [<INVALID>]
:00057 
  00804: mov    rdi,0x4
  0080b: sub    DWORD PTR [rip+0x4be],0x1        # 0xcd0
  00812: jne    0x3bd15
  00818: mov    rdi,r12
  0081b: mov    esi,DWORD PTR [rbp-0x18]
  0081e: mov    rdx,QWORD PTR [rbp-0x28]
  00822: movabs rax,0x55573c962b00
  0082c: call   rax
  0082e: mov    rdi,0x4
  00835: jmp    0x3bd15
:00059 %9 = %10.call x()                    [<INVALID>]
:00060 
  0083a: mov    rdi,0x4
  00841: sub    DWORD PTR [rip+0x48c],0x1        # 0xcd4
  00848: jne    0x3bd3e
  0084e: mov    rdi,r12
  00851: mov    esi,DWORD PTR [rbp-0x18]
  00854: mov    rdx,QWORD PTR [rbp-0x28]
  00858: movabs rax,0x55573c962b00
  00862: call   rax
  00864: mov    rdi,0x4
  0086b: jmp    0x3bd3e
:00062 %11 = %1.call dir()                  [<INVALID>]
:00063 
  00870: mov    rdi,0x4
  00877: sub    DWORD PTR [rip+0x45a],0x1        # 0xcd8
  0087e: jne    0x3bd67
  00884: mov    rdi,r12
  00887: mov    esi,DWORD PTR [rbp-0x18]
  0088a: mov    rdx,QWORD PTR [rbp-0x28]
  0088e: movabs rax,0x55573c962b00
  00898: call   rax
  0089a: mov    rdi,0x4
  008a1: jmp    0x3bd67
:00065 %10 = %11.call x()                   [<INVALID>]
:00066 
  008a6: mov    rdi,0x4
  008ad: sub    DWORD PTR [rip+0x428],0x1        # 0xcdc
  008b4: jne    0x3bd90
  008ba: mov    rdi,r12
  008bd: mov    esi,DWORD PTR [rbp-0x18]
  008c0: mov    rdx,QWORD PTR [rbp-0x28]
  008c4: movabs rax,0x55573c962b00
  008ce: call   rax
  008d0: mov    rdi,0x4
  008d7: jmp    0x3bd90
:00068 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  008dc: mov    rdi,0x4
  008e3: sub    DWORD PTR [rip+0x3f6],0x1        # 0xce0
  008ea: jne    0x3bdb9
  008f0: mov    rdi,r12
  008f3: mov    esi,DWORD PTR [rbp-0x18]
  008f6: mov    rdx,QWORD PTR [rbp-0x28]
  008fa: movabs rax,0x55573c962b00
  00904: call   rax
  00906: mov    rdi,0x4
  0090d: jmp    0x3bdb9
:00069 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00912: mov    rdi,0x4
  00919: sub    DWORD PTR [rip+0x3c4],0x1        # 0xce4
  00920: jne    0x3bde2
  00926: mov    rdi,r12
  00929: mov    esi,DWORD PTR [rbp-0x18]
  0092c: mov    rdx,QWORD PTR [rbp-0x28]
  00930: movabs rax,0x55573c962b00
  0093a: call   rax
  0093c: mov    rdi,0x4
  00943: jmp    0x3bde2
:00070 %11 = %1.call org()                  [<INVALID>]
:00071 
  00948: mov    rdi,0x4
  0094f: sub    DWORD PTR [rip+0x392],0x1        # 0xce8
  00956: jne    0x3be0b
  0095c: mov    rdi,r12
  0095f: mov    esi,DWORD PTR [rbp-0x18]
  00962: mov    rdx,QWORD PTR [rbp-0x28]
  00966: movabs rax,0x55573c962b00
  00970: call   rax
  00972: mov    rdi,0x4
  00979: jmp    0x3be0b
:00073 %10 = %11.call y()                   [<INVALID>]
:00074 
  0097e: mov    rdi,0x4
  00985: sub    DWORD PTR [rip+0x360],0x1        # 0xcec
  0098c: jne    0x3be34
  00992: mov    rdi,r12
  00995: mov    esi,DWORD PTR [rbp-0x18]
  00998: mov    rdx,QWORD PTR [rbp-0x28]
  0099c: movabs rax,0x55573c962b00
  009a6: call   rax
  009a8: mov    rdi,0x4
  009af: jmp    0x3be34
:00076 %12 = %1.call dir()                  [<INVALID>]
:00077 
  009b4: mov    rdi,0x4
  009bb: sub    DWORD PTR [rip+0x32e],0x1        # 0xcf0
  009c2: jne    0x3be5d
  009c8: mov    rdi,r12
  009cb: mov    esi,DWORD PTR [rbp-0x18]
  009ce: mov    rdx,QWORD PTR [rbp-0x28]
  009d2: movabs rax,0x55573c962b00
  009dc: call   rax
  009de: mov    rdi,0x4
  009e5: jmp    0x3be5d
:00079 %11 = %12.call y()                   [<INVALID>]
:00080 
  009ea: mov    rdi,0x4
  009f1: sub    DWORD PTR [rip+0x2fc],0x1        # 0xcf4
  009f8: jne    0x3be86
  009fe: mov    rdi,r12
  00a01: mov    esi,DWORD PTR [rbp-0x18]
  00a04: mov    rdx,QWORD PTR [rbp-0x28]
  00a08: movabs rax,0x55573c962b00
  00a12: call   rax
  00a14: mov    rdi,0x4
  00a1b: jmp    0x3be86
:00082 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  00a20: mov    rdi,0x4
  00a27: sub    DWORD PTR [rip+0x2ca],0x1        # 0xcf8
  00a2e: jne    0x3beaf
  00a34: mov    rdi,r12
  00a37: mov    esi,DWORD PTR [rbp-0x18]
  00a3a: mov    rdx,QWORD PTR [rbp-0x28]
  00a3e: movabs rax,0x55573c962b00
  00a48: call   rax
  00a4a: mov    rdi,0x4
  00a51: jmp    0x3beaf
:00083 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  00a56: mov    rdi,0x4
  00a5d: sub    DWORD PTR [rip+0x298],0x1        # 0xcfc
  00a64: jne    0x3bed8
  00a6a: mov    rdi,r12
  00a6d: mov    esi,DWORD PTR [rbp-0x18]
  00a70: mov    rdx,QWORD PTR [rbp-0x28]
  00a74: movabs rax,0x55573c962b00
  00a7e: call   rax
  00a80: mov    rdi,0x4
  00a87: jmp    0x3bed8
:00084 %12 = %1.call org()                  [<INVALID>]
:00085 
  00a8c: mov    rdi,0x4
  00a93: sub    DWORD PTR [rip+0x266],0x1        # 0xd00
  00a9a: jne    0x3bf01
  00aa0: mov    rdi,r12
  00aa3: mov    esi,DWORD PTR [rbp-0x18]
  00aa6: mov    rdx,QWORD PTR [rbp-0x28]
  00aaa: movabs rax,0x55573c962b00
  00ab4: call   rax
  00ab6: mov    rdi,0x4
  00abd: jmp    0x3bf01
:00087 %11 = %12.call z()                   [<INVALID>]
:00088 
  00ac2: mov    rdi,0x4
  00ac9: sub    DWORD PTR [rip+0x234],0x1        # 0xd04
  00ad0: jne    0x3bf2a
  00ad6: mov    rdi,r12
  00ad9: mov    esi,DWORD PTR [rbp-0x18]
  00adc: mov    rdx,QWORD PTR [rbp-0x28]
  00ae0: movabs rax,0x55573c962b00
  00aea: call   rax
  00aec: mov    rdi,0x4
  00af3: jmp    0x3bf2a
:00090 %13 = %1.call dir()                  [<INVALID>]
:00091 
  00af8: mov    rdi,0x4
  00aff: sub    DWORD PTR [rip+0x202],0x1        # 0xd08
  00b06: jne    0x3bf53
  00b0c: mov    rdi,r12
  00b0f: mov    esi,DWORD PTR [rbp-0x18]
  00b12: mov    rdx,QWORD PTR [rbp-0x28]
  00b16: movabs rax,0x55573c962b00
  00b20: call   rax
  00b22: mov    rdi,0x4
  00b29: jmp    0x3bf53
:00093 %12 = %13.call z()                   [<INVALID>]
:00094 
  00b2e: mov    rdi,0x4
  00b35: sub    DWORD PTR [rip+0x1d0],0x1        # 0xd0c
  00b3c: jne    0x3bf7c
  00b42: mov    rdi,r12
  00b45: mov    esi,DWORD PTR [rbp-0x18]
  00b48: mov    rdx,QWORD PTR [rbp-0x28]
  00b4c: movabs rax,0x55573c962b00
  00b56: call   rax
  00b58: mov    rdi,0x4
  00b5f: jmp    0x3bf7c
:00096 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  00b64: mov    rdi,0x4
  00b6b: sub    DWORD PTR [rip+0x19e],0x1        # 0xd10
  00b72: jne    0x3bfa5
  00b78: mov    rdi,r12
  00b7b: mov    esi,DWORD PTR [rbp-0x18]
  00b7e: mov    rdx,QWORD PTR [rbp-0x28]
  00b82: movabs rax,0x55573c962b00
  00b8c: call   rax
  00b8e: mov    rdi,0x4
  00b95: jmp    0x3bfa5
:00097 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00b9a: mov    rdi,0x4
  00ba1: sub    DWORD PTR [rip+0x16c],0x1        # 0xd14
  00ba8: jne    0x3bfce
  00bae: mov    rdi,r12
  00bb1: mov    esi,DWORD PTR [rbp-0x18]
  00bb4: mov    rdx,QWORD PTR [rbp-0x28]
  00bb8: movabs rax,0x55573c962b00
  00bc2: call   rax
  00bc4: mov    rdi,0x4
  00bcb: jmp    0x3bfce
:00098 %7 = %8.call new(%9; 3)              [<INVALID>]
:00099 
  00bd0: mov    rdi,0x4
  00bd7: sub    DWORD PTR [rip+0x13a],0x1        # 0xd18
  00bde: jne    0x3bff7
  00be4: mov    rdi,r12
  00be7: mov    esi,DWORD PTR [rbp-0x18]
  00bea: mov    rdx,QWORD PTR [rbp-0x28]
  00bee: movabs rax,0x55573c962b00
  00bf8: call   rax
  00bfa: mov    rdi,0x4
  00c01: jmp    0x3bff7
:00101 _ = %2.call pl=(%7; 1)               [<INVALID>]
:00102 
  00c06: mov    rdi,0x4
  00c0d: sub    DWORD PTR [rip+0x108],0x1        # 0xd1c
  00c14: jne    0x3c020
  00c1a: mov    rdi,r12
  00c1d: mov    esi,DWORD PTR [rbp-0x18]
  00c20: mov    rdx,QWORD PTR [rbp-0x28]
  00c24: movabs rax,0x55573c962b00
  00c2e: call   rax
  00c30: mov    rdi,0x4
  00c37: jmp    0x3c020
:00104 br =>:00105
  00c3c: jmp    0x3c089
:00105 %7 = nil
  00c41: mov    QWORD PTR [rbp-0x60],0x4
:00106 ret %7
  00c49: mov    rax,QWORD PTR [rbp-0x60]
  00c4d: leave  
  00c4e: ret    
==> start whole compile: clamp FuncId(52) self_class:Scene start:[00000] bytecode:0x55573cfe23d0
<== finished compile. elapsed:29.6µs
offset:Pos(34376) code: 430 bytes  data: 82 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x38],0x4
  00010: mov    QWORD PTR [rbp-0x40],0x4
  00018: mov    rdi,QWORD PTR [rbp-0x28]
  0001c: test   rdi,0x7
  00023: jne    0x3b39c
  00029: cmp    DWORD PTR [rdi+0x4],0x2f
  0002d: jne    0x3b39c
:00000 %3 = literal[255.5]
  00033: movq   xmm2,QWORD PTR [rip+0x17d]        # 0x1b8
:00001 %2 = %1 * %3                         [Float][Float]
  0003b: mov    rdi,QWORD PTR [rbp-0x30]
  0003f: test   rdi,0x1
  00046: jne    0x3b3ab
  0004c: test   rdi,0x2
  00053: je     0x8f
  00059: xorps  xmm3,xmm3
  0005c: movabs rax,0x8000000000000002
  00066: cmp    rdi,rax
  00069: je     0xa1
  0006f: mov    rax,rdi
  00072: sar    rax,0x3f
  00076: add    rax,0x2
  0007a: and    rdi,0xfffffffffffffffc
  0007e: or     rdi,rax
  00081: rol    rdi,0x3d
  00085: movq   xmm3,rdi
  0008a: jmp    0xa1
  0008f: call   0xffff7a2c
  00094: test   rax,rax
  00097: je     0x3b3ab
  0009d: movq   xmm3,xmm0
  000a1: movq   xmm4,xmm3
  000a5: mulsd  xmm4,xmm2
:00002 %3 = literal[255.0]
  000a9: movq   xmm2,QWORD PTR [rip+0x117]        # 0x1c8
:00003 _%3 = %2 > %3                        [Float][Float]
:00004 condnotbr _%3 =>:00007
  000b1: ucomisd xmm4,xmm2
  000b5: jbe    0x3b3c7
:00005 %2 = literal[255.0]
  000bb: movq   xmm4,QWORD PTR [rip+0x115]        # 0x1d8
:00006 br =>:00007
  000c3: jmp    0x3b3fa
:00007 %3 = literal[0.0]
  000c8: movq   xmm2,QWORD PTR [rip+0x118]        # 0x1e8
:00008 _%3 = %2 < %3                        [Float][Float]
:00009 condnotbr _%3 =>:00012
  000d0: ucomisd xmm4,xmm2
  000d4: jae    0x3b42d
:00010 %2 = literal[0.0]
  000da: movq   xmm4,QWORD PTR [rip+0x116]        # 0x1f8
:00011 br =>:00012
  000e2: jmp    0x3b460
:00012 %3 = %2.call to_i()                  [Float]
:00013 
  000e7: movq   xmm0,xmm4
  000eb: call   0xffff7b1f
  000f0: mov    QWORD PTR [rbp-0x38],rax
  000f4: mov    rdi,QWORD PTR [rbp-0x38]
  000f8: test   rdi,0x1
  000ff: jne    0x3b493
  00105: test   rdi,0x2
  0010c: jne    0x129
  00112: test   rdi,0x7
  00119: jne    0x3b493
  0011f: cmp    DWORD PTR [rdi+0x4],0x7
  00123: jne    0x3b493
  00129: cmp    DWORD PTR [rip+0xffffffffffffa29c],0x26        # 0xffffa3cc
  00130: jne    0x3b493
  00136: mov    r9,0x0
  0013d: sub    rsp,0x10
  00141: movq   QWORD PTR [rsp],xmm3
  00146: movq   QWORD PTR [rsp+0x8],xmm4
  0014c: mov    rdx,rdi
  0014f: mov    rax,QWORD PTR [rbx]
  00152: lea    rdi,[rsp-0x18]
  00157: mov    QWORD PTR [rdi],rax
  0015a: mov    QWORD PTR [rbx],rdi
  0015d: mov    QWORD PTR [rsp-0x20],0x0
  00166: mov    QWORD PTR [rsp-0x38],rcx
  0016b: lea    rcx,[rbp-0x48]
  0016f: mov    r8,0x0
  00176: call   0x3b4a2
  0017b: lea    rdi,[rbp-0x8]
  0017f: mov    QWORD PTR [rbx],rdi
  00182: movq   xmm3,QWORD PTR [rsp]
  00187: movq   xmm4,QWORD PTR [rsp+0x8]
  0018d: add    rsp,0x10
  00191: movabs r13,0x55573cfe24b0
  0019b: test   rax,rax
  0019e: je     0xffff79f3
  001a4: mov    QWORD PTR [rbp-0x40],rax
:00015 ret %3
  001a8: mov    rax,QWORD PTR [rbp-0x40]
  001ac: leave  
  001ad: ret    
==> start whole compile: <unnamed> FuncId(75) self_class:Scene start:[00000] bytecode:0x55573cfd10a0
<== finished compile. elapsed:14.4µs
offset:Pos(34888) code: 223 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    rdi,QWORD PTR [rbp-0x28]
  0001f: test   rdi,0x7
  00026: jne    0x3b2d4
  0002c: cmp    DWORD PTR [rdi+0x4],0x2f
  00030: jne    0x3b2d4
:00000 %3 = dynvar(3, %3)
  00036: mov    rax,QWORD PTR [rbp-0x10]
  0003a: mov    rax,QWORD PTR [rax]
  0003d: mov    rax,QWORD PTR [rax]
  00040: mov    rax,QWORD PTR [rax-0x30]
  00044: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = literal[76]
  00048: mov    rax,0x99
  0004f: mov    QWORD PTR [rbp-0x48],rax
:00002 %2 = %3.call times(&%4)              [Integer]
:00003 
  00053: mov    rdi,QWORD PTR [rbp-0x40]
  00057: test   rdi,0x1
  0005e: jne    0x7b
  00064: test   rdi,0x7
  0006b: jne    0x3b2e3
  00071: cmp    DWORD PTR [rdi+0x4],0x6
  00075: jne    0x3b2e3
  0007b: cmp    DWORD PTR [rip+0xffffffffffffa14a],0x26        # 0xffffa1cc
  00082: jne    0x3b2e3
  00088: mov    r9,QWORD PTR [rbp-0x48]
  0008c: mov    rdx,rdi
  0008f: mov    rax,QWORD PTR [rbx]
  00092: lea    rdi,[rsp-0x18]
  00097: mov    QWORD PTR [rdi],rax
  0009a: mov    QWORD PTR [rbx],rdi
  0009d: mov    QWORD PTR [rsp-0x20],0x0
  000a6: mov    QWORD PTR [rsp-0x38],rcx
  000ab: lea    rcx,[rbp-0x50]
  000af: mov    r8,0x0
  000b6: call   0x3b2f2
  000bb: lea    rdi,[rbp-0x8]
  000bf: mov    QWORD PTR [rbx],rdi
  000c2: movabs r13,0x55573cfd10e0
  000cc: test   rax,rax
  000cf: je     0xffff77f3
  000d5: mov    QWORD PTR [rbp-0x38],rax
:00005 ret %2
  000d9: mov    rax,QWORD PTR [rbp-0x38]
  000dd: leave  
  000de: ret    
==> start whole compile: <unnamed> FuncId(74) self_class:Scene start:[00000] bytecode:0x55573cf945e0
<== finished compile. elapsed:69.3µs
offset:Pos(35111) code: 3713 bytes  data: 104 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x80
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x38],rax
  00016: mov    QWORD PTR [rbp-0x40],rax
  0001a: mov    QWORD PTR [rbp-0x48],rax
  0001e: mov    QWORD PTR [rbp-0x50],rax
  00022: mov    QWORD PTR [rbp-0x58],rax
  00026: mov    QWORD PTR [rbp-0x60],rax
  0002a: mov    QWORD PTR [rbp-0x68],rax
  0002e: mov    QWORD PTR [rbp-0x70],rax
  00032: mov    rdi,QWORD PTR [rbp-0x28]
  00036: test   rdi,0x7
  0003d: jne    0x3b245
  00043: cmp    DWORD PTR [rdi+0x4],0x2f
  00047: jne    0x3b245
:00000 %6 = const[Vec]                      [Vec]
  0004d: mov    rax,QWORD PTR [rip+0xffffffffffffa0a5]        # 0xffffa0f9
  00054: cmp    rax,QWORD PTR [rip+0xe3e]        # 0xe99
  0005b: jne    0x3b254
  00061: mov    rax,QWORD PTR [rip+0xe21]        # 0xe89
  00068: mov    QWORD PTR [rbp-0x58],rax
:00001 %7 = literal[0.0]
  0006c: movq   xmm2,QWORD PTR [rip+0xe35]        # 0xea9
:00002 %8 = literal[0.0]
  00074: movq   xmm3,QWORD PTR [rip+0xe3d]        # 0xeb9
:00003 %9 = literal[0.0]
  0007c: movq   xmm4,QWORD PTR [rip+0xe45]        # 0xec9
:00004 %2 = %6.call new(%7; 3)              [#<Class:Vec>]
:00005 
  00084: movq   xmm0,xmm2
  00088: call   0xffff7840
  0008d: mov    QWORD PTR [rbp-0x60],rax
  00091: movq   xmm0,xmm3
  00095: call   0xffff7840
  0009a: mov    QWORD PTR [rbp-0x68],rax
  0009e: movq   xmm0,xmm4
  000a2: call   0xffff7840
  000a7: mov    QWORD PTR [rbp-0x70],rax
  000ab: mov    rdi,QWORD PTR [rbp-0x58]
  000af: test   rdi,0x7
  000b6: jne    0x3b29a
  000bc: cmp    DWORD PTR [rdi+0x4],0x26
  000c0: jne    0x3b29a
  000c6: cmp    DWORD PTR [rip+0xffffffffffffa020],0x26        # 0xffffa0ed
  000cd: jne    0x3b29a
  000d3: mov    r9,0x0
  000da: sub    rsp,0x20
  000de: movq   QWORD PTR [rsp],xmm2
  000e3: movq   QWORD PTR [rsp+0x8],xmm3
  000e9: movq   QWORD PTR [rsp+0x10],xmm4
  000ef: mov    rdx,rdi
  000f2: mov    rax,QWORD PTR [rbx]
  000f5: lea    rdi,[rsp-0x18]
  000fa: mov    QWORD PTR [rdi],rax
  000fd: mov    QWORD PTR [rbx],rdi
  00100: mov    QWORD PTR [rsp-0x20],0x0
  00109: mov    QWORD PTR [rsp-0x38],rcx
  0010e: lea    rcx,[rbp-0x60]
  00112: mov    r8,0x3
  00119: call   0x3b2a9
  0011e: lea    rdi,[rbp-0x8]
  00122: mov    QWORD PTR [rbx],rdi
  00125: movq   xmm2,QWORD PTR [rsp]
  0012a: movq   xmm3,QWORD PTR [rsp+0x8]
  00130: movq   xmm4,QWORD PTR [rsp+0x10]
  00136: add    rsp,0x20
  0013a: movabs r13,0x55573cf94640
  00144: test   rax,rax
  00147: je     0xffff7714
  0014d: mov    QWORD PTR [rbp-0x38],rax
:00007 %6 = dynvar(2, %3)
  00151: mov    rax,QWORD PTR [rbp-0x10]
  00155: mov    rax,QWORD PTR [rax]
  00158: mov    rax,QWORD PTR [rax-0x30]
  0015c: mov    QWORD PTR [rbp-0x58],rax
:00008 %7 = literal[75]
  00160: mov    rax,0x97
  00167: mov    QWORD PTR [rbp-0x60],rax
:00009 _ = %6.call times(&%7)               [Integer]
:00010 
  0016b: mov    rdi,QWORD PTR [rbp-0x58]
  0016f: test   rdi,0x1
  00176: jne    0x193
  0017c: test   rdi,0x7
  00183: jne    0x3b2db
  00189: cmp    DWORD PTR [rdi+0x4],0x6
  0018d: jne    0x3b2db
  00193: cmp    DWORD PTR [rip+0xffffffffffff9f53],0x26        # 0xffffa0ed
  0019a: jne    0x3b2db
  001a0: mov    r9,QWORD PTR [rbp-0x60]
  001a4: sub    rsp,0x10
  001a8: movq   QWORD PTR [rsp],xmm3
  001ad: movq   QWORD PTR [rsp+0x8],xmm4
  001b3: mov    rdx,rdi
  001b6: mov    rax,QWORD PTR [rbx]
  001b9: lea    rdi,[rsp-0x18]
  001be: mov    QWORD PTR [rdi],rax
  001c1: mov    QWORD PTR [rbx],rdi
  001c4: mov    QWORD PTR [rsp-0x20],0x0
  001cd: mov    QWORD PTR [rsp-0x38],rcx
  001d2: lea    rcx,[rbp-0x68]
  001d6: mov    r8,0x0
  001dd: call   0x3b2ea
  001e2: lea    rdi,[rbp-0x8]
  001e6: mov    QWORD PTR [rbx],rdi
  001e9: movq   xmm3,QWORD PTR [rsp]
  001ee: movq   xmm4,QWORD PTR [rsp+0x8]
  001f4: add    rsp,0x10
  001f8: movabs r13,0x55573cf94690
  00202: test   rax,rax
  00205: je     0xffff7714
:00012 %6 = %2.call x()                     [Vec]
:00013 
  0020b: mov    rdi,QWORD PTR [rbp-0x38]
  0020f: test   rdi,0x7
  00216: jne    0x3b31c
  0021c: cmp    DWORD PTR [rdi+0x4],0x25
  00220: jne    0x3b31c
  00226: cmp    DWORD PTR [rip+0xffffffffffff9ec0],0x26        # 0xffffa0ed
  0022d: jne    0x3b31c
  00233: mov    esi,DWORD PTR [rip+0xc9c]        # 0xed5
  00239: cmp    esi,0xffffffff
  0023c: je     0x3b32b
  00242: cmp    WORD PTR [rdi+0x2],0x3
  00247: jne    0x260
  0024d: cmp    esi,0x6
  00250: jge    0x260
  00256: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0025b: jmp    0x28a
  00260: sub    rsp,0x10
  00264: movq   QWORD PTR [rsp],xmm3
  00269: movq   QWORD PTR [rsp+0x8],xmm4
  0026f: movabs rax,0x55573c900b50
  00279: call   rax
  0027b: movq   xmm3,QWORD PTR [rsp]
  00280: movq   xmm4,QWORD PTR [rsp+0x8]
  00286: add    rsp,0x10
  0028a: mov    QWORD PTR [rbp-0x58],rax
:00015 %7 = dynvar(2, %5)
  0028e: mov    rax,QWORD PTR [rbp-0x10]
  00292: mov    rax,QWORD PTR [rax]
  00295: mov    rax,QWORD PTR [rax-0x40]
  00299: mov    QWORD PTR [rbp-0x60],rax
:00016 %8 = dynvar(2, %5)
  0029d: mov    rax,QWORD PTR [rbp-0x10]
  002a1: mov    rax,QWORD PTR [rax]
  002a4: mov    rax,QWORD PTR [rax-0x40]
  002a8: mov    QWORD PTR [rbp-0x68],rax
:00017 %7 = %7 * %8                         [Float][Float]
  002ac: mov    rdi,QWORD PTR [rbp-0x60]
  002b0: test   rdi,0x1
  002b7: jne    0x3b372
  002bd: test   rdi,0x2
  002c4: je     0x300
  002ca: xorps  xmm2,xmm2
  002cd: movabs rax,0x8000000000000002
  002d7: cmp    rdi,rax
  002da: je     0x312
  002e0: mov    rax,rdi
  002e3: sar    rax,0x3f
  002e7: add    rax,0x2
  002eb: and    rdi,0xfffffffffffffffc
  002ef: or     rdi,rax
  002f2: rol    rdi,0x3d
  002f6: movq   xmm2,rdi
  002fb: jmp    0x312
  00300: call   0xffff774d
  00305: test   rax,rax
  00308: je     0x3b372
  0030e: movq   xmm2,xmm0
  00312: mov    rdi,QWORD PTR [rbp-0x68]
  00316: test   rdi,0x1
  0031d: jne    0x3b381
  00323: test   rdi,0x2
  0032a: je     0x366
  00330: xorps  xmm3,xmm3
  00333: movabs rax,0x8000000000000002
  0033d: cmp    rdi,rax
  00340: je     0x378
  00346: mov    rax,rdi
  00349: sar    rax,0x3f
  0034d: add    rax,0x2
  00351: and    rdi,0xfffffffffffffffc
  00355: or     rdi,rax
  00358: rol    rdi,0x3d
  0035c: movq   xmm3,rdi
  00361: jmp    0x378
  00366: call   0xffff774d
  0036b: test   rax,rax
  0036e: je     0x3b381
  00374: movq   xmm3,xmm0
  00378: mulsd  xmm2,xmm3
:00018 %3 = %6 / %7                         [Float][Float]
  0037c: mov    rdi,QWORD PTR [rbp-0x58]
  00380: test   rdi,0x1
  00387: jne    0x3b390
  0038d: test   rdi,0x2
  00394: je     0x3d0
  0039a: xorps  xmm5,xmm5
  0039d: movabs rax,0x8000000000000002
  003a7: cmp    rdi,rax
  003aa: je     0x3e2
  003b0: mov    rax,rdi
  003b3: sar    rax,0x3f
  003b7: add    rax,0x2
  003bb: and    rdi,0xfffffffffffffffc
  003bf: or     rdi,rax
  003c2: rol    rdi,0x3d
  003c6: movq   xmm5,rdi
  003cb: jmp    0x3e2
  003d0: call   0xffff774d
  003d5: test   rax,rax
  003d8: je     0x3b390
  003de: movq   xmm5,xmm0
  003e2: movq   xmm6,xmm5
  003e6: movq   rax,xmm2
  003eb: test   rax,rax
  003ee: je     0xffff7739
  003f4: divsd  xmm6,xmm2
:00019 %6 = %2.call y()                     [Vec]
:00020 
  003f8: mov    rdi,QWORD PTR [rbp-0x38]
  003fc: test   rdi,0x7
  00403: jne    0x3b3ac
  00409: cmp    DWORD PTR [rdi+0x4],0x25
  0040d: jne    0x3b3ac
  00413: cmp    DWORD PTR [rip+0xffffffffffff9cd3],0x26        # 0xffffa0ed
  0041a: jne    0x3b3ac
  00420: mov    esi,DWORD PTR [rip+0xab7]        # 0xedd
  00426: cmp    esi,0xffffffff
  00429: je     0x3b3d5
  0042f: cmp    WORD PTR [rdi+0x2],0x3
  00434: jne    0x44d
  0043a: cmp    esi,0x6
  0043d: jge    0x44d
  00443: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00448: jmp    0x48f
  0044d: sub    rsp,0x20
  00451: movq   QWORD PTR [rsp],xmm2
  00456: movq   QWORD PTR [rsp+0x8],xmm3
  0045c: movq   QWORD PTR [rsp+0x10],xmm4
  00462: movq   QWORD PTR [rsp+0x18],xmm6
  00468: movabs rax,0x55573c900b50
  00472: call   rax
  00474: movq   xmm2,QWORD PTR [rsp]
  00479: movq   xmm3,QWORD PTR [rsp+0x8]
  0047f: movq   xmm4,QWORD PTR [rsp+0x10]
  00485: movq   xmm6,QWORD PTR [rsp+0x18]
  0048b: add    rsp,0x20
  0048f: mov    QWORD PTR [rbp-0x58],rax
:00022 %7 = dynvar(2, %5)
  00493: mov    rax,QWORD PTR [rbp-0x10]
  00497: mov    rax,QWORD PTR [rax]
  0049a: mov    rax,QWORD PTR [rax-0x40]
  0049e: mov    QWORD PTR [rbp-0x60],rax
:00023 %8 = dynvar(2, %5)
  004a2: mov    rax,QWORD PTR [rbp-0x10]
  004a6: mov    rax,QWORD PTR [rax]
  004a9: mov    rax,QWORD PTR [rax-0x40]
  004ad: mov    QWORD PTR [rbp-0x68],rax
:00024 %7 = %7 * %8                         [Float][Float]
  004b1: mov    rdi,QWORD PTR [rbp-0x60]
  004b5: test   rdi,0x1
  004bc: jne    0x3b434
  004c2: test   rdi,0x2
  004c9: je     0x505
  004cf: xorps  xmm2,xmm2
  004d2: movabs rax,0x8000000000000002
  004dc: cmp    rdi,rax
  004df: je     0x517
  004e5: mov    rax,rdi
  004e8: sar    rax,0x3f
  004ec: add    rax,0x2
  004f0: and    rdi,0xfffffffffffffffc
  004f4: or     rdi,rax
  004f7: rol    rdi,0x3d
  004fb: movq   xmm2,rdi
  00500: jmp    0x517
  00505: call   0xffff774d
  0050a: test   rax,rax
  0050d: je     0x3b434
  00513: movq   xmm2,xmm0
  00517: mov    rdi,QWORD PTR [rbp-0x68]
  0051b: test   rdi,0x1
  00522: jne    0x3b450
  00528: test   rdi,0x2
  0052f: je     0x56b
  00535: xorps  xmm3,xmm3
  00538: movabs rax,0x8000000000000002
  00542: cmp    rdi,rax
  00545: je     0x57d
  0054b: mov    rax,rdi
  0054e: sar    rax,0x3f
  00552: add    rax,0x2
  00556: and    rdi,0xfffffffffffffffc
  0055a: or     rdi,rax
  0055d: rol    rdi,0x3d
  00561: movq   xmm3,rdi
  00566: jmp    0x57d
  0056b: call   0xffff774d
  00570: test   rax,rax
  00573: je     0x3b450
  00579: movq   xmm3,xmm0
  0057d: mulsd  xmm2,xmm3
:00025 %4 = %6 / %7                         [Float][Float]
  00581: mov    rdi,QWORD PTR [rbp-0x58]
  00585: test   rdi,0x1
  0058c: jne    0x3b46c
  00592: test   rdi,0x2
  00599: je     0x5d5
  0059f: xorps  xmm5,xmm5
  005a2: movabs rax,0x8000000000000002
  005ac: cmp    rdi,rax
  005af: je     0x5e7
  005b5: mov    rax,rdi
  005b8: sar    rax,0x3f
  005bc: add    rax,0x2
  005c0: and    rdi,0xfffffffffffffffc
  005c4: or     rdi,rax
  005c7: rol    rdi,0x3d
  005cb: movq   xmm5,rdi
  005d0: jmp    0x5e7
  005d5: call   0xffff774d
  005da: test   rax,rax
  005dd: je     0x3b46c
  005e3: movq   xmm5,xmm0
  005e7: movq   xmm7,xmm5
  005eb: movq   rax,xmm2
  005f0: test   rax,rax
  005f3: je     0xffff7739
  005f9: divsd  xmm7,xmm2
:00026 %6 = %2.call z()                     [Vec]
:00027 
  005fd: mov    rdi,QWORD PTR [rbp-0x38]
  00601: test   rdi,0x7
  00608: jne    0x3b495
  0060e: cmp    DWORD PTR [rdi+0x4],0x25
  00612: jne    0x3b495
  00618: cmp    DWORD PTR [rip+0xffffffffffff9ace],0x26        # 0xffffa0ed
  0061f: jne    0x3b495
  00625: mov    esi,DWORD PTR [rip+0x8ba]        # 0xee5
  0062b: cmp    esi,0xffffffff
  0062e: je     0x3b4cb
  00634: cmp    WORD PTR [rdi+0x2],0x3
  00639: jne    0x652
  0063f: cmp    esi,0x6
  00642: jge    0x652
  00648: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0064d: jmp    0x6a0
  00652: sub    rsp,0x30
  00656: movq   QWORD PTR [rsp],xmm2
  0065b: movq   QWORD PTR [rsp+0x8],xmm3
  00661: movq   QWORD PTR [rsp+0x10],xmm4
  00667: movq   QWORD PTR [rsp+0x18],xmm6
  0066d: movq   QWORD PTR [rsp+0x20],xmm7
  00673: movabs rax,0x55573c900b50
  0067d: call   rax
  0067f: movq   xmm2,QWORD PTR [rsp]
  00684: movq   xmm3,QWORD PTR [rsp+0x8]
  0068a: movq   xmm4,QWORD PTR [rsp+0x10]
  00690: movq   xmm6,QWORD PTR [rsp+0x18]
  00696: movq   xmm7,QWORD PTR [rsp+0x20]
  0069c: add    rsp,0x30
  006a0: mov    QWORD PTR [rbp-0x58],rax
:00029 %7 = dynvar(2, %5)
  006a4: mov    rax,QWORD PTR [rbp-0x10]
  006a8: mov    rax,QWORD PTR [rax]
  006ab: mov    rax,QWORD PTR [rax-0x40]
  006af: mov    QWORD PTR [rbp-0x60],rax
:00030 %8 = dynvar(2, %5)
  006b3: mov    rax,QWORD PTR [rbp-0x10]
  006b7: mov    rax,QWORD PTR [rax]
  006ba: mov    rax,QWORD PTR [rax-0x40]
  006be: mov    QWORD PTR [rbp-0x68],rax
:00031 %7 = %7 * %8                         [Float][Float]
  006c2: mov    rdi,QWORD PTR [rbp-0x60]
  006c6: test   rdi,0x1
  006cd: jne    0x3b536
  006d3: test   rdi,0x2
  006da: je     0x716
  006e0: xorps  xmm2,xmm2
  006e3: movabs rax,0x8000000000000002
  006ed: cmp    rdi,rax
  006f0: je     0x728
  006f6: mov    rax,rdi
  006f9: sar    rax,0x3f
  006fd: add    rax,0x2
  00701: and    rdi,0xfffffffffffffffc
  00705: or     rdi,rax
  00708: rol    rdi,0x3d
  0070c: movq   xmm2,rdi
  00711: jmp    0x728
  00716: call   0xffff774d
  0071b: test   rax,rax
  0071e: je     0x3b536
  00724: movq   xmm2,xmm0
  00728: mov    rdi,QWORD PTR [rbp-0x68]
  0072c: test   rdi,0x1
  00733: jne    0x3b55f
  00739: test   rdi,0x2
  00740: je     0x77c
  00746: xorps  xmm3,xmm3
  00749: movabs rax,0x8000000000000002
  00753: cmp    rdi,rax
  00756: je     0x78e
  0075c: mov    rax,rdi
  0075f: sar    rax,0x3f
  00763: add    rax,0x2
  00767: and    rdi,0xfffffffffffffffc
  0076b: or     rdi,rax
  0076e: rol    rdi,0x3d
  00772: movq   xmm3,rdi
  00777: jmp    0x78e
  0077c: call   0xffff774d
  00781: test   rax,rax
  00784: je     0x3b55f
  0078a: movq   xmm3,xmm0
  0078e: mulsd  xmm2,xmm3
:00032 %5 = %6 / %7                         [Float][Float]
  00792: mov    rdi,QWORD PTR [rbp-0x58]
  00796: test   rdi,0x1
  0079d: jne    0x3b588
  007a3: test   rdi,0x2
  007aa: je     0x7e6
  007b0: xorps  xmm5,xmm5
  007b3: movabs rax,0x8000000000000002
  007bd: cmp    rdi,rax
  007c0: je     0x7f8
  007c6: mov    rax,rdi
  007c9: sar    rax,0x3f
  007cd: add    rax,0x2
  007d1: and    rdi,0xfffffffffffffffc
  007d5: or     rdi,rax
  007d8: rol    rdi,0x3d
  007dc: movq   xmm5,rdi
  007e1: jmp    0x7f8
  007e6: call   0xffff774d
  007eb: test   rax,rax
  007ee: je     0x3b588
  007f4: movq   xmm5,xmm0
  007f8: movq   xmm8,xmm5
  007fd: movq   rax,xmm2
  00802: test   rax,rax
  00805: je     0xffff7739
  0080b: divsd  xmm8,xmm2
:00033 %8 = %4
:00034 %7 = %0.call clamp(%8; 1)            [Scene]
:00035 
  00810: movq   xmm0,xmm7
  00814: call   0xffff7840
  00819: mov    QWORD PTR [rbp-0x68],rax
  0081d: mov    rdi,QWORD PTR [rbp-0x28]
  00821: cmp    DWORD PTR [rip+0xffffffffffff98c5],0x26        # 0xffffa0ed
  00828: jne    0x3b5be
  0082e: sub    rsp,0x30
  00832: movq   QWORD PTR [rsp],xmm4
  00837: movq   QWORD PTR [rsp+0x8],xmm5
  0083d: movq   QWORD PTR [rsp+0x10],xmm6
  00843: movq   QWORD PTR [rsp+0x18],xmm7
  00849: movq   QWORD PTR [rsp+0x20],xmm8
  00850: mov    rax,QWORD PTR [rbx]
  00853: lea    rdi,[rsp-0x18]
  00858: mov    QWORD PTR [rdi],rax
  0085b: mov    QWORD PTR [rbx],rdi
  0085e: mov    QWORD PTR [rsp-0x20],0x0
  00867: mov    QWORD PTR [rsp-0x38],rcx
  0086c: mov    rax,QWORD PTR [rbp-0x28]
  00870: mov    QWORD PTR [rsp-0x38],rax
  00875: mov    rdi,0x1
  0087c: mov    rax,QWORD PTR [rbp-0x68]
  00880: mov    QWORD PTR [rsp-0x40],rax
  00885: mov    QWORD PTR [rsp-0x30],0x0
  0088e: movabs rax,0x400000034
  00898: mov    QWORD PTR [rsp-0x28],rax
  0089d: movabs r13,0x55573cfe23d0
  008a7: call   0xffffc669
  008ac: lea    rdi,[rbp-0x8]
  008b0: mov    QWORD PTR [rbx],rdi
  008b3: movq   xmm4,QWORD PTR [rsp]
  008b8: movq   xmm5,QWORD PTR [rsp+0x8]
  008be: movq   xmm6,QWORD PTR [rsp+0x10]
  008c4: movq   xmm7,QWORD PTR [rsp+0x18]
  008ca: movq   xmm8,QWORD PTR [rsp+0x20]
  008d1: add    rsp,0x30
  008d5: movabs r13,0x55573cf94820
  008df: test   rax,rax
  008e2: je     0xffff7714
  008e8: mov    QWORD PTR [rbp-0x60],rax
:00037 %6 = %7.call chr()                   [Integer]
:00038 
  008ec: mov    rdi,QWORD PTR [rbp-0x60]
  008f0: test   rdi,0x1
  008f7: jne    0x914
  008fd: test   rdi,0x7
  00904: jne    0x3b5f5
  0090a: cmp    DWORD PTR [rdi+0x4],0x6
  0090e: jne    0x3b5f5
  00914: cmp    DWORD PTR [rip+0xffffffffffff97d2],0x26        # 0xffffa0ed
  0091b: jne    0x3b5f5
  00921: mov    r9,0x0
  00928: sub    rsp,0x20
  0092c: movq   QWORD PTR [rsp],xmm4
  00931: movq   QWORD PTR [rsp+0x8],xmm6
  00937: movq   QWORD PTR [rsp+0x10],xmm7
  0093d: movq   QWORD PTR [rsp+0x18],xmm8
  00944: mov    rdx,rdi
  00947: mov    rax,QWORD PTR [rbx]
  0094a: lea    rdi,[rsp-0x18]
  0094f: mov    QWORD PTR [rdi],rax
  00952: mov    QWORD PTR [rbx],rdi
  00955: mov    QWORD PTR [rsp-0x20],0x0
  0095e: mov    QWORD PTR [rsp-0x38],rcx
  00963: lea    rcx,[rbp-0x68]
  00967: mov    r8,0x0
  0096e: call   0x3b62c
  00973: lea    rdi,[rbp-0x8]
  00977: mov    QWORD PTR [rbx],rdi
  0097a: movq   xmm4,QWORD PTR [rsp]
  0097f: movq   xmm6,QWORD PTR [rsp+0x8]
  00985: movq   xmm7,QWORD PTR [rsp+0x10]
  0098b: movq   xmm8,QWORD PTR [rsp+0x18]
  00992: add    rsp,0x20
  00996: movabs r13,0x55573cf94850
  009a0: test   rax,rax
  009a3: je     0xffff7714
  009a9: mov    QWORD PTR [rbp-0x58],rax
:00040 _ = %0.call print(%6; 1)             [Scene]
:00041 
  009ad: mov    rdi,QWORD PTR [rbp-0x28]
  009b1: cmp    DWORD PTR [rip+0xffffffffffff9735],0x26        # 0xffffa0ed
  009b8: jne    0x3b65e
  009be: mov    r9,0x0
  009c5: sub    rsp,0x20
  009c9: movq   QWORD PTR [rsp],xmm4
  009ce: movq   QWORD PTR [rsp+0x8],xmm6
  009d4: movq   QWORD PTR [rsp+0x10],xmm7
  009da: movq   QWORD PTR [rsp+0x18],xmm8
  009e1: mov    rdx,rdi
  009e4: mov    rax,QWORD PTR [rbx]
  009e7: lea    rdi,[rsp-0x18]
  009ec: mov    QWORD PTR [rdi],rax
  009ef: mov    QWORD PTR [rbx],rdi
  009f2: mov    QWORD PTR [rsp-0x20],0x0
  009fb: mov    QWORD PTR [rsp-0x38],rcx
  00a00: lea    rcx,[rbp-0x58]
  00a04: mov    r8,0x1
  00a0b: call   0x3b695
  00a10: lea    rdi,[rbp-0x8]
  00a14: mov    QWORD PTR [rbx],rdi
  00a17: movq   xmm4,QWORD PTR [rsp]
  00a1c: movq   xmm6,QWORD PTR [rsp+0x8]
  00a22: movq   xmm7,QWORD PTR [rsp+0x10]
  00a28: movq   xmm8,QWORD PTR [rsp+0x18]
  00a2f: add    rsp,0x20
  00a33: movabs r13,0x55573cf94880
  00a3d: test   rax,rax
  00a40: je     0xffff7714
:00043 %8 = %3
:00044 %7 = %0.call clamp(%8; 1)            [Scene]
:00045 
  00a46: movq   xmm0,xmm6
  00a4a: call   0xffff7840
  00a4f: mov    QWORD PTR [rbp-0x68],rax
  00a53: mov    rdi,QWORD PTR [rbp-0x28]
  00a57: cmp    DWORD PTR [rip+0xffffffffffff968f],0x26        # 0xffffa0ed
  00a5e: jne    0x3b6c7
  00a64: sub    rsp,0x20
  00a68: movq   QWORD PTR [rsp],xmm4
  00a6d: movq   QWORD PTR [rsp+0x8],xmm6
  00a73: movq   QWORD PTR [rsp+0x10],xmm7
  00a79: movq   QWORD PTR [rsp+0x18],xmm8
  00a80: mov    rax,QWORD PTR [rbx]
  00a83: lea    rdi,[rsp-0x18]
  00a88: mov    QWORD PTR [rdi],rax
  00a8b: mov    QWORD PTR [rbx],rdi
  00a8e: mov    QWORD PTR [rsp-0x20],0x0
  00a97: mov    QWORD PTR [rsp-0x38],rcx
  00a9c: mov    rax,QWORD PTR [rbp-0x28]
  00aa0: mov    QWORD PTR [rsp-0x38],rax
  00aa5: mov    rdi,0x1
  00aac: mov    rax,QWORD PTR [rbp-0x68]
  00ab0: mov    QWORD PTR [rsp-0x40],rax
  00ab5: mov    QWORD PTR [rsp-0x30],0x0
  00abe: movabs rax,0x400000034
  00ac8: mov    QWORD PTR [rsp-0x28],rax
  00acd: movabs r13,0x55573cfe23d0
  00ad7: call   0xffffc669
  00adc: lea    rdi,[rbp-0x8]
  00ae0: mov    QWORD PTR [rbx],rdi
  00ae3: movq   xmm4,QWORD PTR [rsp]
  00ae8: movq   xmm6,QWORD PTR [rsp+0x8]
  00aee: movq   xmm7,QWORD PTR [rsp+0x10]
  00af4: movq   xmm8,QWORD PTR [rsp+0x18]
  00afb: add    rsp,0x20
  00aff: movabs r13,0x55573cf948c0
  00b09: test   rax,rax
  00b0c: je     0xffff7714
  00b12: mov    QWORD PTR [rbp-0x60],rax
:00047 %6 = %7.call chr()                   [Integer]
:00048 
  00b16: mov    rdi,QWORD PTR [rbp-0x60]
  00b1a: test   rdi,0x1
  00b21: jne    0xb3e
  00b27: test   rdi,0x7
  00b2e: jne    0x3b6fe
  00b34: cmp    DWORD PTR [rdi+0x4],0x6
  00b38: jne    0x3b6fe
  00b3e: cmp    DWORD PTR [rip+0xffffffffffff95a8],0x26        # 0xffffa0ed
  00b45: jne    0x3b6fe
  00b4b: mov    r9,0x0
  00b52: sub    rsp,0x20
  00b56: movq   QWORD PTR [rsp],xmm4
  00b5b: movq   QWORD PTR [rsp+0x8],xmm6
  00b61: movq   QWORD PTR [rsp+0x10],xmm7
  00b67: movq   QWORD PTR [rsp+0x18],xmm8
  00b6e: mov    rdx,rdi
  00b71: mov    rax,QWORD PTR [rbx]
  00b74: lea    rdi,[rsp-0x18]
  00b79: mov    QWORD PTR [rdi],rax
  00b7c: mov    QWORD PTR [rbx],rdi
  00b7f: mov    QWORD PTR [rsp-0x20],0x0
  00b88: mov    QWORD PTR [rsp-0x38],rcx
  00b8d: lea    rcx,[rbp-0x68]
  00b91: mov    r8,0x0
  00b98: call   0x3b735
  00b9d: lea    rdi,[rbp-0x8]
  00ba1: mov    QWORD PTR [rbx],rdi
  00ba4: movq   xmm4,QWORD PTR [rsp]
  00ba9: movq   xmm6,QWORD PTR [rsp+0x8]
  00baf: movq   xmm7,QWORD PTR [rsp+0x10]
  00bb5: movq   xmm8,QWORD PTR [rsp+0x18]
  00bbc: add    rsp,0x20
  00bc0: movabs r13,0x55573cf948f0
  00bca: test   rax,rax
  00bcd: je     0xffff7714
  00bd3: mov    QWORD PTR [rbp-0x58],rax
:00050 _ = %0.call print(%6; 1)             [Scene]
:00051 
  00bd7: mov    rdi,QWORD PTR [rbp-0x28]
  00bdb: cmp    DWORD PTR [rip+0xffffffffffff950b],0x26        # 0xffffa0ed
  00be2: jne    0x3b767
  00be8: mov    r9,0x0
  00bef: sub    rsp,0x20
  00bf3: movq   QWORD PTR [rsp],xmm4
  00bf8: movq   QWORD PTR [rsp+0x8],xmm6
  00bfe: movq   QWORD PTR [rsp+0x10],xmm7
  00c04: movq   QWORD PTR [rsp+0x18],xmm8
  00c0b: mov    rdx,rdi
  00c0e: mov    rax,QWORD PTR [rbx]
  00c11: lea    rdi,[rsp-0x18]
  00c16: mov    QWORD PTR [rdi],rax
  00c19: mov    QWORD PTR [rbx],rdi
  00c1c: mov    QWORD PTR [rsp-0x20],0x0
  00c25: mov    QWORD PTR [rsp-0x38],rcx
  00c2a: lea    rcx,[rbp-0x58]
  00c2e: mov    r8,0x1
  00c35: call   0x3b79e
  00c3a: lea    rdi,[rbp-0x8]
  00c3e: mov    QWORD PTR [rbx],rdi
  00c41: movq   xmm4,QWORD PTR [rsp]
  00c46: movq   xmm6,QWORD PTR [rsp+0x8]
  00c4c: movq   xmm7,QWORD PTR [rsp+0x10]
  00c52: movq   xmm8,QWORD PTR [rsp+0x18]
  00c59: add    rsp,0x20
  00c5d: movabs r13,0x55573cf94920
  00c67: test   rax,rax
  00c6a: je     0xffff7714
:00053 %9 = %5
:00054 %8 = %0.call clamp(%9; 1)            [Scene]
:00055 
  00c70: movq   xmm0,xmm8
  00c75: call   0xffff7840
  00c7a: mov    QWORD PTR [rbp-0x70],rax
  00c7e: mov    rdi,QWORD PTR [rbp-0x28]
  00c82: cmp    DWORD PTR [rip+0xffffffffffff9464],0x26        # 0xffffa0ed
  00c89: jne    0x3b7d0
  00c8f: sub    rsp,0x20
  00c93: movq   QWORD PTR [rsp],xmm6
  00c98: movq   QWORD PTR [rsp+0x8],xmm7
  00c9e: movq   QWORD PTR [rsp+0x10],xmm8
  00ca5: mov    rax,QWORD PTR [rbx]
  00ca8: lea    rdi,[rsp-0x18]
  00cad: mov    QWORD PTR [rdi],rax
  00cb0: mov    QWORD PTR [rbx],rdi
  00cb3: mov    QWORD PTR [rsp-0x20],0x0
  00cbc: mov    QWORD PTR [rsp-0x38],rcx
  00cc1: mov    rax,QWORD PTR [rbp-0x28]
  00cc5: mov    QWORD PTR [rsp-0x38],rax
  00cca: mov    rdi,0x1
  00cd1: mov    rax,QWORD PTR [rbp-0x70]
  00cd5: mov    QWORD PTR [rsp-0x40],rax
  00cda: mov    QWORD PTR [rsp-0x30],0x0
  00ce3: movabs rax,0x400000034
  00ced: mov    QWORD PTR [rsp-0x28],rax
  00cf2: movabs r13,0x55573cfe23d0
  00cfc: call   0xffffc669
  00d01: lea    rdi,[rbp-0x8]
  00d05: mov    QWORD PTR [rbx],rdi
  00d08: movq   xmm6,QWORD PTR [rsp]
  00d0d: movq   xmm7,QWORD PTR [rsp+0x8]
  00d13: movq   xmm8,QWORD PTR [rsp+0x10]
  00d1a: add    rsp,0x20
  00d1e: movabs r13,0x55573cf94960
  00d28: test   rax,rax
  00d2b: je     0xffff7714
  00d31: mov    QWORD PTR [rbp-0x68],rax
:00057 %7 = %8.call chr()                   [Integer]
:00058 
  00d35: mov    rdi,QWORD PTR [rbp-0x68]
  00d39: test   rdi,0x1
  00d40: jne    0xd5d
  00d46: test   rdi,0x7
  00d4d: jne    0x3b807
  00d53: cmp    DWORD PTR [rdi+0x4],0x6
  00d57: jne    0x3b807
  00d5d: cmp    DWORD PTR [rip+0xffffffffffff9389],0x26        # 0xffffa0ed
  00d64: jne    0x3b807
  00d6a: mov    r9,0x0
  00d71: sub    rsp,0x20
  00d75: movq   QWORD PTR [rsp],xmm6
  00d7a: movq   QWORD PTR [rsp+0x8],xmm7
  00d80: movq   QWORD PTR [rsp+0x10],xmm8
  00d87: mov    rdx,rdi
  00d8a: mov    rax,QWORD PTR [rbx]
  00d8d: lea    rdi,[rsp-0x18]
  00d92: mov    QWORD PTR [rdi],rax
  00d95: mov    QWORD PTR [rbx],rdi
  00d98: mov    QWORD PTR [rsp-0x20],0x0
  00da1: mov    QWORD PTR [rsp-0x38],rcx
  00da6: lea    rcx,[rbp-0x70]
  00daa: mov    r8,0x0
  00db1: call   0x3b83e
  00db6: lea    rdi,[rbp-0x8]
  00dba: mov    QWORD PTR [rbx],rdi
  00dbd: movq   xmm6,QWORD PTR [rsp]
  00dc2: movq   xmm7,QWORD PTR [rsp+0x8]
  00dc8: movq   xmm8,QWORD PTR [rsp+0x10]
  00dcf: add    rsp,0x20
  00dd3: movabs r13,0x55573cf94990
  00ddd: test   rax,rax
  00de0: je     0xffff7714
  00de6: mov    QWORD PTR [rbp-0x60],rax
:00060 %6 = %0.call print(%7; 1)            [Scene]
:00061 
  00dea: mov    rdi,QWORD PTR [rbp-0x28]
  00dee: cmp    DWORD PTR [rip+0xffffffffffff92f8],0x26        # 0xffffa0ed
  00df5: jne    0x3b870
  00dfb: mov    r9,0x0
  00e02: sub    rsp,0x20
  00e06: movq   QWORD PTR [rsp],xmm6
  00e0b: movq   QWORD PTR [rsp+0x8],xmm7
  00e11: movq   QWORD PTR [rsp+0x10],xmm8
  00e18: mov    rdx,rdi
  00e1b: mov    rax,QWORD PTR [rbx]
  00e1e: lea    rdi,[rsp-0x18]
  00e23: mov    QWORD PTR [rdi],rax
  00e26: mov    QWORD PTR [rbx],rdi
  00e29: mov    QWORD PTR [rsp-0x20],0x0
  00e32: mov    QWORD PTR [rsp-0x38],rcx
  00e37: lea    rcx,[rbp-0x60]
  00e3b: mov    r8,0x1
  00e42: call   0x3b8a7
  00e47: lea    rdi,[rbp-0x8]
  00e4b: mov    QWORD PTR [rbx],rdi
  00e4e: movq   xmm6,QWORD PTR [rsp]
  00e53: movq   xmm7,QWORD PTR [rsp+0x8]
  00e59: movq   xmm8,QWORD PTR [rsp+0x10]
  00e60: add    rsp,0x20
  00e64: movabs r13,0x55573cf949c0
  00e6e: test   rax,rax
  00e71: je     0xffff7714
  00e77: mov    QWORD PTR [rbp-0x58],rax
:00063 ret %6
  00e7b: mov    rax,QWORD PTR [rbp-0x58]
  00e7f: leave  
  00e80: ret    
==> start whole compile: <unnamed> FuncId(72) self_class:Scene start:[00000] bytecode:0x55573cf71480
<== finished compile. elapsed:20.1µs
offset:Pos(38928) code: 218 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    QWORD PTR [rbp-0x38],0x4
  00010: mov    QWORD PTR [rbp-0x40],0x4
  00018: mov    rdi,QWORD PTR [rbp-0x28]
  0001c: test   rdi,0x7
  00023: jne    0x3a9f0
  00029: cmp    DWORD PTR [rdi+0x4],0x2f
  0002d: jne    0x3a9f0
:00000 %2 = dynvar(1, %1)
  00033: mov    rax,QWORD PTR [rbp-0x10]
  00037: mov    rax,QWORD PTR [rax-0x20]
  0003b: mov    QWORD PTR [rbp-0x38],rax
:00001 %3 = literal[74]
  0003f: mov    rax,0x95
  00046: mov    QWORD PTR [rbp-0x40],rax
:00002 _ = %2.call times(&%3)               [Integer]
:00003 
  0004a: mov    rdi,QWORD PTR [rbp-0x38]
  0004e: test   rdi,0x1
  00055: jne    0x72
  0005b: test   rdi,0x7
  00062: jne    0x3a9ff
  00068: cmp    DWORD PTR [rdi+0x4],0x6
  0006c: jne    0x3a9ff
  00072: cmp    DWORD PTR [rip+0xffffffffffff918b],0x26        # 0xffff9204
  00079: jne    0x3a9ff
  0007f: mov    r9,QWORD PTR [rbp-0x40]
  00083: mov    rdx,rdi
  00086: mov    rax,QWORD PTR [rbx]
  00089: lea    rdi,[rsp-0x18]
  0008e: mov    QWORD PTR [rdi],rax
  00091: mov    QWORD PTR [rbx],rdi
  00094: mov    QWORD PTR [rsp-0x20],0x0
  0009d: mov    QWORD PTR [rsp-0x38],rcx
  000a2: lea    rcx,[rbp-0x48]
  000a6: mov    r8,0x0
  000ad: call   0x3aa0e
  000b2: lea    rdi,[rbp-0x8]
  000b6: mov    QWORD PTR [rbx],rdi
  000b9: movabs r13,0x55573cf714c0
  000c3: test   rax,rax
  000c6: je     0xffff682b
:00005 %2 = nil
  000cc: mov    QWORD PTR [rbp-0x38],0x4
:00006 ret %2
  000d4: mov    rax,QWORD PTR [rbp-0x38]
  000d8: leave  
  000d9: ret    
==> start whole compile: intersect FuncId(63) self_class:Sphere start:[00000] bytecode:0x55573cf976a0
<== finished compile. elapsed:121.9µs
offset:Pos(40195) code: 6471 bytes  data: 262 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004b: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00052:    	mov    rdi,QWORD PTR [rbp-0x28]
  00056: 00 	test   rdi,0x7
  0005d:    	jne    0x3a54d
  00063:    	cmp    DWORD PTR [rdi+0x4],0x27
  00067:    	jne    0x3a54d
:00000 %9 = %1.call org()                   [Ray]
:00001 
  0006d:    	mov    rdi,QWORD PTR [rbp-0x30]
  00071: 00 	test   rdi,0x7
  00078:    	jne    0x3a55c
  0007e:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00082:    	jne    0x3a55c
  00088: 26 	cmp    DWORD PTR [rip+0xffffffffffff8c82],0x26        # 0xffff8d11
  0008f:    	jne    0x3a55c
  00095:    	mov    esi,DWORD PTR [rip+0x18b0]        # 0x194b
  0009b:    	cmp    esi,0xffffffff
  0009e:    	je     0x3a56b
  000a4:    	cmp    WORD PTR [rdi+0x2],0x3
  000a9:    	jne    0xc2
  000af:    	cmp    esi,0x6
  000b2:    	jge    0xc2
  000b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000bd:    	jmp    0xce
  000c2: 57 	movabs rax,0x55573c900b50
  000cc:    	call   rax
  000ce:    	mov    QWORD PTR [rbp-0x70],rax
:00003 %10 = @center: Sphere[IvarId(0)]
  000d2:    	mov    rdi,QWORD PTR [rbp-0x28]
  000d6:    	cmp    WORD PTR [rdi+0x2],0x3
  000db:    	jne    0x3a594
  000e1:    	mov    rax,QWORD PTR [rdi+0x10]
  000e5:    	mov    QWORD PTR [rbp-0x78],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
:00005 
  000e9:    	mov    rdi,QWORD PTR [rbp-0x70]
  000ed: 00 	test   rdi,0x7
  000f4:    	jne    0x3a5aa
  000fa:    	cmp    DWORD PTR [rdi+0x4],0x25
  000fe:    	jne    0x3a5aa
  00104: 26 	cmp    DWORD PTR [rip+0xffffffffffff8c06],0x26        # 0xffff8d11
  0010b:    	jne    0x3a5aa
  00111:    	mov    rax,QWORD PTR [rbx]
  00114:    	lea    rdi,[rsp-0x18]
  00119:    	mov    QWORD PTR [rdi],rax
  0011c:    	mov    QWORD PTR [rbx],rdi
  0011f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00128:    	mov    QWORD PTR [rsp-0x38],rcx
  0012d:    	mov    rax,QWORD PTR [rbp-0x70]
  00131:    	mov    QWORD PTR [rsp-0x38],rax
  00136: 00 	mov    rdi,0x1
  0013d:    	mov    rax,QWORD PTR [rbp-0x78]
  00141:    	mov    QWORD PTR [rsp-0x40],rax
  00146: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0014f: 08 	movabs rax,0x800000039
  00159:    	mov    QWORD PTR [rsp-0x28],rax
  0015e: 57 	movabs r13,0x55573cf9efb0
  00168:    	call   0xffff9970
  0016d:    	lea    rdi,[rbp-0x8]
  00171:    	mov    QWORD PTR [rbx],rdi
  00174: 57 	movabs r13,0x55573cf97700
  0017e:    	test   rax,rax
  00181:    	je     0xffff6338
  00187:    	mov    QWORD PTR [rbp-0x40],rax
:00007 %9 = %1.call dir()                   [Ray]
:00008 
  0018b:    	mov    rdi,QWORD PTR [rbp-0x30]
  0018f: 00 	test   rdi,0x7
  00196:    	jne    0x3a5b9
  0019c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  001a0:    	jne    0x3a5b9
  001a6: 26 	cmp    DWORD PTR [rip+0xffffffffffff8b64],0x26        # 0xffff8d11
  001ad:    	jne    0x3a5b9
  001b3:    	mov    esi,DWORD PTR [rip+0x179a]        # 0x1953
  001b9:    	cmp    esi,0xffffffff
  001bc:    	je     0x3a5c8
  001c2:    	cmp    WORD PTR [rdi+0x2],0x3
  001c7:    	jne    0x1e0
  001cd:    	cmp    esi,0x6
  001d0:    	jge    0x1e0
  001d6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001db:    	jmp    0x1ec
  001e0: 57 	movabs rax,0x55573c900b50
  001ea:    	call   rax
  001ec:    	mov    QWORD PTR [rbp-0x70],rax
:00010 %4 = %3.call vdot(%9; 1)             [Vec]
:00011 
  001f0:    	mov    rdi,QWORD PTR [rbp-0x40]
  001f4: 00 	test   rdi,0x7
  001fb:    	jne    0x3a5f1
  00201:    	cmp    DWORD PTR [rdi+0x4],0x25
  00205:    	jne    0x3a5f1
  0020b: 26 	cmp    DWORD PTR [rip+0xffffffffffff8aff],0x26        # 0xffff8d11
  00212:    	jne    0x3a5f1
  00218:    	mov    rax,QWORD PTR [rbx]
  0021b:    	lea    rdi,[rsp-0x18]
  00220:    	mov    QWORD PTR [rdi],rax
  00223:    	mov    QWORD PTR [rbx],rdi
  00226: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0022f:    	mov    QWORD PTR [rsp-0x38],rcx
  00234:    	mov    rax,QWORD PTR [rbp-0x40]
  00238:    	mov    QWORD PTR [rsp-0x38],rax
  0023d: 00 	mov    rdi,0x1
  00244:    	mov    rax,QWORD PTR [rbp-0x70]
  00248:    	mov    QWORD PTR [rsp-0x40],rax
  0024d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00256: 05 	movabs rax,0x50000003b
  00260:    	mov    QWORD PTR [rsp-0x28],rax
  00265: 57 	movabs r13,0x55573cfe1010
  0026f:    	call   0xffff9a02
  00274:    	lea    rdi,[rbp-0x8]
  00278:    	mov    QWORD PTR [rbx],rdi
  0027b: 57 	movabs r13,0x55573cf97760
  00285:    	test   rax,rax
  00288:    	je     0xffff6338
  0028e:    	mov    QWORD PTR [rbp-0x48],rax
:00013 %10 = %3
  00292:    	mov    rax,QWORD PTR [rbp-0x40]
  00296:    	mov    QWORD PTR [rbp-0x78],rax
:00014 %9 = %3.call vdot(%10; 1)            [Vec]
:00015 
  0029a:    	mov    rdi,QWORD PTR [rbp-0x40]
  0029e: 00 	test   rdi,0x7
  002a5:    	jne    0x3a600
  002ab:    	cmp    DWORD PTR [rdi+0x4],0x25
  002af:    	jne    0x3a600
  002b5: 26 	cmp    DWORD PTR [rip+0xffffffffffff8a55],0x26        # 0xffff8d11
  002bc:    	jne    0x3a600
  002c2:    	mov    rax,QWORD PTR [rbx]
  002c5:    	lea    rdi,[rsp-0x18]
  002ca:    	mov    QWORD PTR [rdi],rax
  002cd:    	mov    QWORD PTR [rbx],rdi
  002d0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  002d9:    	mov    QWORD PTR [rsp-0x38],rcx
  002de:    	mov    rax,QWORD PTR [rbp-0x40]
  002e2:    	mov    QWORD PTR [rsp-0x38],rax
  002e7: 00 	mov    rdi,0x1
  002ee:    	mov    rax,QWORD PTR [rbp-0x78]
  002f2:    	mov    QWORD PTR [rsp-0x40],rax
  002f7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00300: 05 	movabs rax,0x50000003b
  0030a:    	mov    QWORD PTR [rsp-0x28],rax
  0030f: 57 	movabs r13,0x55573cfe1010
  00319:    	call   0xffff9a02
  0031e:    	lea    rdi,[rbp-0x8]
  00322:    	mov    QWORD PTR [rbx],rdi
  00325: 57 	movabs r13,0x55573cf977a0
  0032f:    	test   rax,rax
  00332:    	je     0xffff6338
  00338:    	mov    QWORD PTR [rbp-0x70],rax
:00017 %10 = @radius: Sphere[IvarId(1)]
  0033c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00340:    	cmp    WORD PTR [rdi+0x2],0x3
  00345:    	jne    0x3a60f
  0034b:    	mov    rax,QWORD PTR [rdi+0x18]
  0034f:    	mov    QWORD PTR [rbp-0x78],rax
:00018 %11 = @radius: Sphere[IvarId(1)]
  00353:    	mov    rdi,QWORD PTR [rbp-0x28]
  00357:    	cmp    WORD PTR [rdi+0x2],0x3
  0035c:    	jne    0x3a625
  00362:    	mov    rax,QWORD PTR [rdi+0x18]
  00366:    	mov    QWORD PTR [rbp-0x80],rax
:00019 %10 = %10 * %11                      [Float][Float]
  0036a:    	mov    rdi,QWORD PTR [rbp-0x78]
  0036e: 00 	test   rdi,0x1
  00375:    	jne    0x3a63b
  0037b: 00 	test   rdi,0x2
  00382:    	je     0x3be
  00388:    	xorps  xmm2,xmm2
  0038b: 00 	movabs rax,0x8000000000000002
  00395:    	cmp    rdi,rax
  00398:    	je     0x3d0
  0039e:    	mov    rax,rdi
  003a1:    	sar    rax,0x3f
  003a5:    	add    rax,0x2
  003a9:    	and    rdi,0xfffffffffffffffc
  003ad:    	or     rdi,rax
  003b0:    	rol    rdi,0x3d
  003b4:    	movq   xmm2,rdi
  003b9:    	jmp    0x3d0
  003be:    	call   0xffff6371
  003c3:    	test   rax,rax
  003c6:    	je     0x3a63b
  003cc:    	movq   xmm2,xmm0
  003d0:    	mov    rdi,QWORD PTR [rbp-0x80]
  003d4: 00 	test   rdi,0x1
  003db:    	jne    0x3a64a
  003e1: 00 	test   rdi,0x2
  003e8:    	je     0x424
  003ee:    	xorps  xmm3,xmm3
  003f1: 00 	movabs rax,0x8000000000000002
  003fb:    	cmp    rdi,rax
  003fe:    	je     0x436
  00404:    	mov    rax,rdi
  00407:    	sar    rax,0x3f
  0040b:    	add    rax,0x2
  0040f:    	and    rdi,0xfffffffffffffffc
  00413:    	or     rdi,rax
  00416:    	rol    rdi,0x3d
  0041a:    	movq   xmm3,rdi
  0041f:    	jmp    0x436
  00424:    	call   0xffff6371
  00429:    	test   rax,rax
  0042c:    	je     0x3a64a
  00432:    	movq   xmm3,xmm0
  00436:    	mulsd  xmm2,xmm3
:00020 %5 = %9 - %10                        [Float][Float]
  0043a:    	mov    rdi,QWORD PTR [rbp-0x70]
  0043e: 00 	test   rdi,0x1
  00445:    	jne    0x3a659
  0044b: 00 	test   rdi,0x2
  00452:    	je     0x48e
  00458:    	xorps  xmm4,xmm4
  0045b: 00 	movabs rax,0x8000000000000002
  00465:    	cmp    rdi,rax
  00468:    	je     0x4a0
  0046e:    	mov    rax,rdi
  00471:    	sar    rax,0x3f
  00475:    	add    rax,0x2
  00479:    	and    rdi,0xfffffffffffffffc
  0047d:    	or     rdi,rax
  00480:    	rol    rdi,0x3d
  00484:    	movq   xmm4,rdi
  00489:    	jmp    0x4a0
  0048e:    	call   0xffff6371
  00493:    	test   rax,rax
  00496:    	je     0x3a659
  0049c:    	movq   xmm4,xmm0
  004a0:    	movq   xmm5,xmm4
  004a4:    	subsd  xmm5,xmm2
:00021 %9 = %4 * %4                         [Float][Float]
  004a8:    	mov    rdi,QWORD PTR [rbp-0x48]
  004ac: 00 	test   rdi,0x1
  004b3:    	jne    0x3a675
  004b9: 00 	test   rdi,0x2
  004c0:    	je     0x4fc
  004c6:    	xorps  xmm6,xmm6
  004c9: 00 	movabs rax,0x8000000000000002
  004d3:    	cmp    rdi,rax
  004d6:    	je     0x50e
  004dc:    	mov    rax,rdi
  004df:    	sar    rax,0x3f
  004e3:    	add    rax,0x2
  004e7:    	and    rdi,0xfffffffffffffffc
  004eb:    	or     rdi,rax
  004ee:    	rol    rdi,0x3d
  004f2:    	movq   xmm6,rdi
  004f7:    	jmp    0x50e
  004fc:    	call   0xffff6371
  00501:    	test   rax,rax
  00504:    	je     0x3a675
  0050a:    	movq   xmm6,xmm0
  0050e:    	movq   xmm4,xmm6
  00512:    	mulsd  xmm4,xmm6
:00022 %6 = %9 - %5                         [Float][Float]
  00516:    	movq   xmm7,xmm4
  0051a:    	subsd  xmm7,xmm5
:00023 %9 = literal[0.0]
  0051e: 00 	movq   xmm4,QWORD PTR [rip+0x1437]        # 0x195d
:00024 _%9 = %6 > %9                        [Float][Float]
:00025 condnotbr _%9 =>:00113
  00526:    	ucomisd xmm7,xmm4
  0052a:    	jbe    0x3b860
:00026 %9 = %4
:00027 %9 = neg %9                          [Float]
  00530:    	movq   xmm4,xmm6
  00534: 00 	xorps  xmm4,XMMWORD PTR [rip+0x1432]        # 0x196d
:00028 %11 = const[Math]                    [Math]
  0053b: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff87db]        # 0xffff8d1d
  00542: 00 	cmp    rax,QWORD PTR [rip+0x1444]        # 0x198d
  00549:    	jne    0x3a69e
  0054f: 00 	mov    rax,QWORD PTR [rip+0x1427]        # 0x197d
  00556:    	mov    QWORD PTR [rbp-0x80],rax
:00029 %12 = %6
:00030 %10 = %11.call sqrt(%12; 1)          [#<Class:Math>]
:00031 
  0055a:    	mov    rdi,QWORD PTR [rbp-0x80]
  0055e: 00 	test   rdi,0x7
  00565:    	jne    0x3a726
  0056b:    	cmp    DWORD PTR [rdi+0x4],0x20
  0056f:    	jne    0x3a726
  00575: 26 	cmp    DWORD PTR [rip+0xffffffffffff8795],0x26        # 0xffff8d11
  0057c:    	jne    0x3a726
  00582:    	sqrtsd xmm2,xmm7
:00033 %7 = %9 - %10                        [Float][Float]
  00586:    	movq   xmm3,xmm4
  0058a:    	subsd  xmm3,xmm2
:00034 %10 = literal[0.0]
  0058e: 00 	movq   xmm2,QWORD PTR [rip+0x1407]        # 0x199d
:00035 %9 = %7 > %10                        [Float][Float]
  00596:    	xor    rax,rax
  00599:    	ucomisd xmm3,xmm2
  0059d:    	seta   al
  005a1:    	shl    rax,0x3
  005a5:    	or     rax,0x14
  005a9:    	mov    QWORD PTR [rbp-0x70],rax
:00036 condnotbr %9 =>:00041
  005ad:    	mov    rax,QWORD PTR [rbp-0x70]
  005b1:    	or     rax,0x10
  005b5:    	cmp    rax,0x14
  005b9:    	je     0x3a83c
:00037 %10 = %2.call t()                    [Isect]
:00038 
  005bf:    	mov    rdi,QWORD PTR [rbp-0x38]
  005c3: 00 	test   rdi,0x7
  005ca:    	jne    0x3a763
  005d0:    	cmp    DWORD PTR [rdi+0x4],0x2d
  005d4:    	jne    0x3a763
  005da: 26 	cmp    DWORD PTR [rip+0xffffffffffff8730],0x26        # 0xffff8d11
  005e1:    	jne    0x3a763
  005e7:    	mov    esi,DWORD PTR [rip+0x13bc]        # 0x19a9
  005ed:    	cmp    esi,0xffffffff
  005f0:    	je     0x3a7a0
  005f6:    	cmp    WORD PTR [rdi+0x2],0x3
  005fb:    	jne    0x614
  00601:    	cmp    esi,0x6
  00604:    	jge    0x614
  0060a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0060f:    	jmp    0x656
  00614:    	sub    rsp,0x20
  00618:    	movq   QWORD PTR [rsp],xmm3
  0061d:    	movq   QWORD PTR [rsp+0x8],xmm5
  00623:    	movq   QWORD PTR [rsp+0x10],xmm6
  00629:    	movq   QWORD PTR [rsp+0x18],xmm7
  0062f: 57 	movabs rax,0x55573c900b50
  00639:    	call   rax
  0063b:    	movq   xmm3,QWORD PTR [rsp]
  00640:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00646:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0064c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00652:    	add    rsp,0x20
  00656:    	mov    QWORD PTR [rbp-0x78],rax
:00040 %9 = %7 < %10                        [Float][Float]
  0065a:    	mov    rdi,QWORD PTR [rbp-0x78]
  0065e: 00 	test   rdi,0x1
  00665:    	jne    0x3a7ff
  0066b: 00 	test   rdi,0x2
  00672:    	je     0x6ae
  00678:    	xorps  xmm2,xmm2
  0067b: 00 	movabs rax,0x8000000000000002
  00685:    	cmp    rdi,rax
  00688:    	je     0x6c0
  0068e:    	mov    rax,rdi
  00691:    	sar    rax,0x3f
  00695:    	add    rax,0x2
  00699:    	and    rdi,0xfffffffffffffffc
  0069d:    	or     rdi,rax
  006a0:    	rol    rdi,0x3d
  006a4:    	movq   xmm2,rdi
  006a9:    	jmp    0x6c0
  006ae:    	call   0xffff6371
  006b3:    	test   rax,rax
  006b6:    	je     0x3a7ff
  006bc:    	movq   xmm2,xmm0
  006c0:    	xor    rax,rax
  006c3:    	ucomisd xmm3,xmm2
  006c7:    	setb   al
  006cb:    	shl    rax,0x3
  006cf:    	or     rax,0x14
  006d3:    	mov    QWORD PTR [rbp-0x70],rax
  006d7:    	jmp    0x3a890
:00041 condnotbr %9 =>:00112
  006dc:    	mov    rax,QWORD PTR [rbp-0x70]
  006e0:    	or     rax,0x10
  006e4:    	cmp    rax,0x14
  006e8:    	je     0x3b7be
:00042 _ = %2.call t=(%7; 1)                [Isect]
:00043 
  006ee:    	movq   xmm0,xmm3
  006f2:    	call   0xffff6464
  006f7:    	mov    QWORD PTR [rbp-0x60],rax
  006fb:    	mov    rdi,QWORD PTR [rbp-0x38]
  006ff: 00 	test   rdi,0x7
  00706:    	jne    0x3a8d7
  0070c:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00710:    	jne    0x3a8d7
  00716: 26 	cmp    DWORD PTR [rip+0xffffffffffff85f4],0x26        # 0xffff8d11
  0071d:    	jne    0x3a8d7
  00723:    	mov    esi,DWORD PTR [rip+0x1288]        # 0x19b1
  00729:    	cmp    esi,0xffffffff
  0072c:    	je     0x3a907
  00732:    	cmp    WORD PTR [rdi+0x2],0x3
  00737:    	jne    0x754
  0073d:    	cmp    esi,0x6
  00740:    	jge    0x754
  00746:    	mov    rax,QWORD PTR [rbp-0x60]
  0074a:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0074f:    	jmp    0x7b9
  00754:    	sub    rsp,0x30
  00758:    	movq   QWORD PTR [rsp],xmm2
  0075d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00763:    	movq   QWORD PTR [rsp+0x10],xmm5
  00769:    	movq   QWORD PTR [rsp+0x18],xmm6
  0076f:    	movq   QWORD PTR [rsp+0x20],xmm7
  00775:    	mov    rdx,QWORD PTR [rbp-0x60]
  00779: 57 	movabs rax,0x55573c900dd0
  00783:    	call   rax
  00785:    	movq   xmm2,QWORD PTR [rsp]
  0078a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00790:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00796:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0079c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007a2:    	add    rsp,0x30
  007a6: 57 	movabs r13,0x55573cf97960
  007b0:    	test   rax,rax
  007b3:    	je     0xffff6338
:00045 %9 = literal[true]
  007b9: 00 	mov    rax,0x1c
  007c0:    	mov    QWORD PTR [rbp-0x70],rax
:00046 _ = %2.call hit=(%9; 1)              [Isect]
:00047 
  007c4:    	mov    rdi,QWORD PTR [rbp-0x38]
  007c8: 00 	test   rdi,0x7
  007cf:    	jne    0x3a979
  007d5:    	cmp    DWORD PTR [rdi+0x4],0x2d
  007d9:    	jne    0x3a979
  007df: 26 	cmp    DWORD PTR [rip+0xffffffffffff852b],0x26        # 0xffff8d11
  007e6:    	jne    0x3a979
  007ec:    	mov    esi,DWORD PTR [rip+0x11c7]        # 0x19b9
  007f2:    	cmp    esi,0xffffffff
  007f5:    	je     0x3a9a9
  007fb:    	cmp    WORD PTR [rdi+0x2],0x3
  00800:    	jne    0x81d
  00806:    	cmp    esi,0x6
  00809:    	jge    0x81d
  0080f:    	mov    rax,QWORD PTR [rbp-0x70]
  00813:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00818:    	jmp    0x882
  0081d:    	sub    rsp,0x30
  00821:    	movq   QWORD PTR [rsp],xmm2
  00826:    	movq   QWORD PTR [rsp+0x8],xmm3
  0082c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00832:    	movq   QWORD PTR [rsp+0x18],xmm6
  00838:    	movq   QWORD PTR [rsp+0x20],xmm7
  0083e:    	mov    rdx,QWORD PTR [rbp-0x70]
  00842: 57 	movabs rax,0x55573c900dd0
  0084c:    	call   rax
  0084e:    	movq   xmm2,QWORD PTR [rsp]
  00853:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00859:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0085f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00865:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0086b:    	add    rsp,0x30
  0086f: 57 	movabs r13,0x55573cf979a0
  00879:    	test   rax,rax
  0087c:    	je     0xffff6338
:00049 %10 = const[Vec]                     [Vec]
  00882: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff8494]        # 0xffff8d1d
  00889: 00 	cmp    rax,QWORD PTR [rip+0x113d]        # 0x19cd
  00890:    	jne    0x3aa1b
  00896: 00 	mov    rax,QWORD PTR [rip+0x1120]        # 0x19bd
  0089d:    	mov    QWORD PTR [rbp-0x78],rax
:00050 %12 = %1.call org()                  [Ray]
:00051 
  008a1:    	mov    rdi,QWORD PTR [rbp-0x30]
  008a5: 00 	test   rdi,0x7
  008ac:    	jne    0x3aa97
  008b2:    	cmp    DWORD PTR [rdi+0x4],0x2b
  008b6:    	jne    0x3aa97
  008bc: 26 	cmp    DWORD PTR [rip+0xffffffffffff844e],0x26        # 0xffff8d11
  008c3:    	jne    0x3aa97
  008c9:    	mov    esi,DWORD PTR [rip+0x110a]        # 0x19d9
  008cf:    	cmp    esi,0xffffffff
  008d2:    	je     0x3aac0
  008d8:    	cmp    WORD PTR [rdi+0x2],0x3
  008dd:    	jne    0x8f6
  008e3:    	cmp    esi,0x6
  008e6:    	jge    0x8f6
  008ec:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  008f1:    	jmp    0x938
  008f6:    	sub    rsp,0x20
  008fa:    	movq   QWORD PTR [rsp],xmm3
  008ff:    	movq   QWORD PTR [rsp+0x8],xmm5
  00905:    	movq   QWORD PTR [rsp+0x10],xmm6
  0090b:    	movq   QWORD PTR [rsp+0x18],xmm7
  00911: 57 	movabs rax,0x55573c900b50
  0091b:    	call   rax
  0091d:    	movq   xmm3,QWORD PTR [rsp]
  00922:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00928:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0092e:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00934:    	add    rsp,0x20
  00938: ff 	mov    QWORD PTR [rbp-0x88],rax
:00053 %11 = %12.call x()                   [Vec]
:00054 
  0093f: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00946: 00 	test   rdi,0x7
  0094d:    	jne    0x3ab1f
  00953:    	cmp    DWORD PTR [rdi+0x4],0x25
  00957:    	jne    0x3ab1f
  0095d: 26 	cmp    DWORD PTR [rip+0xffffffffffff83ad],0x26        # 0xffff8d11
  00964:    	jne    0x3ab1f
  0096a:    	mov    esi,DWORD PTR [rip+0x1071]        # 0x19e1
  00970:    	cmp    esi,0xffffffff
  00973:    	je     0x3ab48
  00979:    	cmp    WORD PTR [rdi+0x2],0x3
  0097e:    	jne    0x997
  00984:    	cmp    esi,0x6
  00987:    	jge    0x997
  0098d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00992:    	jmp    0x9d9
  00997:    	sub    rsp,0x20
  0099b:    	movq   QWORD PTR [rsp],xmm3
  009a0:    	movq   QWORD PTR [rsp+0x8],xmm5
  009a6:    	movq   QWORD PTR [rsp+0x10],xmm6
  009ac:    	movq   QWORD PTR [rsp+0x18],xmm7
  009b2: 57 	movabs rax,0x55573c900b50
  009bc:    	call   rax
  009be:    	movq   xmm3,QWORD PTR [rsp]
  009c3:    	movq   xmm5,QWORD PTR [rsp+0x8]
  009c9:    	movq   xmm6,QWORD PTR [rsp+0x10]
  009cf:    	movq   xmm7,QWORD PTR [rsp+0x18]
  009d5:    	add    rsp,0x20
  009d9:    	mov    QWORD PTR [rbp-0x80],rax
:00056 %13 = %1.call dir()                  [Ray]
:00057 
  009dd:    	mov    rdi,QWORD PTR [rbp-0x30]
  009e1: 00 	test   rdi,0x7
  009e8:    	jne    0x3aba7
  009ee:    	cmp    DWORD PTR [rdi+0x4],0x2b
  009f2:    	jne    0x3aba7
  009f8: 26 	cmp    DWORD PTR [rip+0xffffffffffff8312],0x26        # 0xffff8d11
  009ff:    	jne    0x3aba7
  00a05:    	mov    esi,DWORD PTR [rip+0xfde]        # 0x19e9
  00a0b:    	cmp    esi,0xffffffff
  00a0e:    	je     0x3abd0
  00a14:    	cmp    WORD PTR [rdi+0x2],0x3
  00a19:    	jne    0xa32
  00a1f:    	cmp    esi,0x6
  00a22:    	jge    0xa32
  00a28:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a2d:    	jmp    0xa74
  00a32:    	sub    rsp,0x20
  00a36:    	movq   QWORD PTR [rsp],xmm3
  00a3b:    	movq   QWORD PTR [rsp+0x8],xmm5
  00a41:    	movq   QWORD PTR [rsp+0x10],xmm6
  00a47:    	movq   QWORD PTR [rsp+0x18],xmm7
  00a4d: 57 	movabs rax,0x55573c900b50
  00a57:    	call   rax
  00a59:    	movq   xmm3,QWORD PTR [rsp]
  00a5e:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00a64:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00a6a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00a70:    	add    rsp,0x20
  00a74: ff 	mov    QWORD PTR [rbp-0x90],rax
:00059 %12 = %13.call x()                   [Vec]
:00060 
  00a7b: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00a82: 00 	test   rdi,0x7
  00a89:    	jne    0x3ac2f
  00a8f:    	cmp    DWORD PTR [rdi+0x4],0x25
  00a93:    	jne    0x3ac2f
  00a99: 26 	cmp    DWORD PTR [rip+0xffffffffffff8271],0x26        # 0xffff8d11
  00aa0:    	jne    0x3ac2f
  00aa6:    	mov    esi,DWORD PTR [rip+0xf45]        # 0x19f1
  00aac:    	cmp    esi,0xffffffff
  00aaf:    	je     0x3ac58
  00ab5:    	cmp    WORD PTR [rdi+0x2],0x3
  00aba:    	jne    0xad3
  00ac0:    	cmp    esi,0x6
  00ac3:    	jge    0xad3
  00ac9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ace:    	jmp    0xb15
  00ad3:    	sub    rsp,0x20
  00ad7:    	movq   QWORD PTR [rsp],xmm3
  00adc:    	movq   QWORD PTR [rsp+0x8],xmm5
  00ae2:    	movq   QWORD PTR [rsp+0x10],xmm6
  00ae8:    	movq   QWORD PTR [rsp+0x18],xmm7
  00aee: 57 	movabs rax,0x55573c900b50
  00af8:    	call   rax
  00afa:    	movq   xmm3,QWORD PTR [rsp]
  00aff:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b05:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00b0b:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b11:    	add    rsp,0x20
  00b15: ff 	mov    QWORD PTR [rbp-0x88],rax
:00062 %12 = %12 * %7                       [Float][Float]
  00b1c: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00b23: 00 	test   rdi,0x1
  00b2a:    	jne    0x3acb7
  00b30: 00 	test   rdi,0x2
  00b37:    	je     0xb73
  00b3d:    	xorps  xmm2,xmm2
  00b40: 00 	movabs rax,0x8000000000000002
  00b4a:    	cmp    rdi,rax
  00b4d:    	je     0xb85
  00b53:    	mov    rax,rdi
  00b56:    	sar    rax,0x3f
  00b5a:    	add    rax,0x2
  00b5e:    	and    rdi,0xfffffffffffffffc
  00b62:    	or     rdi,rax
  00b65:    	rol    rdi,0x3d
  00b69:    	movq   xmm2,rdi
  00b6e:    	jmp    0xb85
  00b73:    	call   0xffff6371
  00b78:    	test   rax,rax
  00b7b:    	je     0x3acb7
  00b81:    	movq   xmm2,xmm0
  00b85:    	mulsd  xmm2,xmm3
:00063 %11 = %11 + %12                      [Float][Float]
  00b89:    	mov    rdi,QWORD PTR [rbp-0x80]
  00b8d: 00 	test   rdi,0x1
  00b94:    	jne    0x3ace0
  00b9a: 00 	test   rdi,0x2
  00ba1:    	je     0xbdd
  00ba7:    	xorps  xmm4,xmm4
  00baa: 00 	movabs rax,0x8000000000000002
  00bb4:    	cmp    rdi,rax
  00bb7:    	je     0xbef
  00bbd:    	mov    rax,rdi
  00bc0:    	sar    rax,0x3f
  00bc4:    	add    rax,0x2
  00bc8:    	and    rdi,0xfffffffffffffffc
  00bcc:    	or     rdi,rax
  00bcf:    	rol    rdi,0x3d
  00bd3:    	movq   xmm4,rdi
  00bd8:    	jmp    0xbef
  00bdd:    	call   0xffff6371
  00be2:    	test   rax,rax
  00be5:    	je     0x3ace0
  00beb:    	movq   xmm4,xmm0
  00bef:    	addsd  xmm4,xmm2
:00064 %13 = %1.call org()                  [Ray]
:00065 
  00bf3:    	mov    rdi,QWORD PTR [rbp-0x30]
  00bf7: 00 	test   rdi,0x7
  00bfe:    	jne    0x3ad19
  00c04:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00c08:    	jne    0x3ad19
  00c0e: 26 	cmp    DWORD PTR [rip+0xffffffffffff80fc],0x26        # 0xffff8d11
  00c15:    	jne    0x3ad19
  00c1b:    	mov    esi,DWORD PTR [rip+0xdd8]        # 0x19f9
  00c21:    	cmp    esi,0xffffffff
  00c24:    	je     0x3ad5f
  00c2a:    	cmp    WORD PTR [rdi+0x2],0x3
  00c2f:    	jne    0xc48
  00c35:    	cmp    esi,0x6
  00c38:    	jge    0xc48
  00c3e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c43:    	jmp    0xca2
  00c48:    	sub    rsp,0x30
  00c4c:    	movq   QWORD PTR [rsp],xmm2
  00c51:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c57:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c5d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c63:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c69:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c6f: 57 	movabs rax,0x55573c900b50
  00c79:    	call   rax
  00c7b:    	movq   xmm2,QWORD PTR [rsp]
  00c80:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c86:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c8c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c92:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00c98:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00c9e:    	add    rsp,0x30
  00ca2: ff 	mov    QWORD PTR [rbp-0x90],rax
:00067 %12 = %13.call y()                   [Vec]
:00068 
  00ca9: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00cb0: 00 	test   rdi,0x7
  00cb7:    	jne    0x3add6
  00cbd:    	cmp    DWORD PTR [rdi+0x4],0x25
  00cc1:    	jne    0x3add6
  00cc7: 26 	cmp    DWORD PTR [rip+0xffffffffffff8043],0x26        # 0xffff8d11
  00cce:    	jne    0x3add6
  00cd4:    	mov    esi,DWORD PTR [rip+0xd27]        # 0x1a01
  00cda:    	cmp    esi,0xffffffff
  00cdd:    	je     0x3ae0c
  00ce3:    	cmp    WORD PTR [rdi+0x2],0x3
  00ce8:    	jne    0xd01
  00cee:    	cmp    esi,0x6
  00cf1:    	jge    0xd01
  00cf7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00cfc:    	jmp    0xd4f
  00d01:    	sub    rsp,0x30
  00d05:    	movq   QWORD PTR [rsp],xmm3
  00d0a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d10:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d16:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d1c:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d22: 57 	movabs rax,0x55573c900b50
  00d2c:    	call   rax
  00d2e:    	movq   xmm3,QWORD PTR [rsp]
  00d33:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d39:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d3f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d45:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d4b:    	add    rsp,0x30
  00d4f: ff 	mov    QWORD PTR [rbp-0x88],rax
:00070 %14 = %1.call dir()                  [Ray]
:00071 
  00d56:    	mov    rdi,QWORD PTR [rbp-0x30]
  00d5a: 00 	test   rdi,0x7
  00d61:    	jne    0x3ae77
  00d67:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00d6b:    	jne    0x3ae77
  00d71: 26 	cmp    DWORD PTR [rip+0xffffffffffff7f99],0x26        # 0xffff8d11
  00d78:    	jne    0x3ae77
  00d7e:    	mov    esi,DWORD PTR [rip+0xc85]        # 0x1a09
  00d84:    	cmp    esi,0xffffffff
  00d87:    	je     0x3aead
  00d8d:    	cmp    WORD PTR [rdi+0x2],0x3
  00d92:    	jne    0xdab
  00d98:    	cmp    esi,0x6
  00d9b:    	jge    0xdab
  00da1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00da6:    	jmp    0xdf9
  00dab:    	sub    rsp,0x30
  00daf:    	movq   QWORD PTR [rsp],xmm3
  00db4:    	movq   QWORD PTR [rsp+0x8],xmm4
  00dba:    	movq   QWORD PTR [rsp+0x10],xmm5
  00dc0:    	movq   QWORD PTR [rsp+0x18],xmm6
  00dc6:    	movq   QWORD PTR [rsp+0x20],xmm7
  00dcc: 57 	movabs rax,0x55573c900b50
  00dd6:    	call   rax
  00dd8:    	movq   xmm3,QWORD PTR [rsp]
  00ddd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00de3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00de9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00def:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00df5:    	add    rsp,0x30
  00df9: ff 	mov    QWORD PTR [rbp-0x98],rax
:00073 %13 = %14.call y()                   [Vec]
:00074 
  00e00: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e07: 00 	test   rdi,0x7
  00e0e:    	jne    0x3af18
  00e14:    	cmp    DWORD PTR [rdi+0x4],0x25
  00e18:    	jne    0x3af18
  00e1e: 26 	cmp    DWORD PTR [rip+0xffffffffffff7eec],0x26        # 0xffff8d11
  00e25:    	jne    0x3af18
  00e2b:    	mov    esi,DWORD PTR [rip+0xbe0]        # 0x1a11
  00e31:    	cmp    esi,0xffffffff
  00e34:    	je     0x3af4e
  00e3a:    	cmp    WORD PTR [rdi+0x2],0x3
  00e3f:    	jne    0xe58
  00e45:    	cmp    esi,0x6
  00e48:    	jge    0xe58
  00e4e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e53:    	jmp    0xea6
  00e58:    	sub    rsp,0x30
  00e5c:    	movq   QWORD PTR [rsp],xmm3
  00e61:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e67:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e6d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e73:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e79: 57 	movabs rax,0x55573c900b50
  00e83:    	call   rax
  00e85:    	movq   xmm3,QWORD PTR [rsp]
  00e8a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e90:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e96:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e9c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00ea2:    	add    rsp,0x30
  00ea6: ff 	mov    QWORD PTR [rbp-0x90],rax
:00076 %13 = %13 * %7                       [Float][Float]
  00ead: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00eb4: 00 	test   rdi,0x1
  00ebb:    	jne    0x3afb9
  00ec1: 00 	test   rdi,0x2
  00ec8:    	je     0xf04
  00ece:    	xorps  xmm2,xmm2
  00ed1: 00 	movabs rax,0x8000000000000002
  00edb:    	cmp    rdi,rax
  00ede:    	je     0xf16
  00ee4:    	mov    rax,rdi
  00ee7:    	sar    rax,0x3f
  00eeb:    	add    rax,0x2
  00eef:    	and    rdi,0xfffffffffffffffc
  00ef3:    	or     rdi,rax
  00ef6:    	rol    rdi,0x3d
  00efa:    	movq   xmm2,rdi
  00eff:    	jmp    0xf16
  00f04:    	call   0xffff6371
  00f09:    	test   rax,rax
  00f0c:    	je     0x3afb9
  00f12:    	movq   xmm2,xmm0
  00f16:    	mulsd  xmm2,xmm3
:00077 %12 = %12 + %13                      [Float][Float]
  00f1a: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00f21: 00 	test   rdi,0x1
  00f28:    	jne    0x3afef
  00f2e: 00 	test   rdi,0x2
  00f35:    	je     0xf72
  00f3b:    	xorps  xmm8,xmm8
  00f3f: 00 	movabs rax,0x8000000000000002
  00f49:    	cmp    rdi,rax
  00f4c:    	je     0xf85
  00f52:    	mov    rax,rdi
  00f55:    	sar    rax,0x3f
  00f59:    	add    rax,0x2
  00f5d:    	and    rdi,0xfffffffffffffffc
  00f61:    	or     rdi,rax
  00f64:    	rol    rdi,0x3d
  00f68:    	movq   xmm8,rdi
  00f6d:    	jmp    0xf85
  00f72:    	call   0xffff6371
  00f77:    	test   rax,rax
  00f7a:    	je     0x3afef
  00f80:    	movq   xmm8,xmm0
  00f85:    	addsd  xmm8,xmm2
:00078 %14 = %1.call org()                  [Ray]
:00079 
  00f8a:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f8e: 00 	test   rdi,0x7
  00f95:    	jne    0x3b035
  00f9b:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00f9f:    	jne    0x3b035
  00fa5: 26 	cmp    DWORD PTR [rip+0xffffffffffff7d65],0x26        # 0xffff8d11
  00fac:    	jne    0x3b035
  00fb2:    	mov    esi,DWORD PTR [rip+0xa61]        # 0x1a19
  00fb8:    	cmp    esi,0xffffffff
  00fbb:    	je     0x3b08c
  00fc1:    	cmp    WORD PTR [rdi+0x2],0x3
  00fc6:    	jne    0xfdf
  00fcc:    	cmp    esi,0x6
  00fcf:    	jge    0xfdf
  00fd5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00fda:    	jmp    0x1047
  00fdf:    	sub    rsp,0x40
  00fe3:    	movq   QWORD PTR [rsp],xmm2
  00fe8:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fee:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ff4:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ffa:    	movq   QWORD PTR [rsp+0x20],xmm6
  01000:    	movq   QWORD PTR [rsp+0x28],xmm7
  01006: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0100d: 57 	movabs rax,0x55573c900b50
  01017:    	call   rax
  01019:    	movq   xmm2,QWORD PTR [rsp]
  0101e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01024:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0102a:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01030:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01036:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0103c: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01043:    	add    rsp,0x40
  01047: ff 	mov    QWORD PTR [rbp-0x98],rax
:00081 %13 = %14.call z()                   [Vec]
:00082 
  0104e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01055: 00 	test   rdi,0x7
  0105c:    	jne    0x3b111
  01062:    	cmp    DWORD PTR [rdi+0x4],0x25
  01066:    	jne    0x3b111
  0106c: 26 	cmp    DWORD PTR [rip+0xffffffffffff7c9e],0x26        # 0xffff8d11
  01073:    	jne    0x3b111
  01079:    	mov    esi,DWORD PTR [rip+0x9a2]        # 0x1a21
  0107f:    	cmp    esi,0xffffffff
  01082:    	je     0x3b158
  01088:    	cmp    WORD PTR [rdi+0x2],0x3
  0108d:    	jne    0x10a6
  01093:    	cmp    esi,0x6
  01096:    	jge    0x10a6
  0109c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  010a1:    	jmp    0x1102
  010a6:    	sub    rsp,0x30
  010aa:    	movq   QWORD PTR [rsp],xmm3
  010af:    	movq   QWORD PTR [rsp+0x8],xmm4
  010b5:    	movq   QWORD PTR [rsp+0x10],xmm5
  010bb:    	movq   QWORD PTR [rsp+0x18],xmm6
  010c1:    	movq   QWORD PTR [rsp+0x20],xmm7
  010c7: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  010ce: 57 	movabs rax,0x55573c900b50
  010d8:    	call   rax
  010da:    	movq   xmm3,QWORD PTR [rsp]
  010df:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010e5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010eb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  010f1:    	movq   xmm7,QWORD PTR [rsp+0x20]
  010f7: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  010fe:    	add    rsp,0x30
  01102: ff 	mov    QWORD PTR [rbp-0x90],rax
:00084 %15 = %1.call dir()                  [Ray]
:00085 
  01109:    	mov    rdi,QWORD PTR [rbp-0x30]
  0110d: 00 	test   rdi,0x7
  01114:    	jne    0x3b1d1
  0111a:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0111e:    	jne    0x3b1d1
  01124: 26 	cmp    DWORD PTR [rip+0xffffffffffff7be6],0x26        # 0xffff8d11
  0112b:    	jne    0x3b1d1
  01131:    	mov    esi,DWORD PTR [rip+0x8f2]        # 0x1a29
  01137:    	cmp    esi,0xffffffff
  0113a:    	je     0x3b218
  01140:    	cmp    WORD PTR [rdi+0x2],0x3
  01145:    	jne    0x115e
  0114b:    	cmp    esi,0x6
  0114e:    	jge    0x115e
  01154:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01159:    	jmp    0x11ba
  0115e:    	sub    rsp,0x30
  01162:    	movq   QWORD PTR [rsp],xmm3
  01167:    	movq   QWORD PTR [rsp+0x8],xmm4
  0116d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01173:    	movq   QWORD PTR [rsp+0x18],xmm6
  01179:    	movq   QWORD PTR [rsp+0x20],xmm7
  0117f: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01186: 57 	movabs rax,0x55573c900b50
  01190:    	call   rax
  01192:    	movq   xmm3,QWORD PTR [rsp]
  01197:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0119d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011a3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  011a9:    	movq   xmm7,QWORD PTR [rsp+0x20]
  011af: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  011b6:    	add    rsp,0x30
  011ba: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00087 %14 = %15.call z()                   [Vec]
:00088 
  011c1: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  011c8: 00 	test   rdi,0x7
  011cf:    	jne    0x3b291
  011d5:    	cmp    DWORD PTR [rdi+0x4],0x25
  011d9:    	jne    0x3b291
  011df: 26 	cmp    DWORD PTR [rip+0xffffffffffff7b2b],0x26        # 0xffff8d11
  011e6:    	jne    0x3b291
  011ec:    	mov    esi,DWORD PTR [rip+0x83f]        # 0x1a31
  011f2:    	cmp    esi,0xffffffff
  011f5:    	je     0x3b2d8
  011fb:    	cmp    WORD PTR [rdi+0x2],0x3
  01200:    	jne    0x1219
  01206:    	cmp    esi,0x6
  01209:    	jge    0x1219
  0120f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01214:    	jmp    0x1275
  01219:    	sub    rsp,0x30
  0121d:    	movq   QWORD PTR [rsp],xmm3
  01222:    	movq   QWORD PTR [rsp+0x8],xmm4
  01228:    	movq   QWORD PTR [rsp+0x10],xmm5
  0122e:    	movq   QWORD PTR [rsp+0x18],xmm6
  01234:    	movq   QWORD PTR [rsp+0x20],xmm7
  0123a: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01241: 57 	movabs rax,0x55573c900b50
  0124b:    	call   rax
  0124d:    	movq   xmm3,QWORD PTR [rsp]
  01252:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01258:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0125e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01264:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0126a: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01271:    	add    rsp,0x30
  01275: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %14 = %14 * %7                       [Float][Float]
  0127c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01283: 00 	test   rdi,0x1
  0128a:    	jne    0x3b351
  01290: 00 	test   rdi,0x2
  01297:    	je     0x12d3
  0129d:    	xorps  xmm2,xmm2
  012a0: 00 	movabs rax,0x8000000000000002
  012aa:    	cmp    rdi,rax
  012ad:    	je     0x12e5
  012b3:    	mov    rax,rdi
  012b6:    	sar    rax,0x3f
  012ba:    	add    rax,0x2
  012be:    	and    rdi,0xfffffffffffffffc
  012c2:    	or     rdi,rax
  012c5:    	rol    rdi,0x3d
  012c9:    	movq   xmm2,rdi
  012ce:    	jmp    0x12e5
  012d3:    	call   0xffff6371
  012d8:    	test   rax,rax
  012db:    	je     0x3b351
  012e1:    	movq   xmm2,xmm0
  012e5:    	mulsd  xmm2,xmm3
:00091 %13 = %13 + %14                      [Float][Float]
  012e9: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  012f0: 00 	test   rdi,0x1
  012f7:    	jne    0x3b398
  012fd: 00 	test   rdi,0x2
  01304:    	je     0x1341
  0130a:    	xorps  xmm9,xmm9
  0130e: 00 	movabs rax,0x8000000000000002
  01318:    	cmp    rdi,rax
  0131b:    	je     0x1354
  01321:    	mov    rax,rdi
  01324:    	sar    rax,0x3f
  01328:    	add    rax,0x2
  0132c:    	and    rdi,0xfffffffffffffffc
  01330:    	or     rdi,rax
  01333:    	rol    rdi,0x3d
  01337:    	movq   xmm9,rdi
  0133c:    	jmp    0x1354
  01341:    	call   0xffff6371
  01346:    	test   rax,rax
  01349:    	je     0x3b398
  0134f:    	movq   xmm9,xmm0
  01354:    	addsd  xmm9,xmm2
:00092 %9 = %10.call new(%11; 3)            [#<Class:Vec>]
:00093 
  01359:    	movq   xmm0,xmm4
  0135d:    	call   0xffff6464
  01362:    	mov    QWORD PTR [rbp-0x80],rax
  01366:    	movq   xmm0,xmm8
  0136b:    	call   0xffff6464
  01370: ff 	mov    QWORD PTR [rbp-0x88],rax
  01377:    	movq   xmm0,xmm9
  0137c:    	call   0xffff6464
  01381: ff 	mov    QWORD PTR [rbp-0x90],rax
  01388:    	mov    rdi,QWORD PTR [rbp-0x78]
  0138c: 00 	test   rdi,0x7
  01393:    	jne    0x3b3ef
  01399:    	cmp    DWORD PTR [rdi+0x4],0x26
  0139d:    	jne    0x3b3ef
  013a3: 26 	cmp    DWORD PTR [rip+0xffffffffffff7967],0x26        # 0xffff8d11
  013aa:    	jne    0x3b3ef
  013b0: 00 	mov    r9,0x0
  013b7:    	sub    rsp,0x40
  013bb:    	movq   QWORD PTR [rsp],xmm2
  013c0:    	movq   QWORD PTR [rsp+0x8],xmm3
  013c6:    	movq   QWORD PTR [rsp+0x10],xmm4
  013cc:    	movq   QWORD PTR [rsp+0x18],xmm5
  013d2:    	movq   QWORD PTR [rsp+0x20],xmm6
  013d8:    	movq   QWORD PTR [rsp+0x28],xmm7
  013de: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  013e5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  013ec:    	mov    rdx,rdi
  013ef:    	mov    rax,QWORD PTR [rbx]
  013f2:    	lea    rdi,[rsp-0x18]
  013f7:    	mov    QWORD PTR [rdi],rax
  013fa:    	mov    QWORD PTR [rbx],rdi
  013fd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01406:    	mov    QWORD PTR [rsp-0x38],rcx
  0140b:    	lea    rcx,[rbp-0x80]
  0140f: 00 	mov    r8,0x3
  01416:    	call   0x3b428
  0141b:    	lea    rdi,[rbp-0x8]
  0141f:    	mov    QWORD PTR [rbx],rdi
  01422:    	movq   xmm2,QWORD PTR [rsp]
  01427:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0142d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01433:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01439:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0143f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01445: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0144c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01453:    	add    rsp,0x40
  01457: 57 	movabs r13,0x55573cf97c80
  01461:    	test   rax,rax
  01464:    	je     0xffff6338
  0146a:    	mov    QWORD PTR [rbp-0x70],rax
:00095 _ = %2.call pl=(%9; 1)               [Isect]
:00096 
  0146e:    	mov    rdi,QWORD PTR [rbp-0x38]
  01472: 00 	test   rdi,0x7
  01479:    	jne    0x3b45a
  0147f:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01483:    	jne    0x3b45a
  01489: 26 	cmp    DWORD PTR [rip+0xffffffffffff7881],0x26        # 0xffff8d11
  01490:    	jne    0x3b45a
  01496:    	mov    esi,DWORD PTR [rip+0x59d]        # 0x1a39
  0149c:    	cmp    esi,0xffffffff
  0149f:    	je     0x3b493
  014a5:    	cmp    WORD PTR [rdi+0x2],0x3
  014aa:    	jne    0x14c7
  014b0:    	cmp    esi,0x6
  014b3:    	jge    0x14c7
  014b9:    	mov    rax,QWORD PTR [rbp-0x70]
  014bd:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  014c2:    	jmp    0x1554
  014c7:    	sub    rsp,0x40
  014cb:    	movq   QWORD PTR [rsp],xmm2
  014d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  014d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  014dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  014e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  014e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  014ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014fc:    	mov    rdx,QWORD PTR [rbp-0x70]
  01500: 57 	movabs rax,0x55573c900dd0
  0150a:    	call   rax
  0150c:    	movq   xmm2,QWORD PTR [rsp]
  01511:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01517:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0151d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01523:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01529:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0152f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01536: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0153d:    	add    rsp,0x40
  01541: 57 	movabs r13,0x55573cf97cb0
  0154b:    	test   rax,rax
  0154e:    	je     0xffff6338
:00098 %9 = %2.call pl()                    [Isect]
:00099 
  01554:    	mov    rdi,QWORD PTR [rbp-0x38]
  01558: 00 	test   rdi,0x7
  0155f:    	jne    0x3b52d
  01565:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01569:    	jne    0x3b52d
  0156f: 26 	cmp    DWORD PTR [rip+0xffffffffffff779b],0x26        # 0xffff8d11
  01576:    	jne    0x3b52d
  0157c:    	mov    esi,DWORD PTR [rip+0x4bf]        # 0x1a41
  01582:    	cmp    esi,0xffffffff
  01585:    	je     0x3b566
  0158b:    	cmp    WORD PTR [rdi+0x2],0x3
  01590:    	jne    0x15a9
  01596:    	cmp    esi,0x6
  01599:    	jge    0x15a9
  0159f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  015a4:    	jmp    0x161f
  015a9:    	sub    rsp,0x40
  015ad:    	movq   QWORD PTR [rsp],xmm2
  015b2:    	movq   QWORD PTR [rsp+0x8],xmm3
  015b8:    	movq   QWORD PTR [rsp+0x10],xmm4
  015be:    	movq   QWORD PTR [rsp+0x18],xmm5
  015c4:    	movq   QWORD PTR [rsp+0x20],xmm6
  015ca:    	movq   QWORD PTR [rsp+0x28],xmm7
  015d0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  015d7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  015de: 57 	movabs rax,0x55573c900b50
  015e8:    	call   rax
  015ea:    	movq   xmm2,QWORD PTR [rsp]
  015ef:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015f5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015fb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01601:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01607:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0160d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01614: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0161b:    	add    rsp,0x40
  0161f:    	mov    QWORD PTR [rbp-0x70],rax
:00101 %10 = @center: Sphere[IvarId(0)]
  01623:    	mov    rdi,QWORD PTR [rbp-0x28]
  01627:    	cmp    WORD PTR [rdi+0x2],0x3
  0162c:    	jne    0x3b5f9
  01632:    	mov    rax,QWORD PTR [rdi+0x10]
  01636:    	mov    QWORD PTR [rbp-0x78],rax
:00102 %8 = %9.call vsub(%10; 1)            [Vec]
:00103 
  0163a:    	mov    rdi,QWORD PTR [rbp-0x70]
  0163e: 00 	test   rdi,0x7
  01645:    	jne    0x3b679
  0164b:    	cmp    DWORD PTR [rdi+0x4],0x25
  0164f:    	jne    0x3b679
  01655: 26 	cmp    DWORD PTR [rip+0xffffffffffff76b5],0x26        # 0xffff8d11
  0165c:    	jne    0x3b679
  01662:    	sub    rsp,0x40
  01666:    	movq   QWORD PTR [rsp],xmm2
  0166b:    	movq   QWORD PTR [rsp+0x8],xmm3
  01671:    	movq   QWORD PTR [rsp+0x10],xmm4
  01677:    	movq   QWORD PTR [rsp+0x18],xmm5
  0167d:    	movq   QWORD PTR [rsp+0x20],xmm6
  01683:    	movq   QWORD PTR [rsp+0x28],xmm7
  01689: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01690: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01697:    	mov    rax,QWORD PTR [rbx]
  0169a:    	lea    rdi,[rsp-0x18]
  0169f:    	mov    QWORD PTR [rdi],rax
  016a2:    	mov    QWORD PTR [rbx],rdi
  016a5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016ae:    	mov    QWORD PTR [rsp-0x38],rcx
  016b3:    	mov    rax,QWORD PTR [rbp-0x70]
  016b7:    	mov    QWORD PTR [rsp-0x38],rax
  016bc: 00 	mov    rdi,0x1
  016c3:    	mov    rax,QWORD PTR [rbp-0x78]
  016c7:    	mov    QWORD PTR [rsp-0x40],rax
  016cc: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016d5: 08 	movabs rax,0x1000800000039
  016df:    	mov    QWORD PTR [rsp-0x28],rax
  016e4: 57 	movabs r13,0x55573cf9efb0
  016ee:    	call   0xffff9970
  016f3:    	lea    rdi,[rbp-0x8]
  016f7:    	mov    QWORD PTR [rbx],rdi
  016fa:    	movq   xmm2,QWORD PTR [rsp]
  016ff:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01705:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0170b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01711:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01717:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0171d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01724: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0172b:    	add    rsp,0x40
  0172f: 57 	movabs r13,0x55573cf97d20
  01739:    	test   rax,rax
  0173c:    	je     0xffff6338
  01742:    	mov    QWORD PTR [rbp-0x68],rax
:00105 %9 = %8.call vnormalize()            [Vec]
:00106 
  01746:    	mov    rdi,QWORD PTR [rbp-0x68]
  0174a: 00 	test   rdi,0x7
  01751:    	jne    0x3b6b2
  01757:    	cmp    DWORD PTR [rdi+0x4],0x25
  0175b:    	jne    0x3b6b2
  01761: 26 	cmp    DWORD PTR [rip+0xffffffffffff75a9],0x26        # 0xffff8d11
  01768:    	jne    0x3b6b2
  0176e:    	sub    rsp,0x40
  01772:    	movq   QWORD PTR [rsp],xmm2
  01777:    	movq   QWORD PTR [rsp+0x8],xmm3
  0177d:    	movq   QWORD PTR [rsp+0x10],xmm4
  01783:    	movq   QWORD PTR [rsp+0x18],xmm5
  01789:    	movq   QWORD PTR [rsp+0x20],xmm6
  0178f:    	movq   QWORD PTR [rsp+0x28],xmm7
  01795: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0179c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  017a3:    	mov    rax,QWORD PTR [rbx]
  017a6:    	lea    rdi,[rsp-0x18]
  017ab:    	mov    QWORD PTR [rdi],rax
  017ae:    	mov    QWORD PTR [rbx],rdi
  017b1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017ba:    	mov    QWORD PTR [rsp-0x38],rcx
  017bf:    	mov    rax,QWORD PTR [rbp-0x68]
  017c3:    	mov    QWORD PTR [rsp-0x38],rax
  017c8: 00 	mov    rdi,0x0
  017cf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017d8: 07 	movabs rax,0x100070000003d
  017e2:    	mov    QWORD PTR [rsp-0x28],rax
  017e7: 57 	movabs r13,0x55573cfa76a0
  017f1:    	call   0xffff95d6
  017f6:    	lea    rdi,[rbp-0x8]
  017fa:    	mov    QWORD PTR [rbx],rdi
  017fd:    	movq   xmm2,QWORD PTR [rsp]
  01802:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01808:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0180e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01814:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0181a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01820: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01827: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0182e:    	add    rsp,0x40
  01832: 57 	movabs r13,0x55573cf97d50
  0183c:    	test   rax,rax
  0183f:    	je     0xffff6338
  01845:    	mov    QWORD PTR [rbp-0x70],rax
:00108 _ = %2.call n=(%9; 1)                [Isect]
:00109 
  01849:    	mov    rdi,QWORD PTR [rbp-0x38]
  0184d: 00 	test   rdi,0x7
  01854:    	jne    0x3b6eb
  0185a:    	cmp    DWORD PTR [rdi+0x4],0x2d
  0185e:    	jne    0x3b6eb
  01864: 26 	cmp    DWORD PTR [rip+0xffffffffffff74a6],0x26        # 0xffff8d11
  0186b:    	jne    0x3b6eb
  01871:    	mov    esi,DWORD PTR [rip+0x1d2]        # 0x1a49
  01877:    	cmp    esi,0xffffffff
  0187a:    	je     0x3b724
  01880:    	cmp    WORD PTR [rdi+0x2],0x3
  01885:    	jne    0x18a2
  0188b:    	cmp    esi,0x6
  0188e:    	jge    0x18a2
  01894:    	mov    rax,QWORD PTR [rbp-0x70]
  01898:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0189d:    	jmp    0x192f
  018a2:    	sub    rsp,0x40
  018a6:    	movq   QWORD PTR [rsp],xmm2
  018ab:    	movq   QWORD PTR [rsp+0x8],xmm3
  018b1:    	movq   QWORD PTR [rsp+0x10],xmm4
  018b7:    	movq   QWORD PTR [rsp+0x18],xmm5
  018bd:    	movq   QWORD PTR [rsp+0x20],xmm6
  018c3:    	movq   QWORD PTR [rsp+0x28],xmm7
  018c9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  018d0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  018d7:    	mov    rdx,QWORD PTR [rbp-0x70]
  018db: 57 	movabs rax,0x55573c900dd0
  018e5:    	call   rax
  018e7:    	movq   xmm2,QWORD PTR [rsp]
  018ec:    	movq   xmm3,QWORD PTR [rsp+0x8]
  018f2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  018f8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  018fe:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01904:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0190a: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01911: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01918:    	add    rsp,0x40
  0191c: 57 	movabs r13,0x55573cf97d80
  01926:    	test   rax,rax
  01929:    	je     0xffff6338
:00111 br =>:00112
  0192f:    	jmp    0x3b80e
:00112 br =>:00113
  01934:    	jmp    0x3b8ad
:00113 %9 = nil
  01939: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00114 ret %9
  01941:    	mov    rax,QWORD PTR [rbp-0x70]
  01945:    	leave  
  01946:    	ret    
==> start whole compile: <unnamed> FuncId(73) self_class:Scene start:[00000] bytecode:0x55573cf8ff70
<== finished compile. elapsed:141.3µs
offset:Pos(46928) code: 8829 bytes  data: 411 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00061: 00 	test   rdi,0x7
  00068:    	jne    0x39e93
  0006e:    	cmp    DWORD PTR [rdi+0x4],0x2f
  00072:    	jne    0x39e93
:00000 %13 = %0.call rand()                 [Scene]
:00001 
  00078:    	mov    rdi,QWORD PTR [rbp-0x28]
  0007c: 26 	cmp    DWORD PTR [rip+0xffffffffffff7241],0x26        # 0xffff72c4
  00083:    	jne    0x39ea2
  00089: 00 	mov    r9,0x0
  00090:    	mov    rdx,rdi
  00093:    	mov    rax,QWORD PTR [rbx]
  00096:    	lea    rdi,[rsp-0x18]
  0009b:    	mov    QWORD PTR [rdi],rax
  0009e:    	mov    QWORD PTR [rbx],rdi
  000a1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000aa:    	mov    QWORD PTR [rsp-0x38],rcx
  000af: ff 	lea    rcx,[rbp-0x98]
  000b6: 00 	mov    r8,0x0
  000bd:    	call   0x39eb1
  000c2:    	lea    rdi,[rbp-0x8]
  000c6:    	mov    QWORD PTR [rbx],rdi
  000c9: 57 	movabs r13,0x55573cf8ff90
  000d3:    	test   rax,rax
  000d6:    	je     0xffff48eb
  000dc: ff 	mov    QWORD PTR [rbp-0x90],rax
:00003 %2 = %13
  000e3: ff 	mov    rax,QWORD PTR [rbp-0x90]
  000ea:    	mov    QWORD PTR [rbp-0x38],rax
:00004 %13 = literal[2.0]
  000ee: 00 	movq   xmm2,QWORD PTR [rip+0x218a]        # 0x2280
:00005 %14 = literal[3.14159265]
  000f6: 00 	movq   xmm3,QWORD PTR [rip+0x2192]        # 0x2290
:00006 %13 = %13 * %14                      [Float][Float]
  000fe:    	mulsd  xmm2,xmm3
:00007 %14 = %0.call rand()                 [Scene]
:00008 
  00102:    	mov    rdi,QWORD PTR [rbp-0x28]
  00106: 26 	cmp    DWORD PTR [rip+0xffffffffffff71b7],0x26        # 0xffff72c4
  0010d:    	jne    0x39ee3
  00113: 00 	mov    r9,0x0
  0011a:    	sub    rsp,0x10
  0011e:    	movq   QWORD PTR [rsp],xmm2
  00123:    	mov    rdx,rdi
  00126:    	mov    rax,QWORD PTR [rbx]
  00129:    	lea    rdi,[rsp-0x18]
  0012e:    	mov    QWORD PTR [rdi],rax
  00131:    	mov    QWORD PTR [rbx],rdi
  00134: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0013d:    	mov    QWORD PTR [rsp-0x38],rcx
  00142: ff 	lea    rcx,[rbp-0xa0]
  00149: 00 	mov    r8,0x0
  00150:    	call   0x39f02
  00155:    	lea    rdi,[rbp-0x8]
  00159:    	mov    QWORD PTR [rbx],rdi
  0015c:    	movq   xmm2,QWORD PTR [rsp]
  00161:    	add    rsp,0x10
  00165: 57 	movabs r13,0x55573cf90000
  0016f:    	test   rax,rax
  00172:    	je     0xffff48eb
  00178: ff 	mov    QWORD PTR [rbp-0x98],rax
:00010 %3 = %13 * %14                       [Float][Float]
  0017f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00186: 00 	test   rdi,0x1
  0018d:    	jne    0x39f34
  00193: 00 	test   rdi,0x2
  0019a:    	je     0x1d6
  001a0:    	xorps  xmm3,xmm3
  001a3: 00 	movabs rax,0x8000000000000002
  001ad:    	cmp    rdi,rax
  001b0:    	je     0x1e8
  001b6:    	mov    rax,rdi
  001b9:    	sar    rax,0x3f
  001bd:    	add    rax,0x2
  001c1:    	and    rdi,0xfffffffffffffffc
  001c5:    	or     rdi,rax
  001c8:    	rol    rdi,0x3d
  001cc:    	movq   xmm3,rdi
  001d1:    	jmp    0x1e8
  001d6:    	call   0xffff4924
  001db:    	test   rax,rax
  001de:    	je     0x39f34
  001e4:    	movq   xmm3,xmm0
  001e8:    	movq   xmm4,xmm2
  001ec:    	mulsd  xmm4,xmm3
:00011 %14 = const[Math]                    [Math]
  001f0: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff70d9]        # 0xffff72d0
  001f7: 00 	cmp    rax,QWORD PTR [rip+0x20b2]        # 0x22b0
  001fe:    	jne    0x39f53
  00204: 00 	mov    rax,QWORD PTR [rip+0x2095]        # 0x22a0
  0020b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %15 = %3
:00013 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
:00014 
  00212: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00219: 00 	test   rdi,0x7
  00220:    	jne    0x39fb7
  00226:    	cmp    DWORD PTR [rdi+0x4],0x20
  0022a:    	jne    0x39fb7
  00230: 26 	cmp    DWORD PTR [rip+0xffffffffffff708d],0x26        # 0xffff72c4
  00237:    	jne    0x39fb7
  0023d:    	sub    rsp,0x10
  00241:    	movq   QWORD PTR [rsp],xmm2
  00246:    	movq   QWORD PTR [rsp+0x8],xmm4
  0024c:    	movq   xmm0,xmm4
  00250: 57 	movabs rax,0x55573c942070
  0025a:    	call   rax
  0025c:    	movq   xmm2,QWORD PTR [rsp]
  00261:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00267:    	add    rsp,0x10
  0026b:    	movq   xmm2,xmm0
:00016 %15 = const[Math]                    [Math]
  0026f: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff705a]        # 0xffff72d0
  00276: 00 	cmp    rax,QWORD PTR [rip+0x2053]        # 0x22d0
  0027d:    	jne    0x39fda
  00283: 00 	mov    rax,QWORD PTR [rip+0x2036]        # 0x22c0
  0028a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00017 %16 = literal[1.0]
  00291: 00 	movq   xmm3,QWORD PTR [rip+0x2047]        # 0x22e0
:00018 %16 = %16 - %2                       [Float][Float]
  00299:    	mov    rdi,QWORD PTR [rbp-0x38]
  0029d: 00 	test   rdi,0x1
  002a4:    	jne    0x3a03e
  002aa: 00 	test   rdi,0x2
  002b1:    	je     0x2ed
  002b7:    	xorps  xmm5,xmm5
  002ba: 00 	movabs rax,0x8000000000000002
  002c4:    	cmp    rdi,rax
  002c7:    	je     0x2ff
  002cd:    	mov    rax,rdi
  002d0:    	sar    rax,0x3f
  002d4:    	add    rax,0x2
  002d8:    	and    rdi,0xfffffffffffffffc
  002dc:    	or     rdi,rax
  002df:    	rol    rdi,0x3d
  002e3:    	movq   xmm5,rdi
  002e8:    	jmp    0x2ff
  002ed:    	call   0xffff4924
  002f2:    	test   rax,rax
  002f5:    	je     0x3a03e
  002fb:    	movq   xmm5,xmm0
  002ff:    	subsd  xmm3,xmm5
:00019 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
:00020 
  00303: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0030a: 00 	test   rdi,0x7
  00311:    	jne    0x3a07a
  00317:    	cmp    DWORD PTR [rdi+0x4],0x20
  0031b:    	jne    0x3a07a
  00321: 26 	cmp    DWORD PTR [rip+0xffffffffffff6f9c],0x26        # 0xffff72c4
  00328:    	jne    0x3a07a
  0032e:    	sqrtsd xmm6,xmm3
:00022 %4 = %13 * %14                       [Float][Float]
  00332:    	movq   xmm7,xmm2
  00336:    	mulsd  xmm7,xmm6
:00023 %14 = const[Math]                    [Math]
  0033a: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff6f8f]        # 0xffff72d0
  00341: 00 	cmp    rax,QWORD PTR [rip+0x1fb8]        # 0x2300
  00348:    	jne    0x3a0b6
  0034e: 00 	mov    rax,QWORD PTR [rip+0x1f9b]        # 0x22f0
  00355: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %15 = %3
:00025 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
:00026 
  0035c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00363: 00 	test   rdi,0x7
  0036a:    	jne    0x3a13e
  00370:    	cmp    DWORD PTR [rdi+0x4],0x20
  00374:    	jne    0x3a13e
  0037a: 26 	cmp    DWORD PTR [rip+0xffffffffffff6f43],0x26        # 0xffff72c4
  00381:    	jne    0x3a13e
  00387:    	sub    rsp,0x30
  0038b:    	movq   QWORD PTR [rsp],xmm2
  00390:    	movq   QWORD PTR [rsp+0x8],xmm3
  00396:    	movq   QWORD PTR [rsp+0x10],xmm4
  0039c:    	movq   QWORD PTR [rsp+0x18],xmm5
  003a2:    	movq   QWORD PTR [rsp+0x20],xmm7
  003a8:    	movq   xmm0,xmm4
  003ac: 57 	movabs rax,0x55573c942080
  003b6:    	call   rax
  003b8:    	movq   xmm2,QWORD PTR [rsp]
  003bd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003c3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003c9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  003cf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  003d5:    	add    rsp,0x30
  003d9:    	movq   xmm2,xmm0
:00028 %15 = const[Math]                    [Math]
  003dd: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff6eec]        # 0xffff72d0
  003e4: 00 	cmp    rax,QWORD PTR [rip+0x1f35]        # 0x2320
  003eb:    	jne    0x3a17e
  003f1: 00 	mov    rax,QWORD PTR [rip+0x1f18]        # 0x2310
  003f8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00029 %16 = literal[1.0]
  003ff: 00 	movq   xmm3,QWORD PTR [rip+0x1f29]        # 0x2330
:00030 %16 = %16 - %2                       [Float][Float]
  00407:    	subsd  xmm3,xmm5
:00031 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
:00032 
  0040b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00412: 00 	test   rdi,0x7
  00419:    	jne    0x3a206
  0041f:    	cmp    DWORD PTR [rdi+0x4],0x20
  00423:    	jne    0x3a206
  00429: 26 	cmp    DWORD PTR [rip+0xffffffffffff6e94],0x26        # 0xffff72c4
  00430:    	jne    0x3a206
  00436:    	sqrtsd xmm6,xmm3
:00034 %5 = %13 * %14                       [Float][Float]
  0043a:    	movq   xmm8,xmm2
  0043f:    	mulsd  xmm8,xmm6
:00035 %13 = const[Math]                    [Math]
  00444: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff6e85]        # 0xffff72d0
  0044b: 00 	cmp    rax,QWORD PTR [rip+0x1efe]        # 0x2350
  00452:    	jne    0x3a24f
  00458: 00 	mov    rax,QWORD PTR [rip+0x1ee1]        # 0x2340
  0045f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00036 %14 = %2
:00037 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
:00038 
  00466: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0046d: 00 	test   rdi,0x7
  00474:    	jne    0x3a2e5
  0047a:    	cmp    DWORD PTR [rdi+0x4],0x20
  0047e:    	jne    0x3a2e5
  00484: 26 	cmp    DWORD PTR [rip+0xffffffffffff6e39],0x26        # 0xffff72c4
  0048b:    	jne    0x3a2e5
  00491:    	sqrtsd xmm2,xmm5
:00040 %14 = dynvar(2, %2)
  00495:    	mov    rax,QWORD PTR [rbp-0x10]
  00499:    	mov    rax,QWORD PTR [rax]
  0049c:    	mov    rax,QWORD PTR [rax-0x28]
  004a0: ff 	mov    QWORD PTR [rbp-0x98],rax
:00041 %15 = 0: i32
  004a7: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00042 %14 = %14.[%15]
  004b2:    	sub    rsp,0x30
  004b6:    	movq   QWORD PTR [rsp],xmm2
  004bb:    	movq   QWORD PTR [rsp+0x8],xmm3
  004c1:    	movq   QWORD PTR [rsp+0x10],xmm4
  004c7:    	movq   QWORD PTR [rsp+0x18],xmm5
  004cd:    	movq   QWORD PTR [rsp+0x20],xmm7
  004d3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  004da: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  004e1: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  004e8:    	mov    rdi,rbx
  004eb:    	mov    rsi,r12
  004ee: 57 	movabs rax,0x55573c95cc80
  004f8:    	call   rax
  004fa:    	movq   xmm2,QWORD PTR [rsp]
  004ff:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00505:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0050b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00511:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00517: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0051e:    	add    rsp,0x30
  00522: 57 	movabs r13,0x55573cf90220
  0052c:    	test   rax,rax
  0052f:    	je     0xffff48eb
  00535: ff 	mov    QWORD PTR [rbp-0x98],rax
:00043 %13 = %14.call x()                   [Vec]
:00044 
  0053c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00543: 00 	test   rdi,0x7
  0054a:    	jne    0x3a33c
  00550:    	cmp    DWORD PTR [rdi+0x4],0x25
  00554:    	jne    0x3a33c
  0055a: 26 	cmp    DWORD PTR [rip+0xffffffffffff6d63],0x26        # 0xffff72c4
  00561:    	jne    0x3a33c
  00567:    	mov    esi,DWORD PTR [rip+0x1def]        # 0x235c
  0056d:    	cmp    esi,0xffffffff
  00570:    	je     0x3a390
  00576:    	cmp    WORD PTR [rdi+0x2],0x3
  0057b:    	jne    0x594
  00581:    	cmp    esi,0x6
  00584:    	jge    0x594
  0058a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0058f:    	jmp    0x5f0
  00594:    	sub    rsp,0x30
  00598:    	movq   QWORD PTR [rsp],xmm2
  0059d:    	movq   QWORD PTR [rsp+0x8],xmm3
  005a3:    	movq   QWORD PTR [rsp+0x10],xmm4
  005a9:    	movq   QWORD PTR [rsp+0x18],xmm5
  005af:    	movq   QWORD PTR [rsp+0x20],xmm7
  005b5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  005bc: 57 	movabs rax,0x55573c900b50
  005c6:    	call   rax
  005c8:    	movq   xmm2,QWORD PTR [rsp]
  005cd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005d3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005d9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005df:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005e5: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  005ec:    	add    rsp,0x30
  005f0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00046 %13 = %4 * %13                       [Float][Float]
  005f7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  005fe: 00 	test   rdi,0x1
  00605:    	jne    0x3a409
  0060b: 00 	test   rdi,0x2
  00612:    	je     0x64e
  00618:    	xorps  xmm6,xmm6
  0061b: 00 	movabs rax,0x8000000000000002
  00625:    	cmp    rdi,rax
  00628:    	je     0x660
  0062e:    	mov    rax,rdi
  00631:    	sar    rax,0x3f
  00635:    	add    rax,0x2
  00639:    	and    rdi,0xfffffffffffffffc
  0063d:    	or     rdi,rax
  00640:    	rol    rdi,0x3d
  00644:    	movq   xmm6,rdi
  00649:    	jmp    0x660
  0064e:    	call   0xffff4924
  00653:    	test   rax,rax
  00656:    	je     0x3a409
  0065c:    	movq   xmm6,xmm0
  00660:    	mulsd  xmm6,xmm7
:00047 %15 = dynvar(2, %2)
  00664:    	mov    rax,QWORD PTR [rbp-0x10]
  00668:    	mov    rax,QWORD PTR [rax]
  0066b:    	mov    rax,QWORD PTR [rax-0x28]
  0066f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00048 %16 = 1: i32
  00676: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00049 %15 = %15.[%16]
  00681:    	sub    rsp,0x30
  00685:    	movq   QWORD PTR [rsp],xmm2
  0068a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00690:    	movq   QWORD PTR [rsp+0x10],xmm5
  00696:    	movq   QWORD PTR [rsp+0x18],xmm6
  0069c:    	movq   QWORD PTR [rsp+0x20],xmm7
  006a2: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  006a9: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  006b0: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  006b7:    	mov    rdi,rbx
  006ba:    	mov    rsi,r12
  006bd: 57 	movabs rax,0x55573c95cc80
  006c7:    	call   rax
  006c9:    	movq   xmm2,QWORD PTR [rsp]
  006ce:    	movq   xmm4,QWORD PTR [rsp+0x8]
  006d4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006da:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006e0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  006e6: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  006ed:    	add    rsp,0x30
  006f1: 57 	movabs r13,0x55573cf90290
  006fb:    	test   rax,rax
  006fe:    	je     0xffff48eb
  00704: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00050 %14 = %15.call x()                   [Vec]
:00051 
  0070b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00712: 00 	test   rdi,0x7
  00719:    	jne    0x3a45d
  0071f:    	cmp    DWORD PTR [rdi+0x4],0x25
  00723:    	jne    0x3a45d
  00729: 26 	cmp    DWORD PTR [rip+0xffffffffffff6b94],0x26        # 0xffff72c4
  00730:    	jne    0x3a45d
  00736:    	mov    esi,DWORD PTR [rip+0x1c28]        # 0x2364
  0073c:    	cmp    esi,0xffffffff
  0073f:    	je     0x3a4b1
  00745:    	cmp    WORD PTR [rdi+0x2],0x3
  0074a:    	jne    0x763
  00750:    	cmp    esi,0x6
  00753:    	jge    0x763
  00759:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0075e:    	jmp    0x7bf
  00763:    	sub    rsp,0x30
  00767:    	movq   QWORD PTR [rsp],xmm2
  0076c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00772:    	movq   QWORD PTR [rsp+0x10],xmm5
  00778:    	movq   QWORD PTR [rsp+0x18],xmm6
  0077e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00784: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0078b: 57 	movabs rax,0x55573c900b50
  00795:    	call   rax
  00797:    	movq   xmm2,QWORD PTR [rsp]
  0079c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007a2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007a8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007ae:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007b4: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  007bb:    	add    rsp,0x30
  007bf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00053 %14 = %5 * %14                       [Float][Float]
  007c6: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  007cd: 00 	test   rdi,0x1
  007d4:    	jne    0x3a52a
  007da: 00 	test   rdi,0x2
  007e1:    	je     0x81d
  007e7:    	xorps  xmm3,xmm3
  007ea: 00 	movabs rax,0x8000000000000002
  007f4:    	cmp    rdi,rax
  007f7:    	je     0x82f
  007fd:    	mov    rax,rdi
  00800:    	sar    rax,0x3f
  00804:    	add    rax,0x2
  00808:    	and    rdi,0xfffffffffffffffc
  0080c:    	or     rdi,rax
  0080f:    	rol    rdi,0x3d
  00813:    	movq   xmm3,rdi
  00818:    	jmp    0x82f
  0081d:    	call   0xffff4924
  00822:    	test   rax,rax
  00825:    	je     0x3a52a
  0082b:    	movq   xmm3,xmm0
  0082f:    	mulsd  xmm3,xmm8
:00054 %13 = %13 + %14                      [Float][Float]
  00834:    	addsd  xmm6,xmm3
:00055 %15 = dynvar(2, %2)
  00838:    	mov    rax,QWORD PTR [rbp-0x10]
  0083c:    	mov    rax,QWORD PTR [rax]
  0083f:    	mov    rax,QWORD PTR [rax-0x28]
  00843: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00056 %16 = 2: i32
  0084a: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00057 %15 = %15.[%16]
  00855:    	sub    rsp,0x40
  00859:    	movq   QWORD PTR [rsp],xmm2
  0085e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00864:    	movq   QWORD PTR [rsp+0x10],xmm4
  0086a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00870:    	movq   QWORD PTR [rsp+0x20],xmm6
  00876:    	movq   QWORD PTR [rsp+0x28],xmm7
  0087c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00883: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  0088a: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00891:    	mov    rdi,rbx
  00894:    	mov    rsi,r12
  00897: 57 	movabs rax,0x55573c95cc80
  008a1:    	call   rax
  008a3:    	movq   xmm2,QWORD PTR [rsp]
  008a8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008ae:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008b4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008ba:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008c0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  008c6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  008cd:    	add    rsp,0x40
  008d1: 57 	movabs r13,0x55573cf90310
  008db:    	test   rax,rax
  008de:    	je     0xffff48eb
  008e4: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00058 %14 = %15.call x()                   [Vec]
:00059 
  008eb: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  008f2: 00 	test   rdi,0x7
  008f9:    	jne    0x3a57e
  008ff:    	cmp    DWORD PTR [rdi+0x4],0x25
  00903:    	jne    0x3a57e
  00909: 26 	cmp    DWORD PTR [rip+0xffffffffffff69b4],0x26        # 0xffff72c4
  00910:    	jne    0x3a57e
  00916:    	mov    esi,DWORD PTR [rip+0x1a50]        # 0x236c
  0091c:    	cmp    esi,0xffffffff
  0091f:    	je     0x3a5d2
  00925:    	cmp    WORD PTR [rdi+0x2],0x3
  0092a:    	jne    0x943
  00930:    	cmp    esi,0x6
  00933:    	jge    0x943
  00939:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0093e:    	jmp    0x99f
  00943:    	sub    rsp,0x30
  00947:    	movq   QWORD PTR [rsp],xmm2
  0094c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00952:    	movq   QWORD PTR [rsp+0x10],xmm5
  00958:    	movq   QWORD PTR [rsp+0x18],xmm6
  0095e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00964: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0096b: 57 	movabs rax,0x55573c900b50
  00975:    	call   rax
  00977:    	movq   xmm2,QWORD PTR [rsp]
  0097c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00982:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00988:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0098e:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00994: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0099b:    	add    rsp,0x30
  0099f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00061 %14 = %6 * %14                       [Float][Float]
  009a6: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  009ad: 00 	test   rdi,0x1
  009b4:    	jne    0x3a64b
  009ba: 00 	test   rdi,0x2
  009c1:    	je     0x9fd
  009c7:    	xorps  xmm3,xmm3
  009ca: 00 	movabs rax,0x8000000000000002
  009d4:    	cmp    rdi,rax
  009d7:    	je     0xa0f
  009dd:    	mov    rax,rdi
  009e0:    	sar    rax,0x3f
  009e4:    	add    rax,0x2
  009e8:    	and    rdi,0xfffffffffffffffc
  009ec:    	or     rdi,rax
  009ef:    	rol    rdi,0x3d
  009f3:    	movq   xmm3,rdi
  009f8:    	jmp    0xa0f
  009fd:    	call   0xffff4924
  00a02:    	test   rax,rax
  00a05:    	je     0x3a64b
  00a0b:    	movq   xmm3,xmm0
  00a0f:    	mulsd  xmm3,xmm2
:00062 %7 = %13 + %14                       [Float][Float]
  00a13:    	movq   xmm9,xmm6
  00a18:    	addsd  xmm9,xmm3
:00063 %14 = dynvar(2, %2)
  00a1d:    	mov    rax,QWORD PTR [rbp-0x10]
  00a21:    	mov    rax,QWORD PTR [rax]
  00a24:    	mov    rax,QWORD PTR [rax-0x28]
  00a28: ff 	mov    QWORD PTR [rbp-0x98],rax
:00064 %15 = 0: i32
  00a2f: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00065 %14 = %14.[%15]
  00a3a:    	sub    rsp,0x40
  00a3e:    	movq   QWORD PTR [rsp],xmm2
  00a43:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a49:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a4f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a55:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a5b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a62: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00a69: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00a70: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00a77:    	mov    rdi,rbx
  00a7a:    	mov    rsi,r12
  00a7d: 57 	movabs rax,0x55573c95cc80
  00a87:    	call   rax
  00a89:    	movq   xmm2,QWORD PTR [rsp]
  00a8e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a94:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a9a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00aa0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00aa6: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00aad: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00ab4:    	add    rsp,0x40
  00ab8: 57 	movabs r13,0x55573cf90390
  00ac2:    	test   rax,rax
  00ac5:    	je     0xffff48eb
  00acb: ff 	mov    QWORD PTR [rbp-0x98],rax
:00066 %13 = %14.call y()                   [Vec]
:00067 
  00ad2: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ad9: 00 	test   rdi,0x7
  00ae0:    	jne    0x3a69f
  00ae6:    	cmp    DWORD PTR [rdi+0x4],0x25
  00aea:    	jne    0x3a69f
  00af0: 26 	cmp    DWORD PTR [rip+0xffffffffffff67cd],0x26        # 0xffff72c4
  00af7:    	jne    0x3a69f
  00afd:    	mov    esi,DWORD PTR [rip+0x1871]        # 0x2374
  00b03:    	cmp    esi,0xffffffff
  00b06:    	je     0x3a6f1
  00b0c:    	cmp    WORD PTR [rdi+0x2],0x3
  00b11:    	jne    0xb2a
  00b17:    	cmp    esi,0x6
  00b1a:    	jge    0xb2a
  00b20:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b25:    	jmp    0xb88
  00b2a:    	sub    rsp,0x30
  00b2e:    	movq   QWORD PTR [rsp],xmm2
  00b33:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b39:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b3f:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b45: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00b4c: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00b53: 57 	movabs rax,0x55573c900b50
  00b5d:    	call   rax
  00b5f:    	movq   xmm2,QWORD PTR [rsp]
  00b64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b6a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b70:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b76: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00b7d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00b84:    	add    rsp,0x30
  00b88: ff 	mov    QWORD PTR [rbp-0x90],rax
:00069 %13 = %4 * %13                       [Float][Float]
  00b8f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00b96: 00 	test   rdi,0x1
  00b9d:    	jne    0x3a76c
  00ba3: 00 	test   rdi,0x2
  00baa:    	je     0xbe6
  00bb0:    	xorps  xmm3,xmm3
  00bb3: 00 	movabs rax,0x8000000000000002
  00bbd:    	cmp    rdi,rax
  00bc0:    	je     0xbf8
  00bc6:    	mov    rax,rdi
  00bc9:    	sar    rax,0x3f
  00bcd:    	add    rax,0x2
  00bd1:    	and    rdi,0xfffffffffffffffc
  00bd5:    	or     rdi,rax
  00bd8:    	rol    rdi,0x3d
  00bdc:    	movq   xmm3,rdi
  00be1:    	jmp    0xbf8
  00be6:    	call   0xffff4924
  00beb:    	test   rax,rax
  00bee:    	je     0x3a76c
  00bf4:    	movq   xmm3,xmm0
  00bf8:    	mulsd  xmm3,xmm7
:00070 %15 = dynvar(2, %2)
  00bfc:    	mov    rax,QWORD PTR [rbp-0x10]
  00c00:    	mov    rax,QWORD PTR [rax]
  00c03:    	mov    rax,QWORD PTR [rax-0x28]
  00c07: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00071 %16 = 1: i32
  00c0e: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00072 %15 = %15.[%16]
  00c19:    	sub    rsp,0x40
  00c1d:    	movq   QWORD PTR [rsp],xmm2
  00c22:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c28:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c2e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c34:    	movq   QWORD PTR [rsp+0x20],xmm7
  00c3a: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00c41: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00c48: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00c4f: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00c56:    	mov    rdi,rbx
  00c59:    	mov    rsi,r12
  00c5c: 57 	movabs rax,0x55573c95cc80
  00c66:    	call   rax
  00c68:    	movq   xmm2,QWORD PTR [rsp]
  00c6d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c73:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c79:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c7f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00c85: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00c8c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00c93:    	add    rsp,0x40
  00c97: 57 	movabs r13,0x55573cf90400
  00ca1:    	test   rax,rax
  00ca4:    	je     0xffff48eb
  00caa: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00073 %14 = %15.call y()                   [Vec]
:00074 
  00cb1: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00cb8: 00 	test   rdi,0x7
  00cbf:    	jne    0x3a7be
  00cc5:    	cmp    DWORD PTR [rdi+0x4],0x25
  00cc9:    	jne    0x3a7be
  00ccf: 26 	cmp    DWORD PTR [rip+0xffffffffffff65ee],0x26        # 0xffff72c4
  00cd6:    	jne    0x3a7be
  00cdc:    	mov    esi,DWORD PTR [rip+0x169a]        # 0x237c
  00ce2:    	cmp    esi,0xffffffff
  00ce5:    	je     0x3a820
  00ceb:    	cmp    WORD PTR [rdi+0x2],0x3
  00cf0:    	jne    0xd09
  00cf6:    	cmp    esi,0x6
  00cf9:    	jge    0xd09
  00cff:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d04:    	jmp    0xd73
  00d09:    	sub    rsp,0x40
  00d0d:    	movq   QWORD PTR [rsp],xmm2
  00d12:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d18:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d1e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d24:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d2a: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d31: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d38: 57 	movabs rax,0x55573c900b50
  00d42:    	call   rax
  00d44:    	movq   xmm2,QWORD PTR [rsp]
  00d49:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d4f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d55:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d5b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d61: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00d68: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d6f:    	add    rsp,0x40
  00d73: ff 	mov    QWORD PTR [rbp-0x98],rax
:00076 %14 = %5 * %14                       [Float][Float]
  00d7a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00d81: 00 	test   rdi,0x1
  00d88:    	jne    0x3a8a7
  00d8e: 00 	test   rdi,0x2
  00d95:    	je     0xdd1
  00d9b:    	xorps  xmm6,xmm6
  00d9e: 00 	movabs rax,0x8000000000000002
  00da8:    	cmp    rdi,rax
  00dab:    	je     0xde3
  00db1:    	mov    rax,rdi
  00db4:    	sar    rax,0x3f
  00db8:    	add    rax,0x2
  00dbc:    	and    rdi,0xfffffffffffffffc
  00dc0:    	or     rdi,rax
  00dc3:    	rol    rdi,0x3d
  00dc7:    	movq   xmm6,rdi
  00dcc:    	jmp    0xde3
  00dd1:    	call   0xffff4924
  00dd6:    	test   rax,rax
  00dd9:    	je     0x3a8a7
  00ddf:    	movq   xmm6,xmm0
  00de3:    	mulsd  xmm6,xmm8
:00077 %13 = %13 + %14                      [Float][Float]
  00de8:    	addsd  xmm3,xmm6
:00078 %15 = dynvar(2, %2)
  00dec:    	mov    rax,QWORD PTR [rbp-0x10]
  00df0:    	mov    rax,QWORD PTR [rax]
  00df3:    	mov    rax,QWORD PTR [rax-0x28]
  00df7: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00079 %16 = 2: i32
  00dfe: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00080 %15 = %15.[%16]
  00e09:    	sub    rsp,0x40
  00e0d:    	movq   QWORD PTR [rsp],xmm2
  00e12:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e18:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e1e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e24:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e2a:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e30: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e37: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e3e: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00e45: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00e4c:    	mov    rdi,rbx
  00e4f:    	mov    rsi,r12
  00e52: 57 	movabs rax,0x55573c95cc80
  00e5c:    	call   rax
  00e5e:    	movq   xmm2,QWORD PTR [rsp]
  00e63:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e69:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e6f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e75:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e7b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e81: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e88: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e8f:    	add    rsp,0x40
  00e93: 57 	movabs r13,0x55573cf90480
  00e9d:    	test   rax,rax
  00ea0:    	je     0xffff48eb
  00ea6: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00081 %14 = %15.call y()                   [Vec]
:00082 
  00ead: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00eb4: 00 	test   rdi,0x7
  00ebb:    	jne    0x3a909
  00ec1:    	cmp    DWORD PTR [rdi+0x4],0x25
  00ec5:    	jne    0x3a909
  00ecb: 26 	cmp    DWORD PTR [rip+0xffffffffffff63f2],0x26        # 0xffff72c4
  00ed2:    	jne    0x3a909
  00ed8:    	mov    esi,DWORD PTR [rip+0x14a6]        # 0x2384
  00ede:    	cmp    esi,0xffffffff
  00ee1:    	je     0x3a96b
  00ee7:    	cmp    WORD PTR [rdi+0x2],0x3
  00eec:    	jne    0xf05
  00ef2:    	cmp    esi,0x6
  00ef5:    	jge    0xf05
  00efb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f00:    	jmp    0xf6f
  00f05:    	sub    rsp,0x40
  00f09:    	movq   QWORD PTR [rsp],xmm2
  00f0e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f14:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f1a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f20:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f26: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00f2d: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00f34: 57 	movabs rax,0x55573c900b50
  00f3e:    	call   rax
  00f40:    	movq   xmm2,QWORD PTR [rsp]
  00f45:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f4b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f51:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f57:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00f5d: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00f64: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00f6b:    	add    rsp,0x40
  00f6f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00084 %14 = %6 * %14                       [Float][Float]
  00f76: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00f7d: 00 	test   rdi,0x1
  00f84:    	jne    0x3a9f2
  00f8a: 00 	test   rdi,0x2
  00f91:    	je     0xfcd
  00f97:    	xorps  xmm6,xmm6
  00f9a: 00 	movabs rax,0x8000000000000002
  00fa4:    	cmp    rdi,rax
  00fa7:    	je     0xfdf
  00fad:    	mov    rax,rdi
  00fb0:    	sar    rax,0x3f
  00fb4:    	add    rax,0x2
  00fb8:    	and    rdi,0xfffffffffffffffc
  00fbc:    	or     rdi,rax
  00fbf:    	rol    rdi,0x3d
  00fc3:    	movq   xmm6,rdi
  00fc8:    	jmp    0xfdf
  00fcd:    	call   0xffff4924
  00fd2:    	test   rax,rax
  00fd5:    	je     0x3a9f2
  00fdb:    	movq   xmm6,xmm0
  00fdf:    	mulsd  xmm6,xmm2
:00085 %8 = %13 + %14                       [Float][Float]
  00fe3:    	movq   xmm10,xmm3
  00fe8:    	addsd  xmm10,xmm6
:00086 %14 = dynvar(2, %2)
  00fed:    	mov    rax,QWORD PTR [rbp-0x10]
  00ff1:    	mov    rax,QWORD PTR [rax]
  00ff4:    	mov    rax,QWORD PTR [rax-0x28]
  00ff8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00087 %15 = 0: i32
  00fff: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00088 %14 = %14.[%15]
  0100a:    	sub    rsp,0x40
  0100e:    	movq   QWORD PTR [rsp],xmm2
  01013:    	movq   QWORD PTR [rsp+0x8],xmm3
  01019:    	movq   QWORD PTR [rsp+0x10],xmm4
  0101f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01025:    	movq   QWORD PTR [rsp+0x20],xmm7
  0102b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01032: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01039: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01040: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01047: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  0104e:    	mov    rdi,rbx
  01051:    	mov    rsi,r12
  01054: 57 	movabs rax,0x55573c95cc80
  0105e:    	call   rax
  01060:    	movq   xmm2,QWORD PTR [rsp]
  01065:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0106b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01071:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01077:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0107d: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01084: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0108b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01092:    	add    rsp,0x40
  01096: 57 	movabs r13,0x55573cf90500
  010a0:    	test   rax,rax
  010a3:    	je     0xffff48eb
  010a9: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %13 = %14.call z()                   [Vec]
:00090 
  010b0: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  010b7: 00 	test   rdi,0x7
  010be:    	jne    0x3aa54
  010c4:    	cmp    DWORD PTR [rdi+0x4],0x25
  010c8:    	jne    0x3aa54
  010ce: 26 	cmp    DWORD PTR [rip+0xffffffffffff61ef],0x26        # 0xffff72c4
  010d5:    	jne    0x3aa54
  010db:    	mov    esi,DWORD PTR [rip+0x12ab]        # 0x238c
  010e1:    	cmp    esi,0xffffffff
  010e4:    	je     0x3aab4
  010ea:    	cmp    WORD PTR [rdi+0x2],0x3
  010ef:    	jne    0x1108
  010f5:    	cmp    esi,0x6
  010f8:    	jge    0x1108
  010fe:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01103:    	jmp    0x1174
  01108:    	sub    rsp,0x40
  0110c:    	movq   QWORD PTR [rsp],xmm2
  01111:    	movq   QWORD PTR [rsp+0x8],xmm4
  01117:    	movq   QWORD PTR [rsp+0x10],xmm5
  0111d:    	movq   QWORD PTR [rsp+0x18],xmm7
  01123: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0112a: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01131: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01138: 57 	movabs rax,0x55573c900b50
  01142:    	call   rax
  01144:    	movq   xmm2,QWORD PTR [rsp]
  01149:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0114f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01155:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0115b: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01162: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01169: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01170:    	add    rsp,0x40
  01174: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 %13 = %4 * %13                       [Float][Float]
  0117b: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01182: 00 	test   rdi,0x1
  01189:    	jne    0x3ab3d
  0118f: 00 	test   rdi,0x2
  01196:    	je     0x11d2
  0119c:    	xorps  xmm3,xmm3
  0119f: 00 	movabs rax,0x8000000000000002
  011a9:    	cmp    rdi,rax
  011ac:    	je     0x11e4
  011b2:    	mov    rax,rdi
  011b5:    	sar    rax,0x3f
  011b9:    	add    rax,0x2
  011bd:    	and    rdi,0xfffffffffffffffc
  011c1:    	or     rdi,rax
  011c4:    	rol    rdi,0x3d
  011c8:    	movq   xmm3,rdi
  011cd:    	jmp    0x11e4
  011d2:    	call   0xffff4924
  011d7:    	test   rax,rax
  011da:    	je     0x3ab3d
  011e0:    	movq   xmm3,xmm0
  011e4:    	mulsd  xmm3,xmm7
:00093 %15 = dynvar(2, %2)
  011e8:    	mov    rax,QWORD PTR [rbp-0x10]
  011ec:    	mov    rax,QWORD PTR [rax]
  011ef:    	mov    rax,QWORD PTR [rax-0x28]
  011f3: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00094 %16 = 1: i32
  011fa: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00095 %15 = %15.[%16]
  01205:    	sub    rsp,0x40
  01209:    	movq   QWORD PTR [rsp],xmm2
  0120e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01214:    	movq   QWORD PTR [rsp+0x10],xmm4
  0121a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01220:    	movq   QWORD PTR [rsp+0x20],xmm7
  01226: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0122d: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01234: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0123b: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01242: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01249:    	mov    rdi,rbx
  0124c:    	mov    rsi,r12
  0124f: 57 	movabs rax,0x55573c95cc80
  01259:    	call   rax
  0125b:    	movq   xmm2,QWORD PTR [rsp]
  01260:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01266:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0126c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01272:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01278: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0127f: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01286: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0128d:    	add    rsp,0x40
  01291: 57 	movabs r13,0x55573cf90570
  0129b:    	test   rax,rax
  0129e:    	je     0xffff48eb
  012a4: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00096 %14 = %15.call z()                   [Vec]
:00097 
  012ab: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  012b2: 00 	test   rdi,0x7
  012b9:    	jne    0x3ab9d
  012bf:    	cmp    DWORD PTR [rdi+0x4],0x25
  012c3:    	jne    0x3ab9d
  012c9: 26 	cmp    DWORD PTR [rip+0xffffffffffff5ff4],0x26        # 0xffff72c4
  012d0:    	jne    0x3ab9d
  012d6:    	mov    esi,DWORD PTR [rip+0x10b8]        # 0x2394
  012dc:    	cmp    esi,0xffffffff
  012df:    	je     0x3ac0d
  012e5:    	cmp    WORD PTR [rdi+0x2],0x3
  012ea:    	jne    0x1303
  012f0:    	cmp    esi,0x6
  012f3:    	jge    0x1303
  012f9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  012fe:    	jmp    0x137b
  01303:    	sub    rsp,0x40
  01307:    	movq   QWORD PTR [rsp],xmm2
  0130c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01312:    	movq   QWORD PTR [rsp+0x10],xmm4
  01318:    	movq   QWORD PTR [rsp+0x18],xmm5
  0131e:    	movq   QWORD PTR [rsp+0x20],xmm7
  01324: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0132b: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01332: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01339: 57 	movabs rax,0x55573c900b50
  01343:    	call   rax
  01345:    	movq   xmm2,QWORD PTR [rsp]
  0134a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01350:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01356:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0135c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01362: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01369: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01370: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01377:    	add    rsp,0x40
  0137b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00099 %14 = %5 * %14                       [Float][Float]
  01382: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01389: 00 	test   rdi,0x1
  01390:    	jne    0x3aca2
  01396: 00 	test   rdi,0x2
  0139d:    	je     0x13d9
  013a3:    	xorps  xmm6,xmm6
  013a6: 00 	movabs rax,0x8000000000000002
  013b0:    	cmp    rdi,rax
  013b3:    	je     0x13eb
  013b9:    	mov    rax,rdi
  013bc:    	sar    rax,0x3f
  013c0:    	add    rax,0x2
  013c4:    	and    rdi,0xfffffffffffffffc
  013c8:    	or     rdi,rax
  013cb:    	rol    rdi,0x3d
  013cf:    	movq   xmm6,rdi
  013d4:    	jmp    0x13eb
  013d9:    	call   0xffff4924
  013de:    	test   rax,rax
  013e1:    	je     0x3aca2
  013e7:    	movq   xmm6,xmm0
  013eb:    	mulsd  xmm6,xmm8
:00100 %13 = %13 + %14                      [Float][Float]
  013f0:    	addsd  xmm3,xmm6
:00101 %15 = dynvar(2, %2)
  013f4:    	mov    rax,QWORD PTR [rbp-0x10]
  013f8:    	mov    rax,QWORD PTR [rax]
  013fb:    	mov    rax,QWORD PTR [rax-0x28]
  013ff: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00102 %16 = 2: i32
  01406: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00103 %15 = %15.[%16]
  01411:    	sub    rsp,0x50
  01415:    	movq   QWORD PTR [rsp],xmm2
  0141a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01420:    	movq   QWORD PTR [rsp+0x10],xmm4
  01426:    	movq   QWORD PTR [rsp+0x18],xmm5
  0142c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01432:    	movq   QWORD PTR [rsp+0x28],xmm7
  01438: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0143f: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01446: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0144d: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01454: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0145b:    	mov    rdi,rbx
  0145e:    	mov    rsi,r12
  01461: 57 	movabs rax,0x55573c95cc80
  0146b:    	call   rax
  0146d:    	movq   xmm2,QWORD PTR [rsp]
  01472:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01478:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0147e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01484:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0148a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01490: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01497: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0149e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  014a5:    	add    rsp,0x50
  014a9: 57 	movabs r13,0x55573cf905f0
  014b3:    	test   rax,rax
  014b6:    	je     0xffff48eb
  014bc: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00104 %14 = %15.call z()                   [Vec]
:00105 
  014c3: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  014ca: 00 	test   rdi,0x7
  014d1:    	jne    0x3ad12
  014d7:    	cmp    DWORD PTR [rdi+0x4],0x25
  014db:    	jne    0x3ad12
  014e1: 26 	cmp    DWORD PTR [rip+0xffffffffffff5ddc],0x26        # 0xffff72c4
  014e8:    	jne    0x3ad12
  014ee:    	mov    esi,DWORD PTR [rip+0xea8]        # 0x239c
  014f4:    	cmp    esi,0xffffffff
  014f7:    	je     0x3ad82
  014fd:    	cmp    WORD PTR [rdi+0x2],0x3
  01502:    	jne    0x151b
  01508:    	cmp    esi,0x6
  0150b:    	jge    0x151b
  01511:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01516:    	jmp    0x1593
  0151b:    	sub    rsp,0x40
  0151f:    	movq   QWORD PTR [rsp],xmm2
  01524:    	movq   QWORD PTR [rsp+0x8],xmm3
  0152a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01530:    	movq   QWORD PTR [rsp+0x18],xmm5
  01536:    	movq   QWORD PTR [rsp+0x20],xmm7
  0153c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01543: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0154a: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01551: 57 	movabs rax,0x55573c900b50
  0155b:    	call   rax
  0155d:    	movq   xmm2,QWORD PTR [rsp]
  01562:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01568:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0156e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01574:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0157a: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01581: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01588: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0158f:    	add    rsp,0x40
  01593: ff 	mov    QWORD PTR [rbp-0x98],rax
:00107 %14 = %6 * %14                       [Float][Float]
  0159a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  015a1: 00 	test   rdi,0x1
  015a8:    	jne    0x3ae17
  015ae: 00 	test   rdi,0x2
  015b5:    	je     0x15f1
  015bb:    	xorps  xmm6,xmm6
  015be: 00 	movabs rax,0x8000000000000002
  015c8:    	cmp    rdi,rax
  015cb:    	je     0x1603
  015d1:    	mov    rax,rdi
  015d4:    	sar    rax,0x3f
  015d8:    	add    rax,0x2
  015dc:    	and    rdi,0xfffffffffffffffc
  015e0:    	or     rdi,rax
  015e3:    	rol    rdi,0x3d
  015e7:    	movq   xmm6,rdi
  015ec:    	jmp    0x1603
  015f1:    	call   0xffff4924
  015f6:    	test   rax,rax
  015f9:    	je     0x3ae17
  015ff:    	movq   xmm6,xmm0
  01603:    	mulsd  xmm6,xmm2
:00108 %9 = %13 + %14                       [Float][Float]
  01607:    	movq   xmm11,xmm3
  0160c:    	addsd  xmm11,xmm6
:00109 %13 = const[Vec]                     [Vec]
  01611: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5cb8]        # 0xffff72d0
  01618: 00 	cmp    rax,QWORD PTR [rip+0xd91]        # 0x23b0
  0161f:    	jne    0x3ae87
  01625: 00 	mov    rax,QWORD PTR [rip+0xd74]        # 0x23a0
  0162c: ff 	mov    QWORD PTR [rbp-0x90],rax
:00110 %14 = %7
:00111 %15 = %8
:00112 %16 = %9
:00113 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
:00114 
  01633:    	movq   xmm0,xmm9
  01638:    	call   0xffff4a17
  0163d: ff 	mov    QWORD PTR [rbp-0x98],rax
  01644:    	movq   xmm0,xmm10
  01649:    	call   0xffff4a17
  0164e: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01655:    	movq   xmm0,xmm11
  0165a:    	call   0xffff4a17
  0165f: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01666: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0166d: 00 	test   rdi,0x7
  01674:    	jne    0x3af47
  0167a:    	cmp    DWORD PTR [rdi+0x4],0x26
  0167e:    	jne    0x3af47
  01684: 26 	cmp    DWORD PTR [rip+0xffffffffffff5c39],0x26        # 0xffff72c4
  0168b:    	jne    0x3af47
  01691: 00 	mov    r9,0x0
  01698:    	sub    rsp,0x40
  0169c:    	movq   QWORD PTR [rsp],xmm2
  016a1:    	movq   QWORD PTR [rsp+0x8],xmm4
  016a7:    	movq   QWORD PTR [rsp+0x10],xmm5
  016ad:    	movq   QWORD PTR [rsp+0x18],xmm7
  016b3: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  016ba: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  016c1: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  016c8: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  016cf:    	mov    rdx,rdi
  016d2:    	mov    rax,QWORD PTR [rbx]
  016d5:    	lea    rdi,[rsp-0x18]
  016da:    	mov    QWORD PTR [rdi],rax
  016dd:    	mov    QWORD PTR [rbx],rdi
  016e0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016e9:    	mov    QWORD PTR [rsp-0x38],rcx
  016ee: ff 	lea    rcx,[rbp-0x98]
  016f5: 00 	mov    r8,0x3
  016fc:    	call   0x3afb5
  01701:    	lea    rdi,[rbp-0x8]
  01705:    	mov    QWORD PTR [rbx],rdi
  01708:    	movq   xmm2,QWORD PTR [rsp]
  0170d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01713:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01719:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0171f: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01726: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0172d: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01734: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0173b:    	add    rsp,0x40
  0173f: 57 	movabs r13,0x55573cf906a0
  01749:    	test   rax,rax
  0174c:    	je     0xffff48eb
  01752:    	mov    QWORD PTR [rbp-0x78],rax
:00116 %13 = const[Ray]                     [Ray]
  01756: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5b73]        # 0xffff72d0
  0175d: 00 	cmp    rax,QWORD PTR [rip+0xc6c]        # 0x23d0
  01764:    	jne    0x3afe7
  0176a: 00 	mov    rax,QWORD PTR [rip+0xc4f]        # 0x23c0
  01771: ff 	mov    QWORD PTR [rbp-0x90],rax
:00117 %14 = dynvar(2, %7)
  01778:    	mov    rax,QWORD PTR [rbp-0x10]
  0177c:    	mov    rax,QWORD PTR [rax]
  0177f:    	mov    rax,QWORD PTR [rax-0x50]
  01783: ff 	mov    QWORD PTR [rbp-0x98],rax
:00118 %15 = %10
  0178a:    	mov    rax,QWORD PTR [rbp-0x78]
  0178e: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00119 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
:00120 
  01795: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0179c: 00 	test   rdi,0x7
  017a3:    	jne    0x3b09b
  017a9:    	cmp    DWORD PTR [rdi+0x4],0x2c
  017ad:    	jne    0x3b09b
  017b3: 26 	cmp    DWORD PTR [rip+0xffffffffffff5b0a],0x26        # 0xffff72c4
  017ba:    	jne    0x3b09b
  017c0: 00 	mov    r9,0x0
  017c7:    	sub    rsp,0x40
  017cb:    	movq   QWORD PTR [rsp],xmm2
  017d0:    	movq   QWORD PTR [rsp+0x8],xmm4
  017d6:    	movq   QWORD PTR [rsp+0x10],xmm5
  017dc:    	movq   QWORD PTR [rsp+0x18],xmm7
  017e2: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  017e9: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  017f0: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  017f7: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  017fe:    	mov    rdx,rdi
  01801:    	mov    rax,QWORD PTR [rbx]
  01804:    	lea    rdi,[rsp-0x18]
  01809:    	mov    QWORD PTR [rdi],rax
  0180c:    	mov    QWORD PTR [rbx],rdi
  0180f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01818:    	mov    QWORD PTR [rsp-0x38],rcx
  0181d: ff 	lea    rcx,[rbp-0x98]
  01824: 00 	mov    r8,0x2
  0182b:    	call   0x3b109
  01830:    	lea    rdi,[rbp-0x8]
  01834:    	mov    QWORD PTR [rbx],rdi
  01837:    	movq   xmm2,QWORD PTR [rsp]
  0183c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01842:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01848:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0184e: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01855: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0185c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01863: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0186a:    	add    rsp,0x40
  0186e: 57 	movabs r13,0x55573cf90700
  01878:    	test   rax,rax
  0187b:    	je     0xffff48eb
  01881:    	mov    QWORD PTR [rbp-0x80],rax
:00122 %13 = const[Isect]                   [Isect]
  01885: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5a44]        # 0xffff72d0
  0188c: 00 	cmp    rax,QWORD PTR [rip+0xb5d]        # 0x23f0
  01893:    	jne    0x3b13b
  01899: 00 	mov    rax,QWORD PTR [rip+0xb40]        # 0x23e0
  018a0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00123 %12 = %13.call new()                 [#<Class:Isect>]
:00124 
  018a7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  018ae: 00 	test   rdi,0x7
  018b5:    	jne    0x3b1ef
  018bb:    	cmp    DWORD PTR [rdi+0x4],0x2e
  018bf:    	jne    0x3b1ef
  018c5: 26 	cmp    DWORD PTR [rip+0xffffffffffff59f8],0x26        # 0xffff72c4
  018cc:    	jne    0x3b1ef
  018d2: 00 	mov    r9,0x0
  018d9:    	sub    rsp,0x40
  018dd:    	movq   QWORD PTR [rsp],xmm2
  018e2:    	movq   QWORD PTR [rsp+0x8],xmm4
  018e8:    	movq   QWORD PTR [rsp+0x10],xmm5
  018ee:    	movq   QWORD PTR [rsp+0x18],xmm7
  018f4: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  018fb: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01902: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01909: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01910:    	mov    rdx,rdi
  01913:    	mov    rax,QWORD PTR [rbx]
  01916:    	lea    rdi,[rsp-0x18]
  0191b:    	mov    QWORD PTR [rdi],rax
  0191e:    	mov    QWORD PTR [rbx],rdi
  01921: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0192a:    	mov    QWORD PTR [rsp-0x38],rcx
  0192f: ff 	lea    rcx,[rbp-0x98]
  01936: 00 	mov    r8,0x0
  0193d:    	call   0x3b25d
  01942:    	lea    rdi,[rbp-0x8]
  01946:    	mov    QWORD PTR [rbx],rdi
  01949:    	movq   xmm2,QWORD PTR [rsp]
  0194e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01954:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0195a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01960: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01967: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0196e: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01975: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0197c:    	add    rsp,0x40
  01980: 57 	movabs r13,0x55573cf90740
  0198a:    	test   rax,rax
  0198d:    	je     0xffff48eb
  01993: ff 	mov    QWORD PTR [rbp-0x88],rax
:00126 %13 = @spheres: Scene[IvarId(0)]
  0199a:    	mov    rdi,QWORD PTR [rbp-0x28]
  0199e:    	cmp    WORD PTR [rdi+0x2],0x3
  019a3:    	jne    0x3b28f
  019a9:    	mov    rax,QWORD PTR [rdi+0x10]
  019ad: ff 	mov    QWORD PTR [rbp-0x90],rax
:00127 %14 = 0: i32
  019b4: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00128 %13 = %13.[%14]
  019bf:    	sub    rsp,0x40
  019c3:    	movq   QWORD PTR [rsp],xmm2
  019c8:    	movq   QWORD PTR [rsp+0x8],xmm4
  019ce:    	movq   QWORD PTR [rsp+0x10],xmm5
  019d4:    	movq   QWORD PTR [rsp+0x18],xmm7
  019da: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  019e1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  019e8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  019ef: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  019f6: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  019fd: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01a04:    	mov    rdi,rbx
  01a07:    	mov    rsi,r12
  01a0a: 57 	movabs rax,0x55573c95cc80
  01a14:    	call   rax
  01a16:    	movq   xmm2,QWORD PTR [rsp]
  01a1b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a21:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a27:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a2d: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a34: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a3b: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a42: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a49:    	add    rsp,0x40
  01a4d: 57 	movabs r13,0x55573cf90780
  01a57:    	test   rax,rax
  01a5a:    	je     0xffff48eb
  01a60: ff 	mov    QWORD PTR [rbp-0x90],rax
:00129 %14 = %11
  01a67:    	mov    rax,QWORD PTR [rbp-0x80]
  01a6b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00130 %15 = %12
  01a72: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01a79: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00131 _ = %13.call intersect(%14; 2)       [Sphere]
:00132 
  01a80: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01a87: 00 	test   rdi,0x7
  01a8e:    	jne    0x3b313
  01a94:    	cmp    DWORD PTR [rdi+0x4],0x27
  01a98:    	jne    0x3b313
  01a9e: 26 	cmp    DWORD PTR [rip+0xffffffffffff581f],0x26        # 0xffff72c4
  01aa5:    	jne    0x3b313
  01aab:    	sub    rsp,0x40
  01aaf:    	movq   QWORD PTR [rsp],xmm2
  01ab4:    	movq   QWORD PTR [rsp+0x8],xmm4
  01aba:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ac0:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ac6: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01acd: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ad4: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01adb: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ae2:    	mov    rax,QWORD PTR [rbx]
  01ae5:    	lea    rdi,[rsp-0x18]
  01aea:    	mov    QWORD PTR [rdi],rax
  01aed:    	mov    QWORD PTR [rbx],rdi
  01af0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01af9:    	mov    QWORD PTR [rsp-0x38],rcx
  01afe: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01b05:    	mov    QWORD PTR [rsp-0x38],rax
  01b0a: 00 	mov    rdi,0x2
  01b11: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01b18:    	mov    QWORD PTR [rsp-0x40],rax
  01b1d: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01b24:    	mov    QWORD PTR [rsp-0x48],rax
  01b29: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b32: 10 	movabs rax,0x100100000003f
  01b3c:    	mov    QWORD PTR [rsp-0x28],rax
  01b41: 57 	movabs r13,0x55573cf976a0
  01b4b:    	call   0xffff7e91
  01b50:    	lea    rdi,[rbp-0x8]
  01b54:    	mov    QWORD PTR [rbx],rdi
  01b57:    	movq   xmm2,QWORD PTR [rsp]
  01b5c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b62:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01b68:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b6e: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01b75: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01b7c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01b83: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01b8a:    	add    rsp,0x40
  01b8e: 57 	movabs r13,0x55573cf907c0
  01b98:    	test   rax,rax
  01b9b:    	je     0xffff48eb
:00134 %13 = @spheres: Scene[IvarId(0)]
  01ba1:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ba5:    	cmp    WORD PTR [rdi+0x2],0x3
  01baa:    	jne    0x3b381
  01bb0:    	mov    rax,QWORD PTR [rdi+0x10]
  01bb4: ff 	mov    QWORD PTR [rbp-0x90],rax
:00135 %14 = 1: i32
  01bbb: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00136 %13 = %13.[%14]
  01bc6:    	sub    rsp,0x40
  01bca:    	movq   QWORD PTR [rsp],xmm2
  01bcf:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bd5:    	movq   QWORD PTR [rsp+0x10],xmm5
  01bdb:    	movq   QWORD PTR [rsp+0x18],xmm7
  01be1: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01be8: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01bef: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01bf6: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01bfd: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01c04: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01c0b:    	mov    rdi,rbx
  01c0e:    	mov    rsi,r12
  01c11: 57 	movabs rax,0x55573c95cc80
  01c1b:    	call   rax
  01c1d:    	movq   xmm2,QWORD PTR [rsp]
  01c22:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c28:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c2e:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c34: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c3b: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c42: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c49: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c50:    	add    rsp,0x40
  01c54: 57 	movabs r13,0x55573cf90800
  01c5e:    	test   rax,rax
  01c61:    	je     0xffff48eb
  01c67: ff 	mov    QWORD PTR [rbp-0x90],rax
:00137 %14 = %11
  01c6e:    	mov    rax,QWORD PTR [rbp-0x80]
  01c72: ff 	mov    QWORD PTR [rbp-0x98],rax
:00138 %15 = %12
  01c79: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01c80: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00139 _ = %13.call intersect(%14; 2)       [Sphere]
:00140 
  01c87: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01c8e: 00 	test   rdi,0x7
  01c95:    	jne    0x3b405
  01c9b:    	cmp    DWORD PTR [rdi+0x4],0x27
  01c9f:    	jne    0x3b405
  01ca5: 26 	cmp    DWORD PTR [rip+0xffffffffffff5618],0x26        # 0xffff72c4
  01cac:    	jne    0x3b405
  01cb2:    	sub    rsp,0x40
  01cb6:    	movq   QWORD PTR [rsp],xmm2
  01cbb:    	movq   QWORD PTR [rsp+0x8],xmm4
  01cc1:    	movq   QWORD PTR [rsp+0x10],xmm5
  01cc7:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ccd: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01cd4: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01cdb: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ce2: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ce9:    	mov    rax,QWORD PTR [rbx]
  01cec:    	lea    rdi,[rsp-0x18]
  01cf1:    	mov    QWORD PTR [rdi],rax
  01cf4:    	mov    QWORD PTR [rbx],rdi
  01cf7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01d00:    	mov    QWORD PTR [rsp-0x38],rcx
  01d05: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01d0c:    	mov    QWORD PTR [rsp-0x38],rax
  01d11: 00 	mov    rdi,0x2
  01d18: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01d1f:    	mov    QWORD PTR [rsp-0x40],rax
  01d24: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01d2b:    	mov    QWORD PTR [rsp-0x48],rax
  01d30: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01d39: 10 	movabs rax,0x100100000003f
  01d43:    	mov    QWORD PTR [rsp-0x28],rax
  01d48: 57 	movabs r13,0x55573cf976a0
  01d52:    	call   0xffff7e91
  01d57:    	lea    rdi,[rbp-0x8]
  01d5b:    	mov    QWORD PTR [rbx],rdi
  01d5e:    	movq   xmm2,QWORD PTR [rsp]
  01d63:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d69:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01d6f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01d75: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01d7c: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01d83: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01d8a: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01d91:    	add    rsp,0x40
  01d95: 57 	movabs r13,0x55573cf90840
  01d9f:    	test   rax,rax
  01da2:    	je     0xffff48eb
:00142 %13 = @spheres: Scene[IvarId(0)]
  01da8:    	mov    rdi,QWORD PTR [rbp-0x28]
  01dac:    	cmp    WORD PTR [rdi+0x2],0x3
  01db1:    	jne    0x3b473
  01db7:    	mov    rax,QWORD PTR [rdi+0x10]
  01dbb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00143 %14 = 2: i32
  01dc2: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00144 %13 = %13.[%14]
  01dcd:    	sub    rsp,0x40
  01dd1:    	movq   QWORD PTR [rsp],xmm2
  01dd6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ddc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01de2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01de8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01def: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01df6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01dfd: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01e04: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01e0b: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01e12:    	mov    rdi,rbx
  01e15:    	mov    rsi,r12
  01e18: 57 	movabs rax,0x55573c95cc80
  01e22:    	call   rax
  01e24:    	movq   xmm2,QWORD PTR [rsp]
  01e29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e2f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e35:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e3b: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e42: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e49: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e50: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e57:    	add    rsp,0x40
  01e5b: 57 	movabs r13,0x55573cf90880
  01e65:    	test   rax,rax
  01e68:    	je     0xffff48eb
  01e6e: ff 	mov    QWORD PTR [rbp-0x90],rax
:00145 %14 = %11
  01e75:    	mov    rax,QWORD PTR [rbp-0x80]
  01e79: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 %15 = %12
  01e80: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01e87: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00147 _ = %13.call intersect(%14; 2)       [Sphere]
:00148 
  01e8e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01e95: 00 	test   rdi,0x7
  01e9c:    	jne    0x3b4f7
  01ea2:    	cmp    DWORD PTR [rdi+0x4],0x27
  01ea6:    	jne    0x3b4f7
  01eac: 26 	cmp    DWORD PTR [rip+0xffffffffffff5411],0x26        # 0xffff72c4
  01eb3:    	jne    0x3b4f7
  01eb9:    	sub    rsp,0x40
  01ebd:    	movq   QWORD PTR [rsp],xmm2
  01ec2:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ec8:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ece:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ed4: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01edb: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ee2: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ee9: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ef0:    	mov    rax,QWORD PTR [rbx]
  01ef3:    	lea    rdi,[rsp-0x18]
  01ef8:    	mov    QWORD PTR [rdi],rax
  01efb:    	mov    QWORD PTR [rbx],rdi
  01efe: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01f07:    	mov    QWORD PTR [rsp-0x38],rcx
  01f0c: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01f13:    	mov    QWORD PTR [rsp-0x38],rax
  01f18: 00 	mov    rdi,0x2
  01f1f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01f26:    	mov    QWORD PTR [rsp-0x40],rax
  01f2b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01f32:    	mov    QWORD PTR [rsp-0x48],rax
  01f37: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01f40: 10 	movabs rax,0x100100000003f
  01f4a:    	mov    QWORD PTR [rsp-0x28],rax
  01f4f: 57 	movabs r13,0x55573cf976a0
  01f59:    	call   0xffff7e91
  01f5e:    	lea    rdi,[rbp-0x8]
  01f62:    	mov    QWORD PTR [rbx],rdi
  01f65:    	movq   xmm2,QWORD PTR [rsp]
  01f6a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01f70:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01f76:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01f7c: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01f83: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01f8a: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01f91: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01f98:    	add    rsp,0x40
  01f9c: 57 	movabs r13,0x55573cf908c0
  01fa6:    	test   rax,rax
  01fa9:    	je     0xffff48eb
:00150 %13 = @plane: Scene[IvarId(1)]
  01faf:    	mov    rdi,QWORD PTR [rbp-0x28]
  01fb3:    	cmp    WORD PTR [rdi+0x2],0x3
  01fb8:    	jne    0x3b565
  01fbe:    	mov    rax,QWORD PTR [rdi+0x18]
  01fc2: ff 	mov    QWORD PTR [rbp-0x90],rax
:00151 %14 = %11
  01fc9:    	mov    rax,QWORD PTR [rbp-0x80]
  01fcd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00152 %15 = %12
  01fd4: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01fdb: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00153 _ = %13.call intersect(%14; 2)       [Plane]
:00154 
  01fe2: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01fe9: 00 	test   rdi,0x7
  01ff0:    	jne    0x3b5e9
  01ff6:    	cmp    DWORD PTR [rdi+0x4],0x29
  01ffa:    	jne    0x3b5e9
  02000: 26 	cmp    DWORD PTR [rip+0xffffffffffff52bd],0x26        # 0xffff72c4
  02007:    	jne    0x3b5e9
  0200d:    	sub    rsp,0x40
  02011:    	movq   QWORD PTR [rsp],xmm2
  02016:    	movq   QWORD PTR [rsp+0x8],xmm4
  0201c:    	movq   QWORD PTR [rsp+0x10],xmm5
  02022:    	movq   QWORD PTR [rsp+0x18],xmm7
  02028: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0202f: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02036: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0203d: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02044:    	mov    rax,QWORD PTR [rbx]
  02047:    	lea    rdi,[rsp-0x18]
  0204c:    	mov    QWORD PTR [rdi],rax
  0204f:    	mov    QWORD PTR [rbx],rdi
  02052: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0205b:    	mov    QWORD PTR [rsp-0x38],rcx
  02060: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02067:    	mov    QWORD PTR [rsp-0x38],rax
  0206c: 00 	mov    rdi,0x2
  02073: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0207a:    	mov    QWORD PTR [rsp-0x40],rax
  0207f: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02086:    	mov    QWORD PTR [rsp-0x48],rax
  0208b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02094: 0e 	movabs rax,0x1000e00000041
  0209e:    	mov    QWORD PTR [rsp-0x28],rax
  020a3: 57 	movabs r13,0x55573cf99540
  020ad:    	call   0xffff847e
  020b2:    	lea    rdi,[rbp-0x8]
  020b6:    	mov    QWORD PTR [rbx],rdi
  020b9:    	movq   xmm2,QWORD PTR [rsp]
  020be:    	movq   xmm4,QWORD PTR [rsp+0x8]
  020c4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  020ca:    	movq   xmm7,QWORD PTR [rsp+0x18]
  020d0: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  020d7: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  020de: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  020e5: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  020ec:    	add    rsp,0x40
  020f0: 57 	movabs r13,0x55573cf90920
  020fa:    	test   rax,rax
  020fd:    	je     0xffff48eb
:00156 %13 = %12.call hit()                 [Isect]
:00157 
  02103: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0210a: 00 	test   rdi,0x7
  02111:    	jne    0x3b657
  02117:    	cmp    DWORD PTR [rdi+0x4],0x2d
  0211b:    	jne    0x3b657
  02121: 26 	cmp    DWORD PTR [rip+0xffffffffffff519c],0x26        # 0xffff72c4
  02128:    	jne    0x3b657
  0212e:    	mov    esi,DWORD PTR [rip+0x2c8]        # 0x23fc
  02134:    	cmp    esi,0xffffffff
  02137:    	je     0x3b6c5
  0213d:    	cmp    WORD PTR [rdi+0x2],0x3
  02142:    	jne    0x215b
  02148:    	cmp    esi,0x6
  0214b:    	jge    0x215b
  02151:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  02156:    	jmp    0x21d5
  0215b:    	sub    rsp,0x40
  0215f:    	movq   QWORD PTR [rsp],xmm2
  02164:    	movq   QWORD PTR [rsp+0x8],xmm4
  0216a:    	movq   QWORD PTR [rsp+0x10],xmm5
  02170:    	movq   QWORD PTR [rsp+0x18],xmm7
  02176: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0217d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02184: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0218b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02192: 57 	movabs rax,0x55573c900b50
  0219c:    	call   rax
  0219e:    	movq   xmm2,QWORD PTR [rsp]
  021a3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  021a9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  021af:    	movq   xmm7,QWORD PTR [rsp+0x18]
  021b5: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  021bc: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  021c3: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  021ca: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  021d1:    	add    rsp,0x40
  021d5: ff 	mov    QWORD PTR [rbp-0x90],rax
:00159 condnotbr %13 =>:00165
  021dc: ff 	mov    rax,QWORD PTR [rbp-0x90]
  021e3:    	or     rax,0x10
  021e7:    	cmp    rax,0x14
  021eb:    	je     0x225c
:00160 %13 = dynvar(2, %6)
  021f1:    	mov    rax,QWORD PTR [rbp-0x10]
  021f5:    	mov    rax,QWORD PTR [rax]
  021f8:    	mov    rax,QWORD PTR [rax-0x48]
  021fc: ff 	mov    QWORD PTR [rbp-0x90],rax
:00161 %14 = literal[1.0]
  02203: 00 	movq   xmm3,QWORD PTR [rip+0x1f5]        # 0x2400
:00162 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  0220b: 00 	mov    rdi,0x4
  02212: 01 	sub    DWORD PTR [rip+0x1ef],0x1        # 0x2408
  02219:    	jne    0x3b75c
  0221f:    	mov    rdi,r12
  02222:    	mov    esi,DWORD PTR [rbp-0x18]
  02225:    	mov    rdx,QWORD PTR [rbp-0x28]
  02229: 57 	movabs rax,0x55573c962b00
  02233:    	call   rax
  02235: 00 	mov    rdi,0x4
  0223c:    	jmp    0x3b75c
:00163 dynvar(2, %6) = %13
  02241:    	mov    rax,QWORD PTR [rbp-0x10]
  02245:    	mov    rax,QWORD PTR [rax]
  02248: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0224f:    	mov    QWORD PTR [rax-0x48],rdi
:00164 ret %13
  02253: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0225a:    	leave  
  0225b:    	ret    
:00165 %13 = literal[0.0]
  0225c: 00 	movq   xmm3,QWORD PTR [rip+0x1ac]        # 0x2410
:00166 ret %13
  02264:    	movq   xmm0,xmm3
  02268:    	call   0xffff4a17
  0226d: ff 	mov    QWORD PTR [rbp-0x90],rax
  02274: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0227b:    	leave  
  0227c:    	ret    
==> start whole compile: <unnamed> FuncId(71) self_class:Scene start:[00000] bytecode:0x55573cf725d0
<== finished compile. elapsed:19.2µs
offset:Pos(56168) code: 217 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x50
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    rdi,QWORD PTR [rbp-0x28]
  0001f: test   rdi,0x7
  00026: jne    0x393c2
  0002c: cmp    DWORD PTR [rdi+0x4],0x2f
  00030: jne    0x393c2
:00000 %3 = dynvar(1, %3)
  00036: mov    rax,QWORD PTR [rbp-0x10]
  0003a: mov    rax,QWORD PTR [rax-0x30]
  0003e: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = literal[73]
  00042: mov    rax,0x93
  00049: mov    QWORD PTR [rbp-0x48],rax
:00002 %2 = %3.call times(&%4)              [Integer]
:00003 
  0004d: mov    rdi,QWORD PTR [rbp-0x40]
  00051: test   rdi,0x1
  00058: jne    0x75
  0005e: test   rdi,0x7
  00065: jne    0x393d1
  0006b: cmp    DWORD PTR [rdi+0x4],0x6
  0006f: jne    0x393d1
  00075: cmp    DWORD PTR [rip+0xffffffffffff4e30],0x26        # 0xffff4eac
  0007c: jne    0x393d1
  00082: mov    r9,QWORD PTR [rbp-0x48]
  00086: mov    rdx,rdi
  00089: mov    rax,QWORD PTR [rbx]
  0008c: lea    rdi,[rsp-0x18]
  00091: mov    QWORD PTR [rdi],rax
  00094: mov    QWORD PTR [rbx],rdi
  00097: mov    QWORD PTR [rsp-0x20],0x0
  000a0: mov    QWORD PTR [rsp-0x38],rcx
  000a5: lea    rcx,[rbp-0x50]
  000a9: mov    r8,0x0
  000b0: call   0x393e0
  000b5: lea    rdi,[rbp-0x8]
  000b9: mov    QWORD PTR [rbx],rdi
  000bc: movabs r13,0x55573cf72610
  000c6: test   rax,rax
  000c9: je     0xffff24d3
  000cf: mov    QWORD PTR [rbp-0x38],rax
:00005 ret %2
  000d3: mov    rax,QWORD PTR [rbp-0x38]
  000d7: leave  
  000d8: ret    
==> start whole compile: vcross FuncId(58) self_class:Vec start:[00000] bytecode:0x55573cf94eb0
<== finished compile. elapsed:53.6µs
offset:Pos(56385) code: 2478 bytes  data: 73 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x70
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x38],rax
  00013: mov    QWORD PTR [rbp-0x40],rax
  00017: mov    QWORD PTR [rbp-0x48],rax
  0001b: mov    QWORD PTR [rbp-0x50],rax
  0001f: mov    QWORD PTR [rbp-0x58],rax
  00023: mov    QWORD PTR [rbp-0x60],rax
  00027: mov    QWORD PTR [rbp-0x68],rax
  0002b: mov    rdi,QWORD PTR [rbp-0x28]
  0002f: test   rdi,0x7
  00036: jne    0x39339
  0003c: cmp    DWORD PTR [rdi+0x4],0x25
  00040: jne    0x39339
:00000 %3 = const[Vec]                      [Vec]
  00046: mov    rax,QWORD PTR [rip+0xffffffffffff4d92]        # 0xffff4ddf
  0004d: cmp    rax,QWORD PTR [rip+0x96b]        # 0x9bf
  00054: jne    0x39348
  0005a: mov    rax,QWORD PTR [rip+0x94e]        # 0x9af
  00061: mov    QWORD PTR [rbp-0x40],rax
:00001 %4 = @y: Vec[IvarId(1)]
  00065: mov    rdi,QWORD PTR [rbp-0x28]
  00069: cmp    WORD PTR [rdi+0x2],0x3
  0006e: jne    0x3938e
  00074: mov    rax,QWORD PTR [rdi+0x18]
  00078: mov    QWORD PTR [rbp-0x48],rax
:00002 %5 = %1.call z()                     [Vec]
:00003 
  0007c: mov    rdi,QWORD PTR [rbp-0x30]
  00080: test   rdi,0x7
  00087: jne    0x393a4
  0008d: cmp    DWORD PTR [rdi+0x4],0x25
  00091: jne    0x393a4
  00097: cmp    DWORD PTR [rip+0xffffffffffff4d35],0x26        # 0xffff4dd3
  0009e: jne    0x393a4
  000a4: mov    esi,DWORD PTR [rip+0x921]        # 0x9cb
  000aa: cmp    esi,0xffffffff
  000ad: je     0x393b3
  000b3: cmp    WORD PTR [rdi+0x2],0x3
  000b8: jne    0xd1
  000be: cmp    esi,0x6
  000c1: jge    0xd1
  000c7: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000cc: jmp    0xdd
  000d1: movabs rax,0x55573c900b50
  000db: call   rax
  000dd: mov    QWORD PTR [rbp-0x50],rax
:00005 %4 = %4 * %5                         [Float][Float]
  000e1: mov    rdi,QWORD PTR [rbp-0x48]
  000e5: test   rdi,0x1
  000ec: jne    0x393dc
  000f2: test   rdi,0x2
  000f9: je     0x135
  000ff: xorps  xmm2,xmm2
  00102: movabs rax,0x8000000000000002
  0010c: cmp    rdi,rax
  0010f: je     0x147
  00115: mov    rax,rdi
  00118: sar    rax,0x3f
  0011c: add    rax,0x2
  00120: and    rdi,0xfffffffffffffffc
  00124: or     rdi,rax
  00127: rol    rdi,0x3d
  0012b: movq   xmm2,rdi
  00130: jmp    0x147
  00135: call   0xffff2433
  0013a: test   rax,rax
  0013d: je     0x393dc
  00143: movq   xmm2,xmm0
  00147: mov    rdi,QWORD PTR [rbp-0x50]
  0014b: test   rdi,0x1
  00152: jne    0x393eb
  00158: test   rdi,0x2
  0015f: je     0x19b
  00165: xorps  xmm3,xmm3
  00168: movabs rax,0x8000000000000002
  00172: cmp    rdi,rax
  00175: je     0x1ad
  0017b: mov    rax,rdi
  0017e: sar    rax,0x3f
  00182: add    rax,0x2
  00186: and    rdi,0xfffffffffffffffc
  0018a: or     rdi,rax
  0018d: rol    rdi,0x3d
  00191: movq   xmm3,rdi
  00196: jmp    0x1ad
  0019b: call   0xffff2433
  001a0: test   rax,rax
  001a3: je     0x393eb
  001a9: movq   xmm3,xmm0
  001ad: mulsd  xmm2,xmm3
:00006 %5 = @z: Vec[IvarId(2)]
  001b1: mov    rdi,QWORD PTR [rbp-0x28]
  001b5: cmp    WORD PTR [rdi+0x2],0x3
  001ba: jne    0x393fa
  001c0: mov    rax,QWORD PTR [rdi+0x20]
  001c4: mov    QWORD PTR [rbp-0x50],rax
:00007 %6 = %1.call y()                     [Vec]
:00008 
  001c8: mov    rdi,QWORD PTR [rbp-0x30]
  001cc: test   rdi,0x7
  001d3: jne    0x39422
  001d9: cmp    DWORD PTR [rdi+0x4],0x25
  001dd: jne    0x39422
  001e3: cmp    DWORD PTR [rip+0xffffffffffff4be9],0x26        # 0xffff4dd3
  001ea: jne    0x39422
  001f0: mov    esi,DWORD PTR [rip+0x7dd]        # 0x9d3
  001f6: cmp    esi,0xffffffff
  001f9: je     0x3943e
  001ff: cmp    WORD PTR [rdi+0x2],0x3
  00204: jne    0x21d
  0020a: cmp    esi,0x6
  0020d: jge    0x21d
  00213: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00218: jmp    0x23b
  0021d: sub    rsp,0x10
  00221: movq   QWORD PTR [rsp],xmm2
  00226: movabs rax,0x55573c900b50
  00230: call   rax
  00232: movq   xmm2,QWORD PTR [rsp]
  00237: add    rsp,0x10
  0023b: mov    QWORD PTR [rbp-0x58],rax
:00010 %5 = %5 * %6                         [Float][Float]
  0023f: mov    rdi,QWORD PTR [rbp-0x50]
  00243: test   rdi,0x1
  0024a: jne    0x39479
  00250: test   rdi,0x2
  00257: je     0x293
  0025d: xorps  xmm3,xmm3
  00260: movabs rax,0x8000000000000002
  0026a: cmp    rdi,rax
  0026d: je     0x2a5
  00273: mov    rax,rdi
  00276: sar    rax,0x3f
  0027a: add    rax,0x2
  0027e: and    rdi,0xfffffffffffffffc
  00282: or     rdi,rax
  00285: rol    rdi,0x3d
  00289: movq   xmm3,rdi
  0028e: jmp    0x2a5
  00293: call   0xffff2433
  00298: test   rax,rax
  0029b: je     0x39479
  002a1: movq   xmm3,xmm0
  002a5: mov    rdi,QWORD PTR [rbp-0x58]
  002a9: test   rdi,0x1
  002b0: jne    0x39495
  002b6: test   rdi,0x2
  002bd: je     0x2f9
  002c3: xorps  xmm4,xmm4
  002c6: movabs rax,0x8000000000000002
  002d0: cmp    rdi,rax
  002d3: je     0x30b
  002d9: mov    rax,rdi
  002dc: sar    rax,0x3f
  002e0: add    rax,0x2
  002e4: and    rdi,0xfffffffffffffffc
  002e8: or     rdi,rax
  002eb: rol    rdi,0x3d
  002ef: movq   xmm4,rdi
  002f4: jmp    0x30b
  002f9: call   0xffff2433
  002fe: test   rax,rax
  00301: je     0x39495
  00307: movq   xmm4,xmm0
  0030b: mulsd  xmm3,xmm4
:00011 %4 = %4 - %5                         [Float][Float]
  0030f: subsd  xmm2,xmm3
:00012 %5 = @z: Vec[IvarId(2)]
  00313: mov    rdi,QWORD PTR [rbp-0x28]
  00317: cmp    WORD PTR [rdi+0x2],0x3
  0031c: jne    0x394b1
  00322: mov    rax,QWORD PTR [rdi+0x20]
  00326: mov    QWORD PTR [rbp-0x50],rax
:00013 %6 = %1.call x()                     [Vec]
:00014 
  0032a: mov    rdi,QWORD PTR [rbp-0x30]
  0032e: test   rdi,0x7
  00335: jne    0x394e5
  0033b: cmp    DWORD PTR [rdi+0x4],0x25
  0033f: jne    0x394e5
  00345: cmp    DWORD PTR [rip+0xffffffffffff4a87],0x26        # 0xffff4dd3
  0034c: jne    0x394e5
  00352: mov    esi,DWORD PTR [rip+0x683]        # 0x9db
  00358: cmp    esi,0xffffffff
  0035b: je     0x39501
  00361: cmp    WORD PTR [rdi+0x2],0x3
  00366: jne    0x37f
  0036c: cmp    esi,0x6
  0036f: jge    0x37f
  00375: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0037a: jmp    0x39d
  0037f: sub    rsp,0x10
  00383: movq   QWORD PTR [rsp],xmm2
  00388: movabs rax,0x55573c900b50
  00392: call   rax
  00394: movq   xmm2,QWORD PTR [rsp]
  00399: add    rsp,0x10
  0039d: mov    QWORD PTR [rbp-0x58],rax
:00016 %5 = %5 * %6                         [Float][Float]
  003a1: mov    rdi,QWORD PTR [rbp-0x50]
  003a5: test   rdi,0x1
  003ac: jne    0x3953c
  003b2: test   rdi,0x2
  003b9: je     0x3f5
  003bf: xorps  xmm3,xmm3
  003c2: movabs rax,0x8000000000000002
  003cc: cmp    rdi,rax
  003cf: je     0x407
  003d5: mov    rax,rdi
  003d8: sar    rax,0x3f
  003dc: add    rax,0x2
  003e0: and    rdi,0xfffffffffffffffc
  003e4: or     rdi,rax
  003e7: rol    rdi,0x3d
  003eb: movq   xmm3,rdi
  003f0: jmp    0x407
  003f5: call   0xffff2433
  003fa: test   rax,rax
  003fd: je     0x3953c
  00403: movq   xmm3,xmm0
  00407: mov    rdi,QWORD PTR [rbp-0x58]
  0040b: test   rdi,0x1
  00412: jne    0x39558
  00418: test   rdi,0x2
  0041f: je     0x45b
  00425: xorps  xmm4,xmm4
  00428: movabs rax,0x8000000000000002
  00432: cmp    rdi,rax
  00435: je     0x46d
  0043b: mov    rax,rdi
  0043e: sar    rax,0x3f
  00442: add    rax,0x2
  00446: and    rdi,0xfffffffffffffffc
  0044a: or     rdi,rax
  0044d: rol    rdi,0x3d
  00451: movq   xmm4,rdi
  00456: jmp    0x46d
  0045b: call   0xffff2433
  00460: test   rax,rax
  00463: je     0x39558
  00469: movq   xmm4,xmm0
  0046d: mulsd  xmm3,xmm4
:00017 %6 = @x: Vec[IvarId(0)]
  00471: mov    rdi,QWORD PTR [rbp-0x28]
  00475: cmp    WORD PTR [rdi+0x2],0x3
  0047a: jne    0x39574
  00480: mov    rax,QWORD PTR [rdi+0x10]
  00484: mov    QWORD PTR [rbp-0x58],rax
:00018 %7 = %1.call z()                     [Vec]
:00019 
  00488: mov    rdi,QWORD PTR [rbp-0x30]
  0048c: test   rdi,0x7
  00493: jne    0x395a8
  00499: cmp    DWORD PTR [rdi+0x4],0x25
  0049d: jne    0x395a8
  004a3: cmp    DWORD PTR [rip+0xffffffffffff4929],0x26        # 0xffff4dd3
  004aa: jne    0x395a8
  004b0: mov    esi,DWORD PTR [rip+0x52d]        # 0x9e3
  004b6: cmp    esi,0xffffffff
  004b9: je     0x395d1
  004bf: cmp    WORD PTR [rdi+0x2],0x3
  004c4: jne    0x4dd
  004ca: cmp    esi,0x6
  004cd: jge    0x4dd
  004d3: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004d8: jmp    0x507
  004dd: sub    rsp,0x10
  004e1: movq   QWORD PTR [rsp],xmm2
  004e6: movq   QWORD PTR [rsp+0x8],xmm3
  004ec: movabs rax,0x55573c900b50
  004f6: call   rax
  004f8: movq   xmm2,QWORD PTR [rsp]
  004fd: movq   xmm3,QWORD PTR [rsp+0x8]
  00503: add    rsp,0x10
  00507: mov    QWORD PTR [rbp-0x60],rax
:00021 %6 = %6 * %7                         [Float][Float]
  0050b: mov    rdi,QWORD PTR [rbp-0x58]
  0050f: test   rdi,0x1
  00516: jne    0x39618
  0051c: test   rdi,0x2
  00523: je     0x55f
  00529: xorps  xmm4,xmm4
  0052c: movabs rax,0x8000000000000002
  00536: cmp    rdi,rax
  00539: je     0x571
  0053f: mov    rax,rdi
  00542: sar    rax,0x3f
  00546: add    rax,0x2
  0054a: and    rdi,0xfffffffffffffffc
  0054e: or     rdi,rax
  00551: rol    rdi,0x3d
  00555: movq   xmm4,rdi
  0055a: jmp    0x571
  0055f: call   0xffff2433
  00564: test   rax,rax
  00567: je     0x39618
  0056d: movq   xmm4,xmm0
  00571: mov    rdi,QWORD PTR [rbp-0x60]
  00575: test   rdi,0x1
  0057c: jne    0x39641
  00582: test   rdi,0x2
  00589: je     0x5c5
  0058f: xorps  xmm5,xmm5
  00592: movabs rax,0x8000000000000002
  0059c: cmp    rdi,rax
  0059f: je     0x5d7
  005a5: mov    rax,rdi
  005a8: sar    rax,0x3f
  005ac: add    rax,0x2
  005b0: and    rdi,0xfffffffffffffffc
  005b4: or     rdi,rax
  005b7: rol    rdi,0x3d
  005bb: movq   xmm5,rdi
  005c0: jmp    0x5d7
  005c5: call   0xffff2433
  005ca: test   rax,rax
  005cd: je     0x39641
  005d3: movq   xmm5,xmm0
  005d7: mulsd  xmm4,xmm5
:00022 %5 = %5 - %6                         [Float][Float]
  005db: subsd  xmm3,xmm4
:00023 %6 = @x: Vec[IvarId(0)]
  005df: mov    rdi,QWORD PTR [rbp-0x28]
  005e3: cmp    WORD PTR [rdi+0x2],0x3
  005e8: jne    0x3966a
  005ee: mov    rax,QWORD PTR [rdi+0x10]
  005f2: mov    QWORD PTR [rbp-0x58],rax
:00024 %7 = %1.call y()                     [Vec]
:00025 
  005f6: mov    rdi,QWORD PTR [rbp-0x30]
  005fa: test   rdi,0x7
  00601: jne    0x396aa
  00607: cmp    DWORD PTR [rdi+0x4],0x25
  0060b: jne    0x396aa
  00611: cmp    DWORD PTR [rip+0xffffffffffff47bb],0x26        # 0xffff4dd3
  00618: jne    0x396aa
  0061e: mov    esi,DWORD PTR [rip+0x3c7]        # 0x9eb
  00624: cmp    esi,0xffffffff
  00627: je     0x396d3
  0062d: cmp    WORD PTR [rdi+0x2],0x3
  00632: jne    0x64b
  00638: cmp    esi,0x6
  0063b: jge    0x64b
  00641: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00646: jmp    0x675
  0064b: sub    rsp,0x10
  0064f: movq   QWORD PTR [rsp],xmm2
  00654: movq   QWORD PTR [rsp+0x8],xmm3
  0065a: movabs rax,0x55573c900b50
  00664: call   rax
  00666: movq   xmm2,QWORD PTR [rsp]
  0066b: movq   xmm3,QWORD PTR [rsp+0x8]
  00671: add    rsp,0x10
  00675: mov    QWORD PTR [rbp-0x60],rax
:00027 %6 = %6 * %7                         [Float][Float]
  00679: mov    rdi,QWORD PTR [rbp-0x58]
  0067d: test   rdi,0x1
  00684: jne    0x3971a
  0068a: test   rdi,0x2
  00691: je     0x6cd
  00697: xorps  xmm4,xmm4
  0069a: movabs rax,0x8000000000000002
  006a4: cmp    rdi,rax
  006a7: je     0x6df
  006ad: mov    rax,rdi
  006b0: sar    rax,0x3f
  006b4: add    rax,0x2
  006b8: and    rdi,0xfffffffffffffffc
  006bc: or     rdi,rax
  006bf: rol    rdi,0x3d
  006c3: movq   xmm4,rdi
  006c8: jmp    0x6df
  006cd: call   0xffff2433
  006d2: test   rax,rax
  006d5: je     0x3971a
  006db: movq   xmm4,xmm0
  006df: mov    rdi,QWORD PTR [rbp-0x60]
  006e3: test   rdi,0x1
  006ea: jne    0x39743
  006f0: test   rdi,0x2
  006f7: je     0x733
  006fd: xorps  xmm5,xmm5
  00700: movabs rax,0x8000000000000002
  0070a: cmp    rdi,rax
  0070d: je     0x745
  00713: mov    rax,rdi
  00716: sar    rax,0x3f
  0071a: add    rax,0x2
  0071e: and    rdi,0xfffffffffffffffc
  00722: or     rdi,rax
  00725: rol    rdi,0x3d
  00729: movq   xmm5,rdi
  0072e: jmp    0x745
  00733: call   0xffff2433
  00738: test   rax,rax
  0073b: je     0x39743
  00741: movq   xmm5,xmm0
  00745: mulsd  xmm4,xmm5
:00028 %7 = @y: Vec[IvarId(1)]
  00749: mov    rdi,QWORD PTR [rbp-0x28]
  0074d: cmp    WORD PTR [rdi+0x2],0x3
  00752: jne    0x3976c
  00758: mov    rax,QWORD PTR [rdi+0x18]
  0075c: mov    QWORD PTR [rbp-0x60],rax
:00029 %8 = %1.call x()                     [Vec]
:00030 
  00760: mov    rdi,QWORD PTR [rbp-0x30]
  00764: test   rdi,0x7
  0076b: jne    0x397ac
  00771: cmp    DWORD PTR [rdi+0x4],0x25
  00775: jne    0x397ac
  0077b: cmp    DWORD PTR [rip+0xffffffffffff4651],0x26        # 0xffff4dd3
  00782: jne    0x397ac
  00788: mov    esi,DWORD PTR [rip+0x265]        # 0x9f3
  0078e: cmp    esi,0xffffffff
  00791: je     0x397e2
  00797: cmp    WORD PTR [rdi+0x2],0x3
  0079c: jne    0x7b5
  007a2: cmp    esi,0x6
  007a5: jge    0x7b5
  007ab: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007b0: jmp    0x7eb
  007b5: sub    rsp,0x20
  007b9: movq   QWORD PTR [rsp],xmm2
  007be: movq   QWORD PTR [rsp+0x8],xmm3
  007c4: movq   QWORD PTR [rsp+0x10],xmm4
  007ca: movabs rax,0x55573c900b50
  007d4: call   rax
  007d6: movq   xmm2,QWORD PTR [rsp]
  007db: movq   xmm3,QWORD PTR [rsp+0x8]
  007e1: movq   xmm4,QWORD PTR [rsp+0x10]
  007e7: add    rsp,0x20
  007eb: mov    QWORD PTR [rbp-0x68],rax
:00032 %7 = %7 * %8                         [Float][Float]
  007ef: mov    rdi,QWORD PTR [rbp-0x60]
  007f3: test   rdi,0x1
  007fa: jne    0x39835
  00800: test   rdi,0x2
  00807: je     0x843
  0080d: xorps  xmm5,xmm5
  00810: movabs rax,0x8000000000000002
  0081a: cmp    rdi,rax
  0081d: je     0x855
  00823: mov    rax,rdi
  00826: sar    rax,0x3f
  0082a: add    rax,0x2
  0082e: and    rdi,0xfffffffffffffffc
  00832: or     rdi,rax
  00835: rol    rdi,0x3d
  00839: movq   xmm5,rdi
  0083e: jmp    0x855
  00843: call   0xffff2433
  00848: test   rax,rax
  0084b: je     0x39835
  00851: movq   xmm5,xmm0
  00855: mov    rdi,QWORD PTR [rbp-0x68]
  00859: test   rdi,0x1
  00860: jne    0x3986b
  00866: test   rdi,0x2
  0086d: je     0x8a9
  00873: xorps  xmm6,xmm6
  00876: movabs rax,0x8000000000000002
  00880: cmp    rdi,rax
  00883: je     0x8bb
  00889: mov    rax,rdi
  0088c: sar    rax,0x3f
  00890: add    rax,0x2
  00894: and    rdi,0xfffffffffffffffc
  00898: or     rdi,rax
  0089b: rol    rdi,0x3d
  0089f: movq   xmm6,rdi
  008a4: jmp    0x8bb
  008a9: call   0xffff2433
  008ae: test   rax,rax
  008b1: je     0x3986b
  008b7: movq   xmm6,xmm0
  008bb: mulsd  xmm5,xmm6
:00033 %6 = %6 - %7                         [Float][Float]
  008bf: subsd  xmm4,xmm5
:00034 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
:00035 
  008c3: movq   xmm0,xmm2
  008c7: call   0xffff2526
  008cc: mov    QWORD PTR [rbp-0x48],rax
  008d0: movq   xmm0,xmm3
  008d4: call   0xffff2526
  008d9: mov    QWORD PTR [rbp-0x50],rax
  008dd: movq   xmm0,xmm4
  008e1: call   0xffff2526
  008e6: mov    QWORD PTR [rbp-0x58],rax
  008ea: mov    rdi,QWORD PTR [rbp-0x40]
  008ee: test   rdi,0x7
  008f5: jne    0x398a1
  008fb: cmp    DWORD PTR [rdi+0x4],0x26
  008ff: jne    0x398a1
  00905: cmp    DWORD PTR [rip+0xffffffffffff44c7],0x26        # 0xffff4dd3
  0090c: jne    0x398a1
  00912: mov    r9,0x0
  00919: sub    rsp,0x30
  0091d: movq   QWORD PTR [rsp],xmm2
  00922: movq   QWORD PTR [rsp+0x8],xmm3
  00928: movq   QWORD PTR [rsp+0x10],xmm4
  0092e: movq   QWORD PTR [rsp+0x18],xmm5
  00934: movq   QWORD PTR [rsp+0x20],xmm6
  0093a: mov    rdx,rdi
  0093d: mov    rax,QWORD PTR [rbx]
  00940: lea    rdi,[rsp-0x18]
  00945: mov    QWORD PTR [rdi],rax
  00948: mov    QWORD PTR [rbx],rdi
  0094b: mov    QWORD PTR [rsp-0x20],0x0
  00954: mov    QWORD PTR [rsp-0x38],rcx
  00959: lea    rcx,[rbp-0x48]
  0095d: mov    r8,0x3
  00964: call   0x398bd
  00969: lea    rdi,[rbp-0x8]
  0096d: mov    QWORD PTR [rbx],rdi
  00970: movq   xmm2,QWORD PTR [rsp]
  00975: movq   xmm3,QWORD PTR [rsp+0x8]
  0097b: movq   xmm4,QWORD PTR [rsp+0x10]
  00981: movq   xmm5,QWORD PTR [rsp+0x18]
  00987: movq   xmm6,QWORD PTR [rsp+0x20]
  0098d: add    rsp,0x30
  00991: movabs r13,0x55573cf950f0
  0099b: test   rax,rax
  0099e: je     0xffff23fa
  009a4: mov    QWORD PTR [rbp-0x38],rax
:00037 ret %2
  009a8: mov    rax,QWORD PTR [rbp-0x38]
  009ac: leave  
  009ad: ret    
==> start whole compile: <unnamed> FuncId(76) self_class:Scene start:[00000] bytecode:0x55573cfddc10
<== finished compile. elapsed:150.7µs
offset:Pos(58936) code: 8973 bytes  data: 355 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xd0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00064: ff 	mov    QWORD PTR [rbp-0xb8],rax
  0006b: ff 	mov    QWORD PTR [rbp-0xc0],rax
  00072:    	mov    rdi,QWORD PTR [rbp-0x28]
  00076: 00 	test   rdi,0x7
  0007d:    	jne    0x38ef8
  00083:    	cmp    DWORD PTR [rdi+0x4],0x2f
  00087:    	jne    0x38ef8
:00000 %14 = dynvar(4, %4)
  0008d:    	mov    rax,QWORD PTR [rbp-0x10]
  00091:    	mov    rax,QWORD PTR [rax]
  00094:    	mov    rax,QWORD PTR [rax]
  00097:    	mov    rax,QWORD PTR [rax]
  0009a:    	mov    rax,QWORD PTR [rax-0x38]
  0009e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00001 %14 = %14 + 1: i16                   [Integer][Integer]
  000a5: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000ac: 00 	test   rdi,0x1
  000b3:    	je     0x38f07
  000b9:    	add    rdi,0x2
  000bd:    	jo     0x38f07
  000c3: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00002 dynvar(4, %4) = %14
  000ca:    	mov    rax,QWORD PTR [rbp-0x10]
  000ce:    	mov    rax,QWORD PTR [rax]
  000d1:    	mov    rax,QWORD PTR [rax]
  000d4:    	mov    rax,QWORD PTR [rax]
  000d7: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000de:    	mov    QWORD PTR [rax-0x38],rdi
:00003 %14 = dynvar(4, %1)
  000e2:    	mov    rax,QWORD PTR [rbp-0x10]
  000e6:    	mov    rax,QWORD PTR [rax]
  000e9:    	mov    rax,QWORD PTR [rax]
  000ec:    	mov    rax,QWORD PTR [rax]
  000ef:    	mov    rax,QWORD PTR [rax-0x20]
  000f3: ff 	mov    QWORD PTR [rbp-0x98],rax
:00004 %2 = %14.call to_f()                 [Integer]
:00005 
  000fa: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00101: 00 	test   rdi,0x1
  00108:    	jne    0x125
  0010e: 00 	test   rdi,0x7
  00115:    	jne    0x38f16
  0011b:    	cmp    DWORD PTR [rdi+0x4],0x6
  0011f:    	jne    0x38f16
  00125: 26 	cmp    DWORD PTR [rip+0xffffffffffff42b0],0x26        # 0xffff43dc
  0012c:    	jne    0x38f16
  00132:    	sar    rdi,1
  00135:    	cvtsi2sd xmm2,rdi
:00007 %14 = dynvar(4, %2)
  0013a:    	mov    rax,QWORD PTR [rbp-0x10]
  0013e:    	mov    rax,QWORD PTR [rax]
  00141:    	mov    rax,QWORD PTR [rax]
  00144:    	mov    rax,QWORD PTR [rax]
  00147:    	mov    rax,QWORD PTR [rax-0x28]
  0014b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00008 %3 = %14.call to_f()                 [Integer]
:00009 
  00152: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00159: 00 	test   rdi,0x1
  00160:    	jne    0x17d
  00166: 00 	test   rdi,0x7
  0016d:    	jne    0x38f25
  00173:    	cmp    DWORD PTR [rdi+0x4],0x6
  00177:    	jne    0x38f25
  0017d: 26 	cmp    DWORD PTR [rip+0xffffffffffff4258],0x26        # 0xffff43dc
  00184:    	jne    0x38f25
  0018a:    	sar    rdi,1
  0018d:    	cvtsi2sd xmm3,rdi
:00011 %14 = dynvar(2, %1)
  00192:    	mov    rax,QWORD PTR [rbp-0x10]
  00196:    	mov    rax,QWORD PTR [rax]
  00199:    	mov    rax,QWORD PTR [rax-0x20]
  0019d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %4 = %14.call to_f()                 [Integer]
:00013 
  001a4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001ab: 00 	test   rdi,0x1
  001b2:    	jne    0x1cf
  001b8: 00 	test   rdi,0x7
  001bf:    	jne    0x38f41
  001c5:    	cmp    DWORD PTR [rdi+0x4],0x6
  001c9:    	jne    0x38f41
  001cf: 26 	cmp    DWORD PTR [rip+0xffffffffffff4206],0x26        # 0xffff43dc
  001d6:    	jne    0x38f41
  001dc:    	sar    rdi,1
  001df:    	cvtsi2sd xmm4,rdi
:00015 %14 = dynvar(3, %1)
  001e4:    	mov    rax,QWORD PTR [rbp-0x10]
  001e8:    	mov    rax,QWORD PTR [rax]
  001eb:    	mov    rax,QWORD PTR [rax]
  001ee:    	mov    rax,QWORD PTR [rax-0x20]
  001f2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00016 %5 = %14.call to_f()                 [Integer]
:00017 
  001f9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00200: 00 	test   rdi,0x1
  00207:    	jne    0x224
  0020d: 00 	test   rdi,0x7
  00214:    	jne    0x38f6a
  0021a:    	cmp    DWORD PTR [rdi+0x4],0x6
  0021e:    	jne    0x38f6a
  00224: 26 	cmp    DWORD PTR [rip+0xffffffffffff41b1],0x26        # 0xffff43dc
  0022b:    	jne    0x38f6a
  00231:    	sar    rdi,1
  00234:    	cvtsi2sd xmm5,rdi
:00019 %6 = %1.call to_f()                  [Integer]
:00020 
  00239:    	mov    rdi,QWORD PTR [rbp-0x30]
  0023d: 00 	test   rdi,0x1
  00244:    	jne    0x261
  0024a: 00 	test   rdi,0x7
  00251:    	jne    0x38fa0
  00257:    	cmp    DWORD PTR [rdi+0x4],0x6
  0025b:    	jne    0x38fa0
  00261: 26 	cmp    DWORD PTR [rip+0xffffffffffff4174],0x26        # 0xffff43dc
  00268:    	jne    0x38fa0
  0026e:    	sar    rdi,1
  00271:    	cvtsi2sd xmm6,rdi
:00022 %14 = dynvar(1, %1)
  00276:    	mov    rax,QWORD PTR [rbp-0x10]
  0027a:    	mov    rax,QWORD PTR [rax-0x20]
  0027e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00023 %7 = %14.call to_f()                 [Integer]
:00024 
  00285: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0028c: 00 	test   rdi,0x1
  00293:    	jne    0x2b0
  00299: 00 	test   rdi,0x7
  002a0:    	jne    0x38fe3
  002a6:    	cmp    DWORD PTR [rdi+0x4],0x6
  002aa:    	jne    0x38fe3
  002b0: 26 	cmp    DWORD PTR [rip+0xffffffffffff4125],0x26        # 0xffff43dc
  002b7:    	jne    0x38fe3
  002bd:    	sar    rdi,1
  002c0:    	cvtsi2sd xmm7,rdi
:00026 %14 = dynvar(4, %5)
  002c5:    	mov    rax,QWORD PTR [rbp-0x10]
  002c9:    	mov    rax,QWORD PTR [rax]
  002cc:    	mov    rax,QWORD PTR [rax]
  002cf:    	mov    rax,QWORD PTR [rax]
  002d2:    	mov    rax,QWORD PTR [rax-0x40]
  002d6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00027 %14 = %6 / %14                       [Float][Float]
  002dd: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002e4: 00 	test   rdi,0x1
  002eb:    	jne    0x39033
  002f1: 00 	test   rdi,0x2
  002f8:    	je     0x335
  002fe:    	xorps  xmm8,xmm8
  00302: 00 	movabs rax,0x8000000000000002
  0030c:    	cmp    rdi,rax
  0030f:    	je     0x348
  00315:    	mov    rax,rdi
  00318:    	sar    rax,0x3f
  0031c:    	add    rax,0x2
  00320:    	and    rdi,0xfffffffffffffffc
  00324:    	or     rdi,rax
  00327:    	rol    rdi,0x3d
  0032b:    	movq   xmm8,rdi
  00330:    	jmp    0x348
  00335:    	call   0xffff1a3c
  0033a:    	test   rax,rax
  0033d:    	je     0x39033
  00343:    	movq   xmm8,xmm0
  00348:    	movq   rax,xmm8
  0034d:    	test   rax,rax
  00350:    	je     0xffff1a28
  00356:    	movq   xmm0,xmm6
  0035a:    	divsd  xmm0,xmm8
  0035f:    	movq   xmm8,xmm0
:00028 %14 = %4 + %14                       [Float][Float]
  00364:    	addsd  xmm8,xmm4
:00029 %15 = literal[2.0]
  00369: 1f 	movq   xmm9,QWORD PTR [rip+0x1fa6]        # 0x2318
:00030 %15 = %2 / %15                       [Float][Float]
  00372:    	movq   rax,xmm9
  00377:    	test   rax,rax
  0037a:    	je     0xffff1a28
  00380:    	movq   xmm0,xmm2
  00384:    	divsd  xmm0,xmm9
  00389:    	movq   xmm9,xmm0
:00031 %14 = %14 - %15                      [Float][Float]
  0038e:    	subsd  xmm8,xmm9
:00032 %15 = literal[2.0]
  00393: 1f 	movq   xmm9,QWORD PTR [rip+0x1f8c]        # 0x2328
:00033 %15 = %2 / %15                       [Float][Float]
  0039c:    	movq   rax,xmm9
  003a1:    	test   rax,rax
  003a4:    	je     0xffff1a28
  003aa:    	movq   xmm0,xmm2
  003ae:    	divsd  xmm0,xmm9
  003b3:    	movq   xmm9,xmm0
:00034 %8 = %14 / %15                       [Float][Float]
  003b8:    	movq   xmm10,xmm8
  003bd:    	movq   rax,xmm9
  003c2:    	test   rax,rax
  003c5:    	je     0xffff1a28
  003cb:    	divsd  xmm10,xmm9
:00035 %14 = dynvar(4, %5)
  003d0:    	mov    rax,QWORD PTR [rbp-0x10]
  003d4:    	mov    rax,QWORD PTR [rax]
  003d7:    	mov    rax,QWORD PTR [rax]
  003da:    	mov    rax,QWORD PTR [rax]
  003dd:    	mov    rax,QWORD PTR [rax-0x40]
  003e1: ff 	mov    QWORD PTR [rbp-0x98],rax
:00036 %14 = %7 / %14                       [Float][Float]
  003e8: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003ef: 00 	test   rdi,0x1
  003f6:    	jne    0x39090
  003fc: 00 	test   rdi,0x2
  00403:    	je     0x440
  00409:    	xorps  xmm8,xmm8
  0040d: 00 	movabs rax,0x8000000000000002
  00417:    	cmp    rdi,rax
  0041a:    	je     0x453
  00420:    	mov    rax,rdi
  00423:    	sar    rax,0x3f
  00427:    	add    rax,0x2
  0042b:    	and    rdi,0xfffffffffffffffc
  0042f:    	or     rdi,rax
  00432:    	rol    rdi,0x3d
  00436:    	movq   xmm8,rdi
  0043b:    	jmp    0x453
  00440:    	call   0xffff1a3c
  00445:    	test   rax,rax
  00448:    	je     0x39090
  0044e:    	movq   xmm8,xmm0
  00453:    	movq   rax,xmm8
  00458:    	test   rax,rax
  0045b:    	je     0xffff1a28
  00461:    	movq   xmm0,xmm7
  00465:    	divsd  xmm0,xmm8
  0046a:    	movq   xmm8,xmm0
:00037 %14 = %5 + %14                       [Float][Float]
  0046f:    	addsd  xmm8,xmm5
:00038 %15 = literal[2.0]
  00474: 1e 	movq   xmm9,QWORD PTR [rip+0x1ebb]        # 0x2338
:00039 %15 = %3 / %15                       [Float][Float]
  0047d:    	movq   rax,xmm9
  00482:    	test   rax,rax
  00485:    	je     0xffff1a28
  0048b:    	movq   xmm0,xmm3
  0048f:    	divsd  xmm0,xmm9
  00494:    	movq   xmm9,xmm0
:00040 %14 = %14 - %15                      [Float][Float]
  00499:    	subsd  xmm8,xmm9
:00041 %14 = neg %14                        [Float]
  0049e: 00 	xorps  xmm8,XMMWORD PTR [rip+0x1ea2]        # 0x2348
:00042 %15 = literal[2.0]
  004a6: 1e 	movq   xmm9,QWORD PTR [rip+0x1ea9]        # 0x2358
:00043 %15 = %3 / %15                       [Float][Float]
  004af:    	movq   rax,xmm9
  004b4:    	test   rax,rax
  004b7:    	je     0xffff1a28
  004bd:    	movq   xmm0,xmm3
  004c1:    	divsd  xmm0,xmm9
  004c6:    	movq   xmm9,xmm0
:00044 %9 = %14 / %15                       [Float][Float]
  004cb:    	movq   xmm11,xmm8
  004d0:    	movq   rax,xmm9
  004d5:    	test   rax,rax
  004d8:    	je     0xffff1a28
  004de:    	divsd  xmm11,xmm9
:00045 %15 = const[Vec]                     [Vec]
  004e3: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3efe]        # 0xffff43e8
  004ea: 00 	cmp    rax,QWORD PTR [rip+0x1e87]        # 0x2378
  004f1:    	jne    0x3910c
  004f7: 00 	mov    rax,QWORD PTR [rip+0x1e6a]        # 0x2368
  004fe: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00046 %16 = %8
:00047 %17 = %9
:00048 %18 = literal[-1.0]
  00505: 1e 	movq   xmm9,QWORD PTR [rip+0x1e7a]        # 0x2388
:00049 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
:00050 
  0050e:    	movq   xmm0,xmm10
  00513:    	call   0xffff1b2f
  00518: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0051f:    	movq   xmm0,xmm11
  00524:    	call   0xffff1b2f
  00529: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00530:    	movq   xmm0,xmm9
  00535:    	call   0xffff1b2f
  0053a: ff 	mov    QWORD PTR [rbp-0xb8],rax
  00541: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00548: 00 	test   rdi,0x7
  0054f:    	jne    0x391ca
  00555:    	cmp    DWORD PTR [rdi+0x4],0x26
  00559:    	jne    0x391ca
  0055f: 26 	cmp    DWORD PTR [rip+0xffffffffffff3e76],0x26        # 0xffff43dc
  00566:    	jne    0x391ca
  0056c: 00 	mov    r9,0x0
  00573:    	sub    rsp,0x50
  00577:    	movq   QWORD PTR [rsp],xmm2
  0057c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00582:    	movq   QWORD PTR [rsp+0x10],xmm4
  00588:    	movq   QWORD PTR [rsp+0x18],xmm5
  0058e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00594:    	movq   QWORD PTR [rsp+0x28],xmm7
  0059a: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  005a1: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  005a8: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  005af:    	mov    rdx,rdi
  005b2:    	mov    rax,QWORD PTR [rbx]
  005b5:    	lea    rdi,[rsp-0x18]
  005ba:    	mov    QWORD PTR [rdi],rax
  005bd:    	mov    QWORD PTR [rbx],rdi
  005c0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  005c9:    	mov    QWORD PTR [rsp-0x38],rcx
  005ce: ff 	lea    rcx,[rbp-0xa8]
  005d5: 00 	mov    r8,0x3
  005dc:    	call   0x39243
  005e1:    	lea    rdi,[rbp-0x8]
  005e5:    	mov    QWORD PTR [rbx],rdi
  005e8:    	movq   xmm2,QWORD PTR [rsp]
  005ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005ff:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00605:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0060b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00612: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00619: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00620:    	add    rsp,0x50
  00624: 57 	movabs r13,0x55573cfddf40
  0062e:    	test   rax,rax
  00631:    	je     0xffff1a03
  00637: ff 	mov    QWORD PTR [rbp-0x98],rax
:00052 %10 = %14.call vnormalize()          [Vec]
:00053 
  0063e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00645: 00 	test   rdi,0x7
  0064c:    	jne    0x39275
  00652:    	cmp    DWORD PTR [rdi+0x4],0x25
  00656:    	jne    0x39275
  0065c: 26 	cmp    DWORD PTR [rip+0xffffffffffff3d79],0x26        # 0xffff43dc
  00663:    	jne    0x39275
  00669:    	sub    rsp,0x50
  0066d:    	movq   QWORD PTR [rsp],xmm2
  00672:    	movq   QWORD PTR [rsp+0x8],xmm3
  00678:    	movq   QWORD PTR [rsp+0x10],xmm4
  0067e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00684:    	movq   QWORD PTR [rsp+0x20],xmm6
  0068a:    	movq   QWORD PTR [rsp+0x28],xmm7
  00690: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00697: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0069e: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  006a5:    	mov    rax,QWORD PTR [rbx]
  006a8:    	lea    rdi,[rsp-0x18]
  006ad:    	mov    QWORD PTR [rdi],rax
  006b0:    	mov    QWORD PTR [rbx],rdi
  006b3: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006bc:    	mov    QWORD PTR [rsp-0x38],rcx
  006c1: ff 	mov    rax,QWORD PTR [rbp-0x98]
  006c8:    	mov    QWORD PTR [rsp-0x38],rax
  006cd: 00 	mov    rdi,0x0
  006d4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006dd: 07 	movabs rax,0x70000003d
  006e7:    	mov    QWORD PTR [rsp-0x28],rax
  006ec: 57 	movabs r13,0x55573cfa76a0
  006f6:    	call   0xffff4ca1
  006fb:    	lea    rdi,[rbp-0x8]
  006ff:    	mov    QWORD PTR [rbx],rdi
  00702:    	movq   xmm2,QWORD PTR [rsp]
  00707:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0070d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00713:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00719:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0071f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00725: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0072c: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00733: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0073a:    	add    rsp,0x50
  0073e: 57 	movabs r13,0x55573cfddf70
  00748:    	test   rax,rax
  0074b:    	je     0xffff1a03
  00751:    	mov    QWORD PTR [rbp-0x78],rax
:00055 %14 = const[Ray]                     [Ray]
  00755: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3c8c]        # 0xffff43e8
  0075c: 00 	cmp    rax,QWORD PTR [rip+0x1c45]        # 0x23a8
  00763:    	jne    0x392ee
  00769: 00 	mov    rax,QWORD PTR [rip+0x1c28]        # 0x2398
  00770: ff 	mov    QWORD PTR [rbp-0x98],rax
:00056 %16 = const[Vec]                     [Vec]
  00777: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3c6a]        # 0xffff43e8
  0077e: 00 	cmp    rax,QWORD PTR [rip+0x1c43]        # 0x23c8
  00785:    	jne    0x393ac
  0078b: 00 	mov    rax,QWORD PTR [rip+0x1c26]        # 0x23b8
  00792: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00057 %17 = literal[0.0]
  00799: 1c 	movq   xmm8,QWORD PTR [rip+0x1c36]        # 0x23d8
:00058 %18 = literal[0.0]
  007a2: 1c 	movq   xmm9,QWORD PTR [rip+0x1c3d]        # 0x23e8
:00059 %19 = literal[0.0]
  007ab: 1c 	movq   xmm12,QWORD PTR [rip+0x1c44]        # 0x23f8
:00060 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
:00061 
  007b4:    	movq   xmm0,xmm8
  007b9:    	call   0xffff1b2f
  007be: ff 	mov    QWORD PTR [rbp-0xb0],rax
  007c5:    	movq   xmm0,xmm9
  007ca:    	call   0xffff1b2f
  007cf: ff 	mov    QWORD PTR [rbp-0xb8],rax
  007d6:    	movq   xmm0,xmm12
  007db:    	call   0xffff1b2f
  007e0: ff 	mov    QWORD PTR [rbp-0xc0],rax
  007e7: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  007ee: 00 	test   rdi,0x7
  007f5:    	jne    0x3946a
  007fb:    	cmp    DWORD PTR [rdi+0x4],0x26
  007ff:    	jne    0x3946a
  00805: 26 	cmp    DWORD PTR [rip+0xffffffffffff3bd0],0x26        # 0xffff43dc
  0080c:    	jne    0x3946a
  00812: 00 	mov    r9,0x0
  00819:    	sub    rsp,0x60
  0081d:    	movq   QWORD PTR [rsp],xmm2
  00822:    	movq   QWORD PTR [rsp+0x8],xmm3
  00828:    	movq   QWORD PTR [rsp+0x10],xmm4
  0082e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00834:    	movq   QWORD PTR [rsp+0x20],xmm6
  0083a:    	movq   QWORD PTR [rsp+0x28],xmm7
  00840: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00847: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0084e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00855: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0085c: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00863:    	mov    rdx,rdi
  00866:    	mov    rax,QWORD PTR [rbx]
  00869:    	lea    rdi,[rsp-0x18]
  0086e:    	mov    QWORD PTR [rdi],rax
  00871:    	mov    QWORD PTR [rbx],rdi
  00874: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0087d:    	mov    QWORD PTR [rsp-0x38],rcx
  00882: ff 	lea    rcx,[rbp-0xb0]
  00889: 00 	mov    r8,0x3
  00890:    	call   0x394e3
  00895:    	lea    rdi,[rbp-0x8]
  00899:    	mov    QWORD PTR [rbx],rdi
  0089c:    	movq   xmm2,QWORD PTR [rsp]
  008a1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008a7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008ad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008b3:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008b9:    	movq   xmm7,QWORD PTR [rsp+0x28]
  008bf: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  008c6: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  008cd: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  008d4: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  008db: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  008e2:    	add    rsp,0x60
  008e6: 57 	movabs r13,0x55573cfddff0
  008f0:    	test   rax,rax
  008f3:    	je     0xffff1a03
  008f9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00063 %16 = %10
  00900:    	mov    rax,QWORD PTR [rbp-0x78]
  00904: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00064 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
:00065 
  0090b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00912: 00 	test   rdi,0x7
  00919:    	jne    0x39515
  0091f:    	cmp    DWORD PTR [rdi+0x4],0x2c
  00923:    	jne    0x39515
  00929: 26 	cmp    DWORD PTR [rip+0xffffffffffff3aac],0x26        # 0xffff43dc
  00930:    	jne    0x39515
  00936: 00 	mov    r9,0x0
  0093d:    	sub    rsp,0x60
  00941:    	movq   QWORD PTR [rsp],xmm2
  00946:    	movq   QWORD PTR [rsp+0x8],xmm3
  0094c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00952:    	movq   QWORD PTR [rsp+0x18],xmm5
  00958:    	movq   QWORD PTR [rsp+0x20],xmm6
  0095e:    	movq   QWORD PTR [rsp+0x28],xmm7
  00964: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0096b: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00972: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00979: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00980: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00987:    	mov    rdx,rdi
  0098a:    	mov    rax,QWORD PTR [rbx]
  0098d:    	lea    rdi,[rsp-0x18]
  00992:    	mov    QWORD PTR [rdi],rax
  00995:    	mov    QWORD PTR [rbx],rdi
  00998: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009a1:    	mov    QWORD PTR [rsp-0x38],rcx
  009a6: ff 	lea    rcx,[rbp-0xa0]
  009ad: 00 	mov    r8,0x2
  009b4:    	call   0x3958e
  009b9:    	lea    rdi,[rbp-0x8]
  009bd:    	mov    QWORD PTR [rbx],rdi
  009c0:    	movq   xmm2,QWORD PTR [rsp]
  009c5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009cb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009d1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009d7:    	movq   xmm6,QWORD PTR [rsp+0x20]
  009dd:    	movq   xmm7,QWORD PTR [rsp+0x28]
  009e3: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  009ea: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  009f1: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  009f8: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  009ff: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00a06:    	add    rsp,0x60
  00a0a: 57 	movabs r13,0x55573cfde030
  00a14:    	test   rax,rax
  00a17:    	je     0xffff1a03
  00a1d:    	mov    QWORD PTR [rbp-0x80],rax
:00067 %14 = const[Isect]                   [Isect]
  00a21: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff39c0]        # 0xffff43e8
  00a28: 00 	cmp    rax,QWORD PTR [rip+0x19e9]        # 0x2418
  00a2f:    	jne    0x395c0
  00a35: 00 	mov    rax,QWORD PTR [rip+0x19cc]        # 0x2408
  00a3c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00068 %12 = %14.call new()                 [#<Class:Isect>]
:00069 
  00a43: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a4a: 00 	test   rdi,0x7
  00a51:    	jne    0x3969a
  00a57:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00a5b:    	jne    0x3969a
  00a61: 26 	cmp    DWORD PTR [rip+0xffffffffffff3974],0x26        # 0xffff43dc
  00a68:    	jne    0x3969a
  00a6e: 00 	mov    r9,0x0
  00a75:    	sub    rsp,0x60
  00a79:    	movq   QWORD PTR [rsp],xmm2
  00a7e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a84:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a8a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a90:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a96:    	movq   QWORD PTR [rsp+0x28],xmm7
  00a9c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00aa3: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00aaa: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ab1: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ab8: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00abf:    	mov    rdx,rdi
  00ac2:    	mov    rax,QWORD PTR [rbx]
  00ac5:    	lea    rdi,[rsp-0x18]
  00aca:    	mov    QWORD PTR [rdi],rax
  00acd:    	mov    QWORD PTR [rbx],rdi
  00ad0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ad9:    	mov    QWORD PTR [rsp-0x38],rcx
  00ade: ff 	lea    rcx,[rbp-0xa0]
  00ae5: 00 	mov    r8,0x0
  00aec:    	call   0x39713
  00af1:    	lea    rdi,[rbp-0x8]
  00af5:    	mov    QWORD PTR [rbx],rdi
  00af8:    	movq   xmm2,QWORD PTR [rsp]
  00afd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b03:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b09:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b0f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00b15:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00b1b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00b22: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00b29: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00b30: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00b37: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00b3e:    	add    rsp,0x60
  00b42: 57 	movabs r13,0x55573cfde070
  00b4c:    	test   rax,rax
  00b4f:    	je     0xffff1a03
  00b55: ff 	mov    QWORD PTR [rbp-0x88],rax
:00071 %14 = @spheres: Scene[IvarId(0)]
  00b5c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b60:    	cmp    WORD PTR [rdi+0x2],0x3
  00b65:    	jne    0x39745
  00b6b:    	mov    rax,QWORD PTR [rdi+0x10]
  00b6f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 %15 = 0: i32
  00b76: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00073 %14 = %14.[%15]
  00b81:    	sub    rsp,0x60
  00b85:    	movq   QWORD PTR [rsp],xmm2
  00b8a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b90:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b96:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b9c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00ba2:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ba8: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00baf: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00bb6: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00bbd: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00bc4: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00bcb: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00bd2: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00bd9:    	mov    rdi,rbx
  00bdc:    	mov    rsi,r12
  00bdf: 57 	movabs rax,0x55573c95cc80
  00be9:    	call   rax
  00beb:    	movq   xmm2,QWORD PTR [rsp]
  00bf0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bf6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00bfc:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c02:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00c08:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00c0e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00c15: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00c1c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00c23: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00c2a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00c31:    	add    rsp,0x60
  00c35: 57 	movabs r13,0x55573cfde0b0
  00c3f:    	test   rax,rax
  00c42:    	je     0xffff1a03
  00c48: ff 	mov    QWORD PTR [rbp-0x98],rax
:00074 %15 = %11
  00c4f:    	mov    rax,QWORD PTR [rbp-0x80]
  00c53: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00075 %16 = %12
  00c5a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c61: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00076 _ = %14.call intersect(%15; 2)       [Sphere]
:00077 
  00c68: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c6f: 00 	test   rdi,0x7
  00c76:    	jne    0x397ef
  00c7c:    	cmp    DWORD PTR [rdi+0x4],0x27
  00c80:    	jne    0x397ef
  00c86: 26 	cmp    DWORD PTR [rip+0xffffffffffff374f],0x26        # 0xffff43dc
  00c8d:    	jne    0x397ef
  00c93:    	sub    rsp,0x60
  00c97:    	movq   QWORD PTR [rsp],xmm2
  00c9c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ca2:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ca8:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cae:    	movq   QWORD PTR [rsp+0x20],xmm6
  00cb4:    	movq   QWORD PTR [rsp+0x28],xmm7
  00cba: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00cc1: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00cc8: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ccf: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00cd6: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00cdd:    	mov    rax,QWORD PTR [rbx]
  00ce0:    	lea    rdi,[rsp-0x18]
  00ce5:    	mov    QWORD PTR [rdi],rax
  00ce8:    	mov    QWORD PTR [rbx],rdi
  00ceb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cf4:    	mov    QWORD PTR [rsp-0x38],rcx
  00cf9: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00d00:    	mov    QWORD PTR [rsp-0x38],rax
  00d05: 00 	mov    rdi,0x2
  00d0c: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00d13:    	mov    QWORD PTR [rsp-0x40],rax
  00d18: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00d1f:    	mov    QWORD PTR [rsp-0x48],rax
  00d24: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d2d: 10 	movabs rax,0x100000003f
  00d37:    	mov    QWORD PTR [rsp-0x28],rax
  00d3c: 57 	movabs r13,0x55573cf976a0
  00d46:    	call   0xffff4fa9
  00d4b:    	lea    rdi,[rbp-0x8]
  00d4f:    	mov    QWORD PTR [rbx],rdi
  00d52:    	movq   xmm2,QWORD PTR [rsp]
  00d57:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d5d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d63:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d69:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d6f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d75: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d7c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d83: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d8a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00d91: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00d98:    	add    rsp,0x60
  00d9c: 57 	movabs r13,0x55573cfde0f0
  00da6:    	test   rax,rax
  00da9:    	je     0xffff1a03
:00079 %14 = @spheres: Scene[IvarId(0)]
  00daf:    	mov    rdi,QWORD PTR [rbp-0x28]
  00db3:    	cmp    WORD PTR [rdi+0x2],0x3
  00db8:    	jne    0x39868
  00dbe:    	mov    rax,QWORD PTR [rdi+0x10]
  00dc2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 %15 = 1: i32
  00dc9: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00081 %14 = %14.[%15]
  00dd4:    	sub    rsp,0x60
  00dd8:    	movq   QWORD PTR [rsp],xmm2
  00ddd:    	movq   QWORD PTR [rsp+0x8],xmm3
  00de3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00de9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00def:    	movq   QWORD PTR [rsp+0x20],xmm6
  00df5:    	movq   QWORD PTR [rsp+0x28],xmm7
  00dfb: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e02: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e09: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00e10: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00e17: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00e1e: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00e25: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00e2c:    	mov    rdi,rbx
  00e2f:    	mov    rsi,r12
  00e32: 57 	movabs rax,0x55573c95cc80
  00e3c:    	call   rax
  00e3e:    	movq   xmm2,QWORD PTR [rsp]
  00e43:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e49:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e4f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e55:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e5b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e61: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e68: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e6f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e76: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e7d: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e84:    	add    rsp,0x60
  00e88: 57 	movabs r13,0x55573cfde130
  00e92:    	test   rax,rax
  00e95:    	je     0xffff1a03
  00e9b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00082 %15 = %11
  00ea2:    	mov    rax,QWORD PTR [rbp-0x80]
  00ea6: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00083 %16 = %12
  00ead: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00eb4: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00084 _ = %14.call intersect(%15; 2)       [Sphere]
:00085 
  00ebb: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ec2: 00 	test   rdi,0x7
  00ec9:    	jne    0x39912
  00ecf:    	cmp    DWORD PTR [rdi+0x4],0x27
  00ed3:    	jne    0x39912
  00ed9: 26 	cmp    DWORD PTR [rip+0xffffffffffff34fc],0x26        # 0xffff43dc
  00ee0:    	jne    0x39912
  00ee6:    	sub    rsp,0x60
  00eea:    	movq   QWORD PTR [rsp],xmm2
  00eef:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ef5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00efb:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f01:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f07:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f0d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f14: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f1b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00f22: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00f29: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00f30:    	mov    rax,QWORD PTR [rbx]
  00f33:    	lea    rdi,[rsp-0x18]
  00f38:    	mov    QWORD PTR [rdi],rax
  00f3b:    	mov    QWORD PTR [rbx],rdi
  00f3e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f47:    	mov    QWORD PTR [rsp-0x38],rcx
  00f4c: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00f53:    	mov    QWORD PTR [rsp-0x38],rax
  00f58: 00 	mov    rdi,0x2
  00f5f: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f66:    	mov    QWORD PTR [rsp-0x40],rax
  00f6b: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f72:    	mov    QWORD PTR [rsp-0x48],rax
  00f77: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f80: 10 	movabs rax,0x100000003f
  00f8a:    	mov    QWORD PTR [rsp-0x28],rax
  00f8f: 57 	movabs r13,0x55573cf976a0
  00f99:    	call   0xffff4fa9
  00f9e:    	lea    rdi,[rbp-0x8]
  00fa2:    	mov    QWORD PTR [rbx],rdi
  00fa5:    	movq   xmm2,QWORD PTR [rsp]
  00faa:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fb0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fb6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fbc:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00fc2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00fc8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00fcf: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00fd6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00fdd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00fe4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00feb:    	add    rsp,0x60
  00fef: 57 	movabs r13,0x55573cfde170
  00ff9:    	test   rax,rax
  00ffc:    	je     0xffff1a03
:00087 %14 = @spheres: Scene[IvarId(0)]
  01002:    	mov    rdi,QWORD PTR [rbp-0x28]
  01006:    	cmp    WORD PTR [rdi+0x2],0x3
  0100b:    	jne    0x3998b
  01011:    	mov    rax,QWORD PTR [rdi+0x10]
  01015: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 2: i32
  0101c: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00089 %14 = %14.[%15]
  01027:    	sub    rsp,0x60
  0102b:    	movq   QWORD PTR [rsp],xmm2
  01030:    	movq   QWORD PTR [rsp+0x8],xmm3
  01036:    	movq   QWORD PTR [rsp+0x10],xmm4
  0103c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01042:    	movq   QWORD PTR [rsp+0x20],xmm6
  01048:    	movq   QWORD PTR [rsp+0x28],xmm7
  0104e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01055: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0105c: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01063: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0106a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01071: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01078: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  0107f:    	mov    rdi,rbx
  01082:    	mov    rsi,r12
  01085: 57 	movabs rax,0x55573c95cc80
  0108f:    	call   rax
  01091:    	movq   xmm2,QWORD PTR [rsp]
  01096:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0109c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010a2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010a8:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010ae:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010b4: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010bb: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  010c2: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  010c9: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  010d0: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  010d7:    	add    rsp,0x60
  010db: 57 	movabs r13,0x55573cfde1b0
  010e5:    	test   rax,rax
  010e8:    	je     0xffff1a03
  010ee: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %15 = %11
  010f5:    	mov    rax,QWORD PTR [rbp-0x80]
  010f9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00091 %16 = %12
  01100: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01107: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00092 _ = %14.call intersect(%15; 2)       [Sphere]
:00093 
  0110e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01115: 00 	test   rdi,0x7
  0111c:    	jne    0x39a35
  01122:    	cmp    DWORD PTR [rdi+0x4],0x27
  01126:    	jne    0x39a35
  0112c: 26 	cmp    DWORD PTR [rip+0xffffffffffff32a9],0x26        # 0xffff43dc
  01133:    	jne    0x39a35
  01139:    	sub    rsp,0x60
  0113d:    	movq   QWORD PTR [rsp],xmm2
  01142:    	movq   QWORD PTR [rsp+0x8],xmm3
  01148:    	movq   QWORD PTR [rsp+0x10],xmm4
  0114e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01154:    	movq   QWORD PTR [rsp+0x20],xmm6
  0115a:    	movq   QWORD PTR [rsp+0x28],xmm7
  01160: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01167: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0116e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01175: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0117c: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01183:    	mov    rax,QWORD PTR [rbx]
  01186:    	lea    rdi,[rsp-0x18]
  0118b:    	mov    QWORD PTR [rdi],rax
  0118e:    	mov    QWORD PTR [rbx],rdi
  01191: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0119a:    	mov    QWORD PTR [rsp-0x38],rcx
  0119f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  011a6:    	mov    QWORD PTR [rsp-0x38],rax
  011ab: 00 	mov    rdi,0x2
  011b2: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  011b9:    	mov    QWORD PTR [rsp-0x40],rax
  011be: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  011c5:    	mov    QWORD PTR [rsp-0x48],rax
  011ca: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011d3: 10 	movabs rax,0x100000003f
  011dd:    	mov    QWORD PTR [rsp-0x28],rax
  011e2: 57 	movabs r13,0x55573cf976a0
  011ec:    	call   0xffff4fa9
  011f1:    	lea    rdi,[rbp-0x8]
  011f5:    	mov    QWORD PTR [rbx],rdi
  011f8:    	movq   xmm2,QWORD PTR [rsp]
  011fd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01203:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01209:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0120f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01215:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0121b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01222: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01229: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01230: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01237: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0123e:    	add    rsp,0x60
  01242: 57 	movabs r13,0x55573cfde1f0
  0124c:    	test   rax,rax
  0124f:    	je     0xffff1a03
:00095 %14 = @plane: Scene[IvarId(1)]
  01255:    	mov    rdi,QWORD PTR [rbp-0x28]
  01259:    	cmp    WORD PTR [rdi+0x2],0x3
  0125e:    	jne    0x39aae
  01264:    	mov    rax,QWORD PTR [rdi+0x18]
  01268: ff 	mov    QWORD PTR [rbp-0x98],rax
:00096 %15 = %11
  0126f:    	mov    rax,QWORD PTR [rbp-0x80]
  01273: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %16 = %12
  0127a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01281: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00098 _ = %14.call intersect(%15; 2)       [Plane]
:00099 
  01288: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0128f: 00 	test   rdi,0x7
  01296:    	jne    0x39b58
  0129c:    	cmp    DWORD PTR [rdi+0x4],0x29
  012a0:    	jne    0x39b58
  012a6: 26 	cmp    DWORD PTR [rip+0xffffffffffff312f],0x26        # 0xffff43dc
  012ad:    	jne    0x39b58
  012b3:    	sub    rsp,0x60
  012b7:    	movq   QWORD PTR [rsp],xmm2
  012bc:    	movq   QWORD PTR [rsp+0x8],xmm3
  012c2:    	movq   QWORD PTR [rsp+0x10],xmm4
  012c8:    	movq   QWORD PTR [rsp+0x18],xmm5
  012ce:    	movq   QWORD PTR [rsp+0x20],xmm6
  012d4:    	movq   QWORD PTR [rsp+0x28],xmm7
  012da: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  012e1: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  012e8: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  012ef: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  012f6: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  012fd:    	mov    rax,QWORD PTR [rbx]
  01300:    	lea    rdi,[rsp-0x18]
  01305:    	mov    QWORD PTR [rdi],rax
  01308:    	mov    QWORD PTR [rbx],rdi
  0130b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01314:    	mov    QWORD PTR [rsp-0x38],rcx
  01319: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01320:    	mov    QWORD PTR [rsp-0x38],rax
  01325: 00 	mov    rdi,0x2
  0132c: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01333:    	mov    QWORD PTR [rsp-0x40],rax
  01338: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  0133f:    	mov    QWORD PTR [rsp-0x48],rax
  01344: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0134d: 0e 	movabs rax,0xe00000041
  01357:    	mov    QWORD PTR [rsp-0x28],rax
  0135c: 57 	movabs r13,0x55573cf99540
  01366:    	call   0xffff5596
  0136b:    	lea    rdi,[rbp-0x8]
  0136f:    	mov    QWORD PTR [rbx],rdi
  01372:    	movq   xmm2,QWORD PTR [rsp]
  01377:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0137d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01383:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01389:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0138f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01395: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0139c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  013a3: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  013aa: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  013b1: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  013b8:    	add    rsp,0x60
  013bc: 57 	movabs r13,0x55573cfde250
  013c6:    	test   rax,rax
  013c9:    	je     0xffff1a03
:00101 %14 = %12.call hit()                 [Isect]
:00102 
  013cf: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  013d6: 00 	test   rdi,0x7
  013dd:    	jne    0x39bd1
  013e3:    	cmp    DWORD PTR [rdi+0x4],0x2d
  013e7:    	jne    0x39bd1
  013ed: 26 	cmp    DWORD PTR [rip+0xffffffffffff2fe8],0x26        # 0xffff43dc
  013f4:    	jne    0x39bd1
  013fa:    	mov    esi,DWORD PTR [rip+0x1024]        # 0x2424
  01400:    	cmp    esi,0xffffffff
  01403:    	je     0x39c4a
  01409:    	cmp    WORD PTR [rdi+0x2],0x3
  0140e:    	jne    0x1427
  01414:    	cmp    esi,0x6
  01417:    	jge    0x1427
  0141d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01422:    	jmp    0x14c7
  01427:    	sub    rsp,0x60
  0142b:    	movq   QWORD PTR [rsp],xmm2
  01430:    	movq   QWORD PTR [rsp+0x8],xmm3
  01436:    	movq   QWORD PTR [rsp+0x10],xmm4
  0143c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01442:    	movq   QWORD PTR [rsp+0x20],xmm6
  01448:    	movq   QWORD PTR [rsp+0x28],xmm7
  0144e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01455: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0145c: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01463: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0146a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01471: 57 	movabs rax,0x55573c900b50
  0147b:    	call   rax
  0147d:    	movq   xmm2,QWORD PTR [rsp]
  01482:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01488:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0148e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01494:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0149a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014a0: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  014a7: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  014ae: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  014b5: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  014bc: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  014c3:    	add    rsp,0x60
  014c7: ff 	mov    QWORD PTR [rbp-0x98],rax
:00104 condnotbr %14 =>:00147
  014ce: ff 	mov    rax,QWORD PTR [rbp-0x98]
  014d5:    	or     rax,0x10
  014d9:    	cmp    rax,0x14
  014dd:    	je     0x22f9
:00105 %14 = %12
  014e3: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014ea: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 %13 = %0.call ambient_occlusion(%14; 1) [Scene]
:00107 
  014f1:    	mov    rdi,QWORD PTR [rbp-0x28]
  014f5: 26 	cmp    DWORD PTR [rip+0xffffffffffff2ee0],0x26        # 0xffff43dc
  014fc:    	jne    0x39d07
  01502:    	sub    rsp,0x60
  01506:    	movq   QWORD PTR [rsp],xmm2
  0150b:    	movq   QWORD PTR [rsp+0x8],xmm3
  01511:    	movq   QWORD PTR [rsp+0x10],xmm4
  01517:    	movq   QWORD PTR [rsp+0x18],xmm5
  0151d:    	movq   QWORD PTR [rsp+0x20],xmm6
  01523:    	movq   QWORD PTR [rsp+0x28],xmm7
  01529: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01530: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01537: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0153e: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01545: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0154c:    	mov    rax,QWORD PTR [rbx]
  0154f:    	lea    rdi,[rsp-0x18]
  01554:    	mov    QWORD PTR [rdi],rax
  01557:    	mov    QWORD PTR [rbx],rdi
  0155a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01563:    	mov    QWORD PTR [rsp-0x38],rcx
  01568:    	mov    rax,QWORD PTR [rbp-0x28]
  0156c:    	mov    QWORD PTR [rsp-0x38],rax
  01571: 00 	mov    rdi,0x1
  01578: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0157f:    	mov    QWORD PTR [rsp-0x40],rax
  01584: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0158d: 0e 	movabs rax,0xe00000045
  01597:    	mov    QWORD PTR [rsp-0x28],rax
  0159c: 57 	movabs r13,0x55573cf99c50
  015a6:    	call   0xffffb422
  015ab:    	lea    rdi,[rbp-0x8]
  015af:    	mov    QWORD PTR [rbx],rdi
  015b2:    	movq   xmm2,QWORD PTR [rsp]
  015b7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015bd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015c3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015c9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015cf:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015d5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  015dc: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015e3: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015ea: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  015f1: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  015f8:    	add    rsp,0x60
  015fc: 57 	movabs r13,0x55573cfde2d0
  01606:    	test   rax,rax
  01609:    	je     0xffff1a03
  0160f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00109 %14 = dynvar(2, %2)
  01616:    	mov    rax,QWORD PTR [rbp-0x10]
  0161a:    	mov    rax,QWORD PTR [rax]
  0161d:    	mov    rax,QWORD PTR [rax-0x28]
  01621: ff 	mov    QWORD PTR [rbp-0x98],rax
:00110 %16 = dynvar(2, %2)
  01628:    	mov    rax,QWORD PTR [rbp-0x10]
  0162c:    	mov    rax,QWORD PTR [rax]
  0162f:    	mov    rax,QWORD PTR [rax-0x28]
  01633: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00111 %15 = %16.call x()                   [Vec]
:00112 
  0163a: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01641: 00 	test   rdi,0x7
  01648:    	jne    0x39d80
  0164e:    	cmp    DWORD PTR [rdi+0x4],0x25
  01652:    	jne    0x39d80
  01658: 26 	cmp    DWORD PTR [rip+0xffffffffffff2d7d],0x26        # 0xffff43dc
  0165f:    	jne    0x39d80
  01665:    	mov    esi,DWORD PTR [rip+0xdc1]        # 0x242c
  0166b:    	cmp    esi,0xffffffff
  0166e:    	je     0x39df9
  01674:    	cmp    WORD PTR [rdi+0x2],0x3
  01679:    	jne    0x1692
  0167f:    	cmp    esi,0x6
  01682:    	jge    0x1692
  01688:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0168d:    	jmp    0x1732
  01692:    	sub    rsp,0x60
  01696:    	movq   QWORD PTR [rsp],xmm2
  0169b:    	movq   QWORD PTR [rsp+0x8],xmm3
  016a1:    	movq   QWORD PTR [rsp+0x10],xmm4
  016a7:    	movq   QWORD PTR [rsp+0x18],xmm5
  016ad:    	movq   QWORD PTR [rsp+0x20],xmm6
  016b3:    	movq   QWORD PTR [rsp+0x28],xmm7
  016b9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  016c0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  016c7: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  016ce: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  016d5: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  016dc: 57 	movabs rax,0x55573c900b50
  016e6:    	call   rax
  016e8:    	movq   xmm2,QWORD PTR [rsp]
  016ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016ff:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01705:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0170b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01712: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01719: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01720: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01727: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0172e:    	add    rsp,0x60
  01732: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00114 %16 = %13.call x()                   [Vec]
:00115 
  01739: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01740: 00 	test   rdi,0x7
  01747:    	jne    0x39eb6
  0174d:    	cmp    DWORD PTR [rdi+0x4],0x25
  01751:    	jne    0x39eb6
  01757: 26 	cmp    DWORD PTR [rip+0xffffffffffff2c7e],0x26        # 0xffff43dc
  0175e:    	jne    0x39eb6
  01764:    	mov    esi,DWORD PTR [rip+0xcca]        # 0x2434
  0176a:    	cmp    esi,0xffffffff
  0176d:    	je     0x39f2f
  01773:    	cmp    WORD PTR [rdi+0x2],0x3
  01778:    	jne    0x1791
  0177e:    	cmp    esi,0x6
  01781:    	jge    0x1791
  01787:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0178c:    	jmp    0x1831
  01791:    	sub    rsp,0x60
  01795:    	movq   QWORD PTR [rsp],xmm2
  0179a:    	movq   QWORD PTR [rsp+0x8],xmm3
  017a0:    	movq   QWORD PTR [rsp+0x10],xmm4
  017a6:    	movq   QWORD PTR [rsp+0x18],xmm5
  017ac:    	movq   QWORD PTR [rsp+0x20],xmm6
  017b2:    	movq   QWORD PTR [rsp+0x28],xmm7
  017b8: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  017bf: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  017c6: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  017cd: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  017d4: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  017db: 57 	movabs rax,0x55573c900b50
  017e5:    	call   rax
  017e7:    	movq   xmm2,QWORD PTR [rsp]
  017ec:    	movq   xmm3,QWORD PTR [rsp+0x8]
  017f2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  017f8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  017fe:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01804:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0180a: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01811: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01818: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0181f: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01826: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0182d:    	add    rsp,0x60
  01831: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00117 %15 = %15 + %16                      [Float][Float]
  01838: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0183f: 00 	test   rdi,0x1
  01846:    	jne    0x39fec
  0184c: 00 	test   rdi,0x2
  01853:    	je     0x1890
  01859:    	xorps  xmm13,xmm13
  0185d: 00 	movabs rax,0x8000000000000002
  01867:    	cmp    rdi,rax
  0186a:    	je     0x18a3
  01870:    	mov    rax,rdi
  01873:    	sar    rax,0x3f
  01877:    	add    rax,0x2
  0187b:    	and    rdi,0xfffffffffffffffc
  0187f:    	or     rdi,rax
  01882:    	rol    rdi,0x3d
  01886:    	movq   xmm13,rdi
  0188b:    	jmp    0x18a3
  01890:    	call   0xffff1a3c
  01895:    	test   rax,rax
  01898:    	je     0x39fec
  0189e:    	movq   xmm13,xmm0
  018a3: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  018aa: 00 	test   rdi,0x1
  018b1:    	jne    0x3a065
  018b7: 00 	test   rdi,0x2
  018be:    	je     0x18fb
  018c4:    	xorps  xmm14,xmm14
  018c8: 00 	movabs rax,0x8000000000000002
  018d2:    	cmp    rdi,rax
  018d5:    	je     0x190e
  018db:    	mov    rax,rdi
  018de:    	sar    rax,0x3f
  018e2:    	add    rax,0x2
  018e6:    	and    rdi,0xfffffffffffffffc
  018ea:    	or     rdi,rax
  018ed:    	rol    rdi,0x3d
  018f1:    	movq   xmm14,rdi
  018f6:    	jmp    0x190e
  018fb:    	call   0xffff1a3c
  01900:    	test   rax,rax
  01903:    	je     0x3a065
  01909:    	movq   xmm14,xmm0
  0190e:    	addsd  xmm13,xmm14
:00118 _ = %14.call x=(%15; 1)              [Vec]
:00119 
  01913:    	movq   xmm0,xmm13
  01918:    	call   0xffff1b2f
  0191d: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01924: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0192b: 00 	test   rdi,0x7
  01932:    	jne    0x3a0de
  01938:    	cmp    DWORD PTR [rdi+0x4],0x25
  0193c:    	jne    0x3a0de
  01942: 26 	cmp    DWORD PTR [rip+0xffffffffffff2a93],0x26        # 0xffff43dc
  01949:    	jne    0x3a0de
  0194f:    	mov    esi,DWORD PTR [rip+0xae7]        # 0x243c
  01955:    	cmp    esi,0xffffffff
  01958:    	je     0x3a157
  0195e:    	cmp    WORD PTR [rdi+0x2],0x3
  01963:    	jne    0x1983
  01969:    	cmp    esi,0x6
  0196c:    	jge    0x1983
  01972: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01979:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0197e:    	jmp    0x1a59
  01983:    	sub    rsp,0x70
  01987:    	movq   QWORD PTR [rsp],xmm2
  0198c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01992:    	movq   QWORD PTR [rsp+0x10],xmm4
  01998:    	movq   QWORD PTR [rsp+0x18],xmm5
  0199e:    	movq   QWORD PTR [rsp+0x20],xmm6
  019a4:    	movq   QWORD PTR [rsp+0x28],xmm7
  019aa: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  019b1: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  019b8: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  019bf: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  019c6: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  019cd: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  019d4: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  019db: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  019e2: 57 	movabs rax,0x55573c900dd0
  019ec:    	call   rax
  019ee:    	movq   xmm2,QWORD PTR [rsp]
  019f3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  019f9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  019ff:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01a05:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01a0b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01a11: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01a18: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01a1f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01a26: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01a2d: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01a34: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  01a3b: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  01a42:    	add    rsp,0x70
  01a46: 57 	movabs r13,0x55573cfde390
  01a50:    	test   rax,rax
  01a53:    	je     0xffff1a03
:00121 %14 = dynvar(2, %2)
  01a59:    	mov    rax,QWORD PTR [rbp-0x10]
  01a5d:    	mov    rax,QWORD PTR [rax]
  01a60:    	mov    rax,QWORD PTR [rax-0x28]
  01a64: ff 	mov    QWORD PTR [rbp-0x98],rax
:00122 %16 = dynvar(2, %2)
  01a6b:    	mov    rax,QWORD PTR [rbp-0x10]
  01a6f:    	mov    rax,QWORD PTR [rax]
  01a72:    	mov    rax,QWORD PTR [rax-0x28]
  01a76: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00123 %15 = %16.call y()                   [Vec]
:00124 
  01a7d: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01a84: 00 	test   rdi,0x7
  01a8b:    	jne    0x3a23a
  01a91:    	cmp    DWORD PTR [rdi+0x4],0x25
  01a95:    	jne    0x3a23a
  01a9b: 26 	cmp    DWORD PTR [rip+0xffffffffffff293a],0x26        # 0xffff43dc
  01aa2:    	jne    0x3a23a
  01aa8:    	mov    esi,DWORD PTR [rip+0x996]        # 0x2444
  01aae:    	cmp    esi,0xffffffff
  01ab1:    	je     0x3a2b3
  01ab7:    	cmp    WORD PTR [rdi+0x2],0x3
  01abc:    	jne    0x1ad5
  01ac2:    	cmp    esi,0x6
  01ac5:    	jge    0x1ad5
  01acb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01ad0:    	jmp    0x1b75
  01ad5:    	sub    rsp,0x60
  01ad9:    	movq   QWORD PTR [rsp],xmm2
  01ade:    	movq   QWORD PTR [rsp+0x8],xmm3
  01ae4:    	movq   QWORD PTR [rsp+0x10],xmm4
  01aea:    	movq   QWORD PTR [rsp+0x18],xmm5
  01af0:    	movq   QWORD PTR [rsp+0x20],xmm6
  01af6:    	movq   QWORD PTR [rsp+0x28],xmm7
  01afc: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01b03: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01b0a: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01b11: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01b18: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01b1f: 57 	movabs rax,0x55573c900b50
  01b29:    	call   rax
  01b2b:    	movq   xmm2,QWORD PTR [rsp]
  01b30:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01b36:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01b3c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01b42:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01b48:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01b4e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01b55: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01b5c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01b63: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01b6a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01b71:    	add    rsp,0x60
  01b75: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00126 %16 = %13.call y()                   [Vec]
:00127 
  01b7c: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b83: 00 	test   rdi,0x7
  01b8a:    	jne    0x3a370
  01b90:    	cmp    DWORD PTR [rdi+0x4],0x25
  01b94:    	jne    0x3a370
  01b9a: 26 	cmp    DWORD PTR [rip+0xffffffffffff283b],0x26        # 0xffff43dc
  01ba1:    	jne    0x3a370
  01ba7:    	mov    esi,DWORD PTR [rip+0x89f]        # 0x244c
  01bad:    	cmp    esi,0xffffffff
  01bb0:    	je     0x3a3e9
  01bb6:    	cmp    WORD PTR [rdi+0x2],0x3
  01bbb:    	jne    0x1bd4
  01bc1:    	cmp    esi,0x6
  01bc4:    	jge    0x1bd4
  01bca:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01bcf:    	jmp    0x1c74
  01bd4:    	sub    rsp,0x60
  01bd8:    	movq   QWORD PTR [rsp],xmm2
  01bdd:    	movq   QWORD PTR [rsp+0x8],xmm3
  01be3:    	movq   QWORD PTR [rsp+0x10],xmm4
  01be9:    	movq   QWORD PTR [rsp+0x18],xmm5
  01bef:    	movq   QWORD PTR [rsp+0x20],xmm6
  01bf5:    	movq   QWORD PTR [rsp+0x28],xmm7
  01bfb: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01c02: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01c09: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01c10: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01c17: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01c1e: 57 	movabs rax,0x55573c900b50
  01c28:    	call   rax
  01c2a:    	movq   xmm2,QWORD PTR [rsp]
  01c2f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01c35:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01c3b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01c41:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01c47:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01c4d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01c54: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01c5b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01c62: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01c69: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01c70:    	add    rsp,0x60
  01c74: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00129 %15 = %15 + %16                      [Float][Float]
  01c7b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01c82: 00 	test   rdi,0x1
  01c89:    	jne    0x3a4a6
  01c8f: 00 	test   rdi,0x2
  01c96:    	je     0x1cd3
  01c9c:    	xorps  xmm13,xmm13
  01ca0: 00 	movabs rax,0x8000000000000002
  01caa:    	cmp    rdi,rax
  01cad:    	je     0x1ce6
  01cb3:    	mov    rax,rdi
  01cb6:    	sar    rax,0x3f
  01cba:    	add    rax,0x2
  01cbe:    	and    rdi,0xfffffffffffffffc
  01cc2:    	or     rdi,rax
  01cc5:    	rol    rdi,0x3d
  01cc9:    	movq   xmm13,rdi
  01cce:    	jmp    0x1ce6
  01cd3:    	call   0xffff1a3c
  01cd8:    	test   rax,rax
  01cdb:    	je     0x3a4a6
  01ce1:    	movq   xmm13,xmm0
  01ce6: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01ced: 00 	test   rdi,0x1
  01cf4:    	jne    0x3a51f
  01cfa: 00 	test   rdi,0x2
  01d01:    	je     0x1d3e
  01d07:    	xorps  xmm14,xmm14
  01d0b: 00 	movabs rax,0x8000000000000002
  01d15:    	cmp    rdi,rax
  01d18:    	je     0x1d51
  01d1e:    	mov    rax,rdi
  01d21:    	sar    rax,0x3f
  01d25:    	add    rax,0x2
  01d29:    	and    rdi,0xfffffffffffffffc
  01d2d:    	or     rdi,rax
  01d30:    	rol    rdi,0x3d
  01d34:    	movq   xmm14,rdi
  01d39:    	jmp    0x1d51
  01d3e:    	call   0xffff1a3c
  01d43:    	test   rax,rax
  01d46:    	je     0x3a51f
  01d4c:    	movq   xmm14,xmm0
  01d51:    	addsd  xmm13,xmm14
:00130 _ = %14.call y=(%15; 1)              [Vec]
:00131 
  01d56:    	movq   xmm0,xmm13
  01d5b:    	call   0xffff1b2f
  01d60: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01d67: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01d6e: 00 	test   rdi,0x7
  01d75:    	jne    0x3a598
  01d7b:    	cmp    DWORD PTR [rdi+0x4],0x25
  01d7f:    	jne    0x3a598
  01d85: 26 	cmp    DWORD PTR [rip+0xffffffffffff2650],0x26        # 0xffff43dc
  01d8c:    	jne    0x3a598
  01d92:    	mov    esi,DWORD PTR [rip+0x6bc]        # 0x2454
  01d98:    	cmp    esi,0xffffffff
  01d9b:    	je     0x3a611
  01da1:    	cmp    WORD PTR [rdi+0x2],0x3
  01da6:    	jne    0x1dc6
  01dac:    	cmp    esi,0x6
  01daf:    	jge    0x1dc6
  01db5: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01dbc:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01dc1:    	jmp    0x1e9c
  01dc6:    	sub    rsp,0x70
  01dca:    	movq   QWORD PTR [rsp],xmm2
  01dcf:    	movq   QWORD PTR [rsp+0x8],xmm3
  01dd5:    	movq   QWORD PTR [rsp+0x10],xmm4
  01ddb:    	movq   QWORD PTR [rsp+0x18],xmm5
  01de1:    	movq   QWORD PTR [rsp+0x20],xmm6
  01de7:    	movq   QWORD PTR [rsp+0x28],xmm7
  01ded: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01df4: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01dfb: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01e02: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01e09: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01e10: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  01e17: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  01e1e: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01e25: 57 	movabs rax,0x55573c900dd0
  01e2f:    	call   rax
  01e31:    	movq   xmm2,QWORD PTR [rsp]
  01e36:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01e3c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01e42:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01e48:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01e4e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01e54: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01e5b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01e62: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01e69: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01e70: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01e77: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  01e7e: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  01e85:    	add    rsp,0x70
  01e89: 57 	movabs r13,0x55573cfde450
  01e93:    	test   rax,rax
  01e96:    	je     0xffff1a03
:00133 %14 = dynvar(2, %2)
  01e9c:    	mov    rax,QWORD PTR [rbp-0x10]
  01ea0:    	mov    rax,QWORD PTR [rax]
  01ea3:    	mov    rax,QWORD PTR [rax-0x28]
  01ea7: ff 	mov    QWORD PTR [rbp-0x98],rax
:00134 %16 = dynvar(2, %2)
  01eae:    	mov    rax,QWORD PTR [rbp-0x10]
  01eb2:    	mov    rax,QWORD PTR [rax]
  01eb5:    	mov    rax,QWORD PTR [rax-0x28]
  01eb9: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00135 %15 = %16.call z()                   [Vec]
:00136 
  01ec0: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01ec7: 00 	test   rdi,0x7
  01ece:    	jne    0x3a6f4
  01ed4:    	cmp    DWORD PTR [rdi+0x4],0x25
  01ed8:    	jne    0x3a6f4
  01ede: 26 	cmp    DWORD PTR [rip+0xffffffffffff24f7],0x26        # 0xffff43dc
  01ee5:    	jne    0x3a6f4
  01eeb:    	mov    esi,DWORD PTR [rip+0x56b]        # 0x245c
  01ef1:    	cmp    esi,0xffffffff
  01ef4:    	je     0x3a76d
  01efa:    	cmp    WORD PTR [rdi+0x2],0x3
  01eff:    	jne    0x1f18
  01f05:    	cmp    esi,0x6
  01f08:    	jge    0x1f18
  01f0e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01f13:    	jmp    0x1fb8
  01f18:    	sub    rsp,0x60
  01f1c:    	movq   QWORD PTR [rsp],xmm2
  01f21:    	movq   QWORD PTR [rsp+0x8],xmm3
  01f27:    	movq   QWORD PTR [rsp+0x10],xmm4
  01f2d:    	movq   QWORD PTR [rsp+0x18],xmm5
  01f33:    	movq   QWORD PTR [rsp+0x20],xmm6
  01f39:    	movq   QWORD PTR [rsp+0x28],xmm7
  01f3f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01f46: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01f4d: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01f54: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01f5b: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01f62: 57 	movabs rax,0x55573c900b50
  01f6c:    	call   rax
  01f6e:    	movq   xmm2,QWORD PTR [rsp]
  01f73:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01f79:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01f7f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01f85:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01f8b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01f91: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01f98: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01f9f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01fa6: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01fad: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01fb4:    	add    rsp,0x60
  01fb8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00138 %16 = %13.call z()                   [Vec]
:00139 
  01fbf: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01fc6: 00 	test   rdi,0x7
  01fcd:    	jne    0x3a82a
  01fd3:    	cmp    DWORD PTR [rdi+0x4],0x25
  01fd7:    	jne    0x3a82a
  01fdd: 26 	cmp    DWORD PTR [rip+0xffffffffffff23f8],0x26        # 0xffff43dc
  01fe4:    	jne    0x3a82a
  01fea:    	mov    esi,DWORD PTR [rip+0x474]        # 0x2464
  01ff0:    	cmp    esi,0xffffffff
  01ff3:    	je     0x3a8a3
  01ff9:    	cmp    WORD PTR [rdi+0x2],0x3
  01ffe:    	jne    0x2017
  02004:    	cmp    esi,0x6
  02007:    	jge    0x2017
  0200d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  02012:    	jmp    0x20b7
  02017:    	sub    rsp,0x60
  0201b:    	movq   QWORD PTR [rsp],xmm2
  02020:    	movq   QWORD PTR [rsp+0x8],xmm3
  02026:    	movq   QWORD PTR [rsp+0x10],xmm4
  0202c:    	movq   QWORD PTR [rsp+0x18],xmm5
  02032:    	movq   QWORD PTR [rsp+0x20],xmm6
  02038:    	movq   QWORD PTR [rsp+0x28],xmm7
  0203e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02045: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0204c: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02053: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0205a: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02061: 57 	movabs rax,0x55573c900b50
  0206b:    	call   rax
  0206d:    	movq   xmm2,QWORD PTR [rsp]
  02072:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02078:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0207e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02084:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0208a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02090: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02097: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0209e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  020a5: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  020ac: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  020b3:    	add    rsp,0x60
  020b7: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00141 %15 = %15 + %16                      [Float][Float]
  020be: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  020c5: 00 	test   rdi,0x1
  020cc:    	jne    0x3a960
  020d2: 00 	test   rdi,0x2
  020d9:    	je     0x2116
  020df:    	xorps  xmm13,xmm13
  020e3: 00 	movabs rax,0x8000000000000002
  020ed:    	cmp    rdi,rax
  020f0:    	je     0x2129
  020f6:    	mov    rax,rdi
  020f9:    	sar    rax,0x3f
  020fd:    	add    rax,0x2
  02101:    	and    rdi,0xfffffffffffffffc
  02105:    	or     rdi,rax
  02108:    	rol    rdi,0x3d
  0210c:    	movq   xmm13,rdi
  02111:    	jmp    0x2129
  02116:    	call   0xffff1a3c
  0211b:    	test   rax,rax
  0211e:    	je     0x3a960
  02124:    	movq   xmm13,xmm0
  02129: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  02130: 00 	test   rdi,0x1
  02137:    	jne    0x3a9d9
  0213d: 00 	test   rdi,0x2
  02144:    	je     0x2181
  0214a:    	xorps  xmm14,xmm14
  0214e: 00 	movabs rax,0x8000000000000002
  02158:    	cmp    rdi,rax
  0215b:    	je     0x2194
  02161:    	mov    rax,rdi
  02164:    	sar    rax,0x3f
  02168:    	add    rax,0x2
  0216c:    	and    rdi,0xfffffffffffffffc
  02170:    	or     rdi,rax
  02173:    	rol    rdi,0x3d
  02177:    	movq   xmm14,rdi
  0217c:    	jmp    0x2194
  02181:    	call   0xffff1a3c
  02186:    	test   rax,rax
  02189:    	je     0x3a9d9
  0218f:    	movq   xmm14,xmm0
  02194:    	addsd  xmm13,xmm14
:00142 _ = %14.call z=(%15; 1)              [Vec]
:00143 
  02199:    	movq   xmm0,xmm13
  0219e:    	call   0xffff1b2f
  021a3: ff 	mov    QWORD PTR [rbp-0xa0],rax
  021aa: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  021b1: 00 	test   rdi,0x7
  021b8:    	jne    0x3aa52
  021be:    	cmp    DWORD PTR [rdi+0x4],0x25
  021c2:    	jne    0x3aa52
  021c8: 26 	cmp    DWORD PTR [rip+0xffffffffffff220d],0x26        # 0xffff43dc
  021cf:    	jne    0x3aa52
  021d5:    	mov    esi,DWORD PTR [rip+0x291]        # 0x246c
  021db:    	cmp    esi,0xffffffff
  021de:    	je     0x3aacb
  021e4:    	cmp    WORD PTR [rdi+0x2],0x3
  021e9:    	jne    0x2209
  021ef:    	cmp    esi,0x6
  021f2:    	jge    0x2209
  021f8: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  021ff:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  02204:    	jmp    0x22df
  02209:    	sub    rsp,0x70
  0220d:    	movq   QWORD PTR [rsp],xmm2
  02212:    	movq   QWORD PTR [rsp+0x8],xmm3
  02218:    	movq   QWORD PTR [rsp+0x10],xmm4
  0221e:    	movq   QWORD PTR [rsp+0x18],xmm5
  02224:    	movq   QWORD PTR [rsp+0x20],xmm6
  0222a:    	movq   QWORD PTR [rsp+0x28],xmm7
  02230: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02237: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0223e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02245: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0224c: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02253: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  0225a: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  02261: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  02268: 57 	movabs rax,0x55573c900dd0
  02272:    	call   rax
  02274:    	movq   xmm2,QWORD PTR [rsp]
  02279:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0227f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02285:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0228b:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02291:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02297: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0229e: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  022a5: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  022ac: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  022b3: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  022ba: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  022c1: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  022c8:    	add    rsp,0x70
  022cc: 57 	movabs r13,0x55573cfde510
  022d6:    	test   rax,rax
  022d9:    	je     0xffff1a03
:00145 %14 = %15
:00146 ret %14
  022df:    	movq   xmm0,xmm13
  022e4:    	call   0xffff1b2f
  022e9: ff 	mov    QWORD PTR [rbp-0x98],rax
  022f0: ff 	mov    rax,QWORD PTR [rbp-0x98]
  022f7:    	leave  
  022f8:    	ret    
:00147 %14 = nil
  022f9: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00148 ret %14
  02304: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0230b:    	leave  
  0230c:    	ret    
==> start whole compile: ambient_occlusion FuncId(69) self_class:Scene start:[00000] bytecode:0x55573cf99c50
<== finished compile. elapsed:87.9µs
offset:Pos(68264) code: 4079 bytes  data: 289 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0xa0
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x38],rax
  00016: mov    QWORD PTR [rbp-0x40],rax
  0001a: mov    QWORD PTR [rbp-0x48],rax
  0001e: mov    QWORD PTR [rbp-0x50],rax
  00022: mov    QWORD PTR [rbp-0x58],rax
  00026: mov    QWORD PTR [rbp-0x60],rax
  0002a: mov    QWORD PTR [rbp-0x68],rax
  0002e: mov    QWORD PTR [rbp-0x70],rax
  00032: mov    QWORD PTR [rbp-0x78],rax
  00036: mov    QWORD PTR [rbp-0x80],rax
  0003a: mov    QWORD PTR [rbp-0x88],rax
  00041: mov    QWORD PTR [rbp-0x90],rax
  00048: mov    rdi,QWORD PTR [rbp-0x28]
  0004c: test   rdi,0x7
  00053: jne    0x3873e
  00059: cmp    DWORD PTR [rdi+0x4],0x2f
  0005d: jne    0x3873e
:00000 %8 = const[Array]                    [Array]
  00063: mov    rax,QWORD PTR [rip+0xffffffffffff1f0e]        # 0xffff1f78
  0006a: cmp    rax,QWORD PTR [rip+0xf97]        # 0x1008
  00071: jne    0x3874d
  00077: mov    rax,QWORD PTR [rip+0xf7a]        # 0xff8
  0007e: mov    QWORD PTR [rbp-0x68],rax
:00001 %2 = %8.call new()                   [#<Class:Array>]
:00002 
  00082: mov    rdi,QWORD PTR [rbp-0x68]
  00086: test   rdi,0x7
  0008d: jne    0x38793
  00093: cmp    DWORD PTR [rdi+0x4],0x1e
  00097: jne    0x38793
  0009d: cmp    DWORD PTR [rip+0xffffffffffff1ec8],0x26        # 0xffff1f6c
  000a4: jne    0x38793
  000aa: mov    r9,0x0
  000b1: mov    rdx,rdi
  000b4: mov    rax,QWORD PTR [rbx]
  000b7: lea    rdi,[rsp-0x18]
  000bc: mov    QWORD PTR [rdi],rax
  000bf: mov    QWORD PTR [rbx],rdi
  000c2: mov    QWORD PTR [rsp-0x20],0x0
  000cb: mov    QWORD PTR [rsp-0x38],rcx
  000d0: lea    rcx,[rbp-0x70]
  000d4: mov    r8,0x0
  000db: call   0x387a2
  000e0: lea    rdi,[rbp-0x8]
  000e4: mov    QWORD PTR [rbx],rdi
  000e7: movabs r13,0x55573cf99c80
  000f1: test   rax,rax
  000f4: je     0xfffef593
  000fa: mov    QWORD PTR [rbp-0x38],rax
:00004 %8 = %2
  000fe: mov    rax,QWORD PTR [rbp-0x38]
  00102: mov    QWORD PTR [rbp-0x68],rax
:00005 %9 = %1.call n()                     [Isect]
:00006 
  00106: mov    rdi,QWORD PTR [rbp-0x30]
  0010a: test   rdi,0x7
  00111: jne    0x387d4
  00117: cmp    DWORD PTR [rdi+0x4],0x2d
  0011b: jne    0x387d4
  00121: cmp    DWORD PTR [rip+0xffffffffffff1e44],0x26        # 0xffff1f6c
  00128: jne    0x387d4
  0012e: mov    esi,DWORD PTR [rip+0xee0]        # 0x1014
  00134: cmp    esi,0xffffffff
  00137: je     0x387e3
  0013d: cmp    WORD PTR [rdi+0x2],0x3
  00142: jne    0x15b
  00148: cmp    esi,0x6
  0014b: jge    0x15b
  00151: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00156: jmp    0x167
  0015b: movabs rax,0x55573c900b50
  00165: call   rax
  00167: mov    QWORD PTR [rbp-0x70],rax
:00008 _ = %0.call otherBasis(%8; 2)        [Scene]
:00009 
  0016b: mov    rdi,QWORD PTR [rbp-0x28]
  0016f: cmp    DWORD PTR [rip+0xffffffffffff1df6],0x26        # 0xffff1f6c
  00176: jne    0x3880c
  0017c: mov    rax,QWORD PTR [rbx]
  0017f: lea    rdi,[rsp-0x18]
  00184: mov    QWORD PTR [rdi],rax
  00187: mov    QWORD PTR [rbx],rdi
  0018a: mov    QWORD PTR [rsp-0x20],0x0
  00193: mov    QWORD PTR [rsp-0x38],rcx
  00198: mov    rax,QWORD PTR [rbp-0x28]
  0019c: mov    QWORD PTR [rsp-0x38],rax
  001a1: mov    rdi,0x2
  001a8: mov    rax,QWORD PTR [rbp-0x68]
  001ac: mov    QWORD PTR [rsp-0x40],rax
  001b1: mov    rax,QWORD PTR [rbp-0x70]
  001b5: mov    QWORD PTR [rsp-0x48],rax
  001ba: mov    QWORD PTR [rsp-0x30],0x0
  001c3: movabs rax,0x900000035
  001cd: mov    QWORD PTR [rsp-0x28],rax
  001d2: movabs r13,0x55573cfb0280
  001dc: call   0xffff9044
  001e1: lea    rdi,[rbp-0x8]
  001e5: mov    QWORD PTR [rbx],rdi
  001e8: movabs r13,0x55573cf99cf0
  001f2: test   rax,rax
  001f5: je     0xfffef593
:00011 %3 = const[NAO_SAMPLES]              [8]
  001fb: mov    rax,QWORD PTR [rip+0xffffffffffff1d76]        # 0xffff1f78
  00202: cmp    rax,QWORD PTR [rip+0xe1f]        # 0x1028
  00209: jne    0x3881b
  0020f: mov    rax,QWORD PTR [rip+0xe02]        # 0x1018
  00216: mov    QWORD PTR [rbp-0x40],rax
:00012 %4 = const[NAO_SAMPLES]              [8]
  0021a: mov    rax,QWORD PTR [rip+0xffffffffffff1d57]        # 0xffff1f78
  00221: cmp    rax,QWORD PTR [rip+0xe20]        # 0x1048
  00228: jne    0x38861
  0022e: mov    rax,QWORD PTR [rip+0xe03]        # 0x1038
  00235: mov    QWORD PTR [rbp-0x48],rax
:00013 %5 = literal[0.0001]
  00239: movq   xmm2,QWORD PTR [rip+0xe17]        # 0x1058
:00014 %6 = literal[0.0]
  00241: movq   xmm3,QWORD PTR [rip+0xe1f]        # 0x1068
:00015 %8 = const[Vec]                      [Vec]
  00249: mov    rax,QWORD PTR [rip+0xffffffffffff1d28]        # 0xffff1f78
  00250: cmp    rax,QWORD PTR [rip+0xe31]        # 0x1088
  00257: jne    0x388a7
  0025d: mov    rax,QWORD PTR [rip+0xe14]        # 0x1078
  00264: mov    QWORD PTR [rbp-0x68],rax
:00016 %10 = %1.call pl()                   [Isect]
:00017 
  00268: mov    rdi,QWORD PTR [rbp-0x30]
  0026c: test   rdi,0x7
  00273: jne    0x3890b
  00279: cmp    DWORD PTR [rdi+0x4],0x2d
  0027d: jne    0x3890b
  00283: cmp    DWORD PTR [rip+0xffffffffffff1ce2],0x26        # 0xffff1f6c
  0028a: jne    0x3890b
  00290: mov    esi,DWORD PTR [rip+0xdfe]        # 0x1094
  00296: cmp    esi,0xffffffff
  00299: je     0x38934
  0029f: cmp    WORD PTR [rdi+0x2],0x3
  002a4: jne    0x2bd
  002aa: cmp    esi,0x6
  002ad: jge    0x2bd
  002b3: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  002b8: jmp    0x2e7
  002bd: sub    rsp,0x10
  002c1: movq   QWORD PTR [rsp],xmm2
  002c6: movq   QWORD PTR [rsp+0x8],xmm3
  002cc: movabs rax,0x55573c900b50
  002d6: call   rax
  002d8: movq   xmm2,QWORD PTR [rsp]
  002dd: movq   xmm3,QWORD PTR [rsp+0x8]
  002e3: add    rsp,0x10
  002e7: mov    QWORD PTR [rbp-0x78],rax
:00019 %9 = %10.call x()                    [Vec]
:00020 
  002eb: mov    rdi,QWORD PTR [rbp-0x78]
  002ef: test   rdi,0x7
  002f6: jne    0x3897b
  002fc: cmp    DWORD PTR [rdi+0x4],0x25
  00300: jne    0x3897b
  00306: cmp    DWORD PTR [rip+0xffffffffffff1c5f],0x26        # 0xffff1f6c
  0030d: jne    0x3897b
  00313: mov    esi,DWORD PTR [rip+0xd83]        # 0x109c
  00319: cmp    esi,0xffffffff
  0031c: je     0x389a4
  00322: cmp    WORD PTR [rdi+0x2],0x3
  00327: jne    0x340
  0032d: cmp    esi,0x6
  00330: jge    0x340
  00336: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0033b: jmp    0x36a
  00340: sub    rsp,0x10
  00344: movq   QWORD PTR [rsp],xmm2
  00349: movq   QWORD PTR [rsp+0x8],xmm3
  0034f: movabs rax,0x55573c900b50
  00359: call   rax
  0035b: movq   xmm2,QWORD PTR [rsp]
  00360: movq   xmm3,QWORD PTR [rsp+0x8]
  00366: add    rsp,0x10
  0036a: mov    QWORD PTR [rbp-0x70],rax
:00022 %11 = %1.call n()                    [Isect]
:00023 
  0036e: mov    rdi,QWORD PTR [rbp-0x30]
  00372: test   rdi,0x7
  00379: jne    0x389eb
  0037f: cmp    DWORD PTR [rdi+0x4],0x2d
  00383: jne    0x389eb
  00389: cmp    DWORD PTR [rip+0xffffffffffff1bdc],0x26        # 0xffff1f6c
  00390: jne    0x389eb
  00396: mov    esi,DWORD PTR [rip+0xd08]        # 0x10a4
  0039c: cmp    esi,0xffffffff
  0039f: je     0x38a14
  003a5: cmp    WORD PTR [rdi+0x2],0x3
  003aa: jne    0x3c3
  003b0: cmp    esi,0x6
  003b3: jge    0x3c3
  003b9: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003be: jmp    0x3ed
  003c3: sub    rsp,0x10
  003c7: movq   QWORD PTR [rsp],xmm2
  003cc: movq   QWORD PTR [rsp+0x8],xmm3
  003d2: movabs rax,0x55573c900b50
  003dc: call   rax
  003de: movq   xmm2,QWORD PTR [rsp]
  003e3: movq   xmm3,QWORD PTR [rsp+0x8]
  003e9: add    rsp,0x10
  003ed: mov    QWORD PTR [rbp-0x80],rax
:00025 %10 = %11.call x()                   [Vec]
:00026 
  003f1: mov    rdi,QWORD PTR [rbp-0x80]
  003f5: test   rdi,0x7
  003fc: jne    0x38a5b
  00402: cmp    DWORD PTR [rdi+0x4],0x25
  00406: jne    0x38a5b
  0040c: cmp    DWORD PTR [rip+0xffffffffffff1b59],0x26        # 0xffff1f6c
  00413: jne    0x38a5b
  00419: mov    esi,DWORD PTR [rip+0xc8d]        # 0x10ac
  0041f: cmp    esi,0xffffffff
  00422: je     0x38a84
  00428: cmp    WORD PTR [rdi+0x2],0x3
  0042d: jne    0x446
  00433: cmp    esi,0x6
  00436: jge    0x446
  0043c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00441: jmp    0x470
  00446: sub    rsp,0x10
  0044a: movq   QWORD PTR [rsp],xmm2
  0044f: movq   QWORD PTR [rsp+0x8],xmm3
  00455: movabs rax,0x55573c900b50
  0045f: call   rax
  00461: movq   xmm2,QWORD PTR [rsp]
  00466: movq   xmm3,QWORD PTR [rsp+0x8]
  0046c: add    rsp,0x10
  00470: mov    QWORD PTR [rbp-0x78],rax
:00028 %10 = %5 * %10                       [Float][Float]
  00474: mov    rdi,QWORD PTR [rbp-0x78]
  00478: test   rdi,0x1
  0047f: jne    0x38acb
  00485: test   rdi,0x2
  0048c: je     0x4c8
  00492: xorps  xmm4,xmm4
  00495: movabs rax,0x8000000000000002
  0049f: cmp    rdi,rax
  004a2: je     0x4da
  004a8: mov    rax,rdi
  004ab: sar    rax,0x3f
  004af: add    rax,0x2
  004b3: and    rdi,0xfffffffffffffffc
  004b7: or     rdi,rax
  004ba: rol    rdi,0x3d
  004be: movq   xmm4,rdi
  004c3: jmp    0x4da
  004c8: call   0xfffef5cc
  004cd: test   rax,rax
  004d0: je     0x38acb
  004d6: movq   xmm4,xmm0
  004da: mulsd  xmm4,xmm2
:00029 %9 = %9 + %10                        [Float][Float]
  004de: mov    rdi,QWORD PTR [rbp-0x70]
  004e2: test   rdi,0x1
  004e9: jne    0x38af4
  004ef: test   rdi,0x2
  004f6: je     0x532
  004fc: xorps  xmm5,xmm5
  004ff: movabs rax,0x8000000000000002
  00509: cmp    rdi,rax
  0050c: je     0x544
  00512: mov    rax,rdi
  00515: sar    rax,0x3f
  00519: add    rax,0x2
  0051d: and    rdi,0xfffffffffffffffc
  00521: or     rdi,rax
  00524: rol    rdi,0x3d
  00528: movq   xmm5,rdi
  0052d: jmp    0x544
  00532: call   0xfffef5cc
  00537: test   rax,rax
  0053a: je     0x38af4
  00540: movq   xmm5,xmm0
  00544: addsd  xmm5,xmm4
:00030 %11 = %1.call pl()                   [Isect]
:00031 
  00548: mov    rdi,QWORD PTR [rbp-0x30]
  0054c: test   rdi,0x7
  00553: jne    0x38b2a
  00559: cmp    DWORD PTR [rdi+0x4],0x2d
  0055d: jne    0x38b2a
  00563: cmp    DWORD PTR [rip+0xffffffffffff1a02],0x26        # 0xffff1f6c
  0056a: jne    0x38b2a
  00570: mov    esi,DWORD PTR [rip+0xb3e]        # 0x10b4
  00576: cmp    esi,0xffffffff
  00579: je     0x38b6d
  0057f: cmp    WORD PTR [rdi+0x2],0x3
  00584: jne    0x59d
  0058a: cmp    esi,0x6
  0058d: jge    0x59d
  00593: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00598: jmp    0x5df
  0059d: sub    rsp,0x20
  005a1: movq   QWORD PTR [rsp],xmm2
  005a6: movq   QWORD PTR [rsp+0x8],xmm3
  005ac: movq   QWORD PTR [rsp+0x10],xmm4
  005b2: movq   QWORD PTR [rsp+0x18],xmm5
  005b8: movabs rax,0x55573c900b50
  005c2: call   rax
  005c4: movq   xmm2,QWORD PTR [rsp]
  005c9: movq   xmm3,QWORD PTR [rsp+0x8]
  005cf: movq   xmm4,QWORD PTR [rsp+0x10]
  005d5: movq   xmm5,QWORD PTR [rsp+0x18]
  005db: add    rsp,0x20
  005df: mov    QWORD PTR [rbp-0x80],rax
:00033 %10 = %11.call y()                   [Vec]
:00034 
  005e3: mov    rdi,QWORD PTR [rbp-0x80]
  005e7: test   rdi,0x7
  005ee: jne    0x38bcc
  005f4: cmp    DWORD PTR [rdi+0x4],0x25
  005f8: jne    0x38bcc
  005fe: cmp    DWORD PTR [rip+0xffffffffffff1967],0x26        # 0xffff1f6c
  00605: jne    0x38bcc
  0060b: mov    esi,DWORD PTR [rip+0xaab]        # 0x10bc
  00611: cmp    esi,0xffffffff
  00614: je     0x38c02
  0061a: cmp    WORD PTR [rdi+0x2],0x3
  0061f: jne    0x638
  00625: cmp    esi,0x6
  00628: jge    0x638
  0062e: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00633: jmp    0x66e
  00638: sub    rsp,0x20
  0063c: movq   QWORD PTR [rsp],xmm2
  00641: movq   QWORD PTR [rsp+0x8],xmm3
  00647: movq   QWORD PTR [rsp+0x10],xmm5
  0064d: movabs rax,0x55573c900b50
  00657: call   rax
  00659: movq   xmm2,QWORD PTR [rsp]
  0065e: movq   xmm3,QWORD PTR [rsp+0x8]
  00664: movq   xmm5,QWORD PTR [rsp+0x10]
  0066a: add    rsp,0x20
  0066e: mov    QWORD PTR [rbp-0x78],rax
:00036 %12 = %1.call n()                    [Isect]
:00037 
  00672: mov    rdi,QWORD PTR [rbp-0x30]
  00676: test   rdi,0x7
  0067d: jne    0x38c55
  00683: cmp    DWORD PTR [rdi+0x4],0x2d
  00687: jne    0x38c55
  0068d: cmp    DWORD PTR [rip+0xffffffffffff18d8],0x26        # 0xffff1f6c
  00694: jne    0x38c55
  0069a: mov    esi,DWORD PTR [rip+0xa24]        # 0x10c4
  006a0: cmp    esi,0xffffffff
  006a3: je     0x38c8b
  006a9: cmp    WORD PTR [rdi+0x2],0x3
  006ae: jne    0x6c7
  006b4: cmp    esi,0x6
  006b7: jge    0x6c7
  006bd: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  006c2: jmp    0x6fd
  006c7: sub    rsp,0x20
  006cb: movq   QWORD PTR [rsp],xmm2
  006d0: movq   QWORD PTR [rsp+0x8],xmm3
  006d6: movq   QWORD PTR [rsp+0x10],xmm5
  006dc: movabs rax,0x55573c900b50
  006e6: call   rax
  006e8: movq   xmm2,QWORD PTR [rsp]
  006ed: movq   xmm3,QWORD PTR [rsp+0x8]
  006f3: movq   xmm5,QWORD PTR [rsp+0x10]
  006f9: add    rsp,0x20
  006fd: mov    QWORD PTR [rbp-0x88],rax
:00039 %11 = %12.call y()                   [Vec]
:00040 
  00704: mov    rdi,QWORD PTR [rbp-0x88]
  0070b: test   rdi,0x7
  00712: jne    0x38cde
  00718: cmp    DWORD PTR [rdi+0x4],0x25
  0071c: jne    0x38cde
  00722: cmp    DWORD PTR [rip+0xffffffffffff1843],0x26        # 0xffff1f6c
  00729: jne    0x38cde
  0072f: mov    esi,DWORD PTR [rip+0x997]        # 0x10cc
  00735: cmp    esi,0xffffffff
  00738: je     0x38d14
  0073e: cmp    WORD PTR [rdi+0x2],0x3
  00743: jne    0x75c
  00749: cmp    esi,0x6
  0074c: jge    0x75c
  00752: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00757: jmp    0x792
  0075c: sub    rsp,0x20
  00760: movq   QWORD PTR [rsp],xmm2
  00765: movq   QWORD PTR [rsp+0x8],xmm3
  0076b: movq   QWORD PTR [rsp+0x10],xmm5
  00771: movabs rax,0x55573c900b50
  0077b: call   rax
  0077d: movq   xmm2,QWORD PTR [rsp]
  00782: movq   xmm3,QWORD PTR [rsp+0x8]
  00788: movq   xmm5,QWORD PTR [rsp+0x10]
  0078e: add    rsp,0x20
  00792: mov    QWORD PTR [rbp-0x80],rax
:00042 %11 = %5 * %11                       [Float][Float]
  00796: mov    rdi,QWORD PTR [rbp-0x80]
  0079a: test   rdi,0x1
  007a1: jne    0x38d67
  007a7: test   rdi,0x2
  007ae: je     0x7ea
  007b4: xorps  xmm4,xmm4
  007b7: movabs rax,0x8000000000000002
  007c1: cmp    rdi,rax
  007c4: je     0x7fc
  007ca: mov    rax,rdi
  007cd: sar    rax,0x3f
  007d1: add    rax,0x2
  007d5: and    rdi,0xfffffffffffffffc
  007d9: or     rdi,rax
  007dc: rol    rdi,0x3d
  007e0: movq   xmm4,rdi
  007e5: jmp    0x7fc
  007ea: call   0xfffef5cc
  007ef: test   rax,rax
  007f2: je     0x38d67
  007f8: movq   xmm4,xmm0
  007fc: mulsd  xmm4,xmm2
:00043 %10 = %10 + %11                      [Float][Float]
  00800: mov    rdi,QWORD PTR [rbp-0x78]
  00804: test   rdi,0x1
  0080b: jne    0x38d9d
  00811: test   rdi,0x2
  00818: je     0x854
  0081e: xorps  xmm6,xmm6
  00821: movabs rax,0x8000000000000002
  0082b: cmp    rdi,rax
  0082e: je     0x866
  00834: mov    rax,rdi
  00837: sar    rax,0x3f
  0083b: add    rax,0x2
  0083f: and    rdi,0xfffffffffffffffc
  00843: or     rdi,rax
  00846: rol    rdi,0x3d
  0084a: movq   xmm6,rdi
  0084f: jmp    0x866
  00854: call   0xfffef5cc
  00859: test   rax,rax
  0085c: je     0x38d9d
  00862: movq   xmm6,xmm0
  00866: addsd  xmm6,xmm4
:00044 %12 = %1.call pl()                   [Isect]
:00045 
  0086a: mov    rdi,QWORD PTR [rbp-0x30]
  0086e: test   rdi,0x7
  00875: jne    0x38de0
  0087b: cmp    DWORD PTR [rdi+0x4],0x2d
  0087f: jne    0x38de0
  00885: cmp    DWORD PTR [rip+0xffffffffffff16e0],0x26        # 0xffff1f6c
  0088c: jne    0x38de0
  00892: mov    esi,DWORD PTR [rip+0x83c]        # 0x10d4
  00898: cmp    esi,0xffffffff
  0089b: je     0x38e30
  008a1: cmp    WORD PTR [rdi+0x2],0x3
  008a6: jne    0x8bf
  008ac: cmp    esi,0x6
  008af: jge    0x8bf
  008b5: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  008ba: jmp    0x90d
  008bf: sub    rsp,0x30
  008c3: movq   QWORD PTR [rsp],xmm2
  008c8: movq   QWORD PTR [rsp+0x8],xmm3
  008ce: movq   QWORD PTR [rsp+0x10],xmm4
  008d4: movq   QWORD PTR [rsp+0x18],xmm5
  008da: movq   QWORD PTR [rsp+0x20],xmm6
  008e0: movabs rax,0x55573c900b50
  008ea: call   rax
  008ec: movq   xmm2,QWORD PTR [rsp]
  008f1: movq   xmm3,QWORD PTR [rsp+0x8]
  008f7: movq   xmm4,QWORD PTR [rsp+0x10]
  008fd: movq   xmm5,QWORD PTR [rsp+0x18]
  00903: movq   xmm6,QWORD PTR [rsp+0x20]
  00909: add    rsp,0x30
  0090d: mov    QWORD PTR [rbp-0x88],rax
:00047 %11 = %12.call z()                   [Vec]
:00048 
  00914: mov    rdi,QWORD PTR [rbp-0x88]
  0091b: test   rdi,0x7
  00922: jne    0x38e9b
  00928: cmp    DWORD PTR [rdi+0x4],0x25
  0092c: jne    0x38e9b
  00932: cmp    DWORD PTR [rip+0xffffffffffff1633],0x26        # 0xffff1f6c
  00939: jne    0x38e9b
  0093f: mov    esi,DWORD PTR [rip+0x797]        # 0x10dc
  00945: cmp    esi,0xffffffff
  00948: je     0x38ede
  0094e: cmp    WORD PTR [rdi+0x2],0x3
  00953: jne    0x96c
  00959: cmp    esi,0x6
  0095c: jge    0x96c
  00962: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00967: jmp    0x9ae
  0096c: sub    rsp,0x20
  00970: movq   QWORD PTR [rsp],xmm2
  00975: movq   QWORD PTR [rsp+0x8],xmm3
  0097b: movq   QWORD PTR [rsp+0x10],xmm5
  00981: movq   QWORD PTR [rsp+0x18],xmm6
  00987: movabs rax,0x55573c900b50
  00991: call   rax
  00993: movq   xmm2,QWORD PTR [rsp]
  00998: movq   xmm3,QWORD PTR [rsp+0x8]
  0099e: movq   xmm5,QWORD PTR [rsp+0x10]
  009a4: movq   xmm6,QWORD PTR [rsp+0x18]
  009aa: add    rsp,0x20
  009ae: mov    QWORD PTR [rbp-0x80],rax
:00050 %13 = %1.call n()                    [Isect]
:00051 
  009b2: mov    rdi,QWORD PTR [rbp-0x30]
  009b6: test   rdi,0x7
  009bd: jne    0x38f3d
  009c3: cmp    DWORD PTR [rdi+0x4],0x2d
  009c7: jne    0x38f3d
  009cd: cmp    DWORD PTR [rip+0xffffffffffff1598],0x26        # 0xffff1f6c
  009d4: jne    0x38f3d
  009da: mov    esi,DWORD PTR [rip+0x704]        # 0x10e4
  009e0: cmp    esi,0xffffffff
  009e3: je     0x38f80
  009e9: cmp    WORD PTR [rdi+0x2],0x3
  009ee: jne    0xa07
  009f4: cmp    esi,0x6
  009f7: jge    0xa07
  009fd: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a02: jmp    0xa49
  00a07: sub    rsp,0x20
  00a0b: movq   QWORD PTR [rsp],xmm2
  00a10: movq   QWORD PTR [rsp+0x8],xmm3
  00a16: movq   QWORD PTR [rsp+0x10],xmm5
  00a1c: movq   QWORD PTR [rsp+0x18],xmm6
  00a22: movabs rax,0x55573c900b50
  00a2c: call   rax
  00a2e: movq   xmm2,QWORD PTR [rsp]
  00a33: movq   xmm3,QWORD PTR [rsp+0x8]
  00a39: movq   xmm5,QWORD PTR [rsp+0x10]
  00a3f: movq   xmm6,QWORD PTR [rsp+0x18]
  00a45: add    rsp,0x20
  00a49: mov    QWORD PTR [rbp-0x90],rax
:00053 %12 = %13.call z()                   [Vec]
:00054 
  00a50: mov    rdi,QWORD PTR [rbp-0x90]
  00a57: test   rdi,0x7
  00a5e: jne    0x38fdf
  00a64: cmp    DWORD PTR [rdi+0x4],0x25
  00a68: jne    0x38fdf
  00a6e: cmp    DWORD PTR [rip+0xffffffffffff14f7],0x26        # 0xffff1f6c
  00a75: jne    0x38fdf
  00a7b: mov    esi,DWORD PTR [rip+0x66b]        # 0x10ec
  00a81: cmp    esi,0xffffffff
  00a84: je     0x39022
  00a8a: cmp    WORD PTR [rdi+0x2],0x3
  00a8f: jne    0xaa8
  00a95: cmp    esi,0x6
  00a98: jge    0xaa8
  00a9e: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00aa3: jmp    0xaea
  00aa8: sub    rsp,0x20
  00aac: movq   QWORD PTR [rsp],xmm2
  00ab1: movq   QWORD PTR [rsp+0x8],xmm3
  00ab7: movq   QWORD PTR [rsp+0x10],xmm5
  00abd: movq   QWORD PTR [rsp+0x18],xmm6
  00ac3: movabs rax,0x55573c900b50
  00acd: call   rax
  00acf: movq   xmm2,QWORD PTR [rsp]
  00ad4: movq   xmm3,QWORD PTR [rsp+0x8]
  00ada: movq   xmm5,QWORD PTR [rsp+0x10]
  00ae0: movq   xmm6,QWORD PTR [rsp+0x18]
  00ae6: add    rsp,0x20
  00aea: mov    QWORD PTR [rbp-0x88],rax
:00056 %12 = %5 * %12                       [Float][Float]
  00af1: mov    rdi,QWORD PTR [rbp-0x88]
  00af8: test   rdi,0x1
  00aff: jne    0x39081
  00b05: test   rdi,0x2
  00b0c: je     0xb48
  00b12: xorps  xmm4,xmm4
  00b15: movabs rax,0x8000000000000002
  00b1f: cmp    rdi,rax
  00b22: je     0xb5a
  00b28: mov    rax,rdi
  00b2b: sar    rax,0x3f
  00b2f: add    rax,0x2
  00b33: and    rdi,0xfffffffffffffffc
  00b37: or     rdi,rax
  00b3a: rol    rdi,0x3d
  00b3e: movq   xmm4,rdi
  00b43: jmp    0xb5a
  00b48: call   0xfffef5cc
  00b4d: test   rax,rax
  00b50: je     0x39081
  00b56: movq   xmm4,xmm0
  00b5a: mulsd  xmm4,xmm2
:00057 %11 = %11 + %12                      [Float][Float]
  00b5e: mov    rdi,QWORD PTR [rbp-0x80]
  00b62: test   rdi,0x1
  00b69: jne    0x390c4
  00b6f: test   rdi,0x2
  00b76: je     0xbb2
  00b7c: xorps  xmm7,xmm7
  00b7f: movabs rax,0x8000000000000002
  00b89: cmp    rdi,rax
  00b8c: je     0xbc4
  00b92: mov    rax,rdi
  00b95: sar    rax,0x3f
  00b99: add    rax,0x2
  00b9d: and    rdi,0xfffffffffffffffc
  00ba1: or     rdi,rax
  00ba4: rol    rdi,0x3d
  00ba8: movq   xmm7,rdi
  00bad: jmp    0xbc4
  00bb2: call   0xfffef5cc
  00bb7: test   rax,rax
  00bba: je     0x390c4
  00bc0: movq   xmm7,xmm0
  00bc4: addsd  xmm7,xmm4
:00058 %7 = %8.call new(%9; 3)              [#<Class:Vec>]
:00059 
  00bc8: movq   xmm0,xmm5
  00bcc: call   0xfffef6bf
  00bd1: mov    QWORD PTR [rbp-0x70],rax
  00bd5: movq   xmm0,xmm6
  00bd9: call   0xfffef6bf
  00bde: mov    QWORD PTR [rbp-0x78],rax
  00be2: movq   xmm0,xmm7
  00be6: call   0xfffef6bf
  00beb: mov    QWORD PTR [rbp-0x80],rax
  00bef: mov    rdi,QWORD PTR [rbp-0x68]
  00bf3: test   rdi,0x7
  00bfa: jne    0x39117
  00c00: cmp    DWORD PTR [rdi+0x4],0x26
  00c04: jne    0x39117
  00c0a: cmp    DWORD PTR [rip+0xffffffffffff135b],0x26        # 0xffff1f6c
  00c11: jne    0x39117
  00c17: mov    r9,0x0
  00c1e: sub    rsp,0x30
  00c22: movq   QWORD PTR [rsp],xmm2
  00c27: movq   QWORD PTR [rsp+0x8],xmm3
  00c2d: movq   QWORD PTR [rsp+0x10],xmm4
  00c33: movq   QWORD PTR [rsp+0x18],xmm5
  00c39: movq   QWORD PTR [rsp+0x20],xmm6
  00c3f: movq   QWORD PTR [rsp+0x28],xmm7
  00c45: mov    rdx,rdi
  00c48: mov    rax,QWORD PTR [rbx]
  00c4b: lea    rdi,[rsp-0x18]
  00c50: mov    QWORD PTR [rdi],rax
  00c53: mov    QWORD PTR [rbx],rdi
  00c56: mov    QWORD PTR [rsp-0x20],0x0
  00c5f: mov    QWORD PTR [rsp-0x38],rcx
  00c64: lea    rcx,[rbp-0x70]
  00c68: mov    r8,0x3
  00c6f: call   0x39150
  00c74: lea    rdi,[rbp-0x8]
  00c78: mov    QWORD PTR [rbx],rdi
  00c7b: movq   xmm2,QWORD PTR [rsp]
  00c80: movq   xmm3,QWORD PTR [rsp+0x8]
  00c86: movq   xmm4,QWORD PTR [rsp+0x10]
  00c8c: movq   xmm5,QWORD PTR [rsp+0x18]
  00c92: movq   xmm6,QWORD PTR [rsp+0x20]
  00c98: movq   xmm7,QWORD PTR [rsp+0x28]
  00c9e: add    rsp,0x30
  00ca2: movabs r13,0x55573cf9a010
  00cac: test   rax,rax
  00caf: je     0xfffef593
  00cb5: mov    QWORD PTR [rbp-0x60],rax
:00061 %8 = literal[71]
  00cb9: mov    rax,0x8f
  00cc0: mov    QWORD PTR [rbp-0x68],rax
:00062 _ = %4.call times(&%8)               [Integer]
:00063 
  00cc4: movq   xmm0,xmm2
  00cc8: call   0xfffef6bf
  00ccd: mov    QWORD PTR [rbp-0x50],rax
  00cd1: movq   xmm0,xmm3
  00cd5: call   0xfffef6bf
  00cda: mov    QWORD PTR [rbp-0x58],rax
  00cde: mov    rdi,QWORD PTR [rbp-0x48]
  00ce2: test   rdi,0x1
  00ce9: jne    0xd06
  00cef: test   rdi,0x7
  00cf6: jne    0x39182
  00cfc: cmp    DWORD PTR [rdi+0x4],0x6
  00d00: jne    0x39182
  00d06: cmp    DWORD PTR [rip+0xffffffffffff125f],0x26        # 0xffff1f6c
  00d0d: jne    0x39182
  00d13: mov    r9,QWORD PTR [rbp-0x68]
  00d17: sub    rsp,0x20
  00d1b: movq   QWORD PTR [rsp],xmm4
  00d20: movq   QWORD PTR [rsp+0x8],xmm5
  00d26: movq   QWORD PTR [rsp+0x10],xmm6
  00d2c: movq   QWORD PTR [rsp+0x18],xmm7
  00d32: mov    rdx,rdi
  00d35: mov    rax,QWORD PTR [rbx]
  00d38: lea    rdi,[rsp-0x18]
  00d3d: mov    QWORD PTR [rdi],rax
  00d40: mov    QWORD PTR [rbx],rdi
  00d43: mov    QWORD PTR [rsp-0x20],0x0
  00d4c: mov    QWORD PTR [rsp-0x38],rcx
  00d51: lea    rcx,[rbp-0x70]
  00d55: mov    r8,0x0
  00d5c: call   0x391a1
  00d61: lea    rdi,[rbp-0x8]
  00d65: mov    QWORD PTR [rbx],rdi
  00d68: movq   xmm4,QWORD PTR [rsp]
  00d6d: movq   xmm5,QWORD PTR [rsp+0x8]
  00d73: movq   xmm6,QWORD PTR [rsp+0x10]
  00d79: movq   xmm7,QWORD PTR [rsp+0x18]
  00d7f: add    rsp,0x20
  00d83: movabs r13,0x55573cf9a050
  00d8d: test   rax,rax
  00d90: je     0xfffef593
:00065 %8 = %3.call to_f()                  [Integer]
:00066 
  00d96: mov    rdi,QWORD PTR [rbp-0x40]
  00d9a: test   rdi,0x1
  00da1: jne    0xdbe
  00da7: test   rdi,0x7
  00dae: jne    0x391d3
  00db4: cmp    DWORD PTR [rdi+0x4],0x6
  00db8: jne    0x391d3
  00dbe: cmp    DWORD PTR [rip+0xffffffffffff11a7],0x26        # 0xffff1f6c
  00dc5: jne    0x391d3
  00dcb: sar    rdi,1
  00dce: cvtsi2sd xmm2,rdi
:00068 %9 = %4.call to_f()                  [Integer]
:00069 
  00dd3: mov    rdi,QWORD PTR [rbp-0x48]
  00dd7: test   rdi,0x1
  00dde: jne    0xdfb
  00de4: test   rdi,0x7
  00deb: jne    0x391f2
  00df1: cmp    DWORD PTR [rdi+0x4],0x6
  00df5: jne    0x391f2
  00dfb: cmp    DWORD PTR [rip+0xffffffffffff116a],0x26        # 0xffff1f6c
  00e02: jne    0x391f2
  00e08: sar    rdi,1
  00e0b: cvtsi2sd xmm3,rdi
:00071 %8 = %8 * %9                         [Float][Float]
  00e10: mulsd  xmm2,xmm3
:00072 %8 = %8 - %6                         [Float][Float]
  00e14: mov    rdi,QWORD PTR [rbp-0x58]
  00e18: test   rdi,0x1
  00e1f: jne    0x3921e
  00e25: test   rdi,0x2
  00e2c: je     0xe68
  00e32: xorps  xmm5,xmm5
  00e35: movabs rax,0x8000000000000002
  00e3f: cmp    rdi,rax
  00e42: je     0xe7a
  00e48: mov    rax,rdi
  00e4b: sar    rax,0x3f
  00e4f: add    rax,0x2
  00e53: and    rdi,0xfffffffffffffffc
  00e57: or     rdi,rax
  00e5a: rol    rdi,0x3d
  00e5e: movq   xmm5,rdi
  00e63: jmp    0xe7a
  00e68: call   0xfffef5cc
  00e6d: test   rax,rax
  00e70: je     0x3921e
  00e76: movq   xmm5,xmm0
  00e7a: subsd  xmm2,xmm5
:00073 %9 = %3.call to_f()                  [Integer]
:00074 
  00e7e: mov    rdi,QWORD PTR [rbp-0x40]
  00e82: test   rdi,0x1
  00e89: jne    0xea6
  00e8f: test   rdi,0x7
  00e96: jne    0x39257
  00e9c: cmp    DWORD PTR [rdi+0x4],0x6
  00ea0: jne    0x39257
  00ea6: cmp    DWORD PTR [rip+0xffffffffffff10bf],0x26        # 0xffff1f6c
  00ead: jne    0x39257
  00eb3: sar    rdi,1
  00eb6: cvtsi2sd xmm3,rdi
:00076 %10 = %4.call to_f()                 [Integer]
:00077 
  00ebb: mov    rdi,QWORD PTR [rbp-0x48]
  00ebf: test   rdi,0x1
  00ec6: jne    0xee3
  00ecc: test   rdi,0x7
  00ed3: jne    0x39283
  00ed9: cmp    DWORD PTR [rdi+0x4],0x6
  00edd: jne    0x39283
  00ee3: cmp    DWORD PTR [rip+0xffffffffffff1082],0x26        # 0xffff1f6c
  00eea: jne    0x39283
  00ef0: sar    rdi,1
  00ef3: cvtsi2sd xmm6,rdi
:00079 %9 = %9 * %10                        [Float][Float]
  00ef8: mulsd  xmm3,xmm6
:00080 %6 = %8 / %9                         [Float][Float]
  00efc: movq   xmm5,xmm2
  00f00: movq   rax,xmm3
  00f05: test   rax,rax
  00f08: je     0xfffef5b8
  00f0e: divsd  xmm5,xmm3
:00081 %9 = const[Vec]                      [Vec]
  00f12: mov    rax,QWORD PTR [rip+0xffffffffffff105f]        # 0xffff1f78
  00f19: cmp    rax,QWORD PTR [rip+0x1e8]        # 0x1108
  00f20: jne    0x392bc
  00f26: mov    rax,QWORD PTR [rip+0x1cb]        # 0x10f8
  00f2d: mov    QWORD PTR [rbp-0x70],rax
:00082 %10 = %6
:00083 %11 = %6
:00084 %12 = %6
:00085 %8 = %9.call new(%10; 3)             [#<Class:Vec>]
:00086 
  00f31: movq   xmm0,xmm5
  00f35: call   0xfffef6bf
  00f3a: mov    QWORD PTR [rbp-0x78],rax
  00f3e: movq   xmm0,xmm5
  00f42: call   0xfffef6bf
  00f47: mov    QWORD PTR [rbp-0x80],rax
  00f4b: movq   xmm0,xmm5
  00f4f: call   0xfffef6bf
  00f54: mov    QWORD PTR [rbp-0x88],rax
  00f5b: mov    rdi,QWORD PTR [rbp-0x70]
  00f5f: test   rdi,0x7
  00f66: jne    0x39344
  00f6c: cmp    DWORD PTR [rdi+0x4],0x26
  00f70: jne    0x39344
  00f76: cmp    DWORD PTR [rip+0xffffffffffff0fef],0x26        # 0xffff1f6c
  00f7d: jne    0x39344
  00f83: mov    r9,0x0
  00f8a: sub    rsp,0x10
  00f8e: movq   QWORD PTR [rsp],xmm5
  00f93: mov    rdx,rdi
  00f96: mov    rax,QWORD PTR [rbx]
  00f99: lea    rdi,[rsp-0x18]
  00f9e: mov    QWORD PTR [rdi],rax
  00fa1: mov    QWORD PTR [rbx],rdi
  00fa4: mov    QWORD PTR [rsp-0x20],0x0
  00fad: mov    QWORD PTR [rsp-0x38],rcx
  00fb2: lea    rcx,[rbp-0x78]
  00fb6: mov    r8,0x3
  00fbd: call   0x39360
  00fc2: lea    rdi,[rbp-0x8]
  00fc6: mov    QWORD PTR [rbx],rdi
  00fc9: movq   xmm5,QWORD PTR [rsp]
  00fce: add    rsp,0x10
  00fd2: movabs r13,0x55573cf9a1c0
  00fdc: test   rax,rax
  00fdf: je     0xfffef593
  00fe5: mov    QWORD PTR [rbp-0x68],rax
:00088 ret %8
  00fe9: mov    rax,QWORD PTR [rbp-0x68]
  00fed: leave  
  00fee: ret    
==> start whole compile: otherBasis FuncId(53) self_class:Scene start:[00000] bytecode:0x55573cfb0280
<== finished compile. elapsed:98.9µs
offset:Pos(72632) code: 6335 bytes  data: 309 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x38282
  00038:    	cmp    DWORD PTR [rdi+0x4],0x2f
  0003c:    	jne    0x38282
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff0e17]        # 0xffff0e68
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1880]        # 0x18d8
  00058:    	jne    0x38291
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1863]        # 0x18c8
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
:00003 
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x382d7
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x25
  0007e:    	jne    0x382d7
  00084: 26 	cmp    DWORD PTR [rip+0xffffffffffff0dd1],0x26        # 0xffff0e5c
  0008b:    	jne    0x382d7
  00091:    	mov    esi,DWORD PTR [rip+0x184d]        # 0x18e4
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x382e6
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 57 	movabs rax,0x55573c900b50
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00005 %7 = %2.call y()                     [Vec]
:00006 
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x3830f
  000df:    	cmp    DWORD PTR [rdi+0x4],0x25
  000e3:    	jne    0x3830f
  000e9: 26 	cmp    DWORD PTR [rip+0xffffffffffff0d6c],0x26        # 0xffff0e5c
  000f0:    	jne    0x3830f
  000f6:    	mov    esi,DWORD PTR [rip+0x17f0]        # 0x18ec
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x3831e
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 57 	movabs rax,0x55573c900b50
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00008 %8 = %2.call z()                     [Vec]
:00009 
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x38347
  00144:    	cmp    DWORD PTR [rdi+0x4],0x25
  00148:    	jne    0x38347
  0014e: 26 	cmp    DWORD PTR [rip+0xffffffffffff0d07],0x26        # 0xffff0e5c
  00155:    	jne    0x38347
  0015b:    	mov    esi,DWORD PTR [rip+0x1793]        # 0x18f4
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x38356
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 57 	movabs rax,0x55573c900b50
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
:00012 
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x3837f
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x26
  001ad:    	jne    0x3837f
  001b3: 26 	cmp    DWORD PTR [rip+0xffffffffffff0ca2],0x26        # 0xffff0e5c
  001ba:    	jne    0x3837f
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x3838e
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 57 	movabs r13,0x55573cfb0350
  00207:    	test   rax,rax
  0020a:    	je     0xfffee483
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00014 %1.[%3] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 57 	movabs rax,0x55573c95cd90
  00230:    	call   rax
  00232: 57 	movabs r13,0x55573cfb0370
  0023c:    	test   rax,rax
  0023f:    	je     0xfffee483
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff0c14]        # 0xffff0e68
  00254: 00 	cmp    rax,QWORD PTR [rip+0x16ad]        # 0x1908
  0025b:    	jne    0x383c0
  00261: 00 	mov    rax,QWORD PTR [rip+0x1690]        # 0x18f8
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x16a4]        # 0x1918
:00018 %7 = literal[0.0]
  00274: 00 	movq   xmm3,QWORD PTR [rip+0x16ac]        # 0x1928
:00019 %8 = literal[0.0]
  0027c: 00 	movq   xmm4,QWORD PTR [rip+0x16b4]        # 0x1938
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
:00021 
  00284:    	movq   xmm0,xmm2
  00288:    	call   0xfffee5af
  0028d:    	mov    QWORD PTR [rbp-0x58],rax
  00291:    	movq   xmm0,xmm3
  00295:    	call   0xfffee5af
  0029a:    	mov    QWORD PTR [rbp-0x60],rax
  0029e:    	movq   xmm0,xmm4
  002a2:    	call   0xfffee5af
  002a7:    	mov    QWORD PTR [rbp-0x68],rax
  002ab:    	mov    rdi,QWORD PTR [rbp-0x50]
  002af: 00 	test   rdi,0x7
  002b6:    	jne    0x38406
  002bc:    	cmp    DWORD PTR [rdi+0x4],0x26
  002c0:    	jne    0x38406
  002c6: 26 	cmp    DWORD PTR [rip+0xffffffffffff0b8f],0x26        # 0xffff0e5c
  002cd:    	jne    0x38406
  002d3: 00 	mov    r9,0x0
  002da:    	sub    rsp,0x20
  002de:    	movq   QWORD PTR [rsp],xmm2
  002e3:    	movq   QWORD PTR [rsp+0x8],xmm3
  002e9:    	movq   QWORD PTR [rsp+0x10],xmm4
  002ef:    	mov    rdx,rdi
  002f2:    	mov    rax,QWORD PTR [rbx]
  002f5:    	lea    rdi,[rsp-0x18]
  002fa:    	mov    QWORD PTR [rdi],rax
  002fd:    	mov    QWORD PTR [rbx],rdi
  00300: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00309:    	mov    QWORD PTR [rsp-0x38],rcx
  0030e:    	lea    rcx,[rbp-0x58]
  00312: 00 	mov    r8,0x3
  00319:    	call   0x38415
  0031e:    	lea    rdi,[rbp-0x8]
  00322:    	mov    QWORD PTR [rbx],rdi
  00325:    	movq   xmm2,QWORD PTR [rsp]
  0032a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00330:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00336:    	add    rsp,0x20
  0033a: 57 	movabs r13,0x55573cfb03e0
  00344:    	test   rax,rax
  00347:    	je     0xfffee483
  0034d:    	mov    QWORD PTR [rbp-0x48],rax
:00023 %1.[%3] = %4
  00351:    	sub    rsp,0x20
  00355:    	movq   QWORD PTR [rsp],xmm2
  0035a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00360:    	movq   QWORD PTR [rsp+0x10],xmm4
  00366:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0036e:    	mov    r8,QWORD PTR [rbp-0x48]
  00372:    	mov    rdi,rbx
  00375:    	mov    rsi,r12
  00378: 57 	movabs rax,0x55573c95cd90
  00382:    	call   rax
  00384:    	movq   xmm2,QWORD PTR [rsp]
  00389:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0038f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00395:    	add    rsp,0x20
  00399: 57 	movabs r13,0x55573cfb0400
  003a3:    	test   rax,rax
  003a6:    	je     0xfffee483
:00024 %4 = %2.call x()                     [Vec]
:00025 
  003ac:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b0: 00 	test   rdi,0x7
  003b7:    	jne    0x38447
  003bd:    	cmp    DWORD PTR [rdi+0x4],0x25
  003c1:    	jne    0x38447
  003c7: 26 	cmp    DWORD PTR [rip+0xffffffffffff0a8e],0x26        # 0xffff0e5c
  003ce:    	jne    0x38447
  003d4:    	mov    esi,DWORD PTR [rip+0x156a]        # 0x1944
  003da:    	cmp    esi,0xffffffff
  003dd:    	je     0x38456
  003e3:    	cmp    WORD PTR [rdi+0x2],0x3
  003e8:    	jne    0x401
  003ee:    	cmp    esi,0x6
  003f1:    	jge    0x401
  003f7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003fc:    	jmp    0x437
  00401:    	sub    rsp,0x20
  00405:    	movq   QWORD PTR [rsp],xmm2
  0040a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00410:    	movq   QWORD PTR [rsp+0x10],xmm4
  00416: 57 	movabs rax,0x55573c900b50
  00420:    	call   rax
  00422:    	movq   xmm2,QWORD PTR [rsp]
  00427:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0042d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00433:    	add    rsp,0x20
  00437:    	mov    QWORD PTR [rbp-0x48],rax
:00027 %5 = literal[0.6]
  0043b: 00 	movq   xmm5,QWORD PTR [rip+0x1505]        # 0x1948
:00028 %3 = %4 < %5                         [Float][Float]
  00443:    	mov    rdi,QWORD PTR [rbp-0x48]
  00447: 00 	test   rdi,0x1
  0044e:    	jne    0x384a9
  00454: 00 	test   rdi,0x2
  0045b:    	je     0x497
  00461:    	xorps  xmm6,xmm6
  00464: 00 	movabs rax,0x8000000000000002
  0046e:    	cmp    rdi,rax
  00471:    	je     0x4a9
  00477:    	mov    rax,rdi
  0047a:    	sar    rax,0x3f
  0047e:    	add    rax,0x2
  00482:    	and    rdi,0xfffffffffffffffc
  00486:    	or     rdi,rax
  00489:    	rol    rdi,0x3d
  0048d:    	movq   xmm6,rdi
  00492:    	jmp    0x4a9
  00497:    	call   0xfffee4bc
  0049c:    	test   rax,rax
  0049f:    	je     0x384a9
  004a5:    	movq   xmm6,xmm0
  004a9:    	xor    rax,rax
  004ac:    	ucomisd xmm6,xmm5
  004b0:    	setb   al
  004b4:    	shl    rax,0x3
  004b8:    	or     rax,0x14
  004bc:    	mov    QWORD PTR [rbp-0x40],rax
:00029 condnotbr %3 =>:00035
  004c0:    	mov    rax,QWORD PTR [rbp-0x40]
  004c4:    	or     rax,0x10
  004c8:    	cmp    rax,0x14
  004cc:    	je     0x3855c
:00030 %4 = %2.call x()                     [Vec]
:00031 
  004d2:    	mov    rdi,QWORD PTR [rbp-0x38]
  004d6: 00 	test   rdi,0x7
  004dd:    	jne    0x384c5
  004e3:    	cmp    DWORD PTR [rdi+0x4],0x25
  004e7:    	jne    0x384c5
  004ed: 26 	cmp    DWORD PTR [rip+0xffffffffffff0968],0x26        # 0xffff0e5c
  004f4:    	jne    0x384c5
  004fa:    	mov    esi,DWORD PTR [rip+0x1454]        # 0x1954
  00500:    	cmp    esi,0xffffffff
  00503:    	je     0x384e1
  00509:    	cmp    WORD PTR [rdi+0x2],0x3
  0050e:    	jne    0x527
  00514:    	cmp    esi,0x6
  00517:    	jge    0x527
  0051d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00522:    	jmp    0x569
  00527:    	sub    rsp,0x20
  0052b:    	movq   QWORD PTR [rsp],xmm2
  00530:    	movq   QWORD PTR [rsp+0x8],xmm3
  00536:    	movq   QWORD PTR [rsp+0x10],xmm4
  0053c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00542: 57 	movabs rax,0x55573c900b50
  0054c:    	call   rax
  0054e:    	movq   xmm2,QWORD PTR [rsp]
  00553:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00559:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0055f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00565:    	add    rsp,0x20
  00569:    	mov    QWORD PTR [rbp-0x48],rax
:00033 %5 = literal[-0.6]
  0056d: 00 	movq   xmm5,QWORD PTR [rip+0x13e3]        # 0x1958
:00034 %3 = %4 > %5                         [Float][Float]
  00575:    	mov    rdi,QWORD PTR [rbp-0x48]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x38540
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffee4bc
  005ce:    	test   rax,rax
  005d1:    	je     0x38540
  005d7:    	movq   xmm6,xmm0
  005db:    	xor    rax,rax
  005de:    	ucomisd xmm6,xmm5
  005e2:    	seta   al
  005e6:    	shl    rax,0x3
  005ea:    	or     rax,0x14
  005ee:    	mov    QWORD PTR [rbp-0x40],rax
  005f2:    	jmp    0x38582
:00035 condnotbr %3 =>:00043
  005f7:    	mov    rax,QWORD PTR [rbp-0x40]
  005fb:    	or     rax,0x10
  005ff:    	cmp    rax,0x14
  00603:    	je     0x75c
:00036 %3 = 1: i32
  00609: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]
  00611:    	sub    rsp,0x30
  00615:    	movq   QWORD PTR [rsp],xmm2
  0061a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00620:    	movq   QWORD PTR [rsp+0x10],xmm4
  00626:    	movq   QWORD PTR [rsp+0x18],xmm5
  0062c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00632:    	mov    rdx,QWORD PTR [rbp-0x30]
  00636:    	mov    rcx,QWORD PTR [rbp-0x40]
  0063a:    	mov    rdi,rbx
  0063d:    	mov    rsi,r12
  00640: 57 	movabs rax,0x55573c95cc80
  0064a:    	call   rax
  0064c:    	movq   xmm2,QWORD PTR [rsp]
  00651:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00657:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0065d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00663:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00669:    	add    rsp,0x30
  0066d: 57 	movabs r13,0x55573cfb04e0
  00677:    	test   rax,rax
  0067a:    	je     0xfffee483
  00680:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  00684: 00 	movq   xmm6,QWORD PTR [rip+0x12dc]        # 0x1968
:00039 _ = %3.call x=(%4; 1)                [Vec]
:00040 
  0068c:    	movq   xmm0,xmm6
  00690:    	call   0xfffee5af
  00695:    	mov    QWORD PTR [rbp-0x48],rax
  00699:    	mov    rdi,QWORD PTR [rbp-0x40]
  0069d: 00 	test   rdi,0x7
  006a4:    	jne    0x385a8
  006aa:    	cmp    DWORD PTR [rdi+0x4],0x25
  006ae:    	jne    0x385a8
  006b4: 26 	cmp    DWORD PTR [rip+0xffffffffffff07a1],0x26        # 0xffff0e5c
  006bb:    	jne    0x385a8
  006c1:    	mov    esi,DWORD PTR [rip+0x12ad]        # 0x1974
  006c7:    	cmp    esi,0xffffffff
  006ca:    	je     0x385c4
  006d0:    	cmp    WORD PTR [rdi+0x2],0x3
  006d5:    	jne    0x6f2
  006db:    	cmp    esi,0x6
  006de:    	jge    0x6f2
  006e4:    	mov    rax,QWORD PTR [rbp-0x48]
  006e8:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006ed:    	jmp    0x757
  006f2:    	sub    rsp,0x30
  006f6:    	movq   QWORD PTR [rsp],xmm2
  006fb:    	movq   QWORD PTR [rsp+0x8],xmm3
  00701:    	movq   QWORD PTR [rsp+0x10],xmm4
  00707:    	movq   QWORD PTR [rsp+0x18],xmm5
  0070d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00713:    	mov    rdx,QWORD PTR [rbp-0x48]
  00717: 57 	movabs rax,0x55573c900dd0
  00721:    	call   rax
  00723:    	movq   xmm2,QWORD PTR [rsp]
  00728:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0072e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00734:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0073a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00740:    	add    rsp,0x30
  00744: 57 	movabs r13,0x55573cfb0510
  0074e:    	test   rax,rax
  00751:    	je     0xfffee483
:00042 br =>:00087
  00757:    	jmp    0x38865
:00043 %4 = %2.call y()                     [<INVALID>]
:00044 
  0075c: 00 	mov    rdi,0x4
  00763: 01 	sub    DWORD PTR [rip+0x120e],0x1        # 0x1978
  0076a:    	jne    0x38636
  00770:    	mov    rdi,r12
  00773:    	mov    esi,DWORD PTR [rbp-0x18]
  00776:    	mov    rdx,QWORD PTR [rbp-0x28]
  0077a: 57 	movabs rax,0x55573c962b00
  00784:    	call   rax
  00786: 00 	mov    rdi,0x4
  0078d:    	jmp    0x38636
:00046 %5 = literal[0.6]
  00792: 00 	movq   xmm5,QWORD PTR [rip+0x11ee]        # 0x1988
:00047 %3 = %4 < %5                         [<INVALID>][<INVALID>]
  0079a: 00 	mov    rdi,0x4
  007a1: 01 	sub    DWORD PTR [rip+0x11e8],0x1        # 0x1990
  007a8:    	jne    0x38652
  007ae:    	mov    rdi,r12
  007b1:    	mov    esi,DWORD PTR [rbp-0x18]
  007b4:    	mov    rdx,QWORD PTR [rbp-0x28]
  007b8: 57 	movabs rax,0x55573c962b00
  007c2:    	call   rax
  007c4: 00 	mov    rdi,0x4
  007cb:    	jmp    0x38652
:00048 condnotbr %3 =>:00054
  007d0:    	mov    rax,QWORD PTR [rbp-0x40]
  007d4:    	or     rax,0x10
  007d8:    	cmp    rax,0x14
  007dc:    	je     0x386a6
:00049 %4 = %2.call y()                     [<INVALID>]
:00050 
  007e2: 00 	mov    rdi,0x4
  007e9: 01 	sub    DWORD PTR [rip+0x11a4],0x1        # 0x1994
  007f0:    	jne    0x3866e
  007f6:    	mov    rdi,r12
  007f9:    	mov    esi,DWORD PTR [rbp-0x18]
  007fc:    	mov    rdx,QWORD PTR [rbp-0x28]
  00800: 57 	movabs rax,0x55573c962b00
  0080a:    	call   rax
  0080c: 00 	mov    rdi,0x4
  00813:    	jmp    0x3866e
:00052 %5 = literal[-0.6]
  00818: 00 	movq   xmm5,QWORD PTR [rip+0x1178]        # 0x1998
:00053 %3 = %4 > %5                         [<INVALID>][<INVALID>]
  00820: 00 	mov    rdi,0x4
  00827: 01 	sub    DWORD PTR [rip+0x1172],0x1        # 0x19a0
  0082e:    	jne    0x3868a
  00834:    	mov    rdi,r12
  00837:    	mov    esi,DWORD PTR [rbp-0x18]
  0083a:    	mov    rdx,QWORD PTR [rbp-0x28]
  0083e: 57 	movabs rax,0x55573c962b00
  00848:    	call   rax
  0084a: 00 	mov    rdi,0x4
  00851:    	jmp    0x3868a
  00856:    	jmp    0x386cc
:00054 condnotbr %3 =>:00062
  0085b:    	mov    rax,QWORD PTR [rbp-0x40]
  0085f:    	or     rax,0x10
  00863:    	cmp    rax,0x14
  00867:    	je     0x92b
:00055 %3 = 1: i32
  0086d: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]
  00875:    	sub    rsp,0x30
  00879:    	movq   QWORD PTR [rsp],xmm2
  0087e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00884:    	movq   QWORD PTR [rsp+0x10],xmm4
  0088a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00890:    	movq   QWORD PTR [rsp+0x20],xmm6
  00896:    	mov    rdx,QWORD PTR [rbp-0x30]
  0089a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0089e:    	mov    rdi,rbx
  008a1:    	mov    rsi,r12
  008a4: 57 	movabs rax,0x55573c95cc80
  008ae:    	call   rax
  008b0:    	movq   xmm2,QWORD PTR [rsp]
  008b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008c7:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008cd:    	add    rsp,0x30
  008d1: 57 	movabs r13,0x55573cfb0610
  008db:    	test   rax,rax
  008de:    	je     0xfffee483
  008e4:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  008e8: 00 	movq   xmm6,QWORD PTR [rip+0x10b8]        # 0x19a8
:00058 _ = %3.call y=(%4; 1)                [<INVALID>]
:00059 
  008f0: 00 	mov    rdi,0x4
  008f7: 01 	sub    DWORD PTR [rip+0x10b2],0x1        # 0x19b0
  008fe:    	jne    0x386f2
  00904:    	mov    rdi,r12
  00907:    	mov    esi,DWORD PTR [rbp-0x18]
  0090a:    	mov    rdx,QWORD PTR [rbp-0x28]
  0090e: 57 	movabs rax,0x55573c962b00
  00918:    	call   rax
  0091a: 00 	mov    rdi,0x4
  00921:    	jmp    0x386f2
:00061 br =>:00087
  00926:    	jmp    0x3888b
:00062 %4 = %2.call z()                     [<INVALID>]
:00063 
  0092b: 00 	mov    rdi,0x4
  00932: 01 	sub    DWORD PTR [rip+0x107b],0x1        # 0x19b4
  00939:    	jne    0x3871b
  0093f:    	mov    rdi,r12
  00942:    	mov    esi,DWORD PTR [rbp-0x18]
  00945:    	mov    rdx,QWORD PTR [rbp-0x28]
  00949: 57 	movabs rax,0x55573c962b00
  00953:    	call   rax
  00955: 00 	mov    rdi,0x4
  0095c:    	jmp    0x3871b
:00065 %5 = literal[0.6]
  00961: 00 	movq   xmm5,QWORD PTR [rip+0x104f]        # 0x19b8
:00066 %3 = %4 < %5                         [<INVALID>][<INVALID>]
  00969: 00 	mov    rdi,0x4
  00970: 01 	sub    DWORD PTR [rip+0x1049],0x1        # 0x19c0
  00977:    	jne    0x38737
  0097d:    	mov    rdi,r12
  00980:    	mov    esi,DWORD PTR [rbp-0x18]
  00983:    	mov    rdx,QWORD PTR [rbp-0x28]
  00987: 57 	movabs rax,0x55573c962b00
  00991:    	call   rax
  00993: 00 	mov    rdi,0x4
  0099a:    	jmp    0x38737
:00067 condnotbr %3 =>:00073
  0099f:    	mov    rax,QWORD PTR [rbp-0x40]
  009a3:    	or     rax,0x10
  009a7:    	cmp    rax,0x14
  009ab:    	je     0x3878b
:00068 %4 = %2.call z()                     [<INVALID>]
:00069 
  009b1: 00 	mov    rdi,0x4
  009b8: 01 	sub    DWORD PTR [rip+0x1005],0x1        # 0x19c4
  009bf:    	jne    0x38753
  009c5:    	mov    rdi,r12
  009c8:    	mov    esi,DWORD PTR [rbp-0x18]
  009cb:    	mov    rdx,QWORD PTR [rbp-0x28]
  009cf: 57 	movabs rax,0x55573c962b00
  009d9:    	call   rax
  009db: 00 	mov    rdi,0x4
  009e2:    	jmp    0x38753
:00071 %5 = literal[-0.6]
  009e7: 00 	movq   xmm5,QWORD PTR [rip+0xfd9]        # 0x19c8
:00072 %3 = %4 > %5                         [<INVALID>][<INVALID>]
  009ef: 00 	mov    rdi,0x4
  009f6: 01 	sub    DWORD PTR [rip+0xfd3],0x1        # 0x19d0
  009fd:    	jne    0x3876f
  00a03:    	mov    rdi,r12
  00a06:    	mov    esi,DWORD PTR [rbp-0x18]
  00a09:    	mov    rdx,QWORD PTR [rbp-0x28]
  00a0d: 57 	movabs rax,0x55573c962b00
  00a17:    	call   rax
  00a19: 00 	mov    rdi,0x4
  00a20:    	jmp    0x3876f
  00a25:    	jmp    0x387b1
:00073 condnotbr %3 =>:00081
  00a2a:    	mov    rax,QWORD PTR [rbp-0x40]
  00a2e:    	or     rax,0x10
  00a32:    	cmp    rax,0x14
  00a36:    	je     0xafa
:00074 %3 = 1: i32
  00a3c: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]
  00a44:    	sub    rsp,0x30
  00a48:    	movq   QWORD PTR [rsp],xmm2
  00a4d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a53:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a59:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a5f:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a65:    	mov    rdx,QWORD PTR [rbp-0x30]
  00a69:    	mov    rcx,QWORD PTR [rbp-0x40]
  00a6d:    	mov    rdi,rbx
  00a70:    	mov    rsi,r12
  00a73: 57 	movabs rax,0x55573c95cc80
  00a7d:    	call   rax
  00a7f:    	movq   xmm2,QWORD PTR [rsp]
  00a84:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a8a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a90:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a96:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00a9c:    	add    rsp,0x30
  00aa0: 57 	movabs r13,0x55573cfb0740
  00aaa:    	test   rax,rax
  00aad:    	je     0xfffee483
  00ab3:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00ab7: 00 	movq   xmm6,QWORD PTR [rip+0xf19]        # 0x19d8
:00077 _ = %3.call z=(%4; 1)                [<INVALID>]
:00078 
  00abf: 00 	mov    rdi,0x4
  00ac6: 01 	sub    DWORD PTR [rip+0xf13],0x1        # 0x19e0
  00acd:    	jne    0x387d7
  00ad3:    	mov    rdi,r12
  00ad6:    	mov    esi,DWORD PTR [rbp-0x18]
  00ad9:    	mov    rdx,QWORD PTR [rbp-0x28]
  00add: 57 	movabs rax,0x55573c962b00
  00ae7:    	call   rax
  00ae9: 00 	mov    rdi,0x4
  00af0:    	jmp    0x387d7
:00080 br =>:00087
  00af5:    	jmp    0x388be
:00081 %3 = 1: i32
  00afa: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]
  00b02:    	sub    rsp,0x30
  00b06:    	movq   QWORD PTR [rsp],xmm2
  00b0b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b11:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b17:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b1d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00b23:    	mov    rdx,QWORD PTR [rbp-0x30]
  00b27:    	mov    rcx,QWORD PTR [rbp-0x40]
  00b2b:    	mov    rdi,rbx
  00b2e:    	mov    rsi,r12
  00b31: 57 	movabs rax,0x55573c95cc80
  00b3b:    	call   rax
  00b3d:    	movq   xmm2,QWORD PTR [rsp]
  00b42:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b48:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b4e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b54:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00b5a:    	add    rsp,0x30
  00b5e: 57 	movabs r13,0x55573cfb07b0
  00b68:    	test   rax,rax
  00b6b:    	je     0xfffee483
  00b71:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00b75: 00 	movq   xmm6,QWORD PTR [rip+0xe6b]        # 0x19e8
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
:00085 
  00b7d: 00 	mov    rdi,0x4
  00b84: 01 	sub    DWORD PTR [rip+0xe65],0x1        # 0x19f0
  00b8b:    	jne    0x38800
  00b91:    	mov    rdi,r12
  00b94:    	mov    esi,DWORD PTR [rbp-0x18]
  00b97:    	mov    rdx,QWORD PTR [rbp-0x28]
  00b9b: 57 	movabs rax,0x55573c962b00
  00ba5:    	call   rax
  00ba7: 00 	mov    rdi,0x4
  00bae:    	jmp    0x38800
:00087 %3 = 0: i32
  00bb3: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  00bbb: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]
  00bc3:    	sub    rsp,0x20
  00bc7:    	movq   QWORD PTR [rsp],xmm2
  00bcc:    	movq   QWORD PTR [rsp+0x8],xmm3
  00bd2:    	movq   QWORD PTR [rsp+0x10],xmm4
  00bd8:    	movq   QWORD PTR [rsp+0x18],xmm6
  00bde:    	mov    rdx,QWORD PTR [rbp-0x30]
  00be2:    	mov    rcx,QWORD PTR [rbp-0x50]
  00be6:    	mov    rdi,rbx
  00be9:    	mov    rsi,r12
  00bec: 57 	movabs rax,0x55573c95cc80
  00bf6:    	call   rax
  00bf8:    	movq   xmm2,QWORD PTR [rsp]
  00bfd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c03:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c09:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c0f:    	add    rsp,0x20
  00c13: 57 	movabs r13,0x55573cfb0820
  00c1d:    	test   rax,rax
  00c20:    	je     0xfffee483
  00c26:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  00c2a: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]
  00c32:    	sub    rsp,0x20
  00c36:    	movq   QWORD PTR [rsp],xmm3
  00c3b:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c41:    	movq   QWORD PTR [rsp+0x10],xmm6
  00c47:    	mov    rdx,QWORD PTR [rbp-0x30]
  00c4b:    	mov    rcx,QWORD PTR [rbp-0x58]
  00c4f:    	mov    rdi,rbx
  00c52:    	mov    rsi,r12
  00c55: 57 	movabs rax,0x55573c95cc80
  00c5f:    	call   rax
  00c61:    	movq   xmm3,QWORD PTR [rsp]
  00c66:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c6c:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00c72:    	add    rsp,0x20
  00c76: 57 	movabs r13,0x55573cfb0840
  00c80:    	test   rax,rax
  00c83:    	je     0xfffee483
  00c89:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
:00093 
  00c8d:    	mov    rdi,QWORD PTR [rbp-0x50]
  00c91: 00 	test   rdi,0x7
  00c98:    	jne    0x38829
  00c9e:    	cmp    DWORD PTR [rdi+0x4],0x25
  00ca2:    	jne    0x38829
  00ca8: 26 	cmp    DWORD PTR [rip+0xffffffffffff01ad],0x26        # 0xffff0e5c
  00caf:    	jne    0x38829
  00cb5:    	sub    rsp,0x10
  00cb9:    	movq   QWORD PTR [rsp],xmm3
  00cbe:    	movq   QWORD PTR [rsp+0x8],xmm4
  00cc4:    	mov    rax,QWORD PTR [rbx]
  00cc7:    	lea    rdi,[rsp-0x18]
  00ccc:    	mov    QWORD PTR [rdi],rax
  00ccf:    	mov    QWORD PTR [rbx],rdi
  00cd2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cdb:    	mov    QWORD PTR [rsp-0x38],rcx
  00ce0:    	mov    rax,QWORD PTR [rbp-0x50]
  00ce4:    	mov    QWORD PTR [rsp-0x38],rax
  00ce9: 00 	mov    rdi,0x1
  00cf0:    	mov    rax,QWORD PTR [rbp-0x58]
  00cf4:    	mov    QWORD PTR [rsp-0x40],rax
  00cf9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d02: 09 	movabs rax,0x90000003a
  00d0c:    	mov    QWORD PTR [rsp-0x28],rax
  00d11: 57 	movabs r13,0x55573cf94eb0
  00d1b:    	call   0xffff7f8c
  00d20:    	lea    rdi,[rbp-0x8]
  00d24:    	mov    QWORD PTR [rbx],rdi
  00d27:    	movq   xmm3,QWORD PTR [rsp]
  00d2c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d32:    	add    rsp,0x10
  00d36: 57 	movabs r13,0x55573cfb0860
  00d40:    	test   rax,rax
  00d43:    	je     0xfffee483
  00d49:    	mov    QWORD PTR [rbp-0x48],rax
:00095 %1.[%3] = %4
  00d4d:    	sub    rsp,0x10
  00d51:    	movq   QWORD PTR [rsp],xmm3
  00d56:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d5c:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d60:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d64:    	mov    r8,QWORD PTR [rbp-0x48]
  00d68:    	mov    rdi,rbx
  00d6b:    	mov    rsi,r12
  00d6e: 57 	movabs rax,0x55573c95cd90
  00d78:    	call   rax
  00d7a:    	movq   xmm3,QWORD PTR [rsp]
  00d7f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d85:    	add    rsp,0x10
  00d89: 57 	movabs r13,0x55573cfb0880
  00d93:    	test   rax,rax
  00d96:    	je     0xfffee483
:00096 %3 = 0: i32
  00d9c: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  00da4: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]
  00dac:    	sub    rsp,0x10
  00db0:    	movq   QWORD PTR [rsp],xmm3
  00db5:    	movq   QWORD PTR [rsp+0x8],xmm4
  00dbb:    	mov    rdx,QWORD PTR [rbp-0x30]
  00dbf:    	mov    rcx,QWORD PTR [rbp-0x50]
  00dc3:    	mov    rdi,rbx
  00dc6:    	mov    rsi,r12
  00dc9: 57 	movabs rax,0x55573c95cc80
  00dd3:    	call   rax
  00dd5:    	movq   xmm3,QWORD PTR [rsp]
  00dda:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00de0:    	add    rsp,0x10
  00de4: 57 	movabs r13,0x55573cfb08b0
  00dee:    	test   rax,rax
  00df1:    	je     0xfffee483
  00df7:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
:00100 
  00dfb:    	mov    rdi,QWORD PTR [rbp-0x50]
  00dff: 00 	test   rdi,0x7
  00e06:    	jne    0x38838
  00e0c:    	cmp    DWORD PTR [rdi+0x4],0x25
  00e10:    	jne    0x38838
  00e16: 26 	cmp    DWORD PTR [rip+0xffffffffffff003f],0x26        # 0xffff0e5c
  00e1d:    	jne    0x38838
  00e23:    	sub    rsp,0x10
  00e27:    	movq   QWORD PTR [rsp],xmm3
  00e2c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e32:    	mov    rax,QWORD PTR [rbx]
  00e35:    	lea    rdi,[rsp-0x18]
  00e3a:    	mov    QWORD PTR [rdi],rax
  00e3d:    	mov    QWORD PTR [rbx],rdi
  00e40: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00e49:    	mov    QWORD PTR [rsp-0x38],rcx
  00e4e:    	mov    rax,QWORD PTR [rbp-0x50]
  00e52:    	mov    QWORD PTR [rsp-0x38],rax
  00e57: 00 	mov    rdi,0x0
  00e5e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e67: 07 	movabs rax,0x100070000003d
  00e71:    	mov    QWORD PTR [rsp-0x28],rax
  00e76: 57 	movabs r13,0x55573cfa76a0
  00e80:    	call   0xffff1721
  00e85:    	lea    rdi,[rbp-0x8]
  00e89:    	mov    QWORD PTR [rbx],rdi
  00e8c:    	movq   xmm3,QWORD PTR [rsp]
  00e91:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e97:    	add    rsp,0x10
  00e9b: 57 	movabs r13,0x55573cfb08d0
  00ea5:    	test   rax,rax
  00ea8:    	je     0xfffee483
  00eae:    	mov    QWORD PTR [rbp-0x48],rax
:00102 %1.[%3] = %4
  00eb2:    	sub    rsp,0x10
  00eb6:    	movq   QWORD PTR [rsp],xmm3
  00ebb:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ec1:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ec5:    	mov    rcx,QWORD PTR [rbp-0x40]
  00ec9:    	mov    r8,QWORD PTR [rbp-0x48]
  00ecd:    	mov    rdi,rbx
  00ed0:    	mov    rsi,r12
  00ed3: 57 	movabs rax,0x55573c95cd90
  00edd:    	call   rax
  00edf:    	movq   xmm3,QWORD PTR [rsp]
  00ee4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00eea:    	add    rsp,0x10
  00eee: 57 	movabs r13,0x55573cfb08f0
  00ef8:    	test   rax,rax
  00efb:    	je     0xfffee483
:00103 %3 = 1: i32
  00f01: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  00f09: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]
  00f11:    	sub    rsp,0x10
  00f15:    	movq   QWORD PTR [rsp],xmm3
  00f1a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f20:    	mov    rdx,QWORD PTR [rbp-0x30]
  00f24:    	mov    rcx,QWORD PTR [rbp-0x50]
  00f28:    	mov    rdi,rbx
  00f2b:    	mov    rsi,r12
  00f2e: 57 	movabs rax,0x55573c95cc80
  00f38:    	call   rax
  00f3a:    	movq   xmm3,QWORD PTR [rsp]
  00f3f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f45:    	add    rsp,0x10
  00f49: 57 	movabs r13,0x55573cfb0920
  00f53:    	test   rax,rax
  00f56:    	je     0xfffee483
  00f5c:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  00f60: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]
  00f68:    	sub    rsp,0x10
  00f6c:    	movq   QWORD PTR [rsp],xmm3
  00f71:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f77:    	mov    rdx,QWORD PTR [rbp-0x30]
  00f7b:    	mov    rcx,QWORD PTR [rbp-0x58]
  00f7f:    	mov    rdi,rbx
  00f82:    	mov    rsi,r12
  00f85: 57 	movabs rax,0x55573c95cc80
  00f8f:    	call   rax
  00f91:    	movq   xmm3,QWORD PTR [rsp]
  00f96:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f9c:    	add    rsp,0x10
  00fa0: 57 	movabs r13,0x55573cfb0940
  00faa:    	test   rax,rax
  00fad:    	je     0xfffee483
  00fb3:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
:00109 
  00fb7:    	mov    rdi,QWORD PTR [rbp-0x50]
  00fbb: 00 	test   rdi,0x7
  00fc2:    	jne    0x38847
  00fc8:    	cmp    DWORD PTR [rdi+0x4],0x25
  00fcc:    	jne    0x38847
  00fd2: 26 	cmp    DWORD PTR [rip+0xfffffffffffefe83],0x26        # 0xffff0e5c
  00fd9:    	jne    0x38847
  00fdf:    	sub    rsp,0x10
  00fe3:    	movq   QWORD PTR [rsp],xmm3
  00fe8:    	movq   QWORD PTR [rsp+0x8],xmm4
  00fee:    	mov    rax,QWORD PTR [rbx]
  00ff1:    	lea    rdi,[rsp-0x18]
  00ff6:    	mov    QWORD PTR [rdi],rax
  00ff9:    	mov    QWORD PTR [rbx],rdi
  00ffc: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01005:    	mov    QWORD PTR [rsp-0x38],rcx
  0100a:    	mov    rax,QWORD PTR [rbp-0x50]
  0100e:    	mov    QWORD PTR [rsp-0x38],rax
  01013: 00 	mov    rdi,0x1
  0101a:    	mov    rax,QWORD PTR [rbp-0x58]
  0101e:    	mov    QWORD PTR [rsp-0x40],rax
  01023: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0102c: 09 	movabs rax,0x90000003a
  01036:    	mov    QWORD PTR [rsp-0x28],rax
  0103b: 57 	movabs r13,0x55573cf94eb0
  01045:    	call   0xffff7f8c
  0104a:    	lea    rdi,[rbp-0x8]
  0104e:    	mov    QWORD PTR [rbx],rdi
  01051:    	movq   xmm3,QWORD PTR [rsp]
  01056:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0105c:    	add    rsp,0x10
  01060: 57 	movabs r13,0x55573cfb0960
  0106a:    	test   rax,rax
  0106d:    	je     0xfffee483
  01073:    	mov    QWORD PTR [rbp-0x48],rax
:00111 %1.[%3] = %4
  01077:    	sub    rsp,0x10
  0107b:    	movq   QWORD PTR [rsp],xmm3
  01080:    	movq   QWORD PTR [rsp+0x8],xmm4
  01086:    	mov    rdx,QWORD PTR [rbp-0x30]
  0108a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0108e:    	mov    r8,QWORD PTR [rbp-0x48]
  01092:    	mov    rdi,rbx
  01095:    	mov    rsi,r12
  01098: 57 	movabs rax,0x55573c95cd90
  010a2:    	call   rax
  010a4:    	movq   xmm3,QWORD PTR [rsp]
  010a9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010af:    	add    rsp,0x10
  010b3: 57 	movabs r13,0x55573cfb0980
  010bd:    	test   rax,rax
  010c0:    	je     0xfffee483
:00112 %3 = 1: i32
  010c6: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  010ce: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]
  010d6:    	sub    rsp,0x10
  010da:    	movq   QWORD PTR [rsp],xmm3
  010df:    	movq   QWORD PTR [rsp+0x8],xmm4
  010e5:    	mov    rdx,QWORD PTR [rbp-0x30]
  010e9:    	mov    rcx,QWORD PTR [rbp-0x50]
  010ed:    	mov    rdi,rbx
  010f0:    	mov    rsi,r12
  010f3: 57 	movabs rax,0x55573c95cc80
  010fd:    	call   rax
  010ff:    	movq   xmm3,QWORD PTR [rsp]
  01104:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0110a:    	add    rsp,0x10
  0110e: 57 	movabs r13,0x55573cfb09b0
  01118:    	test   rax,rax
  0111b:    	je     0xfffee483
  01121:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
:00116 
  01125:    	mov    rdi,QWORD PTR [rbp-0x50]
  01129: 00 	test   rdi,0x7
  01130:    	jne    0x38856
  01136:    	cmp    DWORD PTR [rdi+0x4],0x25
  0113a:    	jne    0x38856
  01140: 26 	cmp    DWORD PTR [rip+0xfffffffffffefd15],0x26        # 0xffff0e5c
  01147:    	jne    0x38856
  0114d:    	sub    rsp,0x10
  01151:    	movq   QWORD PTR [rsp],xmm3
  01156:    	movq   QWORD PTR [rsp+0x8],xmm4
  0115c:    	mov    rax,QWORD PTR [rbx]
  0115f:    	lea    rdi,[rsp-0x18]
  01164:    	mov    QWORD PTR [rdi],rax
  01167:    	mov    QWORD PTR [rbx],rdi
  0116a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01173:    	mov    QWORD PTR [rsp-0x38],rcx
  01178:    	mov    rax,QWORD PTR [rbp-0x50]
  0117c:    	mov    QWORD PTR [rsp-0x38],rax
  01181: 00 	mov    rdi,0x0
  01188: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01191: 07 	movabs rax,0x100070000003d
  0119b:    	mov    QWORD PTR [rsp-0x28],rax
  011a0: 57 	movabs r13,0x55573cfa76a0
  011aa:    	call   0xffff1721
  011af:    	lea    rdi,[rbp-0x8]
  011b3:    	mov    QWORD PTR [rbx],rdi
  011b6:    	movq   xmm3,QWORD PTR [rsp]
  011bb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011c1:    	add    rsp,0x10
  011c5: 57 	movabs r13,0x55573cfb09d0
  011cf:    	test   rax,rax
  011d2:    	je     0xfffee483
  011d8:    	mov    QWORD PTR [rbp-0x48],rax
:00118 %1.[%3] = %4
  011dc:    	sub    rsp,0x10
  011e0:    	movq   QWORD PTR [rsp],xmm3
  011e5:    	movq   QWORD PTR [rsp+0x8],xmm4
  011eb:    	mov    rdx,QWORD PTR [rbp-0x30]
  011ef:    	mov    rcx,QWORD PTR [rbp-0x40]
  011f3:    	mov    r8,QWORD PTR [rbp-0x48]
  011f7:    	mov    rdi,rbx
  011fa:    	mov    rsi,r12
  011fd: 57 	movabs rax,0x55573c95cd90
  01207:    	call   rax
  01209:    	movq   xmm3,QWORD PTR [rsp]
  0120e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01214:    	add    rsp,0x10
  01218: 57 	movabs r13,0x55573cfb09f0
  01222:    	test   rax,rax
  01225:    	je     0xfffee483
:00119 %3 = %4
  0122b:    	mov    rax,QWORD PTR [rbp-0x48]
  0122f:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01233:    	mov    rax,QWORD PTR [rbp-0x40]
  01237:    	leave  
  01238:    	ret    
:00087 %3 = 0: i32
  01239: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  01241: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]
  01249:    	sub    rsp,0x20
  0124d:    	movq   QWORD PTR [rsp],xmm2
  01252:    	movq   QWORD PTR [rsp+0x8],xmm3
  01258:    	movq   QWORD PTR [rsp+0x10],xmm4
  0125e:    	movq   QWORD PTR [rsp+0x18],xmm6
  01264:    	mov    rdx,QWORD PTR [rbp-0x30]
  01268:    	mov    rcx,QWORD PTR [rbp-0x50]
  0126c:    	mov    rdi,rbx
  0126f:    	mov    rsi,r12
  01272: 57 	movabs rax,0x55573c95cc80
  0127c:    	call   rax
  0127e:    	movq   xmm2,QWORD PTR [rsp]
  01283:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01289:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0128f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01295:    	add    rsp,0x20
  01299: 57 	movabs r13,0x55573cfb0820
  012a3:    	test   rax,rax
  012a6:    	je     0xfffee483
  012ac:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  012b0: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]
  012b8:    	sub    rsp,0x20
  012bc:    	movq   QWORD PTR [rsp],xmm3
  012c1:    	movq   QWORD PTR [rsp+0x8],xmm4
  012c7:    	movq   QWORD PTR [rsp+0x10],xmm6
  012cd:    	mov    rdx,QWORD PTR [rbp-0x30]
  012d1:    	mov    rcx,QWORD PTR [rbp-0x58]
  012d5:    	mov    rdi,rbx
  012d8:    	mov    rsi,r12
  012db: 57 	movabs rax,0x55573c95cc80
  012e5:    	call   rax
  012e7:    	movq   xmm3,QWORD PTR [rsp]
  012ec:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012f2:    	movq   xmm6,QWORD PTR [rsp+0x10]
  012f8:    	add    rsp,0x20
  012fc: 57 	movabs r13,0x55573cfb0840
  01306:    	test   rax,rax
  01309:    	je     0xfffee483
  0130f:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
:00093 
  01313:    	mov    rdi,QWORD PTR [rbp-0x50]
  01317: 00 	test   rdi,0x7
  0131e:    	jne    0x388f1
  01324:    	cmp    DWORD PTR [rdi+0x4],0x25
  01328:    	jne    0x388f1
  0132e: 26 	cmp    DWORD PTR [rip+0xfffffffffffefb27],0x26        # 0xffff0e5c
  01335:    	jne    0x388f1
  0133b:    	sub    rsp,0x10
  0133f:    	movq   QWORD PTR [rsp],xmm3
  01344:    	movq   QWORD PTR [rsp+0x8],xmm4
  0134a:    	mov    rax,QWORD PTR [rbx]
  0134d:    	lea    rdi,[rsp-0x18]
  01352:    	mov    QWORD PTR [rdi],rax
  01355:    	mov    QWORD PTR [rbx],rdi
  01358: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01361:    	mov    QWORD PTR [rsp-0x38],rcx
  01366:    	mov    rax,QWORD PTR [rbp-0x50]
  0136a:    	mov    QWORD PTR [rsp-0x38],rax
  0136f: 00 	mov    rdi,0x1
  01376:    	mov    rax,QWORD PTR [rbp-0x58]
  0137a:    	mov    QWORD PTR [rsp-0x40],rax
  0137f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01388: 09 	movabs rax,0x90000003a
  01392:    	mov    QWORD PTR [rsp-0x28],rax
  01397: 57 	movabs r13,0x55573cf94eb0
  013a1:    	call   0xffff7f8c
  013a6:    	lea    rdi,[rbp-0x8]
  013aa:    	mov    QWORD PTR [rbx],rdi
  013ad:    	movq   xmm3,QWORD PTR [rsp]
  013b2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013b8:    	add    rsp,0x10
  013bc: 57 	movabs r13,0x55573cfb0860
  013c6:    	test   rax,rax
  013c9:    	je     0xfffee483
  013cf:    	mov    QWORD PTR [rbp-0x48],rax
:00095 %1.[%3] = %4
  013d3:    	sub    rsp,0x10
  013d7:    	movq   QWORD PTR [rsp],xmm3
  013dc:    	movq   QWORD PTR [rsp+0x8],xmm4
  013e2:    	mov    rdx,QWORD PTR [rbp-0x30]
  013e6:    	mov    rcx,QWORD PTR [rbp-0x40]
  013ea:    	mov    r8,QWORD PTR [rbp-0x48]
  013ee:    	mov    rdi,rbx
  013f1:    	mov    rsi,r12
  013f4: 57 	movabs rax,0x55573c95cd90
  013fe:    	call   rax
  01400:    	movq   xmm3,QWORD PTR [rsp]
  01405:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0140b:    	add    rsp,0x10
  0140f: 57 	movabs r13,0x55573cfb0880
  01419:    	test   rax,rax
  0141c:    	je     0xfffee483
:00096 %3 = 0: i32
  01422: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  0142a: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]
  01432:    	sub    rsp,0x10
  01436:    	movq   QWORD PTR [rsp],xmm3
  0143b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01441:    	mov    rdx,QWORD PTR [rbp-0x30]
  01445:    	mov    rcx,QWORD PTR [rbp-0x50]
  01449:    	mov    rdi,rbx
  0144c:    	mov    rsi,r12
  0144f: 57 	movabs rax,0x55573c95cc80
  01459:    	call   rax
  0145b:    	movq   xmm3,QWORD PTR [rsp]
  01460:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01466:    	add    rsp,0x10
  0146a: 57 	movabs r13,0x55573cfb08b0
  01474:    	test   rax,rax
  01477:    	je     0xfffee483
  0147d:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
:00100 
  01481:    	mov    rdi,QWORD PTR [rbp-0x50]
  01485: 00 	test   rdi,0x7
  0148c:    	jne    0x38900
  01492:    	cmp    DWORD PTR [rdi+0x4],0x25
  01496:    	jne    0x38900
  0149c: 26 	cmp    DWORD PTR [rip+0xfffffffffffef9b9],0x26        # 0xffff0e5c
  014a3:    	jne    0x38900
  014a9:    	sub    rsp,0x10
  014ad:    	movq   QWORD PTR [rsp],xmm3
  014b2:    	movq   QWORD PTR [rsp+0x8],xmm4
  014b8:    	mov    rax,QWORD PTR [rbx]
  014bb:    	lea    rdi,[rsp-0x18]
  014c0:    	mov    QWORD PTR [rdi],rax
  014c3:    	mov    QWORD PTR [rbx],rdi
  014c6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014cf:    	mov    QWORD PTR [rsp-0x38],rcx
  014d4:    	mov    rax,QWORD PTR [rbp-0x50]
  014d8:    	mov    QWORD PTR [rsp-0x38],rax
  014dd: 00 	mov    rdi,0x0
  014e4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014ed: 07 	movabs rax,0x100070000003d
  014f7:    	mov    QWORD PTR [rsp-0x28],rax
  014fc: 57 	movabs r13,0x55573cfa76a0
  01506:    	call   0xffff1721
  0150b:    	lea    rdi,[rbp-0x8]
  0150f:    	mov    QWORD PTR [rbx],rdi
  01512:    	movq   xmm3,QWORD PTR [rsp]
  01517:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0151d:    	add    rsp,0x10
  01521: 57 	movabs r13,0x55573cfb08d0
  0152b:    	test   rax,rax
  0152e:    	je     0xfffee483
  01534:    	mov    QWORD PTR [rbp-0x48],rax
:00102 %1.[%3] = %4
  01538:    	sub    rsp,0x10
  0153c:    	movq   QWORD PTR [rsp],xmm3
  01541:    	movq   QWORD PTR [rsp+0x8],xmm4
  01547:    	mov    rdx,QWORD PTR [rbp-0x30]
  0154b:    	mov    rcx,QWORD PTR [rbp-0x40]
  0154f:    	mov    r8,QWORD PTR [rbp-0x48]
  01553:    	mov    rdi,rbx
  01556:    	mov    rsi,r12
  01559: 57 	movabs rax,0x55573c95cd90
  01563:    	call   rax
  01565:    	movq   xmm3,QWORD PTR [rsp]
  0156a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01570:    	add    rsp,0x10
  01574: 57 	movabs r13,0x55573cfb08f0
  0157e:    	test   rax,rax
  01581:    	je     0xfffee483
:00103 %3 = 1: i32
  01587: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  0158f: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]
  01597:    	sub    rsp,0x10
  0159b:    	movq   QWORD PTR [rsp],xmm3
  015a0:    	movq   QWORD PTR [rsp+0x8],xmm4
  015a6:    	mov    rdx,QWORD PTR [rbp-0x30]
  015aa:    	mov    rcx,QWORD PTR [rbp-0x50]
  015ae:    	mov    rdi,rbx
  015b1:    	mov    rsi,r12
  015b4: 57 	movabs rax,0x55573c95cc80
  015be:    	call   rax
  015c0:    	movq   xmm3,QWORD PTR [rsp]
  015c5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015cb:    	add    rsp,0x10
  015cf: 57 	movabs r13,0x55573cfb0920
  015d9:    	test   rax,rax
  015dc:    	je     0xfffee483
  015e2:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  015e6: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]
  015ee:    	sub    rsp,0x10
  015f2:    	movq   QWORD PTR [rsp],xmm3
  015f7:    	movq   QWORD PTR [rsp+0x8],xmm4
  015fd:    	mov    rdx,QWORD PTR [rbp-0x30]
  01601:    	mov    rcx,QWORD PTR [rbp-0x58]
  01605:    	mov    rdi,rbx
  01608:    	mov    rsi,r12
  0160b: 57 	movabs rax,0x55573c95cc80
  01615:    	call   rax
  01617:    	movq   xmm3,QWORD PTR [rsp]
  0161c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01622:    	add    rsp,0x10
  01626: 57 	movabs r13,0x55573cfb0940
  01630:    	test   rax,rax
  01633:    	je     0xfffee483
  01639:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
:00109 
  0163d:    	mov    rdi,QWORD PTR [rbp-0x50]
  01641: 00 	test   rdi,0x7
  01648:    	jne    0x3890f
  0164e:    	cmp    DWORD PTR [rdi+0x4],0x25
  01652:    	jne    0x3890f
  01658: 26 	cmp    DWORD PTR [rip+0xfffffffffffef7fd],0x26        # 0xffff0e5c
  0165f:    	jne    0x3890f
  01665:    	sub    rsp,0x10
  01669:    	movq   QWORD PTR [rsp],xmm3
  0166e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01674:    	mov    rax,QWORD PTR [rbx]
  01677:    	lea    rdi,[rsp-0x18]
  0167c:    	mov    QWORD PTR [rdi],rax
  0167f:    	mov    QWORD PTR [rbx],rdi
  01682: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0168b:    	mov    QWORD PTR [rsp-0x38],rcx
  01690:    	mov    rax,QWORD PTR [rbp-0x50]
  01694:    	mov    QWORD PTR [rsp-0x38],rax
  01699: 00 	mov    rdi,0x1
  016a0:    	mov    rax,QWORD PTR [rbp-0x58]
  016a4:    	mov    QWORD PTR [rsp-0x40],rax
  016a9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016b2: 09 	movabs rax,0x90000003a
  016bc:    	mov    QWORD PTR [rsp-0x28],rax
  016c1: 57 	movabs r13,0x55573cf94eb0
  016cb:    	call   0xffff7f8c
  016d0:    	lea    rdi,[rbp-0x8]
  016d4:    	mov    QWORD PTR [rbx],rdi
  016d7:    	movq   xmm3,QWORD PTR [rsp]
  016dc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016e2:    	add    rsp,0x10
  016e6: 57 	movabs r13,0x55573cfb0960
  016f0:    	test   rax,rax
  016f3:    	je     0xfffee483
  016f9:    	mov    QWORD PTR [rbp-0x48],rax
:00111 %1.[%3] = %4
  016fd:    	sub    rsp,0x10
  01701:    	movq   QWORD PTR [rsp],xmm3
  01706:    	movq   QWORD PTR [rsp+0x8],xmm4
  0170c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01710:    	mov    rcx,QWORD PTR [rbp-0x40]
  01714:    	mov    r8,QWORD PTR [rbp-0x48]
  01718:    	mov    rdi,rbx
  0171b:    	mov    rsi,r12
  0171e: 57 	movabs rax,0x55573c95cd90
  01728:    	call   rax
  0172a:    	movq   xmm3,QWORD PTR [rsp]
  0172f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01735:    	add    rsp,0x10
  01739: 57 	movabs r13,0x55573cfb0980
  01743:    	test   rax,rax
  01746:    	je     0xfffee483
:00112 %3 = 1: i32
  0174c: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01754: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]
  0175c:    	sub    rsp,0x10
  01760:    	movq   QWORD PTR [rsp],xmm3
  01765:    	movq   QWORD PTR [rsp+0x8],xmm4
  0176b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0176f:    	mov    rcx,QWORD PTR [rbp-0x50]
  01773:    	mov    rdi,rbx
  01776:    	mov    rsi,r12
  01779: 57 	movabs rax,0x55573c95cc80
  01783:    	call   rax
  01785:    	movq   xmm3,QWORD PTR [rsp]
  0178a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01790:    	add    rsp,0x10
  01794: 57 	movabs r13,0x55573cfb09b0
  0179e:    	test   rax,rax
  017a1:    	je     0xfffee483
  017a7:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
:00116 
  017ab:    	mov    rdi,QWORD PTR [rbp-0x50]
  017af: 00 	test   rdi,0x7
  017b6:    	jne    0x3891e
  017bc:    	cmp    DWORD PTR [rdi+0x4],0x25
  017c0:    	jne    0x3891e
  017c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffef68f],0x26        # 0xffff0e5c
  017cd:    	jne    0x3891e
  017d3:    	sub    rsp,0x10
  017d7:    	movq   QWORD PTR [rsp],xmm3
  017dc:    	movq   QWORD PTR [rsp+0x8],xmm4
  017e2:    	mov    rax,QWORD PTR [rbx]
  017e5:    	lea    rdi,[rsp-0x18]
  017ea:    	mov    QWORD PTR [rdi],rax
  017ed:    	mov    QWORD PTR [rbx],rdi
  017f0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017f9:    	mov    QWORD PTR [rsp-0x38],rcx
  017fe:    	mov    rax,QWORD PTR [rbp-0x50]
  01802:    	mov    QWORD PTR [rsp-0x38],rax
  01807: 00 	mov    rdi,0x0
  0180e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01817: 07 	movabs rax,0x100070000003d
  01821:    	mov    QWORD PTR [rsp-0x28],rax
  01826: 57 	movabs r13,0x55573cfa76a0
  01830:    	call   0xffff1721
  01835:    	lea    rdi,[rbp-0x8]
  01839:    	mov    QWORD PTR [rbx],rdi
  0183c:    	movq   xmm3,QWORD PTR [rsp]
  01841:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01847:    	add    rsp,0x10
  0184b: 57 	movabs r13,0x55573cfb09d0
  01855:    	test   rax,rax
  01858:    	je     0xfffee483
  0185e:    	mov    QWORD PTR [rbp-0x48],rax
:00118 %1.[%3] = %4
  01862:    	sub    rsp,0x10
  01866:    	movq   QWORD PTR [rsp],xmm3
  0186b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01871:    	mov    rdx,QWORD PTR [rbp-0x30]
  01875:    	mov    rcx,QWORD PTR [rbp-0x40]
  01879:    	mov    r8,QWORD PTR [rbp-0x48]
  0187d:    	mov    rdi,rbx
  01880:    	mov    rsi,r12
  01883: 57 	movabs rax,0x55573c95cd90
  0188d:    	call   rax
  0188f:    	movq   xmm3,QWORD PTR [rsp]
  01894:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0189a:    	add    rsp,0x10
  0189e: 57 	movabs r13,0x55573cfb09f0
  018a8:    	test   rax,rax
  018ab:    	je     0xfffee483
:00119 %3 = %4
  018b1:    	mov    rax,QWORD PTR [rbp-0x48]
  018b5:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  018b9:    	mov    rax,QWORD PTR [rbp-0x40]
  018bd:    	leave  
  018be:    	ret    
==> start whole compile: intersect FuncId(65) self_class:Plane start:[00000] bytecode:0x55573cf99540
<== finished compile. elapsed:117.6µs
offset:Pos(79276) code: 5751 bytes  data: 269 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xa0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x40],rax
  00016:    	mov    QWORD PTR [rbp-0x48],rax
  0001a:    	mov    QWORD PTR [rbp-0x50],rax
  0001e:    	mov    QWORD PTR [rbp-0x58],rax
  00022:    	mov    QWORD PTR [rbp-0x60],rax
  00026:    	mov    QWORD PTR [rbp-0x68],rax
  0002a:    	mov    QWORD PTR [rbp-0x70],rax
  0002e:    	mov    QWORD PTR [rbp-0x78],rax
  00032:    	mov    QWORD PTR [rbp-0x80],rax
  00036: ff 	mov    QWORD PTR [rbp-0x88],rax
  0003d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00044:    	mov    rdi,QWORD PTR [rbp-0x28]
  00048: 00 	test   rdi,0x7
  0004f:    	jne    0x36f39
  00055:    	cmp    DWORD PTR [rdi+0x4],0x29
  00059:    	jne    0x36f39
:00000 %7 = @p: Plane[IvarId(0)]
  0005f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00063:    	cmp    WORD PTR [rdi+0x2],0x3
  00068:    	jne    0x36f48
  0006e:    	mov    rax,QWORD PTR [rdi+0x10]
  00072:    	mov    QWORD PTR [rbp-0x60],rax
:00001 %8 = @n: Plane[IvarId(1)]
  00076:    	mov    rdi,QWORD PTR [rbp-0x28]
  0007a:    	cmp    WORD PTR [rdi+0x2],0x3
  0007f:    	jne    0x36f5e
  00085:    	mov    rax,QWORD PTR [rdi+0x18]
  00089:    	mov    QWORD PTR [rbp-0x68],rax
:00002 %3 = %7.call vdot(%8; 1)             [Vec]
:00003 
  0008d:    	mov    rdi,QWORD PTR [rbp-0x60]
  00091: 00 	test   rdi,0x7
  00098:    	jne    0x36f74
  0009e:    	cmp    DWORD PTR [rdi+0x4],0x25
  000a2:    	jne    0x36f74
  000a8: 26 	cmp    DWORD PTR [rip+0xfffffffffffef3b9],0x26        # 0xfffef468
  000af:    	jne    0x36f74
  000b5:    	mov    rax,QWORD PTR [rbx]
  000b8:    	lea    rdi,[rsp-0x18]
  000bd:    	mov    QWORD PTR [rdi],rax
  000c0:    	mov    QWORD PTR [rbx],rdi
  000c3: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000cc:    	mov    QWORD PTR [rsp-0x38],rcx
  000d1:    	mov    rax,QWORD PTR [rbp-0x60]
  000d5:    	mov    QWORD PTR [rsp-0x38],rax
  000da: 00 	mov    rdi,0x1
  000e1:    	mov    rax,QWORD PTR [rbp-0x68]
  000e5:    	mov    QWORD PTR [rsp-0x40],rax
  000ea: 00 	mov    QWORD PTR [rsp-0x30],0x0
  000f3: 05 	movabs rax,0x100050000003b
  000fd:    	mov    QWORD PTR [rsp-0x28],rax
  00102: 57 	movabs r13,0x55573cfe1010
  0010c:    	call   0xffff0159
  00111:    	lea    rdi,[rbp-0x8]
  00115:    	mov    QWORD PTR [rbx],rdi
  00118: 57 	movabs r13,0x55573cf99580
  00122:    	test   rax,rax
  00125:    	je     0xfffeca8f
  0012b:    	mov    QWORD PTR [rbp-0x40],rax
:00005 %3 = neg %3                          [Float]
  0012f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00133: 00 	test   rdi,0x1
  0013a:    	jne    0x36f83
  00140: 00 	test   rdi,0x2
  00147:    	je     0x183
  0014d:    	xorps  xmm2,xmm2
  00150: 00 	movabs rax,0x8000000000000002
  0015a:    	cmp    rdi,rax
  0015d:    	je     0x195
  00163:    	mov    rax,rdi
  00166:    	sar    rax,0x3f
  0016a:    	add    rax,0x2
  0016e:    	and    rdi,0xfffffffffffffffc
  00172:    	or     rdi,rax
  00175:    	rol    rdi,0x3d
  00179:    	movq   xmm2,rdi
  0017e:    	jmp    0x195
  00183:    	call   0xfffecac8
  00188:    	test   rax,rax
  0018b:    	je     0x36f83
  00191:    	movq   xmm2,xmm0
  00195: 00 	xorps  xmm2,XMMWORD PTR [rip+0x14e8]        # 0x1684
:00006 %7 = %1.call dir()                   [Ray]
:00007 
  0019c:    	mov    rdi,QWORD PTR [rbp-0x30]
  001a0: 00 	test   rdi,0x7
  001a7:    	jne    0x36f92
  001ad:    	cmp    DWORD PTR [rdi+0x4],0x2b
  001b1:    	jne    0x36f92
  001b7: 26 	cmp    DWORD PTR [rip+0xfffffffffffef2aa],0x26        # 0xfffef468
  001be:    	jne    0x36f92
  001c4:    	mov    esi,DWORD PTR [rip+0x14c6]        # 0x1690
  001ca:    	cmp    esi,0xffffffff
  001cd:    	je     0x36fae
  001d3:    	cmp    WORD PTR [rdi+0x2],0x3
  001d8:    	jne    0x1f1
  001de:    	cmp    esi,0x6
  001e1:    	jge    0x1f1
  001e7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001ec:    	jmp    0x20f
  001f1:    	sub    rsp,0x10
  001f5:    	movq   QWORD PTR [rsp],xmm2
  001fa: 57 	movabs rax,0x55573c900b50
  00204:    	call   rax
  00206:    	movq   xmm2,QWORD PTR [rsp]
  0020b:    	add    rsp,0x10
  0020f:    	mov    QWORD PTR [rbp-0x60],rax
:00009 %8 = @n: Plane[IvarId(1)]
  00213:    	mov    rdi,QWORD PTR [rbp-0x28]
  00217:    	cmp    WORD PTR [rdi+0x2],0x3
  0021c:    	jne    0x36fe9
  00222:    	mov    rax,QWORD PTR [rdi+0x18]
  00226:    	mov    QWORD PTR [rbp-0x68],rax
:00010 %4 = %7.call vdot(%8; 1)             [Vec]
:00011 
  0022a:    	mov    rdi,QWORD PTR [rbp-0x60]
  0022e: 00 	test   rdi,0x7
  00235:    	jne    0x37011
  0023b:    	cmp    DWORD PTR [rdi+0x4],0x25
  0023f:    	jne    0x37011
  00245: 26 	cmp    DWORD PTR [rip+0xfffffffffffef21c],0x26        # 0xfffef468
  0024c:    	jne    0x37011
  00252:    	sub    rsp,0x10
  00256:    	movq   QWORD PTR [rsp],xmm2
  0025b:    	mov    rax,QWORD PTR [rbx]
  0025e:    	lea    rdi,[rsp-0x18]
  00263:    	mov    QWORD PTR [rdi],rax
  00266:    	mov    QWORD PTR [rbx],rdi
  00269: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00272:    	mov    QWORD PTR [rsp-0x38],rcx
  00277:    	mov    rax,QWORD PTR [rbp-0x60]
  0027b:    	mov    QWORD PTR [rsp-0x38],rax
  00280: 00 	mov    rdi,0x1
  00287:    	mov    rax,QWORD PTR [rbp-0x68]
  0028b:    	mov    QWORD PTR [rsp-0x40],rax
  00290: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00299: 05 	movabs rax,0x100050000003b
  002a3:    	mov    QWORD PTR [rsp-0x28],rax
  002a8: 57 	movabs r13,0x55573cfe1010
  002b2:    	call   0xffff0159
  002b7:    	lea    rdi,[rbp-0x8]
  002bb:    	mov    QWORD PTR [rbx],rdi
  002be:    	movq   xmm2,QWORD PTR [rsp]
  002c3:    	add    rsp,0x10
  002c7: 57 	movabs r13,0x55573cf99600
  002d1:    	test   rax,rax
  002d4:    	je     0xfffeca8f
  002da:    	mov    QWORD PTR [rbp-0x48],rax
:00013 %5 = %4
  002de:    	mov    rax,QWORD PTR [rbp-0x48]
  002e2:    	mov    QWORD PTR [rbp-0x50],rax
:00014 %7 = literal[0.0]
  002e6: 00 	movq   xmm3,QWORD PTR [rip+0x13a6]        # 0x1694
:00015 _%7 = %4 < %7                        [Float][Float]
:00016 condnotbr _%7 =>:00020
  002ee:    	mov    rdi,QWORD PTR [rbp-0x48]
  002f2: 00 	test   rdi,0x1
  002f9:    	jne    0x3702d
  002ff: 00 	test   rdi,0x2
  00306:    	je     0x342
  0030c:    	xorps  xmm4,xmm4
  0030f: 00 	movabs rax,0x8000000000000002
  00319:    	cmp    rdi,rax
  0031c:    	je     0x354
  00322:    	mov    rax,rdi
  00325:    	sar    rax,0x3f
  00329:    	add    rax,0x2
  0032d:    	and    rdi,0xfffffffffffffffc
  00331:    	or     rdi,rax
  00334:    	rol    rdi,0x3d
  00338:    	movq   xmm4,rdi
  0033d:    	jmp    0x354
  00342:    	call   0xfffecac8
  00347:    	test   rax,rax
  0034a:    	je     0x3702d
  00350:    	movq   xmm4,xmm0
  00354:    	ucomisd xmm4,xmm3
  00358:    	jae    0x37056
:00017 %5 = %4
:00018 %5 = neg %5                          [Float]
  0035e:    	movq   xmm5,xmm4
  00362: 00 	xorps  xmm5,XMMWORD PTR [rip+0x133b]        # 0x16a4
:00019 br =>:00020
  00369:    	jmp    0x37089
:00020 %7 = literal[1e-17]
  0036e: 00 	movq   xmm3,QWORD PTR [rip+0x133e]        # 0x16b4
:00021 _%7 = %5 < %7                        [Float][Float]
:00022 condnotbr _%7 =>:00026
  00376:    	mov    rdi,QWORD PTR [rbp-0x50]
  0037a: 00 	test   rdi,0x1
  00381:    	jne    0x370c9
  00387: 00 	test   rdi,0x2
  0038e:    	je     0x3ca
  00394:    	xorps  xmm5,xmm5
  00397: 00 	movabs rax,0x8000000000000002
  003a1:    	cmp    rdi,rax
  003a4:    	je     0x3dc
  003aa:    	mov    rax,rdi
  003ad:    	sar    rax,0x3f
  003b1:    	add    rax,0x2
  003b5:    	and    rdi,0xfffffffffffffffc
  003b9:    	or     rdi,rax
  003bc:    	rol    rdi,0x3d
  003c0:    	movq   xmm5,rdi
  003c5:    	jmp    0x3dc
  003ca:    	call   0xfffecac8
  003cf:    	test   rax,rax
  003d2:    	je     0x370c9
  003d8:    	movq   xmm5,xmm0
  003dc:    	ucomisd xmm5,xmm3
  003e0:    	jae    0x3f4
:00023 %7 = nil
  003e6: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00024 ret %7
  003ee:    	mov    rax,QWORD PTR [rbp-0x60]
  003f2:    	leave  
  003f3:    	ret    
:00026 %8 = %1.call org()                   [Ray]
:00027 
  003f4:    	mov    rdi,QWORD PTR [rbp-0x30]
  003f8: 00 	test   rdi,0x7
  003ff:    	jne    0x370f2
  00405:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00409:    	jne    0x370f2
  0040f: 26 	cmp    DWORD PTR [rip+0xfffffffffffef052],0x26        # 0xfffef468
  00416:    	jne    0x370f2
  0041c:    	mov    esi,DWORD PTR [rip+0x129e]        # 0x16c0
  00422:    	cmp    esi,0xffffffff
  00425:    	je     0x3711b
  0042b:    	cmp    WORD PTR [rdi+0x2],0x3
  00430:    	jne    0x449
  00436:    	cmp    esi,0x6
  00439:    	jge    0x449
  0043f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00444:    	jmp    0x48b
  00449:    	sub    rsp,0x20
  0044d:    	movq   QWORD PTR [rsp],xmm2
  00452:    	movq   QWORD PTR [rsp+0x8],xmm3
  00458:    	movq   QWORD PTR [rsp+0x10],xmm4
  0045e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00464: 57 	movabs rax,0x55573c900b50
  0046e:    	call   rax
  00470:    	movq   xmm2,QWORD PTR [rsp]
  00475:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0047b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00481:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00487:    	add    rsp,0x20
  0048b:    	mov    QWORD PTR [rbp-0x68],rax
:00029 %9 = @n: Plane[IvarId(1)]
  0048f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00493:    	cmp    WORD PTR [rdi+0x2],0x3
  00498:    	jne    0x3717a
  0049e:    	mov    rax,QWORD PTR [rdi+0x18]
  004a2:    	mov    QWORD PTR [rbp-0x70],rax
:00030 %7 = %8.call vdot(%9; 1)             [Vec]
:00031 
  004a6:    	mov    rdi,QWORD PTR [rbp-0x68]
  004aa: 00 	test   rdi,0x7
  004b1:    	jne    0x371c6
  004b7:    	cmp    DWORD PTR [rdi+0x4],0x25
  004bb:    	jne    0x371c6
  004c1: 26 	cmp    DWORD PTR [rip+0xfffffffffffeefa0],0x26        # 0xfffef468
  004c8:    	jne    0x371c6
  004ce:    	sub    rsp,0x20
  004d2:    	movq   QWORD PTR [rsp],xmm2
  004d7:    	movq   QWORD PTR [rsp+0x8],xmm4
  004dd:    	movq   QWORD PTR [rsp+0x10],xmm5
  004e3:    	mov    rax,QWORD PTR [rbx]
  004e6:    	lea    rdi,[rsp-0x18]
  004eb:    	mov    QWORD PTR [rdi],rax
  004ee:    	mov    QWORD PTR [rbx],rdi
  004f1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  004fa:    	mov    QWORD PTR [rsp-0x38],rcx
  004ff:    	mov    rax,QWORD PTR [rbp-0x68]
  00503:    	mov    QWORD PTR [rsp-0x38],rax
  00508: 00 	mov    rdi,0x1
  0050f:    	mov    rax,QWORD PTR [rbp-0x70]
  00513:    	mov    QWORD PTR [rsp-0x40],rax
  00518: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00521: 05 	movabs rax,0x100050000003b
  0052b:    	mov    QWORD PTR [rsp-0x28],rax
  00530: 57 	movabs r13,0x55573cfe1010
  0053a:    	call   0xffff0159
  0053f:    	lea    rdi,[rbp-0x8]
  00543:    	mov    QWORD PTR [rbx],rdi
  00546:    	movq   xmm2,QWORD PTR [rsp]
  0054b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00551:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00557:    	add    rsp,0x20
  0055b: 57 	movabs r13,0x55573cf99740
  00565:    	test   rax,rax
  00568:    	je     0xfffeca8f
  0056e:    	mov    QWORD PTR [rbp-0x60],rax
:00033 %7 = %7 + %3                         [Float][Float]
  00572:    	mov    rdi,QWORD PTR [rbp-0x60]
  00576: 00 	test   rdi,0x1
  0057d:    	jne    0x371e2
  00583: 00 	test   rdi,0x2
  0058a:    	je     0x5c6
  00590:    	xorps  xmm3,xmm3
  00593: 00 	movabs rax,0x8000000000000002
  0059d:    	cmp    rdi,rax
  005a0:    	je     0x5d8
  005a6:    	mov    rax,rdi
  005a9:    	sar    rax,0x3f
  005ad:    	add    rax,0x2
  005b1:    	and    rdi,0xfffffffffffffffc
  005b5:    	or     rdi,rax
  005b8:    	rol    rdi,0x3d
  005bc:    	movq   xmm3,rdi
  005c1:    	jmp    0x5d8
  005c6:    	call   0xfffecac8
  005cb:    	test   rax,rax
  005ce:    	je     0x371e2
  005d4:    	movq   xmm3,xmm0
  005d8:    	addsd  xmm3,xmm2
:00034 %7 = neg %7                          [Float]
  005dc: 00 	xorps  xmm3,XMMWORD PTR [rip+0x10e1]        # 0x16c4
:00035 %6 = %7 / %4                         [Float][Float]
  005e3:    	movq   xmm6,xmm3
  005e7:    	movq   rax,xmm4
  005ec:    	test   rax,rax
  005ef:    	je     0xfffecab4
  005f5:    	divsd  xmm6,xmm4
:00036 %8 = literal[0.0]
  005f9: 00 	movq   xmm7,QWORD PTR [rip+0x10d3]        # 0x16d4
:00037 %7 = %6 > %8                         [Float][Float]
  00601:    	xor    rax,rax
  00604:    	ucomisd xmm6,xmm7
  00608:    	seta   al
  0060c:    	shl    rax,0x3
  00610:    	or     rax,0x14
  00614:    	mov    QWORD PTR [rbp-0x60],rax
:00038 condnotbr %7 =>:00043
  00618:    	mov    rax,QWORD PTR [rbp-0x60]
  0061c:    	or     rax,0x10
  00620:    	cmp    rax,0x14
  00624:    	je     0x372af
:00039 %8 = %2.call t()                     [Isect]
:00040 
  0062a:    	mov    rdi,QWORD PTR [rbp-0x38]
  0062e: 00 	test   rdi,0x7
  00635:    	jne    0x371fe
  0063b:    	cmp    DWORD PTR [rdi+0x4],0x2d
  0063f:    	jne    0x371fe
  00645: 26 	cmp    DWORD PTR [rip+0xfffffffffffeee1c],0x26        # 0xfffef468
  0064c:    	jne    0x371fe
  00652:    	mov    esi,DWORD PTR [rip+0x1088]        # 0x16e0
  00658:    	cmp    esi,0xffffffff
  0065b:    	je     0x37227
  00661:    	cmp    WORD PTR [rdi+0x2],0x3
  00666:    	jne    0x67f
  0066c:    	cmp    esi,0x6
  0066f:    	jge    0x67f
  00675:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0067a:    	jmp    0x6c1
  0067f:    	sub    rsp,0x20
  00683:    	movq   QWORD PTR [rsp],xmm2
  00688:    	movq   QWORD PTR [rsp+0x8],xmm4
  0068e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00694:    	movq   QWORD PTR [rsp+0x18],xmm6
  0069a: 57 	movabs rax,0x55573c900b50
  006a4:    	call   rax
  006a6:    	movq   xmm2,QWORD PTR [rsp]
  006ab:    	movq   xmm4,QWORD PTR [rsp+0x8]
  006b1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006b7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006bd:    	add    rsp,0x20
  006c1:    	mov    QWORD PTR [rbp-0x68],rax
:00042 %7 = %6 < %8                         [Float][Float]
  006c5:    	mov    rdi,QWORD PTR [rbp-0x68]
  006c9: 00 	test   rdi,0x1
  006d0:    	jne    0x37286
  006d6: 00 	test   rdi,0x2
  006dd:    	je     0x719
  006e3:    	xorps  xmm3,xmm3
  006e6: 00 	movabs rax,0x8000000000000002
  006f0:    	cmp    rdi,rax
  006f3:    	je     0x72b
  006f9:    	mov    rax,rdi
  006fc:    	sar    rax,0x3f
  00700:    	add    rax,0x2
  00704:    	and    rdi,0xfffffffffffffffc
  00708:    	or     rdi,rax
  0070b:    	rol    rdi,0x3d
  0070f:    	movq   xmm3,rdi
  00714:    	jmp    0x72b
  00719:    	call   0xfffecac8
  0071e:    	test   rax,rax
  00721:    	je     0x37286
  00727:    	movq   xmm3,xmm0
  0072b:    	xor    rax,rax
  0072e:    	ucomisd xmm6,xmm3
  00732:    	setb   al
  00736:    	shl    rax,0x3
  0073a:    	or     rax,0x14
  0073e:    	mov    QWORD PTR [rbp-0x60],rax
  00742:    	jmp    0x372ef
:00043 condnotbr %7 =>:00105
  00747:    	mov    rax,QWORD PTR [rbp-0x60]
  0074b:    	or     rax,0x10
  0074f:    	cmp    rax,0x14
  00753:    	je     0x37f25
:00044 %7 = literal[true]
  00759: 00 	mov    rax,0x1c
  00760:    	mov    QWORD PTR [rbp-0x60],rax
:00045 _ = %2.call hit=(%7; 1)              [Isect]
:00046 
  00764:    	mov    rdi,QWORD PTR [rbp-0x38]
  00768: 00 	test   rdi,0x7
  0076f:    	jne    0x37326
  00775:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00779:    	jne    0x37326
  0077f: 26 	cmp    DWORD PTR [rip+0xfffffffffffeece2],0x26        # 0xfffef468
  00786:    	jne    0x37326
  0078c:    	mov    esi,DWORD PTR [rip+0xf56]        # 0x16e8
  00792:    	cmp    esi,0xffffffff
  00795:    	je     0x3734f
  0079b:    	cmp    WORD PTR [rdi+0x2],0x3
  007a0:    	jne    0x7bd
  007a6:    	cmp    esi,0x6
  007a9:    	jge    0x7bd
  007af:    	mov    rax,QWORD PTR [rbp-0x60]
  007b3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  007b8:    	jmp    0x822
  007bd:    	sub    rsp,0x30
  007c1:    	movq   QWORD PTR [rsp],xmm2
  007c6:    	movq   QWORD PTR [rsp+0x8],xmm4
  007cc:    	movq   QWORD PTR [rsp+0x10],xmm5
  007d2:    	movq   QWORD PTR [rsp+0x18],xmm6
  007d8:    	movq   QWORD PTR [rsp+0x20],xmm7
  007de:    	mov    rdx,QWORD PTR [rbp-0x60]
  007e2: 57 	movabs rax,0x55573c900dd0
  007ec:    	call   rax
  007ee:    	movq   xmm2,QWORD PTR [rsp]
  007f3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007f9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007ff:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00805:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0080b:    	add    rsp,0x30
  0080f: 57 	movabs r13,0x55573cf99830
  00819:    	test   rax,rax
  0081c:    	je     0xfffeca8f
:00048 _ = %2.call t=(%6; 1)                [Isect]
:00049 
  00822:    	movq   xmm0,xmm6
  00826:    	call   0xfffecbbb
  0082b:    	mov    QWORD PTR [rbp-0x58],rax
  0082f:    	mov    rdi,QWORD PTR [rbp-0x38]
  00833: 00 	test   rdi,0x7
  0083a:    	jne    0x373c1
  00840:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00844:    	jne    0x373c1
  0084a: 26 	cmp    DWORD PTR [rip+0xfffffffffffeec17],0x26        # 0xfffef468
  00851:    	jne    0x373c1
  00857:    	mov    esi,DWORD PTR [rip+0xe93]        # 0x16f0
  0085d:    	cmp    esi,0xffffffff
  00860:    	je     0x373dd
  00866:    	cmp    WORD PTR [rdi+0x2],0x3
  0086b:    	jne    0x888
  00871:    	cmp    esi,0x6
  00874:    	jge    0x888
  0087a:    	mov    rax,QWORD PTR [rbp-0x58]
  0087e:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00883:    	jmp    0x8ed
  00888:    	sub    rsp,0x30
  0088c:    	movq   QWORD PTR [rsp],xmm2
  00891:    	movq   QWORD PTR [rsp+0x8],xmm4
  00897:    	movq   QWORD PTR [rsp+0x10],xmm5
  0089d:    	movq   QWORD PTR [rsp+0x18],xmm6
  008a3:    	movq   QWORD PTR [rsp+0x20],xmm7
  008a9:    	mov    rdx,QWORD PTR [rbp-0x58]
  008ad: 57 	movabs rax,0x55573c900dd0
  008b7:    	call   rax
  008b9:    	movq   xmm2,QWORD PTR [rsp]
  008be:    	movq   xmm4,QWORD PTR [rsp+0x8]
  008c4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008ca:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008d0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  008d6:    	add    rsp,0x30
  008da: 57 	movabs r13,0x55573cf99860
  008e4:    	test   rax,rax
  008e7:    	je     0xfffeca8f
:00051 %7 = @n: Plane[IvarId(1)]
  008ed:    	mov    rdi,QWORD PTR [rbp-0x28]
  008f1:    	cmp    WORD PTR [rdi+0x2],0x3
  008f6:    	jne    0x3744f
  008fc:    	mov    rax,QWORD PTR [rdi+0x18]
  00900:    	mov    QWORD PTR [rbp-0x60],rax
:00052 _ = %2.call n=(%7; 1)                [Isect]
:00053 
  00904:    	mov    rdi,QWORD PTR [rbp-0x38]
  00908: 00 	test   rdi,0x7
  0090f:    	jne    0x374a7
  00915:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00919:    	jne    0x374a7
  0091f: 26 	cmp    DWORD PTR [rip+0xfffffffffffeeb42],0x26        # 0xfffef468
  00926:    	jne    0x374a7
  0092c:    	mov    esi,DWORD PTR [rip+0xdc6]        # 0x16f8
  00932:    	cmp    esi,0xffffffff
  00935:    	je     0x374c3
  0093b:    	cmp    WORD PTR [rdi+0x2],0x3
  00940:    	jne    0x95d
  00946:    	cmp    esi,0x6
  00949:    	jge    0x95d
  0094f:    	mov    rax,QWORD PTR [rbp-0x60]
  00953:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00958:    	jmp    0x9c2
  0095d:    	sub    rsp,0x30
  00961:    	movq   QWORD PTR [rsp],xmm2
  00966:    	movq   QWORD PTR [rsp+0x8],xmm4
  0096c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00972:    	movq   QWORD PTR [rsp+0x18],xmm6
  00978:    	movq   QWORD PTR [rsp+0x20],xmm7
  0097e:    	mov    rdx,QWORD PTR [rbp-0x60]
  00982: 57 	movabs rax,0x55573c900dd0
  0098c:    	call   rax
  0098e:    	movq   xmm2,QWORD PTR [rsp]
  00993:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00999:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0099f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009a5:    	movq   xmm7,QWORD PTR [rsp+0x20]
  009ab:    	add    rsp,0x30
  009af: 57 	movabs r13,0x55573cf998a0
  009b9:    	test   rax,rax
  009bc:    	je     0xfffeca8f
:00055 %8 = const[Vec]                      [Vec]
  009c2: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeeaab]        # 0xfffef474
  009c9: 00 	cmp    rax,QWORD PTR [rip+0xd44]        # 0x1714
  009d0:    	jne    0x37535
  009d6: 00 	mov    rax,QWORD PTR [rip+0xd27]        # 0x1704
  009dd:    	mov    QWORD PTR [rbp-0x68],rax
:00056 %10 = %1.call org()                  [Ray]
:00057 
  009e1:    	mov    rdi,QWORD PTR [rbp-0x30]
  009e5: 00 	test   rdi,0x7
  009ec:    	jne    0x375b1
  009f2:    	cmp    DWORD PTR [rdi+0x4],0x2b
  009f6:    	jne    0x375b1
  009fc: 26 	cmp    DWORD PTR [rip+0xfffffffffffeea65],0x26        # 0xfffef468
  00a03:    	jne    0x375b1
  00a09:    	mov    esi,DWORD PTR [rip+0xd11]        # 0x1720
  00a0f:    	cmp    esi,0xffffffff
  00a12:    	je     0x375cd
  00a18:    	cmp    WORD PTR [rdi+0x2],0x3
  00a1d:    	jne    0xa36
  00a23:    	cmp    esi,0x6
  00a26:    	jge    0xa36
  00a2c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a31:    	jmp    0xa78
  00a36:    	sub    rsp,0x20
  00a3a:    	movq   QWORD PTR [rsp],xmm2
  00a3f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a45:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a4b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a51: 57 	movabs rax,0x55573c900b50
  00a5b:    	call   rax
  00a5d:    	movq   xmm2,QWORD PTR [rsp]
  00a62:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a68:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a6e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a74:    	add    rsp,0x20
  00a78:    	mov    QWORD PTR [rbp-0x78],rax
:00059 %9 = %10.call x()                    [Vec]
:00060 
  00a7c:    	mov    rdi,QWORD PTR [rbp-0x78]
  00a80: 00 	test   rdi,0x7
  00a87:    	jne    0x3762c
  00a8d:    	cmp    DWORD PTR [rdi+0x4],0x25
  00a91:    	jne    0x3762c
  00a97: 26 	cmp    DWORD PTR [rip+0xfffffffffffee9ca],0x26        # 0xfffef468
  00a9e:    	jne    0x3762c
  00aa4:    	mov    esi,DWORD PTR [rip+0xc7e]        # 0x1728
  00aaa:    	cmp    esi,0xffffffff
  00aad:    	je     0x37648
  00ab3:    	cmp    WORD PTR [rdi+0x2],0x3
  00ab8:    	jne    0xad1
  00abe:    	cmp    esi,0x6
  00ac1:    	jge    0xad1
  00ac7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00acc:    	jmp    0xb13
  00ad1:    	sub    rsp,0x20
  00ad5:    	movq   QWORD PTR [rsp],xmm2
  00ada:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ae0:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ae6:    	movq   QWORD PTR [rsp+0x18],xmm6
  00aec: 57 	movabs rax,0x55573c900b50
  00af6:    	call   rax
  00af8:    	movq   xmm2,QWORD PTR [rsp]
  00afd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b03:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b09:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b0f:    	add    rsp,0x20
  00b13:    	mov    QWORD PTR [rbp-0x70],rax
:00062 %11 = %1.call dir()                  [Ray]
:00063 
  00b17:    	mov    rdi,QWORD PTR [rbp-0x30]
  00b1b: 00 	test   rdi,0x7
  00b22:    	jne    0x376a7
  00b28:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00b2c:    	jne    0x376a7
  00b32: 26 	cmp    DWORD PTR [rip+0xfffffffffffee92f],0x26        # 0xfffef468
  00b39:    	jne    0x376a7
  00b3f:    	mov    esi,DWORD PTR [rip+0xbeb]        # 0x1730
  00b45:    	cmp    esi,0xffffffff
  00b48:    	je     0x376c3
  00b4e:    	cmp    WORD PTR [rdi+0x2],0x3
  00b53:    	jne    0xb6c
  00b59:    	cmp    esi,0x6
  00b5c:    	jge    0xb6c
  00b62:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b67:    	jmp    0xbae
  00b6c:    	sub    rsp,0x20
  00b70:    	movq   QWORD PTR [rsp],xmm2
  00b75:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b7b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b81:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b87: 57 	movabs rax,0x55573c900b50
  00b91:    	call   rax
  00b93:    	movq   xmm2,QWORD PTR [rsp]
  00b98:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b9e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ba4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00baa:    	add    rsp,0x20
  00bae:    	mov    QWORD PTR [rbp-0x80],rax
:00065 %10 = %11.call x()                   [Vec]
:00066 
  00bb2:    	mov    rdi,QWORD PTR [rbp-0x80]
  00bb6: 00 	test   rdi,0x7
  00bbd:    	jne    0x37722
  00bc3:    	cmp    DWORD PTR [rdi+0x4],0x25
  00bc7:    	jne    0x37722
  00bcd: 26 	cmp    DWORD PTR [rip+0xfffffffffffee894],0x26        # 0xfffef468
  00bd4:    	jne    0x37722
  00bda:    	mov    esi,DWORD PTR [rip+0xb58]        # 0x1738
  00be0:    	cmp    esi,0xffffffff
  00be3:    	je     0x3773e
  00be9:    	cmp    WORD PTR [rdi+0x2],0x3
  00bee:    	jne    0xc07
  00bf4:    	cmp    esi,0x6
  00bf7:    	jge    0xc07
  00bfd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c02:    	jmp    0xc49
  00c07:    	sub    rsp,0x20
  00c0b:    	movq   QWORD PTR [rsp],xmm2
  00c10:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c16:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c1c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c22: 57 	movabs rax,0x55573c900b50
  00c2c:    	call   rax
  00c2e:    	movq   xmm2,QWORD PTR [rsp]
  00c33:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c39:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c3f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c45:    	add    rsp,0x20
  00c49:    	mov    QWORD PTR [rbp-0x78],rax
:00068 %10 = %6 * %10                       [Float][Float]
  00c4d:    	mov    rdi,QWORD PTR [rbp-0x78]
  00c51: 00 	test   rdi,0x1
  00c58:    	jne    0x3779d
  00c5e: 00 	test   rdi,0x2
  00c65:    	je     0xca1
  00c6b:    	xorps  xmm3,xmm3
  00c6e: 00 	movabs rax,0x8000000000000002
  00c78:    	cmp    rdi,rax
  00c7b:    	je     0xcb3
  00c81:    	mov    rax,rdi
  00c84:    	sar    rax,0x3f
  00c88:    	add    rax,0x2
  00c8c:    	and    rdi,0xfffffffffffffffc
  00c90:    	or     rdi,rax
  00c93:    	rol    rdi,0x3d
  00c97:    	movq   xmm3,rdi
  00c9c:    	jmp    0xcb3
  00ca1:    	call   0xfffecac8
  00ca6:    	test   rax,rax
  00ca9:    	je     0x3779d
  00caf:    	movq   xmm3,xmm0
  00cb3:    	mulsd  xmm3,xmm6
:00069 %9 = %9 + %10                        [Float][Float]
  00cb7:    	mov    rdi,QWORD PTR [rbp-0x70]
  00cbb: 00 	test   rdi,0x1
  00cc2:    	jne    0x377b9
  00cc8: 00 	test   rdi,0x2
  00ccf:    	je     0xd0b
  00cd5:    	xorps  xmm7,xmm7
  00cd8: 00 	movabs rax,0x8000000000000002
  00ce2:    	cmp    rdi,rax
  00ce5:    	je     0xd1d
  00ceb:    	mov    rax,rdi
  00cee:    	sar    rax,0x3f
  00cf2:    	add    rax,0x2
  00cf6:    	and    rdi,0xfffffffffffffffc
  00cfa:    	or     rdi,rax
  00cfd:    	rol    rdi,0x3d
  00d01:    	movq   xmm7,rdi
  00d06:    	jmp    0xd1d
  00d0b:    	call   0xfffecac8
  00d10:    	test   rax,rax
  00d13:    	je     0x377b9
  00d19:    	movq   xmm7,xmm0
  00d1d:    	addsd  xmm7,xmm3
:00070 %11 = %1.call org()                  [Ray]
:00071 
  00d21:    	mov    rdi,QWORD PTR [rbp-0x30]
  00d25: 00 	test   rdi,0x7
  00d2c:    	jne    0x377e2
  00d32:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00d36:    	jne    0x377e2
  00d3c: 26 	cmp    DWORD PTR [rip+0xfffffffffffee725],0x26        # 0xfffef468
  00d43:    	jne    0x377e2
  00d49:    	mov    esi,DWORD PTR [rip+0x9f1]        # 0x1740
  00d4f:    	cmp    esi,0xffffffff
  00d52:    	je     0x37818
  00d58:    	cmp    WORD PTR [rdi+0x2],0x3
  00d5d:    	jne    0xd76
  00d63:    	cmp    esi,0x6
  00d66:    	jge    0xd76
  00d6c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d71:    	jmp    0xdd0
  00d76:    	sub    rsp,0x30
  00d7a:    	movq   QWORD PTR [rsp],xmm2
  00d7f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d85:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d8b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d91:    	movq   QWORD PTR [rsp+0x20],xmm6
  00d97:    	movq   QWORD PTR [rsp+0x28],xmm7
  00d9d: 57 	movabs rax,0x55573c900b50
  00da7:    	call   rax
  00da9:    	movq   xmm2,QWORD PTR [rsp]
  00dae:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00db4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dba:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00dc0:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00dc6:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00dcc:    	add    rsp,0x30
  00dd0:    	mov    QWORD PTR [rbp-0x80],rax
:00073 %10 = %11.call y()                   [Vec]
:00074 
  00dd4:    	mov    rdi,QWORD PTR [rbp-0x80]
  00dd8: 00 	test   rdi,0x7
  00ddf:    	jne    0x3788f
  00de5:    	cmp    DWORD PTR [rdi+0x4],0x25
  00de9:    	jne    0x3788f
  00def: 26 	cmp    DWORD PTR [rip+0xfffffffffffee672],0x26        # 0xfffef468
  00df6:    	jne    0x3788f
  00dfc:    	mov    esi,DWORD PTR [rip+0x946]        # 0x1748
  00e02:    	cmp    esi,0xffffffff
  00e05:    	je     0x378b8
  00e0b:    	cmp    WORD PTR [rdi+0x2],0x3
  00e10:    	jne    0xe29
  00e16:    	cmp    esi,0x6
  00e19:    	jge    0xe29
  00e1f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e24:    	jmp    0xe77
  00e29:    	sub    rsp,0x30
  00e2d:    	movq   QWORD PTR [rsp],xmm2
  00e32:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e38:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e3e:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e44:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e4a: 57 	movabs rax,0x55573c900b50
  00e54:    	call   rax
  00e56:    	movq   xmm2,QWORD PTR [rsp]
  00e5b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e61:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e67:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e6d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e73:    	add    rsp,0x30
  00e77:    	mov    QWORD PTR [rbp-0x78],rax
:00076 %12 = %1.call dir()                  [Ray]
:00077 
  00e7b:    	mov    rdi,QWORD PTR [rbp-0x30]
  00e7f: 00 	test   rdi,0x7
  00e86:    	jne    0x37923
  00e8c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00e90:    	jne    0x37923
  00e96: 26 	cmp    DWORD PTR [rip+0xfffffffffffee5cb],0x26        # 0xfffef468
  00e9d:    	jne    0x37923
  00ea3:    	mov    esi,DWORD PTR [rip+0x8a7]        # 0x1750
  00ea9:    	cmp    esi,0xffffffff
  00eac:    	je     0x3794c
  00eb2:    	cmp    WORD PTR [rdi+0x2],0x3
  00eb7:    	jne    0xed0
  00ebd:    	cmp    esi,0x6
  00ec0:    	jge    0xed0
  00ec6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ecb:    	jmp    0xf1e
  00ed0:    	sub    rsp,0x30
  00ed4:    	movq   QWORD PTR [rsp],xmm2
  00ed9:    	movq   QWORD PTR [rsp+0x8],xmm4
  00edf:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ee5:    	movq   QWORD PTR [rsp+0x18],xmm6
  00eeb:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ef1: 57 	movabs rax,0x55573c900b50
  00efb:    	call   rax
  00efd:    	movq   xmm2,QWORD PTR [rsp]
  00f02:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f08:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f0e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f14:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00f1a:    	add    rsp,0x30
  00f1e: ff 	mov    QWORD PTR [rbp-0x88],rax
:00079 %11 = %12.call y()                   [Vec]
:00080 
  00f25: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00f2c: 00 	test   rdi,0x7
  00f33:    	jne    0x379b7
  00f39:    	cmp    DWORD PTR [rdi+0x4],0x25
  00f3d:    	jne    0x379b7
  00f43: 26 	cmp    DWORD PTR [rip+0xfffffffffffee51e],0x26        # 0xfffef468
  00f4a:    	jne    0x379b7
  00f50:    	mov    esi,DWORD PTR [rip+0x802]        # 0x1758
  00f56:    	cmp    esi,0xffffffff
  00f59:    	je     0x379e0
  00f5f:    	cmp    WORD PTR [rdi+0x2],0x3
  00f64:    	jne    0xf7d
  00f6a:    	cmp    esi,0x6
  00f6d:    	jge    0xf7d
  00f73:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f78:    	jmp    0xfcb
  00f7d:    	sub    rsp,0x30
  00f81:    	movq   QWORD PTR [rsp],xmm2
  00f86:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f8c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f92:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f98:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f9e: 57 	movabs rax,0x55573c900b50
  00fa8:    	call   rax
  00faa:    	movq   xmm2,QWORD PTR [rsp]
  00faf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fb5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00fbb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00fc1:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00fc7:    	add    rsp,0x30
  00fcb:    	mov    QWORD PTR [rbp-0x80],rax
:00082 %11 = %6 * %11                       [Float][Float]
  00fcf:    	mov    rdi,QWORD PTR [rbp-0x80]
  00fd3: 00 	test   rdi,0x1
  00fda:    	jne    0x37a4b
  00fe0: 00 	test   rdi,0x2
  00fe7:    	je     0x1023
  00fed:    	xorps  xmm3,xmm3
  00ff0: 00 	movabs rax,0x8000000000000002
  00ffa:    	cmp    rdi,rax
  00ffd:    	je     0x1035
  01003:    	mov    rax,rdi
  01006:    	sar    rax,0x3f
  0100a:    	add    rax,0x2
  0100e:    	and    rdi,0xfffffffffffffffc
  01012:    	or     rdi,rax
  01015:    	rol    rdi,0x3d
  01019:    	movq   xmm3,rdi
  0101e:    	jmp    0x1035
  01023:    	call   0xfffecac8
  01028:    	test   rax,rax
  0102b:    	je     0x37a4b
  01031:    	movq   xmm3,xmm0
  01035:    	mulsd  xmm3,xmm6
:00083 %10 = %10 + %11                      [Float][Float]
  01039:    	mov    rdi,QWORD PTR [rbp-0x78]
  0103d: 00 	test   rdi,0x1
  01044:    	jne    0x37a74
  0104a: 00 	test   rdi,0x2
  01051:    	je     0x108e
  01057:    	xorps  xmm8,xmm8
  0105b: 00 	movabs rax,0x8000000000000002
  01065:    	cmp    rdi,rax
  01068:    	je     0x10a1
  0106e:    	mov    rax,rdi
  01071:    	sar    rax,0x3f
  01075:    	add    rax,0x2
  01079:    	and    rdi,0xfffffffffffffffc
  0107d:    	or     rdi,rax
  01080:    	rol    rdi,0x3d
  01084:    	movq   xmm8,rdi
  01089:    	jmp    0x10a1
  0108e:    	call   0xfffecac8
  01093:    	test   rax,rax
  01096:    	je     0x37a74
  0109c:    	movq   xmm8,xmm0
  010a1:    	addsd  xmm8,xmm3
:00084 %12 = %1.call org()                  [Ray]
:00085 
  010a6:    	mov    rdi,QWORD PTR [rbp-0x30]
  010aa: 00 	test   rdi,0x7
  010b1:    	jne    0x37aaa
  010b7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  010bb:    	jne    0x37aaa
  010c1: 26 	cmp    DWORD PTR [rip+0xfffffffffffee3a0],0x26        # 0xfffef468
  010c8:    	jne    0x37aaa
  010ce:    	mov    esi,DWORD PTR [rip+0x68c]        # 0x1760
  010d4:    	cmp    esi,0xffffffff
  010d7:    	je     0x37aee
  010dd:    	cmp    WORD PTR [rdi+0x2],0x3
  010e2:    	jne    0x10fb
  010e8:    	cmp    esi,0x6
  010eb:    	jge    0x10fb
  010f1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  010f6:    	jmp    0x1163
  010fb:    	sub    rsp,0x40
  010ff:    	movq   QWORD PTR [rsp],xmm2
  01104:    	movq   QWORD PTR [rsp+0x8],xmm3
  0110a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01110:    	movq   QWORD PTR [rsp+0x18],xmm5
  01116:    	movq   QWORD PTR [rsp+0x20],xmm6
  0111c:    	movq   QWORD PTR [rsp+0x28],xmm7
  01122: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01129: 57 	movabs rax,0x55573c900b50
  01133:    	call   rax
  01135:    	movq   xmm2,QWORD PTR [rsp]
  0113a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01140:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01146:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0114c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01152:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01158: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0115f:    	add    rsp,0x40
  01163: ff 	mov    QWORD PTR [rbp-0x88],rax
:00087 %11 = %12.call z()                   [Vec]
:00088 
  0116a: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01171: 00 	test   rdi,0x7
  01178:    	jne    0x37b73
  0117e:    	cmp    DWORD PTR [rdi+0x4],0x25
  01182:    	jne    0x37b73
  01188: 26 	cmp    DWORD PTR [rip+0xfffffffffffee2d9],0x26        # 0xfffef468
  0118f:    	jne    0x37b73
  01195:    	mov    esi,DWORD PTR [rip+0x5cd]        # 0x1768
  0119b:    	cmp    esi,0xffffffff
  0119e:    	je     0x37baa
  011a4:    	cmp    WORD PTR [rdi+0x2],0x3
  011a9:    	jne    0x11c2
  011af:    	cmp    esi,0x6
  011b2:    	jge    0x11c2
  011b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  011bd:    	jmp    0x121e
  011c2:    	sub    rsp,0x30
  011c6:    	movq   QWORD PTR [rsp],xmm2
  011cb:    	movq   QWORD PTR [rsp+0x8],xmm4
  011d1:    	movq   QWORD PTR [rsp+0x10],xmm5
  011d7:    	movq   QWORD PTR [rsp+0x18],xmm6
  011dd:    	movq   QWORD PTR [rsp+0x20],xmm7
  011e3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  011ea: 57 	movabs rax,0x55573c900b50
  011f4:    	call   rax
  011f6:    	movq   xmm2,QWORD PTR [rsp]
  011fb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01201:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01207:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0120d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01213: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0121a:    	add    rsp,0x30
  0121e:    	mov    QWORD PTR [rbp-0x80],rax
:00090 %13 = %1.call dir()                  [Ray]
:00091 
  01222:    	mov    rdi,QWORD PTR [rbp-0x30]
  01226: 00 	test   rdi,0x7
  0122d:    	jne    0x37c23
  01233:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01237:    	jne    0x37c23
  0123d: 26 	cmp    DWORD PTR [rip+0xfffffffffffee224],0x26        # 0xfffef468
  01244:    	jne    0x37c23
  0124a:    	mov    esi,DWORD PTR [rip+0x520]        # 0x1770
  01250:    	cmp    esi,0xffffffff
  01253:    	je     0x37c5a
  01259:    	cmp    WORD PTR [rdi+0x2],0x3
  0125e:    	jne    0x1277
  01264:    	cmp    esi,0x6
  01267:    	jge    0x1277
  0126d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01272:    	jmp    0x12d3
  01277:    	sub    rsp,0x30
  0127b:    	movq   QWORD PTR [rsp],xmm2
  01280:    	movq   QWORD PTR [rsp+0x8],xmm4
  01286:    	movq   QWORD PTR [rsp+0x10],xmm5
  0128c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01292:    	movq   QWORD PTR [rsp+0x20],xmm7
  01298: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0129f: 57 	movabs rax,0x55573c900b50
  012a9:    	call   rax
  012ab:    	movq   xmm2,QWORD PTR [rsp]
  012b0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012b6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012bc:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012c2:    	movq   xmm7,QWORD PTR [rsp+0x20]
  012c8: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  012cf:    	add    rsp,0x30
  012d3: ff 	mov    QWORD PTR [rbp-0x90],rax
:00093 %12 = %13.call z()                   [Vec]
:00094 
  012da: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  012e1: 00 	test   rdi,0x7
  012e8:    	jne    0x37cd3
  012ee:    	cmp    DWORD PTR [rdi+0x4],0x25
  012f2:    	jne    0x37cd3
  012f8: 26 	cmp    DWORD PTR [rip+0xfffffffffffee169],0x26        # 0xfffef468
  012ff:    	jne    0x37cd3
  01305:    	mov    esi,DWORD PTR [rip+0x46d]        # 0x1778
  0130b:    	cmp    esi,0xffffffff
  0130e:    	je     0x37d0a
  01314:    	cmp    WORD PTR [rdi+0x2],0x3
  01319:    	jne    0x1332
  0131f:    	cmp    esi,0x6
  01322:    	jge    0x1332
  01328:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0132d:    	jmp    0x138e
  01332:    	sub    rsp,0x30
  01336:    	movq   QWORD PTR [rsp],xmm2
  0133b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01341:    	movq   QWORD PTR [rsp+0x10],xmm5
  01347:    	movq   QWORD PTR [rsp+0x18],xmm6
  0134d:    	movq   QWORD PTR [rsp+0x20],xmm7
  01353: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0135a: 57 	movabs rax,0x55573c900b50
  01364:    	call   rax
  01366:    	movq   xmm2,QWORD PTR [rsp]
  0136b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01371:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01377:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0137d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01383: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0138a:    	add    rsp,0x30
  0138e: ff 	mov    QWORD PTR [rbp-0x88],rax
:00096 %12 = %6 * %12                       [Float][Float]
  01395: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0139c: 00 	test   rdi,0x1
  013a3:    	jne    0x37d83
  013a9: 00 	test   rdi,0x2
  013b0:    	je     0x13ec
  013b6:    	xorps  xmm3,xmm3
  013b9: 00 	movabs rax,0x8000000000000002
  013c3:    	cmp    rdi,rax
  013c6:    	je     0x13fe
  013cc:    	mov    rax,rdi
  013cf:    	sar    rax,0x3f
  013d3:    	add    rax,0x2
  013d7:    	and    rdi,0xfffffffffffffffc
  013db:    	or     rdi,rax
  013de:    	rol    rdi,0x3d
  013e2:    	movq   xmm3,rdi
  013e7:    	jmp    0x13fe
  013ec:    	call   0xfffecac8
  013f1:    	test   rax,rax
  013f4:    	je     0x37d83
  013fa:    	movq   xmm3,xmm0
  013fe:    	mulsd  xmm3,xmm6
:00097 %11 = %11 + %12                      [Float][Float]
  01402:    	mov    rdi,QWORD PTR [rbp-0x80]
  01406: 00 	test   rdi,0x1
  0140d:    	jne    0x37dba
  01413: 00 	test   rdi,0x2
  0141a:    	je     0x1457
  01420:    	xorps  xmm9,xmm9
  01424: 00 	movabs rax,0x8000000000000002
  0142e:    	cmp    rdi,rax
  01431:    	je     0x146a
  01437:    	mov    rax,rdi
  0143a:    	sar    rax,0x3f
  0143e:    	add    rax,0x2
  01442:    	and    rdi,0xfffffffffffffffc
  01446:    	or     rdi,rax
  01449:    	rol    rdi,0x3d
  0144d:    	movq   xmm9,rdi
  01452:    	jmp    0x146a
  01457:    	call   0xfffecac8
  0145c:    	test   rax,rax
  0145f:    	je     0x37dba
  01465:    	movq   xmm9,xmm0
  0146a:    	addsd  xmm9,xmm3
:00098 %7 = %8.call new(%9; 3)              [#<Class:Vec>]
:00099 
  0146f:    	movq   xmm0,xmm7
  01473:    	call   0xfffecbbb
  01478:    	mov    QWORD PTR [rbp-0x70],rax
  0147c:    	movq   xmm0,xmm8
  01481:    	call   0xfffecbbb
  01486:    	mov    QWORD PTR [rbp-0x78],rax
  0148a:    	movq   xmm0,xmm9
  0148f:    	call   0xfffecbbb
  01494:    	mov    QWORD PTR [rbp-0x80],rax
  01498:    	mov    rdi,QWORD PTR [rbp-0x68]
  0149c: 00 	test   rdi,0x7
  014a3:    	jne    0x37e01
  014a9:    	cmp    DWORD PTR [rdi+0x4],0x26
  014ad:    	jne    0x37e01
  014b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffedfae],0x26        # 0xfffef468
  014ba:    	jne    0x37e01
  014c0: 00 	mov    r9,0x0
  014c7:    	sub    rsp,0x40
  014cb:    	movq   QWORD PTR [rsp],xmm2
  014d0:    	movq   QWORD PTR [rsp+0x8],xmm3
  014d6:    	movq   QWORD PTR [rsp+0x10],xmm4
  014dc:    	movq   QWORD PTR [rsp+0x18],xmm5
  014e2:    	movq   QWORD PTR [rsp+0x20],xmm6
  014e8:    	movq   QWORD PTR [rsp+0x28],xmm7
  014ee: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014f5: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014fc:    	mov    rdx,rdi
  014ff:    	mov    rax,QWORD PTR [rbx]
  01502:    	lea    rdi,[rsp-0x18]
  01507:    	mov    QWORD PTR [rdi],rax
  0150a:    	mov    QWORD PTR [rbx],rdi
  0150d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01516:    	mov    QWORD PTR [rsp-0x38],rcx
  0151b:    	lea    rcx,[rbp-0x70]
  0151f: 00 	mov    r8,0x3
  01526:    	call   0x37e2d
  0152b:    	lea    rdi,[rbp-0x8]
  0152f:    	mov    QWORD PTR [rbx],rdi
  01532:    	movq   xmm2,QWORD PTR [rsp]
  01537:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0153d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01543:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01549:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0154f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01555: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0155c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01563:    	add    rsp,0x40
  01567: 57 	movabs r13,0x55573cf99b80
  01571:    	test   rax,rax
  01574:    	je     0xfffeca8f
  0157a:    	mov    QWORD PTR [rbp-0x60],rax
:00101 _ = %2.call pl=(%7; 1)               [Isect]
:00102 
  0157e:    	mov    rdi,QWORD PTR [rbp-0x38]
  01582: 00 	test   rdi,0x7
  01589:    	jne    0x37e5f
  0158f:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01593:    	jne    0x37e5f
  01599: 26 	cmp    DWORD PTR [rip+0xfffffffffffedec8],0x26        # 0xfffef468
  015a0:    	jne    0x37e5f
  015a6:    	mov    esi,DWORD PTR [rip+0x1d4]        # 0x1780
  015ac:    	cmp    esi,0xffffffff
  015af:    	je     0x37e8b
  015b5:    	cmp    WORD PTR [rdi+0x2],0x3
  015ba:    	jne    0x15d7
  015c0:    	cmp    esi,0x6
  015c3:    	jge    0x15d7
  015c9:    	mov    rax,QWORD PTR [rbp-0x60]
  015cd:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  015d2:    	jmp    0x1664
  015d7:    	sub    rsp,0x40
  015db:    	movq   QWORD PTR [rsp],xmm2
  015e0:    	movq   QWORD PTR [rsp+0x8],xmm3
  015e6:    	movq   QWORD PTR [rsp+0x10],xmm4
  015ec:    	movq   QWORD PTR [rsp+0x18],xmm5
  015f2:    	movq   QWORD PTR [rsp+0x20],xmm6
  015f8:    	movq   QWORD PTR [rsp+0x28],xmm7
  015fe: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01605: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0160c:    	mov    rdx,QWORD PTR [rbp-0x60]
  01610: 57 	movabs rax,0x55573c900dd0
  0161a:    	call   rax
  0161c:    	movq   xmm2,QWORD PTR [rsp]
  01621:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01627:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0162d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01633:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01639:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0163f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01646: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0164d:    	add    rsp,0x40
  01651: 57 	movabs r13,0x55573cf99bb0
  0165b:    	test   rax,rax
  0165e:    	je     0xfffeca8f
:00104 br =>:00105
  01664:    	jmp    0x37f58
:00105 %7 = nil
  01669: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00106 ret %7
  01671:    	mov    rax,QWORD PTR [rbp-0x60]
  01675:    	leave  
  01676:    	ret    
==> start whole compile: <unnamed> FuncId(73) self_class:Scene start:[00000] bytecode:0x55573cf8ff70
<== finished compile. elapsed:154.2µs
offset:Pos(85296) code: 8900 bytes  data: 420 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xb0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x38],rax
  00016:    	mov    QWORD PTR [rbp-0x40],rax
  0001a:    	mov    QWORD PTR [rbp-0x48],rax
  0001e:    	mov    QWORD PTR [rbp-0x50],rax
  00022:    	mov    QWORD PTR [rbp-0x58],rax
  00026:    	mov    QWORD PTR [rbp-0x60],rax
  0002a:    	mov    QWORD PTR [rbp-0x68],rax
  0002e:    	mov    QWORD PTR [rbp-0x70],rax
  00032:    	mov    QWORD PTR [rbp-0x78],rax
  00036:    	mov    QWORD PTR [rbp-0x80],rax
  0003a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00041: ff 	mov    QWORD PTR [rbp-0x90],rax
  00048: ff 	mov    QWORD PTR [rbp-0x98],rax
  0004f: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00056: ff 	mov    QWORD PTR [rbp-0xa8],rax
  0005d:    	mov    rdi,QWORD PTR [rbp-0x28]
  00061: 00 	test   rdi,0x7
  00068:    	jne    0x3680a
  0006e:    	cmp    DWORD PTR [rdi+0x4],0x2f
  00072:    	jne    0x3680a
:00000 %13 = %0.call rand()                 [Scene]
:00001 
  00078:    	mov    rdi,QWORD PTR [rbp-0x28]
  0007c: 26 	cmp    DWORD PTR [rip+0xfffffffffffedc61],0x26        # 0xfffedce4
  00083:    	jne    0x36819
  00089: 00 	mov    r9,0x0
  00090:    	mov    rdx,rdi
  00093:    	mov    rax,QWORD PTR [rbx]
  00096:    	lea    rdi,[rsp-0x18]
  0009b:    	mov    QWORD PTR [rdi],rax
  0009e:    	mov    QWORD PTR [rbx],rdi
  000a1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000aa:    	mov    QWORD PTR [rsp-0x38],rcx
  000af: ff 	lea    rcx,[rbp-0x98]
  000b6: 00 	mov    r8,0x0
  000bd:    	call   0x36828
  000c2:    	lea    rdi,[rbp-0x8]
  000c6:    	mov    QWORD PTR [rbx],rdi
  000c9: 57 	movabs r13,0x55573cf8ff90
  000d3:    	test   rax,rax
  000d6:    	je     0xfffeb30b
  000dc: ff 	mov    QWORD PTR [rbp-0x90],rax
:00003 %2 = %13
  000e3: ff 	mov    rax,QWORD PTR [rbp-0x90]
  000ea:    	mov    QWORD PTR [rbp-0x38],rax
:00004 %13 = literal[2.0]
  000ee: 00 	movq   xmm2,QWORD PTR [rip+0x21da]        # 0x22d0
:00005 %14 = literal[3.14159265]
  000f6: 00 	movq   xmm3,QWORD PTR [rip+0x21e2]        # 0x22e0
:00006 %13 = %13 * %14                      [Float][Float]
  000fe:    	mulsd  xmm2,xmm3
:00007 %14 = %0.call rand()                 [Scene]
:00008 
  00102:    	mov    rdi,QWORD PTR [rbp-0x28]
  00106: 26 	cmp    DWORD PTR [rip+0xfffffffffffedbd7],0x26        # 0xfffedce4
  0010d:    	jne    0x3685a
  00113: 00 	mov    r9,0x0
  0011a:    	sub    rsp,0x10
  0011e:    	movq   QWORD PTR [rsp],xmm2
  00123:    	mov    rdx,rdi
  00126:    	mov    rax,QWORD PTR [rbx]
  00129:    	lea    rdi,[rsp-0x18]
  0012e:    	mov    QWORD PTR [rdi],rax
  00131:    	mov    QWORD PTR [rbx],rdi
  00134: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0013d:    	mov    QWORD PTR [rsp-0x38],rcx
  00142: ff 	lea    rcx,[rbp-0xa0]
  00149: 00 	mov    r8,0x0
  00150:    	call   0x36879
  00155:    	lea    rdi,[rbp-0x8]
  00159:    	mov    QWORD PTR [rbx],rdi
  0015c:    	movq   xmm2,QWORD PTR [rsp]
  00161:    	add    rsp,0x10
  00165: 57 	movabs r13,0x55573cf90000
  0016f:    	test   rax,rax
  00172:    	je     0xfffeb30b
  00178: ff 	mov    QWORD PTR [rbp-0x98],rax
:00010 %3 = %13 * %14                       [Float][Float]
  0017f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00186: 00 	test   rdi,0x1
  0018d:    	jne    0x368ab
  00193: 00 	test   rdi,0x2
  0019a:    	je     0x1d6
  001a0:    	xorps  xmm3,xmm3
  001a3: 00 	movabs rax,0x8000000000000002
  001ad:    	cmp    rdi,rax
  001b0:    	je     0x1e8
  001b6:    	mov    rax,rdi
  001b9:    	sar    rax,0x3f
  001bd:    	add    rax,0x2
  001c1:    	and    rdi,0xfffffffffffffffc
  001c5:    	or     rdi,rax
  001c8:    	rol    rdi,0x3d
  001cc:    	movq   xmm3,rdi
  001d1:    	jmp    0x1e8
  001d6:    	call   0xfffeb344
  001db:    	test   rax,rax
  001de:    	je     0x368ab
  001e4:    	movq   xmm3,xmm0
  001e8:    	movq   xmm4,xmm2
  001ec:    	mulsd  xmm4,xmm3
:00011 %14 = const[Math]                    [Math]
  001f0: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffedaf9]        # 0xfffedcf0
  001f7: 00 	cmp    rax,QWORD PTR [rip+0x2102]        # 0x2300
  001fe:    	jne    0x368ca
  00204: 00 	mov    rax,QWORD PTR [rip+0x20e5]        # 0x22f0
  0020b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %15 = %3
:00013 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
:00014 
  00212: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00219: 00 	test   rdi,0x7
  00220:    	jne    0x3692e
  00226:    	cmp    DWORD PTR [rdi+0x4],0x20
  0022a:    	jne    0x3692e
  00230: 26 	cmp    DWORD PTR [rip+0xfffffffffffedaad],0x26        # 0xfffedce4
  00237:    	jne    0x3692e
  0023d:    	sub    rsp,0x10
  00241:    	movq   QWORD PTR [rsp],xmm2
  00246:    	movq   QWORD PTR [rsp+0x8],xmm4
  0024c:    	movq   xmm0,xmm4
  00250: 57 	movabs rax,0x55573c942070
  0025a:    	call   rax
  0025c:    	movq   xmm2,QWORD PTR [rsp]
  00261:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00267:    	add    rsp,0x10
  0026b:    	movq   xmm2,xmm0
:00016 %15 = const[Math]                    [Math]
  0026f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeda7a]        # 0xfffedcf0
  00276: 00 	cmp    rax,QWORD PTR [rip+0x20a3]        # 0x2320
  0027d:    	jne    0x36951
  00283: 00 	mov    rax,QWORD PTR [rip+0x2086]        # 0x2310
  0028a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00017 %16 = literal[1.0]
  00291: 00 	movq   xmm3,QWORD PTR [rip+0x2097]        # 0x2330
:00018 %16 = %16 - %2                       [Float][Float]
  00299:    	mov    rdi,QWORD PTR [rbp-0x38]
  0029d: 00 	test   rdi,0x1
  002a4:    	jne    0x369b5
  002aa: 00 	test   rdi,0x2
  002b1:    	je     0x2ed
  002b7:    	xorps  xmm5,xmm5
  002ba: 00 	movabs rax,0x8000000000000002
  002c4:    	cmp    rdi,rax
  002c7:    	je     0x2ff
  002cd:    	mov    rax,rdi
  002d0:    	sar    rax,0x3f
  002d4:    	add    rax,0x2
  002d8:    	and    rdi,0xfffffffffffffffc
  002dc:    	or     rdi,rax
  002df:    	rol    rdi,0x3d
  002e3:    	movq   xmm5,rdi
  002e8:    	jmp    0x2ff
  002ed:    	call   0xfffeb344
  002f2:    	test   rax,rax
  002f5:    	je     0x369b5
  002fb:    	movq   xmm5,xmm0
  002ff:    	subsd  xmm3,xmm5
:00019 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
:00020 
  00303: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0030a: 00 	test   rdi,0x7
  00311:    	jne    0x369f1
  00317:    	cmp    DWORD PTR [rdi+0x4],0x20
  0031b:    	jne    0x369f1
  00321: 26 	cmp    DWORD PTR [rip+0xfffffffffffed9bc],0x26        # 0xfffedce4
  00328:    	jne    0x369f1
  0032e:    	sqrtsd xmm6,xmm3
:00022 %4 = %13 * %14                       [Float][Float]
  00332:    	movq   xmm7,xmm2
  00336:    	mulsd  xmm7,xmm6
:00023 %14 = const[Math]                    [Math]
  0033a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffed9af]        # 0xfffedcf0
  00341: 00 	cmp    rax,QWORD PTR [rip+0x2008]        # 0x2350
  00348:    	jne    0x36a2d
  0034e: 00 	mov    rax,QWORD PTR [rip+0x1feb]        # 0x2340
  00355: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %15 = %3
:00025 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
:00026 
  0035c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00363: 00 	test   rdi,0x7
  0036a:    	jne    0x36ab5
  00370:    	cmp    DWORD PTR [rdi+0x4],0x20
  00374:    	jne    0x36ab5
  0037a: 26 	cmp    DWORD PTR [rip+0xfffffffffffed963],0x26        # 0xfffedce4
  00381:    	jne    0x36ab5
  00387:    	sub    rsp,0x30
  0038b:    	movq   QWORD PTR [rsp],xmm2
  00390:    	movq   QWORD PTR [rsp+0x8],xmm3
  00396:    	movq   QWORD PTR [rsp+0x10],xmm4
  0039c:    	movq   QWORD PTR [rsp+0x18],xmm5
  003a2:    	movq   QWORD PTR [rsp+0x20],xmm7
  003a8:    	movq   xmm0,xmm4
  003ac: 57 	movabs rax,0x55573c942080
  003b6:    	call   rax
  003b8:    	movq   xmm2,QWORD PTR [rsp]
  003bd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003c3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003c9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  003cf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  003d5:    	add    rsp,0x30
  003d9:    	movq   xmm2,xmm0
:00028 %15 = const[Math]                    [Math]
  003dd: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffed90c]        # 0xfffedcf0
  003e4: 00 	cmp    rax,QWORD PTR [rip+0x1f85]        # 0x2370
  003eb:    	jne    0x36af5
  003f1: 00 	mov    rax,QWORD PTR [rip+0x1f68]        # 0x2360
  003f8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00029 %16 = literal[1.0]
  003ff: 00 	movq   xmm3,QWORD PTR [rip+0x1f79]        # 0x2380
:00030 %16 = %16 - %2                       [Float][Float]
  00407:    	subsd  xmm3,xmm5
:00031 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
:00032 
  0040b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00412: 00 	test   rdi,0x7
  00419:    	jne    0x36b7d
  0041f:    	cmp    DWORD PTR [rdi+0x4],0x20
  00423:    	jne    0x36b7d
  00429: 26 	cmp    DWORD PTR [rip+0xfffffffffffed8b4],0x26        # 0xfffedce4
  00430:    	jne    0x36b7d
  00436:    	sqrtsd xmm6,xmm3
:00034 %5 = %13 * %14                       [Float][Float]
  0043a:    	movq   xmm8,xmm2
  0043f:    	mulsd  xmm8,xmm6
:00035 %13 = const[Math]                    [Math]
  00444: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffed8a5]        # 0xfffedcf0
  0044b: 00 	cmp    rax,QWORD PTR [rip+0x1f4e]        # 0x23a0
  00452:    	jne    0x36bc6
  00458: 00 	mov    rax,QWORD PTR [rip+0x1f31]        # 0x2390
  0045f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00036 %14 = %2
:00037 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
:00038 
  00466: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0046d: 00 	test   rdi,0x7
  00474:    	jne    0x36c5c
  0047a:    	cmp    DWORD PTR [rdi+0x4],0x20
  0047e:    	jne    0x36c5c
  00484: 26 	cmp    DWORD PTR [rip+0xfffffffffffed859],0x26        # 0xfffedce4
  0048b:    	jne    0x36c5c
  00491:    	sqrtsd xmm2,xmm5
:00040 %14 = dynvar(2, %2)
  00495:    	mov    rax,QWORD PTR [rbp-0x10]
  00499:    	mov    rax,QWORD PTR [rax]
  0049c:    	mov    rax,QWORD PTR [rax-0x28]
  004a0: ff 	mov    QWORD PTR [rbp-0x98],rax
:00041 %15 = 0: i32
  004a7: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00042 %14 = %14.[%15]
  004b2:    	sub    rsp,0x30
  004b6:    	movq   QWORD PTR [rsp],xmm2
  004bb:    	movq   QWORD PTR [rsp+0x8],xmm3
  004c1:    	movq   QWORD PTR [rsp+0x10],xmm4
  004c7:    	movq   QWORD PTR [rsp+0x18],xmm5
  004cd:    	movq   QWORD PTR [rsp+0x20],xmm7
  004d3: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  004da: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  004e1: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  004e8:    	mov    rdi,rbx
  004eb:    	mov    rsi,r12
  004ee: 57 	movabs rax,0x55573c95cc80
  004f8:    	call   rax
  004fa:    	movq   xmm2,QWORD PTR [rsp]
  004ff:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00505:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0050b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00511:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00517: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0051e:    	add    rsp,0x30
  00522: 57 	movabs r13,0x55573cf90220
  0052c:    	test   rax,rax
  0052f:    	je     0xfffeb30b
  00535: ff 	mov    QWORD PTR [rbp-0x98],rax
:00043 %13 = %14.call x()                   [Vec]
:00044 
  0053c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00543: 00 	test   rdi,0x7
  0054a:    	jne    0x36cb3
  00550:    	cmp    DWORD PTR [rdi+0x4],0x25
  00554:    	jne    0x36cb3
  0055a: 26 	cmp    DWORD PTR [rip+0xfffffffffffed783],0x26        # 0xfffedce4
  00561:    	jne    0x36cb3
  00567:    	mov    esi,DWORD PTR [rip+0x1e3f]        # 0x23ac
  0056d:    	cmp    esi,0xffffffff
  00570:    	je     0x36d07
  00576:    	cmp    WORD PTR [rdi+0x2],0x3
  0057b:    	jne    0x594
  00581:    	cmp    esi,0x6
  00584:    	jge    0x594
  0058a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0058f:    	jmp    0x5f0
  00594:    	sub    rsp,0x30
  00598:    	movq   QWORD PTR [rsp],xmm2
  0059d:    	movq   QWORD PTR [rsp+0x8],xmm3
  005a3:    	movq   QWORD PTR [rsp+0x10],xmm4
  005a9:    	movq   QWORD PTR [rsp+0x18],xmm5
  005af:    	movq   QWORD PTR [rsp+0x20],xmm7
  005b5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  005bc: 57 	movabs rax,0x55573c900b50
  005c6:    	call   rax
  005c8:    	movq   xmm2,QWORD PTR [rsp]
  005cd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005d3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005d9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005df:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005e5: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  005ec:    	add    rsp,0x30
  005f0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00046 %13 = %4 * %13                       [Float][Float]
  005f7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  005fe: 00 	test   rdi,0x1
  00605:    	jne    0x36d80
  0060b: 00 	test   rdi,0x2
  00612:    	je     0x64e
  00618:    	xorps  xmm6,xmm6
  0061b: 00 	movabs rax,0x8000000000000002
  00625:    	cmp    rdi,rax
  00628:    	je     0x660
  0062e:    	mov    rax,rdi
  00631:    	sar    rax,0x3f
  00635:    	add    rax,0x2
  00639:    	and    rdi,0xfffffffffffffffc
  0063d:    	or     rdi,rax
  00640:    	rol    rdi,0x3d
  00644:    	movq   xmm6,rdi
  00649:    	jmp    0x660
  0064e:    	call   0xfffeb344
  00653:    	test   rax,rax
  00656:    	je     0x36d80
  0065c:    	movq   xmm6,xmm0
  00660:    	mulsd  xmm6,xmm7
:00047 %15 = dynvar(2, %2)
  00664:    	mov    rax,QWORD PTR [rbp-0x10]
  00668:    	mov    rax,QWORD PTR [rax]
  0066b:    	mov    rax,QWORD PTR [rax-0x28]
  0066f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00048 %16 = 1: i32
  00676: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00049 %15 = %15.[%16]
  00681:    	sub    rsp,0x30
  00685:    	movq   QWORD PTR [rsp],xmm2
  0068a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00690:    	movq   QWORD PTR [rsp+0x10],xmm5
  00696:    	movq   QWORD PTR [rsp+0x18],xmm6
  0069c:    	movq   QWORD PTR [rsp+0x20],xmm7
  006a2: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  006a9: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  006b0: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  006b7:    	mov    rdi,rbx
  006ba:    	mov    rsi,r12
  006bd: 57 	movabs rax,0x55573c95cc80
  006c7:    	call   rax
  006c9:    	movq   xmm2,QWORD PTR [rsp]
  006ce:    	movq   xmm4,QWORD PTR [rsp+0x8]
  006d4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006da:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006e0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  006e6: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  006ed:    	add    rsp,0x30
  006f1: 57 	movabs r13,0x55573cf90290
  006fb:    	test   rax,rax
  006fe:    	je     0xfffeb30b
  00704: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00050 %14 = %15.call x()                   [Vec]
:00051 
  0070b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00712: 00 	test   rdi,0x7
  00719:    	jne    0x36dd4
  0071f:    	cmp    DWORD PTR [rdi+0x4],0x25
  00723:    	jne    0x36dd4
  00729: 26 	cmp    DWORD PTR [rip+0xfffffffffffed5b4],0x26        # 0xfffedce4
  00730:    	jne    0x36dd4
  00736:    	mov    esi,DWORD PTR [rip+0x1c78]        # 0x23b4
  0073c:    	cmp    esi,0xffffffff
  0073f:    	je     0x36e28
  00745:    	cmp    WORD PTR [rdi+0x2],0x3
  0074a:    	jne    0x763
  00750:    	cmp    esi,0x6
  00753:    	jge    0x763
  00759:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0075e:    	jmp    0x7bf
  00763:    	sub    rsp,0x30
  00767:    	movq   QWORD PTR [rsp],xmm2
  0076c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00772:    	movq   QWORD PTR [rsp+0x10],xmm5
  00778:    	movq   QWORD PTR [rsp+0x18],xmm6
  0077e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00784: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0078b: 57 	movabs rax,0x55573c900b50
  00795:    	call   rax
  00797:    	movq   xmm2,QWORD PTR [rsp]
  0079c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007a2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007a8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007ae:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007b4: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  007bb:    	add    rsp,0x30
  007bf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00053 %14 = %5 * %14                       [Float][Float]
  007c6: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  007cd: 00 	test   rdi,0x1
  007d4:    	jne    0x36ea1
  007da: 00 	test   rdi,0x2
  007e1:    	je     0x81d
  007e7:    	xorps  xmm3,xmm3
  007ea: 00 	movabs rax,0x8000000000000002
  007f4:    	cmp    rdi,rax
  007f7:    	je     0x82f
  007fd:    	mov    rax,rdi
  00800:    	sar    rax,0x3f
  00804:    	add    rax,0x2
  00808:    	and    rdi,0xfffffffffffffffc
  0080c:    	or     rdi,rax
  0080f:    	rol    rdi,0x3d
  00813:    	movq   xmm3,rdi
  00818:    	jmp    0x82f
  0081d:    	call   0xfffeb344
  00822:    	test   rax,rax
  00825:    	je     0x36ea1
  0082b:    	movq   xmm3,xmm0
  0082f:    	mulsd  xmm3,xmm8
:00054 %13 = %13 + %14                      [Float][Float]
  00834:    	addsd  xmm6,xmm3
:00055 %15 = dynvar(2, %2)
  00838:    	mov    rax,QWORD PTR [rbp-0x10]
  0083c:    	mov    rax,QWORD PTR [rax]
  0083f:    	mov    rax,QWORD PTR [rax-0x28]
  00843: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00056 %16 = 2: i32
  0084a: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00057 %15 = %15.[%16]
  00855:    	sub    rsp,0x40
  00859:    	movq   QWORD PTR [rsp],xmm2
  0085e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00864:    	movq   QWORD PTR [rsp+0x10],xmm4
  0086a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00870:    	movq   QWORD PTR [rsp+0x20],xmm6
  00876:    	movq   QWORD PTR [rsp+0x28],xmm7
  0087c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00883: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  0088a: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00891:    	mov    rdi,rbx
  00894:    	mov    rsi,r12
  00897: 57 	movabs rax,0x55573c95cc80
  008a1:    	call   rax
  008a3:    	movq   xmm2,QWORD PTR [rsp]
  008a8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008ae:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008b4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008ba:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008c0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  008c6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  008cd:    	add    rsp,0x40
  008d1: 57 	movabs r13,0x55573cf90310
  008db:    	test   rax,rax
  008de:    	je     0xfffeb30b
  008e4: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00058 %14 = %15.call x()                   [Vec]
:00059 
  008eb: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  008f2: 00 	test   rdi,0x7
  008f9:    	jne    0x36ef5
  008ff:    	cmp    DWORD PTR [rdi+0x4],0x25
  00903:    	jne    0x36ef5
  00909: 26 	cmp    DWORD PTR [rip+0xfffffffffffed3d4],0x26        # 0xfffedce4
  00910:    	jne    0x36ef5
  00916:    	mov    esi,DWORD PTR [rip+0x1aa0]        # 0x23bc
  0091c:    	cmp    esi,0xffffffff
  0091f:    	je     0x36f49
  00925:    	cmp    WORD PTR [rdi+0x2],0x3
  0092a:    	jne    0x943
  00930:    	cmp    esi,0x6
  00933:    	jge    0x943
  00939:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0093e:    	jmp    0x99f
  00943:    	sub    rsp,0x30
  00947:    	movq   QWORD PTR [rsp],xmm2
  0094c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00952:    	movq   QWORD PTR [rsp+0x10],xmm5
  00958:    	movq   QWORD PTR [rsp+0x18],xmm6
  0095e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00964: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0096b: 57 	movabs rax,0x55573c900b50
  00975:    	call   rax
  00977:    	movq   xmm2,QWORD PTR [rsp]
  0097c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00982:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00988:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0098e:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00994: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0099b:    	add    rsp,0x30
  0099f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00061 %14 = %6 * %14                       [Float][Float]
  009a6: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  009ad: 00 	test   rdi,0x1
  009b4:    	jne    0x36fc2
  009ba: 00 	test   rdi,0x2
  009c1:    	je     0x9fd
  009c7:    	xorps  xmm3,xmm3
  009ca: 00 	movabs rax,0x8000000000000002
  009d4:    	cmp    rdi,rax
  009d7:    	je     0xa0f
  009dd:    	mov    rax,rdi
  009e0:    	sar    rax,0x3f
  009e4:    	add    rax,0x2
  009e8:    	and    rdi,0xfffffffffffffffc
  009ec:    	or     rdi,rax
  009ef:    	rol    rdi,0x3d
  009f3:    	movq   xmm3,rdi
  009f8:    	jmp    0xa0f
  009fd:    	call   0xfffeb344
  00a02:    	test   rax,rax
  00a05:    	je     0x36fc2
  00a0b:    	movq   xmm3,xmm0
  00a0f:    	mulsd  xmm3,xmm2
:00062 %7 = %13 + %14                       [Float][Float]
  00a13:    	movq   xmm9,xmm6
  00a18:    	addsd  xmm9,xmm3
:00063 %14 = dynvar(2, %2)
  00a1d:    	mov    rax,QWORD PTR [rbp-0x10]
  00a21:    	mov    rax,QWORD PTR [rax]
  00a24:    	mov    rax,QWORD PTR [rax-0x28]
  00a28: ff 	mov    QWORD PTR [rbp-0x98],rax
:00064 %15 = 0: i32
  00a2f: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00065 %14 = %14.[%15]
  00a3a:    	sub    rsp,0x40
  00a3e:    	movq   QWORD PTR [rsp],xmm2
  00a43:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a49:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a4f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a55:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a5b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a62: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00a69: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00a70: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00a77:    	mov    rdi,rbx
  00a7a:    	mov    rsi,r12
  00a7d: 57 	movabs rax,0x55573c95cc80
  00a87:    	call   rax
  00a89:    	movq   xmm2,QWORD PTR [rsp]
  00a8e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a94:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a9a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00aa0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00aa6: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00aad: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00ab4:    	add    rsp,0x40
  00ab8: 57 	movabs r13,0x55573cf90390
  00ac2:    	test   rax,rax
  00ac5:    	je     0xfffeb30b
  00acb: ff 	mov    QWORD PTR [rbp-0x98],rax
:00066 %13 = %14.call y()                   [Vec]
:00067 
  00ad2: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ad9: 00 	test   rdi,0x7
  00ae0:    	jne    0x37016
  00ae6:    	cmp    DWORD PTR [rdi+0x4],0x25
  00aea:    	jne    0x37016
  00af0: 26 	cmp    DWORD PTR [rip+0xfffffffffffed1ed],0x26        # 0xfffedce4
  00af7:    	jne    0x37016
  00afd:    	mov    esi,DWORD PTR [rip+0x18c1]        # 0x23c4
  00b03:    	cmp    esi,0xffffffff
  00b06:    	je     0x37068
  00b0c:    	cmp    WORD PTR [rdi+0x2],0x3
  00b11:    	jne    0xb2a
  00b17:    	cmp    esi,0x6
  00b1a:    	jge    0xb2a
  00b20:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b25:    	jmp    0xb88
  00b2a:    	sub    rsp,0x30
  00b2e:    	movq   QWORD PTR [rsp],xmm2
  00b33:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b39:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b3f:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b45: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00b4c: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00b53: 57 	movabs rax,0x55573c900b50
  00b5d:    	call   rax
  00b5f:    	movq   xmm2,QWORD PTR [rsp]
  00b64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b6a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b70:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b76: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00b7d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00b84:    	add    rsp,0x30
  00b88: ff 	mov    QWORD PTR [rbp-0x90],rax
:00069 %13 = %4 * %13                       [Float][Float]
  00b8f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00b96: 00 	test   rdi,0x1
  00b9d:    	jne    0x370e3
  00ba3: 00 	test   rdi,0x2
  00baa:    	je     0xbe6
  00bb0:    	xorps  xmm3,xmm3
  00bb3: 00 	movabs rax,0x8000000000000002
  00bbd:    	cmp    rdi,rax
  00bc0:    	je     0xbf8
  00bc6:    	mov    rax,rdi
  00bc9:    	sar    rax,0x3f
  00bcd:    	add    rax,0x2
  00bd1:    	and    rdi,0xfffffffffffffffc
  00bd5:    	or     rdi,rax
  00bd8:    	rol    rdi,0x3d
  00bdc:    	movq   xmm3,rdi
  00be1:    	jmp    0xbf8
  00be6:    	call   0xfffeb344
  00beb:    	test   rax,rax
  00bee:    	je     0x370e3
  00bf4:    	movq   xmm3,xmm0
  00bf8:    	mulsd  xmm3,xmm7
:00070 %15 = dynvar(2, %2)
  00bfc:    	mov    rax,QWORD PTR [rbp-0x10]
  00c00:    	mov    rax,QWORD PTR [rax]
  00c03:    	mov    rax,QWORD PTR [rax-0x28]
  00c07: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00071 %16 = 1: i32
  00c0e: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00072 %15 = %15.[%16]
  00c19:    	sub    rsp,0x40
  00c1d:    	movq   QWORD PTR [rsp],xmm2
  00c22:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c28:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c2e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c34:    	movq   QWORD PTR [rsp+0x20],xmm7
  00c3a: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00c41: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00c48: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00c4f: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00c56:    	mov    rdi,rbx
  00c59:    	mov    rsi,r12
  00c5c: 57 	movabs rax,0x55573c95cc80
  00c66:    	call   rax
  00c68:    	movq   xmm2,QWORD PTR [rsp]
  00c6d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c73:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c79:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c7f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00c85: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00c8c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00c93:    	add    rsp,0x40
  00c97: 57 	movabs r13,0x55573cf90400
  00ca1:    	test   rax,rax
  00ca4:    	je     0xfffeb30b
  00caa: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00073 %14 = %15.call y()                   [Vec]
:00074 
  00cb1: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00cb8: 00 	test   rdi,0x7
  00cbf:    	jne    0x37135
  00cc5:    	cmp    DWORD PTR [rdi+0x4],0x25
  00cc9:    	jne    0x37135
  00ccf: 26 	cmp    DWORD PTR [rip+0xfffffffffffed00e],0x26        # 0xfffedce4
  00cd6:    	jne    0x37135
  00cdc:    	mov    esi,DWORD PTR [rip+0x16ea]        # 0x23cc
  00ce2:    	cmp    esi,0xffffffff
  00ce5:    	je     0x37197
  00ceb:    	cmp    WORD PTR [rdi+0x2],0x3
  00cf0:    	jne    0xd09
  00cf6:    	cmp    esi,0x6
  00cf9:    	jge    0xd09
  00cff:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d04:    	jmp    0xd73
  00d09:    	sub    rsp,0x40
  00d0d:    	movq   QWORD PTR [rsp],xmm2
  00d12:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d18:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d1e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d24:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d2a: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d31: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d38: 57 	movabs rax,0x55573c900b50
  00d42:    	call   rax
  00d44:    	movq   xmm2,QWORD PTR [rsp]
  00d49:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d4f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d55:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d5b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d61: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00d68: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d6f:    	add    rsp,0x40
  00d73: ff 	mov    QWORD PTR [rbp-0x98],rax
:00076 %14 = %5 * %14                       [Float][Float]
  00d7a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00d81: 00 	test   rdi,0x1
  00d88:    	jne    0x3721e
  00d8e: 00 	test   rdi,0x2
  00d95:    	je     0xdd1
  00d9b:    	xorps  xmm6,xmm6
  00d9e: 00 	movabs rax,0x8000000000000002
  00da8:    	cmp    rdi,rax
  00dab:    	je     0xde3
  00db1:    	mov    rax,rdi
  00db4:    	sar    rax,0x3f
  00db8:    	add    rax,0x2
  00dbc:    	and    rdi,0xfffffffffffffffc
  00dc0:    	or     rdi,rax
  00dc3:    	rol    rdi,0x3d
  00dc7:    	movq   xmm6,rdi
  00dcc:    	jmp    0xde3
  00dd1:    	call   0xfffeb344
  00dd6:    	test   rax,rax
  00dd9:    	je     0x3721e
  00ddf:    	movq   xmm6,xmm0
  00de3:    	mulsd  xmm6,xmm8
:00077 %13 = %13 + %14                      [Float][Float]
  00de8:    	addsd  xmm3,xmm6
:00078 %15 = dynvar(2, %2)
  00dec:    	mov    rax,QWORD PTR [rbp-0x10]
  00df0:    	mov    rax,QWORD PTR [rax]
  00df3:    	mov    rax,QWORD PTR [rax-0x28]
  00df7: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00079 %16 = 2: i32
  00dfe: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00080 %15 = %15.[%16]
  00e09:    	sub    rsp,0x40
  00e0d:    	movq   QWORD PTR [rsp],xmm2
  00e12:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e18:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e1e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e24:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e2a:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e30: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e37: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e3e: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00e45: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00e4c:    	mov    rdi,rbx
  00e4f:    	mov    rsi,r12
  00e52: 57 	movabs rax,0x55573c95cc80
  00e5c:    	call   rax
  00e5e:    	movq   xmm2,QWORD PTR [rsp]
  00e63:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e69:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e6f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e75:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e7b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e81: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e88: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e8f:    	add    rsp,0x40
  00e93: 57 	movabs r13,0x55573cf90480
  00e9d:    	test   rax,rax
  00ea0:    	je     0xfffeb30b
  00ea6: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00081 %14 = %15.call y()                   [Vec]
:00082 
  00ead: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00eb4: 00 	test   rdi,0x7
  00ebb:    	jne    0x37280
  00ec1:    	cmp    DWORD PTR [rdi+0x4],0x25
  00ec5:    	jne    0x37280
  00ecb: 26 	cmp    DWORD PTR [rip+0xfffffffffffece12],0x26        # 0xfffedce4
  00ed2:    	jne    0x37280
  00ed8:    	mov    esi,DWORD PTR [rip+0x14f6]        # 0x23d4
  00ede:    	cmp    esi,0xffffffff
  00ee1:    	je     0x372e2
  00ee7:    	cmp    WORD PTR [rdi+0x2],0x3
  00eec:    	jne    0xf05
  00ef2:    	cmp    esi,0x6
  00ef5:    	jge    0xf05
  00efb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f00:    	jmp    0xf6f
  00f05:    	sub    rsp,0x40
  00f09:    	movq   QWORD PTR [rsp],xmm2
  00f0e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f14:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f1a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f20:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f26: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00f2d: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00f34: 57 	movabs rax,0x55573c900b50
  00f3e:    	call   rax
  00f40:    	movq   xmm2,QWORD PTR [rsp]
  00f45:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f4b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f51:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f57:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00f5d: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00f64: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00f6b:    	add    rsp,0x40
  00f6f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00084 %14 = %6 * %14                       [Float][Float]
  00f76: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00f7d: 00 	test   rdi,0x1
  00f84:    	jne    0x37369
  00f8a: 00 	test   rdi,0x2
  00f91:    	je     0xfcd
  00f97:    	xorps  xmm6,xmm6
  00f9a: 00 	movabs rax,0x8000000000000002
  00fa4:    	cmp    rdi,rax
  00fa7:    	je     0xfdf
  00fad:    	mov    rax,rdi
  00fb0:    	sar    rax,0x3f
  00fb4:    	add    rax,0x2
  00fb8:    	and    rdi,0xfffffffffffffffc
  00fbc:    	or     rdi,rax
  00fbf:    	rol    rdi,0x3d
  00fc3:    	movq   xmm6,rdi
  00fc8:    	jmp    0xfdf
  00fcd:    	call   0xfffeb344
  00fd2:    	test   rax,rax
  00fd5:    	je     0x37369
  00fdb:    	movq   xmm6,xmm0
  00fdf:    	mulsd  xmm6,xmm2
:00085 %8 = %13 + %14                       [Float][Float]
  00fe3:    	movq   xmm10,xmm3
  00fe8:    	addsd  xmm10,xmm6
:00086 %14 = dynvar(2, %2)
  00fed:    	mov    rax,QWORD PTR [rbp-0x10]
  00ff1:    	mov    rax,QWORD PTR [rax]
  00ff4:    	mov    rax,QWORD PTR [rax-0x28]
  00ff8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00087 %15 = 0: i32
  00fff: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00088 %14 = %14.[%15]
  0100a:    	sub    rsp,0x40
  0100e:    	movq   QWORD PTR [rsp],xmm2
  01013:    	movq   QWORD PTR [rsp+0x8],xmm3
  01019:    	movq   QWORD PTR [rsp+0x10],xmm4
  0101f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01025:    	movq   QWORD PTR [rsp+0x20],xmm7
  0102b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01032: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01039: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01040: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01047: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  0104e:    	mov    rdi,rbx
  01051:    	mov    rsi,r12
  01054: 57 	movabs rax,0x55573c95cc80
  0105e:    	call   rax
  01060:    	movq   xmm2,QWORD PTR [rsp]
  01065:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0106b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01071:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01077:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0107d: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01084: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0108b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01092:    	add    rsp,0x40
  01096: 57 	movabs r13,0x55573cf90500
  010a0:    	test   rax,rax
  010a3:    	je     0xfffeb30b
  010a9: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %13 = %14.call z()                   [Vec]
:00090 
  010b0: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  010b7: 00 	test   rdi,0x7
  010be:    	jne    0x373cb
  010c4:    	cmp    DWORD PTR [rdi+0x4],0x25
  010c8:    	jne    0x373cb
  010ce: 26 	cmp    DWORD PTR [rip+0xfffffffffffecc0f],0x26        # 0xfffedce4
  010d5:    	jne    0x373cb
  010db:    	mov    esi,DWORD PTR [rip+0x12fb]        # 0x23dc
  010e1:    	cmp    esi,0xffffffff
  010e4:    	je     0x3742b
  010ea:    	cmp    WORD PTR [rdi+0x2],0x3
  010ef:    	jne    0x1108
  010f5:    	cmp    esi,0x6
  010f8:    	jge    0x1108
  010fe:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01103:    	jmp    0x1174
  01108:    	sub    rsp,0x40
  0110c:    	movq   QWORD PTR [rsp],xmm2
  01111:    	movq   QWORD PTR [rsp+0x8],xmm4
  01117:    	movq   QWORD PTR [rsp+0x10],xmm5
  0111d:    	movq   QWORD PTR [rsp+0x18],xmm7
  01123: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0112a: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01131: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01138: 57 	movabs rax,0x55573c900b50
  01142:    	call   rax
  01144:    	movq   xmm2,QWORD PTR [rsp]
  01149:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0114f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01155:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0115b: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01162: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01169: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01170:    	add    rsp,0x40
  01174: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 %13 = %4 * %13                       [Float][Float]
  0117b: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01182: 00 	test   rdi,0x1
  01189:    	jne    0x374b4
  0118f: 00 	test   rdi,0x2
  01196:    	je     0x11d2
  0119c:    	xorps  xmm3,xmm3
  0119f: 00 	movabs rax,0x8000000000000002
  011a9:    	cmp    rdi,rax
  011ac:    	je     0x11e4
  011b2:    	mov    rax,rdi
  011b5:    	sar    rax,0x3f
  011b9:    	add    rax,0x2
  011bd:    	and    rdi,0xfffffffffffffffc
  011c1:    	or     rdi,rax
  011c4:    	rol    rdi,0x3d
  011c8:    	movq   xmm3,rdi
  011cd:    	jmp    0x11e4
  011d2:    	call   0xfffeb344
  011d7:    	test   rax,rax
  011da:    	je     0x374b4
  011e0:    	movq   xmm3,xmm0
  011e4:    	mulsd  xmm3,xmm7
:00093 %15 = dynvar(2, %2)
  011e8:    	mov    rax,QWORD PTR [rbp-0x10]
  011ec:    	mov    rax,QWORD PTR [rax]
  011ef:    	mov    rax,QWORD PTR [rax-0x28]
  011f3: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00094 %16 = 1: i32
  011fa: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00095 %15 = %15.[%16]
  01205:    	sub    rsp,0x40
  01209:    	movq   QWORD PTR [rsp],xmm2
  0120e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01214:    	movq   QWORD PTR [rsp+0x10],xmm4
  0121a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01220:    	movq   QWORD PTR [rsp+0x20],xmm7
  01226: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0122d: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01234: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0123b: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01242: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01249:    	mov    rdi,rbx
  0124c:    	mov    rsi,r12
  0124f: 57 	movabs rax,0x55573c95cc80
  01259:    	call   rax
  0125b:    	movq   xmm2,QWORD PTR [rsp]
  01260:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01266:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0126c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01272:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01278: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0127f: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01286: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0128d:    	add    rsp,0x40
  01291: 57 	movabs r13,0x55573cf90570
  0129b:    	test   rax,rax
  0129e:    	je     0xfffeb30b
  012a4: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00096 %14 = %15.call z()                   [Vec]
:00097 
  012ab: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  012b2: 00 	test   rdi,0x7
  012b9:    	jne    0x37514
  012bf:    	cmp    DWORD PTR [rdi+0x4],0x25
  012c3:    	jne    0x37514
  012c9: 26 	cmp    DWORD PTR [rip+0xfffffffffffeca14],0x26        # 0xfffedce4
  012d0:    	jne    0x37514
  012d6:    	mov    esi,DWORD PTR [rip+0x1108]        # 0x23e4
  012dc:    	cmp    esi,0xffffffff
  012df:    	je     0x37584
  012e5:    	cmp    WORD PTR [rdi+0x2],0x3
  012ea:    	jne    0x1303
  012f0:    	cmp    esi,0x6
  012f3:    	jge    0x1303
  012f9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  012fe:    	jmp    0x137b
  01303:    	sub    rsp,0x40
  01307:    	movq   QWORD PTR [rsp],xmm2
  0130c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01312:    	movq   QWORD PTR [rsp+0x10],xmm4
  01318:    	movq   QWORD PTR [rsp+0x18],xmm5
  0131e:    	movq   QWORD PTR [rsp+0x20],xmm7
  01324: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0132b: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01332: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01339: 57 	movabs rax,0x55573c900b50
  01343:    	call   rax
  01345:    	movq   xmm2,QWORD PTR [rsp]
  0134a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01350:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01356:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0135c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01362: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01369: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01370: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01377:    	add    rsp,0x40
  0137b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00099 %14 = %5 * %14                       [Float][Float]
  01382: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01389: 00 	test   rdi,0x1
  01390:    	jne    0x37619
  01396: 00 	test   rdi,0x2
  0139d:    	je     0x13d9
  013a3:    	xorps  xmm6,xmm6
  013a6: 00 	movabs rax,0x8000000000000002
  013b0:    	cmp    rdi,rax
  013b3:    	je     0x13eb
  013b9:    	mov    rax,rdi
  013bc:    	sar    rax,0x3f
  013c0:    	add    rax,0x2
  013c4:    	and    rdi,0xfffffffffffffffc
  013c8:    	or     rdi,rax
  013cb:    	rol    rdi,0x3d
  013cf:    	movq   xmm6,rdi
  013d4:    	jmp    0x13eb
  013d9:    	call   0xfffeb344
  013de:    	test   rax,rax
  013e1:    	je     0x37619
  013e7:    	movq   xmm6,xmm0
  013eb:    	mulsd  xmm6,xmm8
:00100 %13 = %13 + %14                      [Float][Float]
  013f0:    	addsd  xmm3,xmm6
:00101 %15 = dynvar(2, %2)
  013f4:    	mov    rax,QWORD PTR [rbp-0x10]
  013f8:    	mov    rax,QWORD PTR [rax]
  013fb:    	mov    rax,QWORD PTR [rax-0x28]
  013ff: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00102 %16 = 2: i32
  01406: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00103 %15 = %15.[%16]
  01411:    	sub    rsp,0x50
  01415:    	movq   QWORD PTR [rsp],xmm2
  0141a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01420:    	movq   QWORD PTR [rsp+0x10],xmm4
  01426:    	movq   QWORD PTR [rsp+0x18],xmm5
  0142c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01432:    	movq   QWORD PTR [rsp+0x28],xmm7
  01438: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0143f: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01446: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0144d: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01454: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0145b:    	mov    rdi,rbx
  0145e:    	mov    rsi,r12
  01461: 57 	movabs rax,0x55573c95cc80
  0146b:    	call   rax
  0146d:    	movq   xmm2,QWORD PTR [rsp]
  01472:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01478:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0147e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01484:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0148a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01490: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01497: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0149e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  014a5:    	add    rsp,0x50
  014a9: 57 	movabs r13,0x55573cf905f0
  014b3:    	test   rax,rax
  014b6:    	je     0xfffeb30b
  014bc: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00104 %14 = %15.call z()                   [Vec]
:00105 
  014c3: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  014ca: 00 	test   rdi,0x7
  014d1:    	jne    0x37689
  014d7:    	cmp    DWORD PTR [rdi+0x4],0x25
  014db:    	jne    0x37689
  014e1: 26 	cmp    DWORD PTR [rip+0xfffffffffffec7fc],0x26        # 0xfffedce4
  014e8:    	jne    0x37689
  014ee:    	mov    esi,DWORD PTR [rip+0xef8]        # 0x23ec
  014f4:    	cmp    esi,0xffffffff
  014f7:    	je     0x376f9
  014fd:    	cmp    WORD PTR [rdi+0x2],0x3
  01502:    	jne    0x151b
  01508:    	cmp    esi,0x6
  0150b:    	jge    0x151b
  01511:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01516:    	jmp    0x1593
  0151b:    	sub    rsp,0x40
  0151f:    	movq   QWORD PTR [rsp],xmm2
  01524:    	movq   QWORD PTR [rsp+0x8],xmm3
  0152a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01530:    	movq   QWORD PTR [rsp+0x18],xmm5
  01536:    	movq   QWORD PTR [rsp+0x20],xmm7
  0153c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01543: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0154a: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01551: 57 	movabs rax,0x55573c900b50
  0155b:    	call   rax
  0155d:    	movq   xmm2,QWORD PTR [rsp]
  01562:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01568:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0156e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01574:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0157a: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01581: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01588: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0158f:    	add    rsp,0x40
  01593: ff 	mov    QWORD PTR [rbp-0x98],rax
:00107 %14 = %6 * %14                       [Float][Float]
  0159a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  015a1: 00 	test   rdi,0x1
  015a8:    	jne    0x3778e
  015ae: 00 	test   rdi,0x2
  015b5:    	je     0x15f1
  015bb:    	xorps  xmm6,xmm6
  015be: 00 	movabs rax,0x8000000000000002
  015c8:    	cmp    rdi,rax
  015cb:    	je     0x1603
  015d1:    	mov    rax,rdi
  015d4:    	sar    rax,0x3f
  015d8:    	add    rax,0x2
  015dc:    	and    rdi,0xfffffffffffffffc
  015e0:    	or     rdi,rax
  015e3:    	rol    rdi,0x3d
  015e7:    	movq   xmm6,rdi
  015ec:    	jmp    0x1603
  015f1:    	call   0xfffeb344
  015f6:    	test   rax,rax
  015f9:    	je     0x3778e
  015ff:    	movq   xmm6,xmm0
  01603:    	mulsd  xmm6,xmm2
:00108 %9 = %13 + %14                       [Float][Float]
  01607:    	movq   xmm11,xmm3
  0160c:    	addsd  xmm11,xmm6
:00109 %13 = const[Vec]                     [Vec]
  01611: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffec6d8]        # 0xfffedcf0
  01618: 00 	cmp    rax,QWORD PTR [rip+0xde1]        # 0x2400
  0161f:    	jne    0x377fe
  01625: 00 	mov    rax,QWORD PTR [rip+0xdc4]        # 0x23f0
  0162c: ff 	mov    QWORD PTR [rbp-0x90],rax
:00110 %14 = %7
:00111 %15 = %8
:00112 %16 = %9
:00113 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
:00114 
  01633:    	movq   xmm0,xmm9
  01638:    	call   0xfffeb437
  0163d: ff 	mov    QWORD PTR [rbp-0x98],rax
  01644:    	movq   xmm0,xmm10
  01649:    	call   0xfffeb437
  0164e: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01655:    	movq   xmm0,xmm11
  0165a:    	call   0xfffeb437
  0165f: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01666: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0166d: 00 	test   rdi,0x7
  01674:    	jne    0x378be
  0167a:    	cmp    DWORD PTR [rdi+0x4],0x26
  0167e:    	jne    0x378be
  01684: 26 	cmp    DWORD PTR [rip+0xfffffffffffec659],0x26        # 0xfffedce4
  0168b:    	jne    0x378be
  01691: 00 	mov    r9,0x0
  01698:    	sub    rsp,0x40
  0169c:    	movq   QWORD PTR [rsp],xmm2
  016a1:    	movq   QWORD PTR [rsp+0x8],xmm4
  016a7:    	movq   QWORD PTR [rsp+0x10],xmm5
  016ad:    	movq   QWORD PTR [rsp+0x18],xmm7
  016b3: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  016ba: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  016c1: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  016c8: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  016cf:    	mov    rdx,rdi
  016d2:    	mov    rax,QWORD PTR [rbx]
  016d5:    	lea    rdi,[rsp-0x18]
  016da:    	mov    QWORD PTR [rdi],rax
  016dd:    	mov    QWORD PTR [rbx],rdi
  016e0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016e9:    	mov    QWORD PTR [rsp-0x38],rcx
  016ee: ff 	lea    rcx,[rbp-0x98]
  016f5: 00 	mov    r8,0x3
  016fc:    	call   0x3792c
  01701:    	lea    rdi,[rbp-0x8]
  01705:    	mov    QWORD PTR [rbx],rdi
  01708:    	movq   xmm2,QWORD PTR [rsp]
  0170d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01713:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01719:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0171f: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01726: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0172d: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01734: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0173b:    	add    rsp,0x40
  0173f: 57 	movabs r13,0x55573cf906a0
  01749:    	test   rax,rax
  0174c:    	je     0xfffeb30b
  01752:    	mov    QWORD PTR [rbp-0x78],rax
:00116 %13 = const[Ray]                     [Ray]
  01756: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffec593]        # 0xfffedcf0
  0175d: 00 	cmp    rax,QWORD PTR [rip+0xcbc]        # 0x2420
  01764:    	jne    0x3795e
  0176a: 00 	mov    rax,QWORD PTR [rip+0xc9f]        # 0x2410
  01771: ff 	mov    QWORD PTR [rbp-0x90],rax
:00117 %14 = dynvar(2, %7)
  01778:    	mov    rax,QWORD PTR [rbp-0x10]
  0177c:    	mov    rax,QWORD PTR [rax]
  0177f:    	mov    rax,QWORD PTR [rax-0x50]
  01783: ff 	mov    QWORD PTR [rbp-0x98],rax
:00118 %15 = %10
  0178a:    	mov    rax,QWORD PTR [rbp-0x78]
  0178e: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00119 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
:00120 
  01795: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0179c: 00 	test   rdi,0x7
  017a3:    	jne    0x37a12
  017a9:    	cmp    DWORD PTR [rdi+0x4],0x2c
  017ad:    	jne    0x37a12
  017b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffec52a],0x26        # 0xfffedce4
  017ba:    	jne    0x37a12
  017c0: 00 	mov    r9,0x0
  017c7:    	sub    rsp,0x40
  017cb:    	movq   QWORD PTR [rsp],xmm2
  017d0:    	movq   QWORD PTR [rsp+0x8],xmm4
  017d6:    	movq   QWORD PTR [rsp+0x10],xmm5
  017dc:    	movq   QWORD PTR [rsp+0x18],xmm7
  017e2: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  017e9: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  017f0: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  017f7: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  017fe:    	mov    rdx,rdi
  01801:    	mov    rax,QWORD PTR [rbx]
  01804:    	lea    rdi,[rsp-0x18]
  01809:    	mov    QWORD PTR [rdi],rax
  0180c:    	mov    QWORD PTR [rbx],rdi
  0180f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01818:    	mov    QWORD PTR [rsp-0x38],rcx
  0181d: ff 	lea    rcx,[rbp-0x98]
  01824: 00 	mov    r8,0x2
  0182b:    	call   0x37a80
  01830:    	lea    rdi,[rbp-0x8]
  01834:    	mov    QWORD PTR [rbx],rdi
  01837:    	movq   xmm2,QWORD PTR [rsp]
  0183c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01842:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01848:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0184e: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01855: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0185c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01863: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0186a:    	add    rsp,0x40
  0186e: 57 	movabs r13,0x55573cf90700
  01878:    	test   rax,rax
  0187b:    	je     0xfffeb30b
  01881:    	mov    QWORD PTR [rbp-0x80],rax
:00122 %13 = const[Isect]                   [Isect]
  01885: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffec464]        # 0xfffedcf0
  0188c: 00 	cmp    rax,QWORD PTR [rip+0xbad]        # 0x2440
  01893:    	jne    0x37ab2
  01899: 00 	mov    rax,QWORD PTR [rip+0xb90]        # 0x2430
  018a0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00123 %12 = %13.call new()                 [#<Class:Isect>]
:00124 
  018a7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  018ae: 00 	test   rdi,0x7
  018b5:    	jne    0x37b66
  018bb:    	cmp    DWORD PTR [rdi+0x4],0x2e
  018bf:    	jne    0x37b66
  018c5: 26 	cmp    DWORD PTR [rip+0xfffffffffffec418],0x26        # 0xfffedce4
  018cc:    	jne    0x37b66
  018d2: 00 	mov    r9,0x0
  018d9:    	sub    rsp,0x40
  018dd:    	movq   QWORD PTR [rsp],xmm2
  018e2:    	movq   QWORD PTR [rsp+0x8],xmm4
  018e8:    	movq   QWORD PTR [rsp+0x10],xmm5
  018ee:    	movq   QWORD PTR [rsp+0x18],xmm7
  018f4: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  018fb: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01902: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01909: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01910:    	mov    rdx,rdi
  01913:    	mov    rax,QWORD PTR [rbx]
  01916:    	lea    rdi,[rsp-0x18]
  0191b:    	mov    QWORD PTR [rdi],rax
  0191e:    	mov    QWORD PTR [rbx],rdi
  01921: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0192a:    	mov    QWORD PTR [rsp-0x38],rcx
  0192f: ff 	lea    rcx,[rbp-0x98]
  01936: 00 	mov    r8,0x0
  0193d:    	call   0x37bd4
  01942:    	lea    rdi,[rbp-0x8]
  01946:    	mov    QWORD PTR [rbx],rdi
  01949:    	movq   xmm2,QWORD PTR [rsp]
  0194e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01954:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0195a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01960: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01967: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0196e: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01975: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0197c:    	add    rsp,0x40
  01980: 57 	movabs r13,0x55573cf90740
  0198a:    	test   rax,rax
  0198d:    	je     0xfffeb30b
  01993: ff 	mov    QWORD PTR [rbp-0x88],rax
:00126 %13 = @spheres: Scene[IvarId(0)]
  0199a:    	mov    rdi,QWORD PTR [rbp-0x28]
  0199e:    	cmp    WORD PTR [rdi+0x2],0x3
  019a3:    	jne    0x37c06
  019a9:    	mov    rax,QWORD PTR [rdi+0x10]
  019ad: ff 	mov    QWORD PTR [rbp-0x90],rax
:00127 %14 = 0: i32
  019b4: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00128 %13 = %13.[%14]
  019bf:    	sub    rsp,0x40
  019c3:    	movq   QWORD PTR [rsp],xmm2
  019c8:    	movq   QWORD PTR [rsp+0x8],xmm4
  019ce:    	movq   QWORD PTR [rsp+0x10],xmm5
  019d4:    	movq   QWORD PTR [rsp+0x18],xmm7
  019da: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  019e1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  019e8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  019ef: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  019f6: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  019fd: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01a04:    	mov    rdi,rbx
  01a07:    	mov    rsi,r12
  01a0a: 57 	movabs rax,0x55573c95cc80
  01a14:    	call   rax
  01a16:    	movq   xmm2,QWORD PTR [rsp]
  01a1b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a21:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a27:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a2d: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a34: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a3b: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a42: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a49:    	add    rsp,0x40
  01a4d: 57 	movabs r13,0x55573cf90780
  01a57:    	test   rax,rax
  01a5a:    	je     0xfffeb30b
  01a60: ff 	mov    QWORD PTR [rbp-0x90],rax
:00129 %14 = %11
  01a67:    	mov    rax,QWORD PTR [rbp-0x80]
  01a6b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00130 %15 = %12
  01a72: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01a79: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00131 _ = %13.call intersect(%14; 2)       [Sphere]
:00132 
  01a80: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01a87: 00 	test   rdi,0x7
  01a8e:    	jne    0x37c8a
  01a94:    	cmp    DWORD PTR [rdi+0x4],0x27
  01a98:    	jne    0x37c8a
  01a9e: 26 	cmp    DWORD PTR [rip+0xfffffffffffec23f],0x26        # 0xfffedce4
  01aa5:    	jne    0x37c8a
  01aab:    	sub    rsp,0x40
  01aaf:    	movq   QWORD PTR [rsp],xmm2
  01ab4:    	movq   QWORD PTR [rsp+0x8],xmm4
  01aba:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ac0:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ac6: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01acd: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ad4: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01adb: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ae2:    	mov    rax,QWORD PTR [rbx]
  01ae5:    	lea    rdi,[rsp-0x18]
  01aea:    	mov    QWORD PTR [rdi],rax
  01aed:    	mov    QWORD PTR [rbx],rdi
  01af0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01af9:    	mov    QWORD PTR [rsp-0x38],rcx
  01afe: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01b05:    	mov    QWORD PTR [rsp-0x38],rax
  01b0a: 00 	mov    rdi,0x2
  01b11: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01b18:    	mov    QWORD PTR [rsp-0x40],rax
  01b1d: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01b24:    	mov    QWORD PTR [rsp-0x48],rax
  01b29: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b32: 10 	movabs rax,0x100100000003f
  01b3c:    	mov    QWORD PTR [rsp-0x28],rax
  01b41: 57 	movabs r13,0x55573cf976a0
  01b4b:    	call   0xfffee8b1
  01b50:    	lea    rdi,[rbp-0x8]
  01b54:    	mov    QWORD PTR [rbx],rdi
  01b57:    	movq   xmm2,QWORD PTR [rsp]
  01b5c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b62:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01b68:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b6e: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01b75: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01b7c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01b83: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01b8a:    	add    rsp,0x40
  01b8e: 57 	movabs r13,0x55573cf907c0
  01b98:    	test   rax,rax
  01b9b:    	je     0xfffeb30b
:00134 %13 = @spheres: Scene[IvarId(0)]
  01ba1:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ba5:    	cmp    WORD PTR [rdi+0x2],0x3
  01baa:    	jne    0x37cf8
  01bb0:    	mov    rax,QWORD PTR [rdi+0x10]
  01bb4: ff 	mov    QWORD PTR [rbp-0x90],rax
:00135 %14 = 1: i32
  01bbb: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00136 %13 = %13.[%14]
  01bc6:    	sub    rsp,0x40
  01bca:    	movq   QWORD PTR [rsp],xmm2
  01bcf:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bd5:    	movq   QWORD PTR [rsp+0x10],xmm5
  01bdb:    	movq   QWORD PTR [rsp+0x18],xmm7
  01be1: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01be8: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01bef: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01bf6: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01bfd: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01c04: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01c0b:    	mov    rdi,rbx
  01c0e:    	mov    rsi,r12
  01c11: 57 	movabs rax,0x55573c95cc80
  01c1b:    	call   rax
  01c1d:    	movq   xmm2,QWORD PTR [rsp]
  01c22:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c28:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c2e:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c34: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c3b: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c42: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c49: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c50:    	add    rsp,0x40
  01c54: 57 	movabs r13,0x55573cf90800
  01c5e:    	test   rax,rax
  01c61:    	je     0xfffeb30b
  01c67: ff 	mov    QWORD PTR [rbp-0x90],rax
:00137 %14 = %11
  01c6e:    	mov    rax,QWORD PTR [rbp-0x80]
  01c72: ff 	mov    QWORD PTR [rbp-0x98],rax
:00138 %15 = %12
  01c79: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01c80: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00139 _ = %13.call intersect(%14; 2)       [Sphere]
:00140 
  01c87: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01c8e: 00 	test   rdi,0x7
  01c95:    	jne    0x37d7c
  01c9b:    	cmp    DWORD PTR [rdi+0x4],0x27
  01c9f:    	jne    0x37d7c
  01ca5: 26 	cmp    DWORD PTR [rip+0xfffffffffffec038],0x26        # 0xfffedce4
  01cac:    	jne    0x37d7c
  01cb2:    	sub    rsp,0x40
  01cb6:    	movq   QWORD PTR [rsp],xmm2
  01cbb:    	movq   QWORD PTR [rsp+0x8],xmm4
  01cc1:    	movq   QWORD PTR [rsp+0x10],xmm5
  01cc7:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ccd: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01cd4: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01cdb: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ce2: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ce9:    	mov    rax,QWORD PTR [rbx]
  01cec:    	lea    rdi,[rsp-0x18]
  01cf1:    	mov    QWORD PTR [rdi],rax
  01cf4:    	mov    QWORD PTR [rbx],rdi
  01cf7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01d00:    	mov    QWORD PTR [rsp-0x38],rcx
  01d05: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01d0c:    	mov    QWORD PTR [rsp-0x38],rax
  01d11: 00 	mov    rdi,0x2
  01d18: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01d1f:    	mov    QWORD PTR [rsp-0x40],rax
  01d24: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01d2b:    	mov    QWORD PTR [rsp-0x48],rax
  01d30: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01d39: 10 	movabs rax,0x100100000003f
  01d43:    	mov    QWORD PTR [rsp-0x28],rax
  01d48: 57 	movabs r13,0x55573cf976a0
  01d52:    	call   0xfffee8b1
  01d57:    	lea    rdi,[rbp-0x8]
  01d5b:    	mov    QWORD PTR [rbx],rdi
  01d5e:    	movq   xmm2,QWORD PTR [rsp]
  01d63:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d69:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01d6f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01d75: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01d7c: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01d83: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01d8a: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01d91:    	add    rsp,0x40
  01d95: 57 	movabs r13,0x55573cf90840
  01d9f:    	test   rax,rax
  01da2:    	je     0xfffeb30b
:00142 %13 = @spheres: Scene[IvarId(0)]
  01da8:    	mov    rdi,QWORD PTR [rbp-0x28]
  01dac:    	cmp    WORD PTR [rdi+0x2],0x3
  01db1:    	jne    0x37dea
  01db7:    	mov    rax,QWORD PTR [rdi+0x10]
  01dbb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00143 %14 = 2: i32
  01dc2: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00144 %13 = %13.[%14]
  01dcd:    	sub    rsp,0x40
  01dd1:    	movq   QWORD PTR [rsp],xmm2
  01dd6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ddc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01de2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01de8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01def: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01df6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01dfd: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01e04: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01e0b: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01e12:    	mov    rdi,rbx
  01e15:    	mov    rsi,r12
  01e18: 57 	movabs rax,0x55573c95cc80
  01e22:    	call   rax
  01e24:    	movq   xmm2,QWORD PTR [rsp]
  01e29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e2f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e35:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e3b: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e42: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e49: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e50: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e57:    	add    rsp,0x40
  01e5b: 57 	movabs r13,0x55573cf90880
  01e65:    	test   rax,rax
  01e68:    	je     0xfffeb30b
  01e6e: ff 	mov    QWORD PTR [rbp-0x90],rax
:00145 %14 = %11
  01e75:    	mov    rax,QWORD PTR [rbp-0x80]
  01e79: ff 	mov    QWORD PTR [rbp-0x98],rax
:00146 %15 = %12
  01e80: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01e87: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00147 _ = %13.call intersect(%14; 2)       [Sphere]
:00148 
  01e8e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01e95: 00 	test   rdi,0x7
  01e9c:    	jne    0x37e6e
  01ea2:    	cmp    DWORD PTR [rdi+0x4],0x27
  01ea6:    	jne    0x37e6e
  01eac: 26 	cmp    DWORD PTR [rip+0xfffffffffffebe31],0x26        # 0xfffedce4
  01eb3:    	jne    0x37e6e
  01eb9:    	sub    rsp,0x40
  01ebd:    	movq   QWORD PTR [rsp],xmm2
  01ec2:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ec8:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ece:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ed4: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01edb: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ee2: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ee9: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ef0:    	mov    rax,QWORD PTR [rbx]
  01ef3:    	lea    rdi,[rsp-0x18]
  01ef8:    	mov    QWORD PTR [rdi],rax
  01efb:    	mov    QWORD PTR [rbx],rdi
  01efe: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01f07:    	mov    QWORD PTR [rsp-0x38],rcx
  01f0c: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01f13:    	mov    QWORD PTR [rsp-0x38],rax
  01f18: 00 	mov    rdi,0x2
  01f1f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01f26:    	mov    QWORD PTR [rsp-0x40],rax
  01f2b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01f32:    	mov    QWORD PTR [rsp-0x48],rax
  01f37: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01f40: 10 	movabs rax,0x100100000003f
  01f4a:    	mov    QWORD PTR [rsp-0x28],rax
  01f4f: 57 	movabs r13,0x55573cf976a0
  01f59:    	call   0xfffee8b1
  01f5e:    	lea    rdi,[rbp-0x8]
  01f62:    	mov    QWORD PTR [rbx],rdi
  01f65:    	movq   xmm2,QWORD PTR [rsp]
  01f6a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01f70:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01f76:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01f7c: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01f83: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01f8a: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01f91: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01f98:    	add    rsp,0x40
  01f9c: 57 	movabs r13,0x55573cf908c0
  01fa6:    	test   rax,rax
  01fa9:    	je     0xfffeb30b
:00150 %13 = @plane: Scene[IvarId(1)]
  01faf:    	mov    rdi,QWORD PTR [rbp-0x28]
  01fb3:    	cmp    WORD PTR [rdi+0x2],0x3
  01fb8:    	jne    0x37edc
  01fbe:    	mov    rax,QWORD PTR [rdi+0x18]
  01fc2: ff 	mov    QWORD PTR [rbp-0x90],rax
:00151 %14 = %11
  01fc9:    	mov    rax,QWORD PTR [rbp-0x80]
  01fcd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00152 %15 = %12
  01fd4: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01fdb: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00153 _ = %13.call intersect(%14; 2)       [Plane]
:00154 
  01fe2: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01fe9: 00 	test   rdi,0x7
  01ff0:    	jne    0x37f60
  01ff6:    	cmp    DWORD PTR [rdi+0x4],0x29
  01ffa:    	jne    0x37f60
  02000: 26 	cmp    DWORD PTR [rip+0xfffffffffffebcdd],0x26        # 0xfffedce4
  02007:    	jne    0x37f60
  0200d:    	sub    rsp,0x40
  02011:    	movq   QWORD PTR [rsp],xmm2
  02016:    	movq   QWORD PTR [rsp+0x8],xmm4
  0201c:    	movq   QWORD PTR [rsp+0x10],xmm5
  02022:    	movq   QWORD PTR [rsp+0x18],xmm7
  02028: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0202f: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02036: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0203d: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02044:    	mov    rax,QWORD PTR [rbx]
  02047:    	lea    rdi,[rsp-0x18]
  0204c:    	mov    QWORD PTR [rdi],rax
  0204f:    	mov    QWORD PTR [rbx],rdi
  02052: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0205b:    	mov    QWORD PTR [rsp-0x38],rcx
  02060: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02067:    	mov    QWORD PTR [rsp-0x38],rax
  0206c: 00 	mov    rdi,0x2
  02073: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0207a:    	mov    QWORD PTR [rsp-0x40],rax
  0207f: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02086:    	mov    QWORD PTR [rsp-0x48],rax
  0208b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02094: 0e 	movabs rax,0x1000e00000041
  0209e:    	mov    QWORD PTR [rsp-0x28],rax
  020a3: 57 	movabs r13,0x55573cf99540
  020ad:    	call   0xfffeee9e
  020b2:    	lea    rdi,[rbp-0x8]
  020b6:    	mov    QWORD PTR [rbx],rdi
  020b9:    	movq   xmm2,QWORD PTR [rsp]
  020be:    	movq   xmm4,QWORD PTR [rsp+0x8]
  020c4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  020ca:    	movq   xmm7,QWORD PTR [rsp+0x18]
  020d0: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  020d7: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  020de: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  020e5: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  020ec:    	add    rsp,0x40
  020f0: 57 	movabs r13,0x55573cf90920
  020fa:    	test   rax,rax
  020fd:    	je     0xfffeb30b
:00156 %13 = %12.call hit()                 [Isect]
:00157 
  02103: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0210a: 00 	test   rdi,0x7
  02111:    	jne    0x37fce
  02117:    	cmp    DWORD PTR [rdi+0x4],0x2d
  0211b:    	jne    0x37fce
  02121: 26 	cmp    DWORD PTR [rip+0xfffffffffffebbbc],0x26        # 0xfffedce4
  02128:    	jne    0x37fce
  0212e:    	mov    esi,DWORD PTR [rip+0x318]        # 0x244c
  02134:    	cmp    esi,0xffffffff
  02137:    	je     0x3803c
  0213d:    	cmp    WORD PTR [rdi+0x2],0x3
  02142:    	jne    0x215b
  02148:    	cmp    esi,0x6
  0214b:    	jge    0x215b
  02151:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  02156:    	jmp    0x21d5
  0215b:    	sub    rsp,0x40
  0215f:    	movq   QWORD PTR [rsp],xmm2
  02164:    	movq   QWORD PTR [rsp+0x8],xmm4
  0216a:    	movq   QWORD PTR [rsp+0x10],xmm5
  02170:    	movq   QWORD PTR [rsp+0x18],xmm7
  02176: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0217d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02184: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0218b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02192: 57 	movabs rax,0x55573c900b50
  0219c:    	call   rax
  0219e:    	movq   xmm2,QWORD PTR [rsp]
  021a3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  021a9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  021af:    	movq   xmm7,QWORD PTR [rsp+0x18]
  021b5: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  021bc: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  021c3: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  021ca: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  021d1:    	add    rsp,0x40
  021d5: ff 	mov    QWORD PTR [rbp-0x90],rax
:00159 condnotbr %13 =>:00165
  021dc: ff 	mov    rax,QWORD PTR [rbp-0x90]
  021e3:    	or     rax,0x10
  021e7:    	cmp    rax,0x14
  021eb:    	je     0x22a3
:00160 %13 = dynvar(2, %6)
  021f1:    	mov    rax,QWORD PTR [rbp-0x10]
  021f5:    	mov    rax,QWORD PTR [rax]
  021f8:    	mov    rax,QWORD PTR [rax-0x48]
  021fc: ff 	mov    QWORD PTR [rbp-0x90],rax
:00161 %14 = literal[1.0]
  02203: 00 	movq   xmm3,QWORD PTR [rip+0x245]        # 0x2450
:00162 %13 = %13 + %14                      [Float][Float]
  0220b: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02212: 00 	test   rdi,0x1
  02219:    	jne    0x380d3
  0221f: 00 	test   rdi,0x2
  02226:    	je     0x2262
  0222c:    	xorps  xmm6,xmm6
  0222f: 00 	movabs rax,0x8000000000000002
  02239:    	cmp    rdi,rax
  0223c:    	je     0x2274
  02242:    	mov    rax,rdi
  02245:    	sar    rax,0x3f
  02249:    	add    rax,0x2
  0224d:    	and    rdi,0xfffffffffffffffc
  02251:    	or     rdi,rax
  02254:    	rol    rdi,0x3d
  02258:    	movq   xmm6,rdi
  0225d:    	jmp    0x2274
  02262:    	call   0xfffeb344
  02267:    	test   rax,rax
  0226a:    	je     0x380d3
  02270:    	movq   xmm6,xmm0
  02274:    	addsd  xmm6,xmm3
:00163 dynvar(2, %6) = %13
  02278:    	movq   xmm0,xmm6
  0227c:    	call   0xfffeb437
  02281: ff 	mov    QWORD PTR [rbp-0x90],rax
  02288:    	mov    rax,QWORD PTR [rbp-0x10]
  0228c:    	mov    rax,QWORD PTR [rax]
  0228f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02296:    	mov    QWORD PTR [rax-0x48],rdi
:00164 ret %13
  0229a: ff 	mov    rax,QWORD PTR [rbp-0x90]
  022a1:    	leave  
  022a2:    	ret    
:00165 %13 = literal[0.0]
  022a3: 00 	movq   xmm3,QWORD PTR [rip+0x1b5]        # 0x2460
:00166 ret %13
  022ab:    	movq   xmm0,xmm3
  022af:    	call   0xfffeb437
  022b4: ff 	mov    QWORD PTR [rbp-0x90],rax
  022bb: ff 	mov    rax,QWORD PTR [rbp-0x90]
  022c2:    	leave  
  022c3:    	ret    
==> start whole compile: otherBasis FuncId(53) self_class:Scene start:[00000] bytecode:0x55573cfb0280
<== finished compile. elapsed:118.1µs
offset:Pos(94616) code: 7000 bytes  data: 316 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x35ce9
  00038:    	cmp    DWORD PTR [rdi+0x4],0x2f
  0003c:    	jne    0x35ce9
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeb837]        # 0xfffeb888
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1b10]        # 0x1b68
  00058:    	jne    0x35cf8
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1af3]        # 0x1b58
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
:00003 
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x35d3e
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x25
  0007e:    	jne    0x35d3e
  00084: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb7f1],0x26        # 0xfffeb87c
  0008b:    	jne    0x35d3e
  00091:    	mov    esi,DWORD PTR [rip+0x1add]        # 0x1b74
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x35d4d
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 57 	movabs rax,0x55573c900b50
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00005 %7 = %2.call y()                     [Vec]
:00006 
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x35d76
  000df:    	cmp    DWORD PTR [rdi+0x4],0x25
  000e3:    	jne    0x35d76
  000e9: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb78c],0x26        # 0xfffeb87c
  000f0:    	jne    0x35d76
  000f6:    	mov    esi,DWORD PTR [rip+0x1a80]        # 0x1b7c
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x35d85
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 57 	movabs rax,0x55573c900b50
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00008 %8 = %2.call z()                     [Vec]
:00009 
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x35dae
  00144:    	cmp    DWORD PTR [rdi+0x4],0x25
  00148:    	jne    0x35dae
  0014e: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb727],0x26        # 0xfffeb87c
  00155:    	jne    0x35dae
  0015b:    	mov    esi,DWORD PTR [rip+0x1a23]        # 0x1b84
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x35dbd
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 57 	movabs rax,0x55573c900b50
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
:00012 
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x35de6
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x26
  001ad:    	jne    0x35de6
  001b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb6c2],0x26        # 0xfffeb87c
  001ba:    	jne    0x35de6
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x35df5
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 57 	movabs r13,0x55573cfb0350
  00207:    	test   rax,rax
  0020a:    	je     0xfffe8ea3
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00014 %1.[%3] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 57 	movabs rax,0x55573c95cd90
  00230:    	call   rax
  00232: 57 	movabs r13,0x55573cfb0370
  0023c:    	test   rax,rax
  0023f:    	je     0xfffe8ea3
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeb634]        # 0xfffeb888
  00254: 00 	cmp    rax,QWORD PTR [rip+0x193d]        # 0x1b98
  0025b:    	jne    0x35e27
  00261: 00 	mov    rax,QWORD PTR [rip+0x1920]        # 0x1b88
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x1934]        # 0x1ba8
:00018 %7 = literal[0.0]
  00274: 00 	movq   xmm3,QWORD PTR [rip+0x193c]        # 0x1bb8
:00019 %8 = literal[0.0]
  0027c: 00 	movq   xmm4,QWORD PTR [rip+0x1944]        # 0x1bc8
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
:00021 
  00284:    	movq   xmm0,xmm2
  00288:    	call   0xfffe8fcf
  0028d:    	mov    QWORD PTR [rbp-0x58],rax
  00291:    	movq   xmm0,xmm3
  00295:    	call   0xfffe8fcf
  0029a:    	mov    QWORD PTR [rbp-0x60],rax
  0029e:    	movq   xmm0,xmm4
  002a2:    	call   0xfffe8fcf
  002a7:    	mov    QWORD PTR [rbp-0x68],rax
  002ab:    	mov    rdi,QWORD PTR [rbp-0x50]
  002af: 00 	test   rdi,0x7
  002b6:    	jne    0x35e6d
  002bc:    	cmp    DWORD PTR [rdi+0x4],0x26
  002c0:    	jne    0x35e6d
  002c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb5af],0x26        # 0xfffeb87c
  002cd:    	jne    0x35e6d
  002d3: 00 	mov    r9,0x0
  002da:    	sub    rsp,0x20
  002de:    	movq   QWORD PTR [rsp],xmm2
  002e3:    	movq   QWORD PTR [rsp+0x8],xmm3
  002e9:    	movq   QWORD PTR [rsp+0x10],xmm4
  002ef:    	mov    rdx,rdi
  002f2:    	mov    rax,QWORD PTR [rbx]
  002f5:    	lea    rdi,[rsp-0x18]
  002fa:    	mov    QWORD PTR [rdi],rax
  002fd:    	mov    QWORD PTR [rbx],rdi
  00300: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00309:    	mov    QWORD PTR [rsp-0x38],rcx
  0030e:    	lea    rcx,[rbp-0x58]
  00312: 00 	mov    r8,0x3
  00319:    	call   0x35e7c
  0031e:    	lea    rdi,[rbp-0x8]
  00322:    	mov    QWORD PTR [rbx],rdi
  00325:    	movq   xmm2,QWORD PTR [rsp]
  0032a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00330:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00336:    	add    rsp,0x20
  0033a: 57 	movabs r13,0x55573cfb03e0
  00344:    	test   rax,rax
  00347:    	je     0xfffe8ea3
  0034d:    	mov    QWORD PTR [rbp-0x48],rax
:00023 %1.[%3] = %4
  00351:    	sub    rsp,0x20
  00355:    	movq   QWORD PTR [rsp],xmm2
  0035a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00360:    	movq   QWORD PTR [rsp+0x10],xmm4
  00366:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0036e:    	mov    r8,QWORD PTR [rbp-0x48]
  00372:    	mov    rdi,rbx
  00375:    	mov    rsi,r12
  00378: 57 	movabs rax,0x55573c95cd90
  00382:    	call   rax
  00384:    	movq   xmm2,QWORD PTR [rsp]
  00389:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0038f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00395:    	add    rsp,0x20
  00399: 57 	movabs r13,0x55573cfb0400
  003a3:    	test   rax,rax
  003a6:    	je     0xfffe8ea3
:00024 %4 = %2.call x()                     [Vec]
:00025 
  003ac:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b0: 00 	test   rdi,0x7
  003b7:    	jne    0x35eae
  003bd:    	cmp    DWORD PTR [rdi+0x4],0x25
  003c1:    	jne    0x35eae
  003c7: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb4ae],0x26        # 0xfffeb87c
  003ce:    	jne    0x35eae
  003d4:    	mov    esi,DWORD PTR [rip+0x17fa]        # 0x1bd4
  003da:    	cmp    esi,0xffffffff
  003dd:    	je     0x35ebd
  003e3:    	cmp    WORD PTR [rdi+0x2],0x3
  003e8:    	jne    0x401
  003ee:    	cmp    esi,0x6
  003f1:    	jge    0x401
  003f7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003fc:    	jmp    0x437
  00401:    	sub    rsp,0x20
  00405:    	movq   QWORD PTR [rsp],xmm2
  0040a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00410:    	movq   QWORD PTR [rsp+0x10],xmm4
  00416: 57 	movabs rax,0x55573c900b50
  00420:    	call   rax
  00422:    	movq   xmm2,QWORD PTR [rsp]
  00427:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0042d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00433:    	add    rsp,0x20
  00437:    	mov    QWORD PTR [rbp-0x48],rax
:00027 %5 = literal[0.6]
  0043b: 00 	movq   xmm5,QWORD PTR [rip+0x1795]        # 0x1bd8
:00028 %3 = %4 < %5                         [Float][Float]
  00443:    	mov    rdi,QWORD PTR [rbp-0x48]
  00447: 00 	test   rdi,0x1
  0044e:    	jne    0x35f10
  00454: 00 	test   rdi,0x2
  0045b:    	je     0x497
  00461:    	xorps  xmm6,xmm6
  00464: 00 	movabs rax,0x8000000000000002
  0046e:    	cmp    rdi,rax
  00471:    	je     0x4a9
  00477:    	mov    rax,rdi
  0047a:    	sar    rax,0x3f
  0047e:    	add    rax,0x2
  00482:    	and    rdi,0xfffffffffffffffc
  00486:    	or     rdi,rax
  00489:    	rol    rdi,0x3d
  0048d:    	movq   xmm6,rdi
  00492:    	jmp    0x4a9
  00497:    	call   0xfffe8edc
  0049c:    	test   rax,rax
  0049f:    	je     0x35f10
  004a5:    	movq   xmm6,xmm0
  004a9:    	xor    rax,rax
  004ac:    	ucomisd xmm6,xmm5
  004b0:    	setb   al
  004b4:    	shl    rax,0x3
  004b8:    	or     rax,0x14
  004bc:    	mov    QWORD PTR [rbp-0x40],rax
:00029 condnotbr %3 =>:00035
  004c0:    	mov    rax,QWORD PTR [rbp-0x40]
  004c4:    	or     rax,0x10
  004c8:    	cmp    rax,0x14
  004cc:    	je     0x35fc3
:00030 %4 = %2.call x()                     [Vec]
:00031 
  004d2:    	mov    rdi,QWORD PTR [rbp-0x38]
  004d6: 00 	test   rdi,0x7
  004dd:    	jne    0x35f2c
  004e3:    	cmp    DWORD PTR [rdi+0x4],0x25
  004e7:    	jne    0x35f2c
  004ed: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb388],0x26        # 0xfffeb87c
  004f4:    	jne    0x35f2c
  004fa:    	mov    esi,DWORD PTR [rip+0x16e4]        # 0x1be4
  00500:    	cmp    esi,0xffffffff
  00503:    	je     0x35f48
  00509:    	cmp    WORD PTR [rdi+0x2],0x3
  0050e:    	jne    0x527
  00514:    	cmp    esi,0x6
  00517:    	jge    0x527
  0051d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00522:    	jmp    0x569
  00527:    	sub    rsp,0x20
  0052b:    	movq   QWORD PTR [rsp],xmm2
  00530:    	movq   QWORD PTR [rsp+0x8],xmm3
  00536:    	movq   QWORD PTR [rsp+0x10],xmm4
  0053c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00542: 57 	movabs rax,0x55573c900b50
  0054c:    	call   rax
  0054e:    	movq   xmm2,QWORD PTR [rsp]
  00553:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00559:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0055f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00565:    	add    rsp,0x20
  00569:    	mov    QWORD PTR [rbp-0x48],rax
:00033 %5 = literal[-0.6]
  0056d: 00 	movq   xmm5,QWORD PTR [rip+0x1673]        # 0x1be8
:00034 %3 = %4 > %5                         [Float][Float]
  00575:    	mov    rdi,QWORD PTR [rbp-0x48]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x35fa7
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffe8edc
  005ce:    	test   rax,rax
  005d1:    	je     0x35fa7
  005d7:    	movq   xmm6,xmm0
  005db:    	xor    rax,rax
  005de:    	ucomisd xmm6,xmm5
  005e2:    	seta   al
  005e6:    	shl    rax,0x3
  005ea:    	or     rax,0x14
  005ee:    	mov    QWORD PTR [rbp-0x40],rax
  005f2:    	jmp    0x35fe9
:00035 condnotbr %3 =>:00043
  005f7:    	mov    rax,QWORD PTR [rbp-0x40]
  005fb:    	or     rax,0x10
  005ff:    	cmp    rax,0x14
  00603:    	je     0x75c
:00036 %3 = 1: i32
  00609: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]
  00611:    	sub    rsp,0x30
  00615:    	movq   QWORD PTR [rsp],xmm2
  0061a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00620:    	movq   QWORD PTR [rsp+0x10],xmm4
  00626:    	movq   QWORD PTR [rsp+0x18],xmm5
  0062c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00632:    	mov    rdx,QWORD PTR [rbp-0x30]
  00636:    	mov    rcx,QWORD PTR [rbp-0x40]
  0063a:    	mov    rdi,rbx
  0063d:    	mov    rsi,r12
  00640: 57 	movabs rax,0x55573c95cc80
  0064a:    	call   rax
  0064c:    	movq   xmm2,QWORD PTR [rsp]
  00651:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00657:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0065d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00663:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00669:    	add    rsp,0x30
  0066d: 57 	movabs r13,0x55573cfb04e0
  00677:    	test   rax,rax
  0067a:    	je     0xfffe8ea3
  00680:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  00684: 00 	movq   xmm6,QWORD PTR [rip+0x156c]        # 0x1bf8
:00039 _ = %3.call x=(%4; 1)                [Vec]
:00040 
  0068c:    	movq   xmm0,xmm6
  00690:    	call   0xfffe8fcf
  00695:    	mov    QWORD PTR [rbp-0x48],rax
  00699:    	mov    rdi,QWORD PTR [rbp-0x40]
  0069d: 00 	test   rdi,0x7
  006a4:    	jne    0x3600f
  006aa:    	cmp    DWORD PTR [rdi+0x4],0x25
  006ae:    	jne    0x3600f
  006b4: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb1c1],0x26        # 0xfffeb87c
  006bb:    	jne    0x3600f
  006c1:    	mov    esi,DWORD PTR [rip+0x153d]        # 0x1c04
  006c7:    	cmp    esi,0xffffffff
  006ca:    	je     0x3602b
  006d0:    	cmp    WORD PTR [rdi+0x2],0x3
  006d5:    	jne    0x6f2
  006db:    	cmp    esi,0x6
  006de:    	jge    0x6f2
  006e4:    	mov    rax,QWORD PTR [rbp-0x48]
  006e8:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006ed:    	jmp    0x757
  006f2:    	sub    rsp,0x30
  006f6:    	movq   QWORD PTR [rsp],xmm2
  006fb:    	movq   QWORD PTR [rsp+0x8],xmm3
  00701:    	movq   QWORD PTR [rsp+0x10],xmm4
  00707:    	movq   QWORD PTR [rsp+0x18],xmm5
  0070d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00713:    	mov    rdx,QWORD PTR [rbp-0x48]
  00717: 57 	movabs rax,0x55573c900dd0
  00721:    	call   rax
  00723:    	movq   xmm2,QWORD PTR [rsp]
  00728:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0072e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00734:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0073a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00740:    	add    rsp,0x30
  00744: 57 	movabs r13,0x55573cfb0510
  0074e:    	test   rax,rax
  00751:    	je     0xfffe8ea3
:00042 br =>:00087
  00757:    	jmp    0x3644e
:00043 %4 = %2.call y()                     [Vec]
:00044 
  0075c:    	mov    rdi,QWORD PTR [rbp-0x38]
  00760: 00 	test   rdi,0x7
  00767:    	jne    0x3609d
  0076d:    	cmp    DWORD PTR [rdi+0x4],0x25
  00771:    	jne    0x3609d
  00777: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb0fe],0x26        # 0xfffeb87c
  0077e:    	jne    0x3609d
  00784:    	mov    esi,DWORD PTR [rip+0x1482]        # 0x1c0c
  0078a:    	cmp    esi,0xffffffff
  0078d:    	je     0x360b9
  00793:    	cmp    WORD PTR [rdi+0x2],0x3
  00798:    	jne    0x7b1
  0079e:    	cmp    esi,0x6
  007a1:    	jge    0x7b1
  007a7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007ac:    	jmp    0x7f3
  007b1:    	sub    rsp,0x20
  007b5:    	movq   QWORD PTR [rsp],xmm2
  007ba:    	movq   QWORD PTR [rsp+0x8],xmm3
  007c0:    	movq   QWORD PTR [rsp+0x10],xmm4
  007c6:    	movq   QWORD PTR [rsp+0x18],xmm5
  007cc: 57 	movabs rax,0x55573c900b50
  007d6:    	call   rax
  007d8:    	movq   xmm2,QWORD PTR [rsp]
  007dd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007e3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007e9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007ef:    	add    rsp,0x20
  007f3:    	mov    QWORD PTR [rbp-0x48],rax
:00046 %5 = literal[0.6]
  007f7: 00 	movq   xmm5,QWORD PTR [rip+0x1419]        # 0x1c18
:00047 %3 = %4 < %5                         [Float][Float]
  007ff:    	mov    rdi,QWORD PTR [rbp-0x48]
  00803: 00 	test   rdi,0x1
  0080a:    	jne    0x36118
  00810: 00 	test   rdi,0x2
  00817:    	je     0x853
  0081d:    	xorps  xmm6,xmm6
  00820: 00 	movabs rax,0x8000000000000002
  0082a:    	cmp    rdi,rax
  0082d:    	je     0x865
  00833:    	mov    rax,rdi
  00836:    	sar    rax,0x3f
  0083a:    	add    rax,0x2
  0083e:    	and    rdi,0xfffffffffffffffc
  00842:    	or     rdi,rax
  00845:    	rol    rdi,0x3d
  00849:    	movq   xmm6,rdi
  0084e:    	jmp    0x865
  00853:    	call   0xfffe8edc
  00858:    	test   rax,rax
  0085b:    	je     0x36118
  00861:    	movq   xmm6,xmm0
  00865:    	xor    rax,rax
  00868:    	ucomisd xmm6,xmm5
  0086c:    	setb   al
  00870:    	shl    rax,0x3
  00874:    	or     rax,0x14
  00878:    	mov    QWORD PTR [rbp-0x40],rax
:00048 condnotbr %3 =>:00054
  0087c:    	mov    rax,QWORD PTR [rbp-0x40]
  00880:    	or     rax,0x10
  00884:    	cmp    rax,0x14
  00888:    	je     0x3616c
:00049 %4 = %2.call y()                     [<INVALID>]
:00050 
  0088e: 00 	mov    rdi,0x4
  00895: 01 	sub    DWORD PTR [rip+0x1384],0x1        # 0x1c20
  0089c:    	jne    0x36134
  008a2:    	mov    rdi,r12
  008a5:    	mov    esi,DWORD PTR [rbp-0x18]
  008a8:    	mov    rdx,QWORD PTR [rbp-0x28]
  008ac: 57 	movabs rax,0x55573c962b00
  008b6:    	call   rax
  008b8: 00 	mov    rdi,0x4
  008bf:    	jmp    0x36134
:00052 %5 = literal[-0.6]
  008c4: 00 	movq   xmm5,QWORD PTR [rip+0x135c]        # 0x1c28
:00053 %3 = %4 > %5                         [<INVALID>][<INVALID>]
  008cc: 00 	mov    rdi,0x4
  008d3: 01 	sub    DWORD PTR [rip+0x1356],0x1        # 0x1c30
  008da:    	jne    0x36150
  008e0:    	mov    rdi,r12
  008e3:    	mov    esi,DWORD PTR [rbp-0x18]
  008e6:    	mov    rdx,QWORD PTR [rbp-0x28]
  008ea: 57 	movabs rax,0x55573c962b00
  008f4:    	call   rax
  008f6: 00 	mov    rdi,0x4
  008fd:    	jmp    0x36150
  00902:    	jmp    0x36192
:00054 condnotbr %3 =>:00062
  00907:    	mov    rax,QWORD PTR [rbp-0x40]
  0090b:    	or     rax,0x10
  0090f:    	cmp    rax,0x14
  00913:    	je     0x9d7
:00055 %3 = 1: i32
  00919: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]
  00921:    	sub    rsp,0x30
  00925:    	movq   QWORD PTR [rsp],xmm2
  0092a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00930:    	movq   QWORD PTR [rsp+0x10],xmm4
  00936:    	movq   QWORD PTR [rsp+0x18],xmm5
  0093c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00942:    	mov    rdx,QWORD PTR [rbp-0x30]
  00946:    	mov    rcx,QWORD PTR [rbp-0x40]
  0094a:    	mov    rdi,rbx
  0094d:    	mov    rsi,r12
  00950: 57 	movabs rax,0x55573c95cc80
  0095a:    	call   rax
  0095c:    	movq   xmm2,QWORD PTR [rsp]
  00961:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00967:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0096d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00973:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00979:    	add    rsp,0x30
  0097d: 57 	movabs r13,0x55573cfb0610
  00987:    	test   rax,rax
  0098a:    	je     0xfffe8ea3
  00990:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  00994: 00 	movq   xmm6,QWORD PTR [rip+0x129c]        # 0x1c38
:00058 _ = %3.call y=(%4; 1)                [<INVALID>]
:00059 
  0099c: 00 	mov    rdi,0x4
  009a3: 01 	sub    DWORD PTR [rip+0x1296],0x1        # 0x1c40
  009aa:    	jne    0x361b8
  009b0:    	mov    rdi,r12
  009b3:    	mov    esi,DWORD PTR [rbp-0x18]
  009b6:    	mov    rdx,QWORD PTR [rbp-0x28]
  009ba: 57 	movabs rax,0x55573c962b00
  009c4:    	call   rax
  009c6: 00 	mov    rdi,0x4
  009cd:    	jmp    0x361b8
:00061 br =>:00087
  009d2:    	jmp    0x36474
:00062 %4 = %2.call z()                     [Vec]
:00063 
  009d7:    	mov    rdi,QWORD PTR [rbp-0x38]
  009db: 00 	test   rdi,0x7
  009e2:    	jne    0x361e1
  009e8:    	cmp    DWORD PTR [rdi+0x4],0x25
  009ec:    	jne    0x361e1
  009f2: 26 	cmp    DWORD PTR [rip+0xfffffffffffeae83],0x26        # 0xfffeb87c
  009f9:    	jne    0x361e1
  009ff:    	mov    esi,DWORD PTR [rip+0x1243]        # 0x1c48
  00a05:    	cmp    esi,0xffffffff
  00a08:    	je     0x361fd
  00a0e:    	cmp    WORD PTR [rdi+0x2],0x3
  00a13:    	jne    0xa2c
  00a19:    	cmp    esi,0x6
  00a1c:    	jge    0xa2c
  00a22:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a27:    	jmp    0xa6e
  00a2c:    	sub    rsp,0x20
  00a30:    	movq   QWORD PTR [rsp],xmm2
  00a35:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a3b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a41:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a47: 57 	movabs rax,0x55573c900b50
  00a51:    	call   rax
  00a53:    	movq   xmm2,QWORD PTR [rsp]
  00a58:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a5e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a64:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a6a:    	add    rsp,0x20
  00a6e:    	mov    QWORD PTR [rbp-0x48],rax
:00065 %5 = literal[0.6]
  00a72: 00 	movq   xmm5,QWORD PTR [rip+0x11de]        # 0x1c58
:00066 %3 = %4 < %5                         [Float][Float]
  00a7a:    	mov    rdi,QWORD PTR [rbp-0x48]
  00a7e: 00 	test   rdi,0x1
  00a85:    	jne    0x3625c
  00a8b: 00 	test   rdi,0x2
  00a92:    	je     0xace
  00a98:    	xorps  xmm6,xmm6
  00a9b: 00 	movabs rax,0x8000000000000002
  00aa5:    	cmp    rdi,rax
  00aa8:    	je     0xae0
  00aae:    	mov    rax,rdi
  00ab1:    	sar    rax,0x3f
  00ab5:    	add    rax,0x2
  00ab9:    	and    rdi,0xfffffffffffffffc
  00abd:    	or     rdi,rax
  00ac0:    	rol    rdi,0x3d
  00ac4:    	movq   xmm6,rdi
  00ac9:    	jmp    0xae0
  00ace:    	call   0xfffe8edc
  00ad3:    	test   rax,rax
  00ad6:    	je     0x3625c
  00adc:    	movq   xmm6,xmm0
  00ae0:    	xor    rax,rax
  00ae3:    	ucomisd xmm6,xmm5
  00ae7:    	setb   al
  00aeb:    	shl    rax,0x3
  00aef:    	or     rax,0x14
  00af3:    	mov    QWORD PTR [rbp-0x40],rax
:00067 condnotbr %3 =>:00073
  00af7:    	mov    rax,QWORD PTR [rbp-0x40]
  00afb:    	or     rax,0x10
  00aff:    	cmp    rax,0x14
  00b03:    	je     0x3630f
:00068 %4 = %2.call z()                     [Vec]
:00069 
  00b09:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b0d: 00 	test   rdi,0x7
  00b14:    	jne    0x36278
  00b1a:    	cmp    DWORD PTR [rdi+0x4],0x25
  00b1e:    	jne    0x36278
  00b24: 26 	cmp    DWORD PTR [rip+0xfffffffffffead51],0x26        # 0xfffeb87c
  00b2b:    	jne    0x36278
  00b31:    	mov    esi,DWORD PTR [rip+0x112d]        # 0x1c64
  00b37:    	cmp    esi,0xffffffff
  00b3a:    	je     0x36294
  00b40:    	cmp    WORD PTR [rdi+0x2],0x3
  00b45:    	jne    0xb5e
  00b4b:    	cmp    esi,0x6
  00b4e:    	jge    0xb5e
  00b54:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b59:    	jmp    0xba0
  00b5e:    	sub    rsp,0x20
  00b62:    	movq   QWORD PTR [rsp],xmm2
  00b67:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b6d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b73:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b79: 57 	movabs rax,0x55573c900b50
  00b83:    	call   rax
  00b85:    	movq   xmm2,QWORD PTR [rsp]
  00b8a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b90:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b96:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b9c:    	add    rsp,0x20
  00ba0:    	mov    QWORD PTR [rbp-0x48],rax
:00071 %5 = literal[-0.6]
  00ba4: 00 	movq   xmm5,QWORD PTR [rip+0x10bc]        # 0x1c68
:00072 %3 = %4 > %5                         [Float][Float]
  00bac:    	mov    rdi,QWORD PTR [rbp-0x48]
  00bb0: 00 	test   rdi,0x1
  00bb7:    	jne    0x362f3
  00bbd: 00 	test   rdi,0x2
  00bc4:    	je     0xc00
  00bca:    	xorps  xmm6,xmm6
  00bcd: 00 	movabs rax,0x8000000000000002
  00bd7:    	cmp    rdi,rax
  00bda:    	je     0xc12
  00be0:    	mov    rax,rdi
  00be3:    	sar    rax,0x3f
  00be7:    	add    rax,0x2
  00beb:    	and    rdi,0xfffffffffffffffc
  00bef:    	or     rdi,rax
  00bf2:    	rol    rdi,0x3d
  00bf6:    	movq   xmm6,rdi
  00bfb:    	jmp    0xc12
  00c00:    	call   0xfffe8edc
  00c05:    	test   rax,rax
  00c08:    	je     0x362f3
  00c0e:    	movq   xmm6,xmm0
  00c12:    	xor    rax,rax
  00c15:    	ucomisd xmm6,xmm5
  00c19:    	seta   al
  00c1d:    	shl    rax,0x3
  00c21:    	or     rax,0x14
  00c25:    	mov    QWORD PTR [rbp-0x40],rax
  00c29:    	jmp    0x36335
:00073 condnotbr %3 =>:00081
  00c2e:    	mov    rax,QWORD PTR [rbp-0x40]
  00c32:    	or     rax,0x10
  00c36:    	cmp    rax,0x14
  00c3a:    	je     0xd93
:00074 %3 = 1: i32
  00c40: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]
  00c48:    	sub    rsp,0x30
  00c4c:    	movq   QWORD PTR [rsp],xmm2
  00c51:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c57:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c5d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c63:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c69:    	mov    rdx,QWORD PTR [rbp-0x30]
  00c6d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00c71:    	mov    rdi,rbx
  00c74:    	mov    rsi,r12
  00c77: 57 	movabs rax,0x55573c95cc80
  00c81:    	call   rax
  00c83:    	movq   xmm2,QWORD PTR [rsp]
  00c88:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c8e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c94:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c9a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ca0:    	add    rsp,0x30
  00ca4: 57 	movabs r13,0x55573cfb0740
  00cae:    	test   rax,rax
  00cb1:    	je     0xfffe8ea3
  00cb7:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00cbb: 00 	movq   xmm6,QWORD PTR [rip+0xfb5]        # 0x1c78
:00077 _ = %3.call z=(%4; 1)                [Vec]
:00078 
  00cc3:    	movq   xmm0,xmm6
  00cc7:    	call   0xfffe8fcf
  00ccc:    	mov    QWORD PTR [rbp-0x48],rax
  00cd0:    	mov    rdi,QWORD PTR [rbp-0x40]
  00cd4: 00 	test   rdi,0x7
  00cdb:    	jne    0x3635b
  00ce1:    	cmp    DWORD PTR [rdi+0x4],0x25
  00ce5:    	jne    0x3635b
  00ceb: 26 	cmp    DWORD PTR [rip+0xfffffffffffeab8a],0x26        # 0xfffeb87c
  00cf2:    	jne    0x3635b
  00cf8:    	mov    esi,DWORD PTR [rip+0xf86]        # 0x1c84
  00cfe:    	cmp    esi,0xffffffff
  00d01:    	je     0x36377
  00d07:    	cmp    WORD PTR [rdi+0x2],0x3
  00d0c:    	jne    0xd29
  00d12:    	cmp    esi,0x6
  00d15:    	jge    0xd29
  00d1b:    	mov    rax,QWORD PTR [rbp-0x48]
  00d1f:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00d24:    	jmp    0xd8e
  00d29:    	sub    rsp,0x30
  00d2d:    	movq   QWORD PTR [rsp],xmm2
  00d32:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d38:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d3e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d44:    	movq   QWORD PTR [rsp+0x20],xmm6
  00d4a:    	mov    rdx,QWORD PTR [rbp-0x48]
  00d4e: 57 	movabs rax,0x55573c900dd0
  00d58:    	call   rax
  00d5a:    	movq   xmm2,QWORD PTR [rsp]
  00d5f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d65:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d6b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d71:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d77:    	add    rsp,0x30
  00d7b: 57 	movabs r13,0x55573cfb0770
  00d85:    	test   rax,rax
  00d88:    	je     0xfffe8ea3
:00080 br =>:00087
  00d8e:    	jmp    0x364a7
:00081 %3 = 1: i32
  00d93: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]
  00d9b:    	sub    rsp,0x30
  00d9f:    	movq   QWORD PTR [rsp],xmm2
  00da4:    	movq   QWORD PTR [rsp+0x8],xmm3
  00daa:    	movq   QWORD PTR [rsp+0x10],xmm4
  00db0:    	movq   QWORD PTR [rsp+0x18],xmm5
  00db6:    	movq   QWORD PTR [rsp+0x20],xmm6
  00dbc:    	mov    rdx,QWORD PTR [rbp-0x30]
  00dc0:    	mov    rcx,QWORD PTR [rbp-0x40]
  00dc4:    	mov    rdi,rbx
  00dc7:    	mov    rsi,r12
  00dca: 57 	movabs rax,0x55573c95cc80
  00dd4:    	call   rax
  00dd6:    	movq   xmm2,QWORD PTR [rsp]
  00ddb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00de1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00de7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ded:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00df3:    	add    rsp,0x30
  00df7: 57 	movabs r13,0x55573cfb07b0
  00e01:    	test   rax,rax
  00e04:    	je     0xfffe8ea3
  00e0a:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00e0e: 00 	movq   xmm6,QWORD PTR [rip+0xe72]        # 0x1c88
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
:00085 
  00e16: 00 	mov    rdi,0x4
  00e1d: 01 	sub    DWORD PTR [rip+0xe6c],0x1        # 0x1c90
  00e24:    	jne    0x363e9
  00e2a:    	mov    rdi,r12
  00e2d:    	mov    esi,DWORD PTR [rbp-0x18]
  00e30:    	mov    rdx,QWORD PTR [rbp-0x28]
  00e34: 57 	movabs rax,0x55573c962b00
  00e3e:    	call   rax
  00e40: 00 	mov    rdi,0x4
  00e47:    	jmp    0x363e9
:00087 %3 = 0: i32
  00e4c: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  00e54: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]
  00e5c:    	sub    rsp,0x20
  00e60:    	movq   QWORD PTR [rsp],xmm2
  00e65:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e6b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e71:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e77:    	mov    rdx,QWORD PTR [rbp-0x30]
  00e7b:    	mov    rcx,QWORD PTR [rbp-0x50]
  00e7f:    	mov    rdi,rbx
  00e82:    	mov    rsi,r12
  00e85: 57 	movabs rax,0x55573c95cc80
  00e8f:    	call   rax
  00e91:    	movq   xmm2,QWORD PTR [rsp]
  00e96:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e9c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ea2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ea8:    	add    rsp,0x20
  00eac: 57 	movabs r13,0x55573cfb0820
  00eb6:    	test   rax,rax
  00eb9:    	je     0xfffe8ea3
  00ebf:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  00ec3: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]
  00ecb:    	sub    rsp,0x20
  00ecf:    	movq   QWORD PTR [rsp],xmm3
  00ed4:    	movq   QWORD PTR [rsp+0x8],xmm4
  00eda:    	movq   QWORD PTR [rsp+0x10],xmm6
  00ee0:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ee4:    	mov    rcx,QWORD PTR [rbp-0x58]
  00ee8:    	mov    rdi,rbx
  00eeb:    	mov    rsi,r12
  00eee: 57 	movabs rax,0x55573c95cc80
  00ef8:    	call   rax
  00efa:    	movq   xmm3,QWORD PTR [rsp]
  00eff:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f05:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00f0b:    	add    rsp,0x20
  00f0f: 57 	movabs r13,0x55573cfb0840
  00f19:    	test   rax,rax
  00f1c:    	je     0xfffe8ea3
  00f22:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
:00093 
  00f26:    	mov    rdi,QWORD PTR [rbp-0x50]
  00f2a: 00 	test   rdi,0x7
  00f31:    	jne    0x36412
  00f37:    	cmp    DWORD PTR [rdi+0x4],0x25
  00f3b:    	jne    0x36412
  00f41: 26 	cmp    DWORD PTR [rip+0xfffffffffffea934],0x26        # 0xfffeb87c
  00f48:    	jne    0x36412
  00f4e:    	sub    rsp,0x10
  00f52:    	movq   QWORD PTR [rsp],xmm3
  00f57:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f5d:    	mov    rax,QWORD PTR [rbx]
  00f60:    	lea    rdi,[rsp-0x18]
  00f65:    	mov    QWORD PTR [rdi],rax
  00f68:    	mov    QWORD PTR [rbx],rdi
  00f6b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f74:    	mov    QWORD PTR [rsp-0x38],rcx
  00f79:    	mov    rax,QWORD PTR [rbp-0x50]
  00f7d:    	mov    QWORD PTR [rsp-0x38],rax
  00f82: 00 	mov    rdi,0x1
  00f89:    	mov    rax,QWORD PTR [rbp-0x58]
  00f8d:    	mov    QWORD PTR [rsp-0x40],rax
  00f92: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f9b: 09 	movabs rax,0x90000003a
  00fa5:    	mov    QWORD PTR [rsp-0x28],rax
  00faa: 57 	movabs r13,0x55573cf94eb0
  00fb4:    	call   0xffff29ac
  00fb9:    	lea    rdi,[rbp-0x8]
  00fbd:    	mov    QWORD PTR [rbx],rdi
  00fc0:    	movq   xmm3,QWORD PTR [rsp]
  00fc5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fcb:    	add    rsp,0x10
  00fcf: 57 	movabs r13,0x55573cfb0860
  00fd9:    	test   rax,rax
  00fdc:    	je     0xfffe8ea3
  00fe2:    	mov    QWORD PTR [rbp-0x48],rax
:00095 %1.[%3] = %4
  00fe6:    	sub    rsp,0x10
  00fea:    	movq   QWORD PTR [rsp],xmm3
  00fef:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ff5:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ff9:    	mov    rcx,QWORD PTR [rbp-0x40]
  00ffd:    	mov    r8,QWORD PTR [rbp-0x48]
  01001:    	mov    rdi,rbx
  01004:    	mov    rsi,r12
  01007: 57 	movabs rax,0x55573c95cd90
  01011:    	call   rax
  01013:    	movq   xmm3,QWORD PTR [rsp]
  01018:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0101e:    	add    rsp,0x10
  01022: 57 	movabs r13,0x55573cfb0880
  0102c:    	test   rax,rax
  0102f:    	je     0xfffe8ea3
:00096 %3 = 0: i32
  01035: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  0103d: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]
  01045:    	sub    rsp,0x10
  01049:    	movq   QWORD PTR [rsp],xmm3
  0104e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01054:    	mov    rdx,QWORD PTR [rbp-0x30]
  01058:    	mov    rcx,QWORD PTR [rbp-0x50]
  0105c:    	mov    rdi,rbx
  0105f:    	mov    rsi,r12
  01062: 57 	movabs rax,0x55573c95cc80
  0106c:    	call   rax
  0106e:    	movq   xmm3,QWORD PTR [rsp]
  01073:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01079:    	add    rsp,0x10
  0107d: 57 	movabs r13,0x55573cfb08b0
  01087:    	test   rax,rax
  0108a:    	je     0xfffe8ea3
  01090:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
:00100 
  01094:    	mov    rdi,QWORD PTR [rbp-0x50]
  01098: 00 	test   rdi,0x7
  0109f:    	jne    0x36421
  010a5:    	cmp    DWORD PTR [rdi+0x4],0x25
  010a9:    	jne    0x36421
  010af: 26 	cmp    DWORD PTR [rip+0xfffffffffffea7c6],0x26        # 0xfffeb87c
  010b6:    	jne    0x36421
  010bc:    	sub    rsp,0x10
  010c0:    	movq   QWORD PTR [rsp],xmm3
  010c5:    	movq   QWORD PTR [rsp+0x8],xmm4
  010cb:    	mov    rax,QWORD PTR [rbx]
  010ce:    	lea    rdi,[rsp-0x18]
  010d3:    	mov    QWORD PTR [rdi],rax
  010d6:    	mov    QWORD PTR [rbx],rdi
  010d9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010e2:    	mov    QWORD PTR [rsp-0x38],rcx
  010e7:    	mov    rax,QWORD PTR [rbp-0x50]
  010eb:    	mov    QWORD PTR [rsp-0x38],rax
  010f0: 00 	mov    rdi,0x0
  010f7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01100: 07 	movabs rax,0x100070000003d
  0110a:    	mov    QWORD PTR [rsp-0x28],rax
  0110f: 57 	movabs r13,0x55573cfa76a0
  01119:    	call   0xfffec141
  0111e:    	lea    rdi,[rbp-0x8]
  01122:    	mov    QWORD PTR [rbx],rdi
  01125:    	movq   xmm3,QWORD PTR [rsp]
  0112a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01130:    	add    rsp,0x10
  01134: 57 	movabs r13,0x55573cfb08d0
  0113e:    	test   rax,rax
  01141:    	je     0xfffe8ea3
  01147:    	mov    QWORD PTR [rbp-0x48],rax
:00102 %1.[%3] = %4
  0114b:    	sub    rsp,0x10
  0114f:    	movq   QWORD PTR [rsp],xmm3
  01154:    	movq   QWORD PTR [rsp+0x8],xmm4
  0115a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0115e:    	mov    rcx,QWORD PTR [rbp-0x40]
  01162:    	mov    r8,QWORD PTR [rbp-0x48]
  01166:    	mov    rdi,rbx
  01169:    	mov    rsi,r12
  0116c: 57 	movabs rax,0x55573c95cd90
  01176:    	call   rax
  01178:    	movq   xmm3,QWORD PTR [rsp]
  0117d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01183:    	add    rsp,0x10
  01187: 57 	movabs r13,0x55573cfb08f0
  01191:    	test   rax,rax
  01194:    	je     0xfffe8ea3
:00103 %3 = 1: i32
  0119a: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  011a2: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]
  011aa:    	sub    rsp,0x10
  011ae:    	movq   QWORD PTR [rsp],xmm3
  011b3:    	movq   QWORD PTR [rsp+0x8],xmm4
  011b9:    	mov    rdx,QWORD PTR [rbp-0x30]
  011bd:    	mov    rcx,QWORD PTR [rbp-0x50]
  011c1:    	mov    rdi,rbx
  011c4:    	mov    rsi,r12
  011c7: 57 	movabs rax,0x55573c95cc80
  011d1:    	call   rax
  011d3:    	movq   xmm3,QWORD PTR [rsp]
  011d8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011de:    	add    rsp,0x10
  011e2: 57 	movabs r13,0x55573cfb0920
  011ec:    	test   rax,rax
  011ef:    	je     0xfffe8ea3
  011f5:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  011f9: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]
  01201:    	sub    rsp,0x10
  01205:    	movq   QWORD PTR [rsp],xmm3
  0120a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01210:    	mov    rdx,QWORD PTR [rbp-0x30]
  01214:    	mov    rcx,QWORD PTR [rbp-0x58]
  01218:    	mov    rdi,rbx
  0121b:    	mov    rsi,r12
  0121e: 57 	movabs rax,0x55573c95cc80
  01228:    	call   rax
  0122a:    	movq   xmm3,QWORD PTR [rsp]
  0122f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01235:    	add    rsp,0x10
  01239: 57 	movabs r13,0x55573cfb0940
  01243:    	test   rax,rax
  01246:    	je     0xfffe8ea3
  0124c:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
:00109 
  01250:    	mov    rdi,QWORD PTR [rbp-0x50]
  01254: 00 	test   rdi,0x7
  0125b:    	jne    0x36430
  01261:    	cmp    DWORD PTR [rdi+0x4],0x25
  01265:    	jne    0x36430
  0126b: 26 	cmp    DWORD PTR [rip+0xfffffffffffea60a],0x26        # 0xfffeb87c
  01272:    	jne    0x36430
  01278:    	sub    rsp,0x10
  0127c:    	movq   QWORD PTR [rsp],xmm3
  01281:    	movq   QWORD PTR [rsp+0x8],xmm4
  01287:    	mov    rax,QWORD PTR [rbx]
  0128a:    	lea    rdi,[rsp-0x18]
  0128f:    	mov    QWORD PTR [rdi],rax
  01292:    	mov    QWORD PTR [rbx],rdi
  01295: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0129e:    	mov    QWORD PTR [rsp-0x38],rcx
  012a3:    	mov    rax,QWORD PTR [rbp-0x50]
  012a7:    	mov    QWORD PTR [rsp-0x38],rax
  012ac: 00 	mov    rdi,0x1
  012b3:    	mov    rax,QWORD PTR [rbp-0x58]
  012b7:    	mov    QWORD PTR [rsp-0x40],rax
  012bc: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012c5: 09 	movabs rax,0x90000003a
  012cf:    	mov    QWORD PTR [rsp-0x28],rax
  012d4: 57 	movabs r13,0x55573cf94eb0
  012de:    	call   0xffff29ac
  012e3:    	lea    rdi,[rbp-0x8]
  012e7:    	mov    QWORD PTR [rbx],rdi
  012ea:    	movq   xmm3,QWORD PTR [rsp]
  012ef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012f5:    	add    rsp,0x10
  012f9: 57 	movabs r13,0x55573cfb0960
  01303:    	test   rax,rax
  01306:    	je     0xfffe8ea3
  0130c:    	mov    QWORD PTR [rbp-0x48],rax
:00111 %1.[%3] = %4
  01310:    	sub    rsp,0x10
  01314:    	movq   QWORD PTR [rsp],xmm3
  01319:    	movq   QWORD PTR [rsp+0x8],xmm4
  0131f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01323:    	mov    rcx,QWORD PTR [rbp-0x40]
  01327:    	mov    r8,QWORD PTR [rbp-0x48]
  0132b:    	mov    rdi,rbx
  0132e:    	mov    rsi,r12
  01331: 57 	movabs rax,0x55573c95cd90
  0133b:    	call   rax
  0133d:    	movq   xmm3,QWORD PTR [rsp]
  01342:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01348:    	add    rsp,0x10
  0134c: 57 	movabs r13,0x55573cfb0980
  01356:    	test   rax,rax
  01359:    	je     0xfffe8ea3
:00112 %3 = 1: i32
  0135f: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01367: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]
  0136f:    	sub    rsp,0x10
  01373:    	movq   QWORD PTR [rsp],xmm3
  01378:    	movq   QWORD PTR [rsp+0x8],xmm4
  0137e:    	mov    rdx,QWORD PTR [rbp-0x30]
  01382:    	mov    rcx,QWORD PTR [rbp-0x50]
  01386:    	mov    rdi,rbx
  01389:    	mov    rsi,r12
  0138c: 57 	movabs rax,0x55573c95cc80
  01396:    	call   rax
  01398:    	movq   xmm3,QWORD PTR [rsp]
  0139d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013a3:    	add    rsp,0x10
  013a7: 57 	movabs r13,0x55573cfb09b0
  013b1:    	test   rax,rax
  013b4:    	je     0xfffe8ea3
  013ba:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
:00116 
  013be:    	mov    rdi,QWORD PTR [rbp-0x50]
  013c2: 00 	test   rdi,0x7
  013c9:    	jne    0x3643f
  013cf:    	cmp    DWORD PTR [rdi+0x4],0x25
  013d3:    	jne    0x3643f
  013d9: 26 	cmp    DWORD PTR [rip+0xfffffffffffea49c],0x26        # 0xfffeb87c
  013e0:    	jne    0x3643f
  013e6:    	sub    rsp,0x10
  013ea:    	movq   QWORD PTR [rsp],xmm3
  013ef:    	movq   QWORD PTR [rsp+0x8],xmm4
  013f5:    	mov    rax,QWORD PTR [rbx]
  013f8:    	lea    rdi,[rsp-0x18]
  013fd:    	mov    QWORD PTR [rdi],rax
  01400:    	mov    QWORD PTR [rbx],rdi
  01403: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0140c:    	mov    QWORD PTR [rsp-0x38],rcx
  01411:    	mov    rax,QWORD PTR [rbp-0x50]
  01415:    	mov    QWORD PTR [rsp-0x38],rax
  0141a: 00 	mov    rdi,0x0
  01421: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0142a: 07 	movabs rax,0x100070000003d
  01434:    	mov    QWORD PTR [rsp-0x28],rax
  01439: 57 	movabs r13,0x55573cfa76a0
  01443:    	call   0xfffec141
  01448:    	lea    rdi,[rbp-0x8]
  0144c:    	mov    QWORD PTR [rbx],rdi
  0144f:    	movq   xmm3,QWORD PTR [rsp]
  01454:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0145a:    	add    rsp,0x10
  0145e: 57 	movabs r13,0x55573cfb09d0
  01468:    	test   rax,rax
  0146b:    	je     0xfffe8ea3
  01471:    	mov    QWORD PTR [rbp-0x48],rax
:00118 %1.[%3] = %4
  01475:    	sub    rsp,0x10
  01479:    	movq   QWORD PTR [rsp],xmm3
  0147e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01484:    	mov    rdx,QWORD PTR [rbp-0x30]
  01488:    	mov    rcx,QWORD PTR [rbp-0x40]
  0148c:    	mov    r8,QWORD PTR [rbp-0x48]
  01490:    	mov    rdi,rbx
  01493:    	mov    rsi,r12
  01496: 57 	movabs rax,0x55573c95cd90
  014a0:    	call   rax
  014a2:    	movq   xmm3,QWORD PTR [rsp]
  014a7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014ad:    	add    rsp,0x10
  014b1: 57 	movabs r13,0x55573cfb09f0
  014bb:    	test   rax,rax
  014be:    	je     0xfffe8ea3
:00119 %3 = %4
  014c4:    	mov    rax,QWORD PTR [rbp-0x48]
  014c8:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  014cc:    	mov    rax,QWORD PTR [rbp-0x40]
  014d0:    	leave  
  014d1:    	ret    
:00087 %3 = 0: i32
  014d2: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  014da: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]
  014e2:    	sub    rsp,0x20
  014e6:    	movq   QWORD PTR [rsp],xmm2
  014eb:    	movq   QWORD PTR [rsp+0x8],xmm3
  014f1:    	movq   QWORD PTR [rsp+0x10],xmm4
  014f7:    	movq   QWORD PTR [rsp+0x18],xmm6
  014fd:    	mov    rdx,QWORD PTR [rbp-0x30]
  01501:    	mov    rcx,QWORD PTR [rbp-0x50]
  01505:    	mov    rdi,rbx
  01508:    	mov    rsi,r12
  0150b: 57 	movabs rax,0x55573c95cc80
  01515:    	call   rax
  01517:    	movq   xmm2,QWORD PTR [rsp]
  0151c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01522:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01528:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0152e:    	add    rsp,0x20
  01532: 57 	movabs r13,0x55573cfb0820
  0153c:    	test   rax,rax
  0153f:    	je     0xfffe8ea3
  01545:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  01549: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]
  01551:    	sub    rsp,0x20
  01555:    	movq   QWORD PTR [rsp],xmm3
  0155a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01560:    	movq   QWORD PTR [rsp+0x10],xmm6
  01566:    	mov    rdx,QWORD PTR [rbp-0x30]
  0156a:    	mov    rcx,QWORD PTR [rbp-0x58]
  0156e:    	mov    rdi,rbx
  01571:    	mov    rsi,r12
  01574: 57 	movabs rax,0x55573c95cc80
  0157e:    	call   rax
  01580:    	movq   xmm3,QWORD PTR [rsp]
  01585:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0158b:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01591:    	add    rsp,0x20
  01595: 57 	movabs r13,0x55573cfb0840
  0159f:    	test   rax,rax
  015a2:    	je     0xfffe8ea3
  015a8:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
:00093 
  015ac:    	mov    rdi,QWORD PTR [rbp-0x50]
  015b0: 00 	test   rdi,0x7
  015b7:    	jne    0x364cd
  015bd:    	cmp    DWORD PTR [rdi+0x4],0x25
  015c1:    	jne    0x364cd
  015c7: 26 	cmp    DWORD PTR [rip+0xfffffffffffea2ae],0x26        # 0xfffeb87c
  015ce:    	jne    0x364cd
  015d4:    	sub    rsp,0x10
  015d8:    	movq   QWORD PTR [rsp],xmm3
  015dd:    	movq   QWORD PTR [rsp+0x8],xmm4
  015e3:    	mov    rax,QWORD PTR [rbx]
  015e6:    	lea    rdi,[rsp-0x18]
  015eb:    	mov    QWORD PTR [rdi],rax
  015ee:    	mov    QWORD PTR [rbx],rdi
  015f1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015fa:    	mov    QWORD PTR [rsp-0x38],rcx
  015ff:    	mov    rax,QWORD PTR [rbp-0x50]
  01603:    	mov    QWORD PTR [rsp-0x38],rax
  01608: 00 	mov    rdi,0x1
  0160f:    	mov    rax,QWORD PTR [rbp-0x58]
  01613:    	mov    QWORD PTR [rsp-0x40],rax
  01618: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01621: 09 	movabs rax,0x90000003a
  0162b:    	mov    QWORD PTR [rsp-0x28],rax
  01630: 57 	movabs r13,0x55573cf94eb0
  0163a:    	call   0xffff29ac
  0163f:    	lea    rdi,[rbp-0x8]
  01643:    	mov    QWORD PTR [rbx],rdi
  01646:    	movq   xmm3,QWORD PTR [rsp]
  0164b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01651:    	add    rsp,0x10
  01655: 57 	movabs r13,0x55573cfb0860
  0165f:    	test   rax,rax
  01662:    	je     0xfffe8ea3
  01668:    	mov    QWORD PTR [rbp-0x48],rax
:00095 %1.[%3] = %4
  0166c:    	sub    rsp,0x10
  01670:    	movq   QWORD PTR [rsp],xmm3
  01675:    	movq   QWORD PTR [rsp+0x8],xmm4
  0167b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0167f:    	mov    rcx,QWORD PTR [rbp-0x40]
  01683:    	mov    r8,QWORD PTR [rbp-0x48]
  01687:    	mov    rdi,rbx
  0168a:    	mov    rsi,r12
  0168d: 57 	movabs rax,0x55573c95cd90
  01697:    	call   rax
  01699:    	movq   xmm3,QWORD PTR [rsp]
  0169e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016a4:    	add    rsp,0x10
  016a8: 57 	movabs r13,0x55573cfb0880
  016b2:    	test   rax,rax
  016b5:    	je     0xfffe8ea3
:00096 %3 = 0: i32
  016bb: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  016c3: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]
  016cb:    	sub    rsp,0x10
  016cf:    	movq   QWORD PTR [rsp],xmm3
  016d4:    	movq   QWORD PTR [rsp+0x8],xmm4
  016da:    	mov    rdx,QWORD PTR [rbp-0x30]
  016de:    	mov    rcx,QWORD PTR [rbp-0x50]
  016e2:    	mov    rdi,rbx
  016e5:    	mov    rsi,r12
  016e8: 57 	movabs rax,0x55573c95cc80
  016f2:    	call   rax
  016f4:    	movq   xmm3,QWORD PTR [rsp]
  016f9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016ff:    	add    rsp,0x10
  01703: 57 	movabs r13,0x55573cfb08b0
  0170d:    	test   rax,rax
  01710:    	je     0xfffe8ea3
  01716:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
:00100 
  0171a:    	mov    rdi,QWORD PTR [rbp-0x50]
  0171e: 00 	test   rdi,0x7
  01725:    	jne    0x364dc
  0172b:    	cmp    DWORD PTR [rdi+0x4],0x25
  0172f:    	jne    0x364dc
  01735: 26 	cmp    DWORD PTR [rip+0xfffffffffffea140],0x26        # 0xfffeb87c
  0173c:    	jne    0x364dc
  01742:    	sub    rsp,0x10
  01746:    	movq   QWORD PTR [rsp],xmm3
  0174b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01751:    	mov    rax,QWORD PTR [rbx]
  01754:    	lea    rdi,[rsp-0x18]
  01759:    	mov    QWORD PTR [rdi],rax
  0175c:    	mov    QWORD PTR [rbx],rdi
  0175f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01768:    	mov    QWORD PTR [rsp-0x38],rcx
  0176d:    	mov    rax,QWORD PTR [rbp-0x50]
  01771:    	mov    QWORD PTR [rsp-0x38],rax
  01776: 00 	mov    rdi,0x0
  0177d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01786: 07 	movabs rax,0x100070000003d
  01790:    	mov    QWORD PTR [rsp-0x28],rax
  01795: 57 	movabs r13,0x55573cfa76a0
  0179f:    	call   0xfffec141
  017a4:    	lea    rdi,[rbp-0x8]
  017a8:    	mov    QWORD PTR [rbx],rdi
  017ab:    	movq   xmm3,QWORD PTR [rsp]
  017b0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017b6:    	add    rsp,0x10
  017ba: 57 	movabs r13,0x55573cfb08d0
  017c4:    	test   rax,rax
  017c7:    	je     0xfffe8ea3
  017cd:    	mov    QWORD PTR [rbp-0x48],rax
:00102 %1.[%3] = %4
  017d1:    	sub    rsp,0x10
  017d5:    	movq   QWORD PTR [rsp],xmm3
  017da:    	movq   QWORD PTR [rsp+0x8],xmm4
  017e0:    	mov    rdx,QWORD PTR [rbp-0x30]
  017e4:    	mov    rcx,QWORD PTR [rbp-0x40]
  017e8:    	mov    r8,QWORD PTR [rbp-0x48]
  017ec:    	mov    rdi,rbx
  017ef:    	mov    rsi,r12
  017f2: 57 	movabs rax,0x55573c95cd90
  017fc:    	call   rax
  017fe:    	movq   xmm3,QWORD PTR [rsp]
  01803:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01809:    	add    rsp,0x10
  0180d: 57 	movabs r13,0x55573cfb08f0
  01817:    	test   rax,rax
  0181a:    	je     0xfffe8ea3
:00103 %3 = 1: i32
  01820: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  01828: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]
  01830:    	sub    rsp,0x10
  01834:    	movq   QWORD PTR [rsp],xmm3
  01839:    	movq   QWORD PTR [rsp+0x8],xmm4
  0183f:    	mov    rdx,QWORD PTR [rbp-0x30]
  01843:    	mov    rcx,QWORD PTR [rbp-0x50]
  01847:    	mov    rdi,rbx
  0184a:    	mov    rsi,r12
  0184d: 57 	movabs rax,0x55573c95cc80
  01857:    	call   rax
  01859:    	movq   xmm3,QWORD PTR [rsp]
  0185e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01864:    	add    rsp,0x10
  01868: 57 	movabs r13,0x55573cfb0920
  01872:    	test   rax,rax
  01875:    	je     0xfffe8ea3
  0187b:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  0187f: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]
  01887:    	sub    rsp,0x10
  0188b:    	movq   QWORD PTR [rsp],xmm3
  01890:    	movq   QWORD PTR [rsp+0x8],xmm4
  01896:    	mov    rdx,QWORD PTR [rbp-0x30]
  0189a:    	mov    rcx,QWORD PTR [rbp-0x58]
  0189e:    	mov    rdi,rbx
  018a1:    	mov    rsi,r12
  018a4: 57 	movabs rax,0x55573c95cc80
  018ae:    	call   rax
  018b0:    	movq   xmm3,QWORD PTR [rsp]
  018b5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018bb:    	add    rsp,0x10
  018bf: 57 	movabs r13,0x55573cfb0940
  018c9:    	test   rax,rax
  018cc:    	je     0xfffe8ea3
  018d2:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
:00109 
  018d6:    	mov    rdi,QWORD PTR [rbp-0x50]
  018da: 00 	test   rdi,0x7
  018e1:    	jne    0x364eb
  018e7:    	cmp    DWORD PTR [rdi+0x4],0x25
  018eb:    	jne    0x364eb
  018f1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9f84],0x26        # 0xfffeb87c
  018f8:    	jne    0x364eb
  018fe:    	sub    rsp,0x10
  01902:    	movq   QWORD PTR [rsp],xmm3
  01907:    	movq   QWORD PTR [rsp+0x8],xmm4
  0190d:    	mov    rax,QWORD PTR [rbx]
  01910:    	lea    rdi,[rsp-0x18]
  01915:    	mov    QWORD PTR [rdi],rax
  01918:    	mov    QWORD PTR [rbx],rdi
  0191b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01924:    	mov    QWORD PTR [rsp-0x38],rcx
  01929:    	mov    rax,QWORD PTR [rbp-0x50]
  0192d:    	mov    QWORD PTR [rsp-0x38],rax
  01932: 00 	mov    rdi,0x1
  01939:    	mov    rax,QWORD PTR [rbp-0x58]
  0193d:    	mov    QWORD PTR [rsp-0x40],rax
  01942: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0194b: 09 	movabs rax,0x90000003a
  01955:    	mov    QWORD PTR [rsp-0x28],rax
  0195a: 57 	movabs r13,0x55573cf94eb0
  01964:    	call   0xffff29ac
  01969:    	lea    rdi,[rbp-0x8]
  0196d:    	mov    QWORD PTR [rbx],rdi
  01970:    	movq   xmm3,QWORD PTR [rsp]
  01975:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0197b:    	add    rsp,0x10
  0197f: 57 	movabs r13,0x55573cfb0960
  01989:    	test   rax,rax
  0198c:    	je     0xfffe8ea3
  01992:    	mov    QWORD PTR [rbp-0x48],rax
:00111 %1.[%3] = %4
  01996:    	sub    rsp,0x10
  0199a:    	movq   QWORD PTR [rsp],xmm3
  0199f:    	movq   QWORD PTR [rsp+0x8],xmm4
  019a5:    	mov    rdx,QWORD PTR [rbp-0x30]
  019a9:    	mov    rcx,QWORD PTR [rbp-0x40]
  019ad:    	mov    r8,QWORD PTR [rbp-0x48]
  019b1:    	mov    rdi,rbx
  019b4:    	mov    rsi,r12
  019b7: 57 	movabs rax,0x55573c95cd90
  019c1:    	call   rax
  019c3:    	movq   xmm3,QWORD PTR [rsp]
  019c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ce:    	add    rsp,0x10
  019d2: 57 	movabs r13,0x55573cfb0980
  019dc:    	test   rax,rax
  019df:    	je     0xfffe8ea3
:00112 %3 = 1: i32
  019e5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  019ed: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]
  019f5:    	sub    rsp,0x10
  019f9:    	movq   QWORD PTR [rsp],xmm3
  019fe:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a04:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a08:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a0c:    	mov    rdi,rbx
  01a0f:    	mov    rsi,r12
  01a12: 57 	movabs rax,0x55573c95cc80
  01a1c:    	call   rax
  01a1e:    	movq   xmm3,QWORD PTR [rsp]
  01a23:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a29:    	add    rsp,0x10
  01a2d: 57 	movabs r13,0x55573cfb09b0
  01a37:    	test   rax,rax
  01a3a:    	je     0xfffe8ea3
  01a40:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
:00116 
  01a44:    	mov    rdi,QWORD PTR [rbp-0x50]
  01a48: 00 	test   rdi,0x7
  01a4f:    	jne    0x364fa
  01a55:    	cmp    DWORD PTR [rdi+0x4],0x25
  01a59:    	jne    0x364fa
  01a5f: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9e16],0x26        # 0xfffeb87c
  01a66:    	jne    0x364fa
  01a6c:    	sub    rsp,0x10
  01a70:    	movq   QWORD PTR [rsp],xmm3
  01a75:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a7b:    	mov    rax,QWORD PTR [rbx]
  01a7e:    	lea    rdi,[rsp-0x18]
  01a83:    	mov    QWORD PTR [rdi],rax
  01a86:    	mov    QWORD PTR [rbx],rdi
  01a89: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a92:    	mov    QWORD PTR [rsp-0x38],rcx
  01a97:    	mov    rax,QWORD PTR [rbp-0x50]
  01a9b:    	mov    QWORD PTR [rsp-0x38],rax
  01aa0: 00 	mov    rdi,0x0
  01aa7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01ab0: 07 	movabs rax,0x100070000003d
  01aba:    	mov    QWORD PTR [rsp-0x28],rax
  01abf: 57 	movabs r13,0x55573cfa76a0
  01ac9:    	call   0xfffec141
  01ace:    	lea    rdi,[rbp-0x8]
  01ad2:    	mov    QWORD PTR [rbx],rdi
  01ad5:    	movq   xmm3,QWORD PTR [rsp]
  01ada:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ae0:    	add    rsp,0x10
  01ae4: 57 	movabs r13,0x55573cfb09d0
  01aee:    	test   rax,rax
  01af1:    	je     0xfffe8ea3
  01af7:    	mov    QWORD PTR [rbp-0x48],rax
:00118 %1.[%3] = %4
  01afb:    	sub    rsp,0x10
  01aff:    	movq   QWORD PTR [rsp],xmm3
  01b04:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b0a:    	mov    rdx,QWORD PTR [rbp-0x30]
  01b0e:    	mov    rcx,QWORD PTR [rbp-0x40]
  01b12:    	mov    r8,QWORD PTR [rbp-0x48]
  01b16:    	mov    rdi,rbx
  01b19:    	mov    rsi,r12
  01b1c: 57 	movabs rax,0x55573c95cd90
  01b26:    	call   rax
  01b28:    	movq   xmm3,QWORD PTR [rsp]
  01b2d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b33:    	add    rsp,0x10
  01b37: 57 	movabs r13,0x55573cfb09f0
  01b41:    	test   rax,rax
  01b44:    	je     0xfffe8ea3
:00119 %3 = %4
  01b4a:    	mov    rax,QWORD PTR [rbp-0x48]
  01b4e:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01b52:    	mov    rax,QWORD PTR [rbp-0x40]
  01b56:    	leave  
  01b57:    	ret    
==> start whole compile: otherBasis FuncId(53) self_class:Scene start:[00000] bytecode:0x55573cfb0280
<== finished compile. elapsed:116.5µs
offset:Pos(101932) code: 7321 bytes  data: 327 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	sub    rsp,0x70
  00008: 00 	mov    rax,0x4
  0000f:    	mov    QWORD PTR [rbp-0x40],rax
  00013:    	mov    QWORD PTR [rbp-0x48],rax
  00017:    	mov    QWORD PTR [rbp-0x50],rax
  0001b:    	mov    QWORD PTR [rbp-0x58],rax
  0001f:    	mov    QWORD PTR [rbp-0x60],rax
  00023:    	mov    QWORD PTR [rbp-0x68],rax
  00027:    	mov    rdi,QWORD PTR [rbp-0x28]
  0002b: 00 	test   rdi,0x7
  00032:    	jne    0x34875
  00038:    	cmp    DWORD PTR [rdi+0x4],0x2f
  0003c:    	jne    0x34875
:00000 %3 = 2: i32
  00042: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00001 %5 = const[Vec]                      [Vec]
  0004a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe9ba3]        # 0xfffe9bf4
  00051: 00 	cmp    rax,QWORD PTR [rip+0x1c5c]        # 0x1cb4
  00058:    	jne    0x34884
  0005e: 00 	mov    rax,QWORD PTR [rip+0x1c3f]        # 0x1ca4
  00065:    	mov    QWORD PTR [rbp-0x50],rax
:00002 %6 = %2.call x()                     [Vec]
:00003 
  00069:    	mov    rdi,QWORD PTR [rbp-0x38]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x348ca
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x25
  0007e:    	jne    0x348ca
  00084: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9b5d],0x26        # 0xfffe9be8
  0008b:    	jne    0x348ca
  00091:    	mov    esi,DWORD PTR [rip+0x1c29]        # 0x1cc0
  00097:    	cmp    esi,0xffffffff
  0009a:    	je     0x348d9
  000a0:    	cmp    WORD PTR [rdi+0x2],0x3
  000a5:    	jne    0xbe
  000ab:    	cmp    esi,0x6
  000ae:    	jge    0xbe
  000b4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000b9:    	jmp    0xca
  000be: 57 	movabs rax,0x55573c900b50
  000c8:    	call   rax
  000ca:    	mov    QWORD PTR [rbp-0x58],rax
:00005 %7 = %2.call y()                     [Vec]
:00006 
  000ce:    	mov    rdi,QWORD PTR [rbp-0x38]
  000d2: 00 	test   rdi,0x7
  000d9:    	jne    0x34902
  000df:    	cmp    DWORD PTR [rdi+0x4],0x25
  000e3:    	jne    0x34902
  000e9: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9af8],0x26        # 0xfffe9be8
  000f0:    	jne    0x34902
  000f6:    	mov    esi,DWORD PTR [rip+0x1bcc]        # 0x1cc8
  000fc:    	cmp    esi,0xffffffff
  000ff:    	je     0x34911
  00105:    	cmp    WORD PTR [rdi+0x2],0x3
  0010a:    	jne    0x123
  00110:    	cmp    esi,0x6
  00113:    	jge    0x123
  00119:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0011e:    	jmp    0x12f
  00123: 57 	movabs rax,0x55573c900b50
  0012d:    	call   rax
  0012f:    	mov    QWORD PTR [rbp-0x60],rax
:00008 %8 = %2.call z()                     [Vec]
:00009 
  00133:    	mov    rdi,QWORD PTR [rbp-0x38]
  00137: 00 	test   rdi,0x7
  0013e:    	jne    0x3493a
  00144:    	cmp    DWORD PTR [rdi+0x4],0x25
  00148:    	jne    0x3493a
  0014e: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9a93],0x26        # 0xfffe9be8
  00155:    	jne    0x3493a
  0015b:    	mov    esi,DWORD PTR [rip+0x1b6f]        # 0x1cd0
  00161:    	cmp    esi,0xffffffff
  00164:    	je     0x34949
  0016a:    	cmp    WORD PTR [rdi+0x2],0x3
  0016f:    	jne    0x188
  00175:    	cmp    esi,0x6
  00178:    	jge    0x188
  0017e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00183:    	jmp    0x194
  00188: 57 	movabs rax,0x55573c900b50
  00192:    	call   rax
  00194:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
:00012 
  00198:    	mov    rdi,QWORD PTR [rbp-0x50]
  0019c: 00 	test   rdi,0x7
  001a3:    	jne    0x34972
  001a9:    	cmp    DWORD PTR [rdi+0x4],0x26
  001ad:    	jne    0x34972
  001b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9a2e],0x26        # 0xfffe9be8
  001ba:    	jne    0x34972
  001c0: 00 	mov    r9,0x0
  001c7:    	mov    rdx,rdi
  001ca:    	mov    rax,QWORD PTR [rbx]
  001cd:    	lea    rdi,[rsp-0x18]
  001d2:    	mov    QWORD PTR [rdi],rax
  001d5:    	mov    QWORD PTR [rbx],rdi
  001d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001e1:    	mov    QWORD PTR [rsp-0x38],rcx
  001e6:    	lea    rcx,[rbp-0x58]
  001ea: 00 	mov    r8,0x3
  001f1:    	call   0x34981
  001f6:    	lea    rdi,[rbp-0x8]
  001fa:    	mov    QWORD PTR [rbx],rdi
  001fd: 57 	movabs r13,0x55573cfb0350
  00207:    	test   rax,rax
  0020a:    	je     0xfffe720f
  00210:    	mov    QWORD PTR [rbp-0x48],rax
:00014 %1.[%3] = %4
  00214:    	mov    rdx,QWORD PTR [rbp-0x30]
  00218:    	mov    rcx,QWORD PTR [rbp-0x40]
  0021c:    	mov    r8,QWORD PTR [rbp-0x48]
  00220:    	mov    rdi,rbx
  00223:    	mov    rsi,r12
  00226: 57 	movabs rax,0x55573c95cd90
  00230:    	call   rax
  00232: 57 	movabs r13,0x55573cfb0370
  0023c:    	test   rax,rax
  0023f:    	je     0xfffe720f
:00015 %3 = 1: i32
  00245: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00016 %5 = const[Vec]                      [Vec]
  0024d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe99a0]        # 0xfffe9bf4
  00254: 00 	cmp    rax,QWORD PTR [rip+0x1a89]        # 0x1ce4
  0025b:    	jne    0x349b3
  00261: 00 	mov    rax,QWORD PTR [rip+0x1a6c]        # 0x1cd4
  00268:    	mov    QWORD PTR [rbp-0x50],rax
:00017 %6 = literal[0.0]
  0026c: 00 	movq   xmm2,QWORD PTR [rip+0x1a80]        # 0x1cf4
:00018 %7 = literal[0.0]
  00274: 00 	movq   xmm3,QWORD PTR [rip+0x1a88]        # 0x1d04
:00019 %8 = literal[0.0]
  0027c: 00 	movq   xmm4,QWORD PTR [rip+0x1a90]        # 0x1d14
:00020 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
:00021 
  00284:    	movq   xmm0,xmm2
  00288:    	call   0xfffe733b
  0028d:    	mov    QWORD PTR [rbp-0x58],rax
  00291:    	movq   xmm0,xmm3
  00295:    	call   0xfffe733b
  0029a:    	mov    QWORD PTR [rbp-0x60],rax
  0029e:    	movq   xmm0,xmm4
  002a2:    	call   0xfffe733b
  002a7:    	mov    QWORD PTR [rbp-0x68],rax
  002ab:    	mov    rdi,QWORD PTR [rbp-0x50]
  002af: 00 	test   rdi,0x7
  002b6:    	jne    0x349f9
  002bc:    	cmp    DWORD PTR [rdi+0x4],0x26
  002c0:    	jne    0x349f9
  002c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe991b],0x26        # 0xfffe9be8
  002cd:    	jne    0x349f9
  002d3: 00 	mov    r9,0x0
  002da:    	sub    rsp,0x20
  002de:    	movq   QWORD PTR [rsp],xmm2
  002e3:    	movq   QWORD PTR [rsp+0x8],xmm3
  002e9:    	movq   QWORD PTR [rsp+0x10],xmm4
  002ef:    	mov    rdx,rdi
  002f2:    	mov    rax,QWORD PTR [rbx]
  002f5:    	lea    rdi,[rsp-0x18]
  002fa:    	mov    QWORD PTR [rdi],rax
  002fd:    	mov    QWORD PTR [rbx],rdi
  00300: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00309:    	mov    QWORD PTR [rsp-0x38],rcx
  0030e:    	lea    rcx,[rbp-0x58]
  00312: 00 	mov    r8,0x3
  00319:    	call   0x34a08
  0031e:    	lea    rdi,[rbp-0x8]
  00322:    	mov    QWORD PTR [rbx],rdi
  00325:    	movq   xmm2,QWORD PTR [rsp]
  0032a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00330:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00336:    	add    rsp,0x20
  0033a: 57 	movabs r13,0x55573cfb03e0
  00344:    	test   rax,rax
  00347:    	je     0xfffe720f
  0034d:    	mov    QWORD PTR [rbp-0x48],rax
:00023 %1.[%3] = %4
  00351:    	sub    rsp,0x20
  00355:    	movq   QWORD PTR [rsp],xmm2
  0035a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00360:    	movq   QWORD PTR [rsp+0x10],xmm4
  00366:    	mov    rdx,QWORD PTR [rbp-0x30]
  0036a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0036e:    	mov    r8,QWORD PTR [rbp-0x48]
  00372:    	mov    rdi,rbx
  00375:    	mov    rsi,r12
  00378: 57 	movabs rax,0x55573c95cd90
  00382:    	call   rax
  00384:    	movq   xmm2,QWORD PTR [rsp]
  00389:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0038f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00395:    	add    rsp,0x20
  00399: 57 	movabs r13,0x55573cfb0400
  003a3:    	test   rax,rax
  003a6:    	je     0xfffe720f
:00024 %4 = %2.call x()                     [Vec]
:00025 
  003ac:    	mov    rdi,QWORD PTR [rbp-0x38]
  003b0: 00 	test   rdi,0x7
  003b7:    	jne    0x34a3a
  003bd:    	cmp    DWORD PTR [rdi+0x4],0x25
  003c1:    	jne    0x34a3a
  003c7: 26 	cmp    DWORD PTR [rip+0xfffffffffffe981a],0x26        # 0xfffe9be8
  003ce:    	jne    0x34a3a
  003d4:    	mov    esi,DWORD PTR [rip+0x1946]        # 0x1d20
  003da:    	cmp    esi,0xffffffff
  003dd:    	je     0x34a49
  003e3:    	cmp    WORD PTR [rdi+0x2],0x3
  003e8:    	jne    0x401
  003ee:    	cmp    esi,0x6
  003f1:    	jge    0x401
  003f7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003fc:    	jmp    0x437
  00401:    	sub    rsp,0x20
  00405:    	movq   QWORD PTR [rsp],xmm2
  0040a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00410:    	movq   QWORD PTR [rsp+0x10],xmm4
  00416: 57 	movabs rax,0x55573c900b50
  00420:    	call   rax
  00422:    	movq   xmm2,QWORD PTR [rsp]
  00427:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0042d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00433:    	add    rsp,0x20
  00437:    	mov    QWORD PTR [rbp-0x48],rax
:00027 %5 = literal[0.6]
  0043b: 00 	movq   xmm5,QWORD PTR [rip+0x18e1]        # 0x1d24
:00028 %3 = %4 < %5                         [Float][Float]
  00443:    	mov    rdi,QWORD PTR [rbp-0x48]
  00447: 00 	test   rdi,0x1
  0044e:    	jne    0x34a9c
  00454: 00 	test   rdi,0x2
  0045b:    	je     0x497
  00461:    	xorps  xmm6,xmm6
  00464: 00 	movabs rax,0x8000000000000002
  0046e:    	cmp    rdi,rax
  00471:    	je     0x4a9
  00477:    	mov    rax,rdi
  0047a:    	sar    rax,0x3f
  0047e:    	add    rax,0x2
  00482:    	and    rdi,0xfffffffffffffffc
  00486:    	or     rdi,rax
  00489:    	rol    rdi,0x3d
  0048d:    	movq   xmm6,rdi
  00492:    	jmp    0x4a9
  00497:    	call   0xfffe7248
  0049c:    	test   rax,rax
  0049f:    	je     0x34a9c
  004a5:    	movq   xmm6,xmm0
  004a9:    	xor    rax,rax
  004ac:    	ucomisd xmm6,xmm5
  004b0:    	setb   al
  004b4:    	shl    rax,0x3
  004b8:    	or     rax,0x14
  004bc:    	mov    QWORD PTR [rbp-0x40],rax
:00029 condnotbr %3 =>:00035
  004c0:    	mov    rax,QWORD PTR [rbp-0x40]
  004c4:    	or     rax,0x10
  004c8:    	cmp    rax,0x14
  004cc:    	je     0x34b4f
:00030 %4 = %2.call x()                     [Vec]
:00031 
  004d2:    	mov    rdi,QWORD PTR [rbp-0x38]
  004d6: 00 	test   rdi,0x7
  004dd:    	jne    0x34ab8
  004e3:    	cmp    DWORD PTR [rdi+0x4],0x25
  004e7:    	jne    0x34ab8
  004ed: 26 	cmp    DWORD PTR [rip+0xfffffffffffe96f4],0x26        # 0xfffe9be8
  004f4:    	jne    0x34ab8
  004fa:    	mov    esi,DWORD PTR [rip+0x1830]        # 0x1d30
  00500:    	cmp    esi,0xffffffff
  00503:    	je     0x34ad4
  00509:    	cmp    WORD PTR [rdi+0x2],0x3
  0050e:    	jne    0x527
  00514:    	cmp    esi,0x6
  00517:    	jge    0x527
  0051d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00522:    	jmp    0x569
  00527:    	sub    rsp,0x20
  0052b:    	movq   QWORD PTR [rsp],xmm2
  00530:    	movq   QWORD PTR [rsp+0x8],xmm3
  00536:    	movq   QWORD PTR [rsp+0x10],xmm4
  0053c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00542: 57 	movabs rax,0x55573c900b50
  0054c:    	call   rax
  0054e:    	movq   xmm2,QWORD PTR [rsp]
  00553:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00559:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0055f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00565:    	add    rsp,0x20
  00569:    	mov    QWORD PTR [rbp-0x48],rax
:00033 %5 = literal[-0.6]
  0056d: 00 	movq   xmm5,QWORD PTR [rip+0x17bf]        # 0x1d34
:00034 %3 = %4 > %5                         [Float][Float]
  00575:    	mov    rdi,QWORD PTR [rbp-0x48]
  00579: 00 	test   rdi,0x1
  00580:    	jne    0x34b33
  00586: 00 	test   rdi,0x2
  0058d:    	je     0x5c9
  00593:    	xorps  xmm6,xmm6
  00596: 00 	movabs rax,0x8000000000000002
  005a0:    	cmp    rdi,rax
  005a3:    	je     0x5db
  005a9:    	mov    rax,rdi
  005ac:    	sar    rax,0x3f
  005b0:    	add    rax,0x2
  005b4:    	and    rdi,0xfffffffffffffffc
  005b8:    	or     rdi,rax
  005bb:    	rol    rdi,0x3d
  005bf:    	movq   xmm6,rdi
  005c4:    	jmp    0x5db
  005c9:    	call   0xfffe7248
  005ce:    	test   rax,rax
  005d1:    	je     0x34b33
  005d7:    	movq   xmm6,xmm0
  005db:    	xor    rax,rax
  005de:    	ucomisd xmm6,xmm5
  005e2:    	seta   al
  005e6:    	shl    rax,0x3
  005ea:    	or     rax,0x14
  005ee:    	mov    QWORD PTR [rbp-0x40],rax
  005f2:    	jmp    0x34b75
:00035 condnotbr %3 =>:00043
  005f7:    	mov    rax,QWORD PTR [rbp-0x40]
  005fb:    	or     rax,0x10
  005ff:    	cmp    rax,0x14
  00603:    	je     0x75c
:00036 %3 = 1: i32
  00609: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00037 %3 = %1.[%3]
  00611:    	sub    rsp,0x30
  00615:    	movq   QWORD PTR [rsp],xmm2
  0061a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00620:    	movq   QWORD PTR [rsp+0x10],xmm4
  00626:    	movq   QWORD PTR [rsp+0x18],xmm5
  0062c:    	movq   QWORD PTR [rsp+0x20],xmm6
  00632:    	mov    rdx,QWORD PTR [rbp-0x30]
  00636:    	mov    rcx,QWORD PTR [rbp-0x40]
  0063a:    	mov    rdi,rbx
  0063d:    	mov    rsi,r12
  00640: 57 	movabs rax,0x55573c95cc80
  0064a:    	call   rax
  0064c:    	movq   xmm2,QWORD PTR [rsp]
  00651:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00657:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0065d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00663:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00669:    	add    rsp,0x30
  0066d: 57 	movabs r13,0x55573cfb04e0
  00677:    	test   rax,rax
  0067a:    	je     0xfffe720f
  00680:    	mov    QWORD PTR [rbp-0x40],rax
:00038 %4 = literal[1.0]
  00684: 00 	movq   xmm6,QWORD PTR [rip+0x16b8]        # 0x1d44
:00039 _ = %3.call x=(%4; 1)                [Vec]
:00040 
  0068c:    	movq   xmm0,xmm6
  00690:    	call   0xfffe733b
  00695:    	mov    QWORD PTR [rbp-0x48],rax
  00699:    	mov    rdi,QWORD PTR [rbp-0x40]
  0069d: 00 	test   rdi,0x7
  006a4:    	jne    0x34b9b
  006aa:    	cmp    DWORD PTR [rdi+0x4],0x25
  006ae:    	jne    0x34b9b
  006b4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe952d],0x26        # 0xfffe9be8
  006bb:    	jne    0x34b9b
  006c1:    	mov    esi,DWORD PTR [rip+0x1689]        # 0x1d50
  006c7:    	cmp    esi,0xffffffff
  006ca:    	je     0x34bb7
  006d0:    	cmp    WORD PTR [rdi+0x2],0x3
  006d5:    	jne    0x6f2
  006db:    	cmp    esi,0x6
  006de:    	jge    0x6f2
  006e4:    	mov    rax,QWORD PTR [rbp-0x48]
  006e8:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006ed:    	jmp    0x757
  006f2:    	sub    rsp,0x30
  006f6:    	movq   QWORD PTR [rsp],xmm2
  006fb:    	movq   QWORD PTR [rsp+0x8],xmm3
  00701:    	movq   QWORD PTR [rsp+0x10],xmm4
  00707:    	movq   QWORD PTR [rsp+0x18],xmm5
  0070d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00713:    	mov    rdx,QWORD PTR [rbp-0x48]
  00717: 57 	movabs rax,0x55573c900dd0
  00721:    	call   rax
  00723:    	movq   xmm2,QWORD PTR [rsp]
  00728:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0072e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00734:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0073a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00740:    	add    rsp,0x30
  00744: 57 	movabs r13,0x55573cfb0510
  0074e:    	test   rax,rax
  00751:    	je     0xfffe720f
:00042 br =>:00087
  00757:    	jmp    0x3509e
:00043 %4 = %2.call y()                     [Vec]
:00044 
  0075c:    	mov    rdi,QWORD PTR [rbp-0x38]
  00760: 00 	test   rdi,0x7
  00767:    	jne    0x34c29
  0076d:    	cmp    DWORD PTR [rdi+0x4],0x25
  00771:    	jne    0x34c29
  00777: 26 	cmp    DWORD PTR [rip+0xfffffffffffe946a],0x26        # 0xfffe9be8
  0077e:    	jne    0x34c29
  00784:    	mov    esi,DWORD PTR [rip+0x15ce]        # 0x1d58
  0078a:    	cmp    esi,0xffffffff
  0078d:    	je     0x34c45
  00793:    	cmp    WORD PTR [rdi+0x2],0x3
  00798:    	jne    0x7b1
  0079e:    	cmp    esi,0x6
  007a1:    	jge    0x7b1
  007a7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007ac:    	jmp    0x7f3
  007b1:    	sub    rsp,0x20
  007b5:    	movq   QWORD PTR [rsp],xmm2
  007ba:    	movq   QWORD PTR [rsp+0x8],xmm3
  007c0:    	movq   QWORD PTR [rsp+0x10],xmm4
  007c6:    	movq   QWORD PTR [rsp+0x18],xmm5
  007cc: 57 	movabs rax,0x55573c900b50
  007d6:    	call   rax
  007d8:    	movq   xmm2,QWORD PTR [rsp]
  007dd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007e3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007e9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007ef:    	add    rsp,0x20
  007f3:    	mov    QWORD PTR [rbp-0x48],rax
:00046 %5 = literal[0.6]
  007f7: 00 	movq   xmm5,QWORD PTR [rip+0x1565]        # 0x1d64
:00047 %3 = %4 < %5                         [Float][Float]
  007ff:    	mov    rdi,QWORD PTR [rbp-0x48]
  00803: 00 	test   rdi,0x1
  0080a:    	jne    0x34ca4
  00810: 00 	test   rdi,0x2
  00817:    	je     0x853
  0081d:    	xorps  xmm6,xmm6
  00820: 00 	movabs rax,0x8000000000000002
  0082a:    	cmp    rdi,rax
  0082d:    	je     0x865
  00833:    	mov    rax,rdi
  00836:    	sar    rax,0x3f
  0083a:    	add    rax,0x2
  0083e:    	and    rdi,0xfffffffffffffffc
  00842:    	or     rdi,rax
  00845:    	rol    rdi,0x3d
  00849:    	movq   xmm6,rdi
  0084e:    	jmp    0x865
  00853:    	call   0xfffe7248
  00858:    	test   rax,rax
  0085b:    	je     0x34ca4
  00861:    	movq   xmm6,xmm0
  00865:    	xor    rax,rax
  00868:    	ucomisd xmm6,xmm5
  0086c:    	setb   al
  00870:    	shl    rax,0x3
  00874:    	or     rax,0x14
  00878:    	mov    QWORD PTR [rbp-0x40],rax
:00048 condnotbr %3 =>:00054
  0087c:    	mov    rax,QWORD PTR [rbp-0x40]
  00880:    	or     rax,0x10
  00884:    	cmp    rax,0x14
  00888:    	je     0x34d57
:00049 %4 = %2.call y()                     [Vec]
:00050 
  0088e:    	mov    rdi,QWORD PTR [rbp-0x38]
  00892: 00 	test   rdi,0x7
  00899:    	jne    0x34cc0
  0089f:    	cmp    DWORD PTR [rdi+0x4],0x25
  008a3:    	jne    0x34cc0
  008a9: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9338],0x26        # 0xfffe9be8
  008b0:    	jne    0x34cc0
  008b6:    	mov    esi,DWORD PTR [rip+0x14b4]        # 0x1d70
  008bc:    	cmp    esi,0xffffffff
  008bf:    	je     0x34cdc
  008c5:    	cmp    WORD PTR [rdi+0x2],0x3
  008ca:    	jne    0x8e3
  008d0:    	cmp    esi,0x6
  008d3:    	jge    0x8e3
  008d9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  008de:    	jmp    0x925
  008e3:    	sub    rsp,0x20
  008e7:    	movq   QWORD PTR [rsp],xmm2
  008ec:    	movq   QWORD PTR [rsp+0x8],xmm3
  008f2:    	movq   QWORD PTR [rsp+0x10],xmm4
  008f8:    	movq   QWORD PTR [rsp+0x18],xmm5
  008fe: 57 	movabs rax,0x55573c900b50
  00908:    	call   rax
  0090a:    	movq   xmm2,QWORD PTR [rsp]
  0090f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00915:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0091b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00921:    	add    rsp,0x20
  00925:    	mov    QWORD PTR [rbp-0x48],rax
:00052 %5 = literal[-0.6]
  00929: 00 	movq   xmm5,QWORD PTR [rip+0x1443]        # 0x1d74
:00053 %3 = %4 > %5                         [Float][Float]
  00931:    	mov    rdi,QWORD PTR [rbp-0x48]
  00935: 00 	test   rdi,0x1
  0093c:    	jne    0x34d3b
  00942: 00 	test   rdi,0x2
  00949:    	je     0x985
  0094f:    	xorps  xmm6,xmm6
  00952: 00 	movabs rax,0x8000000000000002
  0095c:    	cmp    rdi,rax
  0095f:    	je     0x997
  00965:    	mov    rax,rdi
  00968:    	sar    rax,0x3f
  0096c:    	add    rax,0x2
  00970:    	and    rdi,0xfffffffffffffffc
  00974:    	or     rdi,rax
  00977:    	rol    rdi,0x3d
  0097b:    	movq   xmm6,rdi
  00980:    	jmp    0x997
  00985:    	call   0xfffe7248
  0098a:    	test   rax,rax
  0098d:    	je     0x34d3b
  00993:    	movq   xmm6,xmm0
  00997:    	xor    rax,rax
  0099a:    	ucomisd xmm6,xmm5
  0099e:    	seta   al
  009a2:    	shl    rax,0x3
  009a6:    	or     rax,0x14
  009aa:    	mov    QWORD PTR [rbp-0x40],rax
  009ae:    	jmp    0x34d7d
:00054 condnotbr %3 =>:00062
  009b3:    	mov    rax,QWORD PTR [rbp-0x40]
  009b7:    	or     rax,0x10
  009bb:    	cmp    rax,0x14
  009bf:    	je     0xb18
:00055 %3 = 1: i32
  009c5: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00056 %3 = %1.[%3]
  009cd:    	sub    rsp,0x30
  009d1:    	movq   QWORD PTR [rsp],xmm2
  009d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  009dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  009e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  009e8:    	movq   QWORD PTR [rsp+0x20],xmm6
  009ee:    	mov    rdx,QWORD PTR [rbp-0x30]
  009f2:    	mov    rcx,QWORD PTR [rbp-0x40]
  009f6:    	mov    rdi,rbx
  009f9:    	mov    rsi,r12
  009fc: 57 	movabs rax,0x55573c95cc80
  00a06:    	call   rax
  00a08:    	movq   xmm2,QWORD PTR [rsp]
  00a0d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a13:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a19:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a1f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00a25:    	add    rsp,0x30
  00a29: 57 	movabs r13,0x55573cfb0610
  00a33:    	test   rax,rax
  00a36:    	je     0xfffe720f
  00a3c:    	mov    QWORD PTR [rbp-0x40],rax
:00057 %4 = literal[1.0]
  00a40: 00 	movq   xmm6,QWORD PTR [rip+0x133c]        # 0x1d84
:00058 _ = %3.call y=(%4; 1)                [Vec]
:00059 
  00a48:    	movq   xmm0,xmm6
  00a4c:    	call   0xfffe733b
  00a51:    	mov    QWORD PTR [rbp-0x48],rax
  00a55:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a59: 00 	test   rdi,0x7
  00a60:    	jne    0x34da3
  00a66:    	cmp    DWORD PTR [rdi+0x4],0x25
  00a6a:    	jne    0x34da3
  00a70: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9171],0x26        # 0xfffe9be8
  00a77:    	jne    0x34da3
  00a7d:    	mov    esi,DWORD PTR [rip+0x130d]        # 0x1d90
  00a83:    	cmp    esi,0xffffffff
  00a86:    	je     0x34dbf
  00a8c:    	cmp    WORD PTR [rdi+0x2],0x3
  00a91:    	jne    0xaae
  00a97:    	cmp    esi,0x6
  00a9a:    	jge    0xaae
  00aa0:    	mov    rax,QWORD PTR [rbp-0x48]
  00aa4:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00aa9:    	jmp    0xb13
  00aae:    	sub    rsp,0x30
  00ab2:    	movq   QWORD PTR [rsp],xmm2
  00ab7:    	movq   QWORD PTR [rsp+0x8],xmm3
  00abd:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ac3:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ac9:    	movq   QWORD PTR [rsp+0x20],xmm6
  00acf:    	mov    rdx,QWORD PTR [rbp-0x48]
  00ad3: 57 	movabs rax,0x55573c900dd0
  00add:    	call   rax
  00adf:    	movq   xmm2,QWORD PTR [rsp]
  00ae4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00aea:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00af0:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00af6:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00afc:    	add    rsp,0x30
  00b00: 57 	movabs r13,0x55573cfb0640
  00b0a:    	test   rax,rax
  00b0d:    	je     0xfffe720f
:00061 br =>:00087
  00b13:    	jmp    0x350c4
:00062 %4 = %2.call z()                     [Vec]
:00063 
  00b18:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b1c: 00 	test   rdi,0x7
  00b23:    	jne    0x34e31
  00b29:    	cmp    DWORD PTR [rdi+0x4],0x25
  00b2d:    	jne    0x34e31
  00b33: 26 	cmp    DWORD PTR [rip+0xfffffffffffe90ae],0x26        # 0xfffe9be8
  00b3a:    	jne    0x34e31
  00b40:    	mov    esi,DWORD PTR [rip+0x1252]        # 0x1d98
  00b46:    	cmp    esi,0xffffffff
  00b49:    	je     0x34e4d
  00b4f:    	cmp    WORD PTR [rdi+0x2],0x3
  00b54:    	jne    0xb6d
  00b5a:    	cmp    esi,0x6
  00b5d:    	jge    0xb6d
  00b63:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b68:    	jmp    0xbaf
  00b6d:    	sub    rsp,0x20
  00b71:    	movq   QWORD PTR [rsp],xmm2
  00b76:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b7c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b82:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b88: 57 	movabs rax,0x55573c900b50
  00b92:    	call   rax
  00b94:    	movq   xmm2,QWORD PTR [rsp]
  00b99:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b9f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ba5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00bab:    	add    rsp,0x20
  00baf:    	mov    QWORD PTR [rbp-0x48],rax
:00065 %5 = literal[0.6]
  00bb3: 00 	movq   xmm5,QWORD PTR [rip+0x11e9]        # 0x1da4
:00066 %3 = %4 < %5                         [Float][Float]
  00bbb:    	mov    rdi,QWORD PTR [rbp-0x48]
  00bbf: 00 	test   rdi,0x1
  00bc6:    	jne    0x34eac
  00bcc: 00 	test   rdi,0x2
  00bd3:    	je     0xc0f
  00bd9:    	xorps  xmm6,xmm6
  00bdc: 00 	movabs rax,0x8000000000000002
  00be6:    	cmp    rdi,rax
  00be9:    	je     0xc21
  00bef:    	mov    rax,rdi
  00bf2:    	sar    rax,0x3f
  00bf6:    	add    rax,0x2
  00bfa:    	and    rdi,0xfffffffffffffffc
  00bfe:    	or     rdi,rax
  00c01:    	rol    rdi,0x3d
  00c05:    	movq   xmm6,rdi
  00c0a:    	jmp    0xc21
  00c0f:    	call   0xfffe7248
  00c14:    	test   rax,rax
  00c17:    	je     0x34eac
  00c1d:    	movq   xmm6,xmm0
  00c21:    	xor    rax,rax
  00c24:    	ucomisd xmm6,xmm5
  00c28:    	setb   al
  00c2c:    	shl    rax,0x3
  00c30:    	or     rax,0x14
  00c34:    	mov    QWORD PTR [rbp-0x40],rax
:00067 condnotbr %3 =>:00073
  00c38:    	mov    rax,QWORD PTR [rbp-0x40]
  00c3c:    	or     rax,0x10
  00c40:    	cmp    rax,0x14
  00c44:    	je     0x34f5f
:00068 %4 = %2.call z()                     [Vec]
:00069 
  00c4a:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c4e: 00 	test   rdi,0x7
  00c55:    	jne    0x34ec8
  00c5b:    	cmp    DWORD PTR [rdi+0x4],0x25
  00c5f:    	jne    0x34ec8
  00c65: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8f7c],0x26        # 0xfffe9be8
  00c6c:    	jne    0x34ec8
  00c72:    	mov    esi,DWORD PTR [rip+0x1138]        # 0x1db0
  00c78:    	cmp    esi,0xffffffff
  00c7b:    	je     0x34ee4
  00c81:    	cmp    WORD PTR [rdi+0x2],0x3
  00c86:    	jne    0xc9f
  00c8c:    	cmp    esi,0x6
  00c8f:    	jge    0xc9f
  00c95:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c9a:    	jmp    0xce1
  00c9f:    	sub    rsp,0x20
  00ca3:    	movq   QWORD PTR [rsp],xmm2
  00ca8:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cae:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cb4:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cba: 57 	movabs rax,0x55573c900b50
  00cc4:    	call   rax
  00cc6:    	movq   xmm2,QWORD PTR [rsp]
  00ccb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cd1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cd7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cdd:    	add    rsp,0x20
  00ce1:    	mov    QWORD PTR [rbp-0x48],rax
:00071 %5 = literal[-0.6]
  00ce5: 00 	movq   xmm5,QWORD PTR [rip+0x10c7]        # 0x1db4
:00072 %3 = %4 > %5                         [Float][Float]
  00ced:    	mov    rdi,QWORD PTR [rbp-0x48]
  00cf1: 00 	test   rdi,0x1
  00cf8:    	jne    0x34f43
  00cfe: 00 	test   rdi,0x2
  00d05:    	je     0xd41
  00d0b:    	xorps  xmm6,xmm6
  00d0e: 00 	movabs rax,0x8000000000000002
  00d18:    	cmp    rdi,rax
  00d1b:    	je     0xd53
  00d21:    	mov    rax,rdi
  00d24:    	sar    rax,0x3f
  00d28:    	add    rax,0x2
  00d2c:    	and    rdi,0xfffffffffffffffc
  00d30:    	or     rdi,rax
  00d33:    	rol    rdi,0x3d
  00d37:    	movq   xmm6,rdi
  00d3c:    	jmp    0xd53
  00d41:    	call   0xfffe7248
  00d46:    	test   rax,rax
  00d49:    	je     0x34f43
  00d4f:    	movq   xmm6,xmm0
  00d53:    	xor    rax,rax
  00d56:    	ucomisd xmm6,xmm5
  00d5a:    	seta   al
  00d5e:    	shl    rax,0x3
  00d62:    	or     rax,0x14
  00d66:    	mov    QWORD PTR [rbp-0x40],rax
  00d6a:    	jmp    0x34f85
:00073 condnotbr %3 =>:00081
  00d6f:    	mov    rax,QWORD PTR [rbp-0x40]
  00d73:    	or     rax,0x10
  00d77:    	cmp    rax,0x14
  00d7b:    	je     0xed4
:00074 %3 = 1: i32
  00d81: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00075 %3 = %1.[%3]
  00d89:    	sub    rsp,0x30
  00d8d:    	movq   QWORD PTR [rsp],xmm2
  00d92:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d98:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d9e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00da4:    	movq   QWORD PTR [rsp+0x20],xmm6
  00daa:    	mov    rdx,QWORD PTR [rbp-0x30]
  00dae:    	mov    rcx,QWORD PTR [rbp-0x40]
  00db2:    	mov    rdi,rbx
  00db5:    	mov    rsi,r12
  00db8: 57 	movabs rax,0x55573c95cc80
  00dc2:    	call   rax
  00dc4:    	movq   xmm2,QWORD PTR [rsp]
  00dc9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00dcf:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dd5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ddb:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00de1:    	add    rsp,0x30
  00de5: 57 	movabs r13,0x55573cfb0740
  00def:    	test   rax,rax
  00df2:    	je     0xfffe720f
  00df8:    	mov    QWORD PTR [rbp-0x40],rax
:00076 %4 = literal[1.0]
  00dfc: 00 	movq   xmm6,QWORD PTR [rip+0xfc0]        # 0x1dc4
:00077 _ = %3.call z=(%4; 1)                [Vec]
:00078 
  00e04:    	movq   xmm0,xmm6
  00e08:    	call   0xfffe733b
  00e0d:    	mov    QWORD PTR [rbp-0x48],rax
  00e11:    	mov    rdi,QWORD PTR [rbp-0x40]
  00e15: 00 	test   rdi,0x7
  00e1c:    	jne    0x34fab
  00e22:    	cmp    DWORD PTR [rdi+0x4],0x25
  00e26:    	jne    0x34fab
  00e2c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8db5],0x26        # 0xfffe9be8
  00e33:    	jne    0x34fab
  00e39:    	mov    esi,DWORD PTR [rip+0xf91]        # 0x1dd0
  00e3f:    	cmp    esi,0xffffffff
  00e42:    	je     0x34fc7
  00e48:    	cmp    WORD PTR [rdi+0x2],0x3
  00e4d:    	jne    0xe6a
  00e53:    	cmp    esi,0x6
  00e56:    	jge    0xe6a
  00e5c:    	mov    rax,QWORD PTR [rbp-0x48]
  00e60:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e65:    	jmp    0xecf
  00e6a:    	sub    rsp,0x30
  00e6e:    	movq   QWORD PTR [rsp],xmm2
  00e73:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e79:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e7f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e85:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e8b:    	mov    rdx,QWORD PTR [rbp-0x48]
  00e8f: 57 	movabs rax,0x55573c900dd0
  00e99:    	call   rax
  00e9b:    	movq   xmm2,QWORD PTR [rsp]
  00ea0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ea6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00eac:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00eb2:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00eb8:    	add    rsp,0x30
  00ebc: 57 	movabs r13,0x55573cfb0770
  00ec6:    	test   rax,rax
  00ec9:    	je     0xfffe720f
:00080 br =>:00087
  00ecf:    	jmp    0x350ea
:00081 %3 = 1: i32
  00ed4: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00082 %3 = %1.[%3]
  00edc:    	sub    rsp,0x30
  00ee0:    	movq   QWORD PTR [rsp],xmm2
  00ee5:    	movq   QWORD PTR [rsp+0x8],xmm3
  00eeb:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ef1:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ef7:    	movq   QWORD PTR [rsp+0x20],xmm6
  00efd:    	mov    rdx,QWORD PTR [rbp-0x30]
  00f01:    	mov    rcx,QWORD PTR [rbp-0x40]
  00f05:    	mov    rdi,rbx
  00f08:    	mov    rsi,r12
  00f0b: 57 	movabs rax,0x55573c95cc80
  00f15:    	call   rax
  00f17:    	movq   xmm2,QWORD PTR [rsp]
  00f1c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f22:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f28:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f2e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f34:    	add    rsp,0x30
  00f38: 57 	movabs r13,0x55573cfb07b0
  00f42:    	test   rax,rax
  00f45:    	je     0xfffe720f
  00f4b:    	mov    QWORD PTR [rbp-0x40],rax
:00083 %4 = literal[1.0]
  00f4f: 00 	movq   xmm6,QWORD PTR [rip+0xe7d]        # 0x1dd4
:00084 _ = %3.call x=(%4; 1)                [<INVALID>]
:00085 
  00f57: 00 	mov    rdi,0x4
  00f5e: 01 	sub    DWORD PTR [rip+0xe77],0x1        # 0x1ddc
  00f65:    	jne    0x35039
  00f6b:    	mov    rdi,r12
  00f6e:    	mov    esi,DWORD PTR [rbp-0x18]
  00f71:    	mov    rdx,QWORD PTR [rbp-0x28]
  00f75: 57 	movabs rax,0x55573c962b00
  00f7f:    	call   rax
  00f81: 00 	mov    rdi,0x4
  00f88:    	jmp    0x35039
:00087 %3 = 0: i32
  00f8d: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  00f95: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]
  00f9d:    	sub    rsp,0x20
  00fa1:    	movq   QWORD PTR [rsp],xmm2
  00fa6:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fac:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fb2:    	movq   QWORD PTR [rsp+0x18],xmm6
  00fb8:    	mov    rdx,QWORD PTR [rbp-0x30]
  00fbc:    	mov    rcx,QWORD PTR [rbp-0x50]
  00fc0:    	mov    rdi,rbx
  00fc3:    	mov    rsi,r12
  00fc6: 57 	movabs rax,0x55573c95cc80
  00fd0:    	call   rax
  00fd2:    	movq   xmm2,QWORD PTR [rsp]
  00fd7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fdd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fe3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00fe9:    	add    rsp,0x20
  00fed: 57 	movabs r13,0x55573cfb0820
  00ff7:    	test   rax,rax
  00ffa:    	je     0xfffe720f
  01000:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  01004: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]
  0100c:    	sub    rsp,0x20
  01010:    	movq   QWORD PTR [rsp],xmm3
  01015:    	movq   QWORD PTR [rsp+0x8],xmm4
  0101b:    	movq   QWORD PTR [rsp+0x10],xmm6
  01021:    	mov    rdx,QWORD PTR [rbp-0x30]
  01025:    	mov    rcx,QWORD PTR [rbp-0x58]
  01029:    	mov    rdi,rbx
  0102c:    	mov    rsi,r12
  0102f: 57 	movabs rax,0x55573c95cc80
  01039:    	call   rax
  0103b:    	movq   xmm3,QWORD PTR [rsp]
  01040:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01046:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0104c:    	add    rsp,0x20
  01050: 57 	movabs r13,0x55573cfb0840
  0105a:    	test   rax,rax
  0105d:    	je     0xfffe720f
  01063:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
:00093 
  01067:    	mov    rdi,QWORD PTR [rbp-0x50]
  0106b: 00 	test   rdi,0x7
  01072:    	jne    0x35062
  01078:    	cmp    DWORD PTR [rdi+0x4],0x25
  0107c:    	jne    0x35062
  01082: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8b5f],0x26        # 0xfffe9be8
  01089:    	jne    0x35062
  0108f:    	sub    rsp,0x10
  01093:    	movq   QWORD PTR [rsp],xmm3
  01098:    	movq   QWORD PTR [rsp+0x8],xmm4
  0109e:    	mov    rax,QWORD PTR [rbx]
  010a1:    	lea    rdi,[rsp-0x18]
  010a6:    	mov    QWORD PTR [rdi],rax
  010a9:    	mov    QWORD PTR [rbx],rdi
  010ac: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010b5:    	mov    QWORD PTR [rsp-0x38],rcx
  010ba:    	mov    rax,QWORD PTR [rbp-0x50]
  010be:    	mov    QWORD PTR [rsp-0x38],rax
  010c3: 00 	mov    rdi,0x1
  010ca:    	mov    rax,QWORD PTR [rbp-0x58]
  010ce:    	mov    QWORD PTR [rsp-0x40],rax
  010d3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010dc: 09 	movabs rax,0x90000003a
  010e6:    	mov    QWORD PTR [rsp-0x28],rax
  010eb: 57 	movabs r13,0x55573cf94eb0
  010f5:    	call   0xffff0d18
  010fa:    	lea    rdi,[rbp-0x8]
  010fe:    	mov    QWORD PTR [rbx],rdi
  01101:    	movq   xmm3,QWORD PTR [rsp]
  01106:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0110c:    	add    rsp,0x10
  01110: 57 	movabs r13,0x55573cfb0860
  0111a:    	test   rax,rax
  0111d:    	je     0xfffe720f
  01123:    	mov    QWORD PTR [rbp-0x48],rax
:00095 %1.[%3] = %4
  01127:    	sub    rsp,0x10
  0112b:    	movq   QWORD PTR [rsp],xmm3
  01130:    	movq   QWORD PTR [rsp+0x8],xmm4
  01136:    	mov    rdx,QWORD PTR [rbp-0x30]
  0113a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0113e:    	mov    r8,QWORD PTR [rbp-0x48]
  01142:    	mov    rdi,rbx
  01145:    	mov    rsi,r12
  01148: 57 	movabs rax,0x55573c95cd90
  01152:    	call   rax
  01154:    	movq   xmm3,QWORD PTR [rsp]
  01159:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0115f:    	add    rsp,0x10
  01163: 57 	movabs r13,0x55573cfb0880
  0116d:    	test   rax,rax
  01170:    	je     0xfffe720f
:00096 %3 = 0: i32
  01176: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  0117e: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]
  01186:    	sub    rsp,0x10
  0118a:    	movq   QWORD PTR [rsp],xmm3
  0118f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01195:    	mov    rdx,QWORD PTR [rbp-0x30]
  01199:    	mov    rcx,QWORD PTR [rbp-0x50]
  0119d:    	mov    rdi,rbx
  011a0:    	mov    rsi,r12
  011a3: 57 	movabs rax,0x55573c95cc80
  011ad:    	call   rax
  011af:    	movq   xmm3,QWORD PTR [rsp]
  011b4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011ba:    	add    rsp,0x10
  011be: 57 	movabs r13,0x55573cfb08b0
  011c8:    	test   rax,rax
  011cb:    	je     0xfffe720f
  011d1:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
:00100 
  011d5:    	mov    rdi,QWORD PTR [rbp-0x50]
  011d9: 00 	test   rdi,0x7
  011e0:    	jne    0x35071
  011e6:    	cmp    DWORD PTR [rdi+0x4],0x25
  011ea:    	jne    0x35071
  011f0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe89f1],0x26        # 0xfffe9be8
  011f7:    	jne    0x35071
  011fd:    	sub    rsp,0x10
  01201:    	movq   QWORD PTR [rsp],xmm3
  01206:    	movq   QWORD PTR [rsp+0x8],xmm4
  0120c:    	mov    rax,QWORD PTR [rbx]
  0120f:    	lea    rdi,[rsp-0x18]
  01214:    	mov    QWORD PTR [rdi],rax
  01217:    	mov    QWORD PTR [rbx],rdi
  0121a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01223:    	mov    QWORD PTR [rsp-0x38],rcx
  01228:    	mov    rax,QWORD PTR [rbp-0x50]
  0122c:    	mov    QWORD PTR [rsp-0x38],rax
  01231: 00 	mov    rdi,0x0
  01238: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01241: 07 	movabs rax,0x100070000003d
  0124b:    	mov    QWORD PTR [rsp-0x28],rax
  01250: 57 	movabs r13,0x55573cfa76a0
  0125a:    	call   0xfffea4ad
  0125f:    	lea    rdi,[rbp-0x8]
  01263:    	mov    QWORD PTR [rbx],rdi
  01266:    	movq   xmm3,QWORD PTR [rsp]
  0126b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01271:    	add    rsp,0x10
  01275: 57 	movabs r13,0x55573cfb08d0
  0127f:    	test   rax,rax
  01282:    	je     0xfffe720f
  01288:    	mov    QWORD PTR [rbp-0x48],rax
:00102 %1.[%3] = %4
  0128c:    	sub    rsp,0x10
  01290:    	movq   QWORD PTR [rsp],xmm3
  01295:    	movq   QWORD PTR [rsp+0x8],xmm4
  0129b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0129f:    	mov    rcx,QWORD PTR [rbp-0x40]
  012a3:    	mov    r8,QWORD PTR [rbp-0x48]
  012a7:    	mov    rdi,rbx
  012aa:    	mov    rsi,r12
  012ad: 57 	movabs rax,0x55573c95cd90
  012b7:    	call   rax
  012b9:    	movq   xmm3,QWORD PTR [rsp]
  012be:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012c4:    	add    rsp,0x10
  012c8: 57 	movabs r13,0x55573cfb08f0
  012d2:    	test   rax,rax
  012d5:    	je     0xfffe720f
:00103 %3 = 1: i32
  012db: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  012e3: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]
  012eb:    	sub    rsp,0x10
  012ef:    	movq   QWORD PTR [rsp],xmm3
  012f4:    	movq   QWORD PTR [rsp+0x8],xmm4
  012fa:    	mov    rdx,QWORD PTR [rbp-0x30]
  012fe:    	mov    rcx,QWORD PTR [rbp-0x50]
  01302:    	mov    rdi,rbx
  01305:    	mov    rsi,r12
  01308: 57 	movabs rax,0x55573c95cc80
  01312:    	call   rax
  01314:    	movq   xmm3,QWORD PTR [rsp]
  01319:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0131f:    	add    rsp,0x10
  01323: 57 	movabs r13,0x55573cfb0920
  0132d:    	test   rax,rax
  01330:    	je     0xfffe720f
  01336:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  0133a: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]
  01342:    	sub    rsp,0x10
  01346:    	movq   QWORD PTR [rsp],xmm3
  0134b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01351:    	mov    rdx,QWORD PTR [rbp-0x30]
  01355:    	mov    rcx,QWORD PTR [rbp-0x58]
  01359:    	mov    rdi,rbx
  0135c:    	mov    rsi,r12
  0135f: 57 	movabs rax,0x55573c95cc80
  01369:    	call   rax
  0136b:    	movq   xmm3,QWORD PTR [rsp]
  01370:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01376:    	add    rsp,0x10
  0137a: 57 	movabs r13,0x55573cfb0940
  01384:    	test   rax,rax
  01387:    	je     0xfffe720f
  0138d:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
:00109 
  01391:    	mov    rdi,QWORD PTR [rbp-0x50]
  01395: 00 	test   rdi,0x7
  0139c:    	jne    0x35080
  013a2:    	cmp    DWORD PTR [rdi+0x4],0x25
  013a6:    	jne    0x35080
  013ac: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8835],0x26        # 0xfffe9be8
  013b3:    	jne    0x35080
  013b9:    	sub    rsp,0x10
  013bd:    	movq   QWORD PTR [rsp],xmm3
  013c2:    	movq   QWORD PTR [rsp+0x8],xmm4
  013c8:    	mov    rax,QWORD PTR [rbx]
  013cb:    	lea    rdi,[rsp-0x18]
  013d0:    	mov    QWORD PTR [rdi],rax
  013d3:    	mov    QWORD PTR [rbx],rdi
  013d6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013df:    	mov    QWORD PTR [rsp-0x38],rcx
  013e4:    	mov    rax,QWORD PTR [rbp-0x50]
  013e8:    	mov    QWORD PTR [rsp-0x38],rax
  013ed: 00 	mov    rdi,0x1
  013f4:    	mov    rax,QWORD PTR [rbp-0x58]
  013f8:    	mov    QWORD PTR [rsp-0x40],rax
  013fd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01406: 09 	movabs rax,0x90000003a
  01410:    	mov    QWORD PTR [rsp-0x28],rax
  01415: 57 	movabs r13,0x55573cf94eb0
  0141f:    	call   0xffff0d18
  01424:    	lea    rdi,[rbp-0x8]
  01428:    	mov    QWORD PTR [rbx],rdi
  0142b:    	movq   xmm3,QWORD PTR [rsp]
  01430:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01436:    	add    rsp,0x10
  0143a: 57 	movabs r13,0x55573cfb0960
  01444:    	test   rax,rax
  01447:    	je     0xfffe720f
  0144d:    	mov    QWORD PTR [rbp-0x48],rax
:00111 %1.[%3] = %4
  01451:    	sub    rsp,0x10
  01455:    	movq   QWORD PTR [rsp],xmm3
  0145a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01460:    	mov    rdx,QWORD PTR [rbp-0x30]
  01464:    	mov    rcx,QWORD PTR [rbp-0x40]
  01468:    	mov    r8,QWORD PTR [rbp-0x48]
  0146c:    	mov    rdi,rbx
  0146f:    	mov    rsi,r12
  01472: 57 	movabs rax,0x55573c95cd90
  0147c:    	call   rax
  0147e:    	movq   xmm3,QWORD PTR [rsp]
  01483:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01489:    	add    rsp,0x10
  0148d: 57 	movabs r13,0x55573cfb0980
  01497:    	test   rax,rax
  0149a:    	je     0xfffe720f
:00112 %3 = 1: i32
  014a0: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  014a8: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]
  014b0:    	sub    rsp,0x10
  014b4:    	movq   QWORD PTR [rsp],xmm3
  014b9:    	movq   QWORD PTR [rsp+0x8],xmm4
  014bf:    	mov    rdx,QWORD PTR [rbp-0x30]
  014c3:    	mov    rcx,QWORD PTR [rbp-0x50]
  014c7:    	mov    rdi,rbx
  014ca:    	mov    rsi,r12
  014cd: 57 	movabs rax,0x55573c95cc80
  014d7:    	call   rax
  014d9:    	movq   xmm3,QWORD PTR [rsp]
  014de:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014e4:    	add    rsp,0x10
  014e8: 57 	movabs r13,0x55573cfb09b0
  014f2:    	test   rax,rax
  014f5:    	je     0xfffe720f
  014fb:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
:00116 
  014ff:    	mov    rdi,QWORD PTR [rbp-0x50]
  01503: 00 	test   rdi,0x7
  0150a:    	jne    0x3508f
  01510:    	cmp    DWORD PTR [rdi+0x4],0x25
  01514:    	jne    0x3508f
  0151a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe86c7],0x26        # 0xfffe9be8
  01521:    	jne    0x3508f
  01527:    	sub    rsp,0x10
  0152b:    	movq   QWORD PTR [rsp],xmm3
  01530:    	movq   QWORD PTR [rsp+0x8],xmm4
  01536:    	mov    rax,QWORD PTR [rbx]
  01539:    	lea    rdi,[rsp-0x18]
  0153e:    	mov    QWORD PTR [rdi],rax
  01541:    	mov    QWORD PTR [rbx],rdi
  01544: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0154d:    	mov    QWORD PTR [rsp-0x38],rcx
  01552:    	mov    rax,QWORD PTR [rbp-0x50]
  01556:    	mov    QWORD PTR [rsp-0x38],rax
  0155b: 00 	mov    rdi,0x0
  01562: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0156b: 07 	movabs rax,0x100070000003d
  01575:    	mov    QWORD PTR [rsp-0x28],rax
  0157a: 57 	movabs r13,0x55573cfa76a0
  01584:    	call   0xfffea4ad
  01589:    	lea    rdi,[rbp-0x8]
  0158d:    	mov    QWORD PTR [rbx],rdi
  01590:    	movq   xmm3,QWORD PTR [rsp]
  01595:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0159b:    	add    rsp,0x10
  0159f: 57 	movabs r13,0x55573cfb09d0
  015a9:    	test   rax,rax
  015ac:    	je     0xfffe720f
  015b2:    	mov    QWORD PTR [rbp-0x48],rax
:00118 %1.[%3] = %4
  015b6:    	sub    rsp,0x10
  015ba:    	movq   QWORD PTR [rsp],xmm3
  015bf:    	movq   QWORD PTR [rsp+0x8],xmm4
  015c5:    	mov    rdx,QWORD PTR [rbp-0x30]
  015c9:    	mov    rcx,QWORD PTR [rbp-0x40]
  015cd:    	mov    r8,QWORD PTR [rbp-0x48]
  015d1:    	mov    rdi,rbx
  015d4:    	mov    rsi,r12
  015d7: 57 	movabs rax,0x55573c95cd90
  015e1:    	call   rax
  015e3:    	movq   xmm3,QWORD PTR [rsp]
  015e8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015ee:    	add    rsp,0x10
  015f2: 57 	movabs r13,0x55573cfb09f0
  015fc:    	test   rax,rax
  015ff:    	je     0xfffe720f
:00119 %3 = %4
  01605:    	mov    rax,QWORD PTR [rbp-0x48]
  01609:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  0160d:    	mov    rax,QWORD PTR [rbp-0x40]
  01611:    	leave  
  01612:    	ret    
:00087 %3 = 0: i32
  01613: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00088 %5 = 1: i32
  0161b: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00089 %5 = %1.[%5]
  01623:    	sub    rsp,0x20
  01627:    	movq   QWORD PTR [rsp],xmm2
  0162c:    	movq   QWORD PTR [rsp+0x8],xmm3
  01632:    	movq   QWORD PTR [rsp+0x10],xmm4
  01638:    	movq   QWORD PTR [rsp+0x18],xmm6
  0163e:    	mov    rdx,QWORD PTR [rbp-0x30]
  01642:    	mov    rcx,QWORD PTR [rbp-0x50]
  01646:    	mov    rdi,rbx
  01649:    	mov    rsi,r12
  0164c: 57 	movabs rax,0x55573c95cc80
  01656:    	call   rax
  01658:    	movq   xmm2,QWORD PTR [rsp]
  0165d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01663:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01669:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0166f:    	add    rsp,0x20
  01673: 57 	movabs r13,0x55573cfb0820
  0167d:    	test   rax,rax
  01680:    	je     0xfffe720f
  01686:    	mov    QWORD PTR [rbp-0x50],rax
:00090 %6 = 2: i32
  0168a: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00091 %6 = %1.[%6]
  01692:    	sub    rsp,0x20
  01696:    	movq   QWORD PTR [rsp],xmm3
  0169b:    	movq   QWORD PTR [rsp+0x8],xmm4
  016a1:    	movq   QWORD PTR [rsp+0x10],xmm6
  016a7:    	mov    rdx,QWORD PTR [rbp-0x30]
  016ab:    	mov    rcx,QWORD PTR [rbp-0x58]
  016af:    	mov    rdi,rbx
  016b2:    	mov    rsi,r12
  016b5: 57 	movabs rax,0x55573c95cc80
  016bf:    	call   rax
  016c1:    	movq   xmm3,QWORD PTR [rsp]
  016c6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016cc:    	movq   xmm6,QWORD PTR [rsp+0x10]
  016d2:    	add    rsp,0x20
  016d6: 57 	movabs r13,0x55573cfb0840
  016e0:    	test   rax,rax
  016e3:    	je     0xfffe720f
  016e9:    	mov    QWORD PTR [rbp-0x58],rax
:00092 %4 = %5.call vcross(%6; 1)           [Vec]
:00093 
  016ed:    	mov    rdi,QWORD PTR [rbp-0x50]
  016f1: 00 	test   rdi,0x7
  016f8:    	jne    0x35110
  016fe:    	cmp    DWORD PTR [rdi+0x4],0x25
  01702:    	jne    0x35110
  01708: 26 	cmp    DWORD PTR [rip+0xfffffffffffe84d9],0x26        # 0xfffe9be8
  0170f:    	jne    0x35110
  01715:    	sub    rsp,0x10
  01719:    	movq   QWORD PTR [rsp],xmm3
  0171e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01724:    	mov    rax,QWORD PTR [rbx]
  01727:    	lea    rdi,[rsp-0x18]
  0172c:    	mov    QWORD PTR [rdi],rax
  0172f:    	mov    QWORD PTR [rbx],rdi
  01732: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0173b:    	mov    QWORD PTR [rsp-0x38],rcx
  01740:    	mov    rax,QWORD PTR [rbp-0x50]
  01744:    	mov    QWORD PTR [rsp-0x38],rax
  01749: 00 	mov    rdi,0x1
  01750:    	mov    rax,QWORD PTR [rbp-0x58]
  01754:    	mov    QWORD PTR [rsp-0x40],rax
  01759: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01762: 09 	movabs rax,0x90000003a
  0176c:    	mov    QWORD PTR [rsp-0x28],rax
  01771: 57 	movabs r13,0x55573cf94eb0
  0177b:    	call   0xffff0d18
  01780:    	lea    rdi,[rbp-0x8]
  01784:    	mov    QWORD PTR [rbx],rdi
  01787:    	movq   xmm3,QWORD PTR [rsp]
  0178c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01792:    	add    rsp,0x10
  01796: 57 	movabs r13,0x55573cfb0860
  017a0:    	test   rax,rax
  017a3:    	je     0xfffe720f
  017a9:    	mov    QWORD PTR [rbp-0x48],rax
:00095 %1.[%3] = %4
  017ad:    	sub    rsp,0x10
  017b1:    	movq   QWORD PTR [rsp],xmm3
  017b6:    	movq   QWORD PTR [rsp+0x8],xmm4
  017bc:    	mov    rdx,QWORD PTR [rbp-0x30]
  017c0:    	mov    rcx,QWORD PTR [rbp-0x40]
  017c4:    	mov    r8,QWORD PTR [rbp-0x48]
  017c8:    	mov    rdi,rbx
  017cb:    	mov    rsi,r12
  017ce: 57 	movabs rax,0x55573c95cd90
  017d8:    	call   rax
  017da:    	movq   xmm3,QWORD PTR [rsp]
  017df:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017e5:    	add    rsp,0x10
  017e9: 57 	movabs r13,0x55573cfb0880
  017f3:    	test   rax,rax
  017f6:    	je     0xfffe720f
:00096 %3 = 0: i32
  017fc: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00097 %5 = 0: i32
  01804: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00098 %5 = %1.[%5]
  0180c:    	sub    rsp,0x10
  01810:    	movq   QWORD PTR [rsp],xmm3
  01815:    	movq   QWORD PTR [rsp+0x8],xmm4
  0181b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0181f:    	mov    rcx,QWORD PTR [rbp-0x50]
  01823:    	mov    rdi,rbx
  01826:    	mov    rsi,r12
  01829: 57 	movabs rax,0x55573c95cc80
  01833:    	call   rax
  01835:    	movq   xmm3,QWORD PTR [rsp]
  0183a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01840:    	add    rsp,0x10
  01844: 57 	movabs r13,0x55573cfb08b0
  0184e:    	test   rax,rax
  01851:    	je     0xfffe720f
  01857:    	mov    QWORD PTR [rbp-0x50],rax
:00099 %4 = %5.call vnormalize()            [Vec]
:00100 
  0185b:    	mov    rdi,QWORD PTR [rbp-0x50]
  0185f: 00 	test   rdi,0x7
  01866:    	jne    0x3511f
  0186c:    	cmp    DWORD PTR [rdi+0x4],0x25
  01870:    	jne    0x3511f
  01876: 26 	cmp    DWORD PTR [rip+0xfffffffffffe836b],0x26        # 0xfffe9be8
  0187d:    	jne    0x3511f
  01883:    	sub    rsp,0x10
  01887:    	movq   QWORD PTR [rsp],xmm3
  0188c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01892:    	mov    rax,QWORD PTR [rbx]
  01895:    	lea    rdi,[rsp-0x18]
  0189a:    	mov    QWORD PTR [rdi],rax
  0189d:    	mov    QWORD PTR [rbx],rdi
  018a0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018a9:    	mov    QWORD PTR [rsp-0x38],rcx
  018ae:    	mov    rax,QWORD PTR [rbp-0x50]
  018b2:    	mov    QWORD PTR [rsp-0x38],rax
  018b7: 00 	mov    rdi,0x0
  018be: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018c7: 07 	movabs rax,0x100070000003d
  018d1:    	mov    QWORD PTR [rsp-0x28],rax
  018d6: 57 	movabs r13,0x55573cfa76a0
  018e0:    	call   0xfffea4ad
  018e5:    	lea    rdi,[rbp-0x8]
  018e9:    	mov    QWORD PTR [rbx],rdi
  018ec:    	movq   xmm3,QWORD PTR [rsp]
  018f1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018f7:    	add    rsp,0x10
  018fb: 57 	movabs r13,0x55573cfb08d0
  01905:    	test   rax,rax
  01908:    	je     0xfffe720f
  0190e:    	mov    QWORD PTR [rbp-0x48],rax
:00102 %1.[%3] = %4
  01912:    	sub    rsp,0x10
  01916:    	movq   QWORD PTR [rsp],xmm3
  0191b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01921:    	mov    rdx,QWORD PTR [rbp-0x30]
  01925:    	mov    rcx,QWORD PTR [rbp-0x40]
  01929:    	mov    r8,QWORD PTR [rbp-0x48]
  0192d:    	mov    rdi,rbx
  01930:    	mov    rsi,r12
  01933: 57 	movabs rax,0x55573c95cd90
  0193d:    	call   rax
  0193f:    	movq   xmm3,QWORD PTR [rsp]
  01944:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0194a:    	add    rsp,0x10
  0194e: 57 	movabs r13,0x55573cfb08f0
  01958:    	test   rax,rax
  0195b:    	je     0xfffe720f
:00103 %3 = 1: i32
  01961: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00104 %5 = 2: i32
  01969: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00105 %5 = %1.[%5]
  01971:    	sub    rsp,0x10
  01975:    	movq   QWORD PTR [rsp],xmm3
  0197a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01980:    	mov    rdx,QWORD PTR [rbp-0x30]
  01984:    	mov    rcx,QWORD PTR [rbp-0x50]
  01988:    	mov    rdi,rbx
  0198b:    	mov    rsi,r12
  0198e: 57 	movabs rax,0x55573c95cc80
  01998:    	call   rax
  0199a:    	movq   xmm3,QWORD PTR [rsp]
  0199f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019a5:    	add    rsp,0x10
  019a9: 57 	movabs r13,0x55573cfb0920
  019b3:    	test   rax,rax
  019b6:    	je     0xfffe720f
  019bc:    	mov    QWORD PTR [rbp-0x50],rax
:00106 %6 = 0: i32
  019c0: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00107 %6 = %1.[%6]
  019c8:    	sub    rsp,0x10
  019cc:    	movq   QWORD PTR [rsp],xmm3
  019d1:    	movq   QWORD PTR [rsp+0x8],xmm4
  019d7:    	mov    rdx,QWORD PTR [rbp-0x30]
  019db:    	mov    rcx,QWORD PTR [rbp-0x58]
  019df:    	mov    rdi,rbx
  019e2:    	mov    rsi,r12
  019e5: 57 	movabs rax,0x55573c95cc80
  019ef:    	call   rax
  019f1:    	movq   xmm3,QWORD PTR [rsp]
  019f6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019fc:    	add    rsp,0x10
  01a00: 57 	movabs r13,0x55573cfb0940
  01a0a:    	test   rax,rax
  01a0d:    	je     0xfffe720f
  01a13:    	mov    QWORD PTR [rbp-0x58],rax
:00108 %4 = %5.call vcross(%6; 1)           [Vec]
:00109 
  01a17:    	mov    rdi,QWORD PTR [rbp-0x50]
  01a1b: 00 	test   rdi,0x7
  01a22:    	jne    0x3512e
  01a28:    	cmp    DWORD PTR [rdi+0x4],0x25
  01a2c:    	jne    0x3512e
  01a32: 26 	cmp    DWORD PTR [rip+0xfffffffffffe81af],0x26        # 0xfffe9be8
  01a39:    	jne    0x3512e
  01a3f:    	sub    rsp,0x10
  01a43:    	movq   QWORD PTR [rsp],xmm3
  01a48:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a4e:    	mov    rax,QWORD PTR [rbx]
  01a51:    	lea    rdi,[rsp-0x18]
  01a56:    	mov    QWORD PTR [rdi],rax
  01a59:    	mov    QWORD PTR [rbx],rdi
  01a5c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a65:    	mov    QWORD PTR [rsp-0x38],rcx
  01a6a:    	mov    rax,QWORD PTR [rbp-0x50]
  01a6e:    	mov    QWORD PTR [rsp-0x38],rax
  01a73: 00 	mov    rdi,0x1
  01a7a:    	mov    rax,QWORD PTR [rbp-0x58]
  01a7e:    	mov    QWORD PTR [rsp-0x40],rax
  01a83: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a8c: 09 	movabs rax,0x90000003a
  01a96:    	mov    QWORD PTR [rsp-0x28],rax
  01a9b: 57 	movabs r13,0x55573cf94eb0
  01aa5:    	call   0xffff0d18
  01aaa:    	lea    rdi,[rbp-0x8]
  01aae:    	mov    QWORD PTR [rbx],rdi
  01ab1:    	movq   xmm3,QWORD PTR [rsp]
  01ab6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01abc:    	add    rsp,0x10
  01ac0: 57 	movabs r13,0x55573cfb0960
  01aca:    	test   rax,rax
  01acd:    	je     0xfffe720f
  01ad3:    	mov    QWORD PTR [rbp-0x48],rax
:00111 %1.[%3] = %4
  01ad7:    	sub    rsp,0x10
  01adb:    	movq   QWORD PTR [rsp],xmm3
  01ae0:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ae6:    	mov    rdx,QWORD PTR [rbp-0x30]
  01aea:    	mov    rcx,QWORD PTR [rbp-0x40]
  01aee:    	mov    r8,QWORD PTR [rbp-0x48]
  01af2:    	mov    rdi,rbx
  01af5:    	mov    rsi,r12
  01af8: 57 	movabs rax,0x55573c95cd90
  01b02:    	call   rax
  01b04:    	movq   xmm3,QWORD PTR [rsp]
  01b09:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b0f:    	add    rsp,0x10
  01b13: 57 	movabs r13,0x55573cfb0980
  01b1d:    	test   rax,rax
  01b20:    	je     0xfffe720f
:00112 %3 = 1: i32
  01b26: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00113 %5 = 1: i32
  01b2e: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00114 %5 = %1.[%5]
  01b36:    	sub    rsp,0x10
  01b3a:    	movq   QWORD PTR [rsp],xmm3
  01b3f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b45:    	mov    rdx,QWORD PTR [rbp-0x30]
  01b49:    	mov    rcx,QWORD PTR [rbp-0x50]
  01b4d:    	mov    rdi,rbx
  01b50:    	mov    rsi,r12
  01b53: 57 	movabs rax,0x55573c95cc80
  01b5d:    	call   rax
  01b5f:    	movq   xmm3,QWORD PTR [rsp]
  01b64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b6a:    	add    rsp,0x10
  01b6e: 57 	movabs r13,0x55573cfb09b0
  01b78:    	test   rax,rax
  01b7b:    	je     0xfffe720f
  01b81:    	mov    QWORD PTR [rbp-0x50],rax
:00115 %4 = %5.call vnormalize()            [Vec]
:00116 
  01b85:    	mov    rdi,QWORD PTR [rbp-0x50]
  01b89: 00 	test   rdi,0x7
  01b90:    	jne    0x3513d
  01b96:    	cmp    DWORD PTR [rdi+0x4],0x25
  01b9a:    	jne    0x3513d
  01ba0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8041],0x26        # 0xfffe9be8
  01ba7:    	jne    0x3513d
  01bad:    	sub    rsp,0x10
  01bb1:    	movq   QWORD PTR [rsp],xmm3
  01bb6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bbc:    	mov    rax,QWORD PTR [rbx]
  01bbf:    	lea    rdi,[rsp-0x18]
  01bc4:    	mov    QWORD PTR [rdi],rax
  01bc7:    	mov    QWORD PTR [rbx],rdi
  01bca: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bd3:    	mov    QWORD PTR [rsp-0x38],rcx
  01bd8:    	mov    rax,QWORD PTR [rbp-0x50]
  01bdc:    	mov    QWORD PTR [rsp-0x38],rax
  01be1: 00 	mov    rdi,0x0
  01be8: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bf1: 07 	movabs rax,0x100070000003d
  01bfb:    	mov    QWORD PTR [rsp-0x28],rax
  01c00: 57 	movabs r13,0x55573cfa76a0
  01c0a:    	call   0xfffea4ad
  01c0f:    	lea    rdi,[rbp-0x8]
  01c13:    	mov    QWORD PTR [rbx],rdi
  01c16:    	movq   xmm3,QWORD PTR [rsp]
  01c1b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c21:    	add    rsp,0x10
  01c25: 57 	movabs r13,0x55573cfb09d0
  01c2f:    	test   rax,rax
  01c32:    	je     0xfffe720f
  01c38:    	mov    QWORD PTR [rbp-0x48],rax
:00118 %1.[%3] = %4
  01c3c:    	sub    rsp,0x10
  01c40:    	movq   QWORD PTR [rsp],xmm3
  01c45:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c4b:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c4f:    	mov    rcx,QWORD PTR [rbp-0x40]
  01c53:    	mov    r8,QWORD PTR [rbp-0x48]
  01c57:    	mov    rdi,rbx
  01c5a:    	mov    rsi,r12
  01c5d: 57 	movabs rax,0x55573c95cd90
  01c67:    	call   rax
  01c69:    	movq   xmm3,QWORD PTR [rsp]
  01c6e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c74:    	add    rsp,0x10
  01c78: 57 	movabs r13,0x55573cfb09f0
  01c82:    	test   rax,rax
  01c85:    	je     0xfffe720f
:00119 %3 = %4
  01c8b:    	mov    rax,QWORD PTR [rbp-0x48]
  01c8f:    	mov    QWORD PTR [rbp-0x40],rax
:00120 ret %3
  01c93:    	mov    rax,QWORD PTR [rbp-0x40]
  01c97:    	leave  
  01c98:    	ret    
