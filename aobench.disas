==> start whole compile: initialize FuncId(62) self_class:Vec start:[00000] bytecode:0x56343982da60
<== finished compile. elapsed:12.1µs
offset:Pos(12809) code: 159 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x3
  0000e: je     0x4a
  00014: jl     0x1f
  0001a: jmp    0x3d363
  0001f: jmp    0x3d363
  00024: mov    eax,0x3
  00029: sub    eax,edx
  0002b: test   rax,rax
  0002e: je     0x4a
  00034: lea    rdi,[rbp-0x48]
  00038: mov    QWORD PTR [rdi+rax*8],0x0
  00040: sub    rax,0x1
  00044: jne    0x38
  0004a: mov    QWORD PTR [rbp-0x48],0x4
  00052: mov    rdi,QWORD PTR [rbp-0x28]
  00056: test   rdi,0x7
  0005d: jne    0x3d372
  00063: cmp    DWORD PTR [rdi+0x4],0x28
  00067: jne    0x3d372
:00000 init_method reg:5 arg:3 pos:3 req:3 stack_offset:5
:00001 @x: Vec[IvarId(0)] = %1
  0006d: mov    rdi,QWORD PTR [rbp-0x28]
  00071: mov    rax,QWORD PTR [rbp-0x30]
  00075: mov    QWORD PTR [rdi+0x10],rax
:00002 @y: Vec[IvarId(1)] = %2
  00079: mov    rdi,QWORD PTR [rbp-0x28]
  0007d: mov    rax,QWORD PTR [rbp-0x38]
  00081: mov    QWORD PTR [rdi+0x18],rax
:00003 @z: Vec[IvarId(2)] = %3
  00085: mov    rdi,QWORD PTR [rbp-0x28]
  00089: mov    rax,QWORD PTR [rbp-0x40]
  0008d: mov    QWORD PTR [rdi+0x20],rax
:00004 %4 = %3
  00091: mov    rax,QWORD PTR [rbp-0x40]
  00095: mov    QWORD PTR [rbp-0x48],rax
:00005 ret %4
  00099: mov    rax,QWORD PTR [rbp-0x48]
  0009d: leave  
  0009e: ret    
==> start whole compile: vdot FuncId(66) self_class:Vec start:[00000] bytecode:0x563439877e20
<== finished compile. elapsed:27.7µs
offset:Pos(14774) code: 1146 bytes  data: 24 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: je     0x4a
  00014: jl     0x1f
  0001a: jmp    0x3cbd4
  0001f: jmp    0x3cbd4
  00024: mov    eax,0x1
  00029: sub    eax,edx
  0002b: test   rax,rax
  0002e: je     0x4a
  00034: lea    rdi,[rbp-0x38]
  00038: mov    QWORD PTR [rdi+rax*8],0x0
  00040: sub    rax,0x1
  00044: jne    0x38
  0004a: mov    rax,0x4
  00051: mov    QWORD PTR [rbp-0x38],rax
  00055: mov    QWORD PTR [rbp-0x40],rax
  00059: mov    QWORD PTR [rbp-0x48],rax
  0005d: mov    rdi,QWORD PTR [rbp-0x28]
  00061: test   rdi,0x7
  00068: jne    0x3cbe3
  0006e: cmp    DWORD PTR [rdi+0x4],0x28
  00072: jne    0x3cbe3
:00000 init_method reg:5 arg:1 pos:1 req:1 stack_offset:5
:00001 %2 = @x: Vec[IvarId(0)]
  00078: mov    rdi,QWORD PTR [rbp-0x28]
  0007c: mov    rax,QWORD PTR [rdi+0x10]
  00080: mov    QWORD PTR [rbp-0x38],rax
:00002 %3 = %1.call x()                     [Vec]
  00084: mov    rdi,QWORD PTR [rbp-0x30]
  00088: test   rdi,0x7
  0008f: jne    0x3cbf2
  00095: cmp    DWORD PTR [rdi+0x4],0x28
  00099: jne    0x3cbf2
  0009f: cmp    DWORD PTR [rip+0xfffffffffffff19d],0x26        # 0xfffff243
  000a6: jne    0x3cbf2
  000ac: mov    esi,DWORD PTR [rip+0x3cc]        # 0x47e
  000b2: cmp    esi,0xffffffff
  000b5: je     0x3cc01
  000bb: cmp    WORD PTR [rdi+0x2],0x3
  000c0: jne    0xd9
  000c6: cmp    esi,0x6
  000c9: jge    0xd9
  000cf: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000d4: jmp    0xe5
  000d9: movabs rax,0x563437ed0590
  000e3: call   rax
  000e5: mov    QWORD PTR [rbp-0x40],rax
:00003 
:00005 %2 = %2 * %3                         [Float][Float]
  000e9: mov    rdi,QWORD PTR [rbp-0x38]
  000ed: test   rdi,0x1
  000f4: jne    0x3cc2a
  000fa: test   rdi,0x2
  00101: je     0x13d
  00107: xorps  xmm2,xmm2
  0010a: movabs rax,0x8000000000000002
  00114: cmp    rdi,rax
  00117: je     0x14f
  0011d: mov    rax,rdi
  00120: sar    rax,0x3f
  00124: add    rax,0x2
  00128: and    rdi,0xfffffffffffffffc
  0012c: or     rdi,rax
  0012f: rol    rdi,0x3d
  00133: movq   xmm2,rdi
  00138: jmp    0x14f
  0013d: call   0xffffc6de
  00142: test   rax,rax
  00145: je     0x3cc2a
  0014b: movq   xmm2,xmm0
  0014f: mov    rdi,QWORD PTR [rbp-0x40]
  00153: test   rdi,0x1
  0015a: jne    0x3cc39
  00160: test   rdi,0x2
  00167: je     0x1a3
  0016d: xorps  xmm3,xmm3
  00170: movabs rax,0x8000000000000002
  0017a: cmp    rdi,rax
  0017d: je     0x1b5
  00183: mov    rax,rdi
  00186: sar    rax,0x3f
  0018a: add    rax,0x2
  0018e: and    rdi,0xfffffffffffffffc
  00192: or     rdi,rax
  00195: rol    rdi,0x3d
  00199: movq   xmm3,rdi
  0019e: jmp    0x1b5
  001a3: call   0xffffc6de
  001a8: test   rax,rax
  001ab: je     0x3cc39
  001b1: movq   xmm3,xmm0
  001b5: mulsd  xmm2,xmm3
:00006 %3 = @y: Vec[IvarId(1)]
  001b9: mov    rdi,QWORD PTR [rbp-0x28]
  001bd: mov    rax,QWORD PTR [rdi+0x18]
  001c1: mov    QWORD PTR [rbp-0x40],rax
:00007 %4 = %1.call y()                     [Vec]
  001c5: mov    rdi,QWORD PTR [rbp-0x30]
  001c9: test   rdi,0x7
  001d0: jne    0x3cc48
  001d6: cmp    DWORD PTR [rdi+0x4],0x28
  001da: jne    0x3cc48
  001e0: cmp    DWORD PTR [rip+0xfffffffffffff05c],0x26        # 0xfffff243
  001e7: jne    0x3cc48
  001ed: mov    esi,DWORD PTR [rip+0x293]        # 0x486
  001f3: cmp    esi,0xffffffff
  001f6: je     0x3cc64
  001fc: cmp    WORD PTR [rdi+0x2],0x3
  00201: jne    0x21a
  00207: cmp    esi,0x6
  0020a: jge    0x21a
  00210: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00215: jmp    0x238
  0021a: sub    rsp,0x10
  0021e: movq   QWORD PTR [rsp],xmm2
  00223: movabs rax,0x563437ed0590
  0022d: call   rax
  0022f: movq   xmm2,QWORD PTR [rsp]
  00234: add    rsp,0x10
  00238: mov    QWORD PTR [rbp-0x48],rax
:00008 
:00010 %3 = %3 * %4                         [Float][Float]
  0023c: mov    rdi,QWORD PTR [rbp-0x40]
  00240: test   rdi,0x1
  00247: jne    0x3cc9f
  0024d: test   rdi,0x2
  00254: je     0x290
  0025a: xorps  xmm3,xmm3
  0025d: movabs rax,0x8000000000000002
  00267: cmp    rdi,rax
  0026a: je     0x2a2
  00270: mov    rax,rdi
  00273: sar    rax,0x3f
  00277: add    rax,0x2
  0027b: and    rdi,0xfffffffffffffffc
  0027f: or     rdi,rax
  00282: rol    rdi,0x3d
  00286: movq   xmm3,rdi
  0028b: jmp    0x2a2
  00290: call   0xffffc6de
  00295: test   rax,rax
  00298: je     0x3cc9f
  0029e: movq   xmm3,xmm0
  002a2: mov    rdi,QWORD PTR [rbp-0x48]
  002a6: test   rdi,0x1
  002ad: jne    0x3ccbb
  002b3: test   rdi,0x2
  002ba: je     0x2f6
  002c0: xorps  xmm4,xmm4
  002c3: movabs rax,0x8000000000000002
  002cd: cmp    rdi,rax
  002d0: je     0x308
  002d6: mov    rax,rdi
  002d9: sar    rax,0x3f
  002dd: add    rax,0x2
  002e1: and    rdi,0xfffffffffffffffc
  002e5: or     rdi,rax
  002e8: rol    rdi,0x3d
  002ec: movq   xmm4,rdi
  002f1: jmp    0x308
  002f6: call   0xffffc6de
  002fb: test   rax,rax
  002fe: je     0x3ccbb
  00304: movq   xmm4,xmm0
  00308: mulsd  xmm3,xmm4
:00011 %2 = %2 + %3                         [Float][Float]
  0030c: addsd  xmm2,xmm3
:00012 %3 = @z: Vec[IvarId(2)]
  00310: mov    rdi,QWORD PTR [rbp-0x28]
  00314: mov    rax,QWORD PTR [rdi+0x20]
  00318: mov    QWORD PTR [rbp-0x40],rax
:00013 %4 = %1.call z()                     [Vec]
  0031c: mov    rdi,QWORD PTR [rbp-0x30]
  00320: test   rdi,0x7
  00327: jne    0x3ccd7
  0032d: cmp    DWORD PTR [rdi+0x4],0x28
  00331: jne    0x3ccd7
  00337: cmp    DWORD PTR [rip+0xffffffffffffef05],0x26        # 0xfffff243
  0033e: jne    0x3ccd7
  00344: mov    esi,DWORD PTR [rip+0x144]        # 0x48e
  0034a: cmp    esi,0xffffffff
  0034d: je     0x3ccf3
  00353: cmp    WORD PTR [rdi+0x2],0x3
  00358: jne    0x371
  0035e: cmp    esi,0x6
  00361: jge    0x371
  00367: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0036c: jmp    0x38f
  00371: sub    rsp,0x10
  00375: movq   QWORD PTR [rsp],xmm2
  0037a: movabs rax,0x563437ed0590
  00384: call   rax
  00386: movq   xmm2,QWORD PTR [rsp]
  0038b: add    rsp,0x10
  0038f: mov    QWORD PTR [rbp-0x48],rax
:00014 
:00016 %3 = %3 * %4                         [Float][Float]
  00393: mov    rdi,QWORD PTR [rbp-0x40]
  00397: test   rdi,0x1
  0039e: jne    0x3cd2e
  003a4: test   rdi,0x2
  003ab: je     0x3e7
  003b1: xorps  xmm3,xmm3
  003b4: movabs rax,0x8000000000000002
  003be: cmp    rdi,rax
  003c1: je     0x3f9
  003c7: mov    rax,rdi
  003ca: sar    rax,0x3f
  003ce: add    rax,0x2
  003d2: and    rdi,0xfffffffffffffffc
  003d6: or     rdi,rax
  003d9: rol    rdi,0x3d
  003dd: movq   xmm3,rdi
  003e2: jmp    0x3f9
  003e7: call   0xffffc6de
  003ec: test   rax,rax
  003ef: je     0x3cd2e
  003f5: movq   xmm3,xmm0
  003f9: mov    rdi,QWORD PTR [rbp-0x48]
  003fd: test   rdi,0x1
  00404: jne    0x3cd4a
  0040a: test   rdi,0x2
  00411: je     0x44d
  00417: xorps  xmm4,xmm4
  0041a: movabs rax,0x8000000000000002
  00424: cmp    rdi,rax
  00427: je     0x45f
  0042d: mov    rax,rdi
  00430: sar    rax,0x3f
  00434: add    rax,0x2
  00438: and    rdi,0xfffffffffffffffc
  0043c: or     rdi,rax
  0043f: rol    rdi,0x3d
  00443: movq   xmm4,rdi
  00448: jmp    0x45f
  0044d: call   0xffffc6de
  00452: test   rax,rax
  00455: je     0x3cd4a
  0045b: movq   xmm4,xmm0
  0045f: mulsd  xmm3,xmm4
:00017 %2 = %2 + %3                         [Float][Float]
  00463: addsd  xmm2,xmm3
:00018 ret %2
  00467: movq   xmm0,xmm2
  0046b: call   0xffffc7d1
  00470: mov    QWORD PTR [rbp-0x38],rax
  00474: mov    rax,QWORD PTR [rbp-0x38]
  00478: leave  
  00479: ret    
==> start whole compile: intersect FuncId(70) self_class:Sphere start:[00000] bytecode:0x5634398536b0
<== finished compile. elapsed:171.1µs
offset:Pos(16090) code: 7336 bytes  data: 406 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x3c842
  00022:    	jmp    0x3c842
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086: ff 	mov    QWORD PTR [rbp-0x98],rax
  0008d: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00094:    	mov    rdi,QWORD PTR [rbp-0x28]
  00098: 00 	test   rdi,0x7
  0009f:    	jne    0x3c851
  000a5:    	cmp    DWORD PTR [rdi+0x4],0x2a
  000a9:    	jne    0x3c851
:00000 init_method reg:16 arg:2 pos:2 req:2 stack_offset:11
:00001 %9 = %1.call org()                   [Ray]
  000af:    	mov    rdi,QWORD PTR [rbp-0x30]
  000b3: 00 	test   rdi,0x7
  000ba:    	jne    0x3c860
  000c0:    	cmp    DWORD PTR [rdi+0x4],0x2e
  000c4:    	jne    0x3c860
  000ca: 26 	cmp    DWORD PTR [rip+0xffffffffffffec4e],0x26        # 0xffffed1f
  000d1:    	jne    0x3c860
  000d7:    	mov    esi,DWORD PTR [rip+0x1bcf]        # 0x1cac
  000dd:    	cmp    esi,0xffffffff
  000e0:    	je     0x3c86f
  000e6:    	cmp    WORD PTR [rdi+0x2],0x3
  000eb:    	jne    0x104
  000f1:    	cmp    esi,0x6
  000f4:    	jge    0x104
  000fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000ff:    	jmp    0x110
  00104: 34 	movabs rax,0x563437ed0590
  0010e:    	call   rax
  00110:    	mov    QWORD PTR [rbp-0x70],rax
:00002 
:00004 %10 = @center: Sphere[IvarId(0)]
  00114:    	mov    rdi,QWORD PTR [rbp-0x28]
  00118:    	mov    rax,QWORD PTR [rdi+0x10]
  0011c:    	mov    QWORD PTR [rbp-0x78],rax
:00005 %3 = %9.call vsub(%10; 1)            [Vec]
  00120:    	mov    rdi,QWORD PTR [rbp-0x70]
  00124: 00 	test   rdi,0x7
  0012b:    	jne    0x3c898
  00131:    	cmp    DWORD PTR [rdi+0x4],0x28
  00135:    	jne    0x3c898
  0013b: 26 	cmp    DWORD PTR [rip+0xffffffffffffebdd],0x26        # 0xffffed1f
  00142:    	jne    0x3c898
  00148: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00151:    	mov    QWORD PTR [rsp-0x38],rcx
  00156:    	mov    rax,QWORD PTR [rbx]
  00159:    	lea    rdi,[rsp-0x18]
  0015e:    	mov    QWORD PTR [rdi],rax
  00161:    	mov    QWORD PTR [rbx],rdi
  00164:    	mov    rax,QWORD PTR [rbp-0x70]
  00168:    	mov    QWORD PTR [rsp-0x38],rax
  0016d: 00 	mov    rdi,0x1
  00174:    	mov    rax,QWORD PTR [rbp-0x78]
  00178:    	mov    QWORD PTR [rsp-0x40],rax
  0017d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00186: 08 	movabs rax,0x800000040
  00190:    	mov    QWORD PTR [rsp-0x28],rax
  00195: 34 	movabs r13,0x563439872ba0
  0019f:    	call   0xfffff9f2
  001a4:    	lea    rdi,[rbp-0x8]
  001a8:    	mov    QWORD PTR [rbx],rdi
  001ab: 34 	movabs r13,0x563439853720
  001b5:    	test   rax,rax
  001b8:    	je     0xffffc161
  001be:    	mov    QWORD PTR [rbp-0x40],rax
:00006 
:00008 %9 = %1.call dir()                   [Ray]
  001c2:    	mov    rdi,QWORD PTR [rbp-0x30]
  001c6: 00 	test   rdi,0x7
  001cd:    	jne    0x3c8a7
  001d3:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001d7:    	jne    0x3c8a7
  001dd: 26 	cmp    DWORD PTR [rip+0xffffffffffffeb3b],0x26        # 0xffffed1f
  001e4:    	jne    0x3c8a7
  001ea:    	mov    esi,DWORD PTR [rip+0x1ac4]        # 0x1cb4
  001f0:    	cmp    esi,0xffffffff
  001f3:    	je     0x3c8b6
  001f9:    	cmp    WORD PTR [rdi+0x2],0x3
  001fe:    	jne    0x217
  00204:    	cmp    esi,0x6
  00207:    	jge    0x217
  0020d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00212:    	jmp    0x223
  00217: 34 	movabs rax,0x563437ed0590
  00221:    	call   rax
  00223:    	mov    QWORD PTR [rbp-0x70],rax
:00009 
:00011 %4 = %3.call vdot(%9; 1)             [Vec]
  00227:    	mov    rdi,QWORD PTR [rbp-0x40]
  0022b: 00 	test   rdi,0x7
  00232:    	jne    0x3c8df
  00238:    	cmp    DWORD PTR [rdi+0x4],0x28
  0023c:    	jne    0x3c8df
  00242: 26 	cmp    DWORD PTR [rip+0xffffffffffffead6],0x26        # 0xffffed1f
  00249:    	jne    0x3c8df
  0024f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00258:    	mov    QWORD PTR [rsp-0x38],rcx
  0025d:    	mov    rax,QWORD PTR [rbx]
  00260:    	lea    rdi,[rsp-0x18]
  00265:    	mov    QWORD PTR [rdi],rax
  00268:    	mov    QWORD PTR [rbx],rdi
  0026b:    	mov    rax,QWORD PTR [rbp-0x40]
  0026f:    	mov    QWORD PTR [rsp-0x38],rax
  00274: 00 	mov    rdi,0x1
  0027b:    	mov    rax,QWORD PTR [rbp-0x70]
  0027f:    	mov    QWORD PTR [rsp-0x40],rax
  00284: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0028d: 05 	movabs rax,0x500000042
  00297:    	mov    QWORD PTR [rsp-0x28],rax
  0029c: 34 	movabs r13,0x563439877e20
  002a6:    	call   0xfffffa84
  002ab:    	lea    rdi,[rbp-0x8]
  002af:    	mov    QWORD PTR [rbx],rdi
  002b2: 34 	movabs r13,0x563439853780
  002bc:    	test   rax,rax
  002bf:    	je     0xffffc161
  002c5:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %10 = %3
  002c9:    	mov    rax,QWORD PTR [rbp-0x40]
  002cd:    	mov    QWORD PTR [rbp-0x78],rax
:00015 %9 = %3.call vdot(%10; 1)            [Vec]
  002d1:    	mov    rdi,QWORD PTR [rbp-0x40]
  002d5: 00 	test   rdi,0x7
  002dc:    	jne    0x3c8ee
  002e2:    	cmp    DWORD PTR [rdi+0x4],0x28
  002e6:    	jne    0x3c8ee
  002ec: 26 	cmp    DWORD PTR [rip+0xffffffffffffea2c],0x26        # 0xffffed1f
  002f3:    	jne    0x3c8ee
  002f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00302:    	mov    QWORD PTR [rsp-0x38],rcx
  00307:    	mov    rax,QWORD PTR [rbx]
  0030a:    	lea    rdi,[rsp-0x18]
  0030f:    	mov    QWORD PTR [rdi],rax
  00312:    	mov    QWORD PTR [rbx],rdi
  00315:    	mov    rax,QWORD PTR [rbp-0x40]
  00319:    	mov    QWORD PTR [rsp-0x38],rax
  0031e: 00 	mov    rdi,0x1
  00325:    	mov    rax,QWORD PTR [rbp-0x78]
  00329:    	mov    QWORD PTR [rsp-0x40],rax
  0032e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00337: 05 	movabs rax,0x500000042
  00341:    	mov    QWORD PTR [rsp-0x28],rax
  00346: 34 	movabs r13,0x563439877e20
  00350:    	call   0xfffffa84
  00355:    	lea    rdi,[rbp-0x8]
  00359:    	mov    QWORD PTR [rbx],rdi
  0035c: 34 	movabs r13,0x5634398537c0
  00366:    	test   rax,rax
  00369:    	je     0xffffc161
  0036f:    	mov    QWORD PTR [rbp-0x70],rax
:00016 
:00018 %10 = @radius: Sphere[IvarId(1)]
  00373:    	mov    rdi,QWORD PTR [rbp-0x28]
  00377:    	mov    rax,QWORD PTR [rdi+0x18]
  0037b:    	mov    QWORD PTR [rbp-0x78],rax
:00019 %11 = @radius: Sphere[IvarId(1)]
  0037f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00383:    	mov    rax,QWORD PTR [rdi+0x18]
  00387:    	mov    QWORD PTR [rbp-0x80],rax
:00020 %10 = %10 * %11                      [Float][Float]
  0038b:    	mov    rdi,QWORD PTR [rbp-0x78]
  0038f: 00 	test   rdi,0x1
  00396:    	jne    0x3c8fd
  0039c: 00 	test   rdi,0x2
  003a3:    	je     0x3df
  003a9:    	xorps  xmm2,xmm2
  003ac: 00 	movabs rax,0x8000000000000002
  003b6:    	cmp    rdi,rax
  003b9:    	je     0x3f1
  003bf:    	mov    rax,rdi
  003c2:    	sar    rax,0x3f
  003c6:    	add    rax,0x2
  003ca:    	and    rdi,0xfffffffffffffffc
  003ce:    	or     rdi,rax
  003d1:    	rol    rdi,0x3d
  003d5:    	movq   xmm2,rdi
  003da:    	jmp    0x3f1
  003df:    	call   0xffffc1ba
  003e4:    	test   rax,rax
  003e7:    	je     0x3c8fd
  003ed:    	movq   xmm2,xmm0
  003f1:    	mov    rdi,QWORD PTR [rbp-0x80]
  003f5: 00 	test   rdi,0x1
  003fc:    	jne    0x3c90c
  00402: 00 	test   rdi,0x2
  00409:    	je     0x445
  0040f:    	xorps  xmm3,xmm3
  00412: 00 	movabs rax,0x8000000000000002
  0041c:    	cmp    rdi,rax
  0041f:    	je     0x457
  00425:    	mov    rax,rdi
  00428:    	sar    rax,0x3f
  0042c:    	add    rax,0x2
  00430:    	and    rdi,0xfffffffffffffffc
  00434:    	or     rdi,rax
  00437:    	rol    rdi,0x3d
  0043b:    	movq   xmm3,rdi
  00440:    	jmp    0x457
  00445:    	call   0xffffc1ba
  0044a:    	test   rax,rax
  0044d:    	je     0x3c90c
  00453:    	movq   xmm3,xmm0
  00457:    	mulsd  xmm2,xmm3
:00021 %5 = %9 - %10                        [Float][Float]
  0045b:    	mov    rdi,QWORD PTR [rbp-0x70]
  0045f: 00 	test   rdi,0x1
  00466:    	jne    0x3c91b
  0046c: 00 	test   rdi,0x2
  00473:    	je     0x4af
  00479:    	xorps  xmm4,xmm4
  0047c: 00 	movabs rax,0x8000000000000002
  00486:    	cmp    rdi,rax
  00489:    	je     0x4c1
  0048f:    	mov    rax,rdi
  00492:    	sar    rax,0x3f
  00496:    	add    rax,0x2
  0049a:    	and    rdi,0xfffffffffffffffc
  0049e:    	or     rdi,rax
  004a1:    	rol    rdi,0x3d
  004a5:    	movq   xmm4,rdi
  004aa:    	jmp    0x4c1
  004af:    	call   0xffffc1ba
  004b4:    	test   rax,rax
  004b7:    	je     0x3c91b
  004bd:    	movq   xmm4,xmm0
  004c1:    	movq   xmm5,xmm4
  004c5:    	subsd  xmm5,xmm2
:00022 %9 = %4 * %4                         [Float][Float]
  004c9:    	mov    rdi,QWORD PTR [rbp-0x48]
  004cd: 00 	test   rdi,0x1
  004d4:    	jne    0x3c937
  004da: 00 	test   rdi,0x2
  004e1:    	je     0x51d
  004e7:    	xorps  xmm6,xmm6
  004ea: 00 	movabs rax,0x8000000000000002
  004f4:    	cmp    rdi,rax
  004f7:    	je     0x52f
  004fd:    	mov    rax,rdi
  00500:    	sar    rax,0x3f
  00504:    	add    rax,0x2
  00508:    	and    rdi,0xfffffffffffffffc
  0050c:    	or     rdi,rax
  0050f:    	rol    rdi,0x3d
  00513:    	movq   xmm6,rdi
  00518:    	jmp    0x52f
  0051d:    	call   0xffffc1ba
  00522:    	test   rax,rax
  00525:    	je     0x3c937
  0052b:    	movq   xmm6,xmm0
  0052f:    	movq   xmm4,xmm6
  00533:    	mulsd  xmm4,xmm6
:00023 %6 = %9 - %5                         [Float][Float]
  00537:    	movq   xmm7,xmm4
  0053b:    	subsd  xmm7,xmm5
:00024 %9 = literal[0.0]
  0053f: 00 	movq   xmm4,QWORD PTR [rip+0x177f]        # 0x1cc6
  00547: 00 	movabs rax,0x8000000000000002
  00551:    	mov    QWORD PTR [rbp-0x70],rax
:00025 _%9 = %6 > %9                        [Float][Float]
:00026 condnotbr _%9 =>:00114
  00555:    	ucomisd xmm7,xmm4
  00559:    	jbe    0x3df13
:00027 %9 = %4
:00028 %9 = neg %9                          [<INVALID>]
  0055f: 01 	sub    DWORD PTR [rip+0x1768],0x1        # 0x1cce
  00566:    	je     0x3c9a3
  0056c:    	movq   xmm0,xmm6
  00570:    	call   0xffffc2ad
  00575:    	mov    QWORD PTR [rbp-0x70],rax
  00579:    	sub    rsp,0x30
  0057d:    	movq   QWORD PTR [rsp],xmm2
  00582:    	movq   QWORD PTR [rsp+0x8],xmm3
  00588:    	movq   QWORD PTR [rsp+0x10],xmm5
  0058e:    	movq   QWORD PTR [rsp+0x18],xmm6
  00594:    	movq   QWORD PTR [rsp+0x20],xmm7
  0059a:    	mov    rdi,QWORD PTR [rbp-0x70]
  0059e:    	mov    rdx,rdi
  005a1:    	mov    rdi,rbx
  005a4:    	mov    rsi,r12
  005a7: 34 	movabs rax,0x563437f14b70
  005b1:    	call   rax
  005b3:    	movq   xmm2,QWORD PTR [rsp]
  005b8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005be:    	movq   xmm5,QWORD PTR [rsp+0x10]
  005c4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  005ca:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005d0:    	add    rsp,0x30
  005d4: 34 	movabs r13,0x563439853880
  005de:    	test   rax,rax
  005e1:    	je     0xffffc161
  005e7:    	mov    QWORD PTR [rbp-0x70],rax
:00029 %11 = const[Math]                    [<INVALID>]
  005eb: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffe734]        # 0xffffed26
  005f2: 00 	cmp    rax,QWORD PTR [rip+0x16ed]        # 0x1ce6
  005f9:    	jne    0x3c9c5
  005ff: 00 	mov    rax,QWORD PTR [rip+0x16d0]        # 0x1cd6
  00606:    	mov    QWORD PTR [rbp-0x80],rax
:00030 %12 = %6
:00031 %10 = %11.call sqrt(%12; 1)          [<INVALID>]
  0060a: 01 	sub    DWORD PTR [rip+0x16dd],0x1        # 0x1cee
  00611:    	je     0x3ca7e
  00617:    	movq   xmm0,xmm7
  0061b:    	call   0xffffc2ad
  00620: ff 	mov    QWORD PTR [rbp-0x88],rax
  00627:    	sub    rsp,0x20
  0062b:    	movq   QWORD PTR [rsp],xmm5
  00630:    	movq   QWORD PTR [rsp+0x8],xmm6
  00636:    	movq   QWORD PTR [rsp+0x10],xmm7
  0063c:    	mov    rdi,QWORD PTR [rbp-0x80]
  00640: 34 	movabs rax,0x563437f53600
  0064a:    	call   rax
  0064c:    	mov    r15d,eax
  0064f: 00 	cmp    r15d,DWORD PTR [rip+0x16a0]        # 0x1cf6
  00656:    	jne    0x3caa0
  0065c:    	mov    eax,DWORD PTR [rip+0xffffffffffffe6bd]        # 0xffffed1f
  00662:    	cmp    DWORD PTR [rip+0x168a],eax        # 0x1cf2
  00668:    	jne    0x3caa0
  0066e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00677:    	mov    QWORD PTR [rsp-0x38],rcx
  0067c:    	mov    rax,QWORD PTR [rbx]
  0067f:    	lea    rdi,[rsp-0x18]
  00684:    	mov    QWORD PTR [rdi],rax
  00687:    	mov    QWORD PTR [rbx],rdi
  0068a:    	mov    rax,QWORD PTR [rbp-0x80]
  0068e:    	mov    QWORD PTR [rsp-0x38],rax
  00693: 00 	mov    rdi,0x1
  0069a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  006a1:    	mov    QWORD PTR [rsp-0x40],rax
  006a6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006af: 00 	movabs rax,0x0
  006b9:    	mov    QWORD PTR [rsp-0x28],rax
  006be: 00 	movabs r13,0x0
  006c8:    	call   0xffffc126
  006cd:    	lea    rdi,[rbp-0x8]
  006d1:    	mov    QWORD PTR [rbx],rdi
  006d4:    	movq   xmm5,QWORD PTR [rsp]
  006d9:    	movq   xmm6,QWORD PTR [rsp+0x8]
  006df:    	movq   xmm7,QWORD PTR [rsp+0x10]
  006e5:    	add    rsp,0x20
  006e9:    	test   rax,rax
  006ec:    	je     0x3cb0c
  006f2:    	mov    QWORD PTR [rbp-0x78],rax
:00032 
:00034 %7 = %9 - %10                        [<INVALID>][<INVALID>]
  006f6: 01 	sub    DWORD PTR [rip+0x15fd],0x1        # 0x1cfa
  006fd:    	je     0x3cb44
  00703:    	mov    rdi,QWORD PTR [rbp-0x70]
  00707:    	mov    rsi,QWORD PTR [rbp-0x78]
  0070b:    	sub    rsp,0x20
  0070f:    	movq   QWORD PTR [rsp],xmm5
  00714:    	movq   QWORD PTR [rsp+0x8],xmm6
  0071a:    	movq   QWORD PTR [rsp+0x10],xmm7
  00720:    	mov    rdx,rdi
  00723:    	mov    rcx,rsi
  00726:    	mov    rdi,rbx
  00729:    	mov    rsi,r12
  0072c: 34 	movabs rax,0x563437f16ba0
  00736:    	call   rax
  00738:    	movq   xmm5,QWORD PTR [rsp]
  0073d:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00743:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00749:    	add    rsp,0x20
  0074d: 34 	movabs r13,0x5634398538e0
  00757:    	test   rax,rax
  0075a:    	je     0xffffc161
  00760:    	mov    QWORD PTR [rbp-0x60],rax
:00035 %9 = literal[0.0]
  00764: 00 	movq   xmm2,QWORD PTR [rip+0x159a]        # 0x1d06
  0076c: 00 	movabs rax,0x8000000000000002
  00776:    	mov    QWORD PTR [rbp-0x70],rax
:00036 _%9 = %7 > %9                        [<INVALID>][<INVALID>]
:00037 condnotbr _%9 =>:00113
  0077a:    	mov    rdi,QWORD PTR [rbp-0x60]
  0077e:    	mov    rsi,QWORD PTR [rbp-0x70]
  00782: 00 	test   rdi,0x1
  00789:    	je     0x3cb66
  0078f: 00 	test   rsi,0x1
  00796:    	je     0x3cb66
  0079c:    	cmp    rdi,rsi
  0079f:    	jle    0x3de7a
:00038 %9 = %2.call t()                     [<INVALID>]
  007a5: 01 	sub    DWORD PTR [rip+0x1562],0x1        # 0x1d0e
  007ac:    	je     0x3cbd8
  007b2:    	sub    rsp,0x20
  007b6:    	movq   QWORD PTR [rsp],xmm5
  007bb:    	movq   QWORD PTR [rsp+0x8],xmm6
  007c1:    	movq   QWORD PTR [rsp+0x10],xmm7
  007c7:    	mov    rdi,QWORD PTR [rbp-0x38]
  007cb: 34 	movabs rax,0x563437f53600
  007d5:    	call   rax
  007d7:    	mov    r15d,eax
  007da: 00 	cmp    r15d,DWORD PTR [rip+0x1535]        # 0x1d16
  007e1:    	jne    0x3cbfa
  007e7:    	mov    eax,DWORD PTR [rip+0xffffffffffffe532]        # 0xffffed1f
  007ed:    	cmp    DWORD PTR [rip+0x151f],eax        # 0x1d12
  007f3:    	jne    0x3cbfa
  007f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00802:    	mov    QWORD PTR [rsp-0x38],rcx
  00807:    	mov    rax,QWORD PTR [rbx]
  0080a:    	lea    rdi,[rsp-0x18]
  0080f:    	mov    QWORD PTR [rdi],rax
  00812:    	mov    QWORD PTR [rbx],rdi
  00815:    	mov    rax,QWORD PTR [rbp-0x38]
  00819:    	mov    QWORD PTR [rsp-0x38],rax
  0081e: 00 	mov    rdi,0x0
  00825: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0082e: 00 	movabs rax,0x0
  00838:    	mov    QWORD PTR [rsp-0x28],rax
  0083d: 00 	movabs r13,0x0
  00847:    	call   0xffffc126
  0084c:    	lea    rdi,[rbp-0x8]
  00850:    	mov    QWORD PTR [rbx],rdi
  00853:    	movq   xmm5,QWORD PTR [rsp]
  00858:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0085e:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00864:    	add    rsp,0x20
  00868:    	test   rax,rax
  0086b:    	je     0x3cc66
  00871:    	mov    QWORD PTR [rbp-0x70],rax
:00039 
:00041 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00042 condnotbr _%9 =>:00113
  00875:    	mov    rdi,QWORD PTR [rbp-0x60]
  00879:    	mov    rsi,QWORD PTR [rbp-0x70]
  0087d: 00 	test   rdi,0x1
  00884:    	je     0x3cc75
  0088a: 00 	test   rsi,0x1
  00891:    	je     0x3cc75
  00897:    	cmp    rdi,rsi
  0089a:    	jge    0x3dead
:00043 _ = %2.call t=(%7; 1)                [<INVALID>]
  008a0: 01 	sub    DWORD PTR [rip+0x1473],0x1        # 0x1d1a
  008a7:    	je     0x3cce7
  008ad:    	sub    rsp,0x20
  008b1:    	movq   QWORD PTR [rsp],xmm5
  008b6:    	movq   QWORD PTR [rsp+0x8],xmm6
  008bc:    	movq   QWORD PTR [rsp+0x10],xmm7
  008c2:    	mov    rdi,QWORD PTR [rbp-0x38]
  008c6: 34 	movabs rax,0x563437f53600
  008d0:    	call   rax
  008d2:    	mov    r15d,eax
  008d5: 00 	cmp    r15d,DWORD PTR [rip+0x1446]        # 0x1d22
  008dc:    	jne    0x3cd09
  008e2:    	mov    eax,DWORD PTR [rip+0xffffffffffffe437]        # 0xffffed1f
  008e8:    	cmp    DWORD PTR [rip+0x1430],eax        # 0x1d1e
  008ee:    	jne    0x3cd09
  008f4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008fd:    	mov    QWORD PTR [rsp-0x38],rcx
  00902:    	mov    rax,QWORD PTR [rbx]
  00905:    	lea    rdi,[rsp-0x18]
  0090a:    	mov    QWORD PTR [rdi],rax
  0090d:    	mov    QWORD PTR [rbx],rdi
  00910:    	mov    rax,QWORD PTR [rbp-0x38]
  00914:    	mov    QWORD PTR [rsp-0x38],rax
  00919: 00 	mov    rdi,0x1
  00920:    	mov    rax,QWORD PTR [rbp-0x60]
  00924:    	mov    QWORD PTR [rsp-0x40],rax
  00929: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00932: 00 	movabs rax,0x0
  0093c:    	mov    QWORD PTR [rsp-0x28],rax
  00941: 00 	movabs r13,0x0
  0094b:    	call   0xffffc126
  00950:    	lea    rdi,[rbp-0x8]
  00954:    	mov    QWORD PTR [rbx],rdi
  00957:    	movq   xmm5,QWORD PTR [rsp]
  0095c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00962:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00968:    	add    rsp,0x20
  0096c:    	test   rax,rax
  0096f:    	je     0x3cd75
:00044 
:00046 %9 = literal[true]
  00975: 00 	mov    rax,0x1c
  0097c:    	mov    QWORD PTR [rbp-0x70],rax
:00047 _ = %2.call hit=(%9; 1)              [<INVALID>]
  00980: 01 	sub    DWORD PTR [rip+0x139f],0x1        # 0x1d26
  00987:    	je     0x3cdad
  0098d:    	sub    rsp,0x20
  00991:    	movq   QWORD PTR [rsp],xmm5
  00996:    	movq   QWORD PTR [rsp+0x8],xmm6
  0099c:    	movq   QWORD PTR [rsp+0x10],xmm7
  009a2:    	mov    rdi,QWORD PTR [rbp-0x38]
  009a6: 34 	movabs rax,0x563437f53600
  009b0:    	call   rax
  009b2:    	mov    r15d,eax
  009b5: 00 	cmp    r15d,DWORD PTR [rip+0x1372]        # 0x1d2e
  009bc:    	jne    0x3cdcf
  009c2:    	mov    eax,DWORD PTR [rip+0xffffffffffffe357]        # 0xffffed1f
  009c8:    	cmp    DWORD PTR [rip+0x135c],eax        # 0x1d2a
  009ce:    	jne    0x3cdcf
  009d4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009dd:    	mov    QWORD PTR [rsp-0x38],rcx
  009e2:    	mov    rax,QWORD PTR [rbx]
  009e5:    	lea    rdi,[rsp-0x18]
  009ea:    	mov    QWORD PTR [rdi],rax
  009ed:    	mov    QWORD PTR [rbx],rdi
  009f0:    	mov    rax,QWORD PTR [rbp-0x38]
  009f4:    	mov    QWORD PTR [rsp-0x38],rax
  009f9: 00 	mov    rdi,0x1
  00a00:    	mov    rax,QWORD PTR [rbp-0x70]
  00a04:    	mov    QWORD PTR [rsp-0x40],rax
  00a09: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a12: 00 	movabs rax,0x0
  00a1c:    	mov    QWORD PTR [rsp-0x28],rax
  00a21: 00 	movabs r13,0x0
  00a2b:    	call   0xffffc126
  00a30:    	lea    rdi,[rbp-0x8]
  00a34:    	mov    QWORD PTR [rbx],rdi
  00a37:    	movq   xmm5,QWORD PTR [rsp]
  00a3c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00a42:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00a48:    	add    rsp,0x20
  00a4c:    	test   rax,rax
  00a4f:    	je     0x3ce3b
:00048 
:00050 %10 = const[Vec]                     [<INVALID>]
  00a55: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffe2ca]        # 0xffffed26
  00a5c: 00 	cmp    rax,QWORD PTR [rip+0x12e3]        # 0x1d46
  00a63:    	jne    0x3ce4a
  00a69: 00 	mov    rax,QWORD PTR [rip+0x12c6]        # 0x1d36
  00a70:    	mov    QWORD PTR [rbp-0x78],rax
:00051 %12 = %1.call org()                  [<INVALID>]
  00a74: 01 	sub    DWORD PTR [rip+0x12d3],0x1        # 0x1d4e
  00a7b:    	je     0x3cee3
  00a81:    	sub    rsp,0x20
  00a85:    	movq   QWORD PTR [rsp],xmm5
  00a8a:    	movq   QWORD PTR [rsp+0x8],xmm6
  00a90:    	movq   QWORD PTR [rsp+0x10],xmm7
  00a96:    	mov    rdi,QWORD PTR [rbp-0x30]
  00a9a: 34 	movabs rax,0x563437f53600
  00aa4:    	call   rax
  00aa6:    	mov    r15d,eax
  00aa9: 00 	cmp    r15d,DWORD PTR [rip+0x12a6]        # 0x1d56
  00ab0:    	jne    0x3cf05
  00ab6:    	mov    eax,DWORD PTR [rip+0xffffffffffffe263]        # 0xffffed1f
  00abc:    	cmp    DWORD PTR [rip+0x1290],eax        # 0x1d52
  00ac2:    	jne    0x3cf05
  00ac8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ad1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ad6:    	mov    rax,QWORD PTR [rbx]
  00ad9:    	lea    rdi,[rsp-0x18]
  00ade:    	mov    QWORD PTR [rdi],rax
  00ae1:    	mov    QWORD PTR [rbx],rdi
  00ae4:    	mov    rax,QWORD PTR [rbp-0x30]
  00ae8:    	mov    QWORD PTR [rsp-0x38],rax
  00aed: 00 	mov    rdi,0x0
  00af4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00afd: 00 	movabs rax,0x0
  00b07:    	mov    QWORD PTR [rsp-0x28],rax
  00b0c: 00 	movabs r13,0x0
  00b16:    	call   0xffffc126
  00b1b:    	lea    rdi,[rbp-0x8]
  00b1f:    	mov    QWORD PTR [rbx],rdi
  00b22:    	movq   xmm5,QWORD PTR [rsp]
  00b27:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00b2d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00b33:    	add    rsp,0x20
  00b37:    	test   rax,rax
  00b3a:    	je     0x3cf71
  00b40: ff 	mov    QWORD PTR [rbp-0x88],rax
:00052 
:00054 %11 = %12.call x()                   [<INVALID>]
  00b47: 01 	sub    DWORD PTR [rip+0x120c],0x1        # 0x1d5a
  00b4e:    	je     0x3cfa9
  00b54:    	sub    rsp,0x20
  00b58:    	movq   QWORD PTR [rsp],xmm5
  00b5d:    	movq   QWORD PTR [rsp+0x8],xmm6
  00b63:    	movq   QWORD PTR [rsp+0x10],xmm7
  00b69: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00b70: 34 	movabs rax,0x563437f53600
  00b7a:    	call   rax
  00b7c:    	mov    r15d,eax
  00b7f: 00 	cmp    r15d,DWORD PTR [rip+0x11dc]        # 0x1d62
  00b86:    	jne    0x3cfcb
  00b8c:    	mov    eax,DWORD PTR [rip+0xffffffffffffe18d]        # 0xffffed1f
  00b92:    	cmp    DWORD PTR [rip+0x11c6],eax        # 0x1d5e
  00b98:    	jne    0x3cfcb
  00b9e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ba7:    	mov    QWORD PTR [rsp-0x38],rcx
  00bac:    	mov    rax,QWORD PTR [rbx]
  00baf:    	lea    rdi,[rsp-0x18]
  00bb4:    	mov    QWORD PTR [rdi],rax
  00bb7:    	mov    QWORD PTR [rbx],rdi
  00bba: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00bc1:    	mov    QWORD PTR [rsp-0x38],rax
  00bc6: 00 	mov    rdi,0x0
  00bcd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00bd6: 00 	movabs rax,0x0
  00be0:    	mov    QWORD PTR [rsp-0x28],rax
  00be5: 00 	movabs r13,0x0
  00bef:    	call   0xffffc126
  00bf4:    	lea    rdi,[rbp-0x8]
  00bf8:    	mov    QWORD PTR [rbx],rdi
  00bfb:    	movq   xmm5,QWORD PTR [rsp]
  00c00:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00c06:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00c0c:    	add    rsp,0x20
  00c10:    	test   rax,rax
  00c13:    	je     0x3d03a
  00c19:    	mov    QWORD PTR [rbp-0x80],rax
:00055 
:00057 %13 = %1.call dir()                  [<INVALID>]
  00c1d: 01 	sub    DWORD PTR [rip+0x1142],0x1        # 0x1d66
  00c24:    	je     0x3d072
  00c2a:    	sub    rsp,0x20
  00c2e:    	movq   QWORD PTR [rsp],xmm5
  00c33:    	movq   QWORD PTR [rsp+0x8],xmm6
  00c39:    	movq   QWORD PTR [rsp+0x10],xmm7
  00c3f:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c43: 34 	movabs rax,0x563437f53600
  00c4d:    	call   rax
  00c4f:    	mov    r15d,eax
  00c52: 00 	cmp    r15d,DWORD PTR [rip+0x1115]        # 0x1d6e
  00c59:    	jne    0x3d094
  00c5f:    	mov    eax,DWORD PTR [rip+0xffffffffffffe0ba]        # 0xffffed1f
  00c65:    	cmp    DWORD PTR [rip+0x10ff],eax        # 0x1d6a
  00c6b:    	jne    0x3d094
  00c71: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c7a:    	mov    QWORD PTR [rsp-0x38],rcx
  00c7f:    	mov    rax,QWORD PTR [rbx]
  00c82:    	lea    rdi,[rsp-0x18]
  00c87:    	mov    QWORD PTR [rdi],rax
  00c8a:    	mov    QWORD PTR [rbx],rdi
  00c8d:    	mov    rax,QWORD PTR [rbp-0x30]
  00c91:    	mov    QWORD PTR [rsp-0x38],rax
  00c96: 00 	mov    rdi,0x0
  00c9d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ca6: 00 	movabs rax,0x0
  00cb0:    	mov    QWORD PTR [rsp-0x28],rax
  00cb5: 00 	movabs r13,0x0
  00cbf:    	call   0xffffc126
  00cc4:    	lea    rdi,[rbp-0x8]
  00cc8:    	mov    QWORD PTR [rbx],rdi
  00ccb:    	movq   xmm5,QWORD PTR [rsp]
  00cd0:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00cd6:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00cdc:    	add    rsp,0x20
  00ce0:    	test   rax,rax
  00ce3:    	je     0x3d100
  00ce9: ff 	mov    QWORD PTR [rbp-0x90],rax
:00058 
:00060 %12 = %13.call x()                   [<INVALID>]
  00cf0: 01 	sub    DWORD PTR [rip+0x107b],0x1        # 0x1d72
  00cf7:    	je     0x3d138
  00cfd:    	sub    rsp,0x20
  00d01:    	movq   QWORD PTR [rsp],xmm5
  00d06:    	movq   QWORD PTR [rsp+0x8],xmm6
  00d0c:    	movq   QWORD PTR [rsp+0x10],xmm7
  00d12: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00d19: 34 	movabs rax,0x563437f53600
  00d23:    	call   rax
  00d25:    	mov    r15d,eax
  00d28: 00 	cmp    r15d,DWORD PTR [rip+0x104b]        # 0x1d7a
  00d2f:    	jne    0x3d15a
  00d35:    	mov    eax,DWORD PTR [rip+0xffffffffffffdfe4]        # 0xffffed1f
  00d3b:    	cmp    DWORD PTR [rip+0x1035],eax        # 0x1d76
  00d41:    	jne    0x3d15a
  00d47: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d50:    	mov    QWORD PTR [rsp-0x38],rcx
  00d55:    	mov    rax,QWORD PTR [rbx]
  00d58:    	lea    rdi,[rsp-0x18]
  00d5d:    	mov    QWORD PTR [rdi],rax
  00d60:    	mov    QWORD PTR [rbx],rdi
  00d63: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00d6a:    	mov    QWORD PTR [rsp-0x38],rax
  00d6f: 00 	mov    rdi,0x0
  00d76: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d7f: 00 	movabs rax,0x0
  00d89:    	mov    QWORD PTR [rsp-0x28],rax
  00d8e: 00 	movabs r13,0x0
  00d98:    	call   0xffffc126
  00d9d:    	lea    rdi,[rbp-0x8]
  00da1:    	mov    QWORD PTR [rbx],rdi
  00da4:    	movq   xmm5,QWORD PTR [rsp]
  00da9:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00daf:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00db5:    	add    rsp,0x20
  00db9:    	test   rax,rax
  00dbc:    	je     0x3d1c9
  00dc2: ff 	mov    QWORD PTR [rbp-0x88],rax
:00061 
:00063 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00dc9: 01 	sub    DWORD PTR [rip+0xfae],0x1        # 0x1d7e
  00dd0:    	je     0x3d201
  00dd6: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00ddd:    	mov    rsi,QWORD PTR [rbp-0x60]
  00de1:    	sub    rsp,0x20
  00de5:    	movq   QWORD PTR [rsp],xmm5
  00dea:    	movq   QWORD PTR [rsp+0x8],xmm6
  00df0:    	movq   QWORD PTR [rsp+0x10],xmm7
  00df6:    	mov    rdx,rdi
  00df9:    	mov    rcx,rsi
  00dfc:    	mov    rdi,rbx
  00dff:    	mov    rsi,r12
  00e02: 34 	movabs rax,0x563437f17b80
  00e0c:    	call   rax
  00e0e:    	movq   xmm5,QWORD PTR [rsp]
  00e13:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e19:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e1f:    	add    rsp,0x20
  00e23: 34 	movabs r13,0x563439853ab0
  00e2d:    	test   rax,rax
  00e30:    	je     0xffffc161
  00e36: ff 	mov    QWORD PTR [rbp-0x88],rax
:00064 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00e3d: 01 	sub    DWORD PTR [rip+0xf3e],0x1        # 0x1d82
  00e44:    	je     0x3d24c
  00e4a:    	mov    rdi,QWORD PTR [rbp-0x80]
  00e4e: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00e55:    	sub    rsp,0x20
  00e59:    	movq   QWORD PTR [rsp],xmm5
  00e5e:    	movq   QWORD PTR [rsp+0x8],xmm6
  00e64:    	movq   QWORD PTR [rsp+0x10],xmm7
  00e6a:    	mov    rdx,rdi
  00e6d:    	mov    rcx,rsi
  00e70:    	mov    rdi,rbx
  00e73:    	mov    rsi,r12
  00e76: 34 	movabs rax,0x563437f15c00
  00e80:    	call   rax
  00e82:    	movq   xmm5,QWORD PTR [rsp]
  00e87:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e8d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e93:    	add    rsp,0x20
  00e97: 34 	movabs r13,0x563439853ac0
  00ea1:    	test   rax,rax
  00ea4:    	je     0xffffc161
  00eaa:    	mov    QWORD PTR [rbp-0x80],rax
:00065 %13 = %1.call org()                  [<INVALID>]
  00eae: 01 	sub    DWORD PTR [rip+0xed1],0x1        # 0x1d86
  00eb5:    	je     0x3d297
  00ebb:    	sub    rsp,0x20
  00ebf:    	movq   QWORD PTR [rsp],xmm5
  00ec4:    	movq   QWORD PTR [rsp+0x8],xmm6
  00eca:    	movq   QWORD PTR [rsp+0x10],xmm7
  00ed0:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ed4: 34 	movabs rax,0x563437f53600
  00ede:    	call   rax
  00ee0:    	mov    r15d,eax
  00ee3: 00 	cmp    r15d,DWORD PTR [rip+0xea4]        # 0x1d8e
  00eea:    	jne    0x3d2b9
  00ef0:    	mov    eax,DWORD PTR [rip+0xffffffffffffde29]        # 0xffffed1f
  00ef6:    	cmp    DWORD PTR [rip+0xe8e],eax        # 0x1d8a
  00efc:    	jne    0x3d2b9
  00f02: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f0b:    	mov    QWORD PTR [rsp-0x38],rcx
  00f10:    	mov    rax,QWORD PTR [rbx]
  00f13:    	lea    rdi,[rsp-0x18]
  00f18:    	mov    QWORD PTR [rdi],rax
  00f1b:    	mov    QWORD PTR [rbx],rdi
  00f1e:    	mov    rax,QWORD PTR [rbp-0x30]
  00f22:    	mov    QWORD PTR [rsp-0x38],rax
  00f27: 00 	mov    rdi,0x0
  00f2e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f37: 00 	movabs rax,0x0
  00f41:    	mov    QWORD PTR [rsp-0x28],rax
  00f46: 00 	movabs r13,0x0
  00f50:    	call   0xffffc126
  00f55:    	lea    rdi,[rbp-0x8]
  00f59:    	mov    QWORD PTR [rbx],rdi
  00f5c:    	movq   xmm5,QWORD PTR [rsp]
  00f61:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00f67:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00f6d:    	add    rsp,0x20
  00f71:    	test   rax,rax
  00f74:    	je     0x3d325
  00f7a: ff 	mov    QWORD PTR [rbp-0x90],rax
:00066 
:00068 %12 = %13.call y()                   [<INVALID>]
  00f81: 01 	sub    DWORD PTR [rip+0xe0a],0x1        # 0x1d92
  00f88:    	je     0x3d35d
  00f8e:    	sub    rsp,0x20
  00f92:    	movq   QWORD PTR [rsp],xmm5
  00f97:    	movq   QWORD PTR [rsp+0x8],xmm6
  00f9d:    	movq   QWORD PTR [rsp+0x10],xmm7
  00fa3: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00faa: 34 	movabs rax,0x563437f53600
  00fb4:    	call   rax
  00fb6:    	mov    r15d,eax
  00fb9: 00 	cmp    r15d,DWORD PTR [rip+0xdda]        # 0x1d9a
  00fc0:    	jne    0x3d37f
  00fc6:    	mov    eax,DWORD PTR [rip+0xffffffffffffdd53]        # 0xffffed1f
  00fcc:    	cmp    DWORD PTR [rip+0xdc4],eax        # 0x1d96
  00fd2:    	jne    0x3d37f
  00fd8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fe1:    	mov    QWORD PTR [rsp-0x38],rcx
  00fe6:    	mov    rax,QWORD PTR [rbx]
  00fe9:    	lea    rdi,[rsp-0x18]
  00fee:    	mov    QWORD PTR [rdi],rax
  00ff1:    	mov    QWORD PTR [rbx],rdi
  00ff4: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00ffb:    	mov    QWORD PTR [rsp-0x38],rax
  01000: 00 	mov    rdi,0x0
  01007: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01010: 00 	movabs rax,0x0
  0101a:    	mov    QWORD PTR [rsp-0x28],rax
  0101f: 00 	movabs r13,0x0
  01029:    	call   0xffffc126
  0102e:    	lea    rdi,[rbp-0x8]
  01032:    	mov    QWORD PTR [rbx],rdi
  01035:    	movq   xmm5,QWORD PTR [rsp]
  0103a:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01040:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01046:    	add    rsp,0x20
  0104a:    	test   rax,rax
  0104d:    	je     0x3d3ee
  01053: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = %1.call dir()                  [<INVALID>]
  0105a: 01 	sub    DWORD PTR [rip+0xd3d],0x1        # 0x1d9e
  01061:    	je     0x3d426
  01067:    	sub    rsp,0x20
  0106b:    	movq   QWORD PTR [rsp],xmm5
  01070:    	movq   QWORD PTR [rsp+0x8],xmm6
  01076:    	movq   QWORD PTR [rsp+0x10],xmm7
  0107c:    	mov    rdi,QWORD PTR [rbp-0x30]
  01080: 34 	movabs rax,0x563437f53600
  0108a:    	call   rax
  0108c:    	mov    r15d,eax
  0108f: 00 	cmp    r15d,DWORD PTR [rip+0xd10]        # 0x1da6
  01096:    	jne    0x3d448
  0109c:    	mov    eax,DWORD PTR [rip+0xffffffffffffdc7d]        # 0xffffed1f
  010a2:    	cmp    DWORD PTR [rip+0xcfa],eax        # 0x1da2
  010a8:    	jne    0x3d448
  010ae: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010b7:    	mov    QWORD PTR [rsp-0x38],rcx
  010bc:    	mov    rax,QWORD PTR [rbx]
  010bf:    	lea    rdi,[rsp-0x18]
  010c4:    	mov    QWORD PTR [rdi],rax
  010c7:    	mov    QWORD PTR [rbx],rdi
  010ca:    	mov    rax,QWORD PTR [rbp-0x30]
  010ce:    	mov    QWORD PTR [rsp-0x38],rax
  010d3: 00 	mov    rdi,0x0
  010da: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010e3: 00 	movabs rax,0x0
  010ed:    	mov    QWORD PTR [rsp-0x28],rax
  010f2: 00 	movabs r13,0x0
  010fc:    	call   0xffffc126
  01101:    	lea    rdi,[rbp-0x8]
  01105:    	mov    QWORD PTR [rbx],rdi
  01108:    	movq   xmm5,QWORD PTR [rsp]
  0110d:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01113:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01119:    	add    rsp,0x20
  0111d:    	test   rax,rax
  01120:    	je     0x3d4b4
  01126: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 
:00074 %13 = %14.call y()                   [<INVALID>]
  0112d: 01 	sub    DWORD PTR [rip+0xc76],0x1        # 0x1daa
  01134:    	je     0x3d4ec
  0113a:    	sub    rsp,0x20
  0113e:    	movq   QWORD PTR [rsp],xmm5
  01143:    	movq   QWORD PTR [rsp+0x8],xmm6
  01149:    	movq   QWORD PTR [rsp+0x10],xmm7
  0114f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01156: 34 	movabs rax,0x563437f53600
  01160:    	call   rax
  01162:    	mov    r15d,eax
  01165: 00 	cmp    r15d,DWORD PTR [rip+0xc46]        # 0x1db2
  0116c:    	jne    0x3d50e
  01172:    	mov    eax,DWORD PTR [rip+0xffffffffffffdba7]        # 0xffffed1f
  01178:    	cmp    DWORD PTR [rip+0xc30],eax        # 0x1dae
  0117e:    	jne    0x3d50e
  01184: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0118d:    	mov    QWORD PTR [rsp-0x38],rcx
  01192:    	mov    rax,QWORD PTR [rbx]
  01195:    	lea    rdi,[rsp-0x18]
  0119a:    	mov    QWORD PTR [rdi],rax
  0119d:    	mov    QWORD PTR [rbx],rdi
  011a0: ff 	mov    rax,QWORD PTR [rbp-0x98]
  011a7:    	mov    QWORD PTR [rsp-0x38],rax
  011ac: 00 	mov    rdi,0x0
  011b3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011bc: 00 	movabs rax,0x0
  011c6:    	mov    QWORD PTR [rsp-0x28],rax
  011cb: 00 	movabs r13,0x0
  011d5:    	call   0xffffc126
  011da:    	lea    rdi,[rbp-0x8]
  011de:    	mov    QWORD PTR [rbx],rdi
  011e1:    	movq   xmm5,QWORD PTR [rsp]
  011e6:    	movq   xmm6,QWORD PTR [rsp+0x8]
  011ec:    	movq   xmm7,QWORD PTR [rsp+0x10]
  011f2:    	add    rsp,0x20
  011f6:    	test   rax,rax
  011f9:    	je     0x3d57d
  011ff: ff 	mov    QWORD PTR [rbp-0x90],rax
:00075 
:00077 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  01206: 01 	sub    DWORD PTR [rip+0xba9],0x1        # 0x1db6
  0120d:    	je     0x3d5b5
  01213: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0121a:    	mov    rsi,QWORD PTR [rbp-0x60]
  0121e:    	sub    rsp,0x20
  01222:    	movq   QWORD PTR [rsp],xmm5
  01227:    	movq   QWORD PTR [rsp+0x8],xmm6
  0122d:    	movq   QWORD PTR [rsp+0x10],xmm7
  01233:    	mov    rdx,rdi
  01236:    	mov    rcx,rsi
  01239:    	mov    rdi,rbx
  0123c:    	mov    rsi,r12
  0123f: 34 	movabs rax,0x563437f17b80
  01249:    	call   rax
  0124b:    	movq   xmm5,QWORD PTR [rsp]
  01250:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01256:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0125c:    	add    rsp,0x20
  01260: 34 	movabs r13,0x563439853b90
  0126a:    	test   rax,rax
  0126d:    	je     0xffffc161
  01273: ff 	mov    QWORD PTR [rbp-0x90],rax
:00078 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  0127a: 01 	sub    DWORD PTR [rip+0xb39],0x1        # 0x1dba
  01281:    	je     0x3d600
  01287: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0128e: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  01295:    	sub    rsp,0x20
  01299:    	movq   QWORD PTR [rsp],xmm5
  0129e:    	movq   QWORD PTR [rsp+0x8],xmm6
  012a4:    	movq   QWORD PTR [rsp+0x10],xmm7
  012aa:    	mov    rdx,rdi
  012ad:    	mov    rcx,rsi
  012b0:    	mov    rdi,rbx
  012b3:    	mov    rsi,r12
  012b6: 34 	movabs rax,0x563437f15c00
  012c0:    	call   rax
  012c2:    	movq   xmm5,QWORD PTR [rsp]
  012c7:    	movq   xmm6,QWORD PTR [rsp+0x8]
  012cd:    	movq   xmm7,QWORD PTR [rsp+0x10]
  012d3:    	add    rsp,0x20
  012d7: 34 	movabs r13,0x563439853ba0
  012e1:    	test   rax,rax
  012e4:    	je     0xffffc161
  012ea: ff 	mov    QWORD PTR [rbp-0x88],rax
:00079 %14 = %1.call org()                  [<INVALID>]
  012f1: 01 	sub    DWORD PTR [rip+0xac6],0x1        # 0x1dbe
  012f8:    	je     0x3d64b
  012fe:    	sub    rsp,0x20
  01302:    	movq   QWORD PTR [rsp],xmm5
  01307:    	movq   QWORD PTR [rsp+0x8],xmm6
  0130d:    	movq   QWORD PTR [rsp+0x10],xmm7
  01313:    	mov    rdi,QWORD PTR [rbp-0x30]
  01317: 34 	movabs rax,0x563437f53600
  01321:    	call   rax
  01323:    	mov    r15d,eax
  01326: 00 	cmp    r15d,DWORD PTR [rip+0xa99]        # 0x1dc6
  0132d:    	jne    0x3d66d
  01333:    	mov    eax,DWORD PTR [rip+0xffffffffffffd9e6]        # 0xffffed1f
  01339:    	cmp    DWORD PTR [rip+0xa83],eax        # 0x1dc2
  0133f:    	jne    0x3d66d
  01345: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0134e:    	mov    QWORD PTR [rsp-0x38],rcx
  01353:    	mov    rax,QWORD PTR [rbx]
  01356:    	lea    rdi,[rsp-0x18]
  0135b:    	mov    QWORD PTR [rdi],rax
  0135e:    	mov    QWORD PTR [rbx],rdi
  01361:    	mov    rax,QWORD PTR [rbp-0x30]
  01365:    	mov    QWORD PTR [rsp-0x38],rax
  0136a: 00 	mov    rdi,0x0
  01371: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0137a: 00 	movabs rax,0x0
  01384:    	mov    QWORD PTR [rsp-0x28],rax
  01389: 00 	movabs r13,0x0
  01393:    	call   0xffffc126
  01398:    	lea    rdi,[rbp-0x8]
  0139c:    	mov    QWORD PTR [rbx],rdi
  0139f:    	movq   xmm5,QWORD PTR [rsp]
  013a4:    	movq   xmm6,QWORD PTR [rsp+0x8]
  013aa:    	movq   xmm7,QWORD PTR [rsp+0x10]
  013b0:    	add    rsp,0x20
  013b4:    	test   rax,rax
  013b7:    	je     0x3d6d9
  013bd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 
:00082 %13 = %14.call z()                   [<INVALID>]
  013c4: 01 	sub    DWORD PTR [rip+0x9ff],0x1        # 0x1dca
  013cb:    	je     0x3d711
  013d1:    	sub    rsp,0x20
  013d5:    	movq   QWORD PTR [rsp],xmm5
  013da:    	movq   QWORD PTR [rsp+0x8],xmm6
  013e0:    	movq   QWORD PTR [rsp+0x10],xmm7
  013e6: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  013ed: 34 	movabs rax,0x563437f53600
  013f7:    	call   rax
  013f9:    	mov    r15d,eax
  013fc: 00 	cmp    r15d,DWORD PTR [rip+0x9cf]        # 0x1dd2
  01403:    	jne    0x3d733
  01409:    	mov    eax,DWORD PTR [rip+0xffffffffffffd910]        # 0xffffed1f
  0140f:    	cmp    DWORD PTR [rip+0x9b9],eax        # 0x1dce
  01415:    	jne    0x3d733
  0141b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01424:    	mov    QWORD PTR [rsp-0x38],rcx
  01429:    	mov    rax,QWORD PTR [rbx]
  0142c:    	lea    rdi,[rsp-0x18]
  01431:    	mov    QWORD PTR [rdi],rax
  01434:    	mov    QWORD PTR [rbx],rdi
  01437: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0143e:    	mov    QWORD PTR [rsp-0x38],rax
  01443: 00 	mov    rdi,0x0
  0144a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01453: 00 	movabs rax,0x0
  0145d:    	mov    QWORD PTR [rsp-0x28],rax
  01462: 00 	movabs r13,0x0
  0146c:    	call   0xffffc126
  01471:    	lea    rdi,[rbp-0x8]
  01475:    	mov    QWORD PTR [rbx],rdi
  01478:    	movq   xmm5,QWORD PTR [rsp]
  0147d:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01483:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01489:    	add    rsp,0x20
  0148d:    	test   rax,rax
  01490:    	je     0x3d7a2
  01496: ff 	mov    QWORD PTR [rbp-0x90],rax
:00083 
:00085 %15 = %1.call dir()                  [<INVALID>]
  0149d: 01 	sub    DWORD PTR [rip+0x932],0x1        # 0x1dd6
  014a4:    	je     0x3d7da
  014aa:    	sub    rsp,0x20
  014ae:    	movq   QWORD PTR [rsp],xmm5
  014b3:    	movq   QWORD PTR [rsp+0x8],xmm6
  014b9:    	movq   QWORD PTR [rsp+0x10],xmm7
  014bf:    	mov    rdi,QWORD PTR [rbp-0x30]
  014c3: 34 	movabs rax,0x563437f53600
  014cd:    	call   rax
  014cf:    	mov    r15d,eax
  014d2: 00 	cmp    r15d,DWORD PTR [rip+0x905]        # 0x1dde
  014d9:    	jne    0x3d7fc
  014df:    	mov    eax,DWORD PTR [rip+0xffffffffffffd83a]        # 0xffffed1f
  014e5:    	cmp    DWORD PTR [rip+0x8ef],eax        # 0x1dda
  014eb:    	jne    0x3d7fc
  014f1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014fa:    	mov    QWORD PTR [rsp-0x38],rcx
  014ff:    	mov    rax,QWORD PTR [rbx]
  01502:    	lea    rdi,[rsp-0x18]
  01507:    	mov    QWORD PTR [rdi],rax
  0150a:    	mov    QWORD PTR [rbx],rdi
  0150d:    	mov    rax,QWORD PTR [rbp-0x30]
  01511:    	mov    QWORD PTR [rsp-0x38],rax
  01516: 00 	mov    rdi,0x0
  0151d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01526: 00 	movabs rax,0x0
  01530:    	mov    QWORD PTR [rsp-0x28],rax
  01535: 00 	movabs r13,0x0
  0153f:    	call   0xffffc126
  01544:    	lea    rdi,[rbp-0x8]
  01548:    	mov    QWORD PTR [rbx],rdi
  0154b:    	movq   xmm5,QWORD PTR [rsp]
  01550:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01556:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0155c:    	add    rsp,0x20
  01560:    	test   rax,rax
  01563:    	je     0x3d868
  01569: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00086 
:00088 %14 = %15.call z()                   [<INVALID>]
  01570: 01 	sub    DWORD PTR [rip+0x86b],0x1        # 0x1de2
  01577:    	je     0x3d8a0
  0157d:    	sub    rsp,0x20
  01581:    	movq   QWORD PTR [rsp],xmm5
  01586:    	movq   QWORD PTR [rsp+0x8],xmm6
  0158c:    	movq   QWORD PTR [rsp+0x10],xmm7
  01592: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01599: 34 	movabs rax,0x563437f53600
  015a3:    	call   rax
  015a5:    	mov    r15d,eax
  015a8: 00 	cmp    r15d,DWORD PTR [rip+0x83b]        # 0x1dea
  015af:    	jne    0x3d8c2
  015b5:    	mov    eax,DWORD PTR [rip+0xffffffffffffd764]        # 0xffffed1f
  015bb:    	cmp    DWORD PTR [rip+0x825],eax        # 0x1de6
  015c1:    	jne    0x3d8c2
  015c7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015d0:    	mov    QWORD PTR [rsp-0x38],rcx
  015d5:    	mov    rax,QWORD PTR [rbx]
  015d8:    	lea    rdi,[rsp-0x18]
  015dd:    	mov    QWORD PTR [rdi],rax
  015e0:    	mov    QWORD PTR [rbx],rdi
  015e3: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  015ea:    	mov    QWORD PTR [rsp-0x38],rax
  015ef: 00 	mov    rdi,0x0
  015f6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015ff: 00 	movabs rax,0x0
  01609:    	mov    QWORD PTR [rsp-0x28],rax
  0160e: 00 	movabs r13,0x0
  01618:    	call   0xffffc126
  0161d:    	lea    rdi,[rbp-0x8]
  01621:    	mov    QWORD PTR [rbx],rdi
  01624:    	movq   xmm5,QWORD PTR [rsp]
  01629:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0162f:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01635:    	add    rsp,0x20
  01639:    	test   rax,rax
  0163c:    	je     0x3d931
  01642: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 
:00091 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01649: 01 	sub    DWORD PTR [rip+0x79e],0x1        # 0x1dee
  01650:    	je     0x3d969
  01656: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0165d:    	mov    rsi,QWORD PTR [rbp-0x60]
  01661:    	sub    rsp,0x20
  01665:    	movq   QWORD PTR [rsp],xmm5
  0166a:    	movq   QWORD PTR [rsp+0x8],xmm6
  01670:    	movq   QWORD PTR [rsp+0x10],xmm7
  01676:    	mov    rdx,rdi
  01679:    	mov    rcx,rsi
  0167c:    	mov    rdi,rbx
  0167f:    	mov    rsi,r12
  01682: 34 	movabs rax,0x563437f17b80
  0168c:    	call   rax
  0168e:    	movq   xmm5,QWORD PTR [rsp]
  01693:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01699:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0169f:    	add    rsp,0x20
  016a3: 34 	movabs r13,0x563439853c70
  016ad:    	test   rax,rax
  016b0:    	je     0xffffc161
  016b6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00092 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  016bd: 01 	sub    DWORD PTR [rip+0x72e],0x1        # 0x1df2
  016c4:    	je     0x3d9b4
  016ca: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  016d1: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  016d8:    	sub    rsp,0x20
  016dc:    	movq   QWORD PTR [rsp],xmm5
  016e1:    	movq   QWORD PTR [rsp+0x8],xmm6
  016e7:    	movq   QWORD PTR [rsp+0x10],xmm7
  016ed:    	mov    rdx,rdi
  016f0:    	mov    rcx,rsi
  016f3:    	mov    rdi,rbx
  016f6:    	mov    rsi,r12
  016f9: 34 	movabs rax,0x563437f15c00
  01703:    	call   rax
  01705:    	movq   xmm5,QWORD PTR [rsp]
  0170a:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01710:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01716:    	add    rsp,0x20
  0171a: 34 	movabs r13,0x563439853c80
  01724:    	test   rax,rax
  01727:    	je     0xffffc161
  0172d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00093 %9 = %10.call new(%11; 3)            [<INVALID>]
  01734: 01 	sub    DWORD PTR [rip+0x6bb],0x1        # 0x1df6
  0173b:    	je     0x3d9ff
  01741:    	sub    rsp,0x20
  01745:    	movq   QWORD PTR [rsp],xmm5
  0174a:    	movq   QWORD PTR [rsp+0x8],xmm6
  01750:    	movq   QWORD PTR [rsp+0x10],xmm7
  01756:    	mov    rdi,QWORD PTR [rbp-0x78]
  0175a: 34 	movabs rax,0x563437f53600
  01764:    	call   rax
  01766:    	mov    r15d,eax
  01769: 00 	cmp    r15d,DWORD PTR [rip+0x68e]        # 0x1dfe
  01770:    	jne    0x3da21
  01776:    	mov    eax,DWORD PTR [rip+0xffffffffffffd5a3]        # 0xffffed1f
  0177c:    	cmp    DWORD PTR [rip+0x678],eax        # 0x1dfa
  01782:    	jne    0x3da21
  01788: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01791:    	mov    QWORD PTR [rsp-0x38],rcx
  01796:    	mov    rax,QWORD PTR [rbx]
  01799:    	lea    rdi,[rsp-0x18]
  0179e:    	mov    QWORD PTR [rdi],rax
  017a1:    	mov    QWORD PTR [rbx],rdi
  017a4:    	mov    rax,QWORD PTR [rbp-0x78]
  017a8:    	mov    QWORD PTR [rsp-0x38],rax
  017ad: 00 	mov    rdi,0x3
  017b4:    	mov    rax,QWORD PTR [rbp-0x80]
  017b8:    	mov    QWORD PTR [rsp-0x40],rax
  017bd: ff 	mov    rax,QWORD PTR [rbp-0x88]
  017c4:    	mov    QWORD PTR [rsp-0x48],rax
  017c9: ff 	mov    rax,QWORD PTR [rbp-0x90]
  017d0:    	mov    QWORD PTR [rsp-0x50],rax
  017d5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017de: 00 	movabs rax,0x0
  017e8:    	mov    QWORD PTR [rsp-0x28],rax
  017ed: 00 	movabs r13,0x0
  017f7:    	call   0xffffc126
  017fc:    	lea    rdi,[rbp-0x8]
  01800:    	mov    QWORD PTR [rbx],rdi
  01803:    	movq   xmm5,QWORD PTR [rsp]
  01808:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0180e:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01814:    	add    rsp,0x20
  01818:    	test   rax,rax
  0181b:    	je     0x3da8d
  01821:    	mov    QWORD PTR [rbp-0x70],rax
:00094 
:00096 _ = %2.call pl=(%9; 1)               [<INVALID>]
  01825: 01 	sub    DWORD PTR [rip+0x5d6],0x1        # 0x1e02
  0182c:    	je     0x3dac5
  01832:    	sub    rsp,0x20
  01836:    	movq   QWORD PTR [rsp],xmm5
  0183b:    	movq   QWORD PTR [rsp+0x8],xmm6
  01841:    	movq   QWORD PTR [rsp+0x10],xmm7
  01847:    	mov    rdi,QWORD PTR [rbp-0x38]
  0184b: 34 	movabs rax,0x563437f53600
  01855:    	call   rax
  01857:    	mov    r15d,eax
  0185a: 00 	cmp    r15d,DWORD PTR [rip+0x5a9]        # 0x1e0a
  01861:    	jne    0x3dae7
  01867:    	mov    eax,DWORD PTR [rip+0xffffffffffffd4b2]        # 0xffffed1f
  0186d:    	cmp    DWORD PTR [rip+0x593],eax        # 0x1e06
  01873:    	jne    0x3dae7
  01879: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01882:    	mov    QWORD PTR [rsp-0x38],rcx
  01887:    	mov    rax,QWORD PTR [rbx]
  0188a:    	lea    rdi,[rsp-0x18]
  0188f:    	mov    QWORD PTR [rdi],rax
  01892:    	mov    QWORD PTR [rbx],rdi
  01895:    	mov    rax,QWORD PTR [rbp-0x38]
  01899:    	mov    QWORD PTR [rsp-0x38],rax
  0189e: 00 	mov    rdi,0x1
  018a5:    	mov    rax,QWORD PTR [rbp-0x70]
  018a9:    	mov    QWORD PTR [rsp-0x40],rax
  018ae: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018b7: 00 	movabs rax,0x0
  018c1:    	mov    QWORD PTR [rsp-0x28],rax
  018c6: 00 	movabs r13,0x0
  018d0:    	call   0xffffc126
  018d5:    	lea    rdi,[rbp-0x8]
  018d9:    	mov    QWORD PTR [rbx],rdi
  018dc:    	movq   xmm5,QWORD PTR [rsp]
  018e1:    	movq   xmm6,QWORD PTR [rsp+0x8]
  018e7:    	movq   xmm7,QWORD PTR [rsp+0x10]
  018ed:    	add    rsp,0x20
  018f1:    	test   rax,rax
  018f4:    	je     0x3db53
:00097 
:00099 %9 = %2.call pl()                    [<INVALID>]
  018fa: 01 	sub    DWORD PTR [rip+0x50d],0x1        # 0x1e0e
  01901:    	je     0x3db8b
  01907:    	sub    rsp,0x20
  0190b:    	movq   QWORD PTR [rsp],xmm5
  01910:    	movq   QWORD PTR [rsp+0x8],xmm6
  01916:    	movq   QWORD PTR [rsp+0x10],xmm7
  0191c:    	mov    rdi,QWORD PTR [rbp-0x38]
  01920: 34 	movabs rax,0x563437f53600
  0192a:    	call   rax
  0192c:    	mov    r15d,eax
  0192f: 00 	cmp    r15d,DWORD PTR [rip+0x4e0]        # 0x1e16
  01936:    	jne    0x3dbad
  0193c:    	mov    eax,DWORD PTR [rip+0xffffffffffffd3dd]        # 0xffffed1f
  01942:    	cmp    DWORD PTR [rip+0x4ca],eax        # 0x1e12
  01948:    	jne    0x3dbad
  0194e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01957:    	mov    QWORD PTR [rsp-0x38],rcx
  0195c:    	mov    rax,QWORD PTR [rbx]
  0195f:    	lea    rdi,[rsp-0x18]
  01964:    	mov    QWORD PTR [rdi],rax
  01967:    	mov    QWORD PTR [rbx],rdi
  0196a:    	mov    rax,QWORD PTR [rbp-0x38]
  0196e:    	mov    QWORD PTR [rsp-0x38],rax
  01973: 00 	mov    rdi,0x0
  0197a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01983: 00 	movabs rax,0x0
  0198d:    	mov    QWORD PTR [rsp-0x28],rax
  01992: 00 	movabs r13,0x0
  0199c:    	call   0xffffc126
  019a1:    	lea    rdi,[rbp-0x8]
  019a5:    	mov    QWORD PTR [rbx],rdi
  019a8:    	movq   xmm5,QWORD PTR [rsp]
  019ad:    	movq   xmm6,QWORD PTR [rsp+0x8]
  019b3:    	movq   xmm7,QWORD PTR [rsp+0x10]
  019b9:    	add    rsp,0x20
  019bd:    	test   rax,rax
  019c0:    	je     0x3dc19
  019c6:    	mov    QWORD PTR [rbp-0x70],rax
:00100 
:00102 %10 = @center: <INVALID>[IvarId(0)]
  019ca:    	mov    rdi,QWORD PTR [rbp-0x28]
  019ce:    	sub    rsp,0x20
  019d2:    	movq   QWORD PTR [rsp],xmm5
  019d7:    	movq   QWORD PTR [rsp+0x8],xmm6
  019dd:    	movq   QWORD PTR [rsp+0x10],xmm7
  019e3: 00 	mov    rsi,0x90
  019ea:    	mov    rdx,r12
  019ed: 34 	movabs rax,0x563437f47590
  019f7:    	call   rax
  019f9:    	movq   xmm5,QWORD PTR [rsp]
  019fe:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01a04:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01a0a:    	add    rsp,0x20
  01a0e:    	mov    QWORD PTR [rbp-0x78],rax
:00103 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  01a12: 01 	sub    DWORD PTR [rip+0x401],0x1        # 0x1e1a
  01a19:    	je     0x3dc51
  01a1f:    	sub    rsp,0x20
  01a23:    	movq   QWORD PTR [rsp],xmm5
  01a28:    	movq   QWORD PTR [rsp+0x8],xmm6
  01a2e:    	movq   QWORD PTR [rsp+0x10],xmm7
  01a34:    	mov    rdi,QWORD PTR [rbp-0x70]
  01a38: 34 	movabs rax,0x563437f53600
  01a42:    	call   rax
  01a44:    	mov    r15d,eax
  01a47: 00 	cmp    r15d,DWORD PTR [rip+0x3d4]        # 0x1e22
  01a4e:    	jne    0x3dc73
  01a54:    	mov    eax,DWORD PTR [rip+0xffffffffffffd2c5]        # 0xffffed1f
  01a5a:    	cmp    DWORD PTR [rip+0x3be],eax        # 0x1e1e
  01a60:    	jne    0x3dc73
  01a66: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a6f:    	mov    QWORD PTR [rsp-0x38],rcx
  01a74:    	mov    rax,QWORD PTR [rbx]
  01a77:    	lea    rdi,[rsp-0x18]
  01a7c:    	mov    QWORD PTR [rdi],rax
  01a7f:    	mov    QWORD PTR [rbx],rdi
  01a82:    	mov    rax,QWORD PTR [rbp-0x70]
  01a86:    	mov    QWORD PTR [rsp-0x38],rax
  01a8b: 00 	mov    rdi,0x1
  01a92:    	mov    rax,QWORD PTR [rbp-0x78]
  01a96:    	mov    QWORD PTR [rsp-0x40],rax
  01a9b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01aa4: 00 	movabs rax,0x0
  01aae:    	mov    QWORD PTR [rsp-0x28],rax
  01ab3: 00 	movabs r13,0x0
  01abd:    	call   0xffffc126
  01ac2:    	lea    rdi,[rbp-0x8]
  01ac6:    	mov    QWORD PTR [rbx],rdi
  01ac9:    	movq   xmm5,QWORD PTR [rsp]
  01ace:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01ad4:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01ada:    	add    rsp,0x20
  01ade:    	test   rax,rax
  01ae1:    	je     0x3dcdf
  01ae7:    	mov    QWORD PTR [rbp-0x68],rax
:00104 
:00106 %9 = %8.call vnormalize()            [<INVALID>]
  01aeb: 01 	sub    DWORD PTR [rip+0x334],0x1        # 0x1e26
  01af2:    	je     0x3dd17
  01af8:    	sub    rsp,0x20
  01afc:    	movq   QWORD PTR [rsp],xmm5
  01b01:    	movq   QWORD PTR [rsp+0x8],xmm6
  01b07:    	movq   QWORD PTR [rsp+0x10],xmm7
  01b0d:    	mov    rdi,QWORD PTR [rbp-0x68]
  01b11: 34 	movabs rax,0x563437f53600
  01b1b:    	call   rax
  01b1d:    	mov    r15d,eax
  01b20: 00 	cmp    r15d,DWORD PTR [rip+0x307]        # 0x1e2e
  01b27:    	jne    0x3dd39
  01b2d:    	mov    eax,DWORD PTR [rip+0xffffffffffffd1ec]        # 0xffffed1f
  01b33:    	cmp    DWORD PTR [rip+0x2f1],eax        # 0x1e2a
  01b39:    	jne    0x3dd39
  01b3f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b48:    	mov    QWORD PTR [rsp-0x38],rcx
  01b4d:    	mov    rax,QWORD PTR [rbx]
  01b50:    	lea    rdi,[rsp-0x18]
  01b55:    	mov    QWORD PTR [rdi],rax
  01b58:    	mov    QWORD PTR [rbx],rdi
  01b5b:    	mov    rax,QWORD PTR [rbp-0x68]
  01b5f:    	mov    QWORD PTR [rsp-0x38],rax
  01b64: 00 	mov    rdi,0x0
  01b6b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b74: 00 	movabs rax,0x0
  01b7e:    	mov    QWORD PTR [rsp-0x28],rax
  01b83: 00 	movabs r13,0x0
  01b8d:    	call   0xffffc126
  01b92:    	lea    rdi,[rbp-0x8]
  01b96:    	mov    QWORD PTR [rbx],rdi
  01b99:    	movq   xmm5,QWORD PTR [rsp]
  01b9e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01ba4:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01baa:    	add    rsp,0x20
  01bae:    	test   rax,rax
  01bb1:    	je     0x3dda5
  01bb7:    	mov    QWORD PTR [rbp-0x70],rax
:00107 
:00109 _ = %2.call n=(%9; 1)                [<INVALID>]
  01bbb: 01 	sub    DWORD PTR [rip+0x270],0x1        # 0x1e32
  01bc2:    	je     0x3dddd
  01bc8:    	sub    rsp,0x20
  01bcc:    	movq   QWORD PTR [rsp],xmm5
  01bd1:    	movq   QWORD PTR [rsp+0x8],xmm6
  01bd7:    	movq   QWORD PTR [rsp+0x10],xmm7
  01bdd:    	mov    rdi,QWORD PTR [rbp-0x38]
  01be1: 34 	movabs rax,0x563437f53600
  01beb:    	call   rax
  01bed:    	mov    r15d,eax
  01bf0: 00 	cmp    r15d,DWORD PTR [rip+0x243]        # 0x1e3a
  01bf7:    	jne    0x3ddff
  01bfd:    	mov    eax,DWORD PTR [rip+0xffffffffffffd11c]        # 0xffffed1f
  01c03:    	cmp    DWORD PTR [rip+0x22d],eax        # 0x1e36
  01c09:    	jne    0x3ddff
  01c0f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01c18:    	mov    QWORD PTR [rsp-0x38],rcx
  01c1d:    	mov    rax,QWORD PTR [rbx]
  01c20:    	lea    rdi,[rsp-0x18]
  01c25:    	mov    QWORD PTR [rdi],rax
  01c28:    	mov    QWORD PTR [rbx],rdi
  01c2b:    	mov    rax,QWORD PTR [rbp-0x38]
  01c2f:    	mov    QWORD PTR [rsp-0x38],rax
  01c34: 00 	mov    rdi,0x1
  01c3b:    	mov    rax,QWORD PTR [rbp-0x70]
  01c3f:    	mov    QWORD PTR [rsp-0x40],rax
  01c44: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c4d: 00 	movabs rax,0x0
  01c57:    	mov    QWORD PTR [rsp-0x28],rax
  01c5c: 00 	movabs r13,0x0
  01c66:    	call   0xffffc126
  01c6b:    	lea    rdi,[rbp-0x8]
  01c6f:    	mov    QWORD PTR [rbx],rdi
  01c72:    	movq   xmm5,QWORD PTR [rsp]
  01c77:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01c7d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01c83:    	add    rsp,0x20
  01c87:    	test   rax,rax
  01c8a:    	je     0x3de6b
:00110 
:00112 br =>:00113
  01c90:    	jmp    0x3dee0
:00113 br =>:00114
  01c95:    	jmp    0x3df53
:00114 %9 = nil
  01c9a: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00115 ret %9
  01ca2:    	mov    rax,QWORD PTR [rbp-0x70]
  01ca6:    	leave  
  01ca7:    	ret    
==> start whole compile: vsub FuncId(64) self_class:Vec start:[00000] bytecode:0x563439872ba0
<== finished compile. elapsed:44.3µs
offset:Pos(23832) code: 1397 bytes  data: 51 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x70
  0000b: cmp    edx,0x1
  0000e: je     0x4a
  00014: jl     0x1f
  0001a: jmp    0x3c148
  0001f: jmp    0x3c148
  00024: mov    eax,0x1
  00029: sub    eax,edx
  0002b: test   rax,rax
  0002e: je     0x4a
  00034: lea    rdi,[rbp-0x38]
  00038: mov    QWORD PTR [rdi+rax*8],0x0
  00040: sub    rax,0x1
  00044: jne    0x38
  0004a: mov    rax,0x4
  00051: mov    QWORD PTR [rbp-0x38],rax
  00055: mov    QWORD PTR [rbp-0x40],rax
  00059: mov    QWORD PTR [rbp-0x48],rax
  0005d: mov    QWORD PTR [rbp-0x50],rax
  00061: mov    QWORD PTR [rbp-0x58],rax
  00065: mov    QWORD PTR [rbp-0x60],rax
  00069: mov    rdi,QWORD PTR [rbp-0x28]
  0006d: test   rdi,0x7
  00074: jne    0x3c157
  0007a: cmp    DWORD PTR [rdi+0x4],0x28
  0007e: jne    0x3c157
:00000 init_method reg:8 arg:1 pos:1 req:1 stack_offset:7
:00001 %3 = const[Vec]                      [Vec]
  00084: mov    rax,QWORD PTR [rip+0xffffffffffffce5d]        # 0xffffcee8
  0008b: cmp    rax,QWORD PTR [rip+0x4f6]        # 0x588
  00092: jne    0x3c166
  00098: mov    rax,QWORD PTR [rip+0x4d9]        # 0x578
  0009f: mov    QWORD PTR [rbp-0x40],rax
:00002 %4 = @x: Vec[IvarId(0)]
  000a3: mov    rdi,QWORD PTR [rbp-0x28]
  000a7: mov    rax,QWORD PTR [rdi+0x10]
  000ab: mov    QWORD PTR [rbp-0x48],rax
:00003 %5 = %1.call x()                     [Vec]
  000af: mov    rdi,QWORD PTR [rbp-0x30]
  000b3: test   rdi,0x7
  000ba: jne    0x3c1ac
  000c0: cmp    DWORD PTR [rdi+0x4],0x28
  000c4: jne    0x3c1ac
  000ca: cmp    DWORD PTR [rip+0xffffffffffffce10],0x26        # 0xffffcee1
  000d1: jne    0x3c1ac
  000d7: mov    esi,DWORD PTR [rip+0x4b7]        # 0x594
  000dd: cmp    esi,0xffffffff
  000e0: je     0x3c1bb
  000e6: cmp    WORD PTR [rdi+0x2],0x3
  000eb: jne    0x104
  000f1: cmp    esi,0x6
  000f4: jge    0x104
  000fa: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000ff: jmp    0x110
  00104: movabs rax,0x563437ed0590
  0010e: call   rax
  00110: mov    QWORD PTR [rbp-0x50],rax
:00004 
:00006 %4 = %4 - %5                         [Float][Float]
  00114: mov    rdi,QWORD PTR [rbp-0x48]
  00118: test   rdi,0x1
  0011f: jne    0x3c1e4
  00125: test   rdi,0x2
  0012c: je     0x168
  00132: xorps  xmm2,xmm2
  00135: movabs rax,0x8000000000000002
  0013f: cmp    rdi,rax
  00142: je     0x17a
  00148: mov    rax,rdi
  0014b: sar    rax,0x3f
  0014f: add    rax,0x2
  00153: and    rdi,0xfffffffffffffffc
  00157: or     rdi,rax
  0015a: rol    rdi,0x3d
  0015e: movq   xmm2,rdi
  00163: jmp    0x17a
  00168: call   0xffffa37c
  0016d: test   rax,rax
  00170: je     0x3c1e4
  00176: movq   xmm2,xmm0
  0017a: mov    rdi,QWORD PTR [rbp-0x50]
  0017e: test   rdi,0x1
  00185: jne    0x3c1f3
  0018b: test   rdi,0x2
  00192: je     0x1ce
  00198: xorps  xmm3,xmm3
  0019b: movabs rax,0x8000000000000002
  001a5: cmp    rdi,rax
  001a8: je     0x1e0
  001ae: mov    rax,rdi
  001b1: sar    rax,0x3f
  001b5: add    rax,0x2
  001b9: and    rdi,0xfffffffffffffffc
  001bd: or     rdi,rax
  001c0: rol    rdi,0x3d
  001c4: movq   xmm3,rdi
  001c9: jmp    0x1e0
  001ce: call   0xffffa37c
  001d3: test   rax,rax
  001d6: je     0x3c1f3
  001dc: movq   xmm3,xmm0
  001e0: subsd  xmm2,xmm3
:00007 %5 = @y: Vec[IvarId(1)]
  001e4: mov    rdi,QWORD PTR [rbp-0x28]
  001e8: mov    rax,QWORD PTR [rdi+0x18]
  001ec: mov    QWORD PTR [rbp-0x50],rax
:00008 %6 = %1.call y()                     [Vec]
  001f0: mov    rdi,QWORD PTR [rbp-0x30]
  001f4: test   rdi,0x7
  001fb: jne    0x3c202
  00201: cmp    DWORD PTR [rdi+0x4],0x28
  00205: jne    0x3c202
  0020b: cmp    DWORD PTR [rip+0xffffffffffffcccf],0x26        # 0xffffcee1
  00212: jne    0x3c202
  00218: mov    esi,DWORD PTR [rip+0x37e]        # 0x59c
  0021e: cmp    esi,0xffffffff
  00221: je     0x3c21e
  00227: cmp    WORD PTR [rdi+0x2],0x3
  0022c: jne    0x245
  00232: cmp    esi,0x6
  00235: jge    0x245
  0023b: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00240: jmp    0x263
  00245: sub    rsp,0x10
  00249: movq   QWORD PTR [rsp],xmm2
  0024e: movabs rax,0x563437ed0590
  00258: call   rax
  0025a: movq   xmm2,QWORD PTR [rsp]
  0025f: add    rsp,0x10
  00263: mov    QWORD PTR [rbp-0x58],rax
:00009 
:00011 %5 = %5 - %6                         [Float][Float]
  00267: mov    rdi,QWORD PTR [rbp-0x50]
  0026b: test   rdi,0x1
  00272: jne    0x3c259
  00278: test   rdi,0x2
  0027f: je     0x2bb
  00285: xorps  xmm3,xmm3
  00288: movabs rax,0x8000000000000002
  00292: cmp    rdi,rax
  00295: je     0x2cd
  0029b: mov    rax,rdi
  0029e: sar    rax,0x3f
  002a2: add    rax,0x2
  002a6: and    rdi,0xfffffffffffffffc
  002aa: or     rdi,rax
  002ad: rol    rdi,0x3d
  002b1: movq   xmm3,rdi
  002b6: jmp    0x2cd
  002bb: call   0xffffa37c
  002c0: test   rax,rax
  002c3: je     0x3c259
  002c9: movq   xmm3,xmm0
  002cd: mov    rdi,QWORD PTR [rbp-0x58]
  002d1: test   rdi,0x1
  002d8: jne    0x3c275
  002de: test   rdi,0x2
  002e5: je     0x321
  002eb: xorps  xmm4,xmm4
  002ee: movabs rax,0x8000000000000002
  002f8: cmp    rdi,rax
  002fb: je     0x333
  00301: mov    rax,rdi
  00304: sar    rax,0x3f
  00308: add    rax,0x2
  0030c: and    rdi,0xfffffffffffffffc
  00310: or     rdi,rax
  00313: rol    rdi,0x3d
  00317: movq   xmm4,rdi
  0031c: jmp    0x333
  00321: call   0xffffa37c
  00326: test   rax,rax
  00329: je     0x3c275
  0032f: movq   xmm4,xmm0
  00333: subsd  xmm3,xmm4
:00012 %6 = @z: Vec[IvarId(2)]
  00337: mov    rdi,QWORD PTR [rbp-0x28]
  0033b: mov    rax,QWORD PTR [rdi+0x20]
  0033f: mov    QWORD PTR [rbp-0x58],rax
:00013 %7 = %1.call z()                     [Vec]
  00343: mov    rdi,QWORD PTR [rbp-0x30]
  00347: test   rdi,0x7
  0034e: jne    0x3c291
  00354: cmp    DWORD PTR [rdi+0x4],0x28
  00358: jne    0x3c291
  0035e: cmp    DWORD PTR [rip+0xffffffffffffcb7c],0x26        # 0xffffcee1
  00365: jne    0x3c291
  0036b: mov    esi,DWORD PTR [rip+0x233]        # 0x5a4
  00371: cmp    esi,0xffffffff
  00374: je     0x3c2ba
  0037a: cmp    WORD PTR [rdi+0x2],0x3
  0037f: jne    0x398
  00385: cmp    esi,0x6
  00388: jge    0x398
  0038e: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00393: jmp    0x3c2
  00398: sub    rsp,0x10
  0039c: movq   QWORD PTR [rsp],xmm2
  003a1: movq   QWORD PTR [rsp+0x8],xmm3
  003a7: movabs rax,0x563437ed0590
  003b1: call   rax
  003b3: movq   xmm2,QWORD PTR [rsp]
  003b8: movq   xmm3,QWORD PTR [rsp+0x8]
  003be: add    rsp,0x10
  003c2: mov    QWORD PTR [rbp-0x60],rax
:00014 
:00016 %6 = %6 - %7                         [Float][Float]
  003c6: mov    rdi,QWORD PTR [rbp-0x58]
  003ca: test   rdi,0x1
  003d1: jne    0x3c301
  003d7: test   rdi,0x2
  003de: je     0x41a
  003e4: xorps  xmm4,xmm4
  003e7: movabs rax,0x8000000000000002
  003f1: cmp    rdi,rax
  003f4: je     0x42c
  003fa: mov    rax,rdi
  003fd: sar    rax,0x3f
  00401: add    rax,0x2
  00405: and    rdi,0xfffffffffffffffc
  00409: or     rdi,rax
  0040c: rol    rdi,0x3d
  00410: movq   xmm4,rdi
  00415: jmp    0x42c
  0041a: call   0xffffa37c
  0041f: test   rax,rax
  00422: je     0x3c301
  00428: movq   xmm4,xmm0
  0042c: mov    rdi,QWORD PTR [rbp-0x60]
  00430: test   rdi,0x1
  00437: jne    0x3c32a
  0043d: test   rdi,0x2
  00444: je     0x480
  0044a: xorps  xmm5,xmm5
  0044d: movabs rax,0x8000000000000002
  00457: cmp    rdi,rax
  0045a: je     0x492
  00460: mov    rax,rdi
  00463: sar    rax,0x3f
  00467: add    rax,0x2
  0046b: and    rdi,0xfffffffffffffffc
  0046f: or     rdi,rax
  00472: rol    rdi,0x3d
  00476: movq   xmm5,rdi
  0047b: jmp    0x492
  00480: call   0xffffa37c
  00485: test   rax,rax
  00488: je     0x3c32a
  0048e: movq   xmm5,xmm0
  00492: subsd  xmm4,xmm5
:00017 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
  00496: movq   xmm0,xmm2
  0049a: call   0xffffa46f
  0049f: mov    QWORD PTR [rbp-0x48],rax
  004a3: movq   xmm0,xmm3
  004a7: call   0xffffa46f
  004ac: mov    QWORD PTR [rbp-0x50],rax
  004b0: movq   xmm0,xmm4
  004b4: call   0xffffa46f
  004b9: mov    QWORD PTR [rbp-0x58],rax
  004bd: mov    rdi,QWORD PTR [rbp-0x40]
  004c1: test   rdi,0x7
  004c8: jne    0x3c353
  004ce: cmp    DWORD PTR [rdi+0x4],0x29
  004d2: jne    0x3c353
  004d8: cmp    DWORD PTR [rip+0xffffffffffffca02],0x26        # 0xffffcee1
  004df: jne    0x3c353
  004e5: mov    r9,0x0
  004ec: sub    rsp,0x20
  004f0: movq   QWORD PTR [rsp],xmm2
  004f5: movq   QWORD PTR [rsp+0x8],xmm3
  004fb: movq   QWORD PTR [rsp+0x10],xmm4
  00501: movq   QWORD PTR [rsp+0x18],xmm5
  00507: mov    rdx,rdi
  0050a: mov    QWORD PTR [rsp-0x20],0x0
  00513: mov    QWORD PTR [rsp-0x38],rcx
  00518: mov    rax,QWORD PTR [rbx]
  0051b: lea    rdi,[rsp-0x18]
  00520: mov    QWORD PTR [rdi],rax
  00523: mov    QWORD PTR [rbx],rdi
  00526: lea    rcx,[rbp-0x48]
  0052a: mov    r8,0x3
  00531: call   0x3c362
  00536: lea    rdi,[rbp-0x8]
  0053a: mov    QWORD PTR [rbx],rdi
  0053d: movq   xmm2,QWORD PTR [rsp]
  00542: movq   xmm3,QWORD PTR [rsp+0x8]
  00548: movq   xmm4,QWORD PTR [rsp+0x10]
  0054e: movq   xmm5,QWORD PTR [rsp+0x18]
  00554: add    rsp,0x20
  00558: movabs r13,0x563439872cd0
  00562: test   rax,rax
  00565: je     0xffffa323
  0056b: mov    QWORD PTR [rbp-0x38],rax
:00018 
:00020 ret %2
  0056f: mov    rax,QWORD PTR [rbp-0x38]
  00573: leave  
  00574: ret    
==> start whole compile: <unnamed> FuncId(83) self_class:Scene start:[00000] bytecode:0x56343987e6a0
<== finished compile. elapsed:153.1µs
offset:Pos(25551) code: 9433 bytes  data: 412 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xd0
  0000e:    	cmp    edx,0x1
  00011:    	je     0x73
  00017:    	jl     0x22
  0001d:    	jmp    0x73
  00022:    	mov    eax,0x1
  00027:    	sub    eax,edx
  00029:    	test   rax,rax
  0002c:    	je     0x48
  00032:    	lea    rdi,[rbp-0x38]
  00036: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  0003e:    	sub    rax,0x1
  00042:    	jne    0x36
  00048:    	mov    edx,0x1
  0004d:    	mov    eax,0x1
  00052:    	sub    eax,edx
  00054:    	test   rax,rax
  00057:    	je     0x73
  0005d:    	lea    rdi,[rbp-0x38]
  00061: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00069:    	sub    rax,0x1
  0006d:    	jne    0x61
  00073: 00 	mov    rax,0x4
  0007a:    	mov    QWORD PTR [rbp-0x38],rax
  0007e:    	mov    QWORD PTR [rbp-0x40],rax
  00082:    	mov    QWORD PTR [rbp-0x48],rax
  00086:    	mov    QWORD PTR [rbp-0x50],rax
  0008a:    	mov    QWORD PTR [rbp-0x58],rax
  0008e:    	mov    QWORD PTR [rbp-0x60],rax
  00092:    	mov    QWORD PTR [rbp-0x68],rax
  00096:    	mov    QWORD PTR [rbp-0x70],rax
  0009a:    	mov    QWORD PTR [rbp-0x78],rax
  0009e:    	mov    QWORD PTR [rbp-0x80],rax
  000a2: ff 	mov    QWORD PTR [rbp-0x88],rax
  000a9: ff 	mov    QWORD PTR [rbp-0x90],rax
  000b0: ff 	mov    QWORD PTR [rbp-0x98],rax
  000b7: ff 	mov    QWORD PTR [rbp-0xa0],rax
  000be: ff 	mov    QWORD PTR [rbp-0xa8],rax
  000c5: ff 	mov    QWORD PTR [rbp-0xb0],rax
  000cc: ff 	mov    QWORD PTR [rbp-0xb8],rax
  000d3: ff 	mov    QWORD PTR [rbp-0xc0],rax
  000da:    	mov    rdi,QWORD PTR [rbp-0x28]
  000de: 00 	test   rdi,0x7
  000e5:    	jne    0x3bcec
  000eb:    	cmp    DWORD PTR [rdi+0x4],0x32
  000ef:    	jne    0x3bcec
:00000 init_block reg:20 arg:1 pos:1 req:1 stack_offset:13
:00001 %14 = dynvar(4, %4)
  000f5:    	mov    rax,QWORD PTR [rbp-0x10]
  000f9:    	mov    rax,QWORD PTR [rax]
  000fc:    	mov    rax,QWORD PTR [rax]
  000ff:    	mov    rax,QWORD PTR [rax]
  00102:    	mov    rax,QWORD PTR [rax-0x38]
  00106: ff 	mov    QWORD PTR [rbp-0x98],rax
:00002 %14 = %14 + 1: i16                   [Integer][Integer]
  0010d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00114: 00 	test   rdi,0x1
  0011b:    	je     0x3bcfb
  00121:    	add    rdi,0x2
  00125:    	jo     0x3bcfb
  0012b: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00003 dynvar(4, %4) = %14
  00132:    	mov    rax,QWORD PTR [rbp-0x10]
  00136:    	mov    rax,QWORD PTR [rax]
  00139:    	mov    rax,QWORD PTR [rax]
  0013c:    	mov    rax,QWORD PTR [rax]
  0013f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00146:    	mov    QWORD PTR [rax-0x38],rdi
:00004 %14 = dynvar(4, %1)
  0014a:    	mov    rax,QWORD PTR [rbp-0x10]
  0014e:    	mov    rax,QWORD PTR [rax]
  00151:    	mov    rax,QWORD PTR [rax]
  00154:    	mov    rax,QWORD PTR [rax]
  00157:    	mov    rax,QWORD PTR [rax-0x20]
  0015b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00005 %2 = %14.call to_f()                 [Integer]
  00162: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00169: 00 	test   rdi,0x1
  00170:    	je     0x3bd0a
  00176: 26 	cmp    DWORD PTR [rip+0xffffffffffffc6ad],0x26        # 0xffffc82a
  0017d:    	jne    0x3bd0a
  00183:    	sar    rdi,1
  00186:    	cvtsi2sd xmm2,rdi
:00006 
:00008 %14 = dynvar(4, %2)
  0018b:    	mov    rax,QWORD PTR [rbp-0x10]
  0018f:    	mov    rax,QWORD PTR [rax]
  00192:    	mov    rax,QWORD PTR [rax]
  00195:    	mov    rax,QWORD PTR [rax]
  00198:    	mov    rax,QWORD PTR [rax-0x28]
  0019c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00009 %3 = %14.call to_f()                 [Integer]
  001a3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001aa: 00 	test   rdi,0x1
  001b1:    	je     0x3bd19
  001b7: 26 	cmp    DWORD PTR [rip+0xffffffffffffc66c],0x26        # 0xffffc82a
  001be:    	jne    0x3bd19
  001c4:    	sar    rdi,1
  001c7:    	cvtsi2sd xmm3,rdi
:00010 
:00012 %14 = dynvar(2, %1)
  001cc:    	mov    rax,QWORD PTR [rbp-0x10]
  001d0:    	mov    rax,QWORD PTR [rax]
  001d3:    	mov    rax,QWORD PTR [rax-0x20]
  001d7: ff 	mov    QWORD PTR [rbp-0x98],rax
:00013 %4 = %14.call to_f()                 [Integer]
  001de: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001e5: 00 	test   rdi,0x1
  001ec:    	je     0x3bd35
  001f2: 26 	cmp    DWORD PTR [rip+0xffffffffffffc631],0x26        # 0xffffc82a
  001f9:    	jne    0x3bd35
  001ff:    	sar    rdi,1
  00202:    	cvtsi2sd xmm4,rdi
:00014 
:00016 %14 = dynvar(3, %1)
  00207:    	mov    rax,QWORD PTR [rbp-0x10]
  0020b:    	mov    rax,QWORD PTR [rax]
  0020e:    	mov    rax,QWORD PTR [rax]
  00211:    	mov    rax,QWORD PTR [rax-0x20]
  00215: ff 	mov    QWORD PTR [rbp-0x98],rax
:00017 %5 = %14.call to_f()                 [Integer]
  0021c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00223: 00 	test   rdi,0x1
  0022a:    	je     0x3bd5e
  00230: 26 	cmp    DWORD PTR [rip+0xffffffffffffc5f3],0x26        # 0xffffc82a
  00237:    	jne    0x3bd5e
  0023d:    	sar    rdi,1
  00240:    	cvtsi2sd xmm5,rdi
:00018 
:00020 %6 = %1.call to_f()                  [Integer]
  00245:    	mov    rdi,QWORD PTR [rbp-0x30]
  00249: 00 	test   rdi,0x1
  00250:    	je     0x3bd94
  00256: 26 	cmp    DWORD PTR [rip+0xffffffffffffc5cd],0x26        # 0xffffc82a
  0025d:    	jne    0x3bd94
  00263:    	sar    rdi,1
  00266:    	cvtsi2sd xmm6,rdi
:00021 
:00023 %14 = dynvar(1, %1)
  0026b:    	mov    rax,QWORD PTR [rbp-0x10]
  0026f:    	mov    rax,QWORD PTR [rax-0x20]
  00273: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %7 = %14.call to_f()                 [Integer]
  0027a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00281: 00 	test   rdi,0x1
  00288:    	je     0x3bdd7
  0028e: 26 	cmp    DWORD PTR [rip+0xffffffffffffc595],0x26        # 0xffffc82a
  00295:    	jne    0x3bdd7
  0029b:    	sar    rdi,1
  0029e:    	cvtsi2sd xmm7,rdi
:00025 
:00027 %14 = dynvar(4, %5)
  002a3:    	mov    rax,QWORD PTR [rbp-0x10]
  002a7:    	mov    rax,QWORD PTR [rax]
  002aa:    	mov    rax,QWORD PTR [rax]
  002ad:    	mov    rax,QWORD PTR [rax]
  002b0:    	mov    rax,QWORD PTR [rax-0x40]
  002b4: ff 	mov    QWORD PTR [rbp-0x98],rax
:00028 %14 = %6 / %14                       [Float][Float]
  002bb: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002c2: 00 	test   rdi,0x1
  002c9:    	jne    0x3be27
  002cf: 00 	test   rdi,0x2
  002d6:    	je     0x313
  002dc:    	xorps  xmm8,xmm8
  002e0: 00 	movabs rax,0x8000000000000002
  002ea:    	cmp    rdi,rax
  002ed:    	je     0x326
  002f3:    	mov    rax,rdi
  002f6:    	sar    rax,0x3f
  002fa:    	add    rax,0x2
  002fe:    	and    rdi,0xfffffffffffffffc
  00302:    	or     rdi,rax
  00305:    	rol    rdi,0x3d
  00309:    	movq   xmm8,rdi
  0030e:    	jmp    0x326
  00313:    	call   0xffff9cc5
  00318:    	test   rax,rax
  0031b:    	je     0x3be27
  00321:    	movq   xmm8,xmm0
  00326:    	movq   rax,xmm8
  0032b:    	test   rax,rax
  0032e:    	je     0xffff9c91
  00334:    	movq   xmm0,xmm6
  00338:    	divsd  xmm0,xmm8
  0033d:    	movq   xmm8,xmm0
:00029 %14 = %4 + %14                       [Float][Float]
  00342:    	addsd  xmm8,xmm4
:00030 %15 = literal[2.0]
  00347: 21 	movq   xmm9,QWORD PTR [rip+0x2191]        # 0x24e1
  00350: 00 	mov    rax,0x2
  00357: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00031 %15 = %2 / %15                       [Float][Float]
  0035e:    	movq   rax,xmm9
  00363:    	test   rax,rax
  00366:    	je     0xffff9c91
  0036c:    	movq   xmm0,xmm2
  00370:    	divsd  xmm0,xmm9
  00375:    	movq   xmm9,xmm0
:00032 %14 = %14 - %15                      [Float][Float]
  0037a:    	subsd  xmm8,xmm9
:00033 %15 = literal[2.0]
  0037f: 21 	movq   xmm9,QWORD PTR [rip+0x2169]        # 0x24f1
  00388: 00 	mov    rax,0x2
  0038f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00034 %15 = %2 / %15                       [Float][Float]
  00396:    	movq   rax,xmm9
  0039b:    	test   rax,rax
  0039e:    	je     0xffff9c91
  003a4:    	movq   xmm0,xmm2
  003a8:    	divsd  xmm0,xmm9
  003ad:    	movq   xmm9,xmm0
:00035 %8 = %14 / %15                       [Float][Float]
  003b2:    	movq   xmm10,xmm8
  003b7:    	movq   rax,xmm9
  003bc:    	test   rax,rax
  003bf:    	je     0xffff9c91
  003c5:    	divsd  xmm10,xmm9
:00036 %14 = dynvar(4, %5)
  003ca:    	mov    rax,QWORD PTR [rbp-0x10]
  003ce:    	mov    rax,QWORD PTR [rax]
  003d1:    	mov    rax,QWORD PTR [rax]
  003d4:    	mov    rax,QWORD PTR [rax]
  003d7:    	mov    rax,QWORD PTR [rax-0x40]
  003db: ff 	mov    QWORD PTR [rbp-0x98],rax
:00037 %14 = %7 / %14                       [Float][Float]
  003e2: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003e9: 00 	test   rdi,0x1
  003f0:    	jne    0x3be84
  003f6: 00 	test   rdi,0x2
  003fd:    	je     0x43a
  00403:    	xorps  xmm8,xmm8
  00407: 00 	movabs rax,0x8000000000000002
  00411:    	cmp    rdi,rax
  00414:    	je     0x44d
  0041a:    	mov    rax,rdi
  0041d:    	sar    rax,0x3f
  00421:    	add    rax,0x2
  00425:    	and    rdi,0xfffffffffffffffc
  00429:    	or     rdi,rax
  0042c:    	rol    rdi,0x3d
  00430:    	movq   xmm8,rdi
  00435:    	jmp    0x44d
  0043a:    	call   0xffff9cc5
  0043f:    	test   rax,rax
  00442:    	je     0x3be84
  00448:    	movq   xmm8,xmm0
  0044d:    	movq   rax,xmm8
  00452:    	test   rax,rax
  00455:    	je     0xffff9c91
  0045b:    	movq   xmm0,xmm7
  0045f:    	divsd  xmm0,xmm8
  00464:    	movq   xmm8,xmm0
:00038 %14 = %5 + %14                       [Float][Float]
  00469:    	addsd  xmm8,xmm5
:00039 %15 = literal[2.0]
  0046e: 20 	movq   xmm9,QWORD PTR [rip+0x208a]        # 0x2501
  00477: 00 	mov    rax,0x2
  0047e: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00040 %15 = %3 / %15                       [Float][Float]
  00485:    	movq   rax,xmm9
  0048a:    	test   rax,rax
  0048d:    	je     0xffff9c91
  00493:    	movq   xmm0,xmm3
  00497:    	divsd  xmm0,xmm9
  0049c:    	movq   xmm9,xmm0
:00041 %14 = %14 - %15                      [Float][Float]
  004a1:    	subsd  xmm8,xmm9
:00042 %14 = neg %14                        [Float]
  004a6: 00 	xorps  xmm8,XMMWORD PTR [rip+0x2063]        # 0x2511
:00043 %15 = literal[2.0]
  004ae: 20 	movq   xmm9,QWORD PTR [rip+0x206a]        # 0x2521
  004b7: 00 	mov    rax,0x2
  004be: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00044 %15 = %3 / %15                       [Float][Float]
  004c5:    	movq   rax,xmm9
  004ca:    	test   rax,rax
  004cd:    	je     0xffff9c91
  004d3:    	movq   xmm0,xmm3
  004d7:    	divsd  xmm0,xmm9
  004dc:    	movq   xmm9,xmm0
:00045 %9 = %14 / %15                       [Float][Float]
  004e1:    	movq   xmm11,xmm8
  004e6:    	movq   rax,xmm9
  004eb:    	test   rax,rax
  004ee:    	je     0xffff9c91
  004f4:    	divsd  xmm11,xmm9
:00046 %15 = const[Vec]                     [Vec]
  004f9: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc331]        # 0xffffc831
  00500: 00 	cmp    rax,QWORD PTR [rip+0x203a]        # 0x2541
  00507:    	jne    0x3bf00
  0050d: 00 	mov    rax,QWORD PTR [rip+0x201d]        # 0x2531
  00514: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00047 %16 = %8
:00048 %17 = %9
:00049 %18 = literal[-1.0]
  0051b: 20 	movq   xmm9,QWORD PTR [rip+0x202d]        # 0x2551
  00524: 00 	movabs rax,0xff80000000000006
  0052e: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00050 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
  00535:    	movq   xmm0,xmm10
  0053a:    	call   0xffff9db8
  0053f: ff 	mov    QWORD PTR [rbp-0xa8],rax
  00546:    	movq   xmm0,xmm11
  0054b:    	call   0xffff9db8
  00550: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00557: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0055e: 00 	test   rdi,0x7
  00565:    	jne    0x3bfbe
  0056b:    	cmp    DWORD PTR [rdi+0x4],0x29
  0056f:    	jne    0x3bfbe
  00575: 26 	cmp    DWORD PTR [rip+0xffffffffffffc2ae],0x26        # 0xffffc82a
  0057c:    	jne    0x3bfbe
  00582: 00 	mov    r9,0x0
  00589:    	sub    rsp,0x50
  0058d:    	movq   QWORD PTR [rsp],xmm2
  00592:    	movq   QWORD PTR [rsp+0x8],xmm3
  00598:    	movq   QWORD PTR [rsp+0x10],xmm4
  0059e:    	movq   QWORD PTR [rsp+0x18],xmm5
  005a4:    	movq   QWORD PTR [rsp+0x20],xmm6
  005aa:    	movq   QWORD PTR [rsp+0x28],xmm7
  005b0: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  005b7: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  005be: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  005c5:    	mov    rdx,rdi
  005c8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  005d1:    	mov    QWORD PTR [rsp-0x38],rcx
  005d6:    	mov    rax,QWORD PTR [rbx]
  005d9:    	lea    rdi,[rsp-0x18]
  005de:    	mov    QWORD PTR [rdi],rax
  005e1:    	mov    QWORD PTR [rbx],rdi
  005e4: ff 	lea    rcx,[rbp-0xa8]
  005eb: 00 	mov    r8,0x3
  005f2:    	call   0x3c037
  005f7:    	lea    rdi,[rbp-0x8]
  005fb:    	mov    QWORD PTR [rbx],rdi
  005fe:    	movq   xmm2,QWORD PTR [rsp]
  00603:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00609:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0060f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00615:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0061b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00621: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00628: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0062f: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00636:    	add    rsp,0x50
  0063a: 34 	movabs r13,0x56343987e9e0
  00644:    	test   rax,rax
  00647:    	je     0xffff9c6c
  0064d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00051 
:00053 %10 = %14.call vnormalize()          [Vec]
  00654: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0065b: 00 	test   rdi,0x7
  00662:    	jne    0x3c069
  00668:    	cmp    DWORD PTR [rdi+0x4],0x28
  0066c:    	jne    0x3c069
  00672: 26 	cmp    DWORD PTR [rip+0xffffffffffffc1b1],0x26        # 0xffffc82a
  00679:    	jne    0x3c069
  0067f:    	sub    rsp,0x50
  00683:    	movq   QWORD PTR [rsp],xmm2
  00688:    	movq   QWORD PTR [rsp+0x8],xmm3
  0068e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00694:    	movq   QWORD PTR [rsp+0x18],xmm5
  0069a:    	movq   QWORD PTR [rsp+0x20],xmm6
  006a0:    	movq   QWORD PTR [rsp+0x28],xmm7
  006a6: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  006ad: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  006b4: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  006bb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006c4:    	mov    QWORD PTR [rsp-0x38],rcx
  006c9:    	mov    rax,QWORD PTR [rbx]
  006cc:    	lea    rdi,[rsp-0x18]
  006d1:    	mov    QWORD PTR [rdi],rax
  006d4:    	mov    QWORD PTR [rbx],rdi
  006d7: ff 	mov    rax,QWORD PTR [rbp-0x98]
  006de:    	mov    QWORD PTR [rsp-0x38],rax
  006e3: 00 	mov    rdi,0x0
  006ea: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006f3: 07 	movabs rax,0x700000044
  006fd:    	mov    QWORD PTR [rsp-0x28],rax
  00702: 34 	movabs r13,0x5634398639e0
  0070c:    	call   0xffffd163
  00711:    	lea    rdi,[rbp-0x8]
  00715:    	mov    QWORD PTR [rbx],rdi
  00718:    	movq   xmm2,QWORD PTR [rsp]
  0071d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00723:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00729:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0072f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00735:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0073b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00742: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00749: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00750:    	add    rsp,0x50
  00754: 34 	movabs r13,0x56343987ea10
  0075e:    	test   rax,rax
  00761:    	je     0xffff9c6c
  00767:    	mov    QWORD PTR [rbp-0x78],rax
:00054 
:00056 %14 = const[Ray]                     [Ray]
  0076b: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc0bf]        # 0xffffc831
  00772: 00 	cmp    rax,QWORD PTR [rip+0x1df8]        # 0x2571
  00779:    	jne    0x3c0e2
  0077f: 00 	mov    rax,QWORD PTR [rip+0x1ddb]        # 0x2561
  00786: ff 	mov    QWORD PTR [rbp-0x98],rax
:00057 %16 = const[Vec]                     [Vec]
  0078d: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc09d]        # 0xffffc831
  00794: 00 	cmp    rax,QWORD PTR [rip+0x1df6]        # 0x2591
  0079b:    	jne    0x3c1a0
  007a1: 00 	mov    rax,QWORD PTR [rip+0x1dd9]        # 0x2581
  007a8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00058 %17 = literal[0.0]
  007af: 1d 	movq   xmm8,QWORD PTR [rip+0x1de9]        # 0x25a1
  007b8: 00 	movabs rax,0x8000000000000002
  007c2: ff 	mov    QWORD PTR [rbp-0xb0],rax
:00059 %18 = literal[0.0]
  007c9: 1d 	movq   xmm9,QWORD PTR [rip+0x1ddf]        # 0x25b1
  007d2: 00 	movabs rax,0x8000000000000002
  007dc: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00060 %19 = literal[0.0]
  007e3: 1d 	movq   xmm12,QWORD PTR [rip+0x1dd5]        # 0x25c1
  007ec: 00 	movabs rax,0x8000000000000002
  007f6: ff 	mov    QWORD PTR [rbp-0xc0],rax
:00061 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
  007fd: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  00804: 00 	test   rdi,0x7
  0080b:    	jne    0x3c25e
  00811:    	cmp    DWORD PTR [rdi+0x4],0x29
  00815:    	jne    0x3c25e
  0081b: 26 	cmp    DWORD PTR [rip+0xffffffffffffc008],0x26        # 0xffffc82a
  00822:    	jne    0x3c25e
  00828: 00 	mov    r9,0x0
  0082f:    	sub    rsp,0x60
  00833:    	movq   QWORD PTR [rsp],xmm2
  00838:    	movq   QWORD PTR [rsp+0x8],xmm3
  0083e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00844:    	movq   QWORD PTR [rsp+0x18],xmm5
  0084a:    	movq   QWORD PTR [rsp+0x20],xmm6
  00850:    	movq   QWORD PTR [rsp+0x28],xmm7
  00856: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0085d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00864: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0086b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00872: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00879:    	mov    rdx,rdi
  0087c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00885:    	mov    QWORD PTR [rsp-0x38],rcx
  0088a:    	mov    rax,QWORD PTR [rbx]
  0088d:    	lea    rdi,[rsp-0x18]
  00892:    	mov    QWORD PTR [rdi],rax
  00895:    	mov    QWORD PTR [rbx],rdi
  00898: ff 	lea    rcx,[rbp-0xb0]
  0089f: 00 	mov    r8,0x3
  008a6:    	call   0x3c2d7
  008ab:    	lea    rdi,[rbp-0x8]
  008af:    	mov    QWORD PTR [rbx],rdi
  008b2:    	movq   xmm2,QWORD PTR [rsp]
  008b7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008bd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008c3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008c9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008cf:    	movq   xmm7,QWORD PTR [rsp+0x28]
  008d5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  008dc: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  008e3: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  008ea: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  008f1: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  008f8:    	add    rsp,0x60
  008fc: 34 	movabs r13,0x56343987ea90
  00906:    	test   rax,rax
  00909:    	je     0xffff9c6c
  0090f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00062 
:00064 %16 = %10
  00916:    	mov    rax,QWORD PTR [rbp-0x78]
  0091a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00065 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  00921: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00928: 00 	test   rdi,0x7
  0092f:    	jne    0x3c309
  00935:    	cmp    DWORD PTR [rdi+0x4],0x2f
  00939:    	jne    0x3c309
  0093f: 26 	cmp    DWORD PTR [rip+0xffffffffffffbee4],0x26        # 0xffffc82a
  00946:    	jne    0x3c309
  0094c: 00 	mov    r9,0x0
  00953:    	sub    rsp,0x60
  00957:    	movq   QWORD PTR [rsp],xmm2
  0095c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00962:    	movq   QWORD PTR [rsp+0x10],xmm4
  00968:    	movq   QWORD PTR [rsp+0x18],xmm5
  0096e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00974:    	movq   QWORD PTR [rsp+0x28],xmm7
  0097a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00981: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00988: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0098f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00996: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0099d:    	mov    rdx,rdi
  009a0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009a9:    	mov    QWORD PTR [rsp-0x38],rcx
  009ae:    	mov    rax,QWORD PTR [rbx]
  009b1:    	lea    rdi,[rsp-0x18]
  009b6:    	mov    QWORD PTR [rdi],rax
  009b9:    	mov    QWORD PTR [rbx],rdi
  009bc: ff 	lea    rcx,[rbp-0xa0]
  009c3: 00 	mov    r8,0x2
  009ca:    	call   0x3c382
  009cf:    	lea    rdi,[rbp-0x8]
  009d3:    	mov    QWORD PTR [rbx],rdi
  009d6:    	movq   xmm2,QWORD PTR [rsp]
  009db:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009e1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009e7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009ed:    	movq   xmm6,QWORD PTR [rsp+0x20]
  009f3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  009f9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00a00: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00a07: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00a0e: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00a15: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00a1c:    	add    rsp,0x60
  00a20: 34 	movabs r13,0x56343987ead0
  00a2a:    	test   rax,rax
  00a2d:    	je     0xffff9c6c
  00a33:    	mov    QWORD PTR [rbp-0x80],rax
:00066 
:00068 %14 = const[Isect]                   [Isect]
  00a37: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffbdf3]        # 0xffffc831
  00a3e: 00 	cmp    rax,QWORD PTR [rip+0x1b9c]        # 0x25e1
  00a45:    	jne    0x3c3b4
  00a4b: 00 	mov    rax,QWORD PTR [rip+0x1b7f]        # 0x25d1
  00a52: ff 	mov    QWORD PTR [rbp-0x98],rax
:00069 %12 = %14.call new()                 [#<Class:Isect>]
  00a59: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a60: 00 	test   rdi,0x7
  00a67:    	jne    0x3c48e
  00a6d:    	cmp    DWORD PTR [rdi+0x4],0x31
  00a71:    	jne    0x3c48e
  00a77: 26 	cmp    DWORD PTR [rip+0xffffffffffffbdac],0x26        # 0xffffc82a
  00a7e:    	jne    0x3c48e
  00a84: 00 	mov    r9,0x0
  00a8b:    	sub    rsp,0x60
  00a8f:    	movq   QWORD PTR [rsp],xmm2
  00a94:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a9a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00aa0:    	movq   QWORD PTR [rsp+0x18],xmm5
  00aa6:    	movq   QWORD PTR [rsp+0x20],xmm6
  00aac:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ab2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ab9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ac0: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ac7: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ace: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00ad5:    	mov    rdx,rdi
  00ad8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ae1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ae6:    	mov    rax,QWORD PTR [rbx]
  00ae9:    	lea    rdi,[rsp-0x18]
  00aee:    	mov    QWORD PTR [rdi],rax
  00af1:    	mov    QWORD PTR [rbx],rdi
  00af4: ff 	lea    rcx,[rbp-0xa0]
  00afb: 00 	mov    r8,0x0
  00b02:    	call   0x3c507
  00b07:    	lea    rdi,[rbp-0x8]
  00b0b:    	mov    QWORD PTR [rbx],rdi
  00b0e:    	movq   xmm2,QWORD PTR [rsp]
  00b13:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b19:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b1f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b25:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00b2b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00b31: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00b38: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00b3f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00b46: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00b4d: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00b54:    	add    rsp,0x60
  00b58: 34 	movabs r13,0x56343987eb10
  00b62:    	test   rax,rax
  00b65:    	je     0xffff9c6c
  00b6b: ff 	mov    QWORD PTR [rbp-0x88],rax
:00070 
:00072 %14 = @spheres: Scene[IvarId(0)]
  00b72:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b76:    	mov    rax,QWORD PTR [rdi+0x10]
  00b7a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00073 %15 = 0: i32
  00b81: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00074 %14 = %14.[%15]                      [Array][Integer]
  00b8c:    	sub    rsp,0x60
  00b90:    	movq   QWORD PTR [rsp],xmm2
  00b95:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b9b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ba1:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ba7:    	movq   QWORD PTR [rsp+0x20],xmm6
  00bad:    	movq   QWORD PTR [rsp+0x28],xmm7
  00bb3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00bba: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00bc1: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00bc8: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00bcf: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00bd6: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00bdd: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00be4:    	mov    rdi,rbx
  00be7:    	mov    rsi,r12
  00bea: 34 	movabs r8,0x56343987eb48
  00bf4: 34 	movabs rax,0x563437f47370
  00bfe:    	call   rax
  00c00:    	movq   xmm2,QWORD PTR [rsp]
  00c05:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c0b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c11:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c17:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00c1d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00c23: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00c2a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00c31: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00c38: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00c3f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00c46:    	add    rsp,0x60
  00c4a: 34 	movabs r13,0x56343987eb50
  00c54:    	test   rax,rax
  00c57:    	je     0xffff9c6c
  00c5d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00075 %15 = %11
  00c64:    	mov    rax,QWORD PTR [rbp-0x80]
  00c68: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00076 %16 = %12
  00c6f: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c76: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00077 _ = %14.call intersect(%15; 2)       [Sphere]
  00c7d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c84: 00 	test   rdi,0x7
  00c8b:    	jne    0x3c539
  00c91:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00c95:    	jne    0x3c539
  00c9b: 26 	cmp    DWORD PTR [rip+0xffffffffffffbb88],0x26        # 0xffffc82a
  00ca2:    	jne    0x3c539
  00ca8:    	sub    rsp,0x60
  00cac:    	movq   QWORD PTR [rsp],xmm2
  00cb1:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cb7:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cbd:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cc3:    	movq   QWORD PTR [rsp+0x20],xmm6
  00cc9:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ccf: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00cd6: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00cdd: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ce4: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ceb: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00cf2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cfb:    	mov    QWORD PTR [rsp-0x38],rcx
  00d00:    	mov    rax,QWORD PTR [rbx]
  00d03:    	lea    rdi,[rsp-0x18]
  00d08:    	mov    QWORD PTR [rdi],rax
  00d0b:    	mov    QWORD PTR [rbx],rdi
  00d0e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00d15:    	mov    QWORD PTR [rsp-0x38],rax
  00d1a: 00 	mov    rdi,0x2
  00d21: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00d28:    	mov    QWORD PTR [rsp-0x40],rax
  00d2d: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00d34:    	mov    QWORD PTR [rsp-0x48],rax
  00d39: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d42: 10 	movabs rax,0x1000000046
  00d4c:    	mov    QWORD PTR [rsp-0x28],rax
  00d51: 34 	movabs r13,0x5634398536b0
  00d5b:    	call   0xffffd46b
  00d60:    	lea    rdi,[rbp-0x8]
  00d64:    	mov    QWORD PTR [rbx],rdi
  00d67:    	movq   xmm2,QWORD PTR [rsp]
  00d6c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d72:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d78:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d7e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d84:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d8a: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d91: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d98: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d9f: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00da6: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00dad:    	add    rsp,0x60
  00db1: 34 	movabs r13,0x56343987eb90
  00dbb:    	test   rax,rax
  00dbe:    	je     0xffff9c6c
:00078 
:00080 %14 = @spheres: Scene[IvarId(0)]
  00dc4:    	mov    rdi,QWORD PTR [rbp-0x28]
  00dc8:    	mov    rax,QWORD PTR [rdi+0x10]
  00dcc: ff 	mov    QWORD PTR [rbp-0x98],rax
:00081 %15 = 1: i32
  00dd3: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00082 %14 = %14.[%15]                      [Array][Integer]
  00dde:    	sub    rsp,0x60
  00de2:    	movq   QWORD PTR [rsp],xmm2
  00de7:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ded:    	movq   QWORD PTR [rsp+0x10],xmm4
  00df3:    	movq   QWORD PTR [rsp+0x18],xmm5
  00df9:    	movq   QWORD PTR [rsp+0x20],xmm6
  00dff:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e05: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e0c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e13: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00e1a: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00e21: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00e28: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00e2f: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00e36:    	mov    rdi,rbx
  00e39:    	mov    rsi,r12
  00e3c: 34 	movabs r8,0x56343987ebc8
  00e46: 34 	movabs rax,0x563437f47370
  00e50:    	call   rax
  00e52:    	movq   xmm2,QWORD PTR [rsp]
  00e57:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e5d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e63:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e69:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e6f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e75: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e7c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e83: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e8a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e91: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e98:    	add    rsp,0x60
  00e9c: 34 	movabs r13,0x56343987ebd0
  00ea6:    	test   rax,rax
  00ea9:    	je     0xffff9c6c
  00eaf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00083 %15 = %11
  00eb6:    	mov    rax,QWORD PTR [rbp-0x80]
  00eba: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00084 %16 = %12
  00ec1: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00ec8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00085 _ = %14.call intersect(%15; 2)       [Sphere]
  00ecf: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ed6: 00 	test   rdi,0x7
  00edd:    	jne    0x3c5b2
  00ee3:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00ee7:    	jne    0x3c5b2
  00eed: 26 	cmp    DWORD PTR [rip+0xffffffffffffb936],0x26        # 0xffffc82a
  00ef4:    	jne    0x3c5b2
  00efa:    	sub    rsp,0x60
  00efe:    	movq   QWORD PTR [rsp],xmm2
  00f03:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f09:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f0f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f15:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f1b:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f21: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f28: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f2f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00f36: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00f3d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00f44: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f4d:    	mov    QWORD PTR [rsp-0x38],rcx
  00f52:    	mov    rax,QWORD PTR [rbx]
  00f55:    	lea    rdi,[rsp-0x18]
  00f5a:    	mov    QWORD PTR [rdi],rax
  00f5d:    	mov    QWORD PTR [rbx],rdi
  00f60: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00f67:    	mov    QWORD PTR [rsp-0x38],rax
  00f6c: 00 	mov    rdi,0x2
  00f73: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f7a:    	mov    QWORD PTR [rsp-0x40],rax
  00f7f: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f86:    	mov    QWORD PTR [rsp-0x48],rax
  00f8b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f94: 10 	movabs rax,0x1000000046
  00f9e:    	mov    QWORD PTR [rsp-0x28],rax
  00fa3: 34 	movabs r13,0x5634398536b0
  00fad:    	call   0xffffd46b
  00fb2:    	lea    rdi,[rbp-0x8]
  00fb6:    	mov    QWORD PTR [rbx],rdi
  00fb9:    	movq   xmm2,QWORD PTR [rsp]
  00fbe:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fc4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fca:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fd0:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00fd6:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00fdc: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00fe3: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00fea: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00ff1: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00ff8: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00fff:    	add    rsp,0x60
  01003: 34 	movabs r13,0x56343987ec10
  0100d:    	test   rax,rax
  01010:    	je     0xffff9c6c
:00086 
:00088 %14 = @spheres: Scene[IvarId(0)]
  01016:    	mov    rdi,QWORD PTR [rbp-0x28]
  0101a:    	mov    rax,QWORD PTR [rdi+0x10]
  0101e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %15 = 2: i32
  01025: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00090 %14 = %14.[%15]                      [Array][Integer]
  01030:    	sub    rsp,0x60
  01034:    	movq   QWORD PTR [rsp],xmm2
  01039:    	movq   QWORD PTR [rsp+0x8],xmm3
  0103f:    	movq   QWORD PTR [rsp+0x10],xmm4
  01045:    	movq   QWORD PTR [rsp+0x18],xmm5
  0104b:    	movq   QWORD PTR [rsp+0x20],xmm6
  01051:    	movq   QWORD PTR [rsp+0x28],xmm7
  01057: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0105e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01065: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0106c: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01073: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0107a: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01081: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01088:    	mov    rdi,rbx
  0108b:    	mov    rsi,r12
  0108e: 34 	movabs r8,0x56343987ec48
  01098: 34 	movabs rax,0x563437f47370
  010a2:    	call   rax
  010a4:    	movq   xmm2,QWORD PTR [rsp]
  010a9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010af:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010b5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010bb:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010c1:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010c7: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010ce: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  010d5: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  010dc: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  010e3: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  010ea:    	add    rsp,0x60
  010ee: 34 	movabs r13,0x56343987ec50
  010f8:    	test   rax,rax
  010fb:    	je     0xffff9c6c
  01101: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %15 = %11
  01108:    	mov    rax,QWORD PTR [rbp-0x80]
  0110c: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00092 %16 = %12
  01113: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0111a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00093 _ = %14.call intersect(%15; 2)       [Sphere]
  01121: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01128: 00 	test   rdi,0x7
  0112f:    	jne    0x3c62b
  01135:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01139:    	jne    0x3c62b
  0113f: 26 	cmp    DWORD PTR [rip+0xffffffffffffb6e4],0x26        # 0xffffc82a
  01146:    	jne    0x3c62b
  0114c:    	sub    rsp,0x60
  01150:    	movq   QWORD PTR [rsp],xmm2
  01155:    	movq   QWORD PTR [rsp+0x8],xmm3
  0115b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01161:    	movq   QWORD PTR [rsp+0x18],xmm5
  01167:    	movq   QWORD PTR [rsp+0x20],xmm6
  0116d:    	movq   QWORD PTR [rsp+0x28],xmm7
  01173: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0117a: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01181: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01188: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0118f: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01196: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0119f:    	mov    QWORD PTR [rsp-0x38],rcx
  011a4:    	mov    rax,QWORD PTR [rbx]
  011a7:    	lea    rdi,[rsp-0x18]
  011ac:    	mov    QWORD PTR [rdi],rax
  011af:    	mov    QWORD PTR [rbx],rdi
  011b2: ff 	mov    rax,QWORD PTR [rbp-0x98]
  011b9:    	mov    QWORD PTR [rsp-0x38],rax
  011be: 00 	mov    rdi,0x2
  011c5: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  011cc:    	mov    QWORD PTR [rsp-0x40],rax
  011d1: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  011d8:    	mov    QWORD PTR [rsp-0x48],rax
  011dd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011e6: 10 	movabs rax,0x1000000046
  011f0:    	mov    QWORD PTR [rsp-0x28],rax
  011f5: 34 	movabs r13,0x5634398536b0
  011ff:    	call   0xffffd46b
  01204:    	lea    rdi,[rbp-0x8]
  01208:    	mov    QWORD PTR [rbx],rdi
  0120b:    	movq   xmm2,QWORD PTR [rsp]
  01210:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01216:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0121c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01222:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01228:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0122e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01235: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0123c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01243: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0124a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01251:    	add    rsp,0x60
  01255: 34 	movabs r13,0x56343987ec90
  0125f:    	test   rax,rax
  01262:    	je     0xffff9c6c
:00094 
:00096 %14 = @plane: Scene[IvarId(1)]
  01268:    	mov    rdi,QWORD PTR [rbp-0x28]
  0126c:    	mov    rax,QWORD PTR [rdi+0x18]
  01270: ff 	mov    QWORD PTR [rbp-0x98],rax
:00097 %15 = %11
  01277:    	mov    rax,QWORD PTR [rbp-0x80]
  0127b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00098 %16 = %12
  01282: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01289: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00099 _ = %14.call intersect(%15; 2)       [Plane]
  01290: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01297: 00 	test   rdi,0x7
  0129e:    	jne    0x3c6a4
  012a4:    	cmp    DWORD PTR [rdi+0x4],0x2c
  012a8:    	jne    0x3c6a4
  012ae: 26 	cmp    DWORD PTR [rip+0xffffffffffffb575],0x26        # 0xffffc82a
  012b5:    	jne    0x3c6a4
  012bb:    	sub    rsp,0x60
  012bf:    	movq   QWORD PTR [rsp],xmm2
  012c4:    	movq   QWORD PTR [rsp+0x8],xmm3
  012ca:    	movq   QWORD PTR [rsp+0x10],xmm4
  012d0:    	movq   QWORD PTR [rsp+0x18],xmm5
  012d6:    	movq   QWORD PTR [rsp+0x20],xmm6
  012dc:    	movq   QWORD PTR [rsp+0x28],xmm7
  012e2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  012e9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  012f0: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  012f7: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  012fe: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01305: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0130e:    	mov    QWORD PTR [rsp-0x38],rcx
  01313:    	mov    rax,QWORD PTR [rbx]
  01316:    	lea    rdi,[rsp-0x18]
  0131b:    	mov    QWORD PTR [rdi],rax
  0131e:    	mov    QWORD PTR [rbx],rdi
  01321: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01328:    	mov    QWORD PTR [rsp-0x38],rax
  0132d: 00 	mov    rdi,0x2
  01334: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0133b:    	mov    QWORD PTR [rsp-0x40],rax
  01340: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01347:    	mov    QWORD PTR [rsp-0x48],rax
  0134c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01355: 0e 	movabs rax,0xe00000048
  0135f:    	mov    QWORD PTR [rsp-0x28],rax
  01364: 34 	movabs r13,0x563439855550
  0136e:    	call   0xffffda79
  01373:    	lea    rdi,[rbp-0x8]
  01377:    	mov    QWORD PTR [rbx],rdi
  0137a:    	movq   xmm2,QWORD PTR [rsp]
  0137f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01385:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0138b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01391:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01397:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0139d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  013a4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  013ab: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  013b2: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  013b9: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  013c0:    	add    rsp,0x60
  013c4: 34 	movabs r13,0x56343987ecf0
  013ce:    	test   rax,rax
  013d1:    	je     0xffff9c6c
:00100 
:00102 %14 = %12.call hit()                 [Isect]
  013d7: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  013de: 00 	test   rdi,0x7
  013e5:    	jne    0x3c71d
  013eb:    	cmp    DWORD PTR [rdi+0x4],0x30
  013ef:    	jne    0x3c71d
  013f5: 26 	cmp    DWORD PTR [rip+0xffffffffffffb42e],0x26        # 0xffffc82a
  013fc:    	jne    0x3c71d
  01402:    	mov    esi,DWORD PTR [rip+0x11e5]        # 0x25ed
  01408:    	cmp    esi,0xffffffff
  0140b:    	je     0x3c796
  01411:    	cmp    WORD PTR [rdi+0x2],0x3
  01416:    	jne    0x142f
  0141c:    	cmp    esi,0x6
  0141f:    	jge    0x142f
  01425:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0142a:    	jmp    0x14cf
  0142f:    	sub    rsp,0x60
  01433:    	movq   QWORD PTR [rsp],xmm2
  01438:    	movq   QWORD PTR [rsp+0x8],xmm3
  0143e:    	movq   QWORD PTR [rsp+0x10],xmm4
  01444:    	movq   QWORD PTR [rsp+0x18],xmm5
  0144a:    	movq   QWORD PTR [rsp+0x20],xmm6
  01450:    	movq   QWORD PTR [rsp+0x28],xmm7
  01456: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0145d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01464: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0146b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01472: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01479: 34 	movabs rax,0x563437ed0590
  01483:    	call   rax
  01485:    	movq   xmm2,QWORD PTR [rsp]
  0148a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01490:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01496:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0149c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014a2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014a8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  014af: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  014b6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  014bd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  014c4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  014cb:    	add    rsp,0x60
  014cf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00103 
:00105 condnotbr %14 =>:00148
  014d6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  014dd:    	or     rax,0x10
  014e1:    	cmp    rax,0x14
  014e5:    	je     0x24c5
:00106 %14 = %12
  014eb: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014f2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00107 %13 = %0.call ambient_occlusion(%14; 1) [<INVALID>]
  014f9: 01 	sub    DWORD PTR [rip+0x10f1],0x1        # 0x25f1
  01500:    	je     0x3c8cc
  01506:    	sub    rsp,0x60
  0150a:    	movq   QWORD PTR [rsp],xmm2
  0150f:    	movq   QWORD PTR [rsp+0x8],xmm3
  01515:    	movq   QWORD PTR [rsp+0x10],xmm4
  0151b:    	movq   QWORD PTR [rsp+0x18],xmm5
  01521:    	movq   QWORD PTR [rsp+0x20],xmm6
  01527:    	movq   QWORD PTR [rsp+0x28],xmm7
  0152d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01534: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0153b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01542: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01549: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01550:    	mov    r15d,0x32
  01556: 00 	cmp    r15d,DWORD PTR [rip+0x109c]        # 0x25f9
  0155d:    	jne    0x3c8ee
  01563:    	mov    eax,DWORD PTR [rip+0xffffffffffffb2c1]        # 0xffffc82a
  01569:    	cmp    DWORD PTR [rip+0x1086],eax        # 0x25f5
  0156f:    	jne    0x3c8ee
  01575: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0157e:    	mov    QWORD PTR [rsp-0x38],rcx
  01583:    	mov    rax,QWORD PTR [rbx]
  01586:    	lea    rdi,[rsp-0x18]
  0158b:    	mov    QWORD PTR [rdi],rax
  0158e:    	mov    QWORD PTR [rbx],rdi
  01591:    	mov    rax,QWORD PTR [rbp-0x28]
  01595:    	mov    QWORD PTR [rsp-0x38],rax
  0159a: 00 	mov    rdi,0x1
  015a1: ff 	mov    rax,QWORD PTR [rbp-0x98]
  015a8:    	mov    QWORD PTR [rsp-0x40],rax
  015ad: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015b6: 00 	movabs rax,0x0
  015c0:    	mov    QWORD PTR [rsp-0x28],rax
  015c5: 00 	movabs r13,0x0
  015cf:    	call   0xffff9c31
  015d4:    	lea    rdi,[rbp-0x8]
  015d8:    	mov    QWORD PTR [rbx],rdi
  015db:    	movq   xmm2,QWORD PTR [rsp]
  015e0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015e6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015ec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015f2:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015f8:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015fe: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01605: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0160c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01613: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0161a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01621:    	add    rsp,0x60
  01625:    	test   rax,rax
  01628:    	je     0x3c95a
  0162e: ff 	mov    QWORD PTR [rbp-0x90],rax
:00108 
:00110 %14 = dynvar(2, %2)
  01635:    	mov    rax,QWORD PTR [rbp-0x10]
  01639:    	mov    rax,QWORD PTR [rax]
  0163c:    	mov    rax,QWORD PTR [rax-0x28]
  01640: ff 	mov    QWORD PTR [rbp-0x98],rax
:00111 %16 = dynvar(2, %2)
  01647:    	mov    rax,QWORD PTR [rbp-0x10]
  0164b:    	mov    rax,QWORD PTR [rax]
  0164e:    	mov    rax,QWORD PTR [rax-0x28]
  01652: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00112 %15 = %16.call x()                   [<INVALID>]
  01659: 01 	sub    DWORD PTR [rip+0xf9d],0x1        # 0x25fd
  01660:    	je     0x3c9e2
  01666:    	sub    rsp,0x60
  0166a:    	movq   QWORD PTR [rsp],xmm2
  0166f:    	movq   QWORD PTR [rsp+0x8],xmm3
  01675:    	movq   QWORD PTR [rsp+0x10],xmm4
  0167b:    	movq   QWORD PTR [rsp+0x18],xmm5
  01681:    	movq   QWORD PTR [rsp+0x20],xmm6
  01687:    	movq   QWORD PTR [rsp+0x28],xmm7
  0168d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01694: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0169b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  016a2: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  016a9: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  016b0: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  016b7: 34 	movabs rax,0x563437f53600
  016c1:    	call   rax
  016c3:    	mov    r15d,eax
  016c6: 00 	cmp    r15d,DWORD PTR [rip+0xf38]        # 0x2605
  016cd:    	jne    0x3ca04
  016d3:    	mov    eax,DWORD PTR [rip+0xffffffffffffb151]        # 0xffffc82a
  016d9:    	cmp    DWORD PTR [rip+0xf22],eax        # 0x2601
  016df:    	jne    0x3ca04
  016e5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016ee:    	mov    QWORD PTR [rsp-0x38],rcx
  016f3:    	mov    rax,QWORD PTR [rbx]
  016f6:    	lea    rdi,[rsp-0x18]
  016fb:    	mov    QWORD PTR [rdi],rax
  016fe:    	mov    QWORD PTR [rbx],rdi
  01701: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01708:    	mov    QWORD PTR [rsp-0x38],rax
  0170d: 00 	mov    rdi,0x0
  01714: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0171d: 00 	movabs rax,0x0
  01727:    	mov    QWORD PTR [rsp-0x28],rax
  0172c: 00 	movabs r13,0x0
  01736:    	call   0xffff9c31
  0173b:    	lea    rdi,[rbp-0x8]
  0173f:    	mov    QWORD PTR [rbx],rdi
  01742:    	movq   xmm2,QWORD PTR [rsp]
  01747:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0174d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01753:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01759:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0175f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01765: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0176c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01773: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0177a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01781: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01788:    	add    rsp,0x60
  0178c:    	test   rax,rax
  0178f:    	je     0x3ca73
  01795: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00113 
:00115 %16 = %13.call x()                   [<INVALID>]
  0179c: 01 	sub    DWORD PTR [rip+0xe66],0x1        # 0x2609
  017a3:    	je     0x3cafb
  017a9:    	sub    rsp,0x60
  017ad:    	movq   QWORD PTR [rsp],xmm2
  017b2:    	movq   QWORD PTR [rsp+0x8],xmm3
  017b8:    	movq   QWORD PTR [rsp+0x10],xmm4
  017be:    	movq   QWORD PTR [rsp+0x18],xmm5
  017c4:    	movq   QWORD PTR [rsp+0x20],xmm6
  017ca:    	movq   QWORD PTR [rsp+0x28],xmm7
  017d0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  017d7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  017de: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  017e5: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  017ec: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  017f3: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  017fa: 34 	movabs rax,0x563437f53600
  01804:    	call   rax
  01806:    	mov    r15d,eax
  01809: 00 	cmp    r15d,DWORD PTR [rip+0xe01]        # 0x2611
  01810:    	jne    0x3cb1d
  01816:    	mov    eax,DWORD PTR [rip+0xffffffffffffb00e]        # 0xffffc82a
  0181c:    	cmp    DWORD PTR [rip+0xdeb],eax        # 0x260d
  01822:    	jne    0x3cb1d
  01828: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01831:    	mov    QWORD PTR [rsp-0x38],rcx
  01836:    	mov    rax,QWORD PTR [rbx]
  01839:    	lea    rdi,[rsp-0x18]
  0183e:    	mov    QWORD PTR [rdi],rax
  01841:    	mov    QWORD PTR [rbx],rdi
  01844: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0184b:    	mov    QWORD PTR [rsp-0x38],rax
  01850: 00 	mov    rdi,0x0
  01857: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01860: 00 	movabs rax,0x0
  0186a:    	mov    QWORD PTR [rsp-0x28],rax
  0186f: 00 	movabs r13,0x0
  01879:    	call   0xffff9c31
  0187e:    	lea    rdi,[rbp-0x8]
  01882:    	mov    QWORD PTR [rbx],rdi
  01885:    	movq   xmm2,QWORD PTR [rsp]
  0188a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01890:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01896:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0189c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  018a2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  018a8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  018af: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  018b6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  018bd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  018c4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  018cb:    	add    rsp,0x60
  018cf:    	test   rax,rax
  018d2:    	je     0x3cb8c
  018d8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00116 
:00118 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  018df: 01 	sub    DWORD PTR [rip+0xd2f],0x1        # 0x2615
  018e6:    	je     0x3cc14
  018ec: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  018f3: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  018fa:    	sub    rsp,0x60
  018fe:    	movq   QWORD PTR [rsp],xmm2
  01903:    	movq   QWORD PTR [rsp+0x8],xmm3
  01909:    	movq   QWORD PTR [rsp+0x10],xmm4
  0190f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01915:    	movq   QWORD PTR [rsp+0x20],xmm6
  0191b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01921: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01928: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0192f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01936: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0193d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01944:    	mov    rdx,rdi
  01947:    	mov    rcx,rsi
  0194a:    	mov    rdi,rbx
  0194d:    	mov    rsi,r12
  01950: 34 	movabs rax,0x563437f15c00
  0195a:    	call   rax
  0195c:    	movq   xmm2,QWORD PTR [rsp]
  01961:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01967:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0196d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01973:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01979:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0197f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01986: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0198d: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01994: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0199b: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  019a2:    	add    rsp,0x60
  019a6: 34 	movabs r13,0x56343987ee10
  019b0:    	test   rax,rax
  019b3:    	je     0xffff9c6c
  019b9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00119 _ = %14.call x=(%15; 1)              [<INVALID>]
  019c0: 01 	sub    DWORD PTR [rip+0xc52],0x1        # 0x2619
  019c7:    	je     0x3ccaf
  019cd:    	sub    rsp,0x60
  019d1:    	movq   QWORD PTR [rsp],xmm2
  019d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  019dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  019e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  019e8:    	movq   QWORD PTR [rsp+0x20],xmm6
  019ee:    	movq   QWORD PTR [rsp+0x28],xmm7
  019f4: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  019fb: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01a02: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01a09: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01a10: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01a17: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01a1e: 34 	movabs rax,0x563437f53600
  01a28:    	call   rax
  01a2a:    	mov    r15d,eax
  01a2d: 00 	cmp    r15d,DWORD PTR [rip+0xbed]        # 0x2621
  01a34:    	jne    0x3ccd1
  01a3a:    	mov    eax,DWORD PTR [rip+0xffffffffffffadea]        # 0xffffc82a
  01a40:    	cmp    DWORD PTR [rip+0xbd7],eax        # 0x261d
  01a46:    	jne    0x3ccd1
  01a4c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a55:    	mov    QWORD PTR [rsp-0x38],rcx
  01a5a:    	mov    rax,QWORD PTR [rbx]
  01a5d:    	lea    rdi,[rsp-0x18]
  01a62:    	mov    QWORD PTR [rdi],rax
  01a65:    	mov    QWORD PTR [rbx],rdi
  01a68: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01a6f:    	mov    QWORD PTR [rsp-0x38],rax
  01a74: 00 	mov    rdi,0x1
  01a7b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01a82:    	mov    QWORD PTR [rsp-0x40],rax
  01a87: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a90: 00 	movabs rax,0x0
  01a9a:    	mov    QWORD PTR [rsp-0x28],rax
  01a9f: 00 	movabs r13,0x0
  01aa9:    	call   0xffff9c31
  01aae:    	lea    rdi,[rbp-0x8]
  01ab2:    	mov    QWORD PTR [rbx],rdi
  01ab5:    	movq   xmm2,QWORD PTR [rsp]
  01aba:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01ac0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01ac6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01acc:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01ad2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01ad8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01adf: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01ae6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01aed: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01af4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01afb:    	add    rsp,0x60
  01aff:    	test   rax,rax
  01b02:    	je     0x3cd40
:00120 
:00122 %14 = dynvar(2, %2)
  01b08:    	mov    rax,QWORD PTR [rbp-0x10]
  01b0c:    	mov    rax,QWORD PTR [rax]
  01b0f:    	mov    rax,QWORD PTR [rax-0x28]
  01b13: ff 	mov    QWORD PTR [rbp-0x98],rax
:00123 %16 = dynvar(2, %2)
  01b1a:    	mov    rax,QWORD PTR [rbp-0x10]
  01b1e:    	mov    rax,QWORD PTR [rax]
  01b21:    	mov    rax,QWORD PTR [rax-0x28]
  01b25: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00124 %15 = %16.call y()                   [<INVALID>]
  01b2c: 01 	sub    DWORD PTR [rip+0xaf2],0x1        # 0x2625
  01b33:    	je     0x3cdc8
  01b39:    	sub    rsp,0x60
  01b3d:    	movq   QWORD PTR [rsp],xmm2
  01b42:    	movq   QWORD PTR [rsp+0x8],xmm3
  01b48:    	movq   QWORD PTR [rsp+0x10],xmm4
  01b4e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01b54:    	movq   QWORD PTR [rsp+0x20],xmm6
  01b5a:    	movq   QWORD PTR [rsp+0x28],xmm7
  01b60: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01b67: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01b6e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01b75: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01b7c: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01b83: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01b8a: 34 	movabs rax,0x563437f53600
  01b94:    	call   rax
  01b96:    	mov    r15d,eax
  01b99: 00 	cmp    r15d,DWORD PTR [rip+0xa8d]        # 0x262d
  01ba0:    	jne    0x3cdea
  01ba6:    	mov    eax,DWORD PTR [rip+0xffffffffffffac7e]        # 0xffffc82a
  01bac:    	cmp    DWORD PTR [rip+0xa77],eax        # 0x2629
  01bb2:    	jne    0x3cdea
  01bb8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bc1:    	mov    QWORD PTR [rsp-0x38],rcx
  01bc6:    	mov    rax,QWORD PTR [rbx]
  01bc9:    	lea    rdi,[rsp-0x18]
  01bce:    	mov    QWORD PTR [rdi],rax
  01bd1:    	mov    QWORD PTR [rbx],rdi
  01bd4: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01bdb:    	mov    QWORD PTR [rsp-0x38],rax
  01be0: 00 	mov    rdi,0x0
  01be7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bf0: 00 	movabs rax,0x0
  01bfa:    	mov    QWORD PTR [rsp-0x28],rax
  01bff: 00 	movabs r13,0x0
  01c09:    	call   0xffff9c31
  01c0e:    	lea    rdi,[rbp-0x8]
  01c12:    	mov    QWORD PTR [rbx],rdi
  01c15:    	movq   xmm2,QWORD PTR [rsp]
  01c1a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01c20:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01c26:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01c2c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01c32:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01c38: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01c3f: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01c46: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01c4d: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01c54: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01c5b:    	add    rsp,0x60
  01c5f:    	test   rax,rax
  01c62:    	je     0x3ce59
  01c68: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00125 
:00127 %16 = %13.call y()                   [<INVALID>]
  01c6f: 01 	sub    DWORD PTR [rip+0x9bb],0x1        # 0x2631
  01c76:    	je     0x3cee1
  01c7c:    	sub    rsp,0x60
  01c80:    	movq   QWORD PTR [rsp],xmm2
  01c85:    	movq   QWORD PTR [rsp+0x8],xmm3
  01c8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01c91:    	movq   QWORD PTR [rsp+0x18],xmm5
  01c97:    	movq   QWORD PTR [rsp+0x20],xmm6
  01c9d:    	movq   QWORD PTR [rsp+0x28],xmm7
  01ca3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01caa: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01cb1: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01cb8: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01cbf: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01cc6: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01ccd: 34 	movabs rax,0x563437f53600
  01cd7:    	call   rax
  01cd9:    	mov    r15d,eax
  01cdc: 00 	cmp    r15d,DWORD PTR [rip+0x956]        # 0x2639
  01ce3:    	jne    0x3cf03
  01ce9:    	mov    eax,DWORD PTR [rip+0xffffffffffffab3b]        # 0xffffc82a
  01cef:    	cmp    DWORD PTR [rip+0x940],eax        # 0x2635
  01cf5:    	jne    0x3cf03
  01cfb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01d04:    	mov    QWORD PTR [rsp-0x38],rcx
  01d09:    	mov    rax,QWORD PTR [rbx]
  01d0c:    	lea    rdi,[rsp-0x18]
  01d11:    	mov    QWORD PTR [rdi],rax
  01d14:    	mov    QWORD PTR [rbx],rdi
  01d17: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01d1e:    	mov    QWORD PTR [rsp-0x38],rax
  01d23: 00 	mov    rdi,0x0
  01d2a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01d33: 00 	movabs rax,0x0
  01d3d:    	mov    QWORD PTR [rsp-0x28],rax
  01d42: 00 	movabs r13,0x0
  01d4c:    	call   0xffff9c31
  01d51:    	lea    rdi,[rbp-0x8]
  01d55:    	mov    QWORD PTR [rbx],rdi
  01d58:    	movq   xmm2,QWORD PTR [rsp]
  01d5d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01d63:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01d69:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01d6f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01d75:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01d7b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01d82: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01d89: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01d90: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01d97: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01d9e:    	add    rsp,0x60
  01da2:    	test   rax,rax
  01da5:    	je     0x3cf72
  01dab: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00128 
:00130 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01db2: 01 	sub    DWORD PTR [rip+0x884],0x1        # 0x263d
  01db9:    	je     0x3cffa
  01dbf: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01dc6: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  01dcd:    	sub    rsp,0x60
  01dd1:    	movq   QWORD PTR [rsp],xmm2
  01dd6:    	movq   QWORD PTR [rsp+0x8],xmm3
  01ddc:    	movq   QWORD PTR [rsp+0x10],xmm4
  01de2:    	movq   QWORD PTR [rsp+0x18],xmm5
  01de8:    	movq   QWORD PTR [rsp+0x20],xmm6
  01dee:    	movq   QWORD PTR [rsp+0x28],xmm7
  01df4: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01dfb: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01e02: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01e09: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01e10: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01e17:    	mov    rdx,rdi
  01e1a:    	mov    rcx,rsi
  01e1d:    	mov    rdi,rbx
  01e20:    	mov    rsi,r12
  01e23: 34 	movabs rax,0x563437f15c00
  01e2d:    	call   rax
  01e2f:    	movq   xmm2,QWORD PTR [rsp]
  01e34:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01e3a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01e40:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01e46:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01e4c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01e52: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01e59: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01e60: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01e67: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01e6e: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01e75:    	add    rsp,0x60
  01e79: 34 	movabs r13,0x56343987eed0
  01e83:    	test   rax,rax
  01e86:    	je     0xffff9c6c
  01e8c: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00131 _ = %14.call y=(%15; 1)              [<INVALID>]
  01e93: 01 	sub    DWORD PTR [rip+0x7a7],0x1        # 0x2641
  01e9a:    	je     0x3d095
  01ea0:    	sub    rsp,0x60
  01ea4:    	movq   QWORD PTR [rsp],xmm2
  01ea9:    	movq   QWORD PTR [rsp+0x8],xmm3
  01eaf:    	movq   QWORD PTR [rsp+0x10],xmm4
  01eb5:    	movq   QWORD PTR [rsp+0x18],xmm5
  01ebb:    	movq   QWORD PTR [rsp+0x20],xmm6
  01ec1:    	movq   QWORD PTR [rsp+0x28],xmm7
  01ec7: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01ece: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01ed5: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01edc: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01ee3: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01eea: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01ef1: 34 	movabs rax,0x563437f53600
  01efb:    	call   rax
  01efd:    	mov    r15d,eax
  01f00: 00 	cmp    r15d,DWORD PTR [rip+0x742]        # 0x2649
  01f07:    	jne    0x3d0b7
  01f0d:    	mov    eax,DWORD PTR [rip+0xffffffffffffa917]        # 0xffffc82a
  01f13:    	cmp    DWORD PTR [rip+0x72c],eax        # 0x2645
  01f19:    	jne    0x3d0b7
  01f1f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01f28:    	mov    QWORD PTR [rsp-0x38],rcx
  01f2d:    	mov    rax,QWORD PTR [rbx]
  01f30:    	lea    rdi,[rsp-0x18]
  01f35:    	mov    QWORD PTR [rdi],rax
  01f38:    	mov    QWORD PTR [rbx],rdi
  01f3b: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01f42:    	mov    QWORD PTR [rsp-0x38],rax
  01f47: 00 	mov    rdi,0x1
  01f4e: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01f55:    	mov    QWORD PTR [rsp-0x40],rax
  01f5a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01f63: 00 	movabs rax,0x0
  01f6d:    	mov    QWORD PTR [rsp-0x28],rax
  01f72: 00 	movabs r13,0x0
  01f7c:    	call   0xffff9c31
  01f81:    	lea    rdi,[rbp-0x8]
  01f85:    	mov    QWORD PTR [rbx],rdi
  01f88:    	movq   xmm2,QWORD PTR [rsp]
  01f8d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01f93:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01f99:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01f9f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01fa5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01fab: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01fb2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01fb9: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01fc0: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01fc7: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01fce:    	add    rsp,0x60
  01fd2:    	test   rax,rax
  01fd5:    	je     0x3d126
:00132 
:00134 %14 = dynvar(2, %2)
  01fdb:    	mov    rax,QWORD PTR [rbp-0x10]
  01fdf:    	mov    rax,QWORD PTR [rax]
  01fe2:    	mov    rax,QWORD PTR [rax-0x28]
  01fe6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00135 %16 = dynvar(2, %2)
  01fed:    	mov    rax,QWORD PTR [rbp-0x10]
  01ff1:    	mov    rax,QWORD PTR [rax]
  01ff4:    	mov    rax,QWORD PTR [rax-0x28]
  01ff8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00136 %15 = %16.call z()                   [<INVALID>]
  01fff: 01 	sub    DWORD PTR [rip+0x647],0x1        # 0x264d
  02006:    	je     0x3d1ae
  0200c:    	sub    rsp,0x60
  02010:    	movq   QWORD PTR [rsp],xmm2
  02015:    	movq   QWORD PTR [rsp+0x8],xmm3
  0201b:    	movq   QWORD PTR [rsp+0x10],xmm4
  02021:    	movq   QWORD PTR [rsp+0x18],xmm5
  02027:    	movq   QWORD PTR [rsp+0x20],xmm6
  0202d:    	movq   QWORD PTR [rsp+0x28],xmm7
  02033: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0203a: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02041: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02048: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0204f: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02056: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0205d: 34 	movabs rax,0x563437f53600
  02067:    	call   rax
  02069:    	mov    r15d,eax
  0206c: 00 	cmp    r15d,DWORD PTR [rip+0x5e2]        # 0x2655
  02073:    	jne    0x3d1d0
  02079:    	mov    eax,DWORD PTR [rip+0xffffffffffffa7ab]        # 0xffffc82a
  0207f:    	cmp    DWORD PTR [rip+0x5cc],eax        # 0x2651
  02085:    	jne    0x3d1d0
  0208b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  02094:    	mov    QWORD PTR [rsp-0x38],rcx
  02099:    	mov    rax,QWORD PTR [rbx]
  0209c:    	lea    rdi,[rsp-0x18]
  020a1:    	mov    QWORD PTR [rdi],rax
  020a4:    	mov    QWORD PTR [rbx],rdi
  020a7: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  020ae:    	mov    QWORD PTR [rsp-0x38],rax
  020b3: 00 	mov    rdi,0x0
  020ba: 00 	mov    QWORD PTR [rsp-0x30],0x0
  020c3: 00 	movabs rax,0x0
  020cd:    	mov    QWORD PTR [rsp-0x28],rax
  020d2: 00 	movabs r13,0x0
  020dc:    	call   0xffff9c31
  020e1:    	lea    rdi,[rbp-0x8]
  020e5:    	mov    QWORD PTR [rbx],rdi
  020e8:    	movq   xmm2,QWORD PTR [rsp]
  020ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  020f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  020f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  020ff:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02105:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0210b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02112: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  02119: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  02120: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02127: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0212e:    	add    rsp,0x60
  02132:    	test   rax,rax
  02135:    	je     0x3d23f
  0213b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00137 
:00139 %16 = %13.call z()                   [<INVALID>]
  02142: 01 	sub    DWORD PTR [rip+0x510],0x1        # 0x2659
  02149:    	je     0x3d2c7
  0214f:    	sub    rsp,0x60
  02153:    	movq   QWORD PTR [rsp],xmm2
  02158:    	movq   QWORD PTR [rsp+0x8],xmm3
  0215e:    	movq   QWORD PTR [rsp+0x10],xmm4
  02164:    	movq   QWORD PTR [rsp+0x18],xmm5
  0216a:    	movq   QWORD PTR [rsp+0x20],xmm6
  02170:    	movq   QWORD PTR [rsp+0x28],xmm7
  02176: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0217d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02184: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0218b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  02192: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02199: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  021a0: 34 	movabs rax,0x563437f53600
  021aa:    	call   rax
  021ac:    	mov    r15d,eax
  021af: 00 	cmp    r15d,DWORD PTR [rip+0x4ab]        # 0x2661
  021b6:    	jne    0x3d2e9
  021bc:    	mov    eax,DWORD PTR [rip+0xffffffffffffa668]        # 0xffffc82a
  021c2:    	cmp    DWORD PTR [rip+0x495],eax        # 0x265d
  021c8:    	jne    0x3d2e9
  021ce: 00 	mov    QWORD PTR [rsp-0x20],0x0
  021d7:    	mov    QWORD PTR [rsp-0x38],rcx
  021dc:    	mov    rax,QWORD PTR [rbx]
  021df:    	lea    rdi,[rsp-0x18]
  021e4:    	mov    QWORD PTR [rdi],rax
  021e7:    	mov    QWORD PTR [rbx],rdi
  021ea: ff 	mov    rax,QWORD PTR [rbp-0x90]
  021f1:    	mov    QWORD PTR [rsp-0x38],rax
  021f6: 00 	mov    rdi,0x0
  021fd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02206: 00 	movabs rax,0x0
  02210:    	mov    QWORD PTR [rsp-0x28],rax
  02215: 00 	movabs r13,0x0
  0221f:    	call   0xffff9c31
  02224:    	lea    rdi,[rbp-0x8]
  02228:    	mov    QWORD PTR [rbx],rdi
  0222b:    	movq   xmm2,QWORD PTR [rsp]
  02230:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02236:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0223c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02242:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02248:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0224e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02255: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0225c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  02263: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0226a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02271:    	add    rsp,0x60
  02275:    	test   rax,rax
  02278:    	je     0x3d358
  0227e: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00140 
:00142 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  02285: 01 	sub    DWORD PTR [rip+0x3d9],0x1        # 0x2665
  0228c:    	je     0x3d3e0
  02292: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  02299: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  022a0:    	sub    rsp,0x60
  022a4:    	movq   QWORD PTR [rsp],xmm2
  022a9:    	movq   QWORD PTR [rsp+0x8],xmm3
  022af:    	movq   QWORD PTR [rsp+0x10],xmm4
  022b5:    	movq   QWORD PTR [rsp+0x18],xmm5
  022bb:    	movq   QWORD PTR [rsp+0x20],xmm6
  022c1:    	movq   QWORD PTR [rsp+0x28],xmm7
  022c7: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  022ce: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  022d5: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  022dc: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  022e3: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  022ea:    	mov    rdx,rdi
  022ed:    	mov    rcx,rsi
  022f0:    	mov    rdi,rbx
  022f3:    	mov    rsi,r12
  022f6: 34 	movabs rax,0x563437f15c00
  02300:    	call   rax
  02302:    	movq   xmm2,QWORD PTR [rsp]
  02307:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0230d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02313:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02319:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0231f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02325: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0232c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  02333: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0233a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02341: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02348:    	add    rsp,0x60
  0234c: 34 	movabs r13,0x56343987ef90
  02356:    	test   rax,rax
  02359:    	je     0xffff9c6c
  0235f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00143 _ = %14.call z=(%15; 1)              [<INVALID>]
  02366: 01 	sub    DWORD PTR [rip+0x2fc],0x1        # 0x2669
  0236d:    	je     0x3d47b
  02373:    	sub    rsp,0x60
  02377:    	movq   QWORD PTR [rsp],xmm2
  0237c:    	movq   QWORD PTR [rsp+0x8],xmm3
  02382:    	movq   QWORD PTR [rsp+0x10],xmm4
  02388:    	movq   QWORD PTR [rsp+0x18],xmm5
  0238e:    	movq   QWORD PTR [rsp+0x20],xmm6
  02394:    	movq   QWORD PTR [rsp+0x28],xmm7
  0239a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  023a1: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  023a8: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  023af: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  023b6: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  023bd: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  023c4: 34 	movabs rax,0x563437f53600
  023ce:    	call   rax
  023d0:    	mov    r15d,eax
  023d3: 00 	cmp    r15d,DWORD PTR [rip+0x297]        # 0x2671
  023da:    	jne    0x3d49d
  023e0:    	mov    eax,DWORD PTR [rip+0xffffffffffffa444]        # 0xffffc82a
  023e6:    	cmp    DWORD PTR [rip+0x281],eax        # 0x266d
  023ec:    	jne    0x3d49d
  023f2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  023fb:    	mov    QWORD PTR [rsp-0x38],rcx
  02400:    	mov    rax,QWORD PTR [rbx]
  02403:    	lea    rdi,[rsp-0x18]
  02408:    	mov    QWORD PTR [rdi],rax
  0240b:    	mov    QWORD PTR [rbx],rdi
  0240e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02415:    	mov    QWORD PTR [rsp-0x38],rax
  0241a: 00 	mov    rdi,0x1
  02421: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02428:    	mov    QWORD PTR [rsp-0x40],rax
  0242d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02436: 00 	movabs rax,0x0
  02440:    	mov    QWORD PTR [rsp-0x28],rax
  02445: 00 	movabs r13,0x0
  0244f:    	call   0xffff9c31
  02454:    	lea    rdi,[rbp-0x8]
  02458:    	mov    QWORD PTR [rbx],rdi
  0245b:    	movq   xmm2,QWORD PTR [rsp]
  02460:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02466:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0246c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02472:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02478:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0247e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02485: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0248c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  02493: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0249a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  024a1:    	add    rsp,0x60
  024a5:    	test   rax,rax
  024a8:    	je     0x3d50c
:00144 
:00146 %14 = %15
  024ae: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  024b5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00147 ret %14
  024bc: ff 	mov    rax,QWORD PTR [rbp-0x98]
  024c3:    	leave  
  024c4:    	ret    
:00148 %14 = nil
  024c5: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00149 ret %14
  024d0: ff 	mov    rax,QWORD PTR [rbp-0x98]
  024d7:    	leave  
  024d8:    	ret    
==> start whole compile: vnormalize FuncId(68) self_class:Vec start:[00000] bytecode:0x5634398639e0
<== finished compile. elapsed:56.3µs
offset:Pos(35396) code: 1761 bytes  data: 99 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x60
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x30],rax
  00016: mov    QWORD PTR [rbp-0x38],rax
  0001a: mov    QWORD PTR [rbp-0x40],rax
  0001e: mov    QWORD PTR [rbp-0x48],rax
  00022: mov    QWORD PTR [rbp-0x50],rax
  00026: mov    QWORD PTR [rbp-0x58],rax
  0002a: mov    rdi,QWORD PTR [rbp-0x28]
  0002e: test   rdi,0x7
  00035: jne    0x3aeb5
  0003b: cmp    DWORD PTR [rdi+0x4],0x28
  0003f: jne    0x3aeb5
:00000 init_method reg:7 arg:0 pos:0 req:0 stack_offset:6
:00001 %3 = %0.call vlength()               [Vec]
  00045: mov    rdi,QWORD PTR [rbp-0x28]
  00049: cmp    DWORD PTR [rip+0xffffffffffffa165],0x26        # 0xffffa1b5
  00050: jne    0x3aec4
  00056: mov    QWORD PTR [rsp-0x20],0x0
  0005f: mov    QWORD PTR [rsp-0x38],rcx
  00064: mov    rax,QWORD PTR [rbx]
  00067: lea    rdi,[rsp-0x18]
  0006c: mov    QWORD PTR [rdi],rax
  0006f: mov    QWORD PTR [rbx],rdi
  00072: mov    rax,QWORD PTR [rbp-0x28]
  00076: mov    QWORD PTR [rsp-0x38],rax
  0007b: mov    rdi,0x0
  00082: mov    QWORD PTR [rsp-0x30],0x0
  0008b: movabs rax,0x600000043
  00095: mov    QWORD PTR [rsp-0x28],rax
  0009a: movabs r13,0x563439850b90
  000a4: call   0xffffab46
  000a9: lea    rdi,[rbp-0x8]
  000ad: mov    QWORD PTR [rbx],rdi
  000b0: movabs r13,0x563439863a10
  000ba: test   rax,rax
  000bd: je     0xffff75f7
  000c3: mov    QWORD PTR [rbp-0x40],rax
:00002 
:00004 %1 = %3
  000c7: mov    rax,QWORD PTR [rbp-0x40]
  000cb: mov    QWORD PTR [rbp-0x30],rax
:00005 %3 = const[Vec]                      [Vec]
  000cf: mov    rax,QWORD PTR [rip+0xffffffffffffa0e6]        # 0xffffa1bc
  000d6: cmp    rax,QWORD PTR [rip+0x61f]        # 0x6fc
  000dd: jne    0x3aed3
  000e3: mov    rax,QWORD PTR [rip+0x602]        # 0x6ec
  000ea: mov    QWORD PTR [rbp-0x40],rax
:00006 %4 = @x: Vec[IvarId(0)]
  000ee: mov    rdi,QWORD PTR [rbp-0x28]
  000f2: mov    rax,QWORD PTR [rdi+0x10]
  000f6: mov    QWORD PTR [rbp-0x48],rax
:00007 %5 = @y: Vec[IvarId(1)]
  000fa: mov    rdi,QWORD PTR [rbp-0x28]
  000fe: mov    rax,QWORD PTR [rdi+0x18]
  00102: mov    QWORD PTR [rbp-0x50],rax
:00008 %6 = @z: Vec[IvarId(2)]
  00106: mov    rdi,QWORD PTR [rbp-0x28]
  0010a: mov    rax,QWORD PTR [rdi+0x20]
  0010e: mov    QWORD PTR [rbp-0x58],rax
:00009 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
  00112: mov    rdi,QWORD PTR [rbp-0x40]
  00116: test   rdi,0x7
  0011d: jne    0x3af19
  00123: cmp    DWORD PTR [rdi+0x4],0x29
  00127: jne    0x3af19
  0012d: cmp    DWORD PTR [rip+0xffffffffffffa081],0x26        # 0xffffa1b5
  00134: jne    0x3af19
  0013a: mov    r9,0x0
  00141: mov    rdx,rdi
  00144: mov    QWORD PTR [rsp-0x20],0x0
  0014d: mov    QWORD PTR [rsp-0x38],rcx
  00152: mov    rax,QWORD PTR [rbx]
  00155: lea    rdi,[rsp-0x18]
  0015a: mov    QWORD PTR [rdi],rax
  0015d: mov    QWORD PTR [rbx],rdi
  00160: lea    rcx,[rbp-0x48]
  00164: mov    r8,0x3
  0016b: call   0x3af28
  00170: lea    rdi,[rbp-0x8]
  00174: mov    QWORD PTR [rbx],rdi
  00177: movabs r13,0x563439863a90
  00181: test   rax,rax
  00184: je     0xffff75f7
  0018a: mov    QWORD PTR [rbp-0x38],rax
:00010 
:00012 %3 = literal[1e-17]
  0018e: movq   xmm2,QWORD PTR [rip+0x576]        # 0x70c
  00196: movabs rax,0xe33877aa3236a4ba
  001a0: mov    QWORD PTR [rbp-0x40],rax
:00013 _%3 = %1 > %3                        [Float][Float]
:00014 condnotbr _%3 =>:00037
  001a4: mov    rdi,QWORD PTR [rbp-0x30]
  001a8: test   rdi,0x1
  001af: jne    0x3af5a
  001b5: test   rdi,0x2
  001bc: je     0x1f8
  001c2: xorps  xmm3,xmm3
  001c5: movabs rax,0x8000000000000002
  001cf: cmp    rdi,rax
  001d2: je     0x20a
  001d8: mov    rax,rdi
  001db: sar    rax,0x3f
  001df: add    rax,0x2
  001e3: and    rdi,0xfffffffffffffffc
  001e7: or     rdi,rax
  001ea: rol    rdi,0x3d
  001ee: movq   xmm3,rdi
  001f3: jmp    0x20a
  001f8: call   0xffff7650
  001fd: test   rax,rax
  00200: je     0x3af5a
  00206: movq   xmm3,xmm0
  0020a: ucomisd xmm3,xmm2
  0020e: jbe    0x3b18b
:00015 %3 = %2.call x()                     [Vec]
  00214: mov    rdi,QWORD PTR [rbp-0x38]
  00218: test   rdi,0x7
  0021f: jne    0x3af69
  00225: cmp    DWORD PTR [rdi+0x4],0x28
  00229: jne    0x3af69
  0022f: cmp    DWORD PTR [rip+0xffffffffffff9f7f],0x26        # 0xffffa1b5
  00236: jne    0x3af69
  0023c: mov    esi,DWORD PTR [rip+0x4d6]        # 0x718
  00242: cmp    esi,0xffffffff
  00245: je     0x3af78
  0024b: cmp    WORD PTR [rdi+0x2],0x3
  00250: jne    0x269
  00256: cmp    esi,0x6
  00259: jge    0x269
  0025f: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00264: jmp    0x287
  00269: sub    rsp,0x10
  0026d: movq   QWORD PTR [rsp],xmm3
  00272: movabs rax,0x563437ed0590
  0027c: call   rax
  0027e: movq   xmm3,QWORD PTR [rsp]
  00283: add    rsp,0x10
  00287: mov    QWORD PTR [rbp-0x40],rax
:00016 
:00018 %3 = %3 / %1                         [Float][Float]
  0028b: mov    rdi,QWORD PTR [rbp-0x40]
  0028f: test   rdi,0x1
  00296: jne    0x3afb3
  0029c: test   rdi,0x2
  002a3: je     0x2df
  002a9: xorps  xmm2,xmm2
  002ac: movabs rax,0x8000000000000002
  002b6: cmp    rdi,rax
  002b9: je     0x2f1
  002bf: mov    rax,rdi
  002c2: sar    rax,0x3f
  002c6: add    rax,0x2
  002ca: and    rdi,0xfffffffffffffffc
  002ce: or     rdi,rax
  002d1: rol    rdi,0x3d
  002d5: movq   xmm2,rdi
  002da: jmp    0x2f1
  002df: call   0xffff7650
  002e4: test   rax,rax
  002e7: je     0x3afb3
  002ed: movq   xmm2,xmm0
  002f1: movq   rax,xmm3
  002f6: test   rax,rax
  002f9: je     0xffff761c
  002ff: divsd  xmm2,xmm3
:00019 _ = %2.call x=(%3; 1)                [Vec]
  00303: movq   xmm0,xmm2
  00307: call   0xffff7743
  0030c: mov    QWORD PTR [rbp-0x40],rax
  00310: mov    rdi,QWORD PTR [rbp-0x38]
  00314: test   rdi,0x7
  0031b: jne    0x3afc2
  00321: cmp    DWORD PTR [rdi+0x4],0x28
  00325: jne    0x3afc2
  0032b: cmp    DWORD PTR [rip+0xffffffffffff9e83],0x26        # 0xffffa1b5
  00332: jne    0x3afc2
  00338: mov    esi,DWORD PTR [rip+0x3e2]        # 0x720
  0033e: cmp    esi,0xffffffff
  00341: je     0x3afd1
  00347: cmp    WORD PTR [rdi+0x2],0x3
  0034c: jne    0x369
  00352: cmp    esi,0x6
  00355: jge    0x369
  0035b: mov    rax,QWORD PTR [rbp-0x40]
  0035f: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00364: jmp    0x3aa
  00369: sub    rsp,0x10
  0036d: movq   QWORD PTR [rsp],xmm2
  00372: movq   QWORD PTR [rsp+0x8],xmm3
  00378: mov    rdx,QWORD PTR [rbp-0x40]
  0037c: movabs rax,0x563437ed0810
  00386: call   rax
  00388: movq   xmm2,QWORD PTR [rsp]
  0038d: movq   xmm3,QWORD PTR [rsp+0x8]
  00393: add    rsp,0x10
  00397: movabs r13,0x563439863b30
  003a1: test   rax,rax
  003a4: je     0xffff75f7
:00020 
:00022 %3 = %2.call y()                     [Vec]
  003aa: mov    rdi,QWORD PTR [rbp-0x38]
  003ae: test   rdi,0x7
  003b5: jne    0x3b01f
  003bb: cmp    DWORD PTR [rdi+0x4],0x28
  003bf: jne    0x3b01f
  003c5: cmp    DWORD PTR [rip+0xffffffffffff9de9],0x26        # 0xffffa1b5
  003cc: jne    0x3b01f
  003d2: mov    esi,DWORD PTR [rip+0x350]        # 0x728
  003d8: cmp    esi,0xffffffff
  003db: je     0x3b02e
  003e1: cmp    WORD PTR [rdi+0x2],0x3
  003e6: jne    0x3ff
  003ec: cmp    esi,0x6
  003ef: jge    0x3ff
  003f5: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003fa: jmp    0x41d
  003ff: sub    rsp,0x10
  00403: movq   QWORD PTR [rsp],xmm3
  00408: movabs rax,0x563437ed0590
  00412: call   rax
  00414: movq   xmm3,QWORD PTR [rsp]
  00419: add    rsp,0x10
  0041d: mov    QWORD PTR [rbp-0x40],rax
:00023 
:00025 %3 = %3 / %1                         [Float][Float]
  00421: mov    rdi,QWORD PTR [rbp-0x40]
  00425: test   rdi,0x1
  0042c: jne    0x3b069
  00432: test   rdi,0x2
  00439: je     0x475
  0043f: xorps  xmm2,xmm2
  00442: movabs rax,0x8000000000000002
  0044c: cmp    rdi,rax
  0044f: je     0x487
  00455: mov    rax,rdi
  00458: sar    rax,0x3f
  0045c: add    rax,0x2
  00460: and    rdi,0xfffffffffffffffc
  00464: or     rdi,rax
  00467: rol    rdi,0x3d
  0046b: movq   xmm2,rdi
  00470: jmp    0x487
  00475: call   0xffff7650
  0047a: test   rax,rax
  0047d: je     0x3b069
  00483: movq   xmm2,xmm0
  00487: movq   rax,xmm3
  0048c: test   rax,rax
  0048f: je     0xffff761c
  00495: divsd  xmm2,xmm3
:00026 _ = %2.call y=(%3; 1)                [Vec]
  00499: movq   xmm0,xmm2
  0049d: call   0xffff7743
  004a2: mov    QWORD PTR [rbp-0x40],rax
  004a6: mov    rdi,QWORD PTR [rbp-0x38]
  004aa: test   rdi,0x7
  004b1: jne    0x3b078
  004b7: cmp    DWORD PTR [rdi+0x4],0x28
  004bb: jne    0x3b078
  004c1: cmp    DWORD PTR [rip+0xffffffffffff9ced],0x26        # 0xffffa1b5
  004c8: jne    0x3b078
  004ce: mov    esi,DWORD PTR [rip+0x25c]        # 0x730
  004d4: cmp    esi,0xffffffff
  004d7: je     0x3b087
  004dd: cmp    WORD PTR [rdi+0x2],0x3
  004e2: jne    0x4ff
  004e8: cmp    esi,0x6
  004eb: jge    0x4ff
  004f1: mov    rax,QWORD PTR [rbp-0x40]
  004f5: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  004fa: jmp    0x540
  004ff: sub    rsp,0x10
  00503: movq   QWORD PTR [rsp],xmm2
  00508: movq   QWORD PTR [rsp+0x8],xmm3
  0050e: mov    rdx,QWORD PTR [rbp-0x40]
  00512: movabs rax,0x563437ed0810
  0051c: call   rax
  0051e: movq   xmm2,QWORD PTR [rsp]
  00523: movq   xmm3,QWORD PTR [rsp+0x8]
  00529: add    rsp,0x10
  0052d: movabs r13,0x563439863ba0
  00537: test   rax,rax
  0053a: je     0xffff75f7
:00027 
:00029 %3 = %2.call z()                     [Vec]
  00540: mov    rdi,QWORD PTR [rbp-0x38]
  00544: test   rdi,0x7
  0054b: jne    0x3b0d5
  00551: cmp    DWORD PTR [rdi+0x4],0x28
  00555: jne    0x3b0d5
  0055b: cmp    DWORD PTR [rip+0xffffffffffff9c53],0x26        # 0xffffa1b5
  00562: jne    0x3b0d5
  00568: mov    esi,DWORD PTR [rip+0x1ca]        # 0x738
  0056e: cmp    esi,0xffffffff
  00571: je     0x3b0e4
  00577: cmp    WORD PTR [rdi+0x2],0x3
  0057c: jne    0x595
  00582: cmp    esi,0x6
  00585: jge    0x595
  0058b: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00590: jmp    0x5b3
  00595: sub    rsp,0x10
  00599: movq   QWORD PTR [rsp],xmm3
  0059e: movabs rax,0x563437ed0590
  005a8: call   rax
  005aa: movq   xmm3,QWORD PTR [rsp]
  005af: add    rsp,0x10
  005b3: mov    QWORD PTR [rbp-0x40],rax
:00030 
:00032 %3 = %3 / %1                         [Float][Float]
  005b7: mov    rdi,QWORD PTR [rbp-0x40]
  005bb: test   rdi,0x1
  005c2: jne    0x3b11f
  005c8: test   rdi,0x2
  005cf: je     0x60b
  005d5: xorps  xmm2,xmm2
  005d8: movabs rax,0x8000000000000002
  005e2: cmp    rdi,rax
  005e5: je     0x61d
  005eb: mov    rax,rdi
  005ee: sar    rax,0x3f
  005f2: add    rax,0x2
  005f6: and    rdi,0xfffffffffffffffc
  005fa: or     rdi,rax
  005fd: rol    rdi,0x3d
  00601: movq   xmm2,rdi
  00606: jmp    0x61d
  0060b: call   0xffff7650
  00610: test   rax,rax
  00613: je     0x3b11f
  00619: movq   xmm2,xmm0
  0061d: movq   rax,xmm3
  00622: test   rax,rax
  00625: je     0xffff761c
  0062b: divsd  xmm2,xmm3
:00033 _ = %2.call z=(%3; 1)                [Vec]
  0062f: movq   xmm0,xmm2
  00633: call   0xffff7743
  00638: mov    QWORD PTR [rbp-0x40],rax
  0063c: mov    rdi,QWORD PTR [rbp-0x38]
  00640: test   rdi,0x7
  00647: jne    0x3b12e
  0064d: cmp    DWORD PTR [rdi+0x4],0x28
  00651: jne    0x3b12e
  00657: cmp    DWORD PTR [rip+0xffffffffffff9b57],0x26        # 0xffffa1b5
  0065e: jne    0x3b12e
  00664: mov    esi,DWORD PTR [rip+0xd6]        # 0x740
  0066a: cmp    esi,0xffffffff
  0066d: je     0x3b13d
  00673: cmp    WORD PTR [rdi+0x2],0x3
  00678: jne    0x695
  0067e: cmp    esi,0x6
  00681: jge    0x695
  00687: mov    rax,QWORD PTR [rbp-0x40]
  0068b: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00690: jmp    0x6d6
  00695: sub    rsp,0x10
  00699: movq   QWORD PTR [rsp],xmm2
  0069e: movq   QWORD PTR [rsp+0x8],xmm3
  006a4: mov    rdx,QWORD PTR [rbp-0x40]
  006a8: movabs rax,0x563437ed0810
  006b2: call   rax
  006b4: movq   xmm2,QWORD PTR [rsp]
  006b9: movq   xmm3,QWORD PTR [rsp+0x8]
  006bf: add    rsp,0x10
  006c3: movabs r13,0x563439863c10
  006cd: test   rax,rax
  006d0: je     0xffff75f7
:00034 
:00036 br =>:00037
  006d6: jmp    0x3b1a4
:00037 ret %2
  006db: mov    rax,QWORD PTR [rbp-0x38]
  006df: leave  
  006e0: ret    
==> start whole compile: vlength FuncId(67) self_class:Vec start:[00000] bytecode:0x563439850b90
<== finished compile. elapsed:28.1µs
offset:Pos(37256) code: 863 bytes  data: 33 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x60
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x30],rax
  00016: mov    QWORD PTR [rbp-0x38],rax
  0001a: mov    QWORD PTR [rbp-0x40],rax
  0001e: mov    QWORD PTR [rbp-0x48],rax
  00022: mov    QWORD PTR [rbp-0x50],rax
  00026: mov    rdi,QWORD PTR [rbp-0x28]
  0002a: test   rdi,0x7
  00031: jne    0x3aa88
  00037: cmp    DWORD PTR [rdi+0x4],0x28
  0003b: jne    0x3aa88
:00000 init_method reg:6 arg:0 pos:0 req:0 stack_offset:6
:00001 %2 = const[Math]                     [Math]
  00041: mov    rax,QWORD PTR [rip+0xffffffffffff9a30]        # 0xffff9a78
  00048: cmp    rax,QWORD PTR [rip+0x329]        # 0x378
  0004f: jne    0x3aa97
  00055: mov    rax,QWORD PTR [rip+0x30c]        # 0x368
  0005c: mov    QWORD PTR [rbp-0x38],rax
:00002 %3 = @x: Vec[IvarId(0)]
  00060: mov    rdi,QWORD PTR [rbp-0x28]
  00064: mov    rax,QWORD PTR [rdi+0x10]
  00068: mov    QWORD PTR [rbp-0x40],rax
:00003 %4 = @x: Vec[IvarId(0)]
  0006c: mov    rdi,QWORD PTR [rbp-0x28]
  00070: mov    rax,QWORD PTR [rdi+0x10]
  00074: mov    QWORD PTR [rbp-0x48],rax
:00004 %3 = %3 * %4                         [Float][Float]
  00078: mov    rdi,QWORD PTR [rbp-0x40]
  0007c: test   rdi,0x1
  00083: jne    0x3aadd
  00089: test   rdi,0x2
  00090: je     0xcc
  00096: xorps  xmm2,xmm2
  00099: movabs rax,0x8000000000000002
  000a3: cmp    rdi,rax
  000a6: je     0xde
  000ac: mov    rax,rdi
  000af: sar    rax,0x3f
  000b3: add    rax,0x2
  000b7: and    rdi,0xfffffffffffffffc
  000bb: or     rdi,rax
  000be: rol    rdi,0x3d
  000c2: movq   xmm2,rdi
  000c7: jmp    0xde
  000cc: call   0xffff6f0c
  000d1: test   rax,rax
  000d4: je     0x3aadd
  000da: movq   xmm2,xmm0
  000de: mov    rdi,QWORD PTR [rbp-0x48]
  000e2: test   rdi,0x1
  000e9: jne    0x3aaec
  000ef: test   rdi,0x2
  000f6: je     0x132
  000fc: xorps  xmm3,xmm3
  000ff: movabs rax,0x8000000000000002
  00109: cmp    rdi,rax
  0010c: je     0x144
  00112: mov    rax,rdi
  00115: sar    rax,0x3f
  00119: add    rax,0x2
  0011d: and    rdi,0xfffffffffffffffc
  00121: or     rdi,rax
  00124: rol    rdi,0x3d
  00128: movq   xmm3,rdi
  0012d: jmp    0x144
  00132: call   0xffff6f0c
  00137: test   rax,rax
  0013a: je     0x3aaec
  00140: movq   xmm3,xmm0
  00144: mulsd  xmm2,xmm3
:00005 %4 = @y: Vec[IvarId(1)]
  00148: mov    rdi,QWORD PTR [rbp-0x28]
  0014c: mov    rax,QWORD PTR [rdi+0x18]
  00150: mov    QWORD PTR [rbp-0x48],rax
:00006 %5 = @y: Vec[IvarId(1)]
  00154: mov    rdi,QWORD PTR [rbp-0x28]
  00158: mov    rax,QWORD PTR [rdi+0x18]
  0015c: mov    QWORD PTR [rbp-0x50],rax
:00007 %4 = %4 * %5                         [Float][Float]
  00160: mov    rdi,QWORD PTR [rbp-0x48]
  00164: test   rdi,0x1
  0016b: jne    0x3aafb
  00171: test   rdi,0x2
  00178: je     0x1b4
  0017e: xorps  xmm3,xmm3
  00181: movabs rax,0x8000000000000002
  0018b: cmp    rdi,rax
  0018e: je     0x1c6
  00194: mov    rax,rdi
  00197: sar    rax,0x3f
  0019b: add    rax,0x2
  0019f: and    rdi,0xfffffffffffffffc
  001a3: or     rdi,rax
  001a6: rol    rdi,0x3d
  001aa: movq   xmm3,rdi
  001af: jmp    0x1c6
  001b4: call   0xffff6f0c
  001b9: test   rax,rax
  001bc: je     0x3aafb
  001c2: movq   xmm3,xmm0
  001c6: mov    rdi,QWORD PTR [rbp-0x50]
  001ca: test   rdi,0x1
  001d1: jne    0x3ab17
  001d7: test   rdi,0x2
  001de: je     0x21a
  001e4: xorps  xmm4,xmm4
  001e7: movabs rax,0x8000000000000002
  001f1: cmp    rdi,rax
  001f4: je     0x22c
  001fa: mov    rax,rdi
  001fd: sar    rax,0x3f
  00201: add    rax,0x2
  00205: and    rdi,0xfffffffffffffffc
  00209: or     rdi,rax
  0020c: rol    rdi,0x3d
  00210: movq   xmm4,rdi
  00215: jmp    0x22c
  0021a: call   0xffff6f0c
  0021f: test   rax,rax
  00222: je     0x3ab17
  00228: movq   xmm4,xmm0
  0022c: mulsd  xmm3,xmm4
:00008 %3 = %3 + %4                         [Float][Float]
  00230: addsd  xmm2,xmm3
:00009 %4 = @z: Vec[IvarId(2)]
  00234: mov    rdi,QWORD PTR [rbp-0x28]
  00238: mov    rax,QWORD PTR [rdi+0x20]
  0023c: mov    QWORD PTR [rbp-0x48],rax
:00010 %5 = @z: Vec[IvarId(2)]
  00240: mov    rdi,QWORD PTR [rbp-0x28]
  00244: mov    rax,QWORD PTR [rdi+0x20]
  00248: mov    QWORD PTR [rbp-0x50],rax
:00011 %4 = %4 * %5                         [Float][Float]
  0024c: mov    rdi,QWORD PTR [rbp-0x48]
  00250: test   rdi,0x1
  00257: jne    0x3ab33
  0025d: test   rdi,0x2
  00264: je     0x2a0
  0026a: xorps  xmm3,xmm3
  0026d: movabs rax,0x8000000000000002
  00277: cmp    rdi,rax
  0027a: je     0x2b2
  00280: mov    rax,rdi
  00283: sar    rax,0x3f
  00287: add    rax,0x2
  0028b: and    rdi,0xfffffffffffffffc
  0028f: or     rdi,rax
  00292: rol    rdi,0x3d
  00296: movq   xmm3,rdi
  0029b: jmp    0x2b2
  002a0: call   0xffff6f0c
  002a5: test   rax,rax
  002a8: je     0x3ab33
  002ae: movq   xmm3,xmm0
  002b2: mov    rdi,QWORD PTR [rbp-0x50]
  002b6: test   rdi,0x1
  002bd: jne    0x3ab4f
  002c3: test   rdi,0x2
  002ca: je     0x306
  002d0: xorps  xmm4,xmm4
  002d3: movabs rax,0x8000000000000002
  002dd: cmp    rdi,rax
  002e0: je     0x318
  002e6: mov    rax,rdi
  002e9: sar    rax,0x3f
  002ed: add    rax,0x2
  002f1: and    rdi,0xfffffffffffffffc
  002f5: or     rdi,rax
  002f8: rol    rdi,0x3d
  002fc: movq   xmm4,rdi
  00301: jmp    0x318
  00306: call   0xffff6f0c
  0030b: test   rax,rax
  0030e: je     0x3ab4f
  00314: movq   xmm4,xmm0
  00318: mulsd  xmm3,xmm4
:00012 %3 = %3 + %4                         [Float][Float]
  0031c: addsd  xmm2,xmm3
:00013 %1 = %2.call sqrt(%3; 1)             [#<Class:Math>]
  00320: mov    rdi,QWORD PTR [rbp-0x38]
  00324: test   rdi,0x7
  0032b: jne    0x3ab6b
  00331: cmp    DWORD PTR [rdi+0x4],0x21
  00335: jne    0x3ab6b
  0033b: cmp    DWORD PTR [rip+0xffffffffffff972f],0x26        # 0xffff9a71
  00342: jne    0x3ab6b
  00348: sqrtsd xmm5,xmm2
:00014 
:00016 ret %1
  0034c: movq   xmm0,xmm5
  00350: call   0xffff6fff
  00355: mov    QWORD PTR [rbp-0x30],rax
  00359: mov    rax,QWORD PTR [rbp-0x30]
  0035d: leave  
  0035e: ret    
==> start whole compile: initialize FuncId(73) self_class:Ray start:[00000] bytecode:0x563439831ce0
<== finished compile. elapsed:16.3µs
offset:Pos(38152) code: 147 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x2
  0000e: je     0x4a
  00014: jl     0x1f
  0001a: jmp    0x3a814
  0001f: jmp    0x3a814
  00024: mov    eax,0x2
  00029: sub    eax,edx
  0002b: test   rax,rax
  0002e: je     0x4a
  00034: lea    rdi,[rbp-0x40]
  00038: mov    QWORD PTR [rdi+rax*8],0x0
  00040: sub    rax,0x1
  00044: jne    0x38
  0004a: mov    QWORD PTR [rbp-0x40],0x4
  00052: mov    rdi,QWORD PTR [rbp-0x28]
  00056: test   rdi,0x7
  0005d: jne    0x3a823
  00063: cmp    DWORD PTR [rdi+0x4],0x2e
  00067: jne    0x3a823
:00000 init_method reg:4 arg:2 pos:2 req:2 stack_offset:5
:00001 @org: Ray[IvarId(0)] = %1
  0006d: mov    rdi,QWORD PTR [rbp-0x28]
  00071: mov    rax,QWORD PTR [rbp-0x30]
  00075: mov    QWORD PTR [rdi+0x10],rax
:00002 @dir: Ray[IvarId(1)] = %2
  00079: mov    rdi,QWORD PTR [rbp-0x28]
  0007d: mov    rax,QWORD PTR [rbp-0x38]
  00081: mov    QWORD PTR [rdi+0x18],rax
:00003 %3 = %2
  00085: mov    rax,QWORD PTR [rbp-0x38]
  00089: mov    QWORD PTR [rbp-0x40],rax
:00004 ret %3
  0008d: mov    rax,QWORD PTR [rbp-0x40]
  00091: leave  
  00092: ret    
==> start whole compile: initialize FuncId(74) self_class:Isect start:[00000] bytecode:0x563439853e50
<== finished compile. elapsed:25µs
offset:Pos(38299) code: 678 bytes  data: 183 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x60
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x30],rax
  00016: mov    QWORD PTR [rbp-0x38],rax
  0001a: mov    QWORD PTR [rbp-0x40],rax
  0001e: mov    QWORD PTR [rbp-0x48],rax
  00022: mov    QWORD PTR [rbp-0x50],rax
  00026: mov    rdi,QWORD PTR [rbp-0x28]
  0002a: test   rdi,0x7
  00031: jne    0x3a7ae
  00037: cmp    DWORD PTR [rdi+0x4],0x30
  0003b: jne    0x3a7ae
:00000 init_method reg:6 arg:0 pos:0 req:0 stack_offset:6
:00001 %1 = literal[10000000.0]
  00041: movq   xmm2,QWORD PTR [rip+0x26c]        # 0x2b5
  00049: movabs rax,0xb18968000000002
  00053: mov    QWORD PTR [rbp-0x30],rax
:00002 @t: Isect[IvarId(0)] = %1
  00057: mov    rdi,QWORD PTR [rbp-0x28]
  0005b: mov    rax,QWORD PTR [rbp-0x30]
  0005f: mov    QWORD PTR [rdi+0x10],rax
:00003 %1 = literal[false]
  00063: mov    rax,0x14
  0006a: mov    QWORD PTR [rbp-0x30],rax
:00004 @hit: Isect[IvarId(1)] = %1
  0006e: mov    rdi,QWORD PTR [rbp-0x28]
  00072: mov    rax,QWORD PTR [rbp-0x30]
  00076: mov    QWORD PTR [rdi+0x18],rax
:00005 %2 = const[Vec]                      [Vec]
  0007a: mov    rax,QWORD PTR [rip+0xffffffffffff95e4]        # 0xffff9665
  00081: cmp    rax,QWORD PTR [rip+0x24d]        # 0x2d5
  00088: jne    0x3a7bd
  0008e: mov    rax,QWORD PTR [rip+0x230]        # 0x2c5
  00095: mov    QWORD PTR [rbp-0x38],rax
:00006 %3 = literal[0.0]
  00099: movq   xmm2,QWORD PTR [rip+0x244]        # 0x2e5
  000a1: movabs rax,0x8000000000000002
  000ab: mov    QWORD PTR [rbp-0x40],rax
:00007 %4 = literal[0.0]
  000af: movq   xmm3,QWORD PTR [rip+0x23e]        # 0x2f5
  000b7: movabs rax,0x8000000000000002
  000c1: mov    QWORD PTR [rbp-0x48],rax
:00008 %5 = literal[0.0]
  000c5: movq   xmm4,QWORD PTR [rip+0x238]        # 0x305
  000cd: movabs rax,0x8000000000000002
  000d7: mov    QWORD PTR [rbp-0x50],rax
:00009 %1 = %2.call new(%3; 3)              [#<Class:Vec>]
  000db: mov    rdi,QWORD PTR [rbp-0x38]
  000df: test   rdi,0x7
  000e6: jne    0x3a803
  000ec: cmp    DWORD PTR [rdi+0x4],0x29
  000f0: jne    0x3a803
  000f6: cmp    DWORD PTR [rip+0xffffffffffff9561],0x26        # 0xffff965e
  000fd: jne    0x3a803
  00103: mov    r9,0x0
  0010a: sub    rsp,0x20
  0010e: movq   QWORD PTR [rsp],xmm2
  00113: movq   QWORD PTR [rsp+0x8],xmm3
  00119: movq   QWORD PTR [rsp+0x10],xmm4
  0011f: mov    rdx,rdi
  00122: mov    QWORD PTR [rsp-0x20],0x0
  0012b: mov    QWORD PTR [rsp-0x38],rcx
  00130: mov    rax,QWORD PTR [rbx]
  00133: lea    rdi,[rsp-0x18]
  00138: mov    QWORD PTR [rdi],rax
  0013b: mov    QWORD PTR [rbx],rdi
  0013e: lea    rcx,[rbp-0x40]
  00142: mov    r8,0x3
  00149: call   0x3a812
  0014e: lea    rdi,[rbp-0x8]
  00152: mov    QWORD PTR [rbx],rdi
  00155: movq   xmm2,QWORD PTR [rsp]
  0015a: movq   xmm3,QWORD PTR [rsp+0x8]
  00160: movq   xmm4,QWORD PTR [rsp+0x10]
  00166: add    rsp,0x20
  0016a: movabs r13,0x563439853f00
  00174: test   rax,rax
  00177: je     0xffff6aa0
  0017d: mov    QWORD PTR [rbp-0x30],rax
:00010 
:00012 @pl: Isect[IvarId(2)] = %1
  00181: mov    rdi,QWORD PTR [rbp-0x28]
  00185: mov    rax,QWORD PTR [rbp-0x30]
  00189: mov    QWORD PTR [rdi+0x20],rax
:00013 %2 = const[Vec]                      [Vec]
  0018d: mov    rax,QWORD PTR [rip+0xffffffffffff94d1]        # 0xffff9665
  00194: cmp    rax,QWORD PTR [rip+0x18a]        # 0x325
  0019b: jne    0x3a844
  001a1: mov    rax,QWORD PTR [rip+0x16d]        # 0x315
  001a8: mov    QWORD PTR [rbp-0x38],rax
:00014 %3 = literal[0.0]
  001ac: movq   xmm2,QWORD PTR [rip+0x181]        # 0x335
  001b4: movabs rax,0x8000000000000002
  001be: mov    QWORD PTR [rbp-0x40],rax
:00015 %4 = literal[0.0]
  001c2: movq   xmm3,QWORD PTR [rip+0x17b]        # 0x345
  001ca: movabs rax,0x8000000000000002
  001d4: mov    QWORD PTR [rbp-0x48],rax
:00016 %5 = literal[0.0]
  001d8: movq   xmm4,QWORD PTR [rip+0x175]        # 0x355
  001e0: movabs rax,0x8000000000000002
  001ea: mov    QWORD PTR [rbp-0x50],rax
:00017 %1 = %2.call new(%3; 3)              [#<Class:Vec>]
  001ee: mov    rdi,QWORD PTR [rbp-0x38]
  001f2: test   rdi,0x7
  001f9: jne    0x3a8b4
  001ff: cmp    DWORD PTR [rdi+0x4],0x29
  00203: jne    0x3a8b4
  00209: cmp    DWORD PTR [rip+0xffffffffffff944e],0x26        # 0xffff965e
  00210: jne    0x3a8b4
  00216: mov    r9,0x0
  0021d: sub    rsp,0x20
  00221: movq   QWORD PTR [rsp],xmm2
  00226: movq   QWORD PTR [rsp+0x8],xmm3
  0022c: movq   QWORD PTR [rsp+0x10],xmm4
  00232: mov    rdx,rdi
  00235: mov    QWORD PTR [rsp-0x20],0x0
  0023e: mov    QWORD PTR [rsp-0x38],rcx
  00243: mov    rax,QWORD PTR [rbx]
  00246: lea    rdi,[rsp-0x18]
  0024b: mov    QWORD PTR [rdi],rax
  0024e: mov    QWORD PTR [rbx],rdi
  00251: lea    rcx,[rbp-0x40]
  00255: mov    r8,0x3
  0025c: call   0x3a8c3
  00261: lea    rdi,[rbp-0x8]
  00265: mov    QWORD PTR [rbx],rdi
  00268: movq   xmm2,QWORD PTR [rsp]
  0026d: movq   xmm3,QWORD PTR [rsp+0x8]
  00273: movq   xmm4,QWORD PTR [rsp+0x10]
  00279: add    rsp,0x20
  0027d: movabs r13,0x563439853f80
  00287: test   rax,rax
  0028a: je     0xffff6aa0
  00290: mov    QWORD PTR [rbp-0x30],rax
:00018 
:00020 @n: Isect[IvarId(3)] = %1
  00294: mov    rdi,QWORD PTR [rbp-0x28]
  00298: mov    rax,QWORD PTR [rbp-0x30]
  0029c: mov    QWORD PTR [rdi+0x28],rax
:00021 ret %1
  002a0: mov    rax,QWORD PTR [rbp-0x30]
  002a4: leave  
  002a5: ret    
==> start whole compile: intersect FuncId(72) self_class:Plane start:[00000] bytecode:0x563439855550
<== finished compile. elapsed:120.1µs
offset:Pos(39160) code: 6695 bytes  data: 345 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xa0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x3a598
  00022:    	jmp    0x3a598
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086:    	mov    rdi,QWORD PTR [rbp-0x28]
  0008a: 00 	test   rdi,0x7
  00091:    	jne    0x3a5a7
  00097:    	cmp    DWORD PTR [rdi+0x4],0x2c
  0009b:    	jne    0x3a5a7
:00000 init_method reg:14 arg:2 pos:2 req:2 stack_offset:10
:00001 %7 = @p: Plane[IvarId(0)]
  000a1:    	mov    rdi,QWORD PTR [rbp-0x28]
  000a5:    	mov    rax,QWORD PTR [rdi+0x10]
  000a9:    	mov    QWORD PTR [rbp-0x60],rax
:00002 %8 = @n: Plane[IvarId(1)]
  000ad:    	mov    rdi,QWORD PTR [rbp-0x28]
  000b1:    	mov    rax,QWORD PTR [rdi+0x18]
  000b5:    	mov    QWORD PTR [rbp-0x68],rax
:00003 %3 = %7.call vdot(%8; 1)             [Vec]
  000b9:    	mov    rdi,QWORD PTR [rbp-0x60]
  000bd: 00 	test   rdi,0x7
  000c4:    	jne    0x3a5b6
  000ca:    	cmp    DWORD PTR [rdi+0x4],0x28
  000ce:    	jne    0x3a5b6
  000d4: 26 	cmp    DWORD PTR [rip+0xffffffffffff9226],0x26        # 0xffff9301
  000db:    	jne    0x3a5b6
  000e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000ea:    	mov    QWORD PTR [rsp-0x38],rcx
  000ef:    	mov    rax,QWORD PTR [rbx]
  000f2:    	lea    rdi,[rsp-0x18]
  000f7:    	mov    QWORD PTR [rdi],rax
  000fa:    	mov    QWORD PTR [rbx],rdi
  000fd:    	mov    rax,QWORD PTR [rbp-0x60]
  00101:    	mov    QWORD PTR [rsp-0x38],rax
  00106: 00 	mov    rdi,0x1
  0010d:    	mov    rax,QWORD PTR [rbp-0x68]
  00111:    	mov    QWORD PTR [rsp-0x40],rax
  00116: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0011f: 05 	movabs rax,0x1000500000042
  00129:    	mov    QWORD PTR [rsp-0x28],rax
  0012e: 34 	movabs r13,0x563439877e20
  00138:    	call   0xffffa066
  0013d:    	lea    rdi,[rbp-0x8]
  00141:    	mov    QWORD PTR [rbx],rdi
  00144: 34 	movabs r13,0x5634398555a0
  0014e:    	test   rax,rax
  00151:    	je     0xffff6743
  00157:    	mov    QWORD PTR [rbp-0x40],rax
:00004 
:00006 %3 = neg %3                          [Float]
  0015b:    	mov    rdi,QWORD PTR [rbp-0x40]
  0015f: 00 	test   rdi,0x1
  00166:    	jne    0x3a5c5
  0016c: 00 	test   rdi,0x2
  00173:    	je     0x1af
  00179:    	xorps  xmm2,xmm2
  0017c: 00 	movabs rax,0x8000000000000002
  00186:    	cmp    rdi,rax
  00189:    	je     0x1c1
  0018f:    	mov    rax,rdi
  00192:    	sar    rax,0x3f
  00196:    	add    rax,0x2
  0019a:    	and    rdi,0xfffffffffffffffc
  0019e:    	or     rdi,rax
  001a1:    	rol    rdi,0x3d
  001a5:    	movq   xmm2,rdi
  001aa:    	jmp    0x1c1
  001af:    	call   0xffff679c
  001b4:    	test   rax,rax
  001b7:    	je     0x3a5c5
  001bd:    	movq   xmm2,xmm0
  001c1: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1860]        # 0x1a28
:00007 %7 = %1.call dir()                   [Ray]
  001c8:    	mov    rdi,QWORD PTR [rbp-0x30]
  001cc: 00 	test   rdi,0x7
  001d3:    	jne    0x3a5d4
  001d9:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001dd:    	jne    0x3a5d4
  001e3: 26 	cmp    DWORD PTR [rip+0xffffffffffff9117],0x26        # 0xffff9301
  001ea:    	jne    0x3a5d4
  001f0:    	mov    esi,DWORD PTR [rip+0x183e]        # 0x1a34
  001f6:    	cmp    esi,0xffffffff
  001f9:    	je     0x3a5f0
  001ff:    	cmp    WORD PTR [rdi+0x2],0x3
  00204:    	jne    0x21d
  0020a:    	cmp    esi,0x6
  0020d:    	jge    0x21d
  00213:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00218:    	jmp    0x23b
  0021d:    	sub    rsp,0x10
  00221:    	movq   QWORD PTR [rsp],xmm2
  00226: 34 	movabs rax,0x563437ed0590
  00230:    	call   rax
  00232:    	movq   xmm2,QWORD PTR [rsp]
  00237:    	add    rsp,0x10
  0023b:    	mov    QWORD PTR [rbp-0x60],rax
:00008 
:00010 %8 = @n: Plane[IvarId(1)]
  0023f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00243:    	mov    rax,QWORD PTR [rdi+0x18]
  00247:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %7.call vdot(%8; 1)             [Vec]
  0024b:    	mov    rdi,QWORD PTR [rbp-0x60]
  0024f: 00 	test   rdi,0x7
  00256:    	jne    0x3a62b
  0025c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00260:    	jne    0x3a62b
  00266: 26 	cmp    DWORD PTR [rip+0xffffffffffff9094],0x26        # 0xffff9301
  0026d:    	jne    0x3a62b
  00273:    	sub    rsp,0x10
  00277:    	movq   QWORD PTR [rsp],xmm2
  0027c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00285:    	mov    QWORD PTR [rsp-0x38],rcx
  0028a:    	mov    rax,QWORD PTR [rbx]
  0028d:    	lea    rdi,[rsp-0x18]
  00292:    	mov    QWORD PTR [rdi],rax
  00295:    	mov    QWORD PTR [rbx],rdi
  00298:    	mov    rax,QWORD PTR [rbp-0x60]
  0029c:    	mov    QWORD PTR [rsp-0x38],rax
  002a1: 00 	mov    rdi,0x1
  002a8:    	mov    rax,QWORD PTR [rbp-0x68]
  002ac:    	mov    QWORD PTR [rsp-0x40],rax
  002b1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002ba: 05 	movabs rax,0x1000500000042
  002c4:    	mov    QWORD PTR [rsp-0x28],rax
  002c9: 34 	movabs r13,0x563439877e20
  002d3:    	call   0xffffa066
  002d8:    	lea    rdi,[rbp-0x8]
  002dc:    	mov    QWORD PTR [rbx],rdi
  002df:    	movq   xmm2,QWORD PTR [rsp]
  002e4:    	add    rsp,0x10
  002e8: 34 	movabs r13,0x563439855620
  002f2:    	test   rax,rax
  002f5:    	je     0xffff6743
  002fb:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %5 = %4
  002ff:    	mov    rax,QWORD PTR [rbp-0x48]
  00303:    	mov    QWORD PTR [rbp-0x50],rax
:00015 %7 = literal[0.0]
  00307: 00 	movq   xmm3,QWORD PTR [rip+0x1729]        # 0x1a38
  0030f: 00 	movabs rax,0x8000000000000002
  00319:    	mov    QWORD PTR [rbp-0x60],rax
:00016 _%7 = %4 < %7                        [Float][Float]
:00017 condnotbr _%7 =>:00021
  0031d:    	mov    rdi,QWORD PTR [rbp-0x48]
  00321: 00 	test   rdi,0x1
  00328:    	jne    0x3a647
  0032e: 00 	test   rdi,0x2
  00335:    	je     0x371
  0033b:    	xorps  xmm4,xmm4
  0033e: 00 	movabs rax,0x8000000000000002
  00348:    	cmp    rdi,rax
  0034b:    	je     0x383
  00351:    	mov    rax,rdi
  00354:    	sar    rax,0x3f
  00358:    	add    rax,0x2
  0035c:    	and    rdi,0xfffffffffffffffc
  00360:    	or     rdi,rax
  00363:    	rol    rdi,0x3d
  00367:    	movq   xmm4,rdi
  0036c:    	jmp    0x383
  00371:    	call   0xffff679c
  00376:    	test   rax,rax
  00379:    	je     0x3a647
  0037f:    	movq   xmm4,xmm0
  00383:    	ucomisd xmm4,xmm3
  00387:    	jae    0x3a6ae
:00018 %5 = %4
:00019 %5 = neg %5                          [<INVALID>]
  0038d: 01 	sub    DWORD PTR [rip+0x16ac],0x1        # 0x1a40
  00394:    	je     0x3a68c
  0039a:    	movq   xmm0,xmm4
  0039e:    	call   0xffff688f
  003a3:    	mov    QWORD PTR [rbp-0x50],rax
  003a7:    	sub    rsp,0x20
  003ab:    	movq   QWORD PTR [rsp],xmm2
  003b0:    	movq   QWORD PTR [rsp+0x8],xmm3
  003b6:    	movq   QWORD PTR [rsp+0x10],xmm4
  003bc:    	mov    rdi,QWORD PTR [rbp-0x50]
  003c0:    	mov    rdx,rdi
  003c3:    	mov    rdi,rbx
  003c6:    	mov    rsi,r12
  003c9: 34 	movabs rax,0x563437f14b70
  003d3:    	call   rax
  003d5:    	movq   xmm2,QWORD PTR [rsp]
  003da:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003e0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003e6:    	add    rsp,0x20
  003ea: 34 	movabs r13,0x563439855690
  003f4:    	test   rax,rax
  003f7:    	je     0xffff6743
  003fd:    	mov    QWORD PTR [rbp-0x50],rax
:00020 br =>:00021
  00401:    	jmp    0x3a6d4
:00021 %7 = literal[1e-17]
  00406: 00 	movq   xmm3,QWORD PTR [rip+0x163a]        # 0x1a48
  0040e: aa 	movabs rax,0xe33877aa3236a4ba
  00418:    	mov    QWORD PTR [rbp-0x60],rax
:00022 _%7 = %5 < %7                        [Float][Float]
:00023 condnotbr _%7 =>:00027
  0041c:    	mov    rdi,QWORD PTR [rbp-0x50]
  00420: 00 	test   rdi,0x1
  00427:    	jne    0x3a6fa
  0042d: 00 	test   rdi,0x2
  00434:    	je     0x470
  0043a:    	xorps  xmm5,xmm5
  0043d: 00 	movabs rax,0x8000000000000002
  00447:    	cmp    rdi,rax
  0044a:    	je     0x482
  00450:    	mov    rax,rdi
  00453:    	sar    rax,0x3f
  00457:    	add    rax,0x2
  0045b:    	and    rdi,0xfffffffffffffffc
  0045f:    	or     rdi,rax
  00462:    	rol    rdi,0x3d
  00466:    	movq   xmm5,rdi
  0046b:    	jmp    0x482
  00470:    	call   0xffff679c
  00475:    	test   rax,rax
  00478:    	je     0x3a6fa
  0047e:    	movq   xmm5,xmm0
  00482:    	ucomisd xmm5,xmm3
  00486:    	jae    0x49a
:00024 %7 = nil
  0048c: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00025 ret %7
  00494:    	mov    rax,QWORD PTR [rbp-0x60]
  00498:    	leave  
  00499:    	ret    
:00027 %8 = %1.call org()                   [Ray]
  0049a:    	mov    rdi,QWORD PTR [rbp-0x30]
  0049e: 00 	test   rdi,0x7
  004a5:    	jne    0x3a716
  004ab:    	cmp    DWORD PTR [rdi+0x4],0x2e
  004af:    	jne    0x3a716
  004b5: 26 	cmp    DWORD PTR [rip+0xffffffffffff8e45],0x26        # 0xffff9301
  004bc:    	jne    0x3a716
  004c2:    	mov    esi,DWORD PTR [rip+0x158c]        # 0x1a54
  004c8:    	cmp    esi,0xffffffff
  004cb:    	je     0x3a732
  004d1:    	cmp    WORD PTR [rdi+0x2],0x3
  004d6:    	jne    0x4ef
  004dc:    	cmp    esi,0x6
  004df:    	jge    0x4ef
  004e5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004ea:    	jmp    0x531
  004ef:    	sub    rsp,0x20
  004f3:    	movq   QWORD PTR [rsp],xmm2
  004f8:    	movq   QWORD PTR [rsp+0x8],xmm3
  004fe:    	movq   QWORD PTR [rsp+0x10],xmm4
  00504:    	movq   QWORD PTR [rsp+0x18],xmm5
  0050a: 34 	movabs rax,0x563437ed0590
  00514:    	call   rax
  00516:    	movq   xmm2,QWORD PTR [rsp]
  0051b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00521:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00527:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0052d:    	add    rsp,0x20
  00531:    	mov    QWORD PTR [rbp-0x68],rax
:00028 
:00030 %9 = @n: Plane[IvarId(1)]
  00535:    	mov    rdi,QWORD PTR [rbp-0x28]
  00539:    	mov    rax,QWORD PTR [rdi+0x18]
  0053d:    	mov    QWORD PTR [rbp-0x70],rax
:00031 %7 = %8.call vdot(%9; 1)             [Vec]
  00541:    	mov    rdi,QWORD PTR [rbp-0x68]
  00545: 00 	test   rdi,0x7
  0054c:    	jne    0x3a791
  00552:    	cmp    DWORD PTR [rdi+0x4],0x28
  00556:    	jne    0x3a791
  0055c: 26 	cmp    DWORD PTR [rip+0xffffffffffff8d9e],0x26        # 0xffff9301
  00563:    	jne    0x3a791
  00569:    	sub    rsp,0x20
  0056d:    	movq   QWORD PTR [rsp],xmm2
  00572:    	movq   QWORD PTR [rsp+0x8],xmm4
  00578:    	movq   QWORD PTR [rsp+0x10],xmm5
  0057e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00587:    	mov    QWORD PTR [rsp-0x38],rcx
  0058c:    	mov    rax,QWORD PTR [rbx]
  0058f:    	lea    rdi,[rsp-0x18]
  00594:    	mov    QWORD PTR [rdi],rax
  00597:    	mov    QWORD PTR [rbx],rdi
  0059a:    	mov    rax,QWORD PTR [rbp-0x68]
  0059e:    	mov    QWORD PTR [rsp-0x38],rax
  005a3: 00 	mov    rdi,0x1
  005aa:    	mov    rax,QWORD PTR [rbp-0x70]
  005ae:    	mov    QWORD PTR [rsp-0x40],rax
  005b3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  005bc: 05 	movabs rax,0x1000500000042
  005c6:    	mov    QWORD PTR [rsp-0x28],rax
  005cb: 34 	movabs r13,0x563439877e20
  005d5:    	call   0xffffa066
  005da:    	lea    rdi,[rbp-0x8]
  005de:    	mov    QWORD PTR [rbx],rdi
  005e1:    	movq   xmm2,QWORD PTR [rsp]
  005e6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  005ec:    	movq   xmm5,QWORD PTR [rsp+0x10]
  005f2:    	add    rsp,0x20
  005f6: 34 	movabs r13,0x563439855760
  00600:    	test   rax,rax
  00603:    	je     0xffff6743
  00609:    	mov    QWORD PTR [rbp-0x60],rax
:00032 
:00034 %7 = %7 + %3                         [Float][Float]
  0060d:    	mov    rdi,QWORD PTR [rbp-0x60]
  00611: 00 	test   rdi,0x1
  00618:    	jne    0x3a7ad
  0061e: 00 	test   rdi,0x2
  00625:    	je     0x661
  0062b:    	xorps  xmm3,xmm3
  0062e: 00 	movabs rax,0x8000000000000002
  00638:    	cmp    rdi,rax
  0063b:    	je     0x673
  00641:    	mov    rax,rdi
  00644:    	sar    rax,0x3f
  00648:    	add    rax,0x2
  0064c:    	and    rdi,0xfffffffffffffffc
  00650:    	or     rdi,rax
  00653:    	rol    rdi,0x3d
  00657:    	movq   xmm3,rdi
  0065c:    	jmp    0x673
  00661:    	call   0xffff679c
  00666:    	test   rax,rax
  00669:    	je     0x3a7ad
  0066f:    	movq   xmm3,xmm0
  00673:    	addsd  xmm3,xmm2
:00035 %7 = neg %7                          [Float]
  00677: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13da]        # 0x1a58
:00036 %6 = %7 / %4                         [Float][Float]
  0067e:    	movq   xmm6,xmm3
  00682:    	movq   rax,xmm4
  00687:    	test   rax,rax
  0068a:    	je     0xffff6768
  00690:    	divsd  xmm6,xmm4
:00037 %7 = literal[0.0]
  00694: 00 	movq   xmm3,QWORD PTR [rip+0x13cc]        # 0x1a68
  0069c: 00 	movabs rax,0x8000000000000002
  006a6:    	mov    QWORD PTR [rbp-0x60],rax
:00038 _%7 = %6 > %7                        [Float][Float]
:00039 condnotbr _%7 =>:00106
  006aa:    	ucomisd xmm6,xmm3
  006ae:    	jbe    0x3b726
:00040 %7 = %2.call t()                     [<INVALID>]
  006b4: 01 	sub    DWORD PTR [rip+0x13b5],0x1        # 0x1a70
  006bb:    	je     0x3a7f2
  006c1:    	sub    rsp,0x20
  006c5:    	movq   QWORD PTR [rsp],xmm2
  006ca:    	movq   QWORD PTR [rsp+0x8],xmm4
  006d0:    	movq   QWORD PTR [rsp+0x10],xmm5
  006d6:    	movq   QWORD PTR [rsp+0x18],xmm6
  006dc:    	mov    rdi,QWORD PTR [rbp-0x38]
  006e0: 34 	movabs rax,0x563437f53600
  006ea:    	call   rax
  006ec:    	mov    r15d,eax
  006ef: 00 	cmp    r15d,DWORD PTR [rip+0x1382]        # 0x1a78
  006f6:    	jne    0x3a814
  006fc:    	mov    eax,DWORD PTR [rip+0xffffffffffff8bff]        # 0xffff9301
  00702:    	cmp    DWORD PTR [rip+0x136c],eax        # 0x1a74
  00708:    	jne    0x3a814
  0070e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00717:    	mov    QWORD PTR [rsp-0x38],rcx
  0071c:    	mov    rax,QWORD PTR [rbx]
  0071f:    	lea    rdi,[rsp-0x18]
  00724:    	mov    QWORD PTR [rdi],rax
  00727:    	mov    QWORD PTR [rbx],rdi
  0072a:    	mov    rax,QWORD PTR [rbp-0x38]
  0072e:    	mov    QWORD PTR [rsp-0x38],rax
  00733: 00 	mov    rdi,0x0
  0073a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00743: 00 	movabs rax,0x0
  0074d:    	mov    QWORD PTR [rsp-0x28],rax
  00752: 00 	movabs r13,0x0
  0075c:    	call   0xffff6708
  00761:    	lea    rdi,[rbp-0x8]
  00765:    	mov    QWORD PTR [rbx],rdi
  00768:    	movq   xmm2,QWORD PTR [rsp]
  0076d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00773:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00779:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0077f:    	add    rsp,0x20
  00783:    	test   rax,rax
  00786:    	je     0x3a880
  0078c:    	mov    QWORD PTR [rbp-0x60],rax
:00041 
:00043 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00044 condnotbr _%7 =>:00106
  00790:    	movq   xmm0,xmm6
  00794:    	call   0xffff688f
  00799:    	mov    QWORD PTR [rbp-0x58],rax
  0079d:    	mov    rdi,QWORD PTR [rbp-0x58]
  007a1:    	mov    rsi,QWORD PTR [rbp-0x60]
  007a5: 00 	test   rdi,0x1
  007ac:    	je     0x3a88f
  007b2: 00 	test   rsi,0x1
  007b9:    	je     0x3a88f
  007bf:    	cmp    rdi,rsi
  007c2:    	jge    0x3b759
:00045 %7 = literal[true]
  007c8: 00 	mov    rax,0x1c
  007cf:    	mov    QWORD PTR [rbp-0x60],rax
:00046 _ = %2.call hit=(%7; 1)              [<INVALID>]
  007d3: 01 	sub    DWORD PTR [rip+0x12a2],0x1        # 0x1a7c
  007da:    	je     0x3a900
  007e0:    	sub    rsp,0x20
  007e4:    	movq   QWORD PTR [rsp],xmm2
  007e9:    	movq   QWORD PTR [rsp+0x8],xmm4
  007ef:    	movq   QWORD PTR [rsp+0x10],xmm5
  007f5:    	movq   QWORD PTR [rsp+0x18],xmm6
  007fb:    	mov    rdi,QWORD PTR [rbp-0x38]
  007ff: 34 	movabs rax,0x563437f53600
  00809:    	call   rax
  0080b:    	mov    r15d,eax
  0080e: 00 	cmp    r15d,DWORD PTR [rip+0x126f]        # 0x1a84
  00815:    	jne    0x3a922
  0081b:    	mov    eax,DWORD PTR [rip+0xffffffffffff8ae0]        # 0xffff9301
  00821:    	cmp    DWORD PTR [rip+0x1259],eax        # 0x1a80
  00827:    	jne    0x3a922
  0082d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00836:    	mov    QWORD PTR [rsp-0x38],rcx
  0083b:    	mov    rax,QWORD PTR [rbx]
  0083e:    	lea    rdi,[rsp-0x18]
  00843:    	mov    QWORD PTR [rdi],rax
  00846:    	mov    QWORD PTR [rbx],rdi
  00849:    	mov    rax,QWORD PTR [rbp-0x38]
  0084d:    	mov    QWORD PTR [rsp-0x38],rax
  00852: 00 	mov    rdi,0x1
  00859:    	mov    rax,QWORD PTR [rbp-0x60]
  0085d:    	mov    QWORD PTR [rsp-0x40],rax
  00862: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0086b: 00 	movabs rax,0x0
  00875:    	mov    QWORD PTR [rsp-0x28],rax
  0087a: 00 	movabs r13,0x0
  00884:    	call   0xffff6708
  00889:    	lea    rdi,[rbp-0x8]
  0088d:    	mov    QWORD PTR [rbx],rdi
  00890:    	movq   xmm2,QWORD PTR [rsp]
  00895:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0089b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008a1:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008a7:    	add    rsp,0x20
  008ab:    	test   rax,rax
  008ae:    	je     0x3a98e
:00047 
:00049 _ = %2.call t=(%6; 1)                [<INVALID>]
  008b4: 01 	sub    DWORD PTR [rip+0x11cd],0x1        # 0x1a88
  008bb:    	je     0x3a9b9
  008c1:    	sub    rsp,0x20
  008c5:    	movq   QWORD PTR [rsp],xmm2
  008ca:    	movq   QWORD PTR [rsp+0x8],xmm4
  008d0:    	movq   QWORD PTR [rsp+0x10],xmm5
  008d6:    	movq   QWORD PTR [rsp+0x18],xmm6
  008dc:    	mov    rdi,QWORD PTR [rbp-0x38]
  008e0: 34 	movabs rax,0x563437f53600
  008ea:    	call   rax
  008ec:    	mov    r15d,eax
  008ef: 00 	cmp    r15d,DWORD PTR [rip+0x119a]        # 0x1a90
  008f6:    	jne    0x3a9db
  008fc:    	mov    eax,DWORD PTR [rip+0xffffffffffff89ff]        # 0xffff9301
  00902:    	cmp    DWORD PTR [rip+0x1184],eax        # 0x1a8c
  00908:    	jne    0x3a9db
  0090e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00917:    	mov    QWORD PTR [rsp-0x38],rcx
  0091c:    	mov    rax,QWORD PTR [rbx]
  0091f:    	lea    rdi,[rsp-0x18]
  00924:    	mov    QWORD PTR [rdi],rax
  00927:    	mov    QWORD PTR [rbx],rdi
  0092a:    	mov    rax,QWORD PTR [rbp-0x38]
  0092e:    	mov    QWORD PTR [rsp-0x38],rax
  00933: 00 	mov    rdi,0x1
  0093a:    	mov    rax,QWORD PTR [rbp-0x58]
  0093e:    	mov    QWORD PTR [rsp-0x40],rax
  00943: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0094c: 00 	movabs rax,0x0
  00956:    	mov    QWORD PTR [rsp-0x28],rax
  0095b: 00 	movabs r13,0x0
  00965:    	call   0xffff6708
  0096a:    	lea    rdi,[rbp-0x8]
  0096e:    	mov    QWORD PTR [rbx],rdi
  00971:    	movq   xmm2,QWORD PTR [rsp]
  00976:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0097c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00982:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00988:    	add    rsp,0x20
  0098c:    	test   rax,rax
  0098f:    	je     0x3aa47
:00050 
:00052 %7 = @n: <INVALID>[IvarId(0)]
  00995:    	mov    rdi,QWORD PTR [rbp-0x28]
  00999:    	sub    rsp,0x20
  0099d:    	movq   QWORD PTR [rsp],xmm2
  009a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  009a8:    	movq   QWORD PTR [rsp+0x10],xmm5
  009ae:    	movq   QWORD PTR [rsp+0x18],xmm6
  009b4: 00 	mov    rsi,0x97
  009bb:    	mov    rdx,r12
  009be: 34 	movabs rax,0x563437f47590
  009c8:    	call   rax
  009ca:    	movq   xmm2,QWORD PTR [rsp]
  009cf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009d5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009db:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009e1:    	add    rsp,0x20
  009e5:    	mov    QWORD PTR [rbp-0x60],rax
:00053 _ = %2.call n=(%7; 1)                [<INVALID>]
  009e9: 01 	sub    DWORD PTR [rip+0x10a4],0x1        # 0x1a94
  009f0:    	je     0x3aa72
  009f6:    	sub    rsp,0x20
  009fa:    	movq   QWORD PTR [rsp],xmm2
  009ff:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a05:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a0b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a11:    	mov    rdi,QWORD PTR [rbp-0x38]
  00a15: 34 	movabs rax,0x563437f53600
  00a1f:    	call   rax
  00a21:    	mov    r15d,eax
  00a24: 00 	cmp    r15d,DWORD PTR [rip+0x1071]        # 0x1a9c
  00a2b:    	jne    0x3aa94
  00a31:    	mov    eax,DWORD PTR [rip+0xffffffffffff88ca]        # 0xffff9301
  00a37:    	cmp    DWORD PTR [rip+0x105b],eax        # 0x1a98
  00a3d:    	jne    0x3aa94
  00a43: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a4c:    	mov    QWORD PTR [rsp-0x38],rcx
  00a51:    	mov    rax,QWORD PTR [rbx]
  00a54:    	lea    rdi,[rsp-0x18]
  00a59:    	mov    QWORD PTR [rdi],rax
  00a5c:    	mov    QWORD PTR [rbx],rdi
  00a5f:    	mov    rax,QWORD PTR [rbp-0x38]
  00a63:    	mov    QWORD PTR [rsp-0x38],rax
  00a68: 00 	mov    rdi,0x1
  00a6f:    	mov    rax,QWORD PTR [rbp-0x60]
  00a73:    	mov    QWORD PTR [rsp-0x40],rax
  00a78: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a81: 00 	movabs rax,0x0
  00a8b:    	mov    QWORD PTR [rsp-0x28],rax
  00a90: 00 	movabs r13,0x0
  00a9a:    	call   0xffff6708
  00a9f:    	lea    rdi,[rbp-0x8]
  00aa3:    	mov    QWORD PTR [rbx],rdi
  00aa6:    	movq   xmm2,QWORD PTR [rsp]
  00aab:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ab1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ab7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00abd:    	add    rsp,0x20
  00ac1:    	test   rax,rax
  00ac4:    	je     0x3ab00
:00054 
:00056 %8 = const[Vec]                      [<INVALID>]
  00aca: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff8837]        # 0xffff9308
  00ad1: 00 	cmp    rax,QWORD PTR [rip+0xfe0]        # 0x1ab8
  00ad8:    	jne    0x3ab0f
  00ade: 00 	mov    rax,QWORD PTR [rip+0xfc3]        # 0x1aa8
  00ae5:    	mov    QWORD PTR [rbp-0x68],rax
:00057 %10 = %1.call org()                  [<INVALID>]
  00ae9: 01 	sub    DWORD PTR [rip+0xfd0],0x1        # 0x1ac0
  00af0:    	je     0x3aba7
  00af6:    	sub    rsp,0x20
  00afa:    	movq   QWORD PTR [rsp],xmm2
  00aff:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b05:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b0b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b11:    	mov    rdi,QWORD PTR [rbp-0x30]
  00b15: 34 	movabs rax,0x563437f53600
  00b1f:    	call   rax
  00b21:    	mov    r15d,eax
  00b24: 00 	cmp    r15d,DWORD PTR [rip+0xf9d]        # 0x1ac8
  00b2b:    	jne    0x3abc9
  00b31:    	mov    eax,DWORD PTR [rip+0xffffffffffff87ca]        # 0xffff9301
  00b37:    	cmp    DWORD PTR [rip+0xf87],eax        # 0x1ac4
  00b3d:    	jne    0x3abc9
  00b43: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b4c:    	mov    QWORD PTR [rsp-0x38],rcx
  00b51:    	mov    rax,QWORD PTR [rbx]
  00b54:    	lea    rdi,[rsp-0x18]
  00b59:    	mov    QWORD PTR [rdi],rax
  00b5c:    	mov    QWORD PTR [rbx],rdi
  00b5f:    	mov    rax,QWORD PTR [rbp-0x30]
  00b63:    	mov    QWORD PTR [rsp-0x38],rax
  00b68: 00 	mov    rdi,0x0
  00b6f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b78: 00 	movabs rax,0x0
  00b82:    	mov    QWORD PTR [rsp-0x28],rax
  00b87: 00 	movabs r13,0x0
  00b91:    	call   0xffff6708
  00b96:    	lea    rdi,[rbp-0x8]
  00b9a:    	mov    QWORD PTR [rbx],rdi
  00b9d:    	movq   xmm2,QWORD PTR [rsp]
  00ba2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ba8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bae:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00bb4:    	add    rsp,0x20
  00bb8:    	test   rax,rax
  00bbb:    	je     0x3ac35
  00bc1:    	mov    QWORD PTR [rbp-0x78],rax
:00058 
:00060 %9 = %10.call x()                    [<INVALID>]
  00bc5: 01 	sub    DWORD PTR [rip+0xf00],0x1        # 0x1acc
  00bcc:    	je     0x3ac60
  00bd2:    	sub    rsp,0x20
  00bd6:    	movq   QWORD PTR [rsp],xmm2
  00bdb:    	movq   QWORD PTR [rsp+0x8],xmm4
  00be1:    	movq   QWORD PTR [rsp+0x10],xmm5
  00be7:    	movq   QWORD PTR [rsp+0x18],xmm6
  00bed:    	mov    rdi,QWORD PTR [rbp-0x78]
  00bf1: 34 	movabs rax,0x563437f53600
  00bfb:    	call   rax
  00bfd:    	mov    r15d,eax
  00c00: 00 	cmp    r15d,DWORD PTR [rip+0xecd]        # 0x1ad4
  00c07:    	jne    0x3ac82
  00c0d:    	mov    eax,DWORD PTR [rip+0xffffffffffff86ee]        # 0xffff9301
  00c13:    	cmp    DWORD PTR [rip+0xeb7],eax        # 0x1ad0
  00c19:    	jne    0x3ac82
  00c1f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c28:    	mov    QWORD PTR [rsp-0x38],rcx
  00c2d:    	mov    rax,QWORD PTR [rbx]
  00c30:    	lea    rdi,[rsp-0x18]
  00c35:    	mov    QWORD PTR [rdi],rax
  00c38:    	mov    QWORD PTR [rbx],rdi
  00c3b:    	mov    rax,QWORD PTR [rbp-0x78]
  00c3f:    	mov    QWORD PTR [rsp-0x38],rax
  00c44: 00 	mov    rdi,0x0
  00c4b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c54: 00 	movabs rax,0x0
  00c5e:    	mov    QWORD PTR [rsp-0x28],rax
  00c63: 00 	movabs r13,0x0
  00c6d:    	call   0xffff6708
  00c72:    	lea    rdi,[rbp-0x8]
  00c76:    	mov    QWORD PTR [rbx],rdi
  00c79:    	movq   xmm2,QWORD PTR [rsp]
  00c7e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c84:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c8a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c90:    	add    rsp,0x20
  00c94:    	test   rax,rax
  00c97:    	je     0x3acee
  00c9d:    	mov    QWORD PTR [rbp-0x70],rax
:00061 
:00063 %11 = %1.call dir()                  [<INVALID>]
  00ca1: 01 	sub    DWORD PTR [rip+0xe30],0x1        # 0x1ad8
  00ca8:    	je     0x3ad19
  00cae:    	sub    rsp,0x20
  00cb2:    	movq   QWORD PTR [rsp],xmm2
  00cb7:    	movq   QWORD PTR [rsp+0x8],xmm4
  00cbd:    	movq   QWORD PTR [rsp+0x10],xmm5
  00cc3:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cc9:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ccd: 34 	movabs rax,0x563437f53600
  00cd7:    	call   rax
  00cd9:    	mov    r15d,eax
  00cdc: 00 	cmp    r15d,DWORD PTR [rip+0xdfd]        # 0x1ae0
  00ce3:    	jne    0x3ad3b
  00ce9:    	mov    eax,DWORD PTR [rip+0xffffffffffff8612]        # 0xffff9301
  00cef:    	cmp    DWORD PTR [rip+0xde7],eax        # 0x1adc
  00cf5:    	jne    0x3ad3b
  00cfb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d04:    	mov    QWORD PTR [rsp-0x38],rcx
  00d09:    	mov    rax,QWORD PTR [rbx]
  00d0c:    	lea    rdi,[rsp-0x18]
  00d11:    	mov    QWORD PTR [rdi],rax
  00d14:    	mov    QWORD PTR [rbx],rdi
  00d17:    	mov    rax,QWORD PTR [rbp-0x30]
  00d1b:    	mov    QWORD PTR [rsp-0x38],rax
  00d20: 00 	mov    rdi,0x0
  00d27: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d30: 00 	movabs rax,0x0
  00d3a:    	mov    QWORD PTR [rsp-0x28],rax
  00d3f: 00 	movabs r13,0x0
  00d49:    	call   0xffff6708
  00d4e:    	lea    rdi,[rbp-0x8]
  00d52:    	mov    QWORD PTR [rbx],rdi
  00d55:    	movq   xmm2,QWORD PTR [rsp]
  00d5a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d60:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d66:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d6c:    	add    rsp,0x20
  00d70:    	test   rax,rax
  00d73:    	je     0x3ada7
  00d79:    	mov    QWORD PTR [rbp-0x80],rax
:00064 
:00066 %10 = %11.call x()                   [<INVALID>]
  00d7d: 01 	sub    DWORD PTR [rip+0xd60],0x1        # 0x1ae4
  00d84:    	je     0x3add2
  00d8a:    	sub    rsp,0x20
  00d8e:    	movq   QWORD PTR [rsp],xmm2
  00d93:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d99:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d9f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00da5:    	mov    rdi,QWORD PTR [rbp-0x80]
  00da9: 34 	movabs rax,0x563437f53600
  00db3:    	call   rax
  00db5:    	mov    r15d,eax
  00db8: 00 	cmp    r15d,DWORD PTR [rip+0xd2d]        # 0x1aec
  00dbf:    	jne    0x3adf4
  00dc5:    	mov    eax,DWORD PTR [rip+0xffffffffffff8536]        # 0xffff9301
  00dcb:    	cmp    DWORD PTR [rip+0xd17],eax        # 0x1ae8
  00dd1:    	jne    0x3adf4
  00dd7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00de0:    	mov    QWORD PTR [rsp-0x38],rcx
  00de5:    	mov    rax,QWORD PTR [rbx]
  00de8:    	lea    rdi,[rsp-0x18]
  00ded:    	mov    QWORD PTR [rdi],rax
  00df0:    	mov    QWORD PTR [rbx],rdi
  00df3:    	mov    rax,QWORD PTR [rbp-0x80]
  00df7:    	mov    QWORD PTR [rsp-0x38],rax
  00dfc: 00 	mov    rdi,0x0
  00e03: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e0c: 00 	movabs rax,0x0
  00e16:    	mov    QWORD PTR [rsp-0x28],rax
  00e1b: 00 	movabs r13,0x0
  00e25:    	call   0xffff6708
  00e2a:    	lea    rdi,[rbp-0x8]
  00e2e:    	mov    QWORD PTR [rbx],rdi
  00e31:    	movq   xmm2,QWORD PTR [rsp]
  00e36:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e3c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e42:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e48:    	add    rsp,0x20
  00e4c:    	test   rax,rax
  00e4f:    	je     0x3ae60
  00e55:    	mov    QWORD PTR [rbp-0x78],rax
:00067 
:00069 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00e59: 01 	sub    DWORD PTR [rip+0xc90],0x1        # 0x1af0
  00e60:    	je     0x3ae8b
  00e66:    	mov    rdi,QWORD PTR [rbp-0x58]
  00e6a:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e6e:    	sub    rsp,0x20
  00e72:    	movq   QWORD PTR [rsp],xmm2
  00e77:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e7d:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e83:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e89:    	mov    rdx,rdi
  00e8c:    	mov    rcx,rsi
  00e8f:    	mov    rdi,rbx
  00e92:    	mov    rsi,r12
  00e95: 34 	movabs rax,0x563437f17b80
  00e9f:    	call   rax
  00ea1:    	movq   xmm2,QWORD PTR [rsp]
  00ea6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00eac:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00eb2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00eb8:    	add    rsp,0x20
  00ebc: 34 	movabs r13,0x5634398559b0
  00ec6:    	test   rax,rax
  00ec9:    	je     0xffff6743
  00ecf:    	mov    QWORD PTR [rbp-0x78],rax
:00070 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00ed3: 01 	sub    DWORD PTR [rip+0xc1a],0x1        # 0x1af4
  00eda:    	je     0x3aec9
  00ee0:    	mov    rdi,QWORD PTR [rbp-0x70]
  00ee4:    	mov    rsi,QWORD PTR [rbp-0x78]
  00ee8:    	sub    rsp,0x20
  00eec:    	movq   QWORD PTR [rsp],xmm2
  00ef1:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ef7:    	movq   QWORD PTR [rsp+0x10],xmm5
  00efd:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f03:    	mov    rdx,rdi
  00f06:    	mov    rcx,rsi
  00f09:    	mov    rdi,rbx
  00f0c:    	mov    rsi,r12
  00f0f: 34 	movabs rax,0x563437f15c00
  00f19:    	call   rax
  00f1b:    	movq   xmm2,QWORD PTR [rsp]
  00f20:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f26:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f2c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f32:    	add    rsp,0x20
  00f36: 34 	movabs r13,0x5634398559c0
  00f40:    	test   rax,rax
  00f43:    	je     0xffff6743
  00f49:    	mov    QWORD PTR [rbp-0x70],rax
:00071 %11 = %1.call org()                  [<INVALID>]
  00f4d: 01 	sub    DWORD PTR [rip+0xba4],0x1        # 0x1af8
  00f54:    	je     0x3af07
  00f5a:    	sub    rsp,0x20
  00f5e:    	movq   QWORD PTR [rsp],xmm2
  00f63:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f69:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f6f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f75:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f79: 34 	movabs rax,0x563437f53600
  00f83:    	call   rax
  00f85:    	mov    r15d,eax
  00f88: 00 	cmp    r15d,DWORD PTR [rip+0xb71]        # 0x1b00
  00f8f:    	jne    0x3af29
  00f95:    	mov    eax,DWORD PTR [rip+0xffffffffffff8366]        # 0xffff9301
  00f9b:    	cmp    DWORD PTR [rip+0xb5b],eax        # 0x1afc
  00fa1:    	jne    0x3af29
  00fa7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fb0:    	mov    QWORD PTR [rsp-0x38],rcx
  00fb5:    	mov    rax,QWORD PTR [rbx]
  00fb8:    	lea    rdi,[rsp-0x18]
  00fbd:    	mov    QWORD PTR [rdi],rax
  00fc0:    	mov    QWORD PTR [rbx],rdi
  00fc3:    	mov    rax,QWORD PTR [rbp-0x30]
  00fc7:    	mov    QWORD PTR [rsp-0x38],rax
  00fcc: 00 	mov    rdi,0x0
  00fd3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fdc: 00 	movabs rax,0x0
  00fe6:    	mov    QWORD PTR [rsp-0x28],rax
  00feb: 00 	movabs r13,0x0
  00ff5:    	call   0xffff6708
  00ffa:    	lea    rdi,[rbp-0x8]
  00ffe:    	mov    QWORD PTR [rbx],rdi
  01001:    	movq   xmm2,QWORD PTR [rsp]
  01006:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0100c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01012:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01018:    	add    rsp,0x20
  0101c:    	test   rax,rax
  0101f:    	je     0x3af95
  01025:    	mov    QWORD PTR [rbp-0x80],rax
:00072 
:00074 %10 = %11.call y()                   [<INVALID>]
  01029: 01 	sub    DWORD PTR [rip+0xad4],0x1        # 0x1b04
  01030:    	je     0x3afc0
  01036:    	sub    rsp,0x20
  0103a:    	movq   QWORD PTR [rsp],xmm2
  0103f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01045:    	movq   QWORD PTR [rsp+0x10],xmm5
  0104b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01051:    	mov    rdi,QWORD PTR [rbp-0x80]
  01055: 34 	movabs rax,0x563437f53600
  0105f:    	call   rax
  01061:    	mov    r15d,eax
  01064: 00 	cmp    r15d,DWORD PTR [rip+0xaa1]        # 0x1b0c
  0106b:    	jne    0x3afe2
  01071:    	mov    eax,DWORD PTR [rip+0xffffffffffff828a]        # 0xffff9301
  01077:    	cmp    DWORD PTR [rip+0xa8b],eax        # 0x1b08
  0107d:    	jne    0x3afe2
  01083: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0108c:    	mov    QWORD PTR [rsp-0x38],rcx
  01091:    	mov    rax,QWORD PTR [rbx]
  01094:    	lea    rdi,[rsp-0x18]
  01099:    	mov    QWORD PTR [rdi],rax
  0109c:    	mov    QWORD PTR [rbx],rdi
  0109f:    	mov    rax,QWORD PTR [rbp-0x80]
  010a3:    	mov    QWORD PTR [rsp-0x38],rax
  010a8: 00 	mov    rdi,0x0
  010af: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010b8: 00 	movabs rax,0x0
  010c2:    	mov    QWORD PTR [rsp-0x28],rax
  010c7: 00 	movabs r13,0x0
  010d1:    	call   0xffff6708
  010d6:    	lea    rdi,[rbp-0x8]
  010da:    	mov    QWORD PTR [rbx],rdi
  010dd:    	movq   xmm2,QWORD PTR [rsp]
  010e2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010e8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010ee:    	movq   xmm6,QWORD PTR [rsp+0x18]
  010f4:    	add    rsp,0x20
  010f8:    	test   rax,rax
  010fb:    	je     0x3b04e
  01101:    	mov    QWORD PTR [rbp-0x78],rax
:00075 
:00077 %12 = %1.call dir()                  [<INVALID>]
  01105: 01 	sub    DWORD PTR [rip+0xa04],0x1        # 0x1b10
  0110c:    	je     0x3b079
  01112:    	sub    rsp,0x20
  01116:    	movq   QWORD PTR [rsp],xmm2
  0111b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01121:    	movq   QWORD PTR [rsp+0x10],xmm5
  01127:    	movq   QWORD PTR [rsp+0x18],xmm6
  0112d:    	mov    rdi,QWORD PTR [rbp-0x30]
  01131: 34 	movabs rax,0x563437f53600
  0113b:    	call   rax
  0113d:    	mov    r15d,eax
  01140: 00 	cmp    r15d,DWORD PTR [rip+0x9d1]        # 0x1b18
  01147:    	jne    0x3b09b
  0114d:    	mov    eax,DWORD PTR [rip+0xffffffffffff81ae]        # 0xffff9301
  01153:    	cmp    DWORD PTR [rip+0x9bb],eax        # 0x1b14
  01159:    	jne    0x3b09b
  0115f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01168:    	mov    QWORD PTR [rsp-0x38],rcx
  0116d:    	mov    rax,QWORD PTR [rbx]
  01170:    	lea    rdi,[rsp-0x18]
  01175:    	mov    QWORD PTR [rdi],rax
  01178:    	mov    QWORD PTR [rbx],rdi
  0117b:    	mov    rax,QWORD PTR [rbp-0x30]
  0117f:    	mov    QWORD PTR [rsp-0x38],rax
  01184: 00 	mov    rdi,0x0
  0118b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01194: 00 	movabs rax,0x0
  0119e:    	mov    QWORD PTR [rsp-0x28],rax
  011a3: 00 	movabs r13,0x0
  011ad:    	call   0xffff6708
  011b2:    	lea    rdi,[rbp-0x8]
  011b6:    	mov    QWORD PTR [rbx],rdi
  011b9:    	movq   xmm2,QWORD PTR [rsp]
  011be:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011c4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011ca:    	movq   xmm6,QWORD PTR [rsp+0x18]
  011d0:    	add    rsp,0x20
  011d4:    	test   rax,rax
  011d7:    	je     0x3b107
  011dd: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 
:00080 %11 = %12.call y()                   [<INVALID>]
  011e4: 01 	sub    DWORD PTR [rip+0x931],0x1        # 0x1b1c
  011eb:    	je     0x3b132
  011f1:    	sub    rsp,0x20
  011f5:    	movq   QWORD PTR [rsp],xmm2
  011fa:    	movq   QWORD PTR [rsp+0x8],xmm4
  01200:    	movq   QWORD PTR [rsp+0x10],xmm5
  01206:    	movq   QWORD PTR [rsp+0x18],xmm6
  0120c: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01213: 34 	movabs rax,0x563437f53600
  0121d:    	call   rax
  0121f:    	mov    r15d,eax
  01222: 00 	cmp    r15d,DWORD PTR [rip+0x8fb]        # 0x1b24
  01229:    	jne    0x3b154
  0122f:    	mov    eax,DWORD PTR [rip+0xffffffffffff80cc]        # 0xffff9301
  01235:    	cmp    DWORD PTR [rip+0x8e5],eax        # 0x1b20
  0123b:    	jne    0x3b154
  01241: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0124a:    	mov    QWORD PTR [rsp-0x38],rcx
  0124f:    	mov    rax,QWORD PTR [rbx]
  01252:    	lea    rdi,[rsp-0x18]
  01257:    	mov    QWORD PTR [rdi],rax
  0125a:    	mov    QWORD PTR [rbx],rdi
  0125d: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01264:    	mov    QWORD PTR [rsp-0x38],rax
  01269: 00 	mov    rdi,0x0
  01270: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01279: 00 	movabs rax,0x0
  01283:    	mov    QWORD PTR [rsp-0x28],rax
  01288: 00 	movabs r13,0x0
  01292:    	call   0xffff6708
  01297:    	lea    rdi,[rbp-0x8]
  0129b:    	mov    QWORD PTR [rbx],rdi
  0129e:    	movq   xmm2,QWORD PTR [rsp]
  012a3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012a9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012af:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012b5:    	add    rsp,0x20
  012b9:    	test   rax,rax
  012bc:    	je     0x3b1c3
  012c2:    	mov    QWORD PTR [rbp-0x80],rax
:00081 
:00083 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  012c6: 01 	sub    DWORD PTR [rip+0x85b],0x1        # 0x1b28
  012cd:    	je     0x3b1ee
  012d3:    	mov    rdi,QWORD PTR [rbp-0x58]
  012d7:    	mov    rsi,QWORD PTR [rbp-0x80]
  012db:    	sub    rsp,0x20
  012df:    	movq   QWORD PTR [rsp],xmm2
  012e4:    	movq   QWORD PTR [rsp+0x8],xmm4
  012ea:    	movq   QWORD PTR [rsp+0x10],xmm5
  012f0:    	movq   QWORD PTR [rsp+0x18],xmm6
  012f6:    	mov    rdx,rdi
  012f9:    	mov    rcx,rsi
  012fc:    	mov    rdi,rbx
  012ff:    	mov    rsi,r12
  01302: 34 	movabs rax,0x563437f17b80
  0130c:    	call   rax
  0130e:    	movq   xmm2,QWORD PTR [rsp]
  01313:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01319:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0131f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01325:    	add    rsp,0x20
  01329: 34 	movabs r13,0x563439855a90
  01333:    	test   rax,rax
  01336:    	je     0xffff6743
  0133c:    	mov    QWORD PTR [rbp-0x80],rax
:00084 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  01340: 01 	sub    DWORD PTR [rip+0x7e5],0x1        # 0x1b2c
  01347:    	je     0x3b22c
  0134d:    	mov    rdi,QWORD PTR [rbp-0x78]
  01351:    	mov    rsi,QWORD PTR [rbp-0x80]
  01355:    	sub    rsp,0x20
  01359:    	movq   QWORD PTR [rsp],xmm2
  0135e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01364:    	movq   QWORD PTR [rsp+0x10],xmm5
  0136a:    	movq   QWORD PTR [rsp+0x18],xmm6
  01370:    	mov    rdx,rdi
  01373:    	mov    rcx,rsi
  01376:    	mov    rdi,rbx
  01379:    	mov    rsi,r12
  0137c: 34 	movabs rax,0x563437f15c00
  01386:    	call   rax
  01388:    	movq   xmm2,QWORD PTR [rsp]
  0138d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01393:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01399:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0139f:    	add    rsp,0x20
  013a3: 34 	movabs r13,0x563439855aa0
  013ad:    	test   rax,rax
  013b0:    	je     0xffff6743
  013b6:    	mov    QWORD PTR [rbp-0x78],rax
:00085 %12 = %1.call org()                  [<INVALID>]
  013ba: 01 	sub    DWORD PTR [rip+0x76f],0x1        # 0x1b30
  013c1:    	je     0x3b26a
  013c7:    	sub    rsp,0x20
  013cb:    	movq   QWORD PTR [rsp],xmm2
  013d0:    	movq   QWORD PTR [rsp+0x8],xmm4
  013d6:    	movq   QWORD PTR [rsp+0x10],xmm5
  013dc:    	movq   QWORD PTR [rsp+0x18],xmm6
  013e2:    	mov    rdi,QWORD PTR [rbp-0x30]
  013e6: 34 	movabs rax,0x563437f53600
  013f0:    	call   rax
  013f2:    	mov    r15d,eax
  013f5: 00 	cmp    r15d,DWORD PTR [rip+0x73c]        # 0x1b38
  013fc:    	jne    0x3b28c
  01402:    	mov    eax,DWORD PTR [rip+0xffffffffffff7ef9]        # 0xffff9301
  01408:    	cmp    DWORD PTR [rip+0x726],eax        # 0x1b34
  0140e:    	jne    0x3b28c
  01414: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0141d:    	mov    QWORD PTR [rsp-0x38],rcx
  01422:    	mov    rax,QWORD PTR [rbx]
  01425:    	lea    rdi,[rsp-0x18]
  0142a:    	mov    QWORD PTR [rdi],rax
  0142d:    	mov    QWORD PTR [rbx],rdi
  01430:    	mov    rax,QWORD PTR [rbp-0x30]
  01434:    	mov    QWORD PTR [rsp-0x38],rax
  01439: 00 	mov    rdi,0x0
  01440: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01449: 00 	movabs rax,0x0
  01453:    	mov    QWORD PTR [rsp-0x28],rax
  01458: 00 	movabs r13,0x0
  01462:    	call   0xffff6708
  01467:    	lea    rdi,[rbp-0x8]
  0146b:    	mov    QWORD PTR [rbx],rdi
  0146e:    	movq   xmm2,QWORD PTR [rsp]
  01473:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01479:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0147f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01485:    	add    rsp,0x20
  01489:    	test   rax,rax
  0148c:    	je     0x3b2f8
  01492: ff 	mov    QWORD PTR [rbp-0x88],rax
:00086 
:00088 %11 = %12.call z()                   [<INVALID>]
  01499: 01 	sub    DWORD PTR [rip+0x69c],0x1        # 0x1b3c
  014a0:    	je     0x3b323
  014a6:    	sub    rsp,0x20
  014aa:    	movq   QWORD PTR [rsp],xmm2
  014af:    	movq   QWORD PTR [rsp+0x8],xmm4
  014b5:    	movq   QWORD PTR [rsp+0x10],xmm5
  014bb:    	movq   QWORD PTR [rsp+0x18],xmm6
  014c1: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  014c8: 34 	movabs rax,0x563437f53600
  014d2:    	call   rax
  014d4:    	mov    r15d,eax
  014d7: 00 	cmp    r15d,DWORD PTR [rip+0x666]        # 0x1b44
  014de:    	jne    0x3b345
  014e4:    	mov    eax,DWORD PTR [rip+0xffffffffffff7e17]        # 0xffff9301
  014ea:    	cmp    DWORD PTR [rip+0x650],eax        # 0x1b40
  014f0:    	jne    0x3b345
  014f6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014ff:    	mov    QWORD PTR [rsp-0x38],rcx
  01504:    	mov    rax,QWORD PTR [rbx]
  01507:    	lea    rdi,[rsp-0x18]
  0150c:    	mov    QWORD PTR [rdi],rax
  0150f:    	mov    QWORD PTR [rbx],rdi
  01512: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01519:    	mov    QWORD PTR [rsp-0x38],rax
  0151e: 00 	mov    rdi,0x0
  01525: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0152e: 00 	movabs rax,0x0
  01538:    	mov    QWORD PTR [rsp-0x28],rax
  0153d: 00 	movabs r13,0x0
  01547:    	call   0xffff6708
  0154c:    	lea    rdi,[rbp-0x8]
  01550:    	mov    QWORD PTR [rbx],rdi
  01553:    	movq   xmm2,QWORD PTR [rsp]
  01558:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0155e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01564:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0156a:    	add    rsp,0x20
  0156e:    	test   rax,rax
  01571:    	je     0x3b3b4
  01577:    	mov    QWORD PTR [rbp-0x80],rax
:00089 
:00091 %13 = %1.call dir()                  [<INVALID>]
  0157b: 01 	sub    DWORD PTR [rip+0x5c6],0x1        # 0x1b48
  01582:    	je     0x3b3df
  01588:    	sub    rsp,0x20
  0158c:    	movq   QWORD PTR [rsp],xmm2
  01591:    	movq   QWORD PTR [rsp+0x8],xmm4
  01597:    	movq   QWORD PTR [rsp+0x10],xmm5
  0159d:    	movq   QWORD PTR [rsp+0x18],xmm6
  015a3:    	mov    rdi,QWORD PTR [rbp-0x30]
  015a7: 34 	movabs rax,0x563437f53600
  015b1:    	call   rax
  015b3:    	mov    r15d,eax
  015b6: 00 	cmp    r15d,DWORD PTR [rip+0x593]        # 0x1b50
  015bd:    	jne    0x3b401
  015c3:    	mov    eax,DWORD PTR [rip+0xffffffffffff7d38]        # 0xffff9301
  015c9:    	cmp    DWORD PTR [rip+0x57d],eax        # 0x1b4c
  015cf:    	jne    0x3b401
  015d5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015de:    	mov    QWORD PTR [rsp-0x38],rcx
  015e3:    	mov    rax,QWORD PTR [rbx]
  015e6:    	lea    rdi,[rsp-0x18]
  015eb:    	mov    QWORD PTR [rdi],rax
  015ee:    	mov    QWORD PTR [rbx],rdi
  015f1:    	mov    rax,QWORD PTR [rbp-0x30]
  015f5:    	mov    QWORD PTR [rsp-0x38],rax
  015fa: 00 	mov    rdi,0x0
  01601: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0160a: 00 	movabs rax,0x0
  01614:    	mov    QWORD PTR [rsp-0x28],rax
  01619: 00 	movabs r13,0x0
  01623:    	call   0xffff6708
  01628:    	lea    rdi,[rbp-0x8]
  0162c:    	mov    QWORD PTR [rbx],rdi
  0162f:    	movq   xmm2,QWORD PTR [rsp]
  01634:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0163a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01640:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01646:    	add    rsp,0x20
  0164a:    	test   rax,rax
  0164d:    	je     0x3b46d
  01653: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 
:00094 %12 = %13.call z()                   [<INVALID>]
  0165a: 01 	sub    DWORD PTR [rip+0x4f3],0x1        # 0x1b54
  01661:    	je     0x3b498
  01667:    	sub    rsp,0x20
  0166b:    	movq   QWORD PTR [rsp],xmm2
  01670:    	movq   QWORD PTR [rsp+0x8],xmm4
  01676:    	movq   QWORD PTR [rsp+0x10],xmm5
  0167c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01682: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01689: 34 	movabs rax,0x563437f53600
  01693:    	call   rax
  01695:    	mov    r15d,eax
  01698: 00 	cmp    r15d,DWORD PTR [rip+0x4bd]        # 0x1b5c
  0169f:    	jne    0x3b4ba
  016a5:    	mov    eax,DWORD PTR [rip+0xffffffffffff7c56]        # 0xffff9301
  016ab:    	cmp    DWORD PTR [rip+0x4a7],eax        # 0x1b58
  016b1:    	jne    0x3b4ba
  016b7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016c0:    	mov    QWORD PTR [rsp-0x38],rcx
  016c5:    	mov    rax,QWORD PTR [rbx]
  016c8:    	lea    rdi,[rsp-0x18]
  016cd:    	mov    QWORD PTR [rdi],rax
  016d0:    	mov    QWORD PTR [rbx],rdi
  016d3: ff 	mov    rax,QWORD PTR [rbp-0x90]
  016da:    	mov    QWORD PTR [rsp-0x38],rax
  016df: 00 	mov    rdi,0x0
  016e6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016ef: 00 	movabs rax,0x0
  016f9:    	mov    QWORD PTR [rsp-0x28],rax
  016fe: 00 	movabs r13,0x0
  01708:    	call   0xffff6708
  0170d:    	lea    rdi,[rbp-0x8]
  01711:    	mov    QWORD PTR [rbx],rdi
  01714:    	movq   xmm2,QWORD PTR [rsp]
  01719:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0171f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01725:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0172b:    	add    rsp,0x20
  0172f:    	test   rax,rax
  01732:    	je     0x3b529
  01738: ff 	mov    QWORD PTR [rbp-0x88],rax
:00095 
:00097 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  0173f: 01 	sub    DWORD PTR [rip+0x41a],0x1        # 0x1b60
  01746:    	je     0x3b554
  0174c:    	mov    rdi,QWORD PTR [rbp-0x58]
  01750: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  01757:    	sub    rsp,0x20
  0175b:    	movq   QWORD PTR [rsp],xmm2
  01760:    	movq   QWORD PTR [rsp+0x8],xmm4
  01766:    	movq   QWORD PTR [rsp+0x10],xmm5
  0176c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01772:    	mov    rdx,rdi
  01775:    	mov    rcx,rsi
  01778:    	mov    rdi,rbx
  0177b:    	mov    rsi,r12
  0177e: 34 	movabs rax,0x563437f17b80
  01788:    	call   rax
  0178a:    	movq   xmm2,QWORD PTR [rsp]
  0178f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01795:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0179b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  017a1:    	add    rsp,0x20
  017a5: 34 	movabs r13,0x563439855b70
  017af:    	test   rax,rax
  017b2:    	je     0xffff6743
  017b8: ff 	mov    QWORD PTR [rbp-0x88],rax
:00098 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  017bf: 01 	sub    DWORD PTR [rip+0x39e],0x1        # 0x1b64
  017c6:    	je     0x3b592
  017cc:    	mov    rdi,QWORD PTR [rbp-0x80]
  017d0: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  017d7:    	sub    rsp,0x20
  017db:    	movq   QWORD PTR [rsp],xmm2
  017e0:    	movq   QWORD PTR [rsp+0x8],xmm4
  017e6:    	movq   QWORD PTR [rsp+0x10],xmm5
  017ec:    	movq   QWORD PTR [rsp+0x18],xmm6
  017f2:    	mov    rdx,rdi
  017f5:    	mov    rcx,rsi
  017f8:    	mov    rdi,rbx
  017fb:    	mov    rsi,r12
  017fe: 34 	movabs rax,0x563437f15c00
  01808:    	call   rax
  0180a:    	movq   xmm2,QWORD PTR [rsp]
  0180f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01815:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0181b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01821:    	add    rsp,0x20
  01825: 34 	movabs r13,0x563439855b80
  0182f:    	test   rax,rax
  01832:    	je     0xffff6743
  01838:    	mov    QWORD PTR [rbp-0x80],rax
:00099 %7 = %8.call new(%9; 3)              [<INVALID>]
  0183c: 01 	sub    DWORD PTR [rip+0x325],0x1        # 0x1b68
  01843:    	je     0x3b5d0
  01849:    	sub    rsp,0x20
  0184d:    	movq   QWORD PTR [rsp],xmm2
  01852:    	movq   QWORD PTR [rsp+0x8],xmm4
  01858:    	movq   QWORD PTR [rsp+0x10],xmm5
  0185e:    	movq   QWORD PTR [rsp+0x18],xmm6
  01864:    	mov    rdi,QWORD PTR [rbp-0x68]
  01868: 34 	movabs rax,0x563437f53600
  01872:    	call   rax
  01874:    	mov    r15d,eax
  01877: 00 	cmp    r15d,DWORD PTR [rip+0x2f2]        # 0x1b70
  0187e:    	jne    0x3b5f2
  01884:    	mov    eax,DWORD PTR [rip+0xffffffffffff7a77]        # 0xffff9301
  0188a:    	cmp    DWORD PTR [rip+0x2dc],eax        # 0x1b6c
  01890:    	jne    0x3b5f2
  01896: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0189f:    	mov    QWORD PTR [rsp-0x38],rcx
  018a4:    	mov    rax,QWORD PTR [rbx]
  018a7:    	lea    rdi,[rsp-0x18]
  018ac:    	mov    QWORD PTR [rdi],rax
  018af:    	mov    QWORD PTR [rbx],rdi
  018b2:    	mov    rax,QWORD PTR [rbp-0x68]
  018b6:    	mov    QWORD PTR [rsp-0x38],rax
  018bb: 00 	mov    rdi,0x3
  018c2:    	mov    rax,QWORD PTR [rbp-0x70]
  018c6:    	mov    QWORD PTR [rsp-0x40],rax
  018cb:    	mov    rax,QWORD PTR [rbp-0x78]
  018cf:    	mov    QWORD PTR [rsp-0x48],rax
  018d4:    	mov    rax,QWORD PTR [rbp-0x80]
  018d8:    	mov    QWORD PTR [rsp-0x50],rax
  018dd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018e6: 00 	movabs rax,0x0
  018f0:    	mov    QWORD PTR [rsp-0x28],rax
  018f5: 00 	movabs r13,0x0
  018ff:    	call   0xffff6708
  01904:    	lea    rdi,[rbp-0x8]
  01908:    	mov    QWORD PTR [rbx],rdi
  0190b:    	movq   xmm2,QWORD PTR [rsp]
  01910:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01916:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0191c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01922:    	add    rsp,0x20
  01926:    	test   rax,rax
  01929:    	je     0x3b65e
  0192f:    	mov    QWORD PTR [rbp-0x60],rax
:00100 
:00102 _ = %2.call pl=(%7; 1)               [<INVALID>]
  01933: 01 	sub    DWORD PTR [rip+0x23a],0x1        # 0x1b74
  0193a:    	je     0x3b689
  01940:    	sub    rsp,0x20
  01944:    	movq   QWORD PTR [rsp],xmm2
  01949:    	movq   QWORD PTR [rsp+0x8],xmm4
  0194f:    	movq   QWORD PTR [rsp+0x10],xmm5
  01955:    	movq   QWORD PTR [rsp+0x18],xmm6
  0195b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0195f: 34 	movabs rax,0x563437f53600
  01969:    	call   rax
  0196b:    	mov    r15d,eax
  0196e: 00 	cmp    r15d,DWORD PTR [rip+0x207]        # 0x1b7c
  01975:    	jne    0x3b6ab
  0197b:    	mov    eax,DWORD PTR [rip+0xffffffffffff7980]        # 0xffff9301
  01981:    	cmp    DWORD PTR [rip+0x1f1],eax        # 0x1b78
  01987:    	jne    0x3b6ab
  0198d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01996:    	mov    QWORD PTR [rsp-0x38],rcx
  0199b:    	mov    rax,QWORD PTR [rbx]
  0199e:    	lea    rdi,[rsp-0x18]
  019a3:    	mov    QWORD PTR [rdi],rax
  019a6:    	mov    QWORD PTR [rbx],rdi
  019a9:    	mov    rax,QWORD PTR [rbp-0x38]
  019ad:    	mov    QWORD PTR [rsp-0x38],rax
  019b2: 00 	mov    rdi,0x1
  019b9:    	mov    rax,QWORD PTR [rbp-0x60]
  019bd:    	mov    QWORD PTR [rsp-0x40],rax
  019c2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019cb: 00 	movabs rax,0x0
  019d5:    	mov    QWORD PTR [rsp-0x28],rax
  019da: 00 	movabs r13,0x0
  019e4:    	call   0xffff6708
  019e9:    	lea    rdi,[rbp-0x8]
  019ed:    	mov    QWORD PTR [rbx],rdi
  019f0:    	movq   xmm2,QWORD PTR [rsp]
  019f5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019fb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a01:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01a07:    	add    rsp,0x20
  01a0b:    	test   rax,rax
  01a0e:    	je     0x3b717
:00103 
:00105 br =>:00106
  01a14:    	jmp    0x3b77f
:00106 %7 = nil
  01a19: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00107 ret %7
  01a21:    	mov    rax,QWORD PTR [rbp-0x60]
  01a25:    	leave  
  01a26:    	ret    
==> start whole compile: clamp FuncId(59) self_class:Scene start:[00000] bytecode:0x56343982d8e0
<== finished compile. elapsed:35.3µs
offset:Pos(46200) code: 553 bytes  data: 87 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: je     0x4a
  00014: jl     0x1f
  0001a: jmp    0x39c25
  0001f: jmp    0x39c25
  00024: mov    eax,0x1
  00029: sub    eax,edx
  0002b: test   rax,rax
  0002e: je     0x4a
  00034: lea    rdi,[rbp-0x38]
  00038: mov    QWORD PTR [rdi+rax*8],0x0
  00040: sub    rax,0x1
  00044: jne    0x38
  0004a: mov    QWORD PTR [rbp-0x38],0x4
  00052: mov    QWORD PTR [rbp-0x40],0x4
  0005a: mov    rdi,QWORD PTR [rbp-0x28]
  0005e: test   rdi,0x7
  00065: jne    0x39c34
  0006b: cmp    DWORD PTR [rdi+0x4],0x32
  0006f: jne    0x39c34
:00000 init_method reg:4 arg:1 pos:1 req:1 stack_offset:5
:00001 %3 = literal[255.5]
  00075: movq   xmm2,QWORD PTR [rip+0x1bb]        # 0x238
  0007d: movabs rax,0x37f800000000002
  00087: mov    QWORD PTR [rbp-0x40],rax
:00002 %2 = %1 * %3                         [Float][Float]
  0008b: mov    rdi,QWORD PTR [rbp-0x30]
  0008f: test   rdi,0x1
  00096: jne    0x39c43
  0009c: test   rdi,0x2
  000a3: je     0xdf
  000a9: xorps  xmm3,xmm3
  000ac: movabs rax,0x8000000000000002
  000b6: cmp    rdi,rax
  000b9: je     0xf1
  000bf: mov    rax,rdi
  000c2: sar    rax,0x3f
  000c6: add    rax,0x2
  000ca: and    rdi,0xfffffffffffffffc
  000ce: or     rdi,rax
  000d1: rol    rdi,0x3d
  000d5: movq   xmm3,rdi
  000da: jmp    0xf1
  000df: call   0xffff4c1c
  000e4: test   rax,rax
  000e7: je     0x39c43
  000ed: movq   xmm3,xmm0
  000f1: movq   xmm4,xmm3
  000f5: mulsd  xmm4,xmm2
:00003 %3 = literal[255.0]
  000f9: movq   xmm2,QWORD PTR [rip+0x147]        # 0x248
  00101: movabs rax,0x37f000000000002
  0010b: mov    QWORD PTR [rbp-0x40],rax
:00004 _%3 = %2 > %3                        [Float][Float]
:00005 condnotbr _%3 =>:00008
  0010f: ucomisd xmm4,xmm2
  00113: jbe    0x39c52
:00006 %2 = literal[255.0]
  00119: movq   xmm4,QWORD PTR [rip+0x137]        # 0x258
  00121: movabs rax,0x37f000000000002
  0012b: mov    QWORD PTR [rbp-0x38],rax
:00007 br =>:00008
  0012f: jmp    0x39c78
:00008 %3 = literal[0.0]
  00134: movq   xmm2,QWORD PTR [rip+0x12c]        # 0x268
  0013c: movabs rax,0x8000000000000002
  00146: mov    QWORD PTR [rbp-0x40],rax
:00009 _%3 = %2 < %3                        [Float][Float]
:00010 condnotbr _%3 =>:00013
  0014a: ucomisd xmm4,xmm2
  0014e: jae    0x39c91
:00011 %2 = literal[0.0]
  00154: movq   xmm4,QWORD PTR [rip+0x11c]        # 0x278
  0015c: movabs rax,0x8000000000000002
  00166: mov    QWORD PTR [rbp-0x38],rax
:00012 br =>:00013
  0016a: jmp    0x39caa
:00013 %3 = %2.call to_i()                  [Float]
  0016f: mov    rdi,QWORD PTR [rbp-0x38]
  00173: test   rdi,0x1
  0017a: jne    0x39cc3
  00180: test   rdi,0x2
  00187: jne    0x1a4
  0018d: test   rdi,0x7
  00194: jne    0x39cc3
  0019a: cmp    DWORD PTR [rdi+0x4],0x7
  0019e: jne    0x39cc3
  001a4: cmp    DWORD PTR [rip+0xffffffffffff75d6],0x26        # 0xffff7781
  001ab: jne    0x39cc3
  001b1: mov    r9,0x0
  001b8: sub    rsp,0x10
  001bc: movq   QWORD PTR [rsp],xmm3
  001c1: movq   QWORD PTR [rsp+0x8],xmm4
  001c7: mov    rdx,rdi
  001ca: mov    QWORD PTR [rsp-0x20],0x0
  001d3: mov    QWORD PTR [rsp-0x38],rcx
  001d8: mov    rax,QWORD PTR [rbx]
  001db: lea    rdi,[rsp-0x18]
  001e0: mov    QWORD PTR [rdi],rax
  001e3: mov    QWORD PTR [rbx],rdi
  001e6: lea    rcx,[rbp-0x48]
  001ea: mov    r8,0x0
  001f1: call   0x39cd2
  001f6: lea    rdi,[rbp-0x8]
  001fa: mov    QWORD PTR [rbx],rdi
  001fd: movq   xmm3,QWORD PTR [rsp]
  00202: movq   xmm4,QWORD PTR [rsp+0x8]
  00208: add    rsp,0x10
  0020c: movabs r13,0x56343982d9d0
  00216: test   rax,rax
  00219: je     0xffff4bc3
  0021f: mov    QWORD PTR [rbp-0x40],rax
:00014 
:00016 ret %3
  00223: mov    rax,QWORD PTR [rbp-0x40]
  00227: leave  
  00228: ret    
==> start whole compile: <unnamed> FuncId(82) self_class:Scene start:[00000] bytecode:0x563439877f60
<== finished compile. elapsed:18.8µs
offset:Pos(46840) code: 304 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: je     0x70
  00014: jl     0x1f
  0001a: jmp    0x70
  0001f: mov    eax,0x1
  00024: sub    eax,edx
  00026: test   rax,rax
  00029: je     0x45
  0002f: lea    rdi,[rbp-0x38]
  00033: mov    QWORD PTR [rdi+rax*8],0x4
  0003b: sub    rax,0x1
  0003f: jne    0x33
  00045: mov    edx,0x1
  0004a: mov    eax,0x1
  0004f: sub    eax,edx
  00051: test   rax,rax
  00054: je     0x70
  0005a: lea    rdi,[rbp-0x38]
  0005e: mov    QWORD PTR [rdi+rax*8],0x0
  00066: sub    rax,0x1
  0006a: jne    0x5e
  00070: mov    rax,0x4
  00077: mov    QWORD PTR [rbp-0x38],rax
  0007b: mov    QWORD PTR [rbp-0x40],rax
  0007f: mov    QWORD PTR [rbp-0x48],rax
  00083: mov    rdi,QWORD PTR [rbp-0x28]
  00087: test   rdi,0x7
  0008e: jne    0x39a93
  00094: cmp    DWORD PTR [rdi+0x4],0x32
  00098: jne    0x39a93
:00000 init_block reg:5 arg:1 pos:1 req:1 stack_offset:5
:00001 %3 = dynvar(3, %3)
  0009e: mov    rax,QWORD PTR [rbp-0x10]
  000a2: mov    rax,QWORD PTR [rax]
  000a5: mov    rax,QWORD PTR [rax]
  000a8: mov    rax,QWORD PTR [rax-0x30]
  000ac: mov    QWORD PTR [rbp-0x40],rax
:00002 %4 = literal[5439489]
  000b0: mov    rax,0xa60003
  000b7: mov    QWORD PTR [rbp-0x48],rax
:00003 %2 = %3.call times(&%4)              [Integer]
  000bb: mov    rdi,QWORD PTR [rbp-0x40]
  000bf: test   rdi,0x1
  000c6: je     0x39aa2
  000cc: cmp    DWORD PTR [rip+0xffffffffffff742e],0x26        # 0xffff7501
  000d3: jne    0x39aa2
  000d9: mov    r9,QWORD PTR [rbp-0x48]
  000dd: mov    rdx,rdi
  000e0: mov    QWORD PTR [rsp-0x20],0x0
  000e9: mov    QWORD PTR [rsp-0x38],rcx
  000ee: mov    rax,QWORD PTR [rbx]
  000f1: lea    rdi,[rsp-0x18]
  000f6: mov    QWORD PTR [rdi],rax
  000f9: mov    QWORD PTR [rbx],rdi
  000fc: lea    rcx,[rbp-0x50]
  00100: mov    r8,0x0
  00107: call   0x39ab1
  0010c: lea    rdi,[rbp-0x8]
  00110: mov    QWORD PTR [rbx],rdi
  00113: movabs r13,0x563439877fb0
  0011d: test   rax,rax
  00120: je     0xffff4943
  00126: mov    QWORD PTR [rbp-0x38],rax
:00004 
:00006 ret %2
  0012a: mov    rax,QWORD PTR [rbp-0x38]
  0012e: leave  
  0012f: ret    
==> start whole compile: <unnamed> FuncId(81) self_class:Scene start:[00000] bytecode:0x56343987b740
<== finished compile. elapsed:69.1µs
offset:Pos(47144) code: 3728 bytes  data: 104 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x80
  0000e: cmp    edx,0x1
  00011: je     0x73
  00017: jl     0x22
  0001d: jmp    0x73
  00022: mov    eax,0x1
  00027: sub    eax,edx
  00029: test   rax,rax
  0002c: je     0x48
  00032: lea    rdi,[rbp-0x38]
  00036: mov    QWORD PTR [rdi+rax*8],0x4
  0003e: sub    rax,0x1
  00042: jne    0x36
  00048: mov    edx,0x1
  0004d: mov    eax,0x1
  00052: sub    eax,edx
  00054: test   rax,rax
  00057: je     0x73
  0005d: lea    rdi,[rbp-0x38]
  00061: mov    QWORD PTR [rdi+rax*8],0x0
  00069: sub    rax,0x1
  0006d: jne    0x61
  00073: mov    rax,0x4
  0007a: mov    QWORD PTR [rbp-0x38],rax
  0007e: mov    QWORD PTR [rbp-0x40],rax
  00082: mov    QWORD PTR [rbp-0x48],rax
  00086: mov    QWORD PTR [rbp-0x50],rax
  0008a: mov    QWORD PTR [rbp-0x58],rax
  0008e: mov    QWORD PTR [rbp-0x60],rax
  00092: mov    QWORD PTR [rbp-0x68],rax
  00096: mov    QWORD PTR [rbp-0x70],rax
  0009a: mov    rdi,QWORD PTR [rbp-0x28]
  0009e: test   rdi,0x7
  000a5: jne    0x399c2
  000ab: cmp    DWORD PTR [rdi+0x4],0x32
  000af: jne    0x399c2
:00000 init_block reg:10 arg:1 pos:1 req:1 stack_offset:8
:00001 %6 = const[Vec]                      [Vec]
  000b5: mov    rax,QWORD PTR [rip+0xffffffffffff731c]        # 0xffff73d8
  000bc: cmp    rax,QWORD PTR [rip+0xde5]        # 0xea8
  000c3: jne    0x399d1
  000c9: mov    rax,QWORD PTR [rip+0xdc8]        # 0xe98
  000d0: mov    QWORD PTR [rbp-0x58],rax
:00002 %7 = literal[0.0]
  000d4: movq   xmm2,QWORD PTR [rip+0xddc]        # 0xeb8
  000dc: movabs rax,0x8000000000000002
  000e6: mov    QWORD PTR [rbp-0x60],rax
:00003 %8 = literal[0.0]
  000ea: movq   xmm3,QWORD PTR [rip+0xdd6]        # 0xec8
  000f2: movabs rax,0x8000000000000002
  000fc: mov    QWORD PTR [rbp-0x68],rax
:00004 %9 = literal[0.0]
  00100: movq   xmm4,QWORD PTR [rip+0xdd0]        # 0xed8
  00108: movabs rax,0x8000000000000002
  00112: mov    QWORD PTR [rbp-0x70],rax
:00005 %2 = %6.call new(%7; 3)              [#<Class:Vec>]
  00116: mov    rdi,QWORD PTR [rbp-0x58]
  0011a: test   rdi,0x7
  00121: jne    0x39a17
  00127: cmp    DWORD PTR [rdi+0x4],0x29
  0012b: jne    0x39a17
  00131: cmp    DWORD PTR [rip+0xffffffffffff7299],0x26        # 0xffff73d1
  00138: jne    0x39a17
  0013e: mov    r9,0x0
  00145: sub    rsp,0x20
  00149: movq   QWORD PTR [rsp],xmm2
  0014e: movq   QWORD PTR [rsp+0x8],xmm3
  00154: movq   QWORD PTR [rsp+0x10],xmm4
  0015a: mov    rdx,rdi
  0015d: mov    QWORD PTR [rsp-0x20],0x0
  00166: mov    QWORD PTR [rsp-0x38],rcx
  0016b: mov    rax,QWORD PTR [rbx]
  0016e: lea    rdi,[rsp-0x18]
  00173: mov    QWORD PTR [rdi],rax
  00176: mov    QWORD PTR [rbx],rdi
  00179: lea    rcx,[rbp-0x60]
  0017d: mov    r8,0x3
  00184: call   0x39a26
  00189: lea    rdi,[rbp-0x8]
  0018d: mov    QWORD PTR [rbx],rdi
  00190: movq   xmm2,QWORD PTR [rsp]
  00195: movq   xmm3,QWORD PTR [rsp+0x8]
  0019b: movq   xmm4,QWORD PTR [rsp+0x10]
  001a1: add    rsp,0x20
  001a5: movabs r13,0x56343987b7b0
  001af: test   rax,rax
  001b2: je     0xffff4813
  001b8: mov    QWORD PTR [rbp-0x38],rax
:00006 
:00008 %6 = dynvar(2, %3)
  001bc: mov    rax,QWORD PTR [rbp-0x10]
  001c0: mov    rax,QWORD PTR [rax]
  001c3: mov    rax,QWORD PTR [rax-0x30]
  001c7: mov    QWORD PTR [rbp-0x58],rax
:00009 %7 = literal[5373953]
  001cb: mov    rax,0xa40003
  001d2: mov    QWORD PTR [rbp-0x60],rax
:00010 _ = %6.call times(&%7)               [Integer]
  001d6: mov    rdi,QWORD PTR [rbp-0x58]
  001da: test   rdi,0x1
  001e1: je     0x39a58
  001e7: cmp    DWORD PTR [rip+0xffffffffffff71e3],0x26        # 0xffff73d1
  001ee: jne    0x39a58
  001f4: mov    r9,QWORD PTR [rbp-0x60]
  001f8: sub    rsp,0x10
  001fc: movq   QWORD PTR [rsp],xmm3
  00201: movq   QWORD PTR [rsp+0x8],xmm4
  00207: mov    rdx,rdi
  0020a: mov    QWORD PTR [rsp-0x20],0x0
  00213: mov    QWORD PTR [rsp-0x38],rcx
  00218: mov    rax,QWORD PTR [rbx]
  0021b: lea    rdi,[rsp-0x18]
  00220: mov    QWORD PTR [rdi],rax
  00223: mov    QWORD PTR [rbx],rdi
  00226: lea    rcx,[rbp-0x68]
  0022a: mov    r8,0x0
  00231: call   0x39a67
  00236: lea    rdi,[rbp-0x8]
  0023a: mov    QWORD PTR [rbx],rdi
  0023d: movq   xmm3,QWORD PTR [rsp]
  00242: movq   xmm4,QWORD PTR [rsp+0x8]
  00248: add    rsp,0x10
  0024c: movabs r13,0x56343987b800
  00256: test   rax,rax
  00259: je     0xffff4813
:00011 
:00013 %6 = %2.call x()                     [Vec]
  0025f: mov    rdi,QWORD PTR [rbp-0x38]
  00263: test   rdi,0x7
  0026a: jne    0x39a99
  00270: cmp    DWORD PTR [rdi+0x4],0x28
  00274: jne    0x39a99
  0027a: cmp    DWORD PTR [rip+0xffffffffffff7150],0x26        # 0xffff73d1
  00281: jne    0x39a99
  00287: mov    esi,DWORD PTR [rip+0xc57]        # 0xee4
  0028d: cmp    esi,0xffffffff
  00290: je     0x39aa8
  00296: cmp    WORD PTR [rdi+0x2],0x3
  0029b: jne    0x2b4
  002a1: cmp    esi,0x6
  002a4: jge    0x2b4
  002aa: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  002af: jmp    0x2de
  002b4: sub    rsp,0x10
  002b8: movq   QWORD PTR [rsp],xmm3
  002bd: movq   QWORD PTR [rsp+0x8],xmm4
  002c3: movabs rax,0x563437ed0590
  002cd: call   rax
  002cf: movq   xmm3,QWORD PTR [rsp]
  002d4: movq   xmm4,QWORD PTR [rsp+0x8]
  002da: add    rsp,0x10
  002de: mov    QWORD PTR [rbp-0x58],rax
:00014 
:00016 %7 = dynvar(2, %5)
  002e2: mov    rax,QWORD PTR [rbp-0x10]
  002e6: mov    rax,QWORD PTR [rax]
  002e9: mov    rax,QWORD PTR [rax-0x40]
  002ed: mov    QWORD PTR [rbp-0x60],rax
:00017 %8 = dynvar(2, %5)
  002f1: mov    rax,QWORD PTR [rbp-0x10]
  002f5: mov    rax,QWORD PTR [rax]
  002f8: mov    rax,QWORD PTR [rax-0x40]
  002fc: mov    QWORD PTR [rbp-0x68],rax
:00018 %7 = %7 * %8                         [Float][Float]
  00300: mov    rdi,QWORD PTR [rbp-0x60]
  00304: test   rdi,0x1
  0030b: jne    0x39aef
  00311: test   rdi,0x2
  00318: je     0x354
  0031e: xorps  xmm2,xmm2
  00321: movabs rax,0x8000000000000002
  0032b: cmp    rdi,rax
  0032e: je     0x366
  00334: mov    rax,rdi
  00337: sar    rax,0x3f
  0033b: add    rax,0x2
  0033f: and    rdi,0xfffffffffffffffc
  00343: or     rdi,rax
  00346: rol    rdi,0x3d
  0034a: movq   xmm2,rdi
  0034f: jmp    0x366
  00354: call   0xffff486c
  00359: test   rax,rax
  0035c: je     0x39aef
  00362: movq   xmm2,xmm0
  00366: mov    rdi,QWORD PTR [rbp-0x68]
  0036a: test   rdi,0x1
  00371: jne    0x39afe
  00377: test   rdi,0x2
  0037e: je     0x3ba
  00384: xorps  xmm3,xmm3
  00387: movabs rax,0x8000000000000002
  00391: cmp    rdi,rax
  00394: je     0x3cc
  0039a: mov    rax,rdi
  0039d: sar    rax,0x3f
  003a1: add    rax,0x2
  003a5: and    rdi,0xfffffffffffffffc
  003a9: or     rdi,rax
  003ac: rol    rdi,0x3d
  003b0: movq   xmm3,rdi
  003b5: jmp    0x3cc
  003ba: call   0xffff486c
  003bf: test   rax,rax
  003c2: je     0x39afe
  003c8: movq   xmm3,xmm0
  003cc: mulsd  xmm2,xmm3
:00019 %3 = %6 / %7                         [Float][Float]
  003d0: mov    rdi,QWORD PTR [rbp-0x58]
  003d4: test   rdi,0x1
  003db: jne    0x39b0d
  003e1: test   rdi,0x2
  003e8: je     0x424
  003ee: xorps  xmm5,xmm5
  003f1: movabs rax,0x8000000000000002
  003fb: cmp    rdi,rax
  003fe: je     0x436
  00404: mov    rax,rdi
  00407: sar    rax,0x3f
  0040b: add    rax,0x2
  0040f: and    rdi,0xfffffffffffffffc
  00413: or     rdi,rax
  00416: rol    rdi,0x3d
  0041a: movq   xmm5,rdi
  0041f: jmp    0x436
  00424: call   0xffff486c
  00429: test   rax,rax
  0042c: je     0x39b0d
  00432: movq   xmm5,xmm0
  00436: movq   xmm6,xmm5
  0043a: movq   rax,xmm2
  0043f: test   rax,rax
  00442: je     0xffff4838
  00448: divsd  xmm6,xmm2
:00020 %6 = %2.call y()                     [Vec]
  0044c: mov    rdi,QWORD PTR [rbp-0x38]
  00450: test   rdi,0x7
  00457: jne    0x39b29
  0045d: cmp    DWORD PTR [rdi+0x4],0x28
  00461: jne    0x39b29
  00467: cmp    DWORD PTR [rip+0xffffffffffff6f63],0x26        # 0xffff73d1
  0046e: jne    0x39b29
  00474: mov    esi,DWORD PTR [rip+0xa72]        # 0xeec
  0047a: cmp    esi,0xffffffff
  0047d: je     0x39b52
  00483: cmp    WORD PTR [rdi+0x2],0x3
  00488: jne    0x4a1
  0048e: cmp    esi,0x6
  00491: jge    0x4a1
  00497: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0049c: jmp    0x4e3
  004a1: sub    rsp,0x20
  004a5: movq   QWORD PTR [rsp],xmm2
  004aa: movq   QWORD PTR [rsp+0x8],xmm3
  004b0: movq   QWORD PTR [rsp+0x10],xmm4
  004b6: movq   QWORD PTR [rsp+0x18],xmm6
  004bc: movabs rax,0x563437ed0590
  004c6: call   rax
  004c8: movq   xmm2,QWORD PTR [rsp]
  004cd: movq   xmm3,QWORD PTR [rsp+0x8]
  004d3: movq   xmm4,QWORD PTR [rsp+0x10]
  004d9: movq   xmm6,QWORD PTR [rsp+0x18]
  004df: add    rsp,0x20
  004e3: mov    QWORD PTR [rbp-0x58],rax
:00021 
:00023 %7 = dynvar(2, %5)
  004e7: mov    rax,QWORD PTR [rbp-0x10]
  004eb: mov    rax,QWORD PTR [rax]
  004ee: mov    rax,QWORD PTR [rax-0x40]
  004f2: mov    QWORD PTR [rbp-0x60],rax
:00024 %8 = dynvar(2, %5)
  004f6: mov    rax,QWORD PTR [rbp-0x10]
  004fa: mov    rax,QWORD PTR [rax]
  004fd: mov    rax,QWORD PTR [rax-0x40]
  00501: mov    QWORD PTR [rbp-0x68],rax
:00025 %7 = %7 * %8                         [Float][Float]
  00505: mov    rdi,QWORD PTR [rbp-0x60]
  00509: test   rdi,0x1
  00510: jne    0x39bb1
  00516: test   rdi,0x2
  0051d: je     0x559
  00523: xorps  xmm2,xmm2
  00526: movabs rax,0x8000000000000002
  00530: cmp    rdi,rax
  00533: je     0x56b
  00539: mov    rax,rdi
  0053c: sar    rax,0x3f
  00540: add    rax,0x2
  00544: and    rdi,0xfffffffffffffffc
  00548: or     rdi,rax
  0054b: rol    rdi,0x3d
  0054f: movq   xmm2,rdi
  00554: jmp    0x56b
  00559: call   0xffff486c
  0055e: test   rax,rax
  00561: je     0x39bb1
  00567: movq   xmm2,xmm0
  0056b: mov    rdi,QWORD PTR [rbp-0x68]
  0056f: test   rdi,0x1
  00576: jne    0x39bcd
  0057c: test   rdi,0x2
  00583: je     0x5bf
  00589: xorps  xmm3,xmm3
  0058c: movabs rax,0x8000000000000002
  00596: cmp    rdi,rax
  00599: je     0x5d1
  0059f: mov    rax,rdi
  005a2: sar    rax,0x3f
  005a6: add    rax,0x2
  005aa: and    rdi,0xfffffffffffffffc
  005ae: or     rdi,rax
  005b1: rol    rdi,0x3d
  005b5: movq   xmm3,rdi
  005ba: jmp    0x5d1
  005bf: call   0xffff486c
  005c4: test   rax,rax
  005c7: je     0x39bcd
  005cd: movq   xmm3,xmm0
  005d1: mulsd  xmm2,xmm3
:00026 %4 = %6 / %7                         [Float][Float]
  005d5: mov    rdi,QWORD PTR [rbp-0x58]
  005d9: test   rdi,0x1
  005e0: jne    0x39be9
  005e6: test   rdi,0x2
  005ed: je     0x629
  005f3: xorps  xmm5,xmm5
  005f6: movabs rax,0x8000000000000002
  00600: cmp    rdi,rax
  00603: je     0x63b
  00609: mov    rax,rdi
  0060c: sar    rax,0x3f
  00610: add    rax,0x2
  00614: and    rdi,0xfffffffffffffffc
  00618: or     rdi,rax
  0061b: rol    rdi,0x3d
  0061f: movq   xmm5,rdi
  00624: jmp    0x63b
  00629: call   0xffff486c
  0062e: test   rax,rax
  00631: je     0x39be9
  00637: movq   xmm5,xmm0
  0063b: movq   xmm7,xmm5
  0063f: movq   rax,xmm2
  00644: test   rax,rax
  00647: je     0xffff4838
  0064d: divsd  xmm7,xmm2
:00027 %6 = %2.call z()                     [Vec]
  00651: mov    rdi,QWORD PTR [rbp-0x38]
  00655: test   rdi,0x7
  0065c: jne    0x39c12
  00662: cmp    DWORD PTR [rdi+0x4],0x28
  00666: jne    0x39c12
  0066c: cmp    DWORD PTR [rip+0xffffffffffff6d5e],0x26        # 0xffff73d1
  00673: jne    0x39c12
  00679: mov    esi,DWORD PTR [rip+0x875]        # 0xef4
  0067f: cmp    esi,0xffffffff
  00682: je     0x39c48
  00688: cmp    WORD PTR [rdi+0x2],0x3
  0068d: jne    0x6a6
  00693: cmp    esi,0x6
  00696: jge    0x6a6
  0069c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  006a1: jmp    0x6f4
  006a6: sub    rsp,0x30
  006aa: movq   QWORD PTR [rsp],xmm2
  006af: movq   QWORD PTR [rsp+0x8],xmm3
  006b5: movq   QWORD PTR [rsp+0x10],xmm4
  006bb: movq   QWORD PTR [rsp+0x18],xmm6
  006c1: movq   QWORD PTR [rsp+0x20],xmm7
  006c7: movabs rax,0x563437ed0590
  006d1: call   rax
  006d3: movq   xmm2,QWORD PTR [rsp]
  006d8: movq   xmm3,QWORD PTR [rsp+0x8]
  006de: movq   xmm4,QWORD PTR [rsp+0x10]
  006e4: movq   xmm6,QWORD PTR [rsp+0x18]
  006ea: movq   xmm7,QWORD PTR [rsp+0x20]
  006f0: add    rsp,0x30
  006f4: mov    QWORD PTR [rbp-0x58],rax
:00028 
:00030 %7 = dynvar(2, %5)
  006f8: mov    rax,QWORD PTR [rbp-0x10]
  006fc: mov    rax,QWORD PTR [rax]
  006ff: mov    rax,QWORD PTR [rax-0x40]
  00703: mov    QWORD PTR [rbp-0x60],rax
:00031 %8 = dynvar(2, %5)
  00707: mov    rax,QWORD PTR [rbp-0x10]
  0070b: mov    rax,QWORD PTR [rax]
  0070e: mov    rax,QWORD PTR [rax-0x40]
  00712: mov    QWORD PTR [rbp-0x68],rax
:00032 %7 = %7 * %8                         [Float][Float]
  00716: mov    rdi,QWORD PTR [rbp-0x60]
  0071a: test   rdi,0x1
  00721: jne    0x39cb3
  00727: test   rdi,0x2
  0072e: je     0x76a
  00734: xorps  xmm2,xmm2
  00737: movabs rax,0x8000000000000002
  00741: cmp    rdi,rax
  00744: je     0x77c
  0074a: mov    rax,rdi
  0074d: sar    rax,0x3f
  00751: add    rax,0x2
  00755: and    rdi,0xfffffffffffffffc
  00759: or     rdi,rax
  0075c: rol    rdi,0x3d
  00760: movq   xmm2,rdi
  00765: jmp    0x77c
  0076a: call   0xffff486c
  0076f: test   rax,rax
  00772: je     0x39cb3
  00778: movq   xmm2,xmm0
  0077c: mov    rdi,QWORD PTR [rbp-0x68]
  00780: test   rdi,0x1
  00787: jne    0x39cdc
  0078d: test   rdi,0x2
  00794: je     0x7d0
  0079a: xorps  xmm3,xmm3
  0079d: movabs rax,0x8000000000000002
  007a7: cmp    rdi,rax
  007aa: je     0x7e2
  007b0: mov    rax,rdi
  007b3: sar    rax,0x3f
  007b7: add    rax,0x2
  007bb: and    rdi,0xfffffffffffffffc
  007bf: or     rdi,rax
  007c2: rol    rdi,0x3d
  007c6: movq   xmm3,rdi
  007cb: jmp    0x7e2
  007d0: call   0xffff486c
  007d5: test   rax,rax
  007d8: je     0x39cdc
  007de: movq   xmm3,xmm0
  007e2: mulsd  xmm2,xmm3
:00033 %5 = %6 / %7                         [Float][Float]
  007e6: mov    rdi,QWORD PTR [rbp-0x58]
  007ea: test   rdi,0x1
  007f1: jne    0x39d05
  007f7: test   rdi,0x2
  007fe: je     0x83a
  00804: xorps  xmm5,xmm5
  00807: movabs rax,0x8000000000000002
  00811: cmp    rdi,rax
  00814: je     0x84c
  0081a: mov    rax,rdi
  0081d: sar    rax,0x3f
  00821: add    rax,0x2
  00825: and    rdi,0xfffffffffffffffc
  00829: or     rdi,rax
  0082c: rol    rdi,0x3d
  00830: movq   xmm5,rdi
  00835: jmp    0x84c
  0083a: call   0xffff486c
  0083f: test   rax,rax
  00842: je     0x39d05
  00848: movq   xmm5,xmm0
  0084c: movq   xmm8,xmm5
  00851: movq   rax,xmm2
  00856: test   rax,rax
  00859: je     0xffff4838
  0085f: divsd  xmm8,xmm2
:00034 %8 = %4
:00035 %7 = %0.call clamp(%8; 1)            [Scene]
  00864: movq   xmm0,xmm7
  00868: call   0xffff495f
  0086d: mov    QWORD PTR [rbp-0x68],rax
  00871: mov    rdi,QWORD PTR [rbp-0x28]
  00875: cmp    DWORD PTR [rip+0xffffffffffff6b55],0x26        # 0xffff73d1
  0087c: jne    0x39d3b
  00882: sub    rsp,0x30
  00886: movq   QWORD PTR [rsp],xmm4
  0088b: movq   QWORD PTR [rsp+0x8],xmm5
  00891: movq   QWORD PTR [rsp+0x10],xmm6
  00897: movq   QWORD PTR [rsp+0x18],xmm7
  0089d: movq   QWORD PTR [rsp+0x20],xmm8
  008a4: mov    QWORD PTR [rsp-0x20],0x0
  008ad: mov    QWORD PTR [rsp-0x38],rcx
  008b2: mov    rax,QWORD PTR [rbx]
  008b5: lea    rdi,[rsp-0x18]
  008ba: mov    QWORD PTR [rdi],rax
  008bd: mov    QWORD PTR [rbx],rdi
  008c0: mov    rax,QWORD PTR [rbp-0x28]
  008c4: mov    QWORD PTR [rsp-0x38],rax
  008c9: mov    rdi,0x1
  008d0: mov    rax,QWORD PTR [rbp-0x68]
  008d4: mov    QWORD PTR [rsp-0x40],rax
  008d9: mov    QWORD PTR [rsp-0x30],0x0
  008e2: movabs rax,0x40000003b
  008ec: mov    QWORD PTR [rsp-0x28],rax
  008f1: movabs r13,0x56343982d8e0
  008fb: call   0xffffaa98
  00900: lea    rdi,[rbp-0x8]
  00904: mov    QWORD PTR [rbx],rdi
  00907: movq   xmm4,QWORD PTR [rsp]
  0090c: movq   xmm5,QWORD PTR [rsp+0x8]
  00912: movq   xmm6,QWORD PTR [rsp+0x10]
  00918: movq   xmm7,QWORD PTR [rsp+0x18]
  0091e: movq   xmm8,QWORD PTR [rsp+0x20]
  00925: add    rsp,0x30
  00929: movabs r13,0x56343987b990
  00933: test   rax,rax
  00936: je     0xffff4813
  0093c: mov    QWORD PTR [rbp-0x60],rax
:00036 
:00038 %6 = %7.call chr()                   [Integer]
  00940: mov    rdi,QWORD PTR [rbp-0x60]
  00944: test   rdi,0x1
  0094b: je     0x39d72
  00951: cmp    DWORD PTR [rip+0xffffffffffff6a79],0x26        # 0xffff73d1
  00958: jne    0x39d72
  0095e: mov    r9,0x0
  00965: sub    rsp,0x20
  00969: movq   QWORD PTR [rsp],xmm4
  0096e: movq   QWORD PTR [rsp+0x8],xmm6
  00974: movq   QWORD PTR [rsp+0x10],xmm7
  0097a: movq   QWORD PTR [rsp+0x18],xmm8
  00981: mov    rdx,rdi
  00984: mov    QWORD PTR [rsp-0x20],0x0
  0098d: mov    QWORD PTR [rsp-0x38],rcx
  00992: mov    rax,QWORD PTR [rbx]
  00995: lea    rdi,[rsp-0x18]
  0099a: mov    QWORD PTR [rdi],rax
  0099d: mov    QWORD PTR [rbx],rdi
  009a0: lea    rcx,[rbp-0x68]
  009a4: mov    r8,0x0
  009ab: call   0x39da9
  009b0: lea    rdi,[rbp-0x8]
  009b4: mov    QWORD PTR [rbx],rdi
  009b7: movq   xmm4,QWORD PTR [rsp]
  009bc: movq   xmm6,QWORD PTR [rsp+0x8]
  009c2: movq   xmm7,QWORD PTR [rsp+0x10]
  009c8: movq   xmm8,QWORD PTR [rsp+0x18]
  009cf: add    rsp,0x20
  009d3: movabs r13,0x56343987b9c0
  009dd: test   rax,rax
  009e0: je     0xffff4813
  009e6: mov    QWORD PTR [rbp-0x58],rax
:00039 
:00041 _ = %0.call print(%6; 1)             [Scene]
  009ea: mov    rdi,QWORD PTR [rbp-0x28]
  009ee: cmp    DWORD PTR [rip+0xffffffffffff69dc],0x26        # 0xffff73d1
  009f5: jne    0x39ddb
  009fb: mov    r9,0x0
  00a02: sub    rsp,0x20
  00a06: movq   QWORD PTR [rsp],xmm4
  00a0b: movq   QWORD PTR [rsp+0x8],xmm6
  00a11: movq   QWORD PTR [rsp+0x10],xmm7
  00a17: movq   QWORD PTR [rsp+0x18],xmm8
  00a1e: mov    rdx,rdi
  00a21: mov    QWORD PTR [rsp-0x20],0x0
  00a2a: mov    QWORD PTR [rsp-0x38],rcx
  00a2f: mov    rax,QWORD PTR [rbx]
  00a32: lea    rdi,[rsp-0x18]
  00a37: mov    QWORD PTR [rdi],rax
  00a3a: mov    QWORD PTR [rbx],rdi
  00a3d: lea    rcx,[rbp-0x58]
  00a41: mov    r8,0x1
  00a48: call   0x39e12
  00a4d: lea    rdi,[rbp-0x8]
  00a51: mov    QWORD PTR [rbx],rdi
  00a54: movq   xmm4,QWORD PTR [rsp]
  00a59: movq   xmm6,QWORD PTR [rsp+0x8]
  00a5f: movq   xmm7,QWORD PTR [rsp+0x10]
  00a65: movq   xmm8,QWORD PTR [rsp+0x18]
  00a6c: add    rsp,0x20
  00a70: movabs r13,0x56343987b9f0
  00a7a: test   rax,rax
  00a7d: je     0xffff4813
:00042 
:00044 %8 = %3
:00045 %7 = %0.call clamp(%8; 1)            [Scene]
  00a83: movq   xmm0,xmm6
  00a87: call   0xffff495f
  00a8c: mov    QWORD PTR [rbp-0x68],rax
  00a90: mov    rdi,QWORD PTR [rbp-0x28]
  00a94: cmp    DWORD PTR [rip+0xffffffffffff6936],0x26        # 0xffff73d1
  00a9b: jne    0x39e44
  00aa1: sub    rsp,0x20
  00aa5: movq   QWORD PTR [rsp],xmm4
  00aaa: movq   QWORD PTR [rsp+0x8],xmm6
  00ab0: movq   QWORD PTR [rsp+0x10],xmm7
  00ab6: movq   QWORD PTR [rsp+0x18],xmm8
  00abd: mov    QWORD PTR [rsp-0x20],0x0
  00ac6: mov    QWORD PTR [rsp-0x38],rcx
  00acb: mov    rax,QWORD PTR [rbx]
  00ace: lea    rdi,[rsp-0x18]
  00ad3: mov    QWORD PTR [rdi],rax
  00ad6: mov    QWORD PTR [rbx],rdi
  00ad9: mov    rax,QWORD PTR [rbp-0x28]
  00add: mov    QWORD PTR [rsp-0x38],rax
  00ae2: mov    rdi,0x1
  00ae9: mov    rax,QWORD PTR [rbp-0x68]
  00aed: mov    QWORD PTR [rsp-0x40],rax
  00af2: mov    QWORD PTR [rsp-0x30],0x0
  00afb: movabs rax,0x40000003b
  00b05: mov    QWORD PTR [rsp-0x28],rax
  00b0a: movabs r13,0x56343982d8e0
  00b14: call   0xffffaa98
  00b19: lea    rdi,[rbp-0x8]
  00b1d: mov    QWORD PTR [rbx],rdi
  00b20: movq   xmm4,QWORD PTR [rsp]
  00b25: movq   xmm6,QWORD PTR [rsp+0x8]
  00b2b: movq   xmm7,QWORD PTR [rsp+0x10]
  00b31: movq   xmm8,QWORD PTR [rsp+0x18]
  00b38: add    rsp,0x20
  00b3c: movabs r13,0x56343987ba30
  00b46: test   rax,rax
  00b49: je     0xffff4813
  00b4f: mov    QWORD PTR [rbp-0x60],rax
:00046 
:00048 %6 = %7.call chr()                   [Integer]
  00b53: mov    rdi,QWORD PTR [rbp-0x60]
  00b57: test   rdi,0x1
  00b5e: je     0x39e7b
  00b64: cmp    DWORD PTR [rip+0xffffffffffff6866],0x26        # 0xffff73d1
  00b6b: jne    0x39e7b
  00b71: mov    r9,0x0
  00b78: sub    rsp,0x20
  00b7c: movq   QWORD PTR [rsp],xmm4
  00b81: movq   QWORD PTR [rsp+0x8],xmm6
  00b87: movq   QWORD PTR [rsp+0x10],xmm7
  00b8d: movq   QWORD PTR [rsp+0x18],xmm8
  00b94: mov    rdx,rdi
  00b97: mov    QWORD PTR [rsp-0x20],0x0
  00ba0: mov    QWORD PTR [rsp-0x38],rcx
  00ba5: mov    rax,QWORD PTR [rbx]
  00ba8: lea    rdi,[rsp-0x18]
  00bad: mov    QWORD PTR [rdi],rax
  00bb0: mov    QWORD PTR [rbx],rdi
  00bb3: lea    rcx,[rbp-0x68]
  00bb7: mov    r8,0x0
  00bbe: call   0x39eb2
  00bc3: lea    rdi,[rbp-0x8]
  00bc7: mov    QWORD PTR [rbx],rdi
  00bca: movq   xmm4,QWORD PTR [rsp]
  00bcf: movq   xmm6,QWORD PTR [rsp+0x8]
  00bd5: movq   xmm7,QWORD PTR [rsp+0x10]
  00bdb: movq   xmm8,QWORD PTR [rsp+0x18]
  00be2: add    rsp,0x20
  00be6: movabs r13,0x56343987ba60
  00bf0: test   rax,rax
  00bf3: je     0xffff4813
  00bf9: mov    QWORD PTR [rbp-0x58],rax
:00049 
:00051 _ = %0.call print(%6; 1)             [Scene]
  00bfd: mov    rdi,QWORD PTR [rbp-0x28]
  00c01: cmp    DWORD PTR [rip+0xffffffffffff67c9],0x26        # 0xffff73d1
  00c08: jne    0x39ee4
  00c0e: mov    r9,0x0
  00c15: sub    rsp,0x20
  00c19: movq   QWORD PTR [rsp],xmm4
  00c1e: movq   QWORD PTR [rsp+0x8],xmm6
  00c24: movq   QWORD PTR [rsp+0x10],xmm7
  00c2a: movq   QWORD PTR [rsp+0x18],xmm8
  00c31: mov    rdx,rdi
  00c34: mov    QWORD PTR [rsp-0x20],0x0
  00c3d: mov    QWORD PTR [rsp-0x38],rcx
  00c42: mov    rax,QWORD PTR [rbx]
  00c45: lea    rdi,[rsp-0x18]
  00c4a: mov    QWORD PTR [rdi],rax
  00c4d: mov    QWORD PTR [rbx],rdi
  00c50: lea    rcx,[rbp-0x58]
  00c54: mov    r8,0x1
  00c5b: call   0x39f1b
  00c60: lea    rdi,[rbp-0x8]
  00c64: mov    QWORD PTR [rbx],rdi
  00c67: movq   xmm4,QWORD PTR [rsp]
  00c6c: movq   xmm6,QWORD PTR [rsp+0x8]
  00c72: movq   xmm7,QWORD PTR [rsp+0x10]
  00c78: movq   xmm8,QWORD PTR [rsp+0x18]
  00c7f: add    rsp,0x20
  00c83: movabs r13,0x56343987ba90
  00c8d: test   rax,rax
  00c90: je     0xffff4813
:00052 
:00054 %9 = %5
:00055 %8 = %0.call clamp(%9; 1)            [Scene]
  00c96: movq   xmm0,xmm8
  00c9b: call   0xffff495f
  00ca0: mov    QWORD PTR [rbp-0x70],rax
  00ca4: mov    rdi,QWORD PTR [rbp-0x28]
  00ca8: cmp    DWORD PTR [rip+0xffffffffffff6722],0x26        # 0xffff73d1
  00caf: jne    0x39f4d
  00cb5: sub    rsp,0x20
  00cb9: movq   QWORD PTR [rsp],xmm6
  00cbe: movq   QWORD PTR [rsp+0x8],xmm7
  00cc4: movq   QWORD PTR [rsp+0x10],xmm8
  00ccb: mov    QWORD PTR [rsp-0x20],0x0
  00cd4: mov    QWORD PTR [rsp-0x38],rcx
  00cd9: mov    rax,QWORD PTR [rbx]
  00cdc: lea    rdi,[rsp-0x18]
  00ce1: mov    QWORD PTR [rdi],rax
  00ce4: mov    QWORD PTR [rbx],rdi
  00ce7: mov    rax,QWORD PTR [rbp-0x28]
  00ceb: mov    QWORD PTR [rsp-0x38],rax
  00cf0: mov    rdi,0x1
  00cf7: mov    rax,QWORD PTR [rbp-0x70]
  00cfb: mov    QWORD PTR [rsp-0x40],rax
  00d00: mov    QWORD PTR [rsp-0x30],0x0
  00d09: movabs rax,0x40000003b
  00d13: mov    QWORD PTR [rsp-0x28],rax
  00d18: movabs r13,0x56343982d8e0
  00d22: call   0xffffaa98
  00d27: lea    rdi,[rbp-0x8]
  00d2b: mov    QWORD PTR [rbx],rdi
  00d2e: movq   xmm6,QWORD PTR [rsp]
  00d33: movq   xmm7,QWORD PTR [rsp+0x8]
  00d39: movq   xmm8,QWORD PTR [rsp+0x10]
  00d40: add    rsp,0x20
  00d44: movabs r13,0x56343987bad0
  00d4e: test   rax,rax
  00d51: je     0xffff4813
  00d57: mov    QWORD PTR [rbp-0x68],rax
:00056 
:00058 %7 = %8.call chr()                   [Integer]
  00d5b: mov    rdi,QWORD PTR [rbp-0x68]
  00d5f: test   rdi,0x1
  00d66: je     0x39f84
  00d6c: cmp    DWORD PTR [rip+0xffffffffffff665e],0x26        # 0xffff73d1
  00d73: jne    0x39f84
  00d79: mov    r9,0x0
  00d80: sub    rsp,0x20
  00d84: movq   QWORD PTR [rsp],xmm6
  00d89: movq   QWORD PTR [rsp+0x8],xmm7
  00d8f: movq   QWORD PTR [rsp+0x10],xmm8
  00d96: mov    rdx,rdi
  00d99: mov    QWORD PTR [rsp-0x20],0x0
  00da2: mov    QWORD PTR [rsp-0x38],rcx
  00da7: mov    rax,QWORD PTR [rbx]
  00daa: lea    rdi,[rsp-0x18]
  00daf: mov    QWORD PTR [rdi],rax
  00db2: mov    QWORD PTR [rbx],rdi
  00db5: lea    rcx,[rbp-0x70]
  00db9: mov    r8,0x0
  00dc0: call   0x39fbb
  00dc5: lea    rdi,[rbp-0x8]
  00dc9: mov    QWORD PTR [rbx],rdi
  00dcc: movq   xmm6,QWORD PTR [rsp]
  00dd1: movq   xmm7,QWORD PTR [rsp+0x8]
  00dd7: movq   xmm8,QWORD PTR [rsp+0x10]
  00dde: add    rsp,0x20
  00de2: movabs r13,0x56343987bb00
  00dec: test   rax,rax
  00def: je     0xffff4813
  00df5: mov    QWORD PTR [rbp-0x60],rax
:00059 
:00061 %6 = %0.call print(%7; 1)            [Scene]
  00df9: mov    rdi,QWORD PTR [rbp-0x28]
  00dfd: cmp    DWORD PTR [rip+0xffffffffffff65cd],0x26        # 0xffff73d1
  00e04: jne    0x39fed
  00e0a: mov    r9,0x0
  00e11: sub    rsp,0x20
  00e15: movq   QWORD PTR [rsp],xmm6
  00e1a: movq   QWORD PTR [rsp+0x8],xmm7
  00e20: movq   QWORD PTR [rsp+0x10],xmm8
  00e27: mov    rdx,rdi
  00e2a: mov    QWORD PTR [rsp-0x20],0x0
  00e33: mov    QWORD PTR [rsp-0x38],rcx
  00e38: mov    rax,QWORD PTR [rbx]
  00e3b: lea    rdi,[rsp-0x18]
  00e40: mov    QWORD PTR [rdi],rax
  00e43: mov    QWORD PTR [rbx],rdi
  00e46: lea    rcx,[rbp-0x60]
  00e4a: mov    r8,0x1
  00e51: call   0x3a024
  00e56: lea    rdi,[rbp-0x8]
  00e5a: mov    QWORD PTR [rbx],rdi
  00e5d: movq   xmm6,QWORD PTR [rsp]
  00e62: movq   xmm7,QWORD PTR [rsp+0x8]
  00e68: movq   xmm8,QWORD PTR [rsp+0x10]
  00e6f: add    rsp,0x20
  00e73: movabs r13,0x56343987bb30
  00e7d: test   rax,rax
  00e80: je     0xffff4813
  00e86: mov    QWORD PTR [rbp-0x58],rax
:00062 
:00064 ret %6
  00e8a: mov    rax,QWORD PTR [rbp-0x58]
  00e8e: leave  
  00e8f: ret    
==> start whole compile: <unnamed> FuncId(79) self_class:Scene start:[00000] bytecode:0x56343982ed70
<== finished compile. elapsed:30.2µs
offset:Pos(50976) code: 299 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: je     0x70
  00014: jl     0x1f
  0001a: jmp    0x70
  0001f: mov    eax,0x1
  00024: sub    eax,edx
  00026: test   rax,rax
  00029: je     0x45
  0002f: lea    rdi,[rbp-0x38]
  00033: mov    QWORD PTR [rdi+rax*8],0x4
  0003b: sub    rax,0x1
  0003f: jne    0x33
  00045: mov    edx,0x1
  0004a: mov    eax,0x1
  0004f: sub    eax,edx
  00051: test   rax,rax
  00054: je     0x70
  0005a: lea    rdi,[rbp-0x38]
  0005e: mov    QWORD PTR [rdi+rax*8],0x0
  00066: sub    rax,0x1
  0006a: jne    0x5e
  00070: mov    QWORD PTR [rbp-0x38],0x4
  00078: mov    QWORD PTR [rbp-0x40],0x4
  00080: mov    rdi,QWORD PTR [rbp-0x28]
  00084: test   rdi,0x7
  0008b: jne    0x3916d
  00091: cmp    DWORD PTR [rdi+0x4],0x32
  00095: jne    0x3916d
:00000 init_block reg:4 arg:1 pos:1 req:1 stack_offset:5
:00001 %2 = dynvar(1, %1)
  0009b: mov    rax,QWORD PTR [rbp-0x10]
  0009f: mov    rax,QWORD PTR [rax-0x20]
  000a3: mov    QWORD PTR [rbp-0x38],rax
:00002 %3 = literal[5308417]
  000a7: mov    rax,0xa20003
  000ae: mov    QWORD PTR [rbp-0x40],rax
:00003 _ = %2.call times(&%3)               [Integer]
  000b2: mov    rdi,QWORD PTR [rbp-0x38]
  000b6: test   rdi,0x1
  000bd: je     0x3917c
  000c3: cmp    DWORD PTR [rip+0xffffffffffff640f],0x26        # 0xffff64d9
  000ca: jne    0x3917c
  000d0: mov    r9,QWORD PTR [rbp-0x40]
  000d4: mov    rdx,rdi
  000d7: mov    QWORD PTR [rsp-0x20],0x0
  000e0: mov    QWORD PTR [rsp-0x38],rcx
  000e5: mov    rax,QWORD PTR [rbx]
  000e8: lea    rdi,[rsp-0x18]
  000ed: mov    QWORD PTR [rdi],rax
  000f0: mov    QWORD PTR [rbx],rdi
  000f3: lea    rcx,[rbp-0x48]
  000f7: mov    r8,0x0
  000fe: call   0x3918b
  00103: lea    rdi,[rbp-0x8]
  00107: mov    QWORD PTR [rbx],rdi
  0010a: movabs r13,0x56343982edc0
  00114: test   rax,rax
  00117: je     0xffff391b
:00004 
:00006 %2 = nil
  0011d: mov    QWORD PTR [rbp-0x38],0x4
:00007 ret %2
  00125: mov    rax,QWORD PTR [rbp-0x38]
  00129: leave  
  0012a: ret    
==> start whole compile: intersect FuncId(70) self_class:Sphere start:[00000] bytecode:0x5634398536b0
<== finished compile. elapsed:138.6µs
offset:Pos(52324) code: 7336 bytes  data: 396 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x38c79
  00022:    	jmp    0x38c79
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086: ff 	mov    QWORD PTR [rbp-0x98],rax
  0008d: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00094:    	mov    rdi,QWORD PTR [rbp-0x28]
  00098: 00 	test   rdi,0x7
  0009f:    	jne    0x38c88
  000a5:    	cmp    DWORD PTR [rdi+0x4],0x2a
  000a9:    	jne    0x38c88
:00000 init_method reg:16 arg:2 pos:2 req:2 stack_offset:11
:00001 %9 = %1.call org()                   [Ray]
  000af:    	mov    rdi,QWORD PTR [rbp-0x30]
  000b3: 00 	test   rdi,0x7
  000ba:    	jne    0x38c97
  000c0:    	cmp    DWORD PTR [rdi+0x4],0x2e
  000c4:    	jne    0x38c97
  000ca: 26 	cmp    DWORD PTR [rip+0xffffffffffff5ec4],0x26        # 0xffff5f95
  000d1:    	jne    0x38c97
  000d7:    	mov    esi,DWORD PTR [rip+0x1bcf]        # 0x1cac
  000dd:    	cmp    esi,0xffffffff
  000e0:    	je     0x38ca6
  000e6:    	cmp    WORD PTR [rdi+0x2],0x3
  000eb:    	jne    0x104
  000f1:    	cmp    esi,0x6
  000f4:    	jge    0x104
  000fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000ff:    	jmp    0x110
  00104: 34 	movabs rax,0x563437ed0590
  0010e:    	call   rax
  00110:    	mov    QWORD PTR [rbp-0x70],rax
:00002 
:00004 %10 = @center: Sphere[IvarId(0)]
  00114:    	mov    rdi,QWORD PTR [rbp-0x28]
  00118:    	mov    rax,QWORD PTR [rdi+0x10]
  0011c:    	mov    QWORD PTR [rbp-0x78],rax
:00005 %3 = %9.call vsub(%10; 1)            [Vec]
  00120:    	mov    rdi,QWORD PTR [rbp-0x70]
  00124: 00 	test   rdi,0x7
  0012b:    	jne    0x38ccf
  00131:    	cmp    DWORD PTR [rdi+0x4],0x28
  00135:    	jne    0x38ccf
  0013b: 26 	cmp    DWORD PTR [rip+0xffffffffffff5e53],0x26        # 0xffff5f95
  00142:    	jne    0x38ccf
  00148: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00151:    	mov    QWORD PTR [rsp-0x38],rcx
  00156:    	mov    rax,QWORD PTR [rbx]
  00159:    	lea    rdi,[rsp-0x18]
  0015e:    	mov    QWORD PTR [rdi],rax
  00161:    	mov    QWORD PTR [rbx],rdi
  00164:    	mov    rax,QWORD PTR [rbp-0x70]
  00168:    	mov    QWORD PTR [rsp-0x38],rax
  0016d: 00 	mov    rdi,0x1
  00174:    	mov    rax,QWORD PTR [rbp-0x78]
  00178:    	mov    QWORD PTR [rsp-0x40],rax
  0017d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00186: 08 	movabs rax,0x800000040
  00190:    	mov    QWORD PTR [rsp-0x28],rax
  00195: 34 	movabs r13,0x563439872ba0
  0019f:    	call   0xffff6c68
  001a4:    	lea    rdi,[rbp-0x8]
  001a8:    	mov    QWORD PTR [rbx],rdi
  001ab: 34 	movabs r13,0x563439853720
  001b5:    	test   rax,rax
  001b8:    	je     0xffff33d7
  001be:    	mov    QWORD PTR [rbp-0x40],rax
:00006 
:00008 %9 = %1.call dir()                   [Ray]
  001c2:    	mov    rdi,QWORD PTR [rbp-0x30]
  001c6: 00 	test   rdi,0x7
  001cd:    	jne    0x38cde
  001d3:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001d7:    	jne    0x38cde
  001dd: 26 	cmp    DWORD PTR [rip+0xffffffffffff5db1],0x26        # 0xffff5f95
  001e4:    	jne    0x38cde
  001ea:    	mov    esi,DWORD PTR [rip+0x1ac4]        # 0x1cb4
  001f0:    	cmp    esi,0xffffffff
  001f3:    	je     0x38ced
  001f9:    	cmp    WORD PTR [rdi+0x2],0x3
  001fe:    	jne    0x217
  00204:    	cmp    esi,0x6
  00207:    	jge    0x217
  0020d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00212:    	jmp    0x223
  00217: 34 	movabs rax,0x563437ed0590
  00221:    	call   rax
  00223:    	mov    QWORD PTR [rbp-0x70],rax
:00009 
:00011 %4 = %3.call vdot(%9; 1)             [Vec]
  00227:    	mov    rdi,QWORD PTR [rbp-0x40]
  0022b: 00 	test   rdi,0x7
  00232:    	jne    0x38d16
  00238:    	cmp    DWORD PTR [rdi+0x4],0x28
  0023c:    	jne    0x38d16
  00242: 26 	cmp    DWORD PTR [rip+0xffffffffffff5d4c],0x26        # 0xffff5f95
  00249:    	jne    0x38d16
  0024f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00258:    	mov    QWORD PTR [rsp-0x38],rcx
  0025d:    	mov    rax,QWORD PTR [rbx]
  00260:    	lea    rdi,[rsp-0x18]
  00265:    	mov    QWORD PTR [rdi],rax
  00268:    	mov    QWORD PTR [rbx],rdi
  0026b:    	mov    rax,QWORD PTR [rbp-0x40]
  0026f:    	mov    QWORD PTR [rsp-0x38],rax
  00274: 00 	mov    rdi,0x1
  0027b:    	mov    rax,QWORD PTR [rbp-0x70]
  0027f:    	mov    QWORD PTR [rsp-0x40],rax
  00284: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0028d: 05 	movabs rax,0x500000042
  00297:    	mov    QWORD PTR [rsp-0x28],rax
  0029c: 34 	movabs r13,0x563439877e20
  002a6:    	call   0xffff6cfa
  002ab:    	lea    rdi,[rbp-0x8]
  002af:    	mov    QWORD PTR [rbx],rdi
  002b2: 34 	movabs r13,0x563439853780
  002bc:    	test   rax,rax
  002bf:    	je     0xffff33d7
  002c5:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %10 = %3
  002c9:    	mov    rax,QWORD PTR [rbp-0x40]
  002cd:    	mov    QWORD PTR [rbp-0x78],rax
:00015 %9 = %3.call vdot(%10; 1)            [Vec]
  002d1:    	mov    rdi,QWORD PTR [rbp-0x40]
  002d5: 00 	test   rdi,0x7
  002dc:    	jne    0x38d25
  002e2:    	cmp    DWORD PTR [rdi+0x4],0x28
  002e6:    	jne    0x38d25
  002ec: 26 	cmp    DWORD PTR [rip+0xffffffffffff5ca2],0x26        # 0xffff5f95
  002f3:    	jne    0x38d25
  002f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00302:    	mov    QWORD PTR [rsp-0x38],rcx
  00307:    	mov    rax,QWORD PTR [rbx]
  0030a:    	lea    rdi,[rsp-0x18]
  0030f:    	mov    QWORD PTR [rdi],rax
  00312:    	mov    QWORD PTR [rbx],rdi
  00315:    	mov    rax,QWORD PTR [rbp-0x40]
  00319:    	mov    QWORD PTR [rsp-0x38],rax
  0031e: 00 	mov    rdi,0x1
  00325:    	mov    rax,QWORD PTR [rbp-0x78]
  00329:    	mov    QWORD PTR [rsp-0x40],rax
  0032e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00337: 05 	movabs rax,0x500000042
  00341:    	mov    QWORD PTR [rsp-0x28],rax
  00346: 34 	movabs r13,0x563439877e20
  00350:    	call   0xffff6cfa
  00355:    	lea    rdi,[rbp-0x8]
  00359:    	mov    QWORD PTR [rbx],rdi
  0035c: 34 	movabs r13,0x5634398537c0
  00366:    	test   rax,rax
  00369:    	je     0xffff33d7
  0036f:    	mov    QWORD PTR [rbp-0x70],rax
:00016 
:00018 %10 = @radius: Sphere[IvarId(1)]
  00373:    	mov    rdi,QWORD PTR [rbp-0x28]
  00377:    	mov    rax,QWORD PTR [rdi+0x18]
  0037b:    	mov    QWORD PTR [rbp-0x78],rax
:00019 %11 = @radius: Sphere[IvarId(1)]
  0037f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00383:    	mov    rax,QWORD PTR [rdi+0x18]
  00387:    	mov    QWORD PTR [rbp-0x80],rax
:00020 %10 = %10 * %11                      [Float][Float]
  0038b:    	mov    rdi,QWORD PTR [rbp-0x78]
  0038f: 00 	test   rdi,0x1
  00396:    	jne    0x38d34
  0039c: 00 	test   rdi,0x2
  003a3:    	je     0x3df
  003a9:    	xorps  xmm2,xmm2
  003ac: 00 	movabs rax,0x8000000000000002
  003b6:    	cmp    rdi,rax
  003b9:    	je     0x3f1
  003bf:    	mov    rax,rdi
  003c2:    	sar    rax,0x3f
  003c6:    	add    rax,0x2
  003ca:    	and    rdi,0xfffffffffffffffc
  003ce:    	or     rdi,rax
  003d1:    	rol    rdi,0x3d
  003d5:    	movq   xmm2,rdi
  003da:    	jmp    0x3f1
  003df:    	call   0xffff3430
  003e4:    	test   rax,rax
  003e7:    	je     0x38d34
  003ed:    	movq   xmm2,xmm0
  003f1:    	mov    rdi,QWORD PTR [rbp-0x80]
  003f5: 00 	test   rdi,0x1
  003fc:    	jne    0x38d43
  00402: 00 	test   rdi,0x2
  00409:    	je     0x445
  0040f:    	xorps  xmm3,xmm3
  00412: 00 	movabs rax,0x8000000000000002
  0041c:    	cmp    rdi,rax
  0041f:    	je     0x457
  00425:    	mov    rax,rdi
  00428:    	sar    rax,0x3f
  0042c:    	add    rax,0x2
  00430:    	and    rdi,0xfffffffffffffffc
  00434:    	or     rdi,rax
  00437:    	rol    rdi,0x3d
  0043b:    	movq   xmm3,rdi
  00440:    	jmp    0x457
  00445:    	call   0xffff3430
  0044a:    	test   rax,rax
  0044d:    	je     0x38d43
  00453:    	movq   xmm3,xmm0
  00457:    	mulsd  xmm2,xmm3
:00021 %5 = %9 - %10                        [Float][Float]
  0045b:    	mov    rdi,QWORD PTR [rbp-0x70]
  0045f: 00 	test   rdi,0x1
  00466:    	jne    0x38d52
  0046c: 00 	test   rdi,0x2
  00473:    	je     0x4af
  00479:    	xorps  xmm4,xmm4
  0047c: 00 	movabs rax,0x8000000000000002
  00486:    	cmp    rdi,rax
  00489:    	je     0x4c1
  0048f:    	mov    rax,rdi
  00492:    	sar    rax,0x3f
  00496:    	add    rax,0x2
  0049a:    	and    rdi,0xfffffffffffffffc
  0049e:    	or     rdi,rax
  004a1:    	rol    rdi,0x3d
  004a5:    	movq   xmm4,rdi
  004aa:    	jmp    0x4c1
  004af:    	call   0xffff3430
  004b4:    	test   rax,rax
  004b7:    	je     0x38d52
  004bd:    	movq   xmm4,xmm0
  004c1:    	movq   xmm5,xmm4
  004c5:    	subsd  xmm5,xmm2
:00022 %9 = %4 * %4                         [Float][Float]
  004c9:    	mov    rdi,QWORD PTR [rbp-0x48]
  004cd: 00 	test   rdi,0x1
  004d4:    	jne    0x38d6e
  004da: 00 	test   rdi,0x2
  004e1:    	je     0x51d
  004e7:    	xorps  xmm6,xmm6
  004ea: 00 	movabs rax,0x8000000000000002
  004f4:    	cmp    rdi,rax
  004f7:    	je     0x52f
  004fd:    	mov    rax,rdi
  00500:    	sar    rax,0x3f
  00504:    	add    rax,0x2
  00508:    	and    rdi,0xfffffffffffffffc
  0050c:    	or     rdi,rax
  0050f:    	rol    rdi,0x3d
  00513:    	movq   xmm6,rdi
  00518:    	jmp    0x52f
  0051d:    	call   0xffff3430
  00522:    	test   rax,rax
  00525:    	je     0x38d6e
  0052b:    	movq   xmm6,xmm0
  0052f:    	movq   xmm4,xmm6
  00533:    	mulsd  xmm4,xmm6
:00023 %6 = %9 - %5                         [Float][Float]
  00537:    	movq   xmm7,xmm4
  0053b:    	subsd  xmm7,xmm5
:00024 %9 = literal[0.0]
  0053f: 00 	movq   xmm4,QWORD PTR [rip+0x1775]        # 0x1cbc
  00547: 00 	movabs rax,0x8000000000000002
  00551:    	mov    QWORD PTR [rbp-0x70],rax
:00025 _%9 = %6 > %9                        [Float][Float]
:00026 condnotbr _%9 =>:00114
  00555:    	ucomisd xmm7,xmm4
  00559:    	jbe    0x3a34a
:00027 %9 = %4
:00028 %9 = neg %9                          [<INVALID>]
  0055f: 01 	sub    DWORD PTR [rip+0x175e],0x1        # 0x1cc4
  00566:    	je     0x38dda
  0056c:    	movq   xmm0,xmm6
  00570:    	call   0xffff3523
  00575:    	mov    QWORD PTR [rbp-0x70],rax
  00579:    	sub    rsp,0x30
  0057d:    	movq   QWORD PTR [rsp],xmm2
  00582:    	movq   QWORD PTR [rsp+0x8],xmm3
  00588:    	movq   QWORD PTR [rsp+0x10],xmm5
  0058e:    	movq   QWORD PTR [rsp+0x18],xmm6
  00594:    	movq   QWORD PTR [rsp+0x20],xmm7
  0059a:    	mov    rdi,QWORD PTR [rbp-0x70]
  0059e:    	mov    rdx,rdi
  005a1:    	mov    rdi,rbx
  005a4:    	mov    rsi,r12
  005a7: 34 	movabs rax,0x563437f14b70
  005b1:    	call   rax
  005b3:    	movq   xmm2,QWORD PTR [rsp]
  005b8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005be:    	movq   xmm5,QWORD PTR [rsp+0x10]
  005c4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  005ca:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005d0:    	add    rsp,0x30
  005d4: 34 	movabs r13,0x563439853880
  005de:    	test   rax,rax
  005e1:    	je     0xffff33d7
  005e7:    	mov    QWORD PTR [rbp-0x70],rax
:00029 %11 = const[Math]                    [<INVALID>]
  005eb: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff59aa]        # 0xffff5f9c
  005f2: 00 	cmp    rax,QWORD PTR [rip+0x16e3]        # 0x1cdc
  005f9:    	jne    0x38dfc
  005ff: 00 	mov    rax,QWORD PTR [rip+0x16c6]        # 0x1ccc
  00606:    	mov    QWORD PTR [rbp-0x80],rax
:00030 %12 = %6
:00031 %10 = %11.call sqrt(%12; 1)          [<INVALID>]
  0060a: 01 	sub    DWORD PTR [rip+0x16d3],0x1        # 0x1ce4
  00611:    	je     0x38eb5
  00617:    	movq   xmm0,xmm7
  0061b:    	call   0xffff3523
  00620: ff 	mov    QWORD PTR [rbp-0x88],rax
  00627:    	sub    rsp,0x20
  0062b:    	movq   QWORD PTR [rsp],xmm5
  00630:    	movq   QWORD PTR [rsp+0x8],xmm6
  00636:    	movq   QWORD PTR [rsp+0x10],xmm7
  0063c:    	mov    rdi,QWORD PTR [rbp-0x80]
  00640: 34 	movabs rax,0x563437f53600
  0064a:    	call   rax
  0064c:    	mov    r15d,eax
  0064f: 00 	cmp    r15d,DWORD PTR [rip+0x1696]        # 0x1cec
  00656:    	jne    0x38ed7
  0065c:    	mov    eax,DWORD PTR [rip+0xffffffffffff5933]        # 0xffff5f95
  00662:    	cmp    DWORD PTR [rip+0x1680],eax        # 0x1ce8
  00668:    	jne    0x38ed7
  0066e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00677:    	mov    QWORD PTR [rsp-0x38],rcx
  0067c:    	mov    rax,QWORD PTR [rbx]
  0067f:    	lea    rdi,[rsp-0x18]
  00684:    	mov    QWORD PTR [rdi],rax
  00687:    	mov    QWORD PTR [rbx],rdi
  0068a:    	mov    rax,QWORD PTR [rbp-0x80]
  0068e:    	mov    QWORD PTR [rsp-0x38],rax
  00693: 00 	mov    rdi,0x1
  0069a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  006a1:    	mov    QWORD PTR [rsp-0x40],rax
  006a6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006af: 00 	movabs rax,0x0
  006b9:    	mov    QWORD PTR [rsp-0x28],rax
  006be: 00 	movabs r13,0x0
  006c8:    	call   0xffff339c
  006cd:    	lea    rdi,[rbp-0x8]
  006d1:    	mov    QWORD PTR [rbx],rdi
  006d4:    	movq   xmm5,QWORD PTR [rsp]
  006d9:    	movq   xmm6,QWORD PTR [rsp+0x8]
  006df:    	movq   xmm7,QWORD PTR [rsp+0x10]
  006e5:    	add    rsp,0x20
  006e9:    	test   rax,rax
  006ec:    	je     0x38f43
  006f2:    	mov    QWORD PTR [rbp-0x78],rax
:00032 
:00034 %7 = %9 - %10                        [<INVALID>][<INVALID>]
  006f6: 01 	sub    DWORD PTR [rip+0x15f3],0x1        # 0x1cf0
  006fd:    	je     0x38f7b
  00703:    	mov    rdi,QWORD PTR [rbp-0x70]
  00707:    	mov    rsi,QWORD PTR [rbp-0x78]
  0070b:    	sub    rsp,0x20
  0070f:    	movq   QWORD PTR [rsp],xmm5
  00714:    	movq   QWORD PTR [rsp+0x8],xmm6
  0071a:    	movq   QWORD PTR [rsp+0x10],xmm7
  00720:    	mov    rdx,rdi
  00723:    	mov    rcx,rsi
  00726:    	mov    rdi,rbx
  00729:    	mov    rsi,r12
  0072c: 34 	movabs rax,0x563437f16ba0
  00736:    	call   rax
  00738:    	movq   xmm5,QWORD PTR [rsp]
  0073d:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00743:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00749:    	add    rsp,0x20
  0074d: 34 	movabs r13,0x5634398538e0
  00757:    	test   rax,rax
  0075a:    	je     0xffff33d7
  00760:    	mov    QWORD PTR [rbp-0x60],rax
:00035 %9 = literal[0.0]
  00764: 00 	movq   xmm2,QWORD PTR [rip+0x1590]        # 0x1cfc
  0076c: 00 	movabs rax,0x8000000000000002
  00776:    	mov    QWORD PTR [rbp-0x70],rax
:00036 _%9 = %7 > %9                        [<INVALID>][<INVALID>]
:00037 condnotbr _%9 =>:00113
  0077a:    	mov    rdi,QWORD PTR [rbp-0x60]
  0077e:    	mov    rsi,QWORD PTR [rbp-0x70]
  00782: 00 	test   rdi,0x1
  00789:    	je     0x38f9d
  0078f: 00 	test   rsi,0x1
  00796:    	je     0x38f9d
  0079c:    	cmp    rdi,rsi
  0079f:    	jle    0x3a2b1
:00038 %9 = %2.call t()                     [<INVALID>]
  007a5: 01 	sub    DWORD PTR [rip+0x1558],0x1        # 0x1d04
  007ac:    	je     0x3900f
  007b2:    	sub    rsp,0x20
  007b6:    	movq   QWORD PTR [rsp],xmm5
  007bb:    	movq   QWORD PTR [rsp+0x8],xmm6
  007c1:    	movq   QWORD PTR [rsp+0x10],xmm7
  007c7:    	mov    rdi,QWORD PTR [rbp-0x38]
  007cb: 34 	movabs rax,0x563437f53600
  007d5:    	call   rax
  007d7:    	mov    r15d,eax
  007da: 00 	cmp    r15d,DWORD PTR [rip+0x152b]        # 0x1d0c
  007e1:    	jne    0x39031
  007e7:    	mov    eax,DWORD PTR [rip+0xffffffffffff57a8]        # 0xffff5f95
  007ed:    	cmp    DWORD PTR [rip+0x1515],eax        # 0x1d08
  007f3:    	jne    0x39031
  007f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00802:    	mov    QWORD PTR [rsp-0x38],rcx
  00807:    	mov    rax,QWORD PTR [rbx]
  0080a:    	lea    rdi,[rsp-0x18]
  0080f:    	mov    QWORD PTR [rdi],rax
  00812:    	mov    QWORD PTR [rbx],rdi
  00815:    	mov    rax,QWORD PTR [rbp-0x38]
  00819:    	mov    QWORD PTR [rsp-0x38],rax
  0081e: 00 	mov    rdi,0x0
  00825: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0082e: 00 	movabs rax,0x0
  00838:    	mov    QWORD PTR [rsp-0x28],rax
  0083d: 00 	movabs r13,0x0
  00847:    	call   0xffff339c
  0084c:    	lea    rdi,[rbp-0x8]
  00850:    	mov    QWORD PTR [rbx],rdi
  00853:    	movq   xmm5,QWORD PTR [rsp]
  00858:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0085e:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00864:    	add    rsp,0x20
  00868:    	test   rax,rax
  0086b:    	je     0x3909d
  00871:    	mov    QWORD PTR [rbp-0x70],rax
:00039 
:00041 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00042 condnotbr _%9 =>:00113
  00875:    	mov    rdi,QWORD PTR [rbp-0x60]
  00879:    	mov    rsi,QWORD PTR [rbp-0x70]
  0087d: 00 	test   rdi,0x1
  00884:    	je     0x390ac
  0088a: 00 	test   rsi,0x1
  00891:    	je     0x390ac
  00897:    	cmp    rdi,rsi
  0089a:    	jge    0x3a2e4
:00043 _ = %2.call t=(%7; 1)                [<INVALID>]
  008a0: 01 	sub    DWORD PTR [rip+0x1469],0x1        # 0x1d10
  008a7:    	je     0x3911e
  008ad:    	sub    rsp,0x20
  008b1:    	movq   QWORD PTR [rsp],xmm5
  008b6:    	movq   QWORD PTR [rsp+0x8],xmm6
  008bc:    	movq   QWORD PTR [rsp+0x10],xmm7
  008c2:    	mov    rdi,QWORD PTR [rbp-0x38]
  008c6: 34 	movabs rax,0x563437f53600
  008d0:    	call   rax
  008d2:    	mov    r15d,eax
  008d5: 00 	cmp    r15d,DWORD PTR [rip+0x143c]        # 0x1d18
  008dc:    	jne    0x39140
  008e2:    	mov    eax,DWORD PTR [rip+0xffffffffffff56ad]        # 0xffff5f95
  008e8:    	cmp    DWORD PTR [rip+0x1426],eax        # 0x1d14
  008ee:    	jne    0x39140
  008f4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008fd:    	mov    QWORD PTR [rsp-0x38],rcx
  00902:    	mov    rax,QWORD PTR [rbx]
  00905:    	lea    rdi,[rsp-0x18]
  0090a:    	mov    QWORD PTR [rdi],rax
  0090d:    	mov    QWORD PTR [rbx],rdi
  00910:    	mov    rax,QWORD PTR [rbp-0x38]
  00914:    	mov    QWORD PTR [rsp-0x38],rax
  00919: 00 	mov    rdi,0x1
  00920:    	mov    rax,QWORD PTR [rbp-0x60]
  00924:    	mov    QWORD PTR [rsp-0x40],rax
  00929: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00932: 00 	movabs rax,0x0
  0093c:    	mov    QWORD PTR [rsp-0x28],rax
  00941: 00 	movabs r13,0x0
  0094b:    	call   0xffff339c
  00950:    	lea    rdi,[rbp-0x8]
  00954:    	mov    QWORD PTR [rbx],rdi
  00957:    	movq   xmm5,QWORD PTR [rsp]
  0095c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00962:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00968:    	add    rsp,0x20
  0096c:    	test   rax,rax
  0096f:    	je     0x391ac
:00044 
:00046 %9 = literal[true]
  00975: 00 	mov    rax,0x1c
  0097c:    	mov    QWORD PTR [rbp-0x70],rax
:00047 _ = %2.call hit=(%9; 1)              [<INVALID>]
  00980: 01 	sub    DWORD PTR [rip+0x1395],0x1        # 0x1d1c
  00987:    	je     0x391e4
  0098d:    	sub    rsp,0x20
  00991:    	movq   QWORD PTR [rsp],xmm5
  00996:    	movq   QWORD PTR [rsp+0x8],xmm6
  0099c:    	movq   QWORD PTR [rsp+0x10],xmm7
  009a2:    	mov    rdi,QWORD PTR [rbp-0x38]
  009a6: 34 	movabs rax,0x563437f53600
  009b0:    	call   rax
  009b2:    	mov    r15d,eax
  009b5: 00 	cmp    r15d,DWORD PTR [rip+0x1368]        # 0x1d24
  009bc:    	jne    0x39206
  009c2:    	mov    eax,DWORD PTR [rip+0xffffffffffff55cd]        # 0xffff5f95
  009c8:    	cmp    DWORD PTR [rip+0x1352],eax        # 0x1d20
  009ce:    	jne    0x39206
  009d4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009dd:    	mov    QWORD PTR [rsp-0x38],rcx
  009e2:    	mov    rax,QWORD PTR [rbx]
  009e5:    	lea    rdi,[rsp-0x18]
  009ea:    	mov    QWORD PTR [rdi],rax
  009ed:    	mov    QWORD PTR [rbx],rdi
  009f0:    	mov    rax,QWORD PTR [rbp-0x38]
  009f4:    	mov    QWORD PTR [rsp-0x38],rax
  009f9: 00 	mov    rdi,0x1
  00a00:    	mov    rax,QWORD PTR [rbp-0x70]
  00a04:    	mov    QWORD PTR [rsp-0x40],rax
  00a09: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a12: 00 	movabs rax,0x0
  00a1c:    	mov    QWORD PTR [rsp-0x28],rax
  00a21: 00 	movabs r13,0x0
  00a2b:    	call   0xffff339c
  00a30:    	lea    rdi,[rbp-0x8]
  00a34:    	mov    QWORD PTR [rbx],rdi
  00a37:    	movq   xmm5,QWORD PTR [rsp]
  00a3c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00a42:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00a48:    	add    rsp,0x20
  00a4c:    	test   rax,rax
  00a4f:    	je     0x39272
:00048 
:00050 %10 = const[Vec]                     [<INVALID>]
  00a55: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5540]        # 0xffff5f9c
  00a5c: 00 	cmp    rax,QWORD PTR [rip+0x12d9]        # 0x1d3c
  00a63:    	jne    0x39281
  00a69: 00 	mov    rax,QWORD PTR [rip+0x12bc]        # 0x1d2c
  00a70:    	mov    QWORD PTR [rbp-0x78],rax
:00051 %12 = %1.call org()                  [<INVALID>]
  00a74: 01 	sub    DWORD PTR [rip+0x12c9],0x1        # 0x1d44
  00a7b:    	je     0x3931a
  00a81:    	sub    rsp,0x20
  00a85:    	movq   QWORD PTR [rsp],xmm5
  00a8a:    	movq   QWORD PTR [rsp+0x8],xmm6
  00a90:    	movq   QWORD PTR [rsp+0x10],xmm7
  00a96:    	mov    rdi,QWORD PTR [rbp-0x30]
  00a9a: 34 	movabs rax,0x563437f53600
  00aa4:    	call   rax
  00aa6:    	mov    r15d,eax
  00aa9: 00 	cmp    r15d,DWORD PTR [rip+0x129c]        # 0x1d4c
  00ab0:    	jne    0x3933c
  00ab6:    	mov    eax,DWORD PTR [rip+0xffffffffffff54d9]        # 0xffff5f95
  00abc:    	cmp    DWORD PTR [rip+0x1286],eax        # 0x1d48
  00ac2:    	jne    0x3933c
  00ac8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ad1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ad6:    	mov    rax,QWORD PTR [rbx]
  00ad9:    	lea    rdi,[rsp-0x18]
  00ade:    	mov    QWORD PTR [rdi],rax
  00ae1:    	mov    QWORD PTR [rbx],rdi
  00ae4:    	mov    rax,QWORD PTR [rbp-0x30]
  00ae8:    	mov    QWORD PTR [rsp-0x38],rax
  00aed: 00 	mov    rdi,0x0
  00af4: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00afd: 00 	movabs rax,0x0
  00b07:    	mov    QWORD PTR [rsp-0x28],rax
  00b0c: 00 	movabs r13,0x0
  00b16:    	call   0xffff339c
  00b1b:    	lea    rdi,[rbp-0x8]
  00b1f:    	mov    QWORD PTR [rbx],rdi
  00b22:    	movq   xmm5,QWORD PTR [rsp]
  00b27:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00b2d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00b33:    	add    rsp,0x20
  00b37:    	test   rax,rax
  00b3a:    	je     0x393a8
  00b40: ff 	mov    QWORD PTR [rbp-0x88],rax
:00052 
:00054 %11 = %12.call x()                   [<INVALID>]
  00b47: 01 	sub    DWORD PTR [rip+0x1202],0x1        # 0x1d50
  00b4e:    	je     0x393e0
  00b54:    	sub    rsp,0x20
  00b58:    	movq   QWORD PTR [rsp],xmm5
  00b5d:    	movq   QWORD PTR [rsp+0x8],xmm6
  00b63:    	movq   QWORD PTR [rsp+0x10],xmm7
  00b69: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00b70: 34 	movabs rax,0x563437f53600
  00b7a:    	call   rax
  00b7c:    	mov    r15d,eax
  00b7f: 00 	cmp    r15d,DWORD PTR [rip+0x11d2]        # 0x1d58
  00b86:    	jne    0x39402
  00b8c:    	mov    eax,DWORD PTR [rip+0xffffffffffff5403]        # 0xffff5f95
  00b92:    	cmp    DWORD PTR [rip+0x11bc],eax        # 0x1d54
  00b98:    	jne    0x39402
  00b9e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ba7:    	mov    QWORD PTR [rsp-0x38],rcx
  00bac:    	mov    rax,QWORD PTR [rbx]
  00baf:    	lea    rdi,[rsp-0x18]
  00bb4:    	mov    QWORD PTR [rdi],rax
  00bb7:    	mov    QWORD PTR [rbx],rdi
  00bba: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00bc1:    	mov    QWORD PTR [rsp-0x38],rax
  00bc6: 00 	mov    rdi,0x0
  00bcd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00bd6: 00 	movabs rax,0x0
  00be0:    	mov    QWORD PTR [rsp-0x28],rax
  00be5: 00 	movabs r13,0x0
  00bef:    	call   0xffff339c
  00bf4:    	lea    rdi,[rbp-0x8]
  00bf8:    	mov    QWORD PTR [rbx],rdi
  00bfb:    	movq   xmm5,QWORD PTR [rsp]
  00c00:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00c06:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00c0c:    	add    rsp,0x20
  00c10:    	test   rax,rax
  00c13:    	je     0x39471
  00c19:    	mov    QWORD PTR [rbp-0x80],rax
:00055 
:00057 %13 = %1.call dir()                  [<INVALID>]
  00c1d: 01 	sub    DWORD PTR [rip+0x1138],0x1        # 0x1d5c
  00c24:    	je     0x394a9
  00c2a:    	sub    rsp,0x20
  00c2e:    	movq   QWORD PTR [rsp],xmm5
  00c33:    	movq   QWORD PTR [rsp+0x8],xmm6
  00c39:    	movq   QWORD PTR [rsp+0x10],xmm7
  00c3f:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c43: 34 	movabs rax,0x563437f53600
  00c4d:    	call   rax
  00c4f:    	mov    r15d,eax
  00c52: 00 	cmp    r15d,DWORD PTR [rip+0x110b]        # 0x1d64
  00c59:    	jne    0x394cb
  00c5f:    	mov    eax,DWORD PTR [rip+0xffffffffffff5330]        # 0xffff5f95
  00c65:    	cmp    DWORD PTR [rip+0x10f5],eax        # 0x1d60
  00c6b:    	jne    0x394cb
  00c71: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c7a:    	mov    QWORD PTR [rsp-0x38],rcx
  00c7f:    	mov    rax,QWORD PTR [rbx]
  00c82:    	lea    rdi,[rsp-0x18]
  00c87:    	mov    QWORD PTR [rdi],rax
  00c8a:    	mov    QWORD PTR [rbx],rdi
  00c8d:    	mov    rax,QWORD PTR [rbp-0x30]
  00c91:    	mov    QWORD PTR [rsp-0x38],rax
  00c96: 00 	mov    rdi,0x0
  00c9d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ca6: 00 	movabs rax,0x0
  00cb0:    	mov    QWORD PTR [rsp-0x28],rax
  00cb5: 00 	movabs r13,0x0
  00cbf:    	call   0xffff339c
  00cc4:    	lea    rdi,[rbp-0x8]
  00cc8:    	mov    QWORD PTR [rbx],rdi
  00ccb:    	movq   xmm5,QWORD PTR [rsp]
  00cd0:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00cd6:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00cdc:    	add    rsp,0x20
  00ce0:    	test   rax,rax
  00ce3:    	je     0x39537
  00ce9: ff 	mov    QWORD PTR [rbp-0x90],rax
:00058 
:00060 %12 = %13.call x()                   [<INVALID>]
  00cf0: 01 	sub    DWORD PTR [rip+0x1071],0x1        # 0x1d68
  00cf7:    	je     0x3956f
  00cfd:    	sub    rsp,0x20
  00d01:    	movq   QWORD PTR [rsp],xmm5
  00d06:    	movq   QWORD PTR [rsp+0x8],xmm6
  00d0c:    	movq   QWORD PTR [rsp+0x10],xmm7
  00d12: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00d19: 34 	movabs rax,0x563437f53600
  00d23:    	call   rax
  00d25:    	mov    r15d,eax
  00d28: 00 	cmp    r15d,DWORD PTR [rip+0x1041]        # 0x1d70
  00d2f:    	jne    0x39591
  00d35:    	mov    eax,DWORD PTR [rip+0xffffffffffff525a]        # 0xffff5f95
  00d3b:    	cmp    DWORD PTR [rip+0x102b],eax        # 0x1d6c
  00d41:    	jne    0x39591
  00d47: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d50:    	mov    QWORD PTR [rsp-0x38],rcx
  00d55:    	mov    rax,QWORD PTR [rbx]
  00d58:    	lea    rdi,[rsp-0x18]
  00d5d:    	mov    QWORD PTR [rdi],rax
  00d60:    	mov    QWORD PTR [rbx],rdi
  00d63: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00d6a:    	mov    QWORD PTR [rsp-0x38],rax
  00d6f: 00 	mov    rdi,0x0
  00d76: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d7f: 00 	movabs rax,0x0
  00d89:    	mov    QWORD PTR [rsp-0x28],rax
  00d8e: 00 	movabs r13,0x0
  00d98:    	call   0xffff339c
  00d9d:    	lea    rdi,[rbp-0x8]
  00da1:    	mov    QWORD PTR [rbx],rdi
  00da4:    	movq   xmm5,QWORD PTR [rsp]
  00da9:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00daf:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00db5:    	add    rsp,0x20
  00db9:    	test   rax,rax
  00dbc:    	je     0x39600
  00dc2: ff 	mov    QWORD PTR [rbp-0x88],rax
:00061 
:00063 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00dc9: 01 	sub    DWORD PTR [rip+0xfa4],0x1        # 0x1d74
  00dd0:    	je     0x39638
  00dd6: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00ddd:    	mov    rsi,QWORD PTR [rbp-0x60]
  00de1:    	sub    rsp,0x20
  00de5:    	movq   QWORD PTR [rsp],xmm5
  00dea:    	movq   QWORD PTR [rsp+0x8],xmm6
  00df0:    	movq   QWORD PTR [rsp+0x10],xmm7
  00df6:    	mov    rdx,rdi
  00df9:    	mov    rcx,rsi
  00dfc:    	mov    rdi,rbx
  00dff:    	mov    rsi,r12
  00e02: 34 	movabs rax,0x563437f17b80
  00e0c:    	call   rax
  00e0e:    	movq   xmm5,QWORD PTR [rsp]
  00e13:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e19:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e1f:    	add    rsp,0x20
  00e23: 34 	movabs r13,0x563439853ab0
  00e2d:    	test   rax,rax
  00e30:    	je     0xffff33d7
  00e36: ff 	mov    QWORD PTR [rbp-0x88],rax
:00064 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00e3d: 01 	sub    DWORD PTR [rip+0xf34],0x1        # 0x1d78
  00e44:    	je     0x39683
  00e4a:    	mov    rdi,QWORD PTR [rbp-0x80]
  00e4e: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00e55:    	sub    rsp,0x20
  00e59:    	movq   QWORD PTR [rsp],xmm5
  00e5e:    	movq   QWORD PTR [rsp+0x8],xmm6
  00e64:    	movq   QWORD PTR [rsp+0x10],xmm7
  00e6a:    	mov    rdx,rdi
  00e6d:    	mov    rcx,rsi
  00e70:    	mov    rdi,rbx
  00e73:    	mov    rsi,r12
  00e76: 34 	movabs rax,0x563437f15c00
  00e80:    	call   rax
  00e82:    	movq   xmm5,QWORD PTR [rsp]
  00e87:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e8d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e93:    	add    rsp,0x20
  00e97: 34 	movabs r13,0x563439853ac0
  00ea1:    	test   rax,rax
  00ea4:    	je     0xffff33d7
  00eaa:    	mov    QWORD PTR [rbp-0x80],rax
:00065 %13 = %1.call org()                  [<INVALID>]
  00eae: 01 	sub    DWORD PTR [rip+0xec7],0x1        # 0x1d7c
  00eb5:    	je     0x396ce
  00ebb:    	sub    rsp,0x20
  00ebf:    	movq   QWORD PTR [rsp],xmm5
  00ec4:    	movq   QWORD PTR [rsp+0x8],xmm6
  00eca:    	movq   QWORD PTR [rsp+0x10],xmm7
  00ed0:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ed4: 34 	movabs rax,0x563437f53600
  00ede:    	call   rax
  00ee0:    	mov    r15d,eax
  00ee3: 00 	cmp    r15d,DWORD PTR [rip+0xe9a]        # 0x1d84
  00eea:    	jne    0x396f0
  00ef0:    	mov    eax,DWORD PTR [rip+0xffffffffffff509f]        # 0xffff5f95
  00ef6:    	cmp    DWORD PTR [rip+0xe84],eax        # 0x1d80
  00efc:    	jne    0x396f0
  00f02: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f0b:    	mov    QWORD PTR [rsp-0x38],rcx
  00f10:    	mov    rax,QWORD PTR [rbx]
  00f13:    	lea    rdi,[rsp-0x18]
  00f18:    	mov    QWORD PTR [rdi],rax
  00f1b:    	mov    QWORD PTR [rbx],rdi
  00f1e:    	mov    rax,QWORD PTR [rbp-0x30]
  00f22:    	mov    QWORD PTR [rsp-0x38],rax
  00f27: 00 	mov    rdi,0x0
  00f2e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f37: 00 	movabs rax,0x0
  00f41:    	mov    QWORD PTR [rsp-0x28],rax
  00f46: 00 	movabs r13,0x0
  00f50:    	call   0xffff339c
  00f55:    	lea    rdi,[rbp-0x8]
  00f59:    	mov    QWORD PTR [rbx],rdi
  00f5c:    	movq   xmm5,QWORD PTR [rsp]
  00f61:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00f67:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00f6d:    	add    rsp,0x20
  00f71:    	test   rax,rax
  00f74:    	je     0x3975c
  00f7a: ff 	mov    QWORD PTR [rbp-0x90],rax
:00066 
:00068 %12 = %13.call y()                   [<INVALID>]
  00f81: 01 	sub    DWORD PTR [rip+0xe00],0x1        # 0x1d88
  00f88:    	je     0x39794
  00f8e:    	sub    rsp,0x20
  00f92:    	movq   QWORD PTR [rsp],xmm5
  00f97:    	movq   QWORD PTR [rsp+0x8],xmm6
  00f9d:    	movq   QWORD PTR [rsp+0x10],xmm7
  00fa3: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00faa: 34 	movabs rax,0x563437f53600
  00fb4:    	call   rax
  00fb6:    	mov    r15d,eax
  00fb9: 00 	cmp    r15d,DWORD PTR [rip+0xdd0]        # 0x1d90
  00fc0:    	jne    0x397b6
  00fc6:    	mov    eax,DWORD PTR [rip+0xffffffffffff4fc9]        # 0xffff5f95
  00fcc:    	cmp    DWORD PTR [rip+0xdba],eax        # 0x1d8c
  00fd2:    	jne    0x397b6
  00fd8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fe1:    	mov    QWORD PTR [rsp-0x38],rcx
  00fe6:    	mov    rax,QWORD PTR [rbx]
  00fe9:    	lea    rdi,[rsp-0x18]
  00fee:    	mov    QWORD PTR [rdi],rax
  00ff1:    	mov    QWORD PTR [rbx],rdi
  00ff4: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00ffb:    	mov    QWORD PTR [rsp-0x38],rax
  01000: 00 	mov    rdi,0x0
  01007: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01010: 00 	movabs rax,0x0
  0101a:    	mov    QWORD PTR [rsp-0x28],rax
  0101f: 00 	movabs r13,0x0
  01029:    	call   0xffff339c
  0102e:    	lea    rdi,[rbp-0x8]
  01032:    	mov    QWORD PTR [rbx],rdi
  01035:    	movq   xmm5,QWORD PTR [rsp]
  0103a:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01040:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01046:    	add    rsp,0x20
  0104a:    	test   rax,rax
  0104d:    	je     0x39825
  01053: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = %1.call dir()                  [<INVALID>]
  0105a: 01 	sub    DWORD PTR [rip+0xd33],0x1        # 0x1d94
  01061:    	je     0x3985d
  01067:    	sub    rsp,0x20
  0106b:    	movq   QWORD PTR [rsp],xmm5
  01070:    	movq   QWORD PTR [rsp+0x8],xmm6
  01076:    	movq   QWORD PTR [rsp+0x10],xmm7
  0107c:    	mov    rdi,QWORD PTR [rbp-0x30]
  01080: 34 	movabs rax,0x563437f53600
  0108a:    	call   rax
  0108c:    	mov    r15d,eax
  0108f: 00 	cmp    r15d,DWORD PTR [rip+0xd06]        # 0x1d9c
  01096:    	jne    0x3987f
  0109c:    	mov    eax,DWORD PTR [rip+0xffffffffffff4ef3]        # 0xffff5f95
  010a2:    	cmp    DWORD PTR [rip+0xcf0],eax        # 0x1d98
  010a8:    	jne    0x3987f
  010ae: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010b7:    	mov    QWORD PTR [rsp-0x38],rcx
  010bc:    	mov    rax,QWORD PTR [rbx]
  010bf:    	lea    rdi,[rsp-0x18]
  010c4:    	mov    QWORD PTR [rdi],rax
  010c7:    	mov    QWORD PTR [rbx],rdi
  010ca:    	mov    rax,QWORD PTR [rbp-0x30]
  010ce:    	mov    QWORD PTR [rsp-0x38],rax
  010d3: 00 	mov    rdi,0x0
  010da: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010e3: 00 	movabs rax,0x0
  010ed:    	mov    QWORD PTR [rsp-0x28],rax
  010f2: 00 	movabs r13,0x0
  010fc:    	call   0xffff339c
  01101:    	lea    rdi,[rbp-0x8]
  01105:    	mov    QWORD PTR [rbx],rdi
  01108:    	movq   xmm5,QWORD PTR [rsp]
  0110d:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01113:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01119:    	add    rsp,0x20
  0111d:    	test   rax,rax
  01120:    	je     0x398eb
  01126: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 
:00074 %13 = %14.call y()                   [<INVALID>]
  0112d: 01 	sub    DWORD PTR [rip+0xc6c],0x1        # 0x1da0
  01134:    	je     0x39923
  0113a:    	sub    rsp,0x20
  0113e:    	movq   QWORD PTR [rsp],xmm5
  01143:    	movq   QWORD PTR [rsp+0x8],xmm6
  01149:    	movq   QWORD PTR [rsp+0x10],xmm7
  0114f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01156: 34 	movabs rax,0x563437f53600
  01160:    	call   rax
  01162:    	mov    r15d,eax
  01165: 00 	cmp    r15d,DWORD PTR [rip+0xc3c]        # 0x1da8
  0116c:    	jne    0x39945
  01172:    	mov    eax,DWORD PTR [rip+0xffffffffffff4e1d]        # 0xffff5f95
  01178:    	cmp    DWORD PTR [rip+0xc26],eax        # 0x1da4
  0117e:    	jne    0x39945
  01184: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0118d:    	mov    QWORD PTR [rsp-0x38],rcx
  01192:    	mov    rax,QWORD PTR [rbx]
  01195:    	lea    rdi,[rsp-0x18]
  0119a:    	mov    QWORD PTR [rdi],rax
  0119d:    	mov    QWORD PTR [rbx],rdi
  011a0: ff 	mov    rax,QWORD PTR [rbp-0x98]
  011a7:    	mov    QWORD PTR [rsp-0x38],rax
  011ac: 00 	mov    rdi,0x0
  011b3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011bc: 00 	movabs rax,0x0
  011c6:    	mov    QWORD PTR [rsp-0x28],rax
  011cb: 00 	movabs r13,0x0
  011d5:    	call   0xffff339c
  011da:    	lea    rdi,[rbp-0x8]
  011de:    	mov    QWORD PTR [rbx],rdi
  011e1:    	movq   xmm5,QWORD PTR [rsp]
  011e6:    	movq   xmm6,QWORD PTR [rsp+0x8]
  011ec:    	movq   xmm7,QWORD PTR [rsp+0x10]
  011f2:    	add    rsp,0x20
  011f6:    	test   rax,rax
  011f9:    	je     0x399b4
  011ff: ff 	mov    QWORD PTR [rbp-0x90],rax
:00075 
:00077 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  01206: 01 	sub    DWORD PTR [rip+0xb9f],0x1        # 0x1dac
  0120d:    	je     0x399ec
  01213: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0121a:    	mov    rsi,QWORD PTR [rbp-0x60]
  0121e:    	sub    rsp,0x20
  01222:    	movq   QWORD PTR [rsp],xmm5
  01227:    	movq   QWORD PTR [rsp+0x8],xmm6
  0122d:    	movq   QWORD PTR [rsp+0x10],xmm7
  01233:    	mov    rdx,rdi
  01236:    	mov    rcx,rsi
  01239:    	mov    rdi,rbx
  0123c:    	mov    rsi,r12
  0123f: 34 	movabs rax,0x563437f17b80
  01249:    	call   rax
  0124b:    	movq   xmm5,QWORD PTR [rsp]
  01250:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01256:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0125c:    	add    rsp,0x20
  01260: 34 	movabs r13,0x563439853b90
  0126a:    	test   rax,rax
  0126d:    	je     0xffff33d7
  01273: ff 	mov    QWORD PTR [rbp-0x90],rax
:00078 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  0127a: 01 	sub    DWORD PTR [rip+0xb2f],0x1        # 0x1db0
  01281:    	je     0x39a37
  01287: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0128e: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  01295:    	sub    rsp,0x20
  01299:    	movq   QWORD PTR [rsp],xmm5
  0129e:    	movq   QWORD PTR [rsp+0x8],xmm6
  012a4:    	movq   QWORD PTR [rsp+0x10],xmm7
  012aa:    	mov    rdx,rdi
  012ad:    	mov    rcx,rsi
  012b0:    	mov    rdi,rbx
  012b3:    	mov    rsi,r12
  012b6: 34 	movabs rax,0x563437f15c00
  012c0:    	call   rax
  012c2:    	movq   xmm5,QWORD PTR [rsp]
  012c7:    	movq   xmm6,QWORD PTR [rsp+0x8]
  012cd:    	movq   xmm7,QWORD PTR [rsp+0x10]
  012d3:    	add    rsp,0x20
  012d7: 34 	movabs r13,0x563439853ba0
  012e1:    	test   rax,rax
  012e4:    	je     0xffff33d7
  012ea: ff 	mov    QWORD PTR [rbp-0x88],rax
:00079 %14 = %1.call org()                  [<INVALID>]
  012f1: 01 	sub    DWORD PTR [rip+0xabc],0x1        # 0x1db4
  012f8:    	je     0x39a82
  012fe:    	sub    rsp,0x20
  01302:    	movq   QWORD PTR [rsp],xmm5
  01307:    	movq   QWORD PTR [rsp+0x8],xmm6
  0130d:    	movq   QWORD PTR [rsp+0x10],xmm7
  01313:    	mov    rdi,QWORD PTR [rbp-0x30]
  01317: 34 	movabs rax,0x563437f53600
  01321:    	call   rax
  01323:    	mov    r15d,eax
  01326: 00 	cmp    r15d,DWORD PTR [rip+0xa8f]        # 0x1dbc
  0132d:    	jne    0x39aa4
  01333:    	mov    eax,DWORD PTR [rip+0xffffffffffff4c5c]        # 0xffff5f95
  01339:    	cmp    DWORD PTR [rip+0xa79],eax        # 0x1db8
  0133f:    	jne    0x39aa4
  01345: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0134e:    	mov    QWORD PTR [rsp-0x38],rcx
  01353:    	mov    rax,QWORD PTR [rbx]
  01356:    	lea    rdi,[rsp-0x18]
  0135b:    	mov    QWORD PTR [rdi],rax
  0135e:    	mov    QWORD PTR [rbx],rdi
  01361:    	mov    rax,QWORD PTR [rbp-0x30]
  01365:    	mov    QWORD PTR [rsp-0x38],rax
  0136a: 00 	mov    rdi,0x0
  01371: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0137a: 00 	movabs rax,0x0
  01384:    	mov    QWORD PTR [rsp-0x28],rax
  01389: 00 	movabs r13,0x0
  01393:    	call   0xffff339c
  01398:    	lea    rdi,[rbp-0x8]
  0139c:    	mov    QWORD PTR [rbx],rdi
  0139f:    	movq   xmm5,QWORD PTR [rsp]
  013a4:    	movq   xmm6,QWORD PTR [rsp+0x8]
  013aa:    	movq   xmm7,QWORD PTR [rsp+0x10]
  013b0:    	add    rsp,0x20
  013b4:    	test   rax,rax
  013b7:    	je     0x39b10
  013bd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 
:00082 %13 = %14.call z()                   [<INVALID>]
  013c4: 01 	sub    DWORD PTR [rip+0x9f5],0x1        # 0x1dc0
  013cb:    	je     0x39b48
  013d1:    	sub    rsp,0x20
  013d5:    	movq   QWORD PTR [rsp],xmm5
  013da:    	movq   QWORD PTR [rsp+0x8],xmm6
  013e0:    	movq   QWORD PTR [rsp+0x10],xmm7
  013e6: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  013ed: 34 	movabs rax,0x563437f53600
  013f7:    	call   rax
  013f9:    	mov    r15d,eax
  013fc: 00 	cmp    r15d,DWORD PTR [rip+0x9c5]        # 0x1dc8
  01403:    	jne    0x39b6a
  01409:    	mov    eax,DWORD PTR [rip+0xffffffffffff4b86]        # 0xffff5f95
  0140f:    	cmp    DWORD PTR [rip+0x9af],eax        # 0x1dc4
  01415:    	jne    0x39b6a
  0141b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01424:    	mov    QWORD PTR [rsp-0x38],rcx
  01429:    	mov    rax,QWORD PTR [rbx]
  0142c:    	lea    rdi,[rsp-0x18]
  01431:    	mov    QWORD PTR [rdi],rax
  01434:    	mov    QWORD PTR [rbx],rdi
  01437: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0143e:    	mov    QWORD PTR [rsp-0x38],rax
  01443: 00 	mov    rdi,0x0
  0144a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01453: 00 	movabs rax,0x0
  0145d:    	mov    QWORD PTR [rsp-0x28],rax
  01462: 00 	movabs r13,0x0
  0146c:    	call   0xffff339c
  01471:    	lea    rdi,[rbp-0x8]
  01475:    	mov    QWORD PTR [rbx],rdi
  01478:    	movq   xmm5,QWORD PTR [rsp]
  0147d:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01483:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01489:    	add    rsp,0x20
  0148d:    	test   rax,rax
  01490:    	je     0x39bd9
  01496: ff 	mov    QWORD PTR [rbp-0x90],rax
:00083 
:00085 %15 = %1.call dir()                  [<INVALID>]
  0149d: 01 	sub    DWORD PTR [rip+0x928],0x1        # 0x1dcc
  014a4:    	je     0x39c11
  014aa:    	sub    rsp,0x20
  014ae:    	movq   QWORD PTR [rsp],xmm5
  014b3:    	movq   QWORD PTR [rsp+0x8],xmm6
  014b9:    	movq   QWORD PTR [rsp+0x10],xmm7
  014bf:    	mov    rdi,QWORD PTR [rbp-0x30]
  014c3: 34 	movabs rax,0x563437f53600
  014cd:    	call   rax
  014cf:    	mov    r15d,eax
  014d2: 00 	cmp    r15d,DWORD PTR [rip+0x8fb]        # 0x1dd4
  014d9:    	jne    0x39c33
  014df:    	mov    eax,DWORD PTR [rip+0xffffffffffff4ab0]        # 0xffff5f95
  014e5:    	cmp    DWORD PTR [rip+0x8e5],eax        # 0x1dd0
  014eb:    	jne    0x39c33
  014f1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014fa:    	mov    QWORD PTR [rsp-0x38],rcx
  014ff:    	mov    rax,QWORD PTR [rbx]
  01502:    	lea    rdi,[rsp-0x18]
  01507:    	mov    QWORD PTR [rdi],rax
  0150a:    	mov    QWORD PTR [rbx],rdi
  0150d:    	mov    rax,QWORD PTR [rbp-0x30]
  01511:    	mov    QWORD PTR [rsp-0x38],rax
  01516: 00 	mov    rdi,0x0
  0151d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01526: 00 	movabs rax,0x0
  01530:    	mov    QWORD PTR [rsp-0x28],rax
  01535: 00 	movabs r13,0x0
  0153f:    	call   0xffff339c
  01544:    	lea    rdi,[rbp-0x8]
  01548:    	mov    QWORD PTR [rbx],rdi
  0154b:    	movq   xmm5,QWORD PTR [rsp]
  01550:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01556:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0155c:    	add    rsp,0x20
  01560:    	test   rax,rax
  01563:    	je     0x39c9f
  01569: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00086 
:00088 %14 = %15.call z()                   [<INVALID>]
  01570: 01 	sub    DWORD PTR [rip+0x861],0x1        # 0x1dd8
  01577:    	je     0x39cd7
  0157d:    	sub    rsp,0x20
  01581:    	movq   QWORD PTR [rsp],xmm5
  01586:    	movq   QWORD PTR [rsp+0x8],xmm6
  0158c:    	movq   QWORD PTR [rsp+0x10],xmm7
  01592: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01599: 34 	movabs rax,0x563437f53600
  015a3:    	call   rax
  015a5:    	mov    r15d,eax
  015a8: 00 	cmp    r15d,DWORD PTR [rip+0x831]        # 0x1de0
  015af:    	jne    0x39cf9
  015b5:    	mov    eax,DWORD PTR [rip+0xffffffffffff49da]        # 0xffff5f95
  015bb:    	cmp    DWORD PTR [rip+0x81b],eax        # 0x1ddc
  015c1:    	jne    0x39cf9
  015c7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015d0:    	mov    QWORD PTR [rsp-0x38],rcx
  015d5:    	mov    rax,QWORD PTR [rbx]
  015d8:    	lea    rdi,[rsp-0x18]
  015dd:    	mov    QWORD PTR [rdi],rax
  015e0:    	mov    QWORD PTR [rbx],rdi
  015e3: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  015ea:    	mov    QWORD PTR [rsp-0x38],rax
  015ef: 00 	mov    rdi,0x0
  015f6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015ff: 00 	movabs rax,0x0
  01609:    	mov    QWORD PTR [rsp-0x28],rax
  0160e: 00 	movabs r13,0x0
  01618:    	call   0xffff339c
  0161d:    	lea    rdi,[rbp-0x8]
  01621:    	mov    QWORD PTR [rbx],rdi
  01624:    	movq   xmm5,QWORD PTR [rsp]
  01629:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0162f:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01635:    	add    rsp,0x20
  01639:    	test   rax,rax
  0163c:    	je     0x39d68
  01642: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 
:00091 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01649: 01 	sub    DWORD PTR [rip+0x794],0x1        # 0x1de4
  01650:    	je     0x39da0
  01656: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0165d:    	mov    rsi,QWORD PTR [rbp-0x60]
  01661:    	sub    rsp,0x20
  01665:    	movq   QWORD PTR [rsp],xmm5
  0166a:    	movq   QWORD PTR [rsp+0x8],xmm6
  01670:    	movq   QWORD PTR [rsp+0x10],xmm7
  01676:    	mov    rdx,rdi
  01679:    	mov    rcx,rsi
  0167c:    	mov    rdi,rbx
  0167f:    	mov    rsi,r12
  01682: 34 	movabs rax,0x563437f17b80
  0168c:    	call   rax
  0168e:    	movq   xmm5,QWORD PTR [rsp]
  01693:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01699:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0169f:    	add    rsp,0x20
  016a3: 34 	movabs r13,0x563439853c70
  016ad:    	test   rax,rax
  016b0:    	je     0xffff33d7
  016b6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00092 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  016bd: 01 	sub    DWORD PTR [rip+0x724],0x1        # 0x1de8
  016c4:    	je     0x39deb
  016ca: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  016d1: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  016d8:    	sub    rsp,0x20
  016dc:    	movq   QWORD PTR [rsp],xmm5
  016e1:    	movq   QWORD PTR [rsp+0x8],xmm6
  016e7:    	movq   QWORD PTR [rsp+0x10],xmm7
  016ed:    	mov    rdx,rdi
  016f0:    	mov    rcx,rsi
  016f3:    	mov    rdi,rbx
  016f6:    	mov    rsi,r12
  016f9: 34 	movabs rax,0x563437f15c00
  01703:    	call   rax
  01705:    	movq   xmm5,QWORD PTR [rsp]
  0170a:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01710:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01716:    	add    rsp,0x20
  0171a: 34 	movabs r13,0x563439853c80
  01724:    	test   rax,rax
  01727:    	je     0xffff33d7
  0172d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00093 %9 = %10.call new(%11; 3)            [<INVALID>]
  01734: 01 	sub    DWORD PTR [rip+0x6b1],0x1        # 0x1dec
  0173b:    	je     0x39e36
  01741:    	sub    rsp,0x20
  01745:    	movq   QWORD PTR [rsp],xmm5
  0174a:    	movq   QWORD PTR [rsp+0x8],xmm6
  01750:    	movq   QWORD PTR [rsp+0x10],xmm7
  01756:    	mov    rdi,QWORD PTR [rbp-0x78]
  0175a: 34 	movabs rax,0x563437f53600
  01764:    	call   rax
  01766:    	mov    r15d,eax
  01769: 00 	cmp    r15d,DWORD PTR [rip+0x684]        # 0x1df4
  01770:    	jne    0x39e58
  01776:    	mov    eax,DWORD PTR [rip+0xffffffffffff4819]        # 0xffff5f95
  0177c:    	cmp    DWORD PTR [rip+0x66e],eax        # 0x1df0
  01782:    	jne    0x39e58
  01788: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01791:    	mov    QWORD PTR [rsp-0x38],rcx
  01796:    	mov    rax,QWORD PTR [rbx]
  01799:    	lea    rdi,[rsp-0x18]
  0179e:    	mov    QWORD PTR [rdi],rax
  017a1:    	mov    QWORD PTR [rbx],rdi
  017a4:    	mov    rax,QWORD PTR [rbp-0x78]
  017a8:    	mov    QWORD PTR [rsp-0x38],rax
  017ad: 00 	mov    rdi,0x3
  017b4:    	mov    rax,QWORD PTR [rbp-0x80]
  017b8:    	mov    QWORD PTR [rsp-0x40],rax
  017bd: ff 	mov    rax,QWORD PTR [rbp-0x88]
  017c4:    	mov    QWORD PTR [rsp-0x48],rax
  017c9: ff 	mov    rax,QWORD PTR [rbp-0x90]
  017d0:    	mov    QWORD PTR [rsp-0x50],rax
  017d5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017de: 00 	movabs rax,0x0
  017e8:    	mov    QWORD PTR [rsp-0x28],rax
  017ed: 00 	movabs r13,0x0
  017f7:    	call   0xffff339c
  017fc:    	lea    rdi,[rbp-0x8]
  01800:    	mov    QWORD PTR [rbx],rdi
  01803:    	movq   xmm5,QWORD PTR [rsp]
  01808:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0180e:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01814:    	add    rsp,0x20
  01818:    	test   rax,rax
  0181b:    	je     0x39ec4
  01821:    	mov    QWORD PTR [rbp-0x70],rax
:00094 
:00096 _ = %2.call pl=(%9; 1)               [<INVALID>]
  01825: 01 	sub    DWORD PTR [rip+0x5cc],0x1        # 0x1df8
  0182c:    	je     0x39efc
  01832:    	sub    rsp,0x20
  01836:    	movq   QWORD PTR [rsp],xmm5
  0183b:    	movq   QWORD PTR [rsp+0x8],xmm6
  01841:    	movq   QWORD PTR [rsp+0x10],xmm7
  01847:    	mov    rdi,QWORD PTR [rbp-0x38]
  0184b: 34 	movabs rax,0x563437f53600
  01855:    	call   rax
  01857:    	mov    r15d,eax
  0185a: 00 	cmp    r15d,DWORD PTR [rip+0x59f]        # 0x1e00
  01861:    	jne    0x39f1e
  01867:    	mov    eax,DWORD PTR [rip+0xffffffffffff4728]        # 0xffff5f95
  0186d:    	cmp    DWORD PTR [rip+0x589],eax        # 0x1dfc
  01873:    	jne    0x39f1e
  01879: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01882:    	mov    QWORD PTR [rsp-0x38],rcx
  01887:    	mov    rax,QWORD PTR [rbx]
  0188a:    	lea    rdi,[rsp-0x18]
  0188f:    	mov    QWORD PTR [rdi],rax
  01892:    	mov    QWORD PTR [rbx],rdi
  01895:    	mov    rax,QWORD PTR [rbp-0x38]
  01899:    	mov    QWORD PTR [rsp-0x38],rax
  0189e: 00 	mov    rdi,0x1
  018a5:    	mov    rax,QWORD PTR [rbp-0x70]
  018a9:    	mov    QWORD PTR [rsp-0x40],rax
  018ae: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018b7: 00 	movabs rax,0x0
  018c1:    	mov    QWORD PTR [rsp-0x28],rax
  018c6: 00 	movabs r13,0x0
  018d0:    	call   0xffff339c
  018d5:    	lea    rdi,[rbp-0x8]
  018d9:    	mov    QWORD PTR [rbx],rdi
  018dc:    	movq   xmm5,QWORD PTR [rsp]
  018e1:    	movq   xmm6,QWORD PTR [rsp+0x8]
  018e7:    	movq   xmm7,QWORD PTR [rsp+0x10]
  018ed:    	add    rsp,0x20
  018f1:    	test   rax,rax
  018f4:    	je     0x39f8a
:00097 
:00099 %9 = %2.call pl()                    [<INVALID>]
  018fa: 01 	sub    DWORD PTR [rip+0x503],0x1        # 0x1e04
  01901:    	je     0x39fc2
  01907:    	sub    rsp,0x20
  0190b:    	movq   QWORD PTR [rsp],xmm5
  01910:    	movq   QWORD PTR [rsp+0x8],xmm6
  01916:    	movq   QWORD PTR [rsp+0x10],xmm7
  0191c:    	mov    rdi,QWORD PTR [rbp-0x38]
  01920: 34 	movabs rax,0x563437f53600
  0192a:    	call   rax
  0192c:    	mov    r15d,eax
  0192f: 00 	cmp    r15d,DWORD PTR [rip+0x4d6]        # 0x1e0c
  01936:    	jne    0x39fe4
  0193c:    	mov    eax,DWORD PTR [rip+0xffffffffffff4653]        # 0xffff5f95
  01942:    	cmp    DWORD PTR [rip+0x4c0],eax        # 0x1e08
  01948:    	jne    0x39fe4
  0194e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01957:    	mov    QWORD PTR [rsp-0x38],rcx
  0195c:    	mov    rax,QWORD PTR [rbx]
  0195f:    	lea    rdi,[rsp-0x18]
  01964:    	mov    QWORD PTR [rdi],rax
  01967:    	mov    QWORD PTR [rbx],rdi
  0196a:    	mov    rax,QWORD PTR [rbp-0x38]
  0196e:    	mov    QWORD PTR [rsp-0x38],rax
  01973: 00 	mov    rdi,0x0
  0197a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01983: 00 	movabs rax,0x0
  0198d:    	mov    QWORD PTR [rsp-0x28],rax
  01992: 00 	movabs r13,0x0
  0199c:    	call   0xffff339c
  019a1:    	lea    rdi,[rbp-0x8]
  019a5:    	mov    QWORD PTR [rbx],rdi
  019a8:    	movq   xmm5,QWORD PTR [rsp]
  019ad:    	movq   xmm6,QWORD PTR [rsp+0x8]
  019b3:    	movq   xmm7,QWORD PTR [rsp+0x10]
  019b9:    	add    rsp,0x20
  019bd:    	test   rax,rax
  019c0:    	je     0x3a050
  019c6:    	mov    QWORD PTR [rbp-0x70],rax
:00100 
:00102 %10 = @center: <INVALID>[IvarId(0)]
  019ca:    	mov    rdi,QWORD PTR [rbp-0x28]
  019ce:    	sub    rsp,0x20
  019d2:    	movq   QWORD PTR [rsp],xmm5
  019d7:    	movq   QWORD PTR [rsp+0x8],xmm6
  019dd:    	movq   QWORD PTR [rsp+0x10],xmm7
  019e3: 00 	mov    rsi,0x90
  019ea:    	mov    rdx,r12
  019ed: 34 	movabs rax,0x563437f47590
  019f7:    	call   rax
  019f9:    	movq   xmm5,QWORD PTR [rsp]
  019fe:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01a04:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01a0a:    	add    rsp,0x20
  01a0e:    	mov    QWORD PTR [rbp-0x78],rax
:00103 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  01a12: 01 	sub    DWORD PTR [rip+0x3f7],0x1        # 0x1e10
  01a19:    	je     0x3a088
  01a1f:    	sub    rsp,0x20
  01a23:    	movq   QWORD PTR [rsp],xmm5
  01a28:    	movq   QWORD PTR [rsp+0x8],xmm6
  01a2e:    	movq   QWORD PTR [rsp+0x10],xmm7
  01a34:    	mov    rdi,QWORD PTR [rbp-0x70]
  01a38: 34 	movabs rax,0x563437f53600
  01a42:    	call   rax
  01a44:    	mov    r15d,eax
  01a47: 00 	cmp    r15d,DWORD PTR [rip+0x3ca]        # 0x1e18
  01a4e:    	jne    0x3a0aa
  01a54:    	mov    eax,DWORD PTR [rip+0xffffffffffff453b]        # 0xffff5f95
  01a5a:    	cmp    DWORD PTR [rip+0x3b4],eax        # 0x1e14
  01a60:    	jne    0x3a0aa
  01a66: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a6f:    	mov    QWORD PTR [rsp-0x38],rcx
  01a74:    	mov    rax,QWORD PTR [rbx]
  01a77:    	lea    rdi,[rsp-0x18]
  01a7c:    	mov    QWORD PTR [rdi],rax
  01a7f:    	mov    QWORD PTR [rbx],rdi
  01a82:    	mov    rax,QWORD PTR [rbp-0x70]
  01a86:    	mov    QWORD PTR [rsp-0x38],rax
  01a8b: 00 	mov    rdi,0x1
  01a92:    	mov    rax,QWORD PTR [rbp-0x78]
  01a96:    	mov    QWORD PTR [rsp-0x40],rax
  01a9b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01aa4: 00 	movabs rax,0x0
  01aae:    	mov    QWORD PTR [rsp-0x28],rax
  01ab3: 00 	movabs r13,0x0
  01abd:    	call   0xffff339c
  01ac2:    	lea    rdi,[rbp-0x8]
  01ac6:    	mov    QWORD PTR [rbx],rdi
  01ac9:    	movq   xmm5,QWORD PTR [rsp]
  01ace:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01ad4:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01ada:    	add    rsp,0x20
  01ade:    	test   rax,rax
  01ae1:    	je     0x3a116
  01ae7:    	mov    QWORD PTR [rbp-0x68],rax
:00104 
:00106 %9 = %8.call vnormalize()            [<INVALID>]
  01aeb: 01 	sub    DWORD PTR [rip+0x32a],0x1        # 0x1e1c
  01af2:    	je     0x3a14e
  01af8:    	sub    rsp,0x20
  01afc:    	movq   QWORD PTR [rsp],xmm5
  01b01:    	movq   QWORD PTR [rsp+0x8],xmm6
  01b07:    	movq   QWORD PTR [rsp+0x10],xmm7
  01b0d:    	mov    rdi,QWORD PTR [rbp-0x68]
  01b11: 34 	movabs rax,0x563437f53600
  01b1b:    	call   rax
  01b1d:    	mov    r15d,eax
  01b20: 00 	cmp    r15d,DWORD PTR [rip+0x2fd]        # 0x1e24
  01b27:    	jne    0x3a170
  01b2d:    	mov    eax,DWORD PTR [rip+0xffffffffffff4462]        # 0xffff5f95
  01b33:    	cmp    DWORD PTR [rip+0x2e7],eax        # 0x1e20
  01b39:    	jne    0x3a170
  01b3f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b48:    	mov    QWORD PTR [rsp-0x38],rcx
  01b4d:    	mov    rax,QWORD PTR [rbx]
  01b50:    	lea    rdi,[rsp-0x18]
  01b55:    	mov    QWORD PTR [rdi],rax
  01b58:    	mov    QWORD PTR [rbx],rdi
  01b5b:    	mov    rax,QWORD PTR [rbp-0x68]
  01b5f:    	mov    QWORD PTR [rsp-0x38],rax
  01b64: 00 	mov    rdi,0x0
  01b6b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b74: 00 	movabs rax,0x0
  01b7e:    	mov    QWORD PTR [rsp-0x28],rax
  01b83: 00 	movabs r13,0x0
  01b8d:    	call   0xffff339c
  01b92:    	lea    rdi,[rbp-0x8]
  01b96:    	mov    QWORD PTR [rbx],rdi
  01b99:    	movq   xmm5,QWORD PTR [rsp]
  01b9e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01ba4:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01baa:    	add    rsp,0x20
  01bae:    	test   rax,rax
  01bb1:    	je     0x3a1dc
  01bb7:    	mov    QWORD PTR [rbp-0x70],rax
:00107 
:00109 _ = %2.call n=(%9; 1)                [<INVALID>]
  01bbb: 01 	sub    DWORD PTR [rip+0x266],0x1        # 0x1e28
  01bc2:    	je     0x3a214
  01bc8:    	sub    rsp,0x20
  01bcc:    	movq   QWORD PTR [rsp],xmm5
  01bd1:    	movq   QWORD PTR [rsp+0x8],xmm6
  01bd7:    	movq   QWORD PTR [rsp+0x10],xmm7
  01bdd:    	mov    rdi,QWORD PTR [rbp-0x38]
  01be1: 34 	movabs rax,0x563437f53600
  01beb:    	call   rax
  01bed:    	mov    r15d,eax
  01bf0: 00 	cmp    r15d,DWORD PTR [rip+0x239]        # 0x1e30
  01bf7:    	jne    0x3a236
  01bfd:    	mov    eax,DWORD PTR [rip+0xffffffffffff4392]        # 0xffff5f95
  01c03:    	cmp    DWORD PTR [rip+0x223],eax        # 0x1e2c
  01c09:    	jne    0x3a236
  01c0f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01c18:    	mov    QWORD PTR [rsp-0x38],rcx
  01c1d:    	mov    rax,QWORD PTR [rbx]
  01c20:    	lea    rdi,[rsp-0x18]
  01c25:    	mov    QWORD PTR [rdi],rax
  01c28:    	mov    QWORD PTR [rbx],rdi
  01c2b:    	mov    rax,QWORD PTR [rbp-0x38]
  01c2f:    	mov    QWORD PTR [rsp-0x38],rax
  01c34: 00 	mov    rdi,0x1
  01c3b:    	mov    rax,QWORD PTR [rbp-0x70]
  01c3f:    	mov    QWORD PTR [rsp-0x40],rax
  01c44: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c4d: 00 	movabs rax,0x0
  01c57:    	mov    QWORD PTR [rsp-0x28],rax
  01c5c: 00 	movabs r13,0x0
  01c66:    	call   0xffff339c
  01c6b:    	lea    rdi,[rbp-0x8]
  01c6f:    	mov    QWORD PTR [rbx],rdi
  01c72:    	movq   xmm5,QWORD PTR [rsp]
  01c77:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01c7d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01c83:    	add    rsp,0x20
  01c87:    	test   rax,rax
  01c8a:    	je     0x3a2a2
:00110 
:00112 br =>:00113
  01c90:    	jmp    0x3a317
:00113 br =>:00114
  01c95:    	jmp    0x3a38a
:00114 %9 = nil
  01c9a: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00115 ret %9
  01ca2:    	mov    rax,QWORD PTR [rbp-0x70]
  01ca6:    	leave  
  01ca7:    	ret    
==> start whole compile: <unnamed> FuncId(80) self_class:Scene start:[00000] bytecode:0x563439851560
<== finished compile. elapsed:184.6µs
offset:Pos(60056) code: 9237 bytes  data: 411 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x1
  00011:    	je     0x73
  00017:    	jl     0x22
  0001d:    	jmp    0x73
  00022:    	mov    eax,0x1
  00027:    	sub    eax,edx
  00029:    	test   rax,rax
  0002c:    	je     0x48
  00032:    	lea    rdi,[rbp-0x38]
  00036: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  0003e:    	sub    rax,0x1
  00042:    	jne    0x36
  00048:    	mov    edx,0x1
  0004d:    	mov    eax,0x1
  00052:    	sub    eax,edx
  00054:    	test   rax,rax
  00057:    	je     0x73
  0005d:    	lea    rdi,[rbp-0x38]
  00061: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00069:    	sub    rax,0x1
  0006d:    	jne    0x61
  00073: 00 	mov    rax,0x4
  0007a:    	mov    QWORD PTR [rbp-0x38],rax
  0007e:    	mov    QWORD PTR [rbp-0x40],rax
  00082:    	mov    QWORD PTR [rbp-0x48],rax
  00086:    	mov    QWORD PTR [rbp-0x50],rax
  0008a:    	mov    QWORD PTR [rbp-0x58],rax
  0008e:    	mov    QWORD PTR [rbp-0x60],rax
  00092:    	mov    QWORD PTR [rbp-0x68],rax
  00096:    	mov    QWORD PTR [rbp-0x70],rax
  0009a:    	mov    QWORD PTR [rbp-0x78],rax
  0009e:    	mov    QWORD PTR [rbp-0x80],rax
  000a2: ff 	mov    QWORD PTR [rbp-0x88],rax
  000a9: ff 	mov    QWORD PTR [rbp-0x90],rax
  000b0: ff 	mov    QWORD PTR [rbp-0x98],rax
  000b7: ff 	mov    QWORD PTR [rbp-0xa0],rax
  000be: ff 	mov    QWORD PTR [rbp-0xa8],rax
  000c5:    	mov    rdi,QWORD PTR [rbp-0x28]
  000c9: 00 	test   rdi,0x7
  000d0:    	jne    0x38598
  000d6:    	cmp    DWORD PTR [rdi+0x4],0x32
  000da:    	jne    0x38598
:00000 init_block reg:17 arg:1 pos:1 req:1 stack_offset:11
:00001 %13 = %0.call rand()                 [Scene]
  000e0:    	mov    rdi,QWORD PTR [rbp-0x28]
  000e4: 26 	cmp    DWORD PTR [rip+0xffffffffffff4076],0x26        # 0xffff4161
  000eb:    	jne    0x385a7
  000f1: 00 	mov    r9,0x0
  000f8:    	mov    rdx,rdi
  000fb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00104:    	mov    QWORD PTR [rsp-0x38],rcx
  00109:    	mov    rax,QWORD PTR [rbx]
  0010c:    	lea    rdi,[rsp-0x18]
  00111:    	mov    QWORD PTR [rdi],rax
  00114:    	mov    QWORD PTR [rbx],rdi
  00117: ff 	lea    rcx,[rbp-0x98]
  0011e: 00 	mov    r8,0x0
  00125:    	call   0x385b6
  0012a:    	lea    rdi,[rbp-0x8]
  0012e:    	mov    QWORD PTR [rbx],rdi
  00131: 34 	movabs r13,0x563439851590
  0013b:    	test   rax,rax
  0013e:    	je     0xffff15a3
  00144: ff 	mov    QWORD PTR [rbp-0x90],rax
:00002 
:00004 %2 = %13
  0014b: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00152:    	mov    QWORD PTR [rbp-0x38],rax
:00005 %13 = literal[2.0]
  00156: 00 	movq   xmm2,QWORD PTR [rip+0x22ba]        # 0x2418
  0015e: 00 	mov    rax,0x2
  00165: ff 	mov    QWORD PTR [rbp-0x90],rax
:00006 %14 = literal[3.14159265]
  0016c: 00 	movq   xmm3,QWORD PTR [rip+0x22b4]        # 0x2428
  00174: da 	movabs rax,0x490fda9e46a78a
  0017e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00007 %13 = %13 * %14                      [Float][Float]
  00185:    	mulsd  xmm2,xmm3
:00008 %14 = %0.call rand()                 [Scene]
  00189:    	mov    rdi,QWORD PTR [rbp-0x28]
  0018d: 26 	cmp    DWORD PTR [rip+0xffffffffffff3fcd],0x26        # 0xffff4161
  00194:    	jne    0x385e8
  0019a: 00 	mov    r9,0x0
  001a1:    	sub    rsp,0x10
  001a5:    	movq   QWORD PTR [rsp],xmm2
  001aa:    	mov    rdx,rdi
  001ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001b6:    	mov    QWORD PTR [rsp-0x38],rcx
  001bb:    	mov    rax,QWORD PTR [rbx]
  001be:    	lea    rdi,[rsp-0x18]
  001c3:    	mov    QWORD PTR [rdi],rax
  001c6:    	mov    QWORD PTR [rbx],rdi
  001c9: ff 	lea    rcx,[rbp-0xa0]
  001d0: 00 	mov    r8,0x0
  001d7:    	call   0x38607
  001dc:    	lea    rdi,[rbp-0x8]
  001e0:    	mov    QWORD PTR [rbx],rdi
  001e3:    	movq   xmm2,QWORD PTR [rsp]
  001e8:    	add    rsp,0x10
  001ec: 34 	movabs r13,0x563439851600
  001f6:    	test   rax,rax
  001f9:    	je     0xffff15a3
  001ff: ff 	mov    QWORD PTR [rbp-0x98],rax
:00009 
:00011 %3 = %13 * %14                       [Float][Float]
  00206: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0020d: 00 	test   rdi,0x1
  00214:    	jne    0x38639
  0021a: 00 	test   rdi,0x2
  00221:    	je     0x25d
  00227:    	xorps  xmm3,xmm3
  0022a: 00 	movabs rax,0x8000000000000002
  00234:    	cmp    rdi,rax
  00237:    	je     0x26f
  0023d:    	mov    rax,rdi
  00240:    	sar    rax,0x3f
  00244:    	add    rax,0x2
  00248:    	and    rdi,0xfffffffffffffffc
  0024c:    	or     rdi,rax
  0024f:    	rol    rdi,0x3d
  00253:    	movq   xmm3,rdi
  00258:    	jmp    0x26f
  0025d:    	call   0xffff15fc
  00262:    	test   rax,rax
  00265:    	je     0x38639
  0026b:    	movq   xmm3,xmm0
  0026f:    	movq   xmm4,xmm2
  00273:    	mulsd  xmm4,xmm3
:00012 %14 = const[Math]                    [Math]
  00277: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3eea]        # 0xffff4168
  0027e: 00 	cmp    rax,QWORD PTR [rip+0x21c3]        # 0x2448
  00285:    	jne    0x38658
  0028b: 00 	mov    rax,QWORD PTR [rip+0x21a6]        # 0x2438
  00292: ff 	mov    QWORD PTR [rbp-0x98],rax
:00013 %15 = %3
:00014 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
  00299: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002a0: 00 	test   rdi,0x7
  002a7:    	jne    0x386bc
  002ad:    	cmp    DWORD PTR [rdi+0x4],0x21
  002b1:    	jne    0x386bc
  002b7: 26 	cmp    DWORD PTR [rip+0xffffffffffff3ea3],0x26        # 0xffff4161
  002be:    	jne    0x386bc
  002c4:    	sub    rsp,0x10
  002c8:    	movq   QWORD PTR [rsp],xmm2
  002cd:    	movq   QWORD PTR [rsp+0x8],xmm4
  002d3:    	movq   xmm0,xmm4
  002d7: 34 	movabs rax,0x563437f28290
  002e1:    	call   rax
  002e3:    	movq   xmm2,QWORD PTR [rsp]
  002e8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  002ee:    	add    rsp,0x10
  002f2:    	movq   xmm2,xmm0
:00015 
:00017 %15 = const[Math]                    [Math]
  002f6: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3e6b]        # 0xffff4168
  002fd: 00 	cmp    rax,QWORD PTR [rip+0x2164]        # 0x2468
  00304:    	jne    0x386df
  0030a: 00 	mov    rax,QWORD PTR [rip+0x2147]        # 0x2458
  00311: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00018 %16 = literal[1.0]
  00318: 00 	movq   xmm3,QWORD PTR [rip+0x2158]        # 0x2478
  00320: 00 	movabs rax,0xff80000000000002
  0032a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00019 %16 = %16 - %2                       [Float][Float]
  00331:    	mov    rdi,QWORD PTR [rbp-0x38]
  00335: 00 	test   rdi,0x1
  0033c:    	jne    0x38743
  00342: 00 	test   rdi,0x2
  00349:    	je     0x385
  0034f:    	xorps  xmm5,xmm5
  00352: 00 	movabs rax,0x8000000000000002
  0035c:    	cmp    rdi,rax
  0035f:    	je     0x397
  00365:    	mov    rax,rdi
  00368:    	sar    rax,0x3f
  0036c:    	add    rax,0x2
  00370:    	and    rdi,0xfffffffffffffffc
  00374:    	or     rdi,rax
  00377:    	rol    rdi,0x3d
  0037b:    	movq   xmm5,rdi
  00380:    	jmp    0x397
  00385:    	call   0xffff15fc
  0038a:    	test   rax,rax
  0038d:    	je     0x38743
  00393:    	movq   xmm5,xmm0
  00397:    	subsd  xmm3,xmm5
:00020 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  0039b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  003a2: 00 	test   rdi,0x7
  003a9:    	jne    0x3876f
  003af:    	cmp    DWORD PTR [rdi+0x4],0x21
  003b3:    	jne    0x3876f
  003b9: 26 	cmp    DWORD PTR [rip+0xffffffffffff3da1],0x26        # 0xffff4161
  003c0:    	jne    0x3876f
  003c6:    	sqrtsd xmm6,xmm3
:00021 
:00023 %4 = %13 * %14                       [Float][Float]
  003ca:    	movq   xmm7,xmm2
  003ce:    	mulsd  xmm7,xmm6
:00024 %14 = const[Math]                    [Math]
  003d2: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3d8f]        # 0xffff4168
  003d9: 00 	cmp    rax,QWORD PTR [rip+0x20b8]        # 0x2498
  003e0:    	jne    0x387ab
  003e6: 00 	mov    rax,QWORD PTR [rip+0x209b]        # 0x2488
  003ed: ff 	mov    QWORD PTR [rbp-0x98],rax
:00025 %15 = %3
:00026 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
  003f4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003fb: 00 	test   rdi,0x7
  00402:    	jne    0x38833
  00408:    	cmp    DWORD PTR [rdi+0x4],0x21
  0040c:    	jne    0x38833
  00412: 26 	cmp    DWORD PTR [rip+0xffffffffffff3d48],0x26        # 0xffff4161
  00419:    	jne    0x38833
  0041f:    	sub    rsp,0x30
  00423:    	movq   QWORD PTR [rsp],xmm2
  00428:    	movq   QWORD PTR [rsp+0x8],xmm3
  0042e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00434:    	movq   QWORD PTR [rsp+0x18],xmm5
  0043a:    	movq   QWORD PTR [rsp+0x20],xmm7
  00440:    	movq   xmm0,xmm4
  00444: 34 	movabs rax,0x563437f282a0
  0044e:    	call   rax
  00450:    	movq   xmm2,QWORD PTR [rsp]
  00455:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0045b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00461:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00467:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0046d:    	add    rsp,0x30
  00471:    	movq   xmm2,xmm0
:00027 
:00029 %15 = const[Math]                    [Math]
  00475: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3cec]        # 0xffff4168
  0047c: 00 	cmp    rax,QWORD PTR [rip+0x2035]        # 0x24b8
  00483:    	jne    0x38873
  00489: 00 	mov    rax,QWORD PTR [rip+0x2018]        # 0x24a8
  00490: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00030 %16 = literal[1.0]
  00497: 00 	movq   xmm3,QWORD PTR [rip+0x2029]        # 0x24c8
  0049f: 00 	movabs rax,0xff80000000000002
  004a9: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00031 %16 = %16 - %2                       [Float][Float]
  004b0:    	subsd  xmm3,xmm5
:00032 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  004b4: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  004bb: 00 	test   rdi,0x7
  004c2:    	jne    0x388fb
  004c8:    	cmp    DWORD PTR [rdi+0x4],0x21
  004cc:    	jne    0x388fb
  004d2: 26 	cmp    DWORD PTR [rip+0xffffffffffff3c88],0x26        # 0xffff4161
  004d9:    	jne    0x388fb
  004df:    	sqrtsd xmm6,xmm3
:00033 
:00035 %5 = %13 * %14                       [Float][Float]
  004e3:    	movq   xmm8,xmm2
  004e8:    	mulsd  xmm8,xmm6
:00036 %13 = const[Math]                    [Math]
  004ed: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff3c74]        # 0xffff4168
  004f4: 00 	cmp    rax,QWORD PTR [rip+0x1fed]        # 0x24e8
  004fb:    	jne    0x38944
  00501: 00 	mov    rax,QWORD PTR [rip+0x1fd0]        # 0x24d8
  00508: ff 	mov    QWORD PTR [rbp-0x90],rax
:00037 %14 = %2
:00038 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  0050f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00516: 00 	test   rdi,0x7
  0051d:    	jne    0x389da
  00523:    	cmp    DWORD PTR [rdi+0x4],0x21
  00527:    	jne    0x389da
  0052d: 26 	cmp    DWORD PTR [rip+0xffffffffffff3c2d],0x26        # 0xffff4161
  00534:    	jne    0x389da
  0053a:    	sqrtsd xmm2,xmm5
:00039 
:00041 %14 = dynvar(2, %2)
  0053e:    	mov    rax,QWORD PTR [rbp-0x10]
  00542:    	mov    rax,QWORD PTR [rax]
  00545:    	mov    rax,QWORD PTR [rax-0x28]
  00549: ff 	mov    QWORD PTR [rbp-0x98],rax
:00042 %15 = 0: i32
  00550: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00043 %14 = %14.[%15]                      [Array][Integer]
  0055b:    	sub    rsp,0x30
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576:    	movq   QWORD PTR [rsp+0x20],xmm7
  0057c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00583: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  0058a: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00591:    	mov    rdi,rbx
  00594:    	mov    rsi,r12
  00597: 34 	movabs r8,0x563439851818
  005a1: 34 	movabs rax,0x563437f47370
  005ab:    	call   rax
  005ad:    	movq   xmm2,QWORD PTR [rsp]
  005b2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005b8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005be:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005c4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005ca: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  005d1:    	add    rsp,0x30
  005d5: 34 	movabs r13,0x563439851820
  005df:    	test   rax,rax
  005e2:    	je     0xffff15a3
  005e8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00044 %13 = %14.call x()                   [Vec]
  005ef: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  005f6: 00 	test   rdi,0x7
  005fd:    	jne    0x38a31
  00603:    	cmp    DWORD PTR [rdi+0x4],0x28
  00607:    	jne    0x38a31
  0060d: 26 	cmp    DWORD PTR [rip+0xffffffffffff3b4d],0x26        # 0xffff4161
  00614:    	jne    0x38a31
  0061a:    	mov    esi,DWORD PTR [rip+0x1ed4]        # 0x24f4
  00620:    	cmp    esi,0xffffffff
  00623:    	je     0x38a85
  00629:    	cmp    WORD PTR [rdi+0x2],0x3
  0062e:    	jne    0x647
  00634:    	cmp    esi,0x6
  00637:    	jge    0x647
  0063d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00642:    	jmp    0x6a3
  00647:    	sub    rsp,0x30
  0064b:    	movq   QWORD PTR [rsp],xmm2
  00650:    	movq   QWORD PTR [rsp+0x8],xmm3
  00656:    	movq   QWORD PTR [rsp+0x10],xmm4
  0065c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00662:    	movq   QWORD PTR [rsp+0x20],xmm7
  00668: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0066f: 34 	movabs rax,0x563437ed0590
  00679:    	call   rax
  0067b:    	movq   xmm2,QWORD PTR [rsp]
  00680:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00686:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0068c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00692:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00698: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0069f:    	add    rsp,0x30
  006a3: ff 	mov    QWORD PTR [rbp-0x90],rax
:00045 
:00047 %13 = %4 * %13                       [Float][Float]
  006aa: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  006b1: 00 	test   rdi,0x1
  006b8:    	jne    0x38afe
  006be: 00 	test   rdi,0x2
  006c5:    	je     0x701
  006cb:    	xorps  xmm6,xmm6
  006ce: 00 	movabs rax,0x8000000000000002
  006d8:    	cmp    rdi,rax
  006db:    	je     0x713
  006e1:    	mov    rax,rdi
  006e4:    	sar    rax,0x3f
  006e8:    	add    rax,0x2
  006ec:    	and    rdi,0xfffffffffffffffc
  006f0:    	or     rdi,rax
  006f3:    	rol    rdi,0x3d
  006f7:    	movq   xmm6,rdi
  006fc:    	jmp    0x713
  00701:    	call   0xffff15fc
  00706:    	test   rax,rax
  00709:    	je     0x38afe
  0070f:    	movq   xmm6,xmm0
  00713:    	mulsd  xmm6,xmm7
:00048 %15 = dynvar(2, %2)
  00717:    	mov    rax,QWORD PTR [rbp-0x10]
  0071b:    	mov    rax,QWORD PTR [rax]
  0071e:    	mov    rax,QWORD PTR [rax-0x28]
  00722: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00049 %16 = 1: i32
  00729: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00050 %15 = %15.[%16]                      [Array][Integer]
  00734:    	sub    rsp,0x30
  00738:    	movq   QWORD PTR [rsp],xmm2
  0073d:    	movq   QWORD PTR [rsp+0x8],xmm4
  00743:    	movq   QWORD PTR [rsp+0x10],xmm5
  00749:    	movq   QWORD PTR [rsp+0x18],xmm6
  0074f:    	movq   QWORD PTR [rsp+0x20],xmm7
  00755: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0075c: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00763: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0076a:    	mov    rdi,rbx
  0076d:    	mov    rsi,r12
  00770: 34 	movabs r8,0x563439851888
  0077a: 34 	movabs rax,0x563437f47370
  00784:    	call   rax
  00786:    	movq   xmm2,QWORD PTR [rsp]
  0078b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00791:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00797:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0079d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007a3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  007aa:    	add    rsp,0x30
  007ae: 34 	movabs r13,0x563439851890
  007b8:    	test   rax,rax
  007bb:    	je     0xffff15a3
  007c1: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00051 %14 = %15.call x()                   [Vec]
  007c8: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  007cf: 00 	test   rdi,0x7
  007d6:    	jne    0x38b52
  007dc:    	cmp    DWORD PTR [rdi+0x4],0x28
  007e0:    	jne    0x38b52
  007e6: 26 	cmp    DWORD PTR [rip+0xffffffffffff3974],0x26        # 0xffff4161
  007ed:    	jne    0x38b52
  007f3:    	mov    esi,DWORD PTR [rip+0x1d03]        # 0x24fc
  007f9:    	cmp    esi,0xffffffff
  007fc:    	je     0x38ba6
  00802:    	cmp    WORD PTR [rdi+0x2],0x3
  00807:    	jne    0x820
  0080d:    	cmp    esi,0x6
  00810:    	jge    0x820
  00816:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0081b:    	jmp    0x87c
  00820:    	sub    rsp,0x30
  00824:    	movq   QWORD PTR [rsp],xmm2
  00829:    	movq   QWORD PTR [rsp+0x8],xmm4
  0082f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00835:    	movq   QWORD PTR [rsp+0x18],xmm6
  0083b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00841: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00848: 34 	movabs rax,0x563437ed0590
  00852:    	call   rax
  00854:    	movq   xmm2,QWORD PTR [rsp]
  00859:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0085f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00865:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0086b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00871: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00878:    	add    rsp,0x30
  0087c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00052 
:00054 %14 = %5 * %14                       [Float][Float]
  00883: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0088a: 00 	test   rdi,0x1
  00891:    	jne    0x38c1f
  00897: 00 	test   rdi,0x2
  0089e:    	je     0x8da
  008a4:    	xorps  xmm3,xmm3
  008a7: 00 	movabs rax,0x8000000000000002
  008b1:    	cmp    rdi,rax
  008b4:    	je     0x8ec
  008ba:    	mov    rax,rdi
  008bd:    	sar    rax,0x3f
  008c1:    	add    rax,0x2
  008c5:    	and    rdi,0xfffffffffffffffc
  008c9:    	or     rdi,rax
  008cc:    	rol    rdi,0x3d
  008d0:    	movq   xmm3,rdi
  008d5:    	jmp    0x8ec
  008da:    	call   0xffff15fc
  008df:    	test   rax,rax
  008e2:    	je     0x38c1f
  008e8:    	movq   xmm3,xmm0
  008ec:    	mulsd  xmm3,xmm8
:00055 %13 = %13 + %14                      [Float][Float]
  008f1:    	addsd  xmm6,xmm3
:00056 %15 = dynvar(2, %2)
  008f5:    	mov    rax,QWORD PTR [rbp-0x10]
  008f9:    	mov    rax,QWORD PTR [rax]
  008fc:    	mov    rax,QWORD PTR [rax-0x28]
  00900: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00057 %16 = 2: i32
  00907: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00058 %15 = %15.[%16]                      [Array][Integer]
  00912:    	sub    rsp,0x40
  00916:    	movq   QWORD PTR [rsp],xmm2
  0091b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00921:    	movq   QWORD PTR [rsp+0x10],xmm4
  00927:    	movq   QWORD PTR [rsp+0x18],xmm5
  0092d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00933:    	movq   QWORD PTR [rsp+0x28],xmm7
  00939: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00940: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00947: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0094e:    	mov    rdi,rbx
  00951:    	mov    rsi,r12
  00954: 34 	movabs r8,0x563439851908
  0095e: 34 	movabs rax,0x563437f47370
  00968:    	call   rax
  0096a:    	movq   xmm2,QWORD PTR [rsp]
  0096f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00975:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0097b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00981:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00987:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0098d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00994:    	add    rsp,0x40
  00998: 34 	movabs r13,0x563439851910
  009a2:    	test   rax,rax
  009a5:    	je     0xffff15a3
  009ab: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00059 %14 = %15.call x()                   [Vec]
  009b2: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  009b9: 00 	test   rdi,0x7
  009c0:    	jne    0x38c73
  009c6:    	cmp    DWORD PTR [rdi+0x4],0x28
  009ca:    	jne    0x38c73
  009d0: 26 	cmp    DWORD PTR [rip+0xffffffffffff378a],0x26        # 0xffff4161
  009d7:    	jne    0x38c73
  009dd:    	mov    esi,DWORD PTR [rip+0x1b21]        # 0x2504
  009e3:    	cmp    esi,0xffffffff
  009e6:    	je     0x38cc7
  009ec:    	cmp    WORD PTR [rdi+0x2],0x3
  009f1:    	jne    0xa0a
  009f7:    	cmp    esi,0x6
  009fa:    	jge    0xa0a
  00a00:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a05:    	jmp    0xa66
  00a0a:    	sub    rsp,0x30
  00a0e:    	movq   QWORD PTR [rsp],xmm2
  00a13:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a19:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a1f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a25:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a2b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a32: 34 	movabs rax,0x563437ed0590
  00a3c:    	call   rax
  00a3e:    	movq   xmm2,QWORD PTR [rsp]
  00a43:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a49:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a4f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a55:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00a5b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00a62:    	add    rsp,0x30
  00a66: ff 	mov    QWORD PTR [rbp-0x98],rax
:00060 
:00062 %14 = %6 * %14                       [Float][Float]
  00a6d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a74: 00 	test   rdi,0x1
  00a7b:    	jne    0x38d40
  00a81: 00 	test   rdi,0x2
  00a88:    	je     0xac4
  00a8e:    	xorps  xmm3,xmm3
  00a91: 00 	movabs rax,0x8000000000000002
  00a9b:    	cmp    rdi,rax
  00a9e:    	je     0xad6
  00aa4:    	mov    rax,rdi
  00aa7:    	sar    rax,0x3f
  00aab:    	add    rax,0x2
  00aaf:    	and    rdi,0xfffffffffffffffc
  00ab3:    	or     rdi,rax
  00ab6:    	rol    rdi,0x3d
  00aba:    	movq   xmm3,rdi
  00abf:    	jmp    0xad6
  00ac4:    	call   0xffff15fc
  00ac9:    	test   rax,rax
  00acc:    	je     0x38d40
  00ad2:    	movq   xmm3,xmm0
  00ad6:    	mulsd  xmm3,xmm2
:00063 %7 = %13 + %14                       [Float][Float]
  00ada:    	movq   xmm9,xmm6
  00adf:    	addsd  xmm9,xmm3
:00064 %14 = dynvar(2, %2)
  00ae4:    	mov    rax,QWORD PTR [rbp-0x10]
  00ae8:    	mov    rax,QWORD PTR [rax]
  00aeb:    	mov    rax,QWORD PTR [rax-0x28]
  00aef: ff 	mov    QWORD PTR [rbp-0x98],rax
:00065 %15 = 0: i32
  00af6: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00066 %14 = %14.[%15]                      [Array][Integer]
  00b01:    	sub    rsp,0x40
  00b05:    	movq   QWORD PTR [rsp],xmm2
  00b0a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b10:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b16:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b1c:    	movq   QWORD PTR [rsp+0x20],xmm7
  00b22: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00b29: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00b30: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00b37: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00b3e:    	mov    rdi,rbx
  00b41:    	mov    rsi,r12
  00b44: 34 	movabs r8,0x563439851988
  00b4e: 34 	movabs rax,0x563437f47370
  00b58:    	call   rax
  00b5a:    	movq   xmm2,QWORD PTR [rsp]
  00b5f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b65:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b6b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b71:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00b77: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00b7e: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00b85:    	add    rsp,0x40
  00b89: 34 	movabs r13,0x563439851990
  00b93:    	test   rax,rax
  00b96:    	je     0xffff15a3
  00b9c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00067 %13 = %14.call y()                   [Vec]
  00ba3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00baa: 00 	test   rdi,0x7
  00bb1:    	jne    0x38d94
  00bb7:    	cmp    DWORD PTR [rdi+0x4],0x28
  00bbb:    	jne    0x38d94
  00bc1: 26 	cmp    DWORD PTR [rip+0xffffffffffff3599],0x26        # 0xffff4161
  00bc8:    	jne    0x38d94
  00bce:    	mov    esi,DWORD PTR [rip+0x1938]        # 0x250c
  00bd4:    	cmp    esi,0xffffffff
  00bd7:    	je     0x38de6
  00bdd:    	cmp    WORD PTR [rdi+0x2],0x3
  00be2:    	jne    0xbfb
  00be8:    	cmp    esi,0x6
  00beb:    	jge    0xbfb
  00bf1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00bf6:    	jmp    0xc59
  00bfb:    	sub    rsp,0x30
  00bff:    	movq   QWORD PTR [rsp],xmm2
  00c04:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c0a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c10:    	movq   QWORD PTR [rsp+0x18],xmm7
  00c16: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00c1d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00c24: 34 	movabs rax,0x563437ed0590
  00c2e:    	call   rax
  00c30:    	movq   xmm2,QWORD PTR [rsp]
  00c35:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c3b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c41:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c47: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00c4e: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00c55:    	add    rsp,0x30
  00c59: ff 	mov    QWORD PTR [rbp-0x90],rax
:00068 
:00070 %13 = %4 * %13                       [Float][Float]
  00c60: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00c67: 00 	test   rdi,0x1
  00c6e:    	jne    0x38e61
  00c74: 00 	test   rdi,0x2
  00c7b:    	je     0xcb7
  00c81:    	xorps  xmm3,xmm3
  00c84: 00 	movabs rax,0x8000000000000002
  00c8e:    	cmp    rdi,rax
  00c91:    	je     0xcc9
  00c97:    	mov    rax,rdi
  00c9a:    	sar    rax,0x3f
  00c9e:    	add    rax,0x2
  00ca2:    	and    rdi,0xfffffffffffffffc
  00ca6:    	or     rdi,rax
  00ca9:    	rol    rdi,0x3d
  00cad:    	movq   xmm3,rdi
  00cb2:    	jmp    0xcc9
  00cb7:    	call   0xffff15fc
  00cbc:    	test   rax,rax
  00cbf:    	je     0x38e61
  00cc5:    	movq   xmm3,xmm0
  00cc9:    	mulsd  xmm3,xmm7
:00071 %15 = dynvar(2, %2)
  00ccd:    	mov    rax,QWORD PTR [rbp-0x10]
  00cd1:    	mov    rax,QWORD PTR [rax]
  00cd4:    	mov    rax,QWORD PTR [rax-0x28]
  00cd8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00072 %16 = 1: i32
  00cdf: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00073 %15 = %15.[%16]                      [Array][Integer]
  00cea:    	sub    rsp,0x40
  00cee:    	movq   QWORD PTR [rsp],xmm2
  00cf3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cf9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cff:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d05:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d0b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d12: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d19: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00d20: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00d27:    	mov    rdi,rbx
  00d2a:    	mov    rsi,r12
  00d2d: 34 	movabs r8,0x5634398519f8
  00d37: 34 	movabs rax,0x563437f47370
  00d41:    	call   rax
  00d43:    	movq   xmm2,QWORD PTR [rsp]
  00d48:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d4e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d54:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d5a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d60: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00d67: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d6e:    	add    rsp,0x40
  00d72: 34 	movabs r13,0x563439851a00
  00d7c:    	test   rax,rax
  00d7f:    	je     0xffff15a3
  00d85: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00074 %14 = %15.call y()                   [Vec]
  00d8c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00d93: 00 	test   rdi,0x7
  00d9a:    	jne    0x38eb3
  00da0:    	cmp    DWORD PTR [rdi+0x4],0x28
  00da4:    	jne    0x38eb3
  00daa: 26 	cmp    DWORD PTR [rip+0xffffffffffff33b0],0x26        # 0xffff4161
  00db1:    	jne    0x38eb3
  00db7:    	mov    esi,DWORD PTR [rip+0x1757]        # 0x2514
  00dbd:    	cmp    esi,0xffffffff
  00dc0:    	je     0x38f15
  00dc6:    	cmp    WORD PTR [rdi+0x2],0x3
  00dcb:    	jne    0xde4
  00dd1:    	cmp    esi,0x6
  00dd4:    	jge    0xde4
  00dda:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ddf:    	jmp    0xe4e
  00de4:    	sub    rsp,0x40
  00de8:    	movq   QWORD PTR [rsp],xmm2
  00ded:    	movq   QWORD PTR [rsp+0x8],xmm3
  00df3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00df9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00dff:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e05: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00e0c: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00e13: 34 	movabs rax,0x563437ed0590
  00e1d:    	call   rax
  00e1f:    	movq   xmm2,QWORD PTR [rsp]
  00e24:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e2a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e30:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e36:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e3c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00e43: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00e4a:    	add    rsp,0x40
  00e4e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00075 
:00077 %14 = %5 * %14                       [Float][Float]
  00e55: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e5c: 00 	test   rdi,0x1
  00e63:    	jne    0x38f9c
  00e69: 00 	test   rdi,0x2
  00e70:    	je     0xeac
  00e76:    	xorps  xmm6,xmm6
  00e79: 00 	movabs rax,0x8000000000000002
  00e83:    	cmp    rdi,rax
  00e86:    	je     0xebe
  00e8c:    	mov    rax,rdi
  00e8f:    	sar    rax,0x3f
  00e93:    	add    rax,0x2
  00e97:    	and    rdi,0xfffffffffffffffc
  00e9b:    	or     rdi,rax
  00e9e:    	rol    rdi,0x3d
  00ea2:    	movq   xmm6,rdi
  00ea7:    	jmp    0xebe
  00eac:    	call   0xffff15fc
  00eb1:    	test   rax,rax
  00eb4:    	je     0x38f9c
  00eba:    	movq   xmm6,xmm0
  00ebe:    	mulsd  xmm6,xmm8
:00078 %13 = %13 + %14                      [Float][Float]
  00ec3:    	addsd  xmm3,xmm6
:00079 %15 = dynvar(2, %2)
  00ec7:    	mov    rax,QWORD PTR [rbp-0x10]
  00ecb:    	mov    rax,QWORD PTR [rax]
  00ece:    	mov    rax,QWORD PTR [rax-0x28]
  00ed2: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00080 %16 = 2: i32
  00ed9: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00081 %15 = %15.[%16]                      [Array][Integer]
  00ee4:    	sub    rsp,0x40
  00ee8:    	movq   QWORD PTR [rsp],xmm2
  00eed:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ef3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ef9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00eff:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f05:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f0b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f12: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f19: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00f20: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00f27:    	mov    rdi,rbx
  00f2a:    	mov    rsi,r12
  00f2d: 34 	movabs r8,0x563439851a78
  00f37: 34 	movabs rax,0x563437f47370
  00f41:    	call   rax
  00f43:    	movq   xmm2,QWORD PTR [rsp]
  00f48:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f4e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f54:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f5a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f60:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f66: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f6d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f74:    	add    rsp,0x40
  00f78: 34 	movabs r13,0x563439851a80
  00f82:    	test   rax,rax
  00f85:    	je     0xffff15a3
  00f8b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00082 %14 = %15.call y()                   [Vec]
  00f92: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00f99: 00 	test   rdi,0x7
  00fa0:    	jne    0x38ffe
  00fa6:    	cmp    DWORD PTR [rdi+0x4],0x28
  00faa:    	jne    0x38ffe
  00fb0: 26 	cmp    DWORD PTR [rip+0xffffffffffff31aa],0x26        # 0xffff4161
  00fb7:    	jne    0x38ffe
  00fbd:    	mov    esi,DWORD PTR [rip+0x1559]        # 0x251c
  00fc3:    	cmp    esi,0xffffffff
  00fc6:    	je     0x39060
  00fcc:    	cmp    WORD PTR [rdi+0x2],0x3
  00fd1:    	jne    0xfea
  00fd7:    	cmp    esi,0x6
  00fda:    	jge    0xfea
  00fe0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00fe5:    	jmp    0x1054
  00fea:    	sub    rsp,0x40
  00fee:    	movq   QWORD PTR [rsp],xmm2
  00ff3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ff9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fff:    	movq   QWORD PTR [rsp+0x18],xmm5
  01005:    	movq   QWORD PTR [rsp+0x20],xmm7
  0100b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01012: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01019: 34 	movabs rax,0x563437ed0590
  01023:    	call   rax
  01025:    	movq   xmm2,QWORD PTR [rsp]
  0102a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01030:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01036:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0103c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01042: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01049: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01050:    	add    rsp,0x40
  01054: ff 	mov    QWORD PTR [rbp-0x98],rax
:00083 
:00085 %14 = %6 * %14                       [Float][Float]
  0105b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01062: 00 	test   rdi,0x1
  01069:    	jne    0x390e7
  0106f: 00 	test   rdi,0x2
  01076:    	je     0x10b2
  0107c:    	xorps  xmm6,xmm6
  0107f: 00 	movabs rax,0x8000000000000002
  01089:    	cmp    rdi,rax
  0108c:    	je     0x10c4
  01092:    	mov    rax,rdi
  01095:    	sar    rax,0x3f
  01099:    	add    rax,0x2
  0109d:    	and    rdi,0xfffffffffffffffc
  010a1:    	or     rdi,rax
  010a4:    	rol    rdi,0x3d
  010a8:    	movq   xmm6,rdi
  010ad:    	jmp    0x10c4
  010b2:    	call   0xffff15fc
  010b7:    	test   rax,rax
  010ba:    	je     0x390e7
  010c0:    	movq   xmm6,xmm0
  010c4:    	mulsd  xmm6,xmm2
:00086 %8 = %13 + %14                       [Float][Float]
  010c8:    	movq   xmm10,xmm3
  010cd:    	addsd  xmm10,xmm6
:00087 %14 = dynvar(2, %2)
  010d2:    	mov    rax,QWORD PTR [rbp-0x10]
  010d6:    	mov    rax,QWORD PTR [rax]
  010d9:    	mov    rax,QWORD PTR [rax-0x28]
  010dd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 0: i32
  010e4: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00089 %14 = %14.[%15]                      [Array][Integer]
  010ef:    	sub    rsp,0x40
  010f3:    	movq   QWORD PTR [rsp],xmm2
  010f8:    	movq   QWORD PTR [rsp+0x8],xmm3
  010fe:    	movq   QWORD PTR [rsp+0x10],xmm4
  01104:    	movq   QWORD PTR [rsp+0x18],xmm5
  0110a:    	movq   QWORD PTR [rsp+0x20],xmm7
  01110: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01117: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0111e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01125: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  0112c: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01133:    	mov    rdi,rbx
  01136:    	mov    rsi,r12
  01139: 34 	movabs r8,0x563439851af8
  01143: 34 	movabs rax,0x563437f47370
  0114d:    	call   rax
  0114f:    	movq   xmm2,QWORD PTR [rsp]
  01154:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0115a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01160:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01166:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0116c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01173: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0117a: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01181:    	add    rsp,0x40
  01185: 34 	movabs r13,0x563439851b00
  0118f:    	test   rax,rax
  01192:    	je     0xffff15a3
  01198: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %13 = %14.call z()                   [Vec]
  0119f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  011a6: 00 	test   rdi,0x7
  011ad:    	jne    0x39149
  011b3:    	cmp    DWORD PTR [rdi+0x4],0x28
  011b7:    	jne    0x39149
  011bd: 26 	cmp    DWORD PTR [rip+0xffffffffffff2f9d],0x26        # 0xffff4161
  011c4:    	jne    0x39149
  011ca:    	mov    esi,DWORD PTR [rip+0x1354]        # 0x2524
  011d0:    	cmp    esi,0xffffffff
  011d3:    	je     0x391a9
  011d9:    	cmp    WORD PTR [rdi+0x2],0x3
  011de:    	jne    0x11f7
  011e4:    	cmp    esi,0x6
  011e7:    	jge    0x11f7
  011ed:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  011f2:    	jmp    0x1263
  011f7:    	sub    rsp,0x40
  011fb:    	movq   QWORD PTR [rsp],xmm2
  01200:    	movq   QWORD PTR [rsp+0x8],xmm4
  01206:    	movq   QWORD PTR [rsp+0x10],xmm5
  0120c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01212: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01219: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01220: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01227: 34 	movabs rax,0x563437ed0590
  01231:    	call   rax
  01233:    	movq   xmm2,QWORD PTR [rsp]
  01238:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0123e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01244:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0124a: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01251: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01258: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  0125f:    	add    rsp,0x40
  01263: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %13 = %4 * %13                       [Float][Float]
  0126a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01271: 00 	test   rdi,0x1
  01278:    	jne    0x39232
  0127e: 00 	test   rdi,0x2
  01285:    	je     0x12c1
  0128b:    	xorps  xmm3,xmm3
  0128e: 00 	movabs rax,0x8000000000000002
  01298:    	cmp    rdi,rax
  0129b:    	je     0x12d3
  012a1:    	mov    rax,rdi
  012a4:    	sar    rax,0x3f
  012a8:    	add    rax,0x2
  012ac:    	and    rdi,0xfffffffffffffffc
  012b0:    	or     rdi,rax
  012b3:    	rol    rdi,0x3d
  012b7:    	movq   xmm3,rdi
  012bc:    	jmp    0x12d3
  012c1:    	call   0xffff15fc
  012c6:    	test   rax,rax
  012c9:    	je     0x39232
  012cf:    	movq   xmm3,xmm0
  012d3:    	mulsd  xmm3,xmm7
:00094 %15 = dynvar(2, %2)
  012d7:    	mov    rax,QWORD PTR [rbp-0x10]
  012db:    	mov    rax,QWORD PTR [rax]
  012de:    	mov    rax,QWORD PTR [rax-0x28]
  012e2: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00095 %16 = 1: i32
  012e9: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00096 %15 = %15.[%16]                      [Array][Integer]
  012f4:    	sub    rsp,0x40
  012f8:    	movq   QWORD PTR [rsp],xmm2
  012fd:    	movq   QWORD PTR [rsp+0x8],xmm3
  01303:    	movq   QWORD PTR [rsp+0x10],xmm4
  01309:    	movq   QWORD PTR [rsp+0x18],xmm5
  0130f:    	movq   QWORD PTR [rsp+0x20],xmm7
  01315: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0131c: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01323: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0132a: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01331: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01338:    	mov    rdi,rbx
  0133b:    	mov    rsi,r12
  0133e: 34 	movabs r8,0x563439851b68
  01348: 34 	movabs rax,0x563437f47370
  01352:    	call   rax
  01354:    	movq   xmm2,QWORD PTR [rsp]
  01359:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0135f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01365:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0136b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01371: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01378: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0137f: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01386:    	add    rsp,0x40
  0138a: 34 	movabs r13,0x563439851b70
  01394:    	test   rax,rax
  01397:    	je     0xffff15a3
  0139d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %14 = %15.call z()                   [Vec]
  013a4: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  013ab: 00 	test   rdi,0x7
  013b2:    	jne    0x39292
  013b8:    	cmp    DWORD PTR [rdi+0x4],0x28
  013bc:    	jne    0x39292
  013c2: 26 	cmp    DWORD PTR [rip+0xffffffffffff2d98],0x26        # 0xffff4161
  013c9:    	jne    0x39292
  013cf:    	mov    esi,DWORD PTR [rip+0x1157]        # 0x252c
  013d5:    	cmp    esi,0xffffffff
  013d8:    	je     0x39302
  013de:    	cmp    WORD PTR [rdi+0x2],0x3
  013e3:    	jne    0x13fc
  013e9:    	cmp    esi,0x6
  013ec:    	jge    0x13fc
  013f2:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  013f7:    	jmp    0x1474
  013fc:    	sub    rsp,0x40
  01400:    	movq   QWORD PTR [rsp],xmm2
  01405:    	movq   QWORD PTR [rsp+0x8],xmm3
  0140b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01411:    	movq   QWORD PTR [rsp+0x18],xmm5
  01417:    	movq   QWORD PTR [rsp+0x20],xmm7
  0141d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01424: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0142b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01432: 34 	movabs rax,0x563437ed0590
  0143c:    	call   rax
  0143e:    	movq   xmm2,QWORD PTR [rsp]
  01443:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01449:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0144f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01455:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0145b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01462: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01469: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01470:    	add    rsp,0x40
  01474: ff 	mov    QWORD PTR [rbp-0x98],rax
:00098 
:00100 %14 = %5 * %14                       [Float][Float]
  0147b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01482: 00 	test   rdi,0x1
  01489:    	jne    0x39397
  0148f: 00 	test   rdi,0x2
  01496:    	je     0x14d2
  0149c:    	xorps  xmm6,xmm6
  0149f: 00 	movabs rax,0x8000000000000002
  014a9:    	cmp    rdi,rax
  014ac:    	je     0x14e4
  014b2:    	mov    rax,rdi
  014b5:    	sar    rax,0x3f
  014b9:    	add    rax,0x2
  014bd:    	and    rdi,0xfffffffffffffffc
  014c1:    	or     rdi,rax
  014c4:    	rol    rdi,0x3d
  014c8:    	movq   xmm6,rdi
  014cd:    	jmp    0x14e4
  014d2:    	call   0xffff15fc
  014d7:    	test   rax,rax
  014da:    	je     0x39397
  014e0:    	movq   xmm6,xmm0
  014e4:    	mulsd  xmm6,xmm8
:00101 %13 = %13 + %14                      [Float][Float]
  014e9:    	addsd  xmm3,xmm6
:00102 %15 = dynvar(2, %2)
  014ed:    	mov    rax,QWORD PTR [rbp-0x10]
  014f1:    	mov    rax,QWORD PTR [rax]
  014f4:    	mov    rax,QWORD PTR [rax-0x28]
  014f8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00103 %16 = 2: i32
  014ff: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00104 %15 = %15.[%16]                      [Array][Integer]
  0150a:    	sub    rsp,0x50
  0150e:    	movq   QWORD PTR [rsp],xmm2
  01513:    	movq   QWORD PTR [rsp+0x8],xmm3
  01519:    	movq   QWORD PTR [rsp+0x10],xmm4
  0151f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01525:    	movq   QWORD PTR [rsp+0x20],xmm6
  0152b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01531: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01538: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0153f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01546: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  0154d: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01554:    	mov    rdi,rbx
  01557:    	mov    rsi,r12
  0155a: 34 	movabs r8,0x563439851be8
  01564: 34 	movabs rax,0x563437f47370
  0156e:    	call   rax
  01570:    	movq   xmm2,QWORD PTR [rsp]
  01575:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0157b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01581:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01587:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0158d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01593: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0159a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015a1: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015a8:    	add    rsp,0x50
  015ac: 34 	movabs r13,0x563439851bf0
  015b6:    	test   rax,rax
  015b9:    	je     0xffff15a3
  015bf: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00105 %14 = %15.call z()                   [Vec]
  015c6: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  015cd: 00 	test   rdi,0x7
  015d4:    	jne    0x39407
  015da:    	cmp    DWORD PTR [rdi+0x4],0x28
  015de:    	jne    0x39407
  015e4: 26 	cmp    DWORD PTR [rip+0xffffffffffff2b76],0x26        # 0xffff4161
  015eb:    	jne    0x39407
  015f1:    	mov    esi,DWORD PTR [rip+0xf3d]        # 0x2534
  015f7:    	cmp    esi,0xffffffff
  015fa:    	je     0x39477
  01600:    	cmp    WORD PTR [rdi+0x2],0x3
  01605:    	jne    0x161e
  0160b:    	cmp    esi,0x6
  0160e:    	jge    0x161e
  01614:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01619:    	jmp    0x1696
  0161e:    	sub    rsp,0x40
  01622:    	movq   QWORD PTR [rsp],xmm2
  01627:    	movq   QWORD PTR [rsp+0x8],xmm3
  0162d:    	movq   QWORD PTR [rsp+0x10],xmm4
  01633:    	movq   QWORD PTR [rsp+0x18],xmm5
  01639:    	movq   QWORD PTR [rsp+0x20],xmm7
  0163f: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01646: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0164d: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01654: 34 	movabs rax,0x563437ed0590
  0165e:    	call   rax
  01660:    	movq   xmm2,QWORD PTR [rsp]
  01665:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0166b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01671:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01677:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0167d: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01684: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0168b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01692:    	add    rsp,0x40
  01696: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 
:00108 %14 = %6 * %14                       [Float][Float]
  0169d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  016a4: 00 	test   rdi,0x1
  016ab:    	jne    0x3950c
  016b1: 00 	test   rdi,0x2
  016b8:    	je     0x16f4
  016be:    	xorps  xmm6,xmm6
  016c1: 00 	movabs rax,0x8000000000000002
  016cb:    	cmp    rdi,rax
  016ce:    	je     0x1706
  016d4:    	mov    rax,rdi
  016d7:    	sar    rax,0x3f
  016db:    	add    rax,0x2
  016df:    	and    rdi,0xfffffffffffffffc
  016e3:    	or     rdi,rax
  016e6:    	rol    rdi,0x3d
  016ea:    	movq   xmm6,rdi
  016ef:    	jmp    0x1706
  016f4:    	call   0xffff15fc
  016f9:    	test   rax,rax
  016fc:    	je     0x3950c
  01702:    	movq   xmm6,xmm0
  01706:    	mulsd  xmm6,xmm2
:00109 %9 = %13 + %14                       [Float][Float]
  0170a:    	movq   xmm11,xmm3
  0170f:    	addsd  xmm11,xmm6
:00110 %13 = const[Vec]                     [Vec]
  01714: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff2a4d]        # 0xffff4168
  0171b: 00 	cmp    rax,QWORD PTR [rip+0xe26]        # 0x2548
  01722:    	jne    0x3957c
  01728: 00 	mov    rax,QWORD PTR [rip+0xe09]        # 0x2538
  0172f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00111 %14 = %7
:00112 %15 = %8
:00113 %16 = %9
:00114 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  01736:    	movq   xmm0,xmm9
  0173b:    	call   0xffff16ef
  01740: ff 	mov    QWORD PTR [rbp-0x98],rax
  01747:    	movq   xmm0,xmm10
  0174c:    	call   0xffff16ef
  01751: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01758:    	movq   xmm0,xmm11
  0175d:    	call   0xffff16ef
  01762: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01769: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01770: 00 	test   rdi,0x7
  01777:    	jne    0x3963c
  0177d:    	cmp    DWORD PTR [rdi+0x4],0x29
  01781:    	jne    0x3963c
  01787: 26 	cmp    DWORD PTR [rip+0xffffffffffff29d3],0x26        # 0xffff4161
  0178e:    	jne    0x3963c
  01794: 00 	mov    r9,0x0
  0179b:    	sub    rsp,0x40
  0179f:    	movq   QWORD PTR [rsp],xmm2
  017a4:    	movq   QWORD PTR [rsp+0x8],xmm4
  017aa:    	movq   QWORD PTR [rsp+0x10],xmm5
  017b0:    	movq   QWORD PTR [rsp+0x18],xmm7
  017b6: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  017bd: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  017c4: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  017cb: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  017d2:    	mov    rdx,rdi
  017d5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017de:    	mov    QWORD PTR [rsp-0x38],rcx
  017e3:    	mov    rax,QWORD PTR [rbx]
  017e6:    	lea    rdi,[rsp-0x18]
  017eb:    	mov    QWORD PTR [rdi],rax
  017ee:    	mov    QWORD PTR [rbx],rdi
  017f1: ff 	lea    rcx,[rbp-0x98]
  017f8: 00 	mov    r8,0x3
  017ff:    	call   0x396aa
  01804:    	lea    rdi,[rbp-0x8]
  01808:    	mov    QWORD PTR [rbx],rdi
  0180b:    	movq   xmm2,QWORD PTR [rsp]
  01810:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01816:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0181c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01822: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01829: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01830: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01837: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0183e:    	add    rsp,0x40
  01842: 34 	movabs r13,0x563439851ca0
  0184c:    	test   rax,rax
  0184f:    	je     0xffff15a3
  01855:    	mov    QWORD PTR [rbp-0x78],rax
:00115 
:00117 %13 = const[Ray]                     [Ray]
  01859: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff2908]        # 0xffff4168
  01860: 00 	cmp    rax,QWORD PTR [rip+0xd01]        # 0x2568
  01867:    	jne    0x396dc
  0186d: 00 	mov    rax,QWORD PTR [rip+0xce4]        # 0x2558
  01874: ff 	mov    QWORD PTR [rbp-0x90],rax
:00118 %14 = dynvar(2, %7)
  0187b:    	mov    rax,QWORD PTR [rbp-0x10]
  0187f:    	mov    rax,QWORD PTR [rax]
  01882:    	mov    rax,QWORD PTR [rax-0x50]
  01886: ff 	mov    QWORD PTR [rbp-0x98],rax
:00119 %15 = %10
  0188d:    	mov    rax,QWORD PTR [rbp-0x78]
  01891: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00120 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01898: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0189f: 00 	test   rdi,0x7
  018a6:    	jne    0x39790
  018ac:    	cmp    DWORD PTR [rdi+0x4],0x2f
  018b0:    	jne    0x39790
  018b6: 26 	cmp    DWORD PTR [rip+0xffffffffffff28a4],0x26        # 0xffff4161
  018bd:    	jne    0x39790
  018c3: 00 	mov    r9,0x0
  018ca:    	sub    rsp,0x40
  018ce:    	movq   QWORD PTR [rsp],xmm2
  018d3:    	movq   QWORD PTR [rsp+0x8],xmm4
  018d9:    	movq   QWORD PTR [rsp+0x10],xmm5
  018df:    	movq   QWORD PTR [rsp+0x18],xmm7
  018e5: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  018ec: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  018f3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  018fa: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01901:    	mov    rdx,rdi
  01904: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0190d:    	mov    QWORD PTR [rsp-0x38],rcx
  01912:    	mov    rax,QWORD PTR [rbx]
  01915:    	lea    rdi,[rsp-0x18]
  0191a:    	mov    QWORD PTR [rdi],rax
  0191d:    	mov    QWORD PTR [rbx],rdi
  01920: ff 	lea    rcx,[rbp-0x98]
  01927: 00 	mov    r8,0x2
  0192e:    	call   0x397fe
  01933:    	lea    rdi,[rbp-0x8]
  01937:    	mov    QWORD PTR [rbx],rdi
  0193a:    	movq   xmm2,QWORD PTR [rsp]
  0193f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01945:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0194b:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01951: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01958: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0195f: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01966: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0196d:    	add    rsp,0x40
  01971: 34 	movabs r13,0x563439851d00
  0197b:    	test   rax,rax
  0197e:    	je     0xffff15a3
  01984:    	mov    QWORD PTR [rbp-0x80],rax
:00121 
:00123 %13 = const[Isect]                   [Isect]
  01988: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff27d9]        # 0xffff4168
  0198f: 00 	cmp    rax,QWORD PTR [rip+0xbf2]        # 0x2588
  01996:    	jne    0x39830
  0199c: 00 	mov    rax,QWORD PTR [rip+0xbd5]        # 0x2578
  019a3: ff 	mov    QWORD PTR [rbp-0x90],rax
:00124 %12 = %13.call new()                 [#<Class:Isect>]
  019aa: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  019b1: 00 	test   rdi,0x7
  019b8:    	jne    0x398e4
  019be:    	cmp    DWORD PTR [rdi+0x4],0x31
  019c2:    	jne    0x398e4
  019c8: 26 	cmp    DWORD PTR [rip+0xffffffffffff2792],0x26        # 0xffff4161
  019cf:    	jne    0x398e4
  019d5: 00 	mov    r9,0x0
  019dc:    	sub    rsp,0x40
  019e0:    	movq   QWORD PTR [rsp],xmm2
  019e5:    	movq   QWORD PTR [rsp+0x8],xmm4
  019eb:    	movq   QWORD PTR [rsp+0x10],xmm5
  019f1:    	movq   QWORD PTR [rsp+0x18],xmm7
  019f7: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  019fe: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01a05: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01a0c: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01a13:    	mov    rdx,rdi
  01a16: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a1f:    	mov    QWORD PTR [rsp-0x38],rcx
  01a24:    	mov    rax,QWORD PTR [rbx]
  01a27:    	lea    rdi,[rsp-0x18]
  01a2c:    	mov    QWORD PTR [rdi],rax
  01a2f:    	mov    QWORD PTR [rbx],rdi
  01a32: ff 	lea    rcx,[rbp-0x98]
  01a39: 00 	mov    r8,0x0
  01a40:    	call   0x39952
  01a45:    	lea    rdi,[rbp-0x8]
  01a49:    	mov    QWORD PTR [rbx],rdi
  01a4c:    	movq   xmm2,QWORD PTR [rsp]
  01a51:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a57:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a5d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a63: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a6a: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a71: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a78: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a7f:    	add    rsp,0x40
  01a83: 34 	movabs r13,0x563439851d40
  01a8d:    	test   rax,rax
  01a90:    	je     0xffff15a3
  01a96: ff 	mov    QWORD PTR [rbp-0x88],rax
:00125 
:00127 %13 = @spheres: Scene[IvarId(0)]
  01a9d:    	mov    rdi,QWORD PTR [rbp-0x28]
  01aa1:    	mov    rax,QWORD PTR [rdi+0x10]
  01aa5: ff 	mov    QWORD PTR [rbp-0x90],rax
:00128 %14 = 0: i32
  01aac: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00129 %13 = %13.[%14]                      [Array][Integer]
  01ab7:    	sub    rsp,0x40
  01abb:    	movq   QWORD PTR [rsp],xmm2
  01ac0:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ac6:    	movq   QWORD PTR [rsp+0x10],xmm5
  01acc:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ad2: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ad9: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ae0: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ae7: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01aee: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01af5: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01afc:    	mov    rdi,rbx
  01aff:    	mov    rsi,r12
  01b02: 34 	movabs r8,0x563439851d78
  01b0c: 34 	movabs rax,0x563437f47370
  01b16:    	call   rax
  01b18:    	movq   xmm2,QWORD PTR [rsp]
  01b1d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b23:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01b29:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b2f: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01b36: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01b3d: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01b44: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01b4b:    	add    rsp,0x40
  01b4f: 34 	movabs r13,0x563439851d80
  01b59:    	test   rax,rax
  01b5c:    	je     0xffff15a3
  01b62: ff 	mov    QWORD PTR [rbp-0x90],rax
:00130 %14 = %11
  01b69:    	mov    rax,QWORD PTR [rbp-0x80]
  01b6d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00131 %15 = %12
  01b74: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b7b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00132 _ = %13.call intersect(%14; 2)       [Sphere]
  01b82: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b89: 00 	test   rdi,0x7
  01b90:    	jne    0x39984
  01b96:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01b9a:    	jne    0x39984
  01ba0: 26 	cmp    DWORD PTR [rip+0xffffffffffff25ba],0x26        # 0xffff4161
  01ba7:    	jne    0x39984
  01bad:    	sub    rsp,0x40
  01bb1:    	movq   QWORD PTR [rsp],xmm2
  01bb6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bbc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01bc2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01bc8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01bcf: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01bd6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01bdd: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01be4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bed:    	mov    QWORD PTR [rsp-0x38],rcx
  01bf2:    	mov    rax,QWORD PTR [rbx]
  01bf5:    	lea    rdi,[rsp-0x18]
  01bfa:    	mov    QWORD PTR [rdi],rax
  01bfd:    	mov    QWORD PTR [rbx],rdi
  01c00: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01c07:    	mov    QWORD PTR [rsp-0x38],rax
  01c0c: 00 	mov    rdi,0x2
  01c13: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01c1a:    	mov    QWORD PTR [rsp-0x40],rax
  01c1f: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01c26:    	mov    QWORD PTR [rsp-0x48],rax
  01c2b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c34: 10 	movabs rax,0x1001000000046
  01c3e:    	mov    QWORD PTR [rsp-0x28],rax
  01c43: 34 	movabs r13,0x5634398536b0
  01c4d:    	call   0xffff4da2
  01c52:    	lea    rdi,[rbp-0x8]
  01c56:    	mov    QWORD PTR [rbx],rdi
  01c59:    	movq   xmm2,QWORD PTR [rsp]
  01c5e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c64:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c6a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c70: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c77: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c7e: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c85: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c8c:    	add    rsp,0x40
  01c90: 34 	movabs r13,0x563439851dc0
  01c9a:    	test   rax,rax
  01c9d:    	je     0xffff15a3
:00133 
:00135 %13 = @spheres: Scene[IvarId(0)]
  01ca3:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ca7:    	mov    rax,QWORD PTR [rdi+0x10]
  01cab: ff 	mov    QWORD PTR [rbp-0x90],rax
:00136 %14 = 1: i32
  01cb2: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00137 %13 = %13.[%14]                      [Array][Integer]
  01cbd:    	sub    rsp,0x40
  01cc1:    	movq   QWORD PTR [rsp],xmm2
  01cc6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ccc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01cd2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01cd8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01cdf: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ce6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ced: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01cf4: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01cfb: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01d02:    	mov    rdi,rbx
  01d05:    	mov    rsi,r12
  01d08: 34 	movabs r8,0x563439851df8
  01d12: 34 	movabs rax,0x563437f47370
  01d1c:    	call   rax
  01d1e:    	movq   xmm2,QWORD PTR [rsp]
  01d23:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d29:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01d2f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01d35: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01d3c: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01d43: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01d4a: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01d51:    	add    rsp,0x40
  01d55: 34 	movabs r13,0x563439851e00
  01d5f:    	test   rax,rax
  01d62:    	je     0xffff15a3
  01d68: ff 	mov    QWORD PTR [rbp-0x90],rax
:00138 %14 = %11
  01d6f:    	mov    rax,QWORD PTR [rbp-0x80]
  01d73: ff 	mov    QWORD PTR [rbp-0x98],rax
:00139 %15 = %12
  01d7a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01d81: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00140 _ = %13.call intersect(%14; 2)       [Sphere]
  01d88: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01d8f: 00 	test   rdi,0x7
  01d96:    	jne    0x399f2
  01d9c:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01da0:    	jne    0x399f2
  01da6: 26 	cmp    DWORD PTR [rip+0xffffffffffff23b4],0x26        # 0xffff4161
  01dad:    	jne    0x399f2
  01db3:    	sub    rsp,0x40
  01db7:    	movq   QWORD PTR [rsp],xmm2
  01dbc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01dc2:    	movq   QWORD PTR [rsp+0x10],xmm5
  01dc8:    	movq   QWORD PTR [rsp+0x18],xmm7
  01dce: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01dd5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ddc: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01de3: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01dea: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01df3:    	mov    QWORD PTR [rsp-0x38],rcx
  01df8:    	mov    rax,QWORD PTR [rbx]
  01dfb:    	lea    rdi,[rsp-0x18]
  01e00:    	mov    QWORD PTR [rdi],rax
  01e03:    	mov    QWORD PTR [rbx],rdi
  01e06: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01e0d:    	mov    QWORD PTR [rsp-0x38],rax
  01e12: 00 	mov    rdi,0x2
  01e19: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01e20:    	mov    QWORD PTR [rsp-0x40],rax
  01e25: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01e2c:    	mov    QWORD PTR [rsp-0x48],rax
  01e31: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01e3a: 10 	movabs rax,0x1001000000046
  01e44:    	mov    QWORD PTR [rsp-0x28],rax
  01e49: 34 	movabs r13,0x5634398536b0
  01e53:    	call   0xffff4da2
  01e58:    	lea    rdi,[rbp-0x8]
  01e5c:    	mov    QWORD PTR [rbx],rdi
  01e5f:    	movq   xmm2,QWORD PTR [rsp]
  01e64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e6a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e70:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e76: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e7d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e84: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e8b: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e92:    	add    rsp,0x40
  01e96: 34 	movabs r13,0x563439851e40
  01ea0:    	test   rax,rax
  01ea3:    	je     0xffff15a3
:00141 
:00143 %13 = @spheres: Scene[IvarId(0)]
  01ea9:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ead:    	mov    rax,QWORD PTR [rdi+0x10]
  01eb1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00144 %14 = 2: i32
  01eb8: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00145 %13 = %13.[%14]                      [Array][Integer]
  01ec3:    	sub    rsp,0x40
  01ec7:    	movq   QWORD PTR [rsp],xmm2
  01ecc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ed2:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ed8:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ede: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ee5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01eec: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ef3: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01efa: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01f01: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01f08:    	mov    rdi,rbx
  01f0b:    	mov    rsi,r12
  01f0e: 34 	movabs r8,0x563439851e78
  01f18: 34 	movabs rax,0x563437f47370
  01f22:    	call   rax
  01f24:    	movq   xmm2,QWORD PTR [rsp]
  01f29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01f2f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01f35:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01f3b: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01f42: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01f49: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01f50: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01f57:    	add    rsp,0x40
  01f5b: 34 	movabs r13,0x563439851e80
  01f65:    	test   rax,rax
  01f68:    	je     0xffff15a3
  01f6e: ff 	mov    QWORD PTR [rbp-0x90],rax
:00146 %14 = %11
  01f75:    	mov    rax,QWORD PTR [rbp-0x80]
  01f79: ff 	mov    QWORD PTR [rbp-0x98],rax
:00147 %15 = %12
  01f80: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01f87: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00148 _ = %13.call intersect(%14; 2)       [Sphere]
  01f8e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01f95: 00 	test   rdi,0x7
  01f9c:    	jne    0x39a60
  01fa2:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01fa6:    	jne    0x39a60
  01fac: 26 	cmp    DWORD PTR [rip+0xffffffffffff21ae],0x26        # 0xffff4161
  01fb3:    	jne    0x39a60
  01fb9:    	sub    rsp,0x40
  01fbd:    	movq   QWORD PTR [rsp],xmm2
  01fc2:    	movq   QWORD PTR [rsp+0x8],xmm4
  01fc8:    	movq   QWORD PTR [rsp+0x10],xmm5
  01fce:    	movq   QWORD PTR [rsp+0x18],xmm7
  01fd4: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01fdb: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01fe2: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01fe9: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ff0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01ff9:    	mov    QWORD PTR [rsp-0x38],rcx
  01ffe:    	mov    rax,QWORD PTR [rbx]
  02001:    	lea    rdi,[rsp-0x18]
  02006:    	mov    QWORD PTR [rdi],rax
  02009:    	mov    QWORD PTR [rbx],rdi
  0200c: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02013:    	mov    QWORD PTR [rsp-0x38],rax
  02018: 00 	mov    rdi,0x2
  0201f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02026:    	mov    QWORD PTR [rsp-0x40],rax
  0202b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02032:    	mov    QWORD PTR [rsp-0x48],rax
  02037: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02040: 10 	movabs rax,0x1001000000046
  0204a:    	mov    QWORD PTR [rsp-0x28],rax
  0204f: 34 	movabs r13,0x5634398536b0
  02059:    	call   0xffff4da2
  0205e:    	lea    rdi,[rbp-0x8]
  02062:    	mov    QWORD PTR [rbx],rdi
  02065:    	movq   xmm2,QWORD PTR [rsp]
  0206a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02070:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02076:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0207c: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02083: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0208a: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02091: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02098:    	add    rsp,0x40
  0209c: 34 	movabs r13,0x563439851ec0
  020a6:    	test   rax,rax
  020a9:    	je     0xffff15a3
:00149 
:00151 %13 = @plane: Scene[IvarId(1)]
  020af:    	mov    rdi,QWORD PTR [rbp-0x28]
  020b3:    	mov    rax,QWORD PTR [rdi+0x18]
  020b7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00152 %14 = %11
  020be:    	mov    rax,QWORD PTR [rbp-0x80]
  020c2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00153 %15 = %12
  020c9: ff 	mov    rax,QWORD PTR [rbp-0x88]
  020d0: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00154 _ = %13.call intersect(%14; 2)       [Plane]
  020d7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  020de: 00 	test   rdi,0x7
  020e5:    	jne    0x39ace
  020eb:    	cmp    DWORD PTR [rdi+0x4],0x2c
  020ef:    	jne    0x39ace
  020f5: 26 	cmp    DWORD PTR [rip+0xffffffffffff2065],0x26        # 0xffff4161
  020fc:    	jne    0x39ace
  02102:    	sub    rsp,0x40
  02106:    	movq   QWORD PTR [rsp],xmm2
  0210b:    	movq   QWORD PTR [rsp+0x8],xmm4
  02111:    	movq   QWORD PTR [rsp+0x10],xmm5
  02117:    	movq   QWORD PTR [rsp+0x18],xmm7
  0211d: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02124: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0212b: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02132: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02139: 00 	mov    QWORD PTR [rsp-0x20],0x0
  02142:    	mov    QWORD PTR [rsp-0x38],rcx
  02147:    	mov    rax,QWORD PTR [rbx]
  0214a:    	lea    rdi,[rsp-0x18]
  0214f:    	mov    QWORD PTR [rdi],rax
  02152:    	mov    QWORD PTR [rbx],rdi
  02155: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0215c:    	mov    QWORD PTR [rsp-0x38],rax
  02161: 00 	mov    rdi,0x2
  02168: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0216f:    	mov    QWORD PTR [rsp-0x40],rax
  02174: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0217b:    	mov    QWORD PTR [rsp-0x48],rax
  02180: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02189: 0e 	movabs rax,0x1000e00000048
  02193:    	mov    QWORD PTR [rsp-0x28],rax
  02198: 34 	movabs r13,0x563439855550
  021a2:    	call   0xffff53b0
  021a7:    	lea    rdi,[rbp-0x8]
  021ab:    	mov    QWORD PTR [rbx],rdi
  021ae:    	movq   xmm2,QWORD PTR [rsp]
  021b3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  021b9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  021bf:    	movq   xmm7,QWORD PTR [rsp+0x18]
  021c5: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  021cc: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  021d3: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  021da: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  021e1:    	add    rsp,0x40
  021e5: 34 	movabs r13,0x563439851f20
  021ef:    	test   rax,rax
  021f2:    	je     0xffff15a3
:00155 
:00157 %13 = %12.call hit()                 [Isect]
  021f8: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  021ff: 00 	test   rdi,0x7
  02206:    	jne    0x39b3c
  0220c:    	cmp    DWORD PTR [rdi+0x4],0x30
  02210:    	jne    0x39b3c
  02216: 26 	cmp    DWORD PTR [rip+0xffffffffffff1f44],0x26        # 0xffff4161
  0221d:    	jne    0x39b3c
  02223:    	mov    esi,DWORD PTR [rip+0x36b]        # 0x2594
  02229:    	cmp    esi,0xffffffff
  0222c:    	je     0x39baa
  02232:    	cmp    WORD PTR [rdi+0x2],0x3
  02237:    	jne    0x2250
  0223d:    	cmp    esi,0x6
  02240:    	jge    0x2250
  02246:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0224b:    	jmp    0x22ca
  02250:    	sub    rsp,0x40
  02254:    	movq   QWORD PTR [rsp],xmm2
  02259:    	movq   QWORD PTR [rsp+0x8],xmm4
  0225f:    	movq   QWORD PTR [rsp+0x10],xmm5
  02265:    	movq   QWORD PTR [rsp+0x18],xmm7
  0226b: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02272: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02279: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02280: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02287: 34 	movabs rax,0x563437ed0590
  02291:    	call   rax
  02293:    	movq   xmm2,QWORD PTR [rsp]
  02298:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0229e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  022a4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  022aa: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  022b1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  022b8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  022bf: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  022c6:    	add    rsp,0x40
  022ca: ff 	mov    QWORD PTR [rbp-0x90],rax
:00158 
:00160 condnotbr %13 =>:00166
  022d1: ff 	mov    rax,QWORD PTR [rbp-0x90]
  022d8:    	or     rax,0x10
  022dc:    	cmp    rax,0x14
  022e0:    	je     0x23f3
:00161 %13 = dynvar(2, %6)
  022e6:    	mov    rax,QWORD PTR [rbp-0x10]
  022ea:    	mov    rax,QWORD PTR [rax]
  022ed:    	mov    rax,QWORD PTR [rax-0x48]
  022f1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00162 %14 = literal[1.0]
  022f8: 00 	movq   xmm3,QWORD PTR [rip+0x298]        # 0x2598
  02300: 00 	movabs rax,0xff80000000000002
  0230a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00163 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  02311: 01 	sub    DWORD PTR [rip+0x288],0x1        # 0x25a0
  02318:    	je     0x39caf
  0231e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02325: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  0232c:    	sub    rsp,0x50
  02330:    	movq   QWORD PTR [rsp],xmm2
  02335:    	movq   QWORD PTR [rsp+0x8],xmm3
  0233b:    	movq   QWORD PTR [rsp+0x10],xmm4
  02341:    	movq   QWORD PTR [rsp+0x18],xmm5
  02347:    	movq   QWORD PTR [rsp+0x20],xmm7
  0234d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  02354: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0235b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  02362: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  02369:    	mov    rdx,rdi
  0236c:    	mov    rcx,rsi
  0236f:    	mov    rdi,rbx
  02372:    	mov    rsi,r12
  02375: 34 	movabs rax,0x563437f15c00
  0237f:    	call   rax
  02381:    	movq   xmm2,QWORD PTR [rsp]
  02386:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0238c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02392:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02398:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0239e: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  023a5: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  023ac: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  023b3: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  023ba:    	add    rsp,0x50
  023be: 34 	movabs r13,0x563439851fa0
  023c8:    	test   rax,rax
  023cb:    	je     0xffff15a3
  023d1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00164 dynvar(2, %6) = %13
  023d8:    	mov    rax,QWORD PTR [rbp-0x10]
  023dc:    	mov    rax,QWORD PTR [rax]
  023df: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  023e6:    	mov    QWORD PTR [rax-0x48],rdi
:00165 ret %13
  023ea: ff 	mov    rax,QWORD PTR [rbp-0x90]
  023f1:    	leave  
  023f2:    	ret    
:00166 %13 = literal[0.0]
  023f3: 00 	movq   xmm3,QWORD PTR [rip+0x1ad]        # 0x25a8
  023fb: 00 	movabs rax,0x8000000000000002
  02405: ff 	mov    QWORD PTR [rbp-0x90],rax
:00167 ret %13
  0240c: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02413:    	leave  
  02414:    	ret    
==> start whole compile: intersect FuncId(70) self_class:Sphere start:[00000] bytecode:0x5634398536b0
<== finished compile. elapsed:178.8µs
offset:Pos(69704) code: 7265 bytes  data: 399 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x37721
  00022:    	jmp    0x37721
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086: ff 	mov    QWORD PTR [rbp-0x98],rax
  0008d: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00094:    	mov    rdi,QWORD PTR [rbp-0x28]
  00098: 00 	test   rdi,0x7
  0009f:    	jne    0x37730
  000a5:    	cmp    DWORD PTR [rdi+0x4],0x2a
  000a9:    	jne    0x37730
:00000 init_method reg:16 arg:2 pos:2 req:2 stack_offset:11
:00001 %9 = %1.call org()                   [Ray]
  000af:    	mov    rdi,QWORD PTR [rbp-0x30]
  000b3: 00 	test   rdi,0x7
  000ba:    	jne    0x3773f
  000c0:    	cmp    DWORD PTR [rdi+0x4],0x2e
  000c4:    	jne    0x3773f
  000ca: 26 	cmp    DWORD PTR [rip+0xffffffffffff1ae0],0x26        # 0xffff1bb1
  000d1:    	jne    0x3773f
  000d7:    	mov    esi,DWORD PTR [rip+0x1b88]        # 0x1c65
  000dd:    	cmp    esi,0xffffffff
  000e0:    	je     0x3774e
  000e6:    	cmp    WORD PTR [rdi+0x2],0x3
  000eb:    	jne    0x104
  000f1:    	cmp    esi,0x6
  000f4:    	jge    0x104
  000fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000ff:    	jmp    0x110
  00104: 34 	movabs rax,0x563437ed0590
  0010e:    	call   rax
  00110:    	mov    QWORD PTR [rbp-0x70],rax
:00002 
:00004 %10 = @center: Sphere[IvarId(0)]
  00114:    	mov    rdi,QWORD PTR [rbp-0x28]
  00118:    	mov    rax,QWORD PTR [rdi+0x10]
  0011c:    	mov    QWORD PTR [rbp-0x78],rax
:00005 %3 = %9.call vsub(%10; 1)            [Vec]
  00120:    	mov    rdi,QWORD PTR [rbp-0x70]
  00124: 00 	test   rdi,0x7
  0012b:    	jne    0x37777
  00131:    	cmp    DWORD PTR [rdi+0x4],0x28
  00135:    	jne    0x37777
  0013b: 26 	cmp    DWORD PTR [rip+0xffffffffffff1a6f],0x26        # 0xffff1bb1
  00142:    	jne    0x37777
  00148: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00151:    	mov    QWORD PTR [rsp-0x38],rcx
  00156:    	mov    rax,QWORD PTR [rbx]
  00159:    	lea    rdi,[rsp-0x18]
  0015e:    	mov    QWORD PTR [rdi],rax
  00161:    	mov    QWORD PTR [rbx],rdi
  00164:    	mov    rax,QWORD PTR [rbp-0x70]
  00168:    	mov    QWORD PTR [rsp-0x38],rax
  0016d: 00 	mov    rdi,0x1
  00174:    	mov    rax,QWORD PTR [rbp-0x78]
  00178:    	mov    QWORD PTR [rsp-0x40],rax
  0017d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00186: 08 	movabs rax,0x800000040
  00190:    	mov    QWORD PTR [rsp-0x28],rax
  00195: 34 	movabs r13,0x563439872ba0
  0019f:    	call   0xffff2884
  001a4:    	lea    rdi,[rbp-0x8]
  001a8:    	mov    QWORD PTR [rbx],rdi
  001ab: 34 	movabs r13,0x563439853720
  001b5:    	test   rax,rax
  001b8:    	je     0xfffeeff3
  001be:    	mov    QWORD PTR [rbp-0x40],rax
:00006 
:00008 %9 = %1.call dir()                   [Ray]
  001c2:    	mov    rdi,QWORD PTR [rbp-0x30]
  001c6: 00 	test   rdi,0x7
  001cd:    	jne    0x37786
  001d3:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001d7:    	jne    0x37786
  001dd: 26 	cmp    DWORD PTR [rip+0xffffffffffff19cd],0x26        # 0xffff1bb1
  001e4:    	jne    0x37786
  001ea:    	mov    esi,DWORD PTR [rip+0x1a7d]        # 0x1c6d
  001f0:    	cmp    esi,0xffffffff
  001f3:    	je     0x37795
  001f9:    	cmp    WORD PTR [rdi+0x2],0x3
  001fe:    	jne    0x217
  00204:    	cmp    esi,0x6
  00207:    	jge    0x217
  0020d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00212:    	jmp    0x223
  00217: 34 	movabs rax,0x563437ed0590
  00221:    	call   rax
  00223:    	mov    QWORD PTR [rbp-0x70],rax
:00009 
:00011 %4 = %3.call vdot(%9; 1)             [Vec]
  00227:    	mov    rdi,QWORD PTR [rbp-0x40]
  0022b: 00 	test   rdi,0x7
  00232:    	jne    0x377be
  00238:    	cmp    DWORD PTR [rdi+0x4],0x28
  0023c:    	jne    0x377be
  00242: 26 	cmp    DWORD PTR [rip+0xffffffffffff1968],0x26        # 0xffff1bb1
  00249:    	jne    0x377be
  0024f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00258:    	mov    QWORD PTR [rsp-0x38],rcx
  0025d:    	mov    rax,QWORD PTR [rbx]
  00260:    	lea    rdi,[rsp-0x18]
  00265:    	mov    QWORD PTR [rdi],rax
  00268:    	mov    QWORD PTR [rbx],rdi
  0026b:    	mov    rax,QWORD PTR [rbp-0x40]
  0026f:    	mov    QWORD PTR [rsp-0x38],rax
  00274: 00 	mov    rdi,0x1
  0027b:    	mov    rax,QWORD PTR [rbp-0x70]
  0027f:    	mov    QWORD PTR [rsp-0x40],rax
  00284: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0028d: 05 	movabs rax,0x500000042
  00297:    	mov    QWORD PTR [rsp-0x28],rax
  0029c: 34 	movabs r13,0x563439877e20
  002a6:    	call   0xffff2916
  002ab:    	lea    rdi,[rbp-0x8]
  002af:    	mov    QWORD PTR [rbx],rdi
  002b2: 34 	movabs r13,0x563439853780
  002bc:    	test   rax,rax
  002bf:    	je     0xfffeeff3
  002c5:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %10 = %3
  002c9:    	mov    rax,QWORD PTR [rbp-0x40]
  002cd:    	mov    QWORD PTR [rbp-0x78],rax
:00015 %9 = %3.call vdot(%10; 1)            [Vec]
  002d1:    	mov    rdi,QWORD PTR [rbp-0x40]
  002d5: 00 	test   rdi,0x7
  002dc:    	jne    0x377cd
  002e2:    	cmp    DWORD PTR [rdi+0x4],0x28
  002e6:    	jne    0x377cd
  002ec: 26 	cmp    DWORD PTR [rip+0xffffffffffff18be],0x26        # 0xffff1bb1
  002f3:    	jne    0x377cd
  002f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00302:    	mov    QWORD PTR [rsp-0x38],rcx
  00307:    	mov    rax,QWORD PTR [rbx]
  0030a:    	lea    rdi,[rsp-0x18]
  0030f:    	mov    QWORD PTR [rdi],rax
  00312:    	mov    QWORD PTR [rbx],rdi
  00315:    	mov    rax,QWORD PTR [rbp-0x40]
  00319:    	mov    QWORD PTR [rsp-0x38],rax
  0031e: 00 	mov    rdi,0x1
  00325:    	mov    rax,QWORD PTR [rbp-0x78]
  00329:    	mov    QWORD PTR [rsp-0x40],rax
  0032e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00337: 05 	movabs rax,0x500000042
  00341:    	mov    QWORD PTR [rsp-0x28],rax
  00346: 34 	movabs r13,0x563439877e20
  00350:    	call   0xffff2916
  00355:    	lea    rdi,[rbp-0x8]
  00359:    	mov    QWORD PTR [rbx],rdi
  0035c: 34 	movabs r13,0x5634398537c0
  00366:    	test   rax,rax
  00369:    	je     0xfffeeff3
  0036f:    	mov    QWORD PTR [rbp-0x70],rax
:00016 
:00018 %10 = @radius: Sphere[IvarId(1)]
  00373:    	mov    rdi,QWORD PTR [rbp-0x28]
  00377:    	mov    rax,QWORD PTR [rdi+0x18]
  0037b:    	mov    QWORD PTR [rbp-0x78],rax
:00019 %11 = @radius: Sphere[IvarId(1)]
  0037f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00383:    	mov    rax,QWORD PTR [rdi+0x18]
  00387:    	mov    QWORD PTR [rbp-0x80],rax
:00020 %10 = %10 * %11                      [Float][Float]
  0038b:    	mov    rdi,QWORD PTR [rbp-0x78]
  0038f: 00 	test   rdi,0x1
  00396:    	jne    0x377dc
  0039c: 00 	test   rdi,0x2
  003a3:    	je     0x3df
  003a9:    	xorps  xmm2,xmm2
  003ac: 00 	movabs rax,0x8000000000000002
  003b6:    	cmp    rdi,rax
  003b9:    	je     0x3f1
  003bf:    	mov    rax,rdi
  003c2:    	sar    rax,0x3f
  003c6:    	add    rax,0x2
  003ca:    	and    rdi,0xfffffffffffffffc
  003ce:    	or     rdi,rax
  003d1:    	rol    rdi,0x3d
  003d5:    	movq   xmm2,rdi
  003da:    	jmp    0x3f1
  003df:    	call   0xfffef04c
  003e4:    	test   rax,rax
  003e7:    	je     0x377dc
  003ed:    	movq   xmm2,xmm0
  003f1:    	mov    rdi,QWORD PTR [rbp-0x80]
  003f5: 00 	test   rdi,0x1
  003fc:    	jne    0x377eb
  00402: 00 	test   rdi,0x2
  00409:    	je     0x445
  0040f:    	xorps  xmm3,xmm3
  00412: 00 	movabs rax,0x8000000000000002
  0041c:    	cmp    rdi,rax
  0041f:    	je     0x457
  00425:    	mov    rax,rdi
  00428:    	sar    rax,0x3f
  0042c:    	add    rax,0x2
  00430:    	and    rdi,0xfffffffffffffffc
  00434:    	or     rdi,rax
  00437:    	rol    rdi,0x3d
  0043b:    	movq   xmm3,rdi
  00440:    	jmp    0x457
  00445:    	call   0xfffef04c
  0044a:    	test   rax,rax
  0044d:    	je     0x377eb
  00453:    	movq   xmm3,xmm0
  00457:    	mulsd  xmm2,xmm3
:00021 %5 = %9 - %10                        [Float][Float]
  0045b:    	mov    rdi,QWORD PTR [rbp-0x70]
  0045f: 00 	test   rdi,0x1
  00466:    	jne    0x377fa
  0046c: 00 	test   rdi,0x2
  00473:    	je     0x4af
  00479:    	xorps  xmm4,xmm4
  0047c: 00 	movabs rax,0x8000000000000002
  00486:    	cmp    rdi,rax
  00489:    	je     0x4c1
  0048f:    	mov    rax,rdi
  00492:    	sar    rax,0x3f
  00496:    	add    rax,0x2
  0049a:    	and    rdi,0xfffffffffffffffc
  0049e:    	or     rdi,rax
  004a1:    	rol    rdi,0x3d
  004a5:    	movq   xmm4,rdi
  004aa:    	jmp    0x4c1
  004af:    	call   0xfffef04c
  004b4:    	test   rax,rax
  004b7:    	je     0x377fa
  004bd:    	movq   xmm4,xmm0
  004c1:    	movq   xmm5,xmm4
  004c5:    	subsd  xmm5,xmm2
:00022 %9 = %4 * %4                         [Float][Float]
  004c9:    	mov    rdi,QWORD PTR [rbp-0x48]
  004cd: 00 	test   rdi,0x1
  004d4:    	jne    0x37816
  004da: 00 	test   rdi,0x2
  004e1:    	je     0x51d
  004e7:    	xorps  xmm6,xmm6
  004ea: 00 	movabs rax,0x8000000000000002
  004f4:    	cmp    rdi,rax
  004f7:    	je     0x52f
  004fd:    	mov    rax,rdi
  00500:    	sar    rax,0x3f
  00504:    	add    rax,0x2
  00508:    	and    rdi,0xfffffffffffffffc
  0050c:    	or     rdi,rax
  0050f:    	rol    rdi,0x3d
  00513:    	movq   xmm6,rdi
  00518:    	jmp    0x52f
  0051d:    	call   0xfffef04c
  00522:    	test   rax,rax
  00525:    	je     0x37816
  0052b:    	movq   xmm6,xmm0
  0052f:    	movq   xmm4,xmm6
  00533:    	mulsd  xmm4,xmm6
:00023 %6 = %9 - %5                         [Float][Float]
  00537:    	movq   xmm7,xmm4
  0053b:    	subsd  xmm7,xmm5
:00024 %9 = literal[0.0]
  0053f: 00 	movq   xmm4,QWORD PTR [rip+0x1731]        # 0x1c78
  00547: 00 	movabs rax,0x8000000000000002
  00551:    	mov    QWORD PTR [rbp-0x70],rax
:00025 _%9 = %6 > %9                        [Float][Float]
:00026 condnotbr _%9 =>:00114
  00555:    	ucomisd xmm7,xmm4
  00559:    	jbe    0x38d83
:00027 %9 = %4
:00028 %9 = neg %9                          [Float]
  0055f:    	movq   xmm4,xmm6
  00563: 00 	xorps  xmm4,XMMWORD PTR [rip+0x171e]        # 0x1c88
:00029 %11 = const[Math]                    [Math]
  0056a: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff1647]        # 0xffff1bb8
  00571: 00 	cmp    rax,QWORD PTR [rip+0x1730]        # 0x1ca8
  00578:    	jne    0x3783f
  0057e: 00 	mov    rax,QWORD PTR [rip+0x1713]        # 0x1c98
  00585:    	mov    QWORD PTR [rbp-0x80],rax
:00030 %12 = %6
:00031 %10 = %11.call sqrt(%12; 1)          [#<Class:Math>]
  00589:    	mov    rdi,QWORD PTR [rbp-0x80]
  0058d: 00 	test   rdi,0x7
  00594:    	jne    0x378c7
  0059a:    	cmp    DWORD PTR [rdi+0x4],0x21
  0059e:    	jne    0x378c7
  005a4: 26 	cmp    DWORD PTR [rip+0xffffffffffff1606],0x26        # 0xffff1bb1
  005ab:    	jne    0x378c7
  005b1:    	sqrtsd xmm2,xmm7
:00032 
:00034 %7 = %9 - %10                        [Float][Float]
  005b5:    	movq   xmm3,xmm4
  005b9:    	subsd  xmm3,xmm2
:00035 %9 = literal[0.0]
  005bd: 00 	movq   xmm4,QWORD PTR [rip+0x16f3]        # 0x1cb8
  005c5: 00 	movabs rax,0x8000000000000002
  005cf:    	mov    QWORD PTR [rbp-0x70],rax
:00036 _%9 = %7 > %9                        [Float][Float]
:00037 condnotbr _%9 =>:00113
  005d3:    	ucomisd xmm3,xmm4
  005d7:    	jbe    0x38c43
:00038 %9 = %2.call t()                     [<INVALID>]
  005dd: 01 	sub    DWORD PTR [rip+0x16dc],0x1        # 0x1cc0
  005e4:    	je     0x3794e
  005ea:    	sub    rsp,0x30
  005ee:    	movq   QWORD PTR [rsp],xmm2
  005f3:    	movq   QWORD PTR [rsp+0x8],xmm3
  005f9:    	movq   QWORD PTR [rsp+0x10],xmm5
  005ff:    	movq   QWORD PTR [rsp+0x18],xmm6
  00605:    	movq   QWORD PTR [rsp+0x20],xmm7
  0060b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0060f: 34 	movabs rax,0x563437f53600
  00619:    	call   rax
  0061b:    	mov    r15d,eax
  0061e: 00 	cmp    r15d,DWORD PTR [rip+0x16a3]        # 0x1cc8
  00625:    	jne    0x37970
  0062b:    	mov    eax,DWORD PTR [rip+0xffffffffffff1580]        # 0xffff1bb1
  00631:    	cmp    DWORD PTR [rip+0x168d],eax        # 0x1cc4
  00637:    	jne    0x37970
  0063d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00646:    	mov    QWORD PTR [rsp-0x38],rcx
  0064b:    	mov    rax,QWORD PTR [rbx]
  0064e:    	lea    rdi,[rsp-0x18]
  00653:    	mov    QWORD PTR [rdi],rax
  00656:    	mov    QWORD PTR [rbx],rdi
  00659:    	mov    rax,QWORD PTR [rbp-0x38]
  0065d:    	mov    QWORD PTR [rsp-0x38],rax
  00662: 00 	mov    rdi,0x0
  00669: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00672: 00 	movabs rax,0x0
  0067c:    	mov    QWORD PTR [rsp-0x28],rax
  00681: 00 	movabs r13,0x0
  0068b:    	call   0xfffeefb8
  00690:    	lea    rdi,[rbp-0x8]
  00694:    	mov    QWORD PTR [rbx],rdi
  00697:    	movq   xmm2,QWORD PTR [rsp]
  0069c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006a2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006a8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006ae:    	movq   xmm7,QWORD PTR [rsp+0x20]
  006b4:    	add    rsp,0x30
  006b8:    	test   rax,rax
  006bb:    	je     0x379dc
  006c1:    	mov    QWORD PTR [rbp-0x70],rax
:00039 
:00041 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00042 condnotbr _%9 =>:00113
  006c5:    	movq   xmm0,xmm3
  006c9:    	call   0xfffef13f
  006ce:    	mov    QWORD PTR [rbp-0x60],rax
  006d2:    	mov    rdi,QWORD PTR [rbp-0x60]
  006d6:    	mov    rsi,QWORD PTR [rbp-0x70]
  006da: 00 	test   rdi,0x1
  006e1:    	je     0x379eb
  006e7: 00 	test   rsi,0x1
  006ee:    	je     0x379eb
  006f4:    	cmp    rdi,rsi
  006f7:    	jge    0x38cd0
:00043 _ = %2.call t=(%7; 1)                [<INVALID>]
  006fd: 01 	sub    DWORD PTR [rip+0x15c8],0x1        # 0x1ccc
  00704:    	je     0x37a89
  0070a:    	sub    rsp,0x30
  0070e:    	movq   QWORD PTR [rsp],xmm2
  00713:    	movq   QWORD PTR [rsp+0x8],xmm3
  00719:    	movq   QWORD PTR [rsp+0x10],xmm5
  0071f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00725:    	movq   QWORD PTR [rsp+0x20],xmm7
  0072b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0072f: 34 	movabs rax,0x563437f53600
  00739:    	call   rax
  0073b:    	mov    r15d,eax
  0073e: 00 	cmp    r15d,DWORD PTR [rip+0x158f]        # 0x1cd4
  00745:    	jne    0x37aab
  0074b:    	mov    eax,DWORD PTR [rip+0xffffffffffff1460]        # 0xffff1bb1
  00751:    	cmp    DWORD PTR [rip+0x1579],eax        # 0x1cd0
  00757:    	jne    0x37aab
  0075d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00766:    	mov    QWORD PTR [rsp-0x38],rcx
  0076b:    	mov    rax,QWORD PTR [rbx]
  0076e:    	lea    rdi,[rsp-0x18]
  00773:    	mov    QWORD PTR [rdi],rax
  00776:    	mov    QWORD PTR [rbx],rdi
  00779:    	mov    rax,QWORD PTR [rbp-0x38]
  0077d:    	mov    QWORD PTR [rsp-0x38],rax
  00782: 00 	mov    rdi,0x1
  00789:    	mov    rax,QWORD PTR [rbp-0x60]
  0078d:    	mov    QWORD PTR [rsp-0x40],rax
  00792: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0079b: 00 	movabs rax,0x0
  007a5:    	mov    QWORD PTR [rsp-0x28],rax
  007aa: 00 	movabs r13,0x0
  007b4:    	call   0xfffeefb8
  007b9:    	lea    rdi,[rbp-0x8]
  007bd:    	mov    QWORD PTR [rbx],rdi
  007c0:    	movq   xmm2,QWORD PTR [rsp]
  007c5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007cb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007d1:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007d7:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007dd:    	add    rsp,0x30
  007e1:    	test   rax,rax
  007e4:    	je     0x37b17
:00044 
:00046 %9 = literal[true]
  007ea: 00 	mov    rax,0x1c
  007f1:    	mov    QWORD PTR [rbp-0x70],rax
:00047 _ = %2.call hit=(%9; 1)              [<INVALID>]
  007f5: 01 	sub    DWORD PTR [rip+0x14dc],0x1        # 0x1cd8
  007fc:    	je     0x37b63
  00802:    	sub    rsp,0x30
  00806:    	movq   QWORD PTR [rsp],xmm2
  0080b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00811:    	movq   QWORD PTR [rsp+0x10],xmm5
  00817:    	movq   QWORD PTR [rsp+0x18],xmm6
  0081d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00823:    	mov    rdi,QWORD PTR [rbp-0x38]
  00827: 34 	movabs rax,0x563437f53600
  00831:    	call   rax
  00833:    	mov    r15d,eax
  00836: 00 	cmp    r15d,DWORD PTR [rip+0x14a3]        # 0x1ce0
  0083d:    	jne    0x37b85
  00843:    	mov    eax,DWORD PTR [rip+0xffffffffffff1368]        # 0xffff1bb1
  00849:    	cmp    DWORD PTR [rip+0x148d],eax        # 0x1cdc
  0084f:    	jne    0x37b85
  00855: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0085e:    	mov    QWORD PTR [rsp-0x38],rcx
  00863:    	mov    rax,QWORD PTR [rbx]
  00866:    	lea    rdi,[rsp-0x18]
  0086b:    	mov    QWORD PTR [rdi],rax
  0086e:    	mov    QWORD PTR [rbx],rdi
  00871:    	mov    rax,QWORD PTR [rbp-0x38]
  00875:    	mov    QWORD PTR [rsp-0x38],rax
  0087a: 00 	mov    rdi,0x1
  00881:    	mov    rax,QWORD PTR [rbp-0x70]
  00885:    	mov    QWORD PTR [rsp-0x40],rax
  0088a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00893: 00 	movabs rax,0x0
  0089d:    	mov    QWORD PTR [rsp-0x28],rax
  008a2: 00 	movabs r13,0x0
  008ac:    	call   0xfffeefb8
  008b1:    	lea    rdi,[rbp-0x8]
  008b5:    	mov    QWORD PTR [rbx],rdi
  008b8:    	movq   xmm2,QWORD PTR [rsp]
  008bd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008c3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008c9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008cf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  008d5:    	add    rsp,0x30
  008d9:    	test   rax,rax
  008dc:    	je     0x37bf1
:00048 
:00050 %10 = const[Vec]                     [<INVALID>]
  008e2: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff12cf]        # 0xffff1bb8
  008e9: 00 	cmp    rax,QWORD PTR [rip+0x1408]        # 0x1cf8
  008f0:    	jne    0x37c00
  008f6: 00 	mov    rax,QWORD PTR [rip+0x13eb]        # 0x1ce8
  008fd:    	mov    QWORD PTR [rbp-0x78],rax
:00051 %12 = %1.call org()                  [<INVALID>]
  00901: 01 	sub    DWORD PTR [rip+0x13f8],0x1        # 0x1d00
  00908:    	je     0x37cac
  0090e:    	sub    rsp,0x20
  00912:    	movq   QWORD PTR [rsp],xmm3
  00917:    	movq   QWORD PTR [rsp+0x8],xmm5
  0091d:    	movq   QWORD PTR [rsp+0x10],xmm6
  00923:    	movq   QWORD PTR [rsp+0x18],xmm7
  00929:    	mov    rdi,QWORD PTR [rbp-0x30]
  0092d: 34 	movabs rax,0x563437f53600
  00937:    	call   rax
  00939:    	mov    r15d,eax
  0093c: 00 	cmp    r15d,DWORD PTR [rip+0x13c5]        # 0x1d08
  00943:    	jne    0x37cce
  00949:    	mov    eax,DWORD PTR [rip+0xffffffffffff1262]        # 0xffff1bb1
  0094f:    	cmp    DWORD PTR [rip+0x13af],eax        # 0x1d04
  00955:    	jne    0x37cce
  0095b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00964:    	mov    QWORD PTR [rsp-0x38],rcx
  00969:    	mov    rax,QWORD PTR [rbx]
  0096c:    	lea    rdi,[rsp-0x18]
  00971:    	mov    QWORD PTR [rdi],rax
  00974:    	mov    QWORD PTR [rbx],rdi
  00977:    	mov    rax,QWORD PTR [rbp-0x30]
  0097b:    	mov    QWORD PTR [rsp-0x38],rax
  00980: 00 	mov    rdi,0x0
  00987: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00990: 00 	movabs rax,0x0
  0099a:    	mov    QWORD PTR [rsp-0x28],rax
  0099f: 00 	movabs r13,0x0
  009a9:    	call   0xfffeefb8
  009ae:    	lea    rdi,[rbp-0x8]
  009b2:    	mov    QWORD PTR [rbx],rdi
  009b5:    	movq   xmm3,QWORD PTR [rsp]
  009ba:    	movq   xmm5,QWORD PTR [rsp+0x8]
  009c0:    	movq   xmm6,QWORD PTR [rsp+0x10]
  009c6:    	movq   xmm7,QWORD PTR [rsp+0x18]
  009cc:    	add    rsp,0x20
  009d0:    	test   rax,rax
  009d3:    	je     0x37d3a
  009d9: ff 	mov    QWORD PTR [rbp-0x88],rax
:00052 
:00054 %11 = %12.call x()                   [<INVALID>]
  009e0: 01 	sub    DWORD PTR [rip+0x1325],0x1        # 0x1d0c
  009e7:    	je     0x37d72
  009ed:    	sub    rsp,0x20
  009f1:    	movq   QWORD PTR [rsp],xmm3
  009f6:    	movq   QWORD PTR [rsp+0x8],xmm5
  009fc:    	movq   QWORD PTR [rsp+0x10],xmm6
  00a02:    	movq   QWORD PTR [rsp+0x18],xmm7
  00a08: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00a0f: 34 	movabs rax,0x563437f53600
  00a19:    	call   rax
  00a1b:    	mov    r15d,eax
  00a1e: 00 	cmp    r15d,DWORD PTR [rip+0x12ef]        # 0x1d14
  00a25:    	jne    0x37d94
  00a2b:    	mov    eax,DWORD PTR [rip+0xffffffffffff1180]        # 0xffff1bb1
  00a31:    	cmp    DWORD PTR [rip+0x12d9],eax        # 0x1d10
  00a37:    	jne    0x37d94
  00a3d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a46:    	mov    QWORD PTR [rsp-0x38],rcx
  00a4b:    	mov    rax,QWORD PTR [rbx]
  00a4e:    	lea    rdi,[rsp-0x18]
  00a53:    	mov    QWORD PTR [rdi],rax
  00a56:    	mov    QWORD PTR [rbx],rdi
  00a59: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00a60:    	mov    QWORD PTR [rsp-0x38],rax
  00a65: 00 	mov    rdi,0x0
  00a6c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a75: 00 	movabs rax,0x0
  00a7f:    	mov    QWORD PTR [rsp-0x28],rax
  00a84: 00 	movabs r13,0x0
  00a8e:    	call   0xfffeefb8
  00a93:    	lea    rdi,[rbp-0x8]
  00a97:    	mov    QWORD PTR [rbx],rdi
  00a9a:    	movq   xmm3,QWORD PTR [rsp]
  00a9f:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00aa5:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00aab:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ab1:    	add    rsp,0x20
  00ab5:    	test   rax,rax
  00ab8:    	je     0x37e03
  00abe:    	mov    QWORD PTR [rbp-0x80],rax
:00055 
:00057 %13 = %1.call dir()                  [<INVALID>]
  00ac2: 01 	sub    DWORD PTR [rip+0x124f],0x1        # 0x1d18
  00ac9:    	je     0x37e3b
  00acf:    	sub    rsp,0x20
  00ad3:    	movq   QWORD PTR [rsp],xmm3
  00ad8:    	movq   QWORD PTR [rsp+0x8],xmm5
  00ade:    	movq   QWORD PTR [rsp+0x10],xmm6
  00ae4:    	movq   QWORD PTR [rsp+0x18],xmm7
  00aea:    	mov    rdi,QWORD PTR [rbp-0x30]
  00aee: 34 	movabs rax,0x563437f53600
  00af8:    	call   rax
  00afa:    	mov    r15d,eax
  00afd: 00 	cmp    r15d,DWORD PTR [rip+0x121c]        # 0x1d20
  00b04:    	jne    0x37e5d
  00b0a:    	mov    eax,DWORD PTR [rip+0xffffffffffff10a1]        # 0xffff1bb1
  00b10:    	cmp    DWORD PTR [rip+0x1206],eax        # 0x1d1c
  00b16:    	jne    0x37e5d
  00b1c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b25:    	mov    QWORD PTR [rsp-0x38],rcx
  00b2a:    	mov    rax,QWORD PTR [rbx]
  00b2d:    	lea    rdi,[rsp-0x18]
  00b32:    	mov    QWORD PTR [rdi],rax
  00b35:    	mov    QWORD PTR [rbx],rdi
  00b38:    	mov    rax,QWORD PTR [rbp-0x30]
  00b3c:    	mov    QWORD PTR [rsp-0x38],rax
  00b41: 00 	mov    rdi,0x0
  00b48: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b51: 00 	movabs rax,0x0
  00b5b:    	mov    QWORD PTR [rsp-0x28],rax
  00b60: 00 	movabs r13,0x0
  00b6a:    	call   0xfffeefb8
  00b6f:    	lea    rdi,[rbp-0x8]
  00b73:    	mov    QWORD PTR [rbx],rdi
  00b76:    	movq   xmm3,QWORD PTR [rsp]
  00b7b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b81:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00b87:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b8d:    	add    rsp,0x20
  00b91:    	test   rax,rax
  00b94:    	je     0x37ec9
  00b9a: ff 	mov    QWORD PTR [rbp-0x90],rax
:00058 
:00060 %12 = %13.call x()                   [<INVALID>]
  00ba1: 01 	sub    DWORD PTR [rip+0x117c],0x1        # 0x1d24
  00ba8:    	je     0x37f01
  00bae:    	sub    rsp,0x20
  00bb2:    	movq   QWORD PTR [rsp],xmm3
  00bb7:    	movq   QWORD PTR [rsp+0x8],xmm5
  00bbd:    	movq   QWORD PTR [rsp+0x10],xmm6
  00bc3:    	movq   QWORD PTR [rsp+0x18],xmm7
  00bc9: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00bd0: 34 	movabs rax,0x563437f53600
  00bda:    	call   rax
  00bdc:    	mov    r15d,eax
  00bdf: 00 	cmp    r15d,DWORD PTR [rip+0x1146]        # 0x1d2c
  00be6:    	jne    0x37f23
  00bec:    	mov    eax,DWORD PTR [rip+0xffffffffffff0fbf]        # 0xffff1bb1
  00bf2:    	cmp    DWORD PTR [rip+0x1130],eax        # 0x1d28
  00bf8:    	jne    0x37f23
  00bfe: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c07:    	mov    QWORD PTR [rsp-0x38],rcx
  00c0c:    	mov    rax,QWORD PTR [rbx]
  00c0f:    	lea    rdi,[rsp-0x18]
  00c14:    	mov    QWORD PTR [rdi],rax
  00c17:    	mov    QWORD PTR [rbx],rdi
  00c1a: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00c21:    	mov    QWORD PTR [rsp-0x38],rax
  00c26: 00 	mov    rdi,0x0
  00c2d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c36: 00 	movabs rax,0x0
  00c40:    	mov    QWORD PTR [rsp-0x28],rax
  00c45: 00 	movabs r13,0x0
  00c4f:    	call   0xfffeefb8
  00c54:    	lea    rdi,[rbp-0x8]
  00c58:    	mov    QWORD PTR [rbx],rdi
  00c5b:    	movq   xmm3,QWORD PTR [rsp]
  00c60:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00c66:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00c6c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c72:    	add    rsp,0x20
  00c76:    	test   rax,rax
  00c79:    	je     0x37f92
  00c7f: ff 	mov    QWORD PTR [rbp-0x88],rax
:00061 
:00063 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00c86: 01 	sub    DWORD PTR [rip+0x10a3],0x1        # 0x1d30
  00c8d:    	je     0x37fca
  00c93: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00c9a:    	mov    rsi,QWORD PTR [rbp-0x60]
  00c9e:    	sub    rsp,0x20
  00ca2:    	movq   QWORD PTR [rsp],xmm3
  00ca7:    	movq   QWORD PTR [rsp+0x8],xmm5
  00cad:    	movq   QWORD PTR [rsp+0x10],xmm6
  00cb3:    	movq   QWORD PTR [rsp+0x18],xmm7
  00cb9:    	mov    rdx,rdi
  00cbc:    	mov    rcx,rsi
  00cbf:    	mov    rdi,rbx
  00cc2:    	mov    rsi,r12
  00cc5: 34 	movabs rax,0x563437f17b80
  00ccf:    	call   rax
  00cd1:    	movq   xmm3,QWORD PTR [rsp]
  00cd6:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00cdc:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00ce2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ce8:    	add    rsp,0x20
  00cec: 34 	movabs r13,0x563439853ab0
  00cf6:    	test   rax,rax
  00cf9:    	je     0xfffeeff3
  00cff: ff 	mov    QWORD PTR [rbp-0x88],rax
:00064 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00d06: 01 	sub    DWORD PTR [rip+0x1027],0x1        # 0x1d34
  00d0d:    	je     0x38015
  00d13:    	mov    rdi,QWORD PTR [rbp-0x80]
  00d17: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00d1e:    	sub    rsp,0x20
  00d22:    	movq   QWORD PTR [rsp],xmm3
  00d27:    	movq   QWORD PTR [rsp+0x8],xmm5
  00d2d:    	movq   QWORD PTR [rsp+0x10],xmm6
  00d33:    	movq   QWORD PTR [rsp+0x18],xmm7
  00d39:    	mov    rdx,rdi
  00d3c:    	mov    rcx,rsi
  00d3f:    	mov    rdi,rbx
  00d42:    	mov    rsi,r12
  00d45: 34 	movabs rax,0x563437f15c00
  00d4f:    	call   rax
  00d51:    	movq   xmm3,QWORD PTR [rsp]
  00d56:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00d5c:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00d62:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00d68:    	add    rsp,0x20
  00d6c: 34 	movabs r13,0x563439853ac0
  00d76:    	test   rax,rax
  00d79:    	je     0xfffeeff3
  00d7f:    	mov    QWORD PTR [rbp-0x80],rax
:00065 %13 = %1.call org()                  [<INVALID>]
  00d83: 01 	sub    DWORD PTR [rip+0xfae],0x1        # 0x1d38
  00d8a:    	je     0x38060
  00d90:    	sub    rsp,0x20
  00d94:    	movq   QWORD PTR [rsp],xmm3
  00d99:    	movq   QWORD PTR [rsp+0x8],xmm5
  00d9f:    	movq   QWORD PTR [rsp+0x10],xmm6
  00da5:    	movq   QWORD PTR [rsp+0x18],xmm7
  00dab:    	mov    rdi,QWORD PTR [rbp-0x30]
  00daf: 34 	movabs rax,0x563437f53600
  00db9:    	call   rax
  00dbb:    	mov    r15d,eax
  00dbe: 00 	cmp    r15d,DWORD PTR [rip+0xf7b]        # 0x1d40
  00dc5:    	jne    0x38082
  00dcb:    	mov    eax,DWORD PTR [rip+0xffffffffffff0de0]        # 0xffff1bb1
  00dd1:    	cmp    DWORD PTR [rip+0xf65],eax        # 0x1d3c
  00dd7:    	jne    0x38082
  00ddd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00de6:    	mov    QWORD PTR [rsp-0x38],rcx
  00deb:    	mov    rax,QWORD PTR [rbx]
  00dee:    	lea    rdi,[rsp-0x18]
  00df3:    	mov    QWORD PTR [rdi],rax
  00df6:    	mov    QWORD PTR [rbx],rdi
  00df9:    	mov    rax,QWORD PTR [rbp-0x30]
  00dfd:    	mov    QWORD PTR [rsp-0x38],rax
  00e02: 00 	mov    rdi,0x0
  00e09: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e12: 00 	movabs rax,0x0
  00e1c:    	mov    QWORD PTR [rsp-0x28],rax
  00e21: 00 	movabs r13,0x0
  00e2b:    	call   0xfffeefb8
  00e30:    	lea    rdi,[rbp-0x8]
  00e34:    	mov    QWORD PTR [rbx],rdi
  00e37:    	movq   xmm3,QWORD PTR [rsp]
  00e3c:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00e42:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00e48:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00e4e:    	add    rsp,0x20
  00e52:    	test   rax,rax
  00e55:    	je     0x380ee
  00e5b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00066 
:00068 %12 = %13.call y()                   [<INVALID>]
  00e62: 01 	sub    DWORD PTR [rip+0xedb],0x1        # 0x1d44
  00e69:    	je     0x38126
  00e6f:    	sub    rsp,0x20
  00e73:    	movq   QWORD PTR [rsp],xmm3
  00e78:    	movq   QWORD PTR [rsp+0x8],xmm5
  00e7e:    	movq   QWORD PTR [rsp+0x10],xmm6
  00e84:    	movq   QWORD PTR [rsp+0x18],xmm7
  00e8a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00e91: 34 	movabs rax,0x563437f53600
  00e9b:    	call   rax
  00e9d:    	mov    r15d,eax
  00ea0: 00 	cmp    r15d,DWORD PTR [rip+0xea5]        # 0x1d4c
  00ea7:    	jne    0x38148
  00ead:    	mov    eax,DWORD PTR [rip+0xffffffffffff0cfe]        # 0xffff1bb1
  00eb3:    	cmp    DWORD PTR [rip+0xe8f],eax        # 0x1d48
  00eb9:    	jne    0x38148
  00ebf: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ec8:    	mov    QWORD PTR [rsp-0x38],rcx
  00ecd:    	mov    rax,QWORD PTR [rbx]
  00ed0:    	lea    rdi,[rsp-0x18]
  00ed5:    	mov    QWORD PTR [rdi],rax
  00ed8:    	mov    QWORD PTR [rbx],rdi
  00edb: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00ee2:    	mov    QWORD PTR [rsp-0x38],rax
  00ee7: 00 	mov    rdi,0x0
  00eee: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ef7: 00 	movabs rax,0x0
  00f01:    	mov    QWORD PTR [rsp-0x28],rax
  00f06: 00 	movabs r13,0x0
  00f10:    	call   0xfffeefb8
  00f15:    	lea    rdi,[rbp-0x8]
  00f19:    	mov    QWORD PTR [rbx],rdi
  00f1c:    	movq   xmm3,QWORD PTR [rsp]
  00f21:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00f27:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00f2d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00f33:    	add    rsp,0x20
  00f37:    	test   rax,rax
  00f3a:    	je     0x381b7
  00f40: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = %1.call dir()                  [<INVALID>]
  00f47: 01 	sub    DWORD PTR [rip+0xe02],0x1        # 0x1d50
  00f4e:    	je     0x381ef
  00f54:    	sub    rsp,0x20
  00f58:    	movq   QWORD PTR [rsp],xmm3
  00f5d:    	movq   QWORD PTR [rsp+0x8],xmm5
  00f63:    	movq   QWORD PTR [rsp+0x10],xmm6
  00f69:    	movq   QWORD PTR [rsp+0x18],xmm7
  00f6f:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f73: 34 	movabs rax,0x563437f53600
  00f7d:    	call   rax
  00f7f:    	mov    r15d,eax
  00f82: 00 	cmp    r15d,DWORD PTR [rip+0xdcf]        # 0x1d58
  00f89:    	jne    0x38211
  00f8f:    	mov    eax,DWORD PTR [rip+0xffffffffffff0c1c]        # 0xffff1bb1
  00f95:    	cmp    DWORD PTR [rip+0xdb9],eax        # 0x1d54
  00f9b:    	jne    0x38211
  00fa1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00faa:    	mov    QWORD PTR [rsp-0x38],rcx
  00faf:    	mov    rax,QWORD PTR [rbx]
  00fb2:    	lea    rdi,[rsp-0x18]
  00fb7:    	mov    QWORD PTR [rdi],rax
  00fba:    	mov    QWORD PTR [rbx],rdi
  00fbd:    	mov    rax,QWORD PTR [rbp-0x30]
  00fc1:    	mov    QWORD PTR [rsp-0x38],rax
  00fc6: 00 	mov    rdi,0x0
  00fcd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fd6: 00 	movabs rax,0x0
  00fe0:    	mov    QWORD PTR [rsp-0x28],rax
  00fe5: 00 	movabs r13,0x0
  00fef:    	call   0xfffeefb8
  00ff4:    	lea    rdi,[rbp-0x8]
  00ff8:    	mov    QWORD PTR [rbx],rdi
  00ffb:    	movq   xmm3,QWORD PTR [rsp]
  01000:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01006:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0100c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01012:    	add    rsp,0x20
  01016:    	test   rax,rax
  01019:    	je     0x3827d
  0101f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 
:00074 %13 = %14.call y()                   [<INVALID>]
  01026: 01 	sub    DWORD PTR [rip+0xd2f],0x1        # 0x1d5c
  0102d:    	je     0x382b5
  01033:    	sub    rsp,0x20
  01037:    	movq   QWORD PTR [rsp],xmm3
  0103c:    	movq   QWORD PTR [rsp+0x8],xmm5
  01042:    	movq   QWORD PTR [rsp+0x10],xmm6
  01048:    	movq   QWORD PTR [rsp+0x18],xmm7
  0104e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01055: 34 	movabs rax,0x563437f53600
  0105f:    	call   rax
  01061:    	mov    r15d,eax
  01064: 00 	cmp    r15d,DWORD PTR [rip+0xcf9]        # 0x1d64
  0106b:    	jne    0x382d7
  01071:    	mov    eax,DWORD PTR [rip+0xffffffffffff0b3a]        # 0xffff1bb1
  01077:    	cmp    DWORD PTR [rip+0xce3],eax        # 0x1d60
  0107d:    	jne    0x382d7
  01083: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0108c:    	mov    QWORD PTR [rsp-0x38],rcx
  01091:    	mov    rax,QWORD PTR [rbx]
  01094:    	lea    rdi,[rsp-0x18]
  01099:    	mov    QWORD PTR [rdi],rax
  0109c:    	mov    QWORD PTR [rbx],rdi
  0109f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  010a6:    	mov    QWORD PTR [rsp-0x38],rax
  010ab: 00 	mov    rdi,0x0
  010b2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010bb: 00 	movabs rax,0x0
  010c5:    	mov    QWORD PTR [rsp-0x28],rax
  010ca: 00 	movabs r13,0x0
  010d4:    	call   0xfffeefb8
  010d9:    	lea    rdi,[rbp-0x8]
  010dd:    	mov    QWORD PTR [rbx],rdi
  010e0:    	movq   xmm3,QWORD PTR [rsp]
  010e5:    	movq   xmm5,QWORD PTR [rsp+0x8]
  010eb:    	movq   xmm6,QWORD PTR [rsp+0x10]
  010f1:    	movq   xmm7,QWORD PTR [rsp+0x18]
  010f7:    	add    rsp,0x20
  010fb:    	test   rax,rax
  010fe:    	je     0x38346
  01104: ff 	mov    QWORD PTR [rbp-0x90],rax
:00075 
:00077 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  0110b: 01 	sub    DWORD PTR [rip+0xc56],0x1        # 0x1d68
  01112:    	je     0x3837e
  01118: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0111f:    	mov    rsi,QWORD PTR [rbp-0x60]
  01123:    	sub    rsp,0x20
  01127:    	movq   QWORD PTR [rsp],xmm3
  0112c:    	movq   QWORD PTR [rsp+0x8],xmm5
  01132:    	movq   QWORD PTR [rsp+0x10],xmm6
  01138:    	movq   QWORD PTR [rsp+0x18],xmm7
  0113e:    	mov    rdx,rdi
  01141:    	mov    rcx,rsi
  01144:    	mov    rdi,rbx
  01147:    	mov    rsi,r12
  0114a: 34 	movabs rax,0x563437f17b80
  01154:    	call   rax
  01156:    	movq   xmm3,QWORD PTR [rsp]
  0115b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01161:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01167:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0116d:    	add    rsp,0x20
  01171: 34 	movabs r13,0x563439853b90
  0117b:    	test   rax,rax
  0117e:    	je     0xfffeeff3
  01184: ff 	mov    QWORD PTR [rbp-0x90],rax
:00078 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  0118b: 01 	sub    DWORD PTR [rip+0xbda],0x1        # 0x1d6c
  01192:    	je     0x383c9
  01198: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0119f: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  011a6:    	sub    rsp,0x20
  011aa:    	movq   QWORD PTR [rsp],xmm3
  011af:    	movq   QWORD PTR [rsp+0x8],xmm5
  011b5:    	movq   QWORD PTR [rsp+0x10],xmm6
  011bb:    	movq   QWORD PTR [rsp+0x18],xmm7
  011c1:    	mov    rdx,rdi
  011c4:    	mov    rcx,rsi
  011c7:    	mov    rdi,rbx
  011ca:    	mov    rsi,r12
  011cd: 34 	movabs rax,0x563437f15c00
  011d7:    	call   rax
  011d9:    	movq   xmm3,QWORD PTR [rsp]
  011de:    	movq   xmm5,QWORD PTR [rsp+0x8]
  011e4:    	movq   xmm6,QWORD PTR [rsp+0x10]
  011ea:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011f0:    	add    rsp,0x20
  011f4: 34 	movabs r13,0x563439853ba0
  011fe:    	test   rax,rax
  01201:    	je     0xfffeeff3
  01207: ff 	mov    QWORD PTR [rbp-0x88],rax
:00079 %14 = %1.call org()                  [<INVALID>]
  0120e: 01 	sub    DWORD PTR [rip+0xb5b],0x1        # 0x1d70
  01215:    	je     0x38414
  0121b:    	sub    rsp,0x20
  0121f:    	movq   QWORD PTR [rsp],xmm3
  01224:    	movq   QWORD PTR [rsp+0x8],xmm5
  0122a:    	movq   QWORD PTR [rsp+0x10],xmm6
  01230:    	movq   QWORD PTR [rsp+0x18],xmm7
  01236:    	mov    rdi,QWORD PTR [rbp-0x30]
  0123a: 34 	movabs rax,0x563437f53600
  01244:    	call   rax
  01246:    	mov    r15d,eax
  01249: 00 	cmp    r15d,DWORD PTR [rip+0xb28]        # 0x1d78
  01250:    	jne    0x38436
  01256:    	mov    eax,DWORD PTR [rip+0xffffffffffff0955]        # 0xffff1bb1
  0125c:    	cmp    DWORD PTR [rip+0xb12],eax        # 0x1d74
  01262:    	jne    0x38436
  01268: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01271:    	mov    QWORD PTR [rsp-0x38],rcx
  01276:    	mov    rax,QWORD PTR [rbx]
  01279:    	lea    rdi,[rsp-0x18]
  0127e:    	mov    QWORD PTR [rdi],rax
  01281:    	mov    QWORD PTR [rbx],rdi
  01284:    	mov    rax,QWORD PTR [rbp-0x30]
  01288:    	mov    QWORD PTR [rsp-0x38],rax
  0128d: 00 	mov    rdi,0x0
  01294: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0129d: 00 	movabs rax,0x0
  012a7:    	mov    QWORD PTR [rsp-0x28],rax
  012ac: 00 	movabs r13,0x0
  012b6:    	call   0xfffeefb8
  012bb:    	lea    rdi,[rbp-0x8]
  012bf:    	mov    QWORD PTR [rbx],rdi
  012c2:    	movq   xmm3,QWORD PTR [rsp]
  012c7:    	movq   xmm5,QWORD PTR [rsp+0x8]
  012cd:    	movq   xmm6,QWORD PTR [rsp+0x10]
  012d3:    	movq   xmm7,QWORD PTR [rsp+0x18]
  012d9:    	add    rsp,0x20
  012dd:    	test   rax,rax
  012e0:    	je     0x384a2
  012e6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 
:00082 %13 = %14.call z()                   [<INVALID>]
  012ed: 01 	sub    DWORD PTR [rip+0xa88],0x1        # 0x1d7c
  012f4:    	je     0x384da
  012fa:    	sub    rsp,0x20
  012fe:    	movq   QWORD PTR [rsp],xmm3
  01303:    	movq   QWORD PTR [rsp+0x8],xmm5
  01309:    	movq   QWORD PTR [rsp+0x10],xmm6
  0130f:    	movq   QWORD PTR [rsp+0x18],xmm7
  01315: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0131c: 34 	movabs rax,0x563437f53600
  01326:    	call   rax
  01328:    	mov    r15d,eax
  0132b: 00 	cmp    r15d,DWORD PTR [rip+0xa52]        # 0x1d84
  01332:    	jne    0x384fc
  01338:    	mov    eax,DWORD PTR [rip+0xffffffffffff0873]        # 0xffff1bb1
  0133e:    	cmp    DWORD PTR [rip+0xa3c],eax        # 0x1d80
  01344:    	jne    0x384fc
  0134a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01353:    	mov    QWORD PTR [rsp-0x38],rcx
  01358:    	mov    rax,QWORD PTR [rbx]
  0135b:    	lea    rdi,[rsp-0x18]
  01360:    	mov    QWORD PTR [rdi],rax
  01363:    	mov    QWORD PTR [rbx],rdi
  01366: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0136d:    	mov    QWORD PTR [rsp-0x38],rax
  01372: 00 	mov    rdi,0x0
  01379: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01382: 00 	movabs rax,0x0
  0138c:    	mov    QWORD PTR [rsp-0x28],rax
  01391: 00 	movabs r13,0x0
  0139b:    	call   0xfffeefb8
  013a0:    	lea    rdi,[rbp-0x8]
  013a4:    	mov    QWORD PTR [rbx],rdi
  013a7:    	movq   xmm3,QWORD PTR [rsp]
  013ac:    	movq   xmm5,QWORD PTR [rsp+0x8]
  013b2:    	movq   xmm6,QWORD PTR [rsp+0x10]
  013b8:    	movq   xmm7,QWORD PTR [rsp+0x18]
  013be:    	add    rsp,0x20
  013c2:    	test   rax,rax
  013c5:    	je     0x3856b
  013cb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00083 
:00085 %15 = %1.call dir()                  [<INVALID>]
  013d2: 01 	sub    DWORD PTR [rip+0x9af],0x1        # 0x1d88
  013d9:    	je     0x385a3
  013df:    	sub    rsp,0x20
  013e3:    	movq   QWORD PTR [rsp],xmm3
  013e8:    	movq   QWORD PTR [rsp+0x8],xmm5
  013ee:    	movq   QWORD PTR [rsp+0x10],xmm6
  013f4:    	movq   QWORD PTR [rsp+0x18],xmm7
  013fa:    	mov    rdi,QWORD PTR [rbp-0x30]
  013fe: 34 	movabs rax,0x563437f53600
  01408:    	call   rax
  0140a:    	mov    r15d,eax
  0140d: 00 	cmp    r15d,DWORD PTR [rip+0x97c]        # 0x1d90
  01414:    	jne    0x385c5
  0141a:    	mov    eax,DWORD PTR [rip+0xffffffffffff0791]        # 0xffff1bb1
  01420:    	cmp    DWORD PTR [rip+0x966],eax        # 0x1d8c
  01426:    	jne    0x385c5
  0142c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01435:    	mov    QWORD PTR [rsp-0x38],rcx
  0143a:    	mov    rax,QWORD PTR [rbx]
  0143d:    	lea    rdi,[rsp-0x18]
  01442:    	mov    QWORD PTR [rdi],rax
  01445:    	mov    QWORD PTR [rbx],rdi
  01448:    	mov    rax,QWORD PTR [rbp-0x30]
  0144c:    	mov    QWORD PTR [rsp-0x38],rax
  01451: 00 	mov    rdi,0x0
  01458: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01461: 00 	movabs rax,0x0
  0146b:    	mov    QWORD PTR [rsp-0x28],rax
  01470: 00 	movabs r13,0x0
  0147a:    	call   0xfffeefb8
  0147f:    	lea    rdi,[rbp-0x8]
  01483:    	mov    QWORD PTR [rbx],rdi
  01486:    	movq   xmm3,QWORD PTR [rsp]
  0148b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01491:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01497:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0149d:    	add    rsp,0x20
  014a1:    	test   rax,rax
  014a4:    	je     0x38631
  014aa: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00086 
:00088 %14 = %15.call z()                   [<INVALID>]
  014b1: 01 	sub    DWORD PTR [rip+0x8dc],0x1        # 0x1d94
  014b8:    	je     0x38669
  014be:    	sub    rsp,0x20
  014c2:    	movq   QWORD PTR [rsp],xmm3
  014c7:    	movq   QWORD PTR [rsp+0x8],xmm5
  014cd:    	movq   QWORD PTR [rsp+0x10],xmm6
  014d3:    	movq   QWORD PTR [rsp+0x18],xmm7
  014d9: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  014e0: 34 	movabs rax,0x563437f53600
  014ea:    	call   rax
  014ec:    	mov    r15d,eax
  014ef: 00 	cmp    r15d,DWORD PTR [rip+0x8a6]        # 0x1d9c
  014f6:    	jne    0x3868b
  014fc:    	mov    eax,DWORD PTR [rip+0xffffffffffff06af]        # 0xffff1bb1
  01502:    	cmp    DWORD PTR [rip+0x890],eax        # 0x1d98
  01508:    	jne    0x3868b
  0150e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01517:    	mov    QWORD PTR [rsp-0x38],rcx
  0151c:    	mov    rax,QWORD PTR [rbx]
  0151f:    	lea    rdi,[rsp-0x18]
  01524:    	mov    QWORD PTR [rdi],rax
  01527:    	mov    QWORD PTR [rbx],rdi
  0152a: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01531:    	mov    QWORD PTR [rsp-0x38],rax
  01536: 00 	mov    rdi,0x0
  0153d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01546: 00 	movabs rax,0x0
  01550:    	mov    QWORD PTR [rsp-0x28],rax
  01555: 00 	movabs r13,0x0
  0155f:    	call   0xfffeefb8
  01564:    	lea    rdi,[rbp-0x8]
  01568:    	mov    QWORD PTR [rbx],rdi
  0156b:    	movq   xmm3,QWORD PTR [rsp]
  01570:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01576:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0157c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01582:    	add    rsp,0x20
  01586:    	test   rax,rax
  01589:    	je     0x386fa
  0158f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 
:00091 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01596: 01 	sub    DWORD PTR [rip+0x803],0x1        # 0x1da0
  0159d:    	je     0x38732
  015a3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  015aa:    	mov    rsi,QWORD PTR [rbp-0x60]
  015ae:    	sub    rsp,0x20
  015b2:    	movq   QWORD PTR [rsp],xmm3
  015b7:    	movq   QWORD PTR [rsp+0x8],xmm5
  015bd:    	movq   QWORD PTR [rsp+0x10],xmm6
  015c3:    	movq   QWORD PTR [rsp+0x18],xmm7
  015c9:    	mov    rdx,rdi
  015cc:    	mov    rcx,rsi
  015cf:    	mov    rdi,rbx
  015d2:    	mov    rsi,r12
  015d5: 34 	movabs rax,0x563437f17b80
  015df:    	call   rax
  015e1:    	movq   xmm3,QWORD PTR [rsp]
  015e6:    	movq   xmm5,QWORD PTR [rsp+0x8]
  015ec:    	movq   xmm6,QWORD PTR [rsp+0x10]
  015f2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  015f8:    	add    rsp,0x20
  015fc: 34 	movabs r13,0x563439853c70
  01606:    	test   rax,rax
  01609:    	je     0xfffeeff3
  0160f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00092 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  01616: 01 	sub    DWORD PTR [rip+0x787],0x1        # 0x1da4
  0161d:    	je     0x3877d
  01623: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0162a: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  01631:    	sub    rsp,0x20
  01635:    	movq   QWORD PTR [rsp],xmm3
  0163a:    	movq   QWORD PTR [rsp+0x8],xmm5
  01640:    	movq   QWORD PTR [rsp+0x10],xmm6
  01646:    	movq   QWORD PTR [rsp+0x18],xmm7
  0164c:    	mov    rdx,rdi
  0164f:    	mov    rcx,rsi
  01652:    	mov    rdi,rbx
  01655:    	mov    rsi,r12
  01658: 34 	movabs rax,0x563437f15c00
  01662:    	call   rax
  01664:    	movq   xmm3,QWORD PTR [rsp]
  01669:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0166f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01675:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0167b:    	add    rsp,0x20
  0167f: 34 	movabs r13,0x563439853c80
  01689:    	test   rax,rax
  0168c:    	je     0xfffeeff3
  01692: ff 	mov    QWORD PTR [rbp-0x90],rax
:00093 %9 = %10.call new(%11; 3)            [<INVALID>]
  01699: 01 	sub    DWORD PTR [rip+0x708],0x1        # 0x1da8
  016a0:    	je     0x387c8
  016a6:    	sub    rsp,0x20
  016aa:    	movq   QWORD PTR [rsp],xmm3
  016af:    	movq   QWORD PTR [rsp+0x8],xmm5
  016b5:    	movq   QWORD PTR [rsp+0x10],xmm6
  016bb:    	movq   QWORD PTR [rsp+0x18],xmm7
  016c1:    	mov    rdi,QWORD PTR [rbp-0x78]
  016c5: 34 	movabs rax,0x563437f53600
  016cf:    	call   rax
  016d1:    	mov    r15d,eax
  016d4: 00 	cmp    r15d,DWORD PTR [rip+0x6d5]        # 0x1db0
  016db:    	jne    0x387ea
  016e1:    	mov    eax,DWORD PTR [rip+0xffffffffffff04ca]        # 0xffff1bb1
  016e7:    	cmp    DWORD PTR [rip+0x6bf],eax        # 0x1dac
  016ed:    	jne    0x387ea
  016f3: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016fc:    	mov    QWORD PTR [rsp-0x38],rcx
  01701:    	mov    rax,QWORD PTR [rbx]
  01704:    	lea    rdi,[rsp-0x18]
  01709:    	mov    QWORD PTR [rdi],rax
  0170c:    	mov    QWORD PTR [rbx],rdi
  0170f:    	mov    rax,QWORD PTR [rbp-0x78]
  01713:    	mov    QWORD PTR [rsp-0x38],rax
  01718: 00 	mov    rdi,0x3
  0171f:    	mov    rax,QWORD PTR [rbp-0x80]
  01723:    	mov    QWORD PTR [rsp-0x40],rax
  01728: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0172f:    	mov    QWORD PTR [rsp-0x48],rax
  01734: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0173b:    	mov    QWORD PTR [rsp-0x50],rax
  01740: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01749: 00 	movabs rax,0x0
  01753:    	mov    QWORD PTR [rsp-0x28],rax
  01758: 00 	movabs r13,0x0
  01762:    	call   0xfffeefb8
  01767:    	lea    rdi,[rbp-0x8]
  0176b:    	mov    QWORD PTR [rbx],rdi
  0176e:    	movq   xmm3,QWORD PTR [rsp]
  01773:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01779:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0177f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01785:    	add    rsp,0x20
  01789:    	test   rax,rax
  0178c:    	je     0x38856
  01792:    	mov    QWORD PTR [rbp-0x70],rax
:00094 
:00096 _ = %2.call pl=(%9; 1)               [<INVALID>]
  01796: 01 	sub    DWORD PTR [rip+0x617],0x1        # 0x1db4
  0179d:    	je     0x3888e
  017a3:    	sub    rsp,0x20
  017a7:    	movq   QWORD PTR [rsp],xmm3
  017ac:    	movq   QWORD PTR [rsp+0x8],xmm5
  017b2:    	movq   QWORD PTR [rsp+0x10],xmm6
  017b8:    	movq   QWORD PTR [rsp+0x18],xmm7
  017be:    	mov    rdi,QWORD PTR [rbp-0x38]
  017c2: 34 	movabs rax,0x563437f53600
  017cc:    	call   rax
  017ce:    	mov    r15d,eax
  017d1: 00 	cmp    r15d,DWORD PTR [rip+0x5e4]        # 0x1dbc
  017d8:    	jne    0x388b0
  017de:    	mov    eax,DWORD PTR [rip+0xffffffffffff03cd]        # 0xffff1bb1
  017e4:    	cmp    DWORD PTR [rip+0x5ce],eax        # 0x1db8
  017ea:    	jne    0x388b0
  017f0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017f9:    	mov    QWORD PTR [rsp-0x38],rcx
  017fe:    	mov    rax,QWORD PTR [rbx]
  01801:    	lea    rdi,[rsp-0x18]
  01806:    	mov    QWORD PTR [rdi],rax
  01809:    	mov    QWORD PTR [rbx],rdi
  0180c:    	mov    rax,QWORD PTR [rbp-0x38]
  01810:    	mov    QWORD PTR [rsp-0x38],rax
  01815: 00 	mov    rdi,0x1
  0181c:    	mov    rax,QWORD PTR [rbp-0x70]
  01820:    	mov    QWORD PTR [rsp-0x40],rax
  01825: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0182e: 00 	movabs rax,0x0
  01838:    	mov    QWORD PTR [rsp-0x28],rax
  0183d: 00 	movabs r13,0x0
  01847:    	call   0xfffeefb8
  0184c:    	lea    rdi,[rbp-0x8]
  01850:    	mov    QWORD PTR [rbx],rdi
  01853:    	movq   xmm3,QWORD PTR [rsp]
  01858:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0185e:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01864:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0186a:    	add    rsp,0x20
  0186e:    	test   rax,rax
  01871:    	je     0x3891c
:00097 
:00099 %9 = %2.call pl()                    [<INVALID>]
  01877: 01 	sub    DWORD PTR [rip+0x542],0x1        # 0x1dc0
  0187e:    	je     0x38954
  01884:    	sub    rsp,0x20
  01888:    	movq   QWORD PTR [rsp],xmm3
  0188d:    	movq   QWORD PTR [rsp+0x8],xmm5
  01893:    	movq   QWORD PTR [rsp+0x10],xmm6
  01899:    	movq   QWORD PTR [rsp+0x18],xmm7
  0189f:    	mov    rdi,QWORD PTR [rbp-0x38]
  018a3: 34 	movabs rax,0x563437f53600
  018ad:    	call   rax
  018af:    	mov    r15d,eax
  018b2: 00 	cmp    r15d,DWORD PTR [rip+0x50f]        # 0x1dc8
  018b9:    	jne    0x38976
  018bf:    	mov    eax,DWORD PTR [rip+0xffffffffffff02ec]        # 0xffff1bb1
  018c5:    	cmp    DWORD PTR [rip+0x4f9],eax        # 0x1dc4
  018cb:    	jne    0x38976
  018d1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018da:    	mov    QWORD PTR [rsp-0x38],rcx
  018df:    	mov    rax,QWORD PTR [rbx]
  018e2:    	lea    rdi,[rsp-0x18]
  018e7:    	mov    QWORD PTR [rdi],rax
  018ea:    	mov    QWORD PTR [rbx],rdi
  018ed:    	mov    rax,QWORD PTR [rbp-0x38]
  018f1:    	mov    QWORD PTR [rsp-0x38],rax
  018f6: 00 	mov    rdi,0x0
  018fd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01906: 00 	movabs rax,0x0
  01910:    	mov    QWORD PTR [rsp-0x28],rax
  01915: 00 	movabs r13,0x0
  0191f:    	call   0xfffeefb8
  01924:    	lea    rdi,[rbp-0x8]
  01928:    	mov    QWORD PTR [rbx],rdi
  0192b:    	movq   xmm3,QWORD PTR [rsp]
  01930:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01936:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0193c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01942:    	add    rsp,0x20
  01946:    	test   rax,rax
  01949:    	je     0x389e2
  0194f:    	mov    QWORD PTR [rbp-0x70],rax
:00100 
:00102 %10 = @center: <INVALID>[IvarId(0)]
  01953:    	mov    rdi,QWORD PTR [rbp-0x28]
  01957:    	sub    rsp,0x20
  0195b:    	movq   QWORD PTR [rsp],xmm3
  01960:    	movq   QWORD PTR [rsp+0x8],xmm5
  01966:    	movq   QWORD PTR [rsp+0x10],xmm6
  0196c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01972: 00 	mov    rsi,0x90
  01979:    	mov    rdx,r12
  0197c: 34 	movabs rax,0x563437f47590
  01986:    	call   rax
  01988:    	movq   xmm3,QWORD PTR [rsp]
  0198d:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01993:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01999:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0199f:    	add    rsp,0x20
  019a3:    	mov    QWORD PTR [rbp-0x78],rax
:00103 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  019a7: 01 	sub    DWORD PTR [rip+0x41e],0x1        # 0x1dcc
  019ae:    	je     0x38a1a
  019b4:    	sub    rsp,0x20
  019b8:    	movq   QWORD PTR [rsp],xmm3
  019bd:    	movq   QWORD PTR [rsp+0x8],xmm5
  019c3:    	movq   QWORD PTR [rsp+0x10],xmm6
  019c9:    	movq   QWORD PTR [rsp+0x18],xmm7
  019cf:    	mov    rdi,QWORD PTR [rbp-0x70]
  019d3: 34 	movabs rax,0x563437f53600
  019dd:    	call   rax
  019df:    	mov    r15d,eax
  019e2: 00 	cmp    r15d,DWORD PTR [rip+0x3eb]        # 0x1dd4
  019e9:    	jne    0x38a3c
  019ef:    	mov    eax,DWORD PTR [rip+0xffffffffffff01bc]        # 0xffff1bb1
  019f5:    	cmp    DWORD PTR [rip+0x3d5],eax        # 0x1dd0
  019fb:    	jne    0x38a3c
  01a01: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a0a:    	mov    QWORD PTR [rsp-0x38],rcx
  01a0f:    	mov    rax,QWORD PTR [rbx]
  01a12:    	lea    rdi,[rsp-0x18]
  01a17:    	mov    QWORD PTR [rdi],rax
  01a1a:    	mov    QWORD PTR [rbx],rdi
  01a1d:    	mov    rax,QWORD PTR [rbp-0x70]
  01a21:    	mov    QWORD PTR [rsp-0x38],rax
  01a26: 00 	mov    rdi,0x1
  01a2d:    	mov    rax,QWORD PTR [rbp-0x78]
  01a31:    	mov    QWORD PTR [rsp-0x40],rax
  01a36: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a3f: 00 	movabs rax,0x0
  01a49:    	mov    QWORD PTR [rsp-0x28],rax
  01a4e: 00 	movabs r13,0x0
  01a58:    	call   0xfffeefb8
  01a5d:    	lea    rdi,[rbp-0x8]
  01a61:    	mov    QWORD PTR [rbx],rdi
  01a64:    	movq   xmm3,QWORD PTR [rsp]
  01a69:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01a6f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01a75:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a7b:    	add    rsp,0x20
  01a7f:    	test   rax,rax
  01a82:    	je     0x38aa8
  01a88:    	mov    QWORD PTR [rbp-0x68],rax
:00104 
:00106 %9 = %8.call vnormalize()            [<INVALID>]
  01a8c: 01 	sub    DWORD PTR [rip+0x345],0x1        # 0x1dd8
  01a93:    	je     0x38ae0
  01a99:    	sub    rsp,0x20
  01a9d:    	movq   QWORD PTR [rsp],xmm3
  01aa2:    	movq   QWORD PTR [rsp+0x8],xmm5
  01aa8:    	movq   QWORD PTR [rsp+0x10],xmm6
  01aae:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ab4:    	mov    rdi,QWORD PTR [rbp-0x68]
  01ab8: 34 	movabs rax,0x563437f53600
  01ac2:    	call   rax
  01ac4:    	mov    r15d,eax
  01ac7: 00 	cmp    r15d,DWORD PTR [rip+0x312]        # 0x1de0
  01ace:    	jne    0x38b02
  01ad4:    	mov    eax,DWORD PTR [rip+0xffffffffffff00d7]        # 0xffff1bb1
  01ada:    	cmp    DWORD PTR [rip+0x2fc],eax        # 0x1ddc
  01ae0:    	jne    0x38b02
  01ae6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01aef:    	mov    QWORD PTR [rsp-0x38],rcx
  01af4:    	mov    rax,QWORD PTR [rbx]
  01af7:    	lea    rdi,[rsp-0x18]
  01afc:    	mov    QWORD PTR [rdi],rax
  01aff:    	mov    QWORD PTR [rbx],rdi
  01b02:    	mov    rax,QWORD PTR [rbp-0x68]
  01b06:    	mov    QWORD PTR [rsp-0x38],rax
  01b0b: 00 	mov    rdi,0x0
  01b12: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b1b: 00 	movabs rax,0x0
  01b25:    	mov    QWORD PTR [rsp-0x28],rax
  01b2a: 00 	movabs r13,0x0
  01b34:    	call   0xfffeefb8
  01b39:    	lea    rdi,[rbp-0x8]
  01b3d:    	mov    QWORD PTR [rbx],rdi
  01b40:    	movq   xmm3,QWORD PTR [rsp]
  01b45:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01b4b:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01b51:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b57:    	add    rsp,0x20
  01b5b:    	test   rax,rax
  01b5e:    	je     0x38b6e
  01b64:    	mov    QWORD PTR [rbp-0x70],rax
:00107 
:00109 _ = %2.call n=(%9; 1)                [<INVALID>]
  01b68: 01 	sub    DWORD PTR [rip+0x275],0x1        # 0x1de4
  01b6f:    	je     0x38ba6
  01b75:    	sub    rsp,0x20
  01b79:    	movq   QWORD PTR [rsp],xmm3
  01b7e:    	movq   QWORD PTR [rsp+0x8],xmm5
  01b84:    	movq   QWORD PTR [rsp+0x10],xmm6
  01b8a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01b90:    	mov    rdi,QWORD PTR [rbp-0x38]
  01b94: 34 	movabs rax,0x563437f53600
  01b9e:    	call   rax
  01ba0:    	mov    r15d,eax
  01ba3: 00 	cmp    r15d,DWORD PTR [rip+0x242]        # 0x1dec
  01baa:    	jne    0x38bc8
  01bb0:    	mov    eax,DWORD PTR [rip+0xfffffffffffefffb]        # 0xffff1bb1
  01bb6:    	cmp    DWORD PTR [rip+0x22c],eax        # 0x1de8
  01bbc:    	jne    0x38bc8
  01bc2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bcb:    	mov    QWORD PTR [rsp-0x38],rcx
  01bd0:    	mov    rax,QWORD PTR [rbx]
  01bd3:    	lea    rdi,[rsp-0x18]
  01bd8:    	mov    QWORD PTR [rdi],rax
  01bdb:    	mov    QWORD PTR [rbx],rdi
  01bde:    	mov    rax,QWORD PTR [rbp-0x38]
  01be2:    	mov    QWORD PTR [rsp-0x38],rax
  01be7: 00 	mov    rdi,0x1
  01bee:    	mov    rax,QWORD PTR [rbp-0x70]
  01bf2:    	mov    QWORD PTR [rsp-0x40],rax
  01bf7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c00: 00 	movabs rax,0x0
  01c0a:    	mov    QWORD PTR [rsp-0x28],rax
  01c0f: 00 	movabs r13,0x0
  01c19:    	call   0xfffeefb8
  01c1e:    	lea    rdi,[rbp-0x8]
  01c22:    	mov    QWORD PTR [rbx],rdi
  01c25:    	movq   xmm3,QWORD PTR [rsp]
  01c2a:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01c30:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01c36:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c3c:    	add    rsp,0x20
  01c40:    	test   rax,rax
  01c43:    	je     0x38c34
:00110 
:00112 br =>:00113
  01c49:    	jmp    0x38d50
:00113 br =>:00114
  01c4e:    	jmp    0x38dc3
:00114 %9 = nil
  01c53: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00115 ret %9
  01c5b:    	mov    rax,QWORD PTR [rbp-0x70]
  01c5f:    	leave  
  01c60:    	ret    
==> start whole compile: <unnamed> FuncId(78) self_class:Scene start:[00000] bytecode:0x56343982b480
<== finished compile. elapsed:30.1µs
offset:Pos(77368) code: 298 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: je     0x70
  00014: jl     0x1f
  0001a: jmp    0x70
  0001f: mov    eax,0x1
  00024: sub    eax,edx
  00026: test   rax,rax
  00029: je     0x45
  0002f: lea    rdi,[rbp-0x38]
  00033: mov    QWORD PTR [rdi+rax*8],0x4
  0003b: sub    rax,0x1
  0003f: jne    0x33
  00045: mov    edx,0x1
  0004a: mov    eax,0x1
  0004f: sub    eax,edx
  00051: test   rax,rax
  00054: je     0x70
  0005a: lea    rdi,[rbp-0x38]
  0005e: mov    QWORD PTR [rdi+rax*8],0x0
  00066: sub    rax,0x1
  0006a: jne    0x5e
  00070: mov    rax,0x4
  00077: mov    QWORD PTR [rbp-0x38],rax
  0007b: mov    QWORD PTR [rbp-0x40],rax
  0007f: mov    QWORD PTR [rbp-0x48],rax
  00083: mov    rdi,QWORD PTR [rbp-0x28]
  00087: test   rdi,0x7
  0008e: jne    0x37015
  00094: cmp    DWORD PTR [rdi+0x4],0x32
  00098: jne    0x37015
:00000 init_block reg:5 arg:1 pos:1 req:1 stack_offset:5
:00001 %3 = dynvar(1, %3)
  0009e: mov    rax,QWORD PTR [rbp-0x10]
  000a2: mov    rax,QWORD PTR [rax-0x30]
  000a6: mov    QWORD PTR [rbp-0x40],rax
:00002 %4 = literal[5242881]
  000aa: mov    rax,0xa00003
  000b1: mov    QWORD PTR [rbp-0x48],rax
:00003 %2 = %3.call times(&%4)              [Integer]
  000b5: mov    rdi,QWORD PTR [rbp-0x40]
  000b9: test   rdi,0x1
  000c0: je     0x37024
  000c6: cmp    DWORD PTR [rip+0xfffffffffffefcf4],0x26        # 0xfffefdc1
  000cd: jne    0x37024
  000d3: mov    r9,QWORD PTR [rbp-0x48]
  000d7: mov    rdx,rdi
  000da: mov    QWORD PTR [rsp-0x20],0x0
  000e3: mov    QWORD PTR [rsp-0x38],rcx
  000e8: mov    rax,QWORD PTR [rbx]
  000eb: lea    rdi,[rsp-0x18]
  000f0: mov    QWORD PTR [rdi],rax
  000f3: mov    QWORD PTR [rbx],rdi
  000f6: lea    rcx,[rbp-0x50]
  000fa: mov    r8,0x0
  00101: call   0x37033
  00106: lea    rdi,[rbp-0x8]
  0010a: mov    QWORD PTR [rbx],rdi
  0010d: movabs r13,0x56343982b4d0
  00117: test   rax,rax
  0011a: je     0xfffed203
  00120: mov    QWORD PTR [rbp-0x38],rax
:00004 
:00006 ret %2
  00124: mov    rax,QWORD PTR [rbp-0x38]
  00128: leave  
  00129: ret    
==> start whole compile: vcross FuncId(65) self_class:Vec start:[00000] bytecode:0x563439838e30
<== finished compile. elapsed:66.9µs
offset:Pos(77666) code: 2478 bytes  data: 72 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x70
  0000b: cmp    edx,0x1
  0000e: je     0x4a
  00014: jl     0x1f
  0001a: jmp    0x36f3b
  0001f: jmp    0x36f3b
  00024: mov    eax,0x1
  00029: sub    eax,edx
  0002b: test   rax,rax
  0002e: je     0x4a
  00034: lea    rdi,[rbp-0x38]
  00038: mov    QWORD PTR [rdi+rax*8],0x0
  00040: sub    rax,0x1
  00044: jne    0x38
  0004a: mov    rax,0x4
  00051: mov    QWORD PTR [rbp-0x38],rax
  00055: mov    QWORD PTR [rbp-0x40],rax
  00059: mov    QWORD PTR [rbp-0x48],rax
  0005d: mov    QWORD PTR [rbp-0x50],rax
  00061: mov    QWORD PTR [rbp-0x58],rax
  00065: mov    QWORD PTR [rbp-0x60],rax
  00069: mov    QWORD PTR [rbp-0x68],rax
  0006d: mov    rdi,QWORD PTR [rbp-0x28]
  00071: test   rdi,0x7
  00078: jne    0x36f4a
  0007e: cmp    DWORD PTR [rdi+0x4],0x28
  00082: jne    0x36f4a
:00000 init_method reg:9 arg:1 pos:1 req:1 stack_offset:7
:00001 %3 = const[Vec]                      [Vec]
  00088: mov    rax,QWORD PTR [rip+0xfffffffffffefc0f]        # 0xfffefc9e
  0008f: cmp    rax,QWORD PTR [rip+0x928]        # 0x9be
  00096: jne    0x36f59
  0009c: mov    rax,QWORD PTR [rip+0x90b]        # 0x9ae
  000a3: mov    QWORD PTR [rbp-0x40],rax
:00002 %4 = @y: Vec[IvarId(1)]
  000a7: mov    rdi,QWORD PTR [rbp-0x28]
  000ab: mov    rax,QWORD PTR [rdi+0x18]
  000af: mov    QWORD PTR [rbp-0x48],rax
:00003 %5 = %1.call z()                     [Vec]
  000b3: mov    rdi,QWORD PTR [rbp-0x30]
  000b7: test   rdi,0x7
  000be: jne    0x36f9f
  000c4: cmp    DWORD PTR [rdi+0x4],0x28
  000c8: jne    0x36f9f
  000ce: cmp    DWORD PTR [rip+0xfffffffffffefbc2],0x26        # 0xfffefc97
  000d5: jne    0x36f9f
  000db: mov    esi,DWORD PTR [rip+0x8e9]        # 0x9ca
  000e1: cmp    esi,0xffffffff
  000e4: je     0x36fae
  000ea: cmp    WORD PTR [rdi+0x2],0x3
  000ef: jne    0x108
  000f5: cmp    esi,0x6
  000f8: jge    0x108
  000fe: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00103: jmp    0x114
  00108: movabs rax,0x563437ed0590
  00112: call   rax
  00114: mov    QWORD PTR [rbp-0x50],rax
:00004 
:00006 %4 = %4 * %5                         [Float][Float]
  00118: mov    rdi,QWORD PTR [rbp-0x48]
  0011c: test   rdi,0x1
  00123: jne    0x36fd7
  00129: test   rdi,0x2
  00130: je     0x16c
  00136: xorps  xmm2,xmm2
  00139: movabs rax,0x8000000000000002
  00143: cmp    rdi,rax
  00146: je     0x17e
  0014c: mov    rax,rdi
  0014f: sar    rax,0x3f
  00153: add    rax,0x2
  00157: and    rdi,0xfffffffffffffffc
  0015b: or     rdi,rax
  0015e: rol    rdi,0x3d
  00162: movq   xmm2,rdi
  00167: jmp    0x17e
  0016c: call   0xfffed132
  00171: test   rax,rax
  00174: je     0x36fd7
  0017a: movq   xmm2,xmm0
  0017e: mov    rdi,QWORD PTR [rbp-0x50]
  00182: test   rdi,0x1
  00189: jne    0x36fe6
  0018f: test   rdi,0x2
  00196: je     0x1d2
  0019c: xorps  xmm3,xmm3
  0019f: movabs rax,0x8000000000000002
  001a9: cmp    rdi,rax
  001ac: je     0x1e4
  001b2: mov    rax,rdi
  001b5: sar    rax,0x3f
  001b9: add    rax,0x2
  001bd: and    rdi,0xfffffffffffffffc
  001c1: or     rdi,rax
  001c4: rol    rdi,0x3d
  001c8: movq   xmm3,rdi
  001cd: jmp    0x1e4
  001d2: call   0xfffed132
  001d7: test   rax,rax
  001da: je     0x36fe6
  001e0: movq   xmm3,xmm0
  001e4: mulsd  xmm2,xmm3
:00007 %5 = @z: Vec[IvarId(2)]
  001e8: mov    rdi,QWORD PTR [rbp-0x28]
  001ec: mov    rax,QWORD PTR [rdi+0x20]
  001f0: mov    QWORD PTR [rbp-0x50],rax
:00008 %6 = %1.call y()                     [Vec]
  001f4: mov    rdi,QWORD PTR [rbp-0x30]
  001f8: test   rdi,0x7
  001ff: jne    0x36ff5
  00205: cmp    DWORD PTR [rdi+0x4],0x28
  00209: jne    0x36ff5
  0020f: cmp    DWORD PTR [rip+0xfffffffffffefa81],0x26        # 0xfffefc97
  00216: jne    0x36ff5
  0021c: mov    esi,DWORD PTR [rip+0x7b0]        # 0x9d2
  00222: cmp    esi,0xffffffff
  00225: je     0x37011
  0022b: cmp    WORD PTR [rdi+0x2],0x3
  00230: jne    0x249
  00236: cmp    esi,0x6
  00239: jge    0x249
  0023f: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00244: jmp    0x267
  00249: sub    rsp,0x10
  0024d: movq   QWORD PTR [rsp],xmm2
  00252: movabs rax,0x563437ed0590
  0025c: call   rax
  0025e: movq   xmm2,QWORD PTR [rsp]
  00263: add    rsp,0x10
  00267: mov    QWORD PTR [rbp-0x58],rax
:00009 
:00011 %5 = %5 * %6                         [Float][Float]
  0026b: mov    rdi,QWORD PTR [rbp-0x50]
  0026f: test   rdi,0x1
  00276: jne    0x3704c
  0027c: test   rdi,0x2
  00283: je     0x2bf
  00289: xorps  xmm3,xmm3
  0028c: movabs rax,0x8000000000000002
  00296: cmp    rdi,rax
  00299: je     0x2d1
  0029f: mov    rax,rdi
  002a2: sar    rax,0x3f
  002a6: add    rax,0x2
  002aa: and    rdi,0xfffffffffffffffc
  002ae: or     rdi,rax
  002b1: rol    rdi,0x3d
  002b5: movq   xmm3,rdi
  002ba: jmp    0x2d1
  002bf: call   0xfffed132
  002c4: test   rax,rax
  002c7: je     0x3704c
  002cd: movq   xmm3,xmm0
  002d1: mov    rdi,QWORD PTR [rbp-0x58]
  002d5: test   rdi,0x1
  002dc: jne    0x37068
  002e2: test   rdi,0x2
  002e9: je     0x325
  002ef: xorps  xmm4,xmm4
  002f2: movabs rax,0x8000000000000002
  002fc: cmp    rdi,rax
  002ff: je     0x337
  00305: mov    rax,rdi
  00308: sar    rax,0x3f
  0030c: add    rax,0x2
  00310: and    rdi,0xfffffffffffffffc
  00314: or     rdi,rax
  00317: rol    rdi,0x3d
  0031b: movq   xmm4,rdi
  00320: jmp    0x337
  00325: call   0xfffed132
  0032a: test   rax,rax
  0032d: je     0x37068
  00333: movq   xmm4,xmm0
  00337: mulsd  xmm3,xmm4
:00012 %4 = %4 - %5                         [Float][Float]
  0033b: subsd  xmm2,xmm3
:00013 %5 = @z: Vec[IvarId(2)]
  0033f: mov    rdi,QWORD PTR [rbp-0x28]
  00343: mov    rax,QWORD PTR [rdi+0x20]
  00347: mov    QWORD PTR [rbp-0x50],rax
:00014 %6 = %1.call x()                     [Vec]
  0034b: mov    rdi,QWORD PTR [rbp-0x30]
  0034f: test   rdi,0x7
  00356: jne    0x37084
  0035c: cmp    DWORD PTR [rdi+0x4],0x28
  00360: jne    0x37084
  00366: cmp    DWORD PTR [rip+0xfffffffffffef92a],0x26        # 0xfffefc97
  0036d: jne    0x37084
  00373: mov    esi,DWORD PTR [rip+0x661]        # 0x9da
  00379: cmp    esi,0xffffffff
  0037c: je     0x370a0
  00382: cmp    WORD PTR [rdi+0x2],0x3
  00387: jne    0x3a0
  0038d: cmp    esi,0x6
  00390: jge    0x3a0
  00396: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0039b: jmp    0x3be
  003a0: sub    rsp,0x10
  003a4: movq   QWORD PTR [rsp],xmm2
  003a9: movabs rax,0x563437ed0590
  003b3: call   rax
  003b5: movq   xmm2,QWORD PTR [rsp]
  003ba: add    rsp,0x10
  003be: mov    QWORD PTR [rbp-0x58],rax
:00015 
:00017 %5 = %5 * %6                         [Float][Float]
  003c2: mov    rdi,QWORD PTR [rbp-0x50]
  003c6: test   rdi,0x1
  003cd: jne    0x370db
  003d3: test   rdi,0x2
  003da: je     0x416
  003e0: xorps  xmm3,xmm3
  003e3: movabs rax,0x8000000000000002
  003ed: cmp    rdi,rax
  003f0: je     0x428
  003f6: mov    rax,rdi
  003f9: sar    rax,0x3f
  003fd: add    rax,0x2
  00401: and    rdi,0xfffffffffffffffc
  00405: or     rdi,rax
  00408: rol    rdi,0x3d
  0040c: movq   xmm3,rdi
  00411: jmp    0x428
  00416: call   0xfffed132
  0041b: test   rax,rax
  0041e: je     0x370db
  00424: movq   xmm3,xmm0
  00428: mov    rdi,QWORD PTR [rbp-0x58]
  0042c: test   rdi,0x1
  00433: jne    0x370f7
  00439: test   rdi,0x2
  00440: je     0x47c
  00446: xorps  xmm4,xmm4
  00449: movabs rax,0x8000000000000002
  00453: cmp    rdi,rax
  00456: je     0x48e
  0045c: mov    rax,rdi
  0045f: sar    rax,0x3f
  00463: add    rax,0x2
  00467: and    rdi,0xfffffffffffffffc
  0046b: or     rdi,rax
  0046e: rol    rdi,0x3d
  00472: movq   xmm4,rdi
  00477: jmp    0x48e
  0047c: call   0xfffed132
  00481: test   rax,rax
  00484: je     0x370f7
  0048a: movq   xmm4,xmm0
  0048e: mulsd  xmm3,xmm4
:00018 %6 = @x: Vec[IvarId(0)]
  00492: mov    rdi,QWORD PTR [rbp-0x28]
  00496: mov    rax,QWORD PTR [rdi+0x10]
  0049a: mov    QWORD PTR [rbp-0x58],rax
:00019 %7 = %1.call z()                     [Vec]
  0049e: mov    rdi,QWORD PTR [rbp-0x30]
  004a2: test   rdi,0x7
  004a9: jne    0x37113
  004af: cmp    DWORD PTR [rdi+0x4],0x28
  004b3: jne    0x37113
  004b9: cmp    DWORD PTR [rip+0xfffffffffffef7d7],0x26        # 0xfffefc97
  004c0: jne    0x37113
  004c6: mov    esi,DWORD PTR [rip+0x516]        # 0x9e2
  004cc: cmp    esi,0xffffffff
  004cf: je     0x3713c
  004d5: cmp    WORD PTR [rdi+0x2],0x3
  004da: jne    0x4f3
  004e0: cmp    esi,0x6
  004e3: jge    0x4f3
  004e9: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004ee: jmp    0x51d
  004f3: sub    rsp,0x10
  004f7: movq   QWORD PTR [rsp],xmm2
  004fc: movq   QWORD PTR [rsp+0x8],xmm3
  00502: movabs rax,0x563437ed0590
  0050c: call   rax
  0050e: movq   xmm2,QWORD PTR [rsp]
  00513: movq   xmm3,QWORD PTR [rsp+0x8]
  00519: add    rsp,0x10
  0051d: mov    QWORD PTR [rbp-0x60],rax
:00020 
:00022 %6 = %6 * %7                         [Float][Float]
  00521: mov    rdi,QWORD PTR [rbp-0x58]
  00525: test   rdi,0x1
  0052c: jne    0x37183
  00532: test   rdi,0x2
  00539: je     0x575
  0053f: xorps  xmm4,xmm4
  00542: movabs rax,0x8000000000000002
  0054c: cmp    rdi,rax
  0054f: je     0x587
  00555: mov    rax,rdi
  00558: sar    rax,0x3f
  0055c: add    rax,0x2
  00560: and    rdi,0xfffffffffffffffc
  00564: or     rdi,rax
  00567: rol    rdi,0x3d
  0056b: movq   xmm4,rdi
  00570: jmp    0x587
  00575: call   0xfffed132
  0057a: test   rax,rax
  0057d: je     0x37183
  00583: movq   xmm4,xmm0
  00587: mov    rdi,QWORD PTR [rbp-0x60]
  0058b: test   rdi,0x1
  00592: jne    0x371ac
  00598: test   rdi,0x2
  0059f: je     0x5db
  005a5: xorps  xmm5,xmm5
  005a8: movabs rax,0x8000000000000002
  005b2: cmp    rdi,rax
  005b5: je     0x5ed
  005bb: mov    rax,rdi
  005be: sar    rax,0x3f
  005c2: add    rax,0x2
  005c6: and    rdi,0xfffffffffffffffc
  005ca: or     rdi,rax
  005cd: rol    rdi,0x3d
  005d1: movq   xmm5,rdi
  005d6: jmp    0x5ed
  005db: call   0xfffed132
  005e0: test   rax,rax
  005e3: je     0x371ac
  005e9: movq   xmm5,xmm0
  005ed: mulsd  xmm4,xmm5
:00023 %5 = %5 - %6                         [Float][Float]
  005f1: subsd  xmm3,xmm4
:00024 %6 = @x: Vec[IvarId(0)]
  005f5: mov    rdi,QWORD PTR [rbp-0x28]
  005f9: mov    rax,QWORD PTR [rdi+0x10]
  005fd: mov    QWORD PTR [rbp-0x58],rax
:00025 %7 = %1.call y()                     [Vec]
  00601: mov    rdi,QWORD PTR [rbp-0x30]
  00605: test   rdi,0x7
  0060c: jne    0x371d5
  00612: cmp    DWORD PTR [rdi+0x4],0x28
  00616: jne    0x371d5
  0061c: cmp    DWORD PTR [rip+0xfffffffffffef674],0x26        # 0xfffefc97
  00623: jne    0x371d5
  00629: mov    esi,DWORD PTR [rip+0x3bb]        # 0x9ea
  0062f: cmp    esi,0xffffffff
  00632: je     0x371fe
  00638: cmp    WORD PTR [rdi+0x2],0x3
  0063d: jne    0x656
  00643: cmp    esi,0x6
  00646: jge    0x656
  0064c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00651: jmp    0x680
  00656: sub    rsp,0x10
  0065a: movq   QWORD PTR [rsp],xmm2
  0065f: movq   QWORD PTR [rsp+0x8],xmm3
  00665: movabs rax,0x563437ed0590
  0066f: call   rax
  00671: movq   xmm2,QWORD PTR [rsp]
  00676: movq   xmm3,QWORD PTR [rsp+0x8]
  0067c: add    rsp,0x10
  00680: mov    QWORD PTR [rbp-0x60],rax
:00026 
:00028 %6 = %6 * %7                         [Float][Float]
  00684: mov    rdi,QWORD PTR [rbp-0x58]
  00688: test   rdi,0x1
  0068f: jne    0x37245
  00695: test   rdi,0x2
  0069c: je     0x6d8
  006a2: xorps  xmm4,xmm4
  006a5: movabs rax,0x8000000000000002
  006af: cmp    rdi,rax
  006b2: je     0x6ea
  006b8: mov    rax,rdi
  006bb: sar    rax,0x3f
  006bf: add    rax,0x2
  006c3: and    rdi,0xfffffffffffffffc
  006c7: or     rdi,rax
  006ca: rol    rdi,0x3d
  006ce: movq   xmm4,rdi
  006d3: jmp    0x6ea
  006d8: call   0xfffed132
  006dd: test   rax,rax
  006e0: je     0x37245
  006e6: movq   xmm4,xmm0
  006ea: mov    rdi,QWORD PTR [rbp-0x60]
  006ee: test   rdi,0x1
  006f5: jne    0x3726e
  006fb: test   rdi,0x2
  00702: je     0x73e
  00708: xorps  xmm5,xmm5
  0070b: movabs rax,0x8000000000000002
  00715: cmp    rdi,rax
  00718: je     0x750
  0071e: mov    rax,rdi
  00721: sar    rax,0x3f
  00725: add    rax,0x2
  00729: and    rdi,0xfffffffffffffffc
  0072d: or     rdi,rax
  00730: rol    rdi,0x3d
  00734: movq   xmm5,rdi
  00739: jmp    0x750
  0073e: call   0xfffed132
  00743: test   rax,rax
  00746: je     0x3726e
  0074c: movq   xmm5,xmm0
  00750: mulsd  xmm4,xmm5
:00029 %7 = @y: Vec[IvarId(1)]
  00754: mov    rdi,QWORD PTR [rbp-0x28]
  00758: mov    rax,QWORD PTR [rdi+0x18]
  0075c: mov    QWORD PTR [rbp-0x60],rax
:00030 %8 = %1.call x()                     [Vec]
  00760: mov    rdi,QWORD PTR [rbp-0x30]
  00764: test   rdi,0x7
  0076b: jne    0x37297
  00771: cmp    DWORD PTR [rdi+0x4],0x28
  00775: jne    0x37297
  0077b: cmp    DWORD PTR [rip+0xfffffffffffef515],0x26        # 0xfffefc97
  00782: jne    0x37297
  00788: mov    esi,DWORD PTR [rip+0x264]        # 0x9f2
  0078e: cmp    esi,0xffffffff
  00791: je     0x372cd
  00797: cmp    WORD PTR [rdi+0x2],0x3
  0079c: jne    0x7b5
  007a2: cmp    esi,0x6
  007a5: jge    0x7b5
  007ab: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007b0: jmp    0x7eb
  007b5: sub    rsp,0x20
  007b9: movq   QWORD PTR [rsp],xmm2
  007be: movq   QWORD PTR [rsp+0x8],xmm3
  007c4: movq   QWORD PTR [rsp+0x10],xmm4
  007ca: movabs rax,0x563437ed0590
  007d4: call   rax
  007d6: movq   xmm2,QWORD PTR [rsp]
  007db: movq   xmm3,QWORD PTR [rsp+0x8]
  007e1: movq   xmm4,QWORD PTR [rsp+0x10]
  007e7: add    rsp,0x20
  007eb: mov    QWORD PTR [rbp-0x68],rax
:00031 
:00033 %7 = %7 * %8                         [Float][Float]
  007ef: mov    rdi,QWORD PTR [rbp-0x60]
  007f3: test   rdi,0x1
  007fa: jne    0x37320
  00800: test   rdi,0x2
  00807: je     0x843
  0080d: xorps  xmm5,xmm5
  00810: movabs rax,0x8000000000000002
  0081a: cmp    rdi,rax
  0081d: je     0x855
  00823: mov    rax,rdi
  00826: sar    rax,0x3f
  0082a: add    rax,0x2
  0082e: and    rdi,0xfffffffffffffffc
  00832: or     rdi,rax
  00835: rol    rdi,0x3d
  00839: movq   xmm5,rdi
  0083e: jmp    0x855
  00843: call   0xfffed132
  00848: test   rax,rax
  0084b: je     0x37320
  00851: movq   xmm5,xmm0
  00855: mov    rdi,QWORD PTR [rbp-0x68]
  00859: test   rdi,0x1
  00860: jne    0x37356
  00866: test   rdi,0x2
  0086d: je     0x8a9
  00873: xorps  xmm6,xmm6
  00876: movabs rax,0x8000000000000002
  00880: cmp    rdi,rax
  00883: je     0x8bb
  00889: mov    rax,rdi
  0088c: sar    rax,0x3f
  00890: add    rax,0x2
  00894: and    rdi,0xfffffffffffffffc
  00898: or     rdi,rax
  0089b: rol    rdi,0x3d
  0089f: movq   xmm6,rdi
  008a4: jmp    0x8bb
  008a9: call   0xfffed132
  008ae: test   rax,rax
  008b1: je     0x37356
  008b7: movq   xmm6,xmm0
  008bb: mulsd  xmm5,xmm6
:00034 %6 = %6 - %7                         [Float][Float]
  008bf: subsd  xmm4,xmm5
:00035 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
  008c3: movq   xmm0,xmm2
  008c7: call   0xfffed225
  008cc: mov    QWORD PTR [rbp-0x48],rax
  008d0: movq   xmm0,xmm3
  008d4: call   0xfffed225
  008d9: mov    QWORD PTR [rbp-0x50],rax
  008dd: movq   xmm0,xmm4
  008e1: call   0xfffed225
  008e6: mov    QWORD PTR [rbp-0x58],rax
  008ea: mov    rdi,QWORD PTR [rbp-0x40]
  008ee: test   rdi,0x7
  008f5: jne    0x3738c
  008fb: cmp    DWORD PTR [rdi+0x4],0x29
  008ff: jne    0x3738c
  00905: cmp    DWORD PTR [rip+0xfffffffffffef38b],0x26        # 0xfffefc97
  0090c: jne    0x3738c
  00912: mov    r9,0x0
  00919: sub    rsp,0x30
  0091d: movq   QWORD PTR [rsp],xmm2
  00922: movq   QWORD PTR [rsp+0x8],xmm3
  00928: movq   QWORD PTR [rsp+0x10],xmm4
  0092e: movq   QWORD PTR [rsp+0x18],xmm5
  00934: movq   QWORD PTR [rsp+0x20],xmm6
  0093a: mov    rdx,rdi
  0093d: mov    QWORD PTR [rsp-0x20],0x0
  00946: mov    QWORD PTR [rsp-0x38],rcx
  0094b: mov    rax,QWORD PTR [rbx]
  0094e: lea    rdi,[rsp-0x18]
  00953: mov    QWORD PTR [rdi],rax
  00956: mov    QWORD PTR [rbx],rdi
  00959: lea    rcx,[rbp-0x48]
  0095d: mov    r8,0x3
  00964: call   0x373a8
  00969: lea    rdi,[rbp-0x8]
  0096d: mov    QWORD PTR [rbx],rdi
  00970: movq   xmm2,QWORD PTR [rsp]
  00975: movq   xmm3,QWORD PTR [rsp+0x8]
  0097b: movq   xmm4,QWORD PTR [rsp+0x10]
  00981: movq   xmm5,QWORD PTR [rsp+0x18]
  00987: movq   xmm6,QWORD PTR [rsp+0x20]
  0098d: add    rsp,0x30
  00991: movabs r13,0x563439839080
  0099b: test   rax,rax
  0099e: je     0xfffed0d9
  009a4: mov    QWORD PTR [rbp-0x38],rax
:00036 
:00038 ret %2
  009a8: mov    rax,QWORD PTR [rbp-0x38]
  009ac: leave  
  009ad: ret    
==> start whole compile: <unnamed> FuncId(83) self_class:Scene start:[00000] bytecode:0x56343987e6a0
<== finished compile. elapsed:151.6µs
offset:Pos(80216) code: 9433 bytes  data: 419 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xd0
  0000e:    	cmp    edx,0x1
  00011:    	je     0x73
  00017:    	jl     0x22
  0001d:    	jmp    0x73
  00022:    	mov    eax,0x1
  00027:    	sub    eax,edx
  00029:    	test   rax,rax
  0002c:    	je     0x48
  00032:    	lea    rdi,[rbp-0x38]
  00036: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  0003e:    	sub    rax,0x1
  00042:    	jne    0x36
  00048:    	mov    edx,0x1
  0004d:    	mov    eax,0x1
  00052:    	sub    eax,edx
  00054:    	test   rax,rax
  00057:    	je     0x73
  0005d:    	lea    rdi,[rbp-0x38]
  00061: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00069:    	sub    rax,0x1
  0006d:    	jne    0x61
  00073: 00 	mov    rax,0x4
  0007a:    	mov    QWORD PTR [rbp-0x38],rax
  0007e:    	mov    QWORD PTR [rbp-0x40],rax
  00082:    	mov    QWORD PTR [rbp-0x48],rax
  00086:    	mov    QWORD PTR [rbp-0x50],rax
  0008a:    	mov    QWORD PTR [rbp-0x58],rax
  0008e:    	mov    QWORD PTR [rbp-0x60],rax
  00092:    	mov    QWORD PTR [rbp-0x68],rax
  00096:    	mov    QWORD PTR [rbp-0x70],rax
  0009a:    	mov    QWORD PTR [rbp-0x78],rax
  0009e:    	mov    QWORD PTR [rbp-0x80],rax
  000a2: ff 	mov    QWORD PTR [rbp-0x88],rax
  000a9: ff 	mov    QWORD PTR [rbp-0x90],rax
  000b0: ff 	mov    QWORD PTR [rbp-0x98],rax
  000b7: ff 	mov    QWORD PTR [rbp-0xa0],rax
  000be: ff 	mov    QWORD PTR [rbp-0xa8],rax
  000c5: ff 	mov    QWORD PTR [rbp-0xb0],rax
  000cc: ff 	mov    QWORD PTR [rbp-0xb8],rax
  000d3: ff 	mov    QWORD PTR [rbp-0xc0],rax
  000da:    	mov    rdi,QWORD PTR [rbp-0x28]
  000de: 00 	test   rdi,0x7
  000e5:    	jne    0x369f3
  000eb:    	cmp    DWORD PTR [rdi+0x4],0x32
  000ef:    	jne    0x369f3
:00000 init_block reg:20 arg:1 pos:1 req:1 stack_offset:13
:00001 %14 = dynvar(4, %4)
  000f5:    	mov    rax,QWORD PTR [rbp-0x10]
  000f9:    	mov    rax,QWORD PTR [rax]
  000fc:    	mov    rax,QWORD PTR [rax]
  000ff:    	mov    rax,QWORD PTR [rax]
  00102:    	mov    rax,QWORD PTR [rax-0x38]
  00106: ff 	mov    QWORD PTR [rbp-0x98],rax
:00002 %14 = %14 + 1: i16                   [Integer][Integer]
  0010d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00114: 00 	test   rdi,0x1
  0011b:    	je     0x36a02
  00121:    	add    rdi,0x2
  00125:    	jo     0x36a02
  0012b: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00003 dynvar(4, %4) = %14
  00132:    	mov    rax,QWORD PTR [rbp-0x10]
  00136:    	mov    rax,QWORD PTR [rax]
  00139:    	mov    rax,QWORD PTR [rax]
  0013c:    	mov    rax,QWORD PTR [rax]
  0013f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00146:    	mov    QWORD PTR [rax-0x38],rdi
:00004 %14 = dynvar(4, %1)
  0014a:    	mov    rax,QWORD PTR [rbp-0x10]
  0014e:    	mov    rax,QWORD PTR [rax]
  00151:    	mov    rax,QWORD PTR [rax]
  00154:    	mov    rax,QWORD PTR [rax]
  00157:    	mov    rax,QWORD PTR [rax-0x20]
  0015b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00005 %2 = %14.call to_f()                 [Integer]
  00162: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00169: 00 	test   rdi,0x1
  00170:    	je     0x36a11
  00176: 26 	cmp    DWORD PTR [rip+0xfffffffffffef124],0x26        # 0xfffef2a1
  0017d:    	jne    0x36a11
  00183:    	sar    rdi,1
  00186:    	cvtsi2sd xmm2,rdi
:00006 
:00008 %14 = dynvar(4, %2)
  0018b:    	mov    rax,QWORD PTR [rbp-0x10]
  0018f:    	mov    rax,QWORD PTR [rax]
  00192:    	mov    rax,QWORD PTR [rax]
  00195:    	mov    rax,QWORD PTR [rax]
  00198:    	mov    rax,QWORD PTR [rax-0x28]
  0019c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00009 %3 = %14.call to_f()                 [Integer]
  001a3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001aa: 00 	test   rdi,0x1
  001b1:    	je     0x36a20
  001b7: 26 	cmp    DWORD PTR [rip+0xfffffffffffef0e3],0x26        # 0xfffef2a1
  001be:    	jne    0x36a20
  001c4:    	sar    rdi,1
  001c7:    	cvtsi2sd xmm3,rdi
:00010 
:00012 %14 = dynvar(2, %1)
  001cc:    	mov    rax,QWORD PTR [rbp-0x10]
  001d0:    	mov    rax,QWORD PTR [rax]
  001d3:    	mov    rax,QWORD PTR [rax-0x20]
  001d7: ff 	mov    QWORD PTR [rbp-0x98],rax
:00013 %4 = %14.call to_f()                 [Integer]
  001de: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001e5: 00 	test   rdi,0x1
  001ec:    	je     0x36a3c
  001f2: 26 	cmp    DWORD PTR [rip+0xfffffffffffef0a8],0x26        # 0xfffef2a1
  001f9:    	jne    0x36a3c
  001ff:    	sar    rdi,1
  00202:    	cvtsi2sd xmm4,rdi
:00014 
:00016 %14 = dynvar(3, %1)
  00207:    	mov    rax,QWORD PTR [rbp-0x10]
  0020b:    	mov    rax,QWORD PTR [rax]
  0020e:    	mov    rax,QWORD PTR [rax]
  00211:    	mov    rax,QWORD PTR [rax-0x20]
  00215: ff 	mov    QWORD PTR [rbp-0x98],rax
:00017 %5 = %14.call to_f()                 [Integer]
  0021c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00223: 00 	test   rdi,0x1
  0022a:    	je     0x36a65
  00230: 26 	cmp    DWORD PTR [rip+0xfffffffffffef06a],0x26        # 0xfffef2a1
  00237:    	jne    0x36a65
  0023d:    	sar    rdi,1
  00240:    	cvtsi2sd xmm5,rdi
:00018 
:00020 %6 = %1.call to_f()                  [Integer]
  00245:    	mov    rdi,QWORD PTR [rbp-0x30]
  00249: 00 	test   rdi,0x1
  00250:    	je     0x36a9b
  00256: 26 	cmp    DWORD PTR [rip+0xfffffffffffef044],0x26        # 0xfffef2a1
  0025d:    	jne    0x36a9b
  00263:    	sar    rdi,1
  00266:    	cvtsi2sd xmm6,rdi
:00021 
:00023 %14 = dynvar(1, %1)
  0026b:    	mov    rax,QWORD PTR [rbp-0x10]
  0026f:    	mov    rax,QWORD PTR [rax-0x20]
  00273: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %7 = %14.call to_f()                 [Integer]
  0027a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00281: 00 	test   rdi,0x1
  00288:    	je     0x36ade
  0028e: 26 	cmp    DWORD PTR [rip+0xfffffffffffef00c],0x26        # 0xfffef2a1
  00295:    	jne    0x36ade
  0029b:    	sar    rdi,1
  0029e:    	cvtsi2sd xmm7,rdi
:00025 
:00027 %14 = dynvar(4, %5)
  002a3:    	mov    rax,QWORD PTR [rbp-0x10]
  002a7:    	mov    rax,QWORD PTR [rax]
  002aa:    	mov    rax,QWORD PTR [rax]
  002ad:    	mov    rax,QWORD PTR [rax]
  002b0:    	mov    rax,QWORD PTR [rax-0x40]
  002b4: ff 	mov    QWORD PTR [rbp-0x98],rax
:00028 %14 = %6 / %14                       [Float][Float]
  002bb: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002c2: 00 	test   rdi,0x1
  002c9:    	jne    0x36b2e
  002cf: 00 	test   rdi,0x2
  002d6:    	je     0x313
  002dc:    	xorps  xmm8,xmm8
  002e0: 00 	movabs rax,0x8000000000000002
  002ea:    	cmp    rdi,rax
  002ed:    	je     0x326
  002f3:    	mov    rax,rdi
  002f6:    	sar    rax,0x3f
  002fa:    	add    rax,0x2
  002fe:    	and    rdi,0xfffffffffffffffc
  00302:    	or     rdi,rax
  00305:    	rol    rdi,0x3d
  00309:    	movq   xmm8,rdi
  0030e:    	jmp    0x326
  00313:    	call   0xfffec73c
  00318:    	test   rax,rax
  0031b:    	je     0x36b2e
  00321:    	movq   xmm8,xmm0
  00326:    	movq   rax,xmm8
  0032b:    	test   rax,rax
  0032e:    	je     0xfffec708
  00334:    	movq   xmm0,xmm6
  00338:    	divsd  xmm0,xmm8
  0033d:    	movq   xmm8,xmm0
:00029 %14 = %4 + %14                       [Float][Float]
  00342:    	addsd  xmm8,xmm4
:00030 %15 = literal[2.0]
  00347: 21 	movq   xmm9,QWORD PTR [rip+0x2198]        # 0x24e8
  00350: 00 	mov    rax,0x2
  00357: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00031 %15 = %2 / %15                       [Float][Float]
  0035e:    	movq   rax,xmm9
  00363:    	test   rax,rax
  00366:    	je     0xfffec708
  0036c:    	movq   xmm0,xmm2
  00370:    	divsd  xmm0,xmm9
  00375:    	movq   xmm9,xmm0
:00032 %14 = %14 - %15                      [Float][Float]
  0037a:    	subsd  xmm8,xmm9
:00033 %15 = literal[2.0]
  0037f: 21 	movq   xmm9,QWORD PTR [rip+0x2170]        # 0x24f8
  00388: 00 	mov    rax,0x2
  0038f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00034 %15 = %2 / %15                       [Float][Float]
  00396:    	movq   rax,xmm9
  0039b:    	test   rax,rax
  0039e:    	je     0xfffec708
  003a4:    	movq   xmm0,xmm2
  003a8:    	divsd  xmm0,xmm9
  003ad:    	movq   xmm9,xmm0
:00035 %8 = %14 / %15                       [Float][Float]
  003b2:    	movq   xmm10,xmm8
  003b7:    	movq   rax,xmm9
  003bc:    	test   rax,rax
  003bf:    	je     0xfffec708
  003c5:    	divsd  xmm10,xmm9
:00036 %14 = dynvar(4, %5)
  003ca:    	mov    rax,QWORD PTR [rbp-0x10]
  003ce:    	mov    rax,QWORD PTR [rax]
  003d1:    	mov    rax,QWORD PTR [rax]
  003d4:    	mov    rax,QWORD PTR [rax]
  003d7:    	mov    rax,QWORD PTR [rax-0x40]
  003db: ff 	mov    QWORD PTR [rbp-0x98],rax
:00037 %14 = %7 / %14                       [Float][Float]
  003e2: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003e9: 00 	test   rdi,0x1
  003f0:    	jne    0x36b8b
  003f6: 00 	test   rdi,0x2
  003fd:    	je     0x43a
  00403:    	xorps  xmm8,xmm8
  00407: 00 	movabs rax,0x8000000000000002
  00411:    	cmp    rdi,rax
  00414:    	je     0x44d
  0041a:    	mov    rax,rdi
  0041d:    	sar    rax,0x3f
  00421:    	add    rax,0x2
  00425:    	and    rdi,0xfffffffffffffffc
  00429:    	or     rdi,rax
  0042c:    	rol    rdi,0x3d
  00430:    	movq   xmm8,rdi
  00435:    	jmp    0x44d
  0043a:    	call   0xfffec73c
  0043f:    	test   rax,rax
  00442:    	je     0x36b8b
  00448:    	movq   xmm8,xmm0
  0044d:    	movq   rax,xmm8
  00452:    	test   rax,rax
  00455:    	je     0xfffec708
  0045b:    	movq   xmm0,xmm7
  0045f:    	divsd  xmm0,xmm8
  00464:    	movq   xmm8,xmm0
:00038 %14 = %5 + %14                       [Float][Float]
  00469:    	addsd  xmm8,xmm5
:00039 %15 = literal[2.0]
  0046e: 20 	movq   xmm9,QWORD PTR [rip+0x2091]        # 0x2508
  00477: 00 	mov    rax,0x2
  0047e: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00040 %15 = %3 / %15                       [Float][Float]
  00485:    	movq   rax,xmm9
  0048a:    	test   rax,rax
  0048d:    	je     0xfffec708
  00493:    	movq   xmm0,xmm3
  00497:    	divsd  xmm0,xmm9
  0049c:    	movq   xmm9,xmm0
:00041 %14 = %14 - %15                      [Float][Float]
  004a1:    	subsd  xmm8,xmm9
:00042 %14 = neg %14                        [Float]
  004a6: 00 	xorps  xmm8,XMMWORD PTR [rip+0x206a]        # 0x2518
:00043 %15 = literal[2.0]
  004ae: 20 	movq   xmm9,QWORD PTR [rip+0x2071]        # 0x2528
  004b7: 00 	mov    rax,0x2
  004be: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00044 %15 = %3 / %15                       [Float][Float]
  004c5:    	movq   rax,xmm9
  004ca:    	test   rax,rax
  004cd:    	je     0xfffec708
  004d3:    	movq   xmm0,xmm3
  004d7:    	divsd  xmm0,xmm9
  004dc:    	movq   xmm9,xmm0
:00045 %9 = %14 / %15                       [Float][Float]
  004e1:    	movq   xmm11,xmm8
  004e6:    	movq   rax,xmm9
  004eb:    	test   rax,rax
  004ee:    	je     0xfffec708
  004f4:    	divsd  xmm11,xmm9
:00046 %15 = const[Vec]                     [Vec]
  004f9: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeeda8]        # 0xfffef2a8
  00500: 00 	cmp    rax,QWORD PTR [rip+0x2041]        # 0x2548
  00507:    	jne    0x36c07
  0050d: 00 	mov    rax,QWORD PTR [rip+0x2024]        # 0x2538
  00514: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00047 %16 = %8
:00048 %17 = %9
:00049 %18 = literal[-1.0]
  0051b: 20 	movq   xmm9,QWORD PTR [rip+0x2034]        # 0x2558
  00524: 00 	movabs rax,0xff80000000000006
  0052e: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00050 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
  00535:    	movq   xmm0,xmm10
  0053a:    	call   0xfffec82f
  0053f: ff 	mov    QWORD PTR [rbp-0xa8],rax
  00546:    	movq   xmm0,xmm11
  0054b:    	call   0xfffec82f
  00550: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00557: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0055e: 00 	test   rdi,0x7
  00565:    	jne    0x36cc5
  0056b:    	cmp    DWORD PTR [rdi+0x4],0x29
  0056f:    	jne    0x36cc5
  00575: 26 	cmp    DWORD PTR [rip+0xfffffffffffeed25],0x26        # 0xfffef2a1
  0057c:    	jne    0x36cc5
  00582: 00 	mov    r9,0x0
  00589:    	sub    rsp,0x50
  0058d:    	movq   QWORD PTR [rsp],xmm2
  00592:    	movq   QWORD PTR [rsp+0x8],xmm3
  00598:    	movq   QWORD PTR [rsp+0x10],xmm4
  0059e:    	movq   QWORD PTR [rsp+0x18],xmm5
  005a4:    	movq   QWORD PTR [rsp+0x20],xmm6
  005aa:    	movq   QWORD PTR [rsp+0x28],xmm7
  005b0: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  005b7: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  005be: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  005c5:    	mov    rdx,rdi
  005c8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  005d1:    	mov    QWORD PTR [rsp-0x38],rcx
  005d6:    	mov    rax,QWORD PTR [rbx]
  005d9:    	lea    rdi,[rsp-0x18]
  005de:    	mov    QWORD PTR [rdi],rax
  005e1:    	mov    QWORD PTR [rbx],rdi
  005e4: ff 	lea    rcx,[rbp-0xa8]
  005eb: 00 	mov    r8,0x3
  005f2:    	call   0x36d3e
  005f7:    	lea    rdi,[rbp-0x8]
  005fb:    	mov    QWORD PTR [rbx],rdi
  005fe:    	movq   xmm2,QWORD PTR [rsp]
  00603:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00609:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0060f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00615:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0061b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00621: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00628: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0062f: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00636:    	add    rsp,0x50
  0063a: 34 	movabs r13,0x56343987e9e0
  00644:    	test   rax,rax
  00647:    	je     0xfffec6e3
  0064d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00051 
:00053 %10 = %14.call vnormalize()          [Vec]
  00654: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0065b: 00 	test   rdi,0x7
  00662:    	jne    0x36d70
  00668:    	cmp    DWORD PTR [rdi+0x4],0x28
  0066c:    	jne    0x36d70
  00672: 26 	cmp    DWORD PTR [rip+0xfffffffffffeec28],0x26        # 0xfffef2a1
  00679:    	jne    0x36d70
  0067f:    	sub    rsp,0x50
  00683:    	movq   QWORD PTR [rsp],xmm2
  00688:    	movq   QWORD PTR [rsp+0x8],xmm3
  0068e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00694:    	movq   QWORD PTR [rsp+0x18],xmm5
  0069a:    	movq   QWORD PTR [rsp+0x20],xmm6
  006a0:    	movq   QWORD PTR [rsp+0x28],xmm7
  006a6: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  006ad: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  006b4: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  006bb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006c4:    	mov    QWORD PTR [rsp-0x38],rcx
  006c9:    	mov    rax,QWORD PTR [rbx]
  006cc:    	lea    rdi,[rsp-0x18]
  006d1:    	mov    QWORD PTR [rdi],rax
  006d4:    	mov    QWORD PTR [rbx],rdi
  006d7: ff 	mov    rax,QWORD PTR [rbp-0x98]
  006de:    	mov    QWORD PTR [rsp-0x38],rax
  006e3: 00 	mov    rdi,0x0
  006ea: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006f3: 07 	movabs rax,0x700000044
  006fd:    	mov    QWORD PTR [rsp-0x28],rax
  00702: 34 	movabs r13,0x5634398639e0
  0070c:    	call   0xfffefbda
  00711:    	lea    rdi,[rbp-0x8]
  00715:    	mov    QWORD PTR [rbx],rdi
  00718:    	movq   xmm2,QWORD PTR [rsp]
  0071d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00723:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00729:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0072f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00735:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0073b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00742: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00749: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00750:    	add    rsp,0x50
  00754: 34 	movabs r13,0x56343987ea10
  0075e:    	test   rax,rax
  00761:    	je     0xfffec6e3
  00767:    	mov    QWORD PTR [rbp-0x78],rax
:00054 
:00056 %14 = const[Ray]                     [Ray]
  0076b: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeeb36]        # 0xfffef2a8
  00772: 00 	cmp    rax,QWORD PTR [rip+0x1dff]        # 0x2578
  00779:    	jne    0x36de9
  0077f: 00 	mov    rax,QWORD PTR [rip+0x1de2]        # 0x2568
  00786: ff 	mov    QWORD PTR [rbp-0x98],rax
:00057 %16 = const[Vec]                     [Vec]
  0078d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeeb14]        # 0xfffef2a8
  00794: 00 	cmp    rax,QWORD PTR [rip+0x1dfd]        # 0x2598
  0079b:    	jne    0x36ea7
  007a1: 00 	mov    rax,QWORD PTR [rip+0x1de0]        # 0x2588
  007a8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00058 %17 = literal[0.0]
  007af: 1d 	movq   xmm8,QWORD PTR [rip+0x1df0]        # 0x25a8
  007b8: 00 	movabs rax,0x8000000000000002
  007c2: ff 	mov    QWORD PTR [rbp-0xb0],rax
:00059 %18 = literal[0.0]
  007c9: 1d 	movq   xmm9,QWORD PTR [rip+0x1de6]        # 0x25b8
  007d2: 00 	movabs rax,0x8000000000000002
  007dc: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00060 %19 = literal[0.0]
  007e3: 1d 	movq   xmm12,QWORD PTR [rip+0x1ddc]        # 0x25c8
  007ec: 00 	movabs rax,0x8000000000000002
  007f6: ff 	mov    QWORD PTR [rbp-0xc0],rax
:00061 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
  007fd: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  00804: 00 	test   rdi,0x7
  0080b:    	jne    0x36f65
  00811:    	cmp    DWORD PTR [rdi+0x4],0x29
  00815:    	jne    0x36f65
  0081b: 26 	cmp    DWORD PTR [rip+0xfffffffffffeea7f],0x26        # 0xfffef2a1
  00822:    	jne    0x36f65
  00828: 00 	mov    r9,0x0
  0082f:    	sub    rsp,0x60
  00833:    	movq   QWORD PTR [rsp],xmm2
  00838:    	movq   QWORD PTR [rsp+0x8],xmm3
  0083e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00844:    	movq   QWORD PTR [rsp+0x18],xmm5
  0084a:    	movq   QWORD PTR [rsp+0x20],xmm6
  00850:    	movq   QWORD PTR [rsp+0x28],xmm7
  00856: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0085d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00864: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0086b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00872: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00879:    	mov    rdx,rdi
  0087c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00885:    	mov    QWORD PTR [rsp-0x38],rcx
  0088a:    	mov    rax,QWORD PTR [rbx]
  0088d:    	lea    rdi,[rsp-0x18]
  00892:    	mov    QWORD PTR [rdi],rax
  00895:    	mov    QWORD PTR [rbx],rdi
  00898: ff 	lea    rcx,[rbp-0xb0]
  0089f: 00 	mov    r8,0x3
  008a6:    	call   0x36fde
  008ab:    	lea    rdi,[rbp-0x8]
  008af:    	mov    QWORD PTR [rbx],rdi
  008b2:    	movq   xmm2,QWORD PTR [rsp]
  008b7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008bd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008c3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008c9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008cf:    	movq   xmm7,QWORD PTR [rsp+0x28]
  008d5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  008dc: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  008e3: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  008ea: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  008f1: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  008f8:    	add    rsp,0x60
  008fc: 34 	movabs r13,0x56343987ea90
  00906:    	test   rax,rax
  00909:    	je     0xfffec6e3
  0090f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00062 
:00064 %16 = %10
  00916:    	mov    rax,QWORD PTR [rbp-0x78]
  0091a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00065 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  00921: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00928: 00 	test   rdi,0x7
  0092f:    	jne    0x37010
  00935:    	cmp    DWORD PTR [rdi+0x4],0x2f
  00939:    	jne    0x37010
  0093f: 26 	cmp    DWORD PTR [rip+0xfffffffffffee95b],0x26        # 0xfffef2a1
  00946:    	jne    0x37010
  0094c: 00 	mov    r9,0x0
  00953:    	sub    rsp,0x60
  00957:    	movq   QWORD PTR [rsp],xmm2
  0095c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00962:    	movq   QWORD PTR [rsp+0x10],xmm4
  00968:    	movq   QWORD PTR [rsp+0x18],xmm5
  0096e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00974:    	movq   QWORD PTR [rsp+0x28],xmm7
  0097a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00981: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00988: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0098f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00996: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0099d:    	mov    rdx,rdi
  009a0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009a9:    	mov    QWORD PTR [rsp-0x38],rcx
  009ae:    	mov    rax,QWORD PTR [rbx]
  009b1:    	lea    rdi,[rsp-0x18]
  009b6:    	mov    QWORD PTR [rdi],rax
  009b9:    	mov    QWORD PTR [rbx],rdi
  009bc: ff 	lea    rcx,[rbp-0xa0]
  009c3: 00 	mov    r8,0x2
  009ca:    	call   0x37089
  009cf:    	lea    rdi,[rbp-0x8]
  009d3:    	mov    QWORD PTR [rbx],rdi
  009d6:    	movq   xmm2,QWORD PTR [rsp]
  009db:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009e1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009e7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009ed:    	movq   xmm6,QWORD PTR [rsp+0x20]
  009f3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  009f9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00a00: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00a07: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00a0e: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00a15: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00a1c:    	add    rsp,0x60
  00a20: 34 	movabs r13,0x56343987ead0
  00a2a:    	test   rax,rax
  00a2d:    	je     0xfffec6e3
  00a33:    	mov    QWORD PTR [rbp-0x80],rax
:00066 
:00068 %14 = const[Isect]                   [Isect]
  00a37: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffee86a]        # 0xfffef2a8
  00a3e: 00 	cmp    rax,QWORD PTR [rip+0x1ba3]        # 0x25e8
  00a45:    	jne    0x370bb
  00a4b: 00 	mov    rax,QWORD PTR [rip+0x1b86]        # 0x25d8
  00a52: ff 	mov    QWORD PTR [rbp-0x98],rax
:00069 %12 = %14.call new()                 [#<Class:Isect>]
  00a59: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a60: 00 	test   rdi,0x7
  00a67:    	jne    0x37195
  00a6d:    	cmp    DWORD PTR [rdi+0x4],0x31
  00a71:    	jne    0x37195
  00a77: 26 	cmp    DWORD PTR [rip+0xfffffffffffee823],0x26        # 0xfffef2a1
  00a7e:    	jne    0x37195
  00a84: 00 	mov    r9,0x0
  00a8b:    	sub    rsp,0x60
  00a8f:    	movq   QWORD PTR [rsp],xmm2
  00a94:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a9a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00aa0:    	movq   QWORD PTR [rsp+0x18],xmm5
  00aa6:    	movq   QWORD PTR [rsp+0x20],xmm6
  00aac:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ab2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ab9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ac0: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ac7: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ace: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00ad5:    	mov    rdx,rdi
  00ad8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ae1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ae6:    	mov    rax,QWORD PTR [rbx]
  00ae9:    	lea    rdi,[rsp-0x18]
  00aee:    	mov    QWORD PTR [rdi],rax
  00af1:    	mov    QWORD PTR [rbx],rdi
  00af4: ff 	lea    rcx,[rbp-0xa0]
  00afb: 00 	mov    r8,0x0
  00b02:    	call   0x3720e
  00b07:    	lea    rdi,[rbp-0x8]
  00b0b:    	mov    QWORD PTR [rbx],rdi
  00b0e:    	movq   xmm2,QWORD PTR [rsp]
  00b13:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b19:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b1f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b25:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00b2b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00b31: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00b38: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00b3f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00b46: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00b4d: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00b54:    	add    rsp,0x60
  00b58: 34 	movabs r13,0x56343987eb10
  00b62:    	test   rax,rax
  00b65:    	je     0xfffec6e3
  00b6b: ff 	mov    QWORD PTR [rbp-0x88],rax
:00070 
:00072 %14 = @spheres: Scene[IvarId(0)]
  00b72:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b76:    	mov    rax,QWORD PTR [rdi+0x10]
  00b7a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00073 %15 = 0: i32
  00b81: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00074 %14 = %14.[%15]                      [Array][Integer]
  00b8c:    	sub    rsp,0x60
  00b90:    	movq   QWORD PTR [rsp],xmm2
  00b95:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b9b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ba1:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ba7:    	movq   QWORD PTR [rsp+0x20],xmm6
  00bad:    	movq   QWORD PTR [rsp+0x28],xmm7
  00bb3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00bba: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00bc1: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00bc8: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00bcf: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00bd6: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00bdd: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00be4:    	mov    rdi,rbx
  00be7:    	mov    rsi,r12
  00bea: 34 	movabs r8,0x56343987eb48
  00bf4: 34 	movabs rax,0x563437f47370
  00bfe:    	call   rax
  00c00:    	movq   xmm2,QWORD PTR [rsp]
  00c05:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c0b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c11:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c17:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00c1d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00c23: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00c2a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00c31: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00c38: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00c3f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00c46:    	add    rsp,0x60
  00c4a: 34 	movabs r13,0x56343987eb50
  00c54:    	test   rax,rax
  00c57:    	je     0xfffec6e3
  00c5d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00075 %15 = %11
  00c64:    	mov    rax,QWORD PTR [rbp-0x80]
  00c68: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00076 %16 = %12
  00c6f: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c76: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00077 _ = %14.call intersect(%15; 2)       [Sphere]
  00c7d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c84: 00 	test   rdi,0x7
  00c8b:    	jne    0x37240
  00c91:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00c95:    	jne    0x37240
  00c9b: 26 	cmp    DWORD PTR [rip+0xfffffffffffee5ff],0x26        # 0xfffef2a1
  00ca2:    	jne    0x37240
  00ca8:    	sub    rsp,0x60
  00cac:    	movq   QWORD PTR [rsp],xmm2
  00cb1:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cb7:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cbd:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cc3:    	movq   QWORD PTR [rsp+0x20],xmm6
  00cc9:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ccf: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00cd6: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00cdd: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ce4: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ceb: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00cf2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cfb:    	mov    QWORD PTR [rsp-0x38],rcx
  00d00:    	mov    rax,QWORD PTR [rbx]
  00d03:    	lea    rdi,[rsp-0x18]
  00d08:    	mov    QWORD PTR [rdi],rax
  00d0b:    	mov    QWORD PTR [rbx],rdi
  00d0e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00d15:    	mov    QWORD PTR [rsp-0x38],rax
  00d1a: 00 	mov    rdi,0x2
  00d21: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00d28:    	mov    QWORD PTR [rsp-0x40],rax
  00d2d: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00d34:    	mov    QWORD PTR [rsp-0x48],rax
  00d39: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d42: 10 	movabs rax,0x1000000046
  00d4c:    	mov    QWORD PTR [rsp-0x28],rax
  00d51: 34 	movabs r13,0x5634398536b0
  00d5b:    	call   0xfffefee2
  00d60:    	lea    rdi,[rbp-0x8]
  00d64:    	mov    QWORD PTR [rbx],rdi
  00d67:    	movq   xmm2,QWORD PTR [rsp]
  00d6c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d72:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d78:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d7e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d84:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d8a: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d91: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d98: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d9f: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00da6: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00dad:    	add    rsp,0x60
  00db1: 34 	movabs r13,0x56343987eb90
  00dbb:    	test   rax,rax
  00dbe:    	je     0xfffec6e3
:00078 
:00080 %14 = @spheres: Scene[IvarId(0)]
  00dc4:    	mov    rdi,QWORD PTR [rbp-0x28]
  00dc8:    	mov    rax,QWORD PTR [rdi+0x10]
  00dcc: ff 	mov    QWORD PTR [rbp-0x98],rax
:00081 %15 = 1: i32
  00dd3: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00082 %14 = %14.[%15]                      [Array][Integer]
  00dde:    	sub    rsp,0x60
  00de2:    	movq   QWORD PTR [rsp],xmm2
  00de7:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ded:    	movq   QWORD PTR [rsp+0x10],xmm4
  00df3:    	movq   QWORD PTR [rsp+0x18],xmm5
  00df9:    	movq   QWORD PTR [rsp+0x20],xmm6
  00dff:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e05: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e0c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e13: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00e1a: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00e21: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00e28: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00e2f: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00e36:    	mov    rdi,rbx
  00e39:    	mov    rsi,r12
  00e3c: 34 	movabs r8,0x56343987ebc8
  00e46: 34 	movabs rax,0x563437f47370
  00e50:    	call   rax
  00e52:    	movq   xmm2,QWORD PTR [rsp]
  00e57:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e5d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e63:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e69:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e6f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e75: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e7c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e83: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e8a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e91: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e98:    	add    rsp,0x60
  00e9c: 34 	movabs r13,0x56343987ebd0
  00ea6:    	test   rax,rax
  00ea9:    	je     0xfffec6e3
  00eaf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00083 %15 = %11
  00eb6:    	mov    rax,QWORD PTR [rbp-0x80]
  00eba: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00084 %16 = %12
  00ec1: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00ec8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00085 _ = %14.call intersect(%15; 2)       [Sphere]
  00ecf: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ed6: 00 	test   rdi,0x7
  00edd:    	jne    0x372b9
  00ee3:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00ee7:    	jne    0x372b9
  00eed: 26 	cmp    DWORD PTR [rip+0xfffffffffffee3ad],0x26        # 0xfffef2a1
  00ef4:    	jne    0x372b9
  00efa:    	sub    rsp,0x60
  00efe:    	movq   QWORD PTR [rsp],xmm2
  00f03:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f09:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f0f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f15:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f1b:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f21: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f28: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f2f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00f36: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00f3d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00f44: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f4d:    	mov    QWORD PTR [rsp-0x38],rcx
  00f52:    	mov    rax,QWORD PTR [rbx]
  00f55:    	lea    rdi,[rsp-0x18]
  00f5a:    	mov    QWORD PTR [rdi],rax
  00f5d:    	mov    QWORD PTR [rbx],rdi
  00f60: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00f67:    	mov    QWORD PTR [rsp-0x38],rax
  00f6c: 00 	mov    rdi,0x2
  00f73: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f7a:    	mov    QWORD PTR [rsp-0x40],rax
  00f7f: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f86:    	mov    QWORD PTR [rsp-0x48],rax
  00f8b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f94: 10 	movabs rax,0x1000000046
  00f9e:    	mov    QWORD PTR [rsp-0x28],rax
  00fa3: 34 	movabs r13,0x5634398536b0
  00fad:    	call   0xfffefee2
  00fb2:    	lea    rdi,[rbp-0x8]
  00fb6:    	mov    QWORD PTR [rbx],rdi
  00fb9:    	movq   xmm2,QWORD PTR [rsp]
  00fbe:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fc4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fca:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fd0:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00fd6:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00fdc: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00fe3: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00fea: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00ff1: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00ff8: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00fff:    	add    rsp,0x60
  01003: 34 	movabs r13,0x56343987ec10
  0100d:    	test   rax,rax
  01010:    	je     0xfffec6e3
:00086 
:00088 %14 = @spheres: Scene[IvarId(0)]
  01016:    	mov    rdi,QWORD PTR [rbp-0x28]
  0101a:    	mov    rax,QWORD PTR [rdi+0x10]
  0101e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %15 = 2: i32
  01025: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00090 %14 = %14.[%15]                      [Array][Integer]
  01030:    	sub    rsp,0x60
  01034:    	movq   QWORD PTR [rsp],xmm2
  01039:    	movq   QWORD PTR [rsp+0x8],xmm3
  0103f:    	movq   QWORD PTR [rsp+0x10],xmm4
  01045:    	movq   QWORD PTR [rsp+0x18],xmm5
  0104b:    	movq   QWORD PTR [rsp+0x20],xmm6
  01051:    	movq   QWORD PTR [rsp+0x28],xmm7
  01057: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0105e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01065: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0106c: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01073: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0107a: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01081: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01088:    	mov    rdi,rbx
  0108b:    	mov    rsi,r12
  0108e: 34 	movabs r8,0x56343987ec48
  01098: 34 	movabs rax,0x563437f47370
  010a2:    	call   rax
  010a4:    	movq   xmm2,QWORD PTR [rsp]
  010a9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010af:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010b5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010bb:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010c1:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010c7: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010ce: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  010d5: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  010dc: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  010e3: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  010ea:    	add    rsp,0x60
  010ee: 34 	movabs r13,0x56343987ec50
  010f8:    	test   rax,rax
  010fb:    	je     0xfffec6e3
  01101: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %15 = %11
  01108:    	mov    rax,QWORD PTR [rbp-0x80]
  0110c: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00092 %16 = %12
  01113: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0111a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00093 _ = %14.call intersect(%15; 2)       [Sphere]
  01121: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01128: 00 	test   rdi,0x7
  0112f:    	jne    0x37332
  01135:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01139:    	jne    0x37332
  0113f: 26 	cmp    DWORD PTR [rip+0xfffffffffffee15b],0x26        # 0xfffef2a1
  01146:    	jne    0x37332
  0114c:    	sub    rsp,0x60
  01150:    	movq   QWORD PTR [rsp],xmm2
  01155:    	movq   QWORD PTR [rsp+0x8],xmm3
  0115b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01161:    	movq   QWORD PTR [rsp+0x18],xmm5
  01167:    	movq   QWORD PTR [rsp+0x20],xmm6
  0116d:    	movq   QWORD PTR [rsp+0x28],xmm7
  01173: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0117a: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01181: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01188: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0118f: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01196: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0119f:    	mov    QWORD PTR [rsp-0x38],rcx
  011a4:    	mov    rax,QWORD PTR [rbx]
  011a7:    	lea    rdi,[rsp-0x18]
  011ac:    	mov    QWORD PTR [rdi],rax
  011af:    	mov    QWORD PTR [rbx],rdi
  011b2: ff 	mov    rax,QWORD PTR [rbp-0x98]
  011b9:    	mov    QWORD PTR [rsp-0x38],rax
  011be: 00 	mov    rdi,0x2
  011c5: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  011cc:    	mov    QWORD PTR [rsp-0x40],rax
  011d1: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  011d8:    	mov    QWORD PTR [rsp-0x48],rax
  011dd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011e6: 10 	movabs rax,0x1000000046
  011f0:    	mov    QWORD PTR [rsp-0x28],rax
  011f5: 34 	movabs r13,0x5634398536b0
  011ff:    	call   0xfffefee2
  01204:    	lea    rdi,[rbp-0x8]
  01208:    	mov    QWORD PTR [rbx],rdi
  0120b:    	movq   xmm2,QWORD PTR [rsp]
  01210:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01216:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0121c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01222:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01228:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0122e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01235: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0123c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01243: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0124a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01251:    	add    rsp,0x60
  01255: 34 	movabs r13,0x56343987ec90
  0125f:    	test   rax,rax
  01262:    	je     0xfffec6e3
:00094 
:00096 %14 = @plane: Scene[IvarId(1)]
  01268:    	mov    rdi,QWORD PTR [rbp-0x28]
  0126c:    	mov    rax,QWORD PTR [rdi+0x18]
  01270: ff 	mov    QWORD PTR [rbp-0x98],rax
:00097 %15 = %11
  01277:    	mov    rax,QWORD PTR [rbp-0x80]
  0127b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00098 %16 = %12
  01282: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01289: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00099 _ = %14.call intersect(%15; 2)       [Plane]
  01290: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01297: 00 	test   rdi,0x7
  0129e:    	jne    0x373ab
  012a4:    	cmp    DWORD PTR [rdi+0x4],0x2c
  012a8:    	jne    0x373ab
  012ae: 26 	cmp    DWORD PTR [rip+0xfffffffffffedfec],0x26        # 0xfffef2a1
  012b5:    	jne    0x373ab
  012bb:    	sub    rsp,0x60
  012bf:    	movq   QWORD PTR [rsp],xmm2
  012c4:    	movq   QWORD PTR [rsp+0x8],xmm3
  012ca:    	movq   QWORD PTR [rsp+0x10],xmm4
  012d0:    	movq   QWORD PTR [rsp+0x18],xmm5
  012d6:    	movq   QWORD PTR [rsp+0x20],xmm6
  012dc:    	movq   QWORD PTR [rsp+0x28],xmm7
  012e2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  012e9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  012f0: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  012f7: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  012fe: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01305: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0130e:    	mov    QWORD PTR [rsp-0x38],rcx
  01313:    	mov    rax,QWORD PTR [rbx]
  01316:    	lea    rdi,[rsp-0x18]
  0131b:    	mov    QWORD PTR [rdi],rax
  0131e:    	mov    QWORD PTR [rbx],rdi
  01321: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01328:    	mov    QWORD PTR [rsp-0x38],rax
  0132d: 00 	mov    rdi,0x2
  01334: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0133b:    	mov    QWORD PTR [rsp-0x40],rax
  01340: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01347:    	mov    QWORD PTR [rsp-0x48],rax
  0134c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01355: 0e 	movabs rax,0xe00000048
  0135f:    	mov    QWORD PTR [rsp-0x28],rax
  01364: 34 	movabs r13,0x563439855550
  0136e:    	call   0xffff04f0
  01373:    	lea    rdi,[rbp-0x8]
  01377:    	mov    QWORD PTR [rbx],rdi
  0137a:    	movq   xmm2,QWORD PTR [rsp]
  0137f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01385:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0138b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01391:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01397:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0139d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  013a4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  013ab: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  013b2: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  013b9: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  013c0:    	add    rsp,0x60
  013c4: 34 	movabs r13,0x56343987ecf0
  013ce:    	test   rax,rax
  013d1:    	je     0xfffec6e3
:00100 
:00102 %14 = %12.call hit()                 [Isect]
  013d7: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  013de: 00 	test   rdi,0x7
  013e5:    	jne    0x37424
  013eb:    	cmp    DWORD PTR [rdi+0x4],0x30
  013ef:    	jne    0x37424
  013f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffedea5],0x26        # 0xfffef2a1
  013fc:    	jne    0x37424
  01402:    	mov    esi,DWORD PTR [rip+0x11ec]        # 0x25f4
  01408:    	cmp    esi,0xffffffff
  0140b:    	je     0x3749d
  01411:    	cmp    WORD PTR [rdi+0x2],0x3
  01416:    	jne    0x142f
  0141c:    	cmp    esi,0x6
  0141f:    	jge    0x142f
  01425:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0142a:    	jmp    0x14cf
  0142f:    	sub    rsp,0x60
  01433:    	movq   QWORD PTR [rsp],xmm2
  01438:    	movq   QWORD PTR [rsp+0x8],xmm3
  0143e:    	movq   QWORD PTR [rsp+0x10],xmm4
  01444:    	movq   QWORD PTR [rsp+0x18],xmm5
  0144a:    	movq   QWORD PTR [rsp+0x20],xmm6
  01450:    	movq   QWORD PTR [rsp+0x28],xmm7
  01456: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0145d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01464: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0146b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01472: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01479: 34 	movabs rax,0x563437ed0590
  01483:    	call   rax
  01485:    	movq   xmm2,QWORD PTR [rsp]
  0148a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01490:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01496:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0149c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014a2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014a8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  014af: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  014b6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  014bd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  014c4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  014cb:    	add    rsp,0x60
  014cf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00103 
:00105 condnotbr %14 =>:00148
  014d6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  014dd:    	or     rax,0x10
  014e1:    	cmp    rax,0x14
  014e5:    	je     0x24c5
:00106 %14 = %12
  014eb: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014f2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00107 %13 = %0.call ambient_occlusion(%14; 1) [<INVALID>]
  014f9: 01 	sub    DWORD PTR [rip+0x10f8],0x1        # 0x25f8
  01500:    	je     0x375d3
  01506:    	sub    rsp,0x60
  0150a:    	movq   QWORD PTR [rsp],xmm2
  0150f:    	movq   QWORD PTR [rsp+0x8],xmm3
  01515:    	movq   QWORD PTR [rsp+0x10],xmm4
  0151b:    	movq   QWORD PTR [rsp+0x18],xmm5
  01521:    	movq   QWORD PTR [rsp+0x20],xmm6
  01527:    	movq   QWORD PTR [rsp+0x28],xmm7
  0152d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01534: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0153b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01542: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01549: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01550:    	mov    r15d,0x32
  01556: 00 	cmp    r15d,DWORD PTR [rip+0x10a3]        # 0x2600
  0155d:    	jne    0x375f5
  01563:    	mov    eax,DWORD PTR [rip+0xfffffffffffedd38]        # 0xfffef2a1
  01569:    	cmp    DWORD PTR [rip+0x108d],eax        # 0x25fc
  0156f:    	jne    0x375f5
  01575: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0157e:    	mov    QWORD PTR [rsp-0x38],rcx
  01583:    	mov    rax,QWORD PTR [rbx]
  01586:    	lea    rdi,[rsp-0x18]
  0158b:    	mov    QWORD PTR [rdi],rax
  0158e:    	mov    QWORD PTR [rbx],rdi
  01591:    	mov    rax,QWORD PTR [rbp-0x28]
  01595:    	mov    QWORD PTR [rsp-0x38],rax
  0159a: 00 	mov    rdi,0x1
  015a1: ff 	mov    rax,QWORD PTR [rbp-0x98]
  015a8:    	mov    QWORD PTR [rsp-0x40],rax
  015ad: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015b6: 00 	movabs rax,0x0
  015c0:    	mov    QWORD PTR [rsp-0x28],rax
  015c5: 00 	movabs r13,0x0
  015cf:    	call   0xfffec6a8
  015d4:    	lea    rdi,[rbp-0x8]
  015d8:    	mov    QWORD PTR [rbx],rdi
  015db:    	movq   xmm2,QWORD PTR [rsp]
  015e0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015e6:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015ec:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015f2:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015f8:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015fe: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01605: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0160c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01613: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0161a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01621:    	add    rsp,0x60
  01625:    	test   rax,rax
  01628:    	je     0x37661
  0162e: ff 	mov    QWORD PTR [rbp-0x90],rax
:00108 
:00110 %14 = dynvar(2, %2)
  01635:    	mov    rax,QWORD PTR [rbp-0x10]
  01639:    	mov    rax,QWORD PTR [rax]
  0163c:    	mov    rax,QWORD PTR [rax-0x28]
  01640: ff 	mov    QWORD PTR [rbp-0x98],rax
:00111 %16 = dynvar(2, %2)
  01647:    	mov    rax,QWORD PTR [rbp-0x10]
  0164b:    	mov    rax,QWORD PTR [rax]
  0164e:    	mov    rax,QWORD PTR [rax-0x28]
  01652: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00112 %15 = %16.call x()                   [<INVALID>]
  01659: 01 	sub    DWORD PTR [rip+0xfa4],0x1        # 0x2604
  01660:    	je     0x376e9
  01666:    	sub    rsp,0x60
  0166a:    	movq   QWORD PTR [rsp],xmm2
  0166f:    	movq   QWORD PTR [rsp+0x8],xmm3
  01675:    	movq   QWORD PTR [rsp+0x10],xmm4
  0167b:    	movq   QWORD PTR [rsp+0x18],xmm5
  01681:    	movq   QWORD PTR [rsp+0x20],xmm6
  01687:    	movq   QWORD PTR [rsp+0x28],xmm7
  0168d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01694: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0169b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  016a2: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  016a9: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  016b0: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  016b7: 34 	movabs rax,0x563437f53600
  016c1:    	call   rax
  016c3:    	mov    r15d,eax
  016c6: 00 	cmp    r15d,DWORD PTR [rip+0xf3f]        # 0x260c
  016cd:    	jne    0x3770b
  016d3:    	mov    eax,DWORD PTR [rip+0xfffffffffffedbc8]        # 0xfffef2a1
  016d9:    	cmp    DWORD PTR [rip+0xf29],eax        # 0x2608
  016df:    	jne    0x3770b
  016e5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016ee:    	mov    QWORD PTR [rsp-0x38],rcx
  016f3:    	mov    rax,QWORD PTR [rbx]
  016f6:    	lea    rdi,[rsp-0x18]
  016fb:    	mov    QWORD PTR [rdi],rax
  016fe:    	mov    QWORD PTR [rbx],rdi
  01701: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01708:    	mov    QWORD PTR [rsp-0x38],rax
  0170d: 00 	mov    rdi,0x0
  01714: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0171d: 00 	movabs rax,0x0
  01727:    	mov    QWORD PTR [rsp-0x28],rax
  0172c: 00 	movabs r13,0x0
  01736:    	call   0xfffec6a8
  0173b:    	lea    rdi,[rbp-0x8]
  0173f:    	mov    QWORD PTR [rbx],rdi
  01742:    	movq   xmm2,QWORD PTR [rsp]
  01747:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0174d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01753:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01759:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0175f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01765: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0176c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01773: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0177a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01781: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01788:    	add    rsp,0x60
  0178c:    	test   rax,rax
  0178f:    	je     0x3777a
  01795: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00113 
:00115 %16 = %13.call x()                   [<INVALID>]
  0179c: 01 	sub    DWORD PTR [rip+0xe6d],0x1        # 0x2610
  017a3:    	je     0x37802
  017a9:    	sub    rsp,0x60
  017ad:    	movq   QWORD PTR [rsp],xmm2
  017b2:    	movq   QWORD PTR [rsp+0x8],xmm3
  017b8:    	movq   QWORD PTR [rsp+0x10],xmm4
  017be:    	movq   QWORD PTR [rsp+0x18],xmm5
  017c4:    	movq   QWORD PTR [rsp+0x20],xmm6
  017ca:    	movq   QWORD PTR [rsp+0x28],xmm7
  017d0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  017d7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  017de: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  017e5: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  017ec: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  017f3: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  017fa: 34 	movabs rax,0x563437f53600
  01804:    	call   rax
  01806:    	mov    r15d,eax
  01809: 00 	cmp    r15d,DWORD PTR [rip+0xe08]        # 0x2618
  01810:    	jne    0x37824
  01816:    	mov    eax,DWORD PTR [rip+0xfffffffffffeda85]        # 0xfffef2a1
  0181c:    	cmp    DWORD PTR [rip+0xdf2],eax        # 0x2614
  01822:    	jne    0x37824
  01828: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01831:    	mov    QWORD PTR [rsp-0x38],rcx
  01836:    	mov    rax,QWORD PTR [rbx]
  01839:    	lea    rdi,[rsp-0x18]
  0183e:    	mov    QWORD PTR [rdi],rax
  01841:    	mov    QWORD PTR [rbx],rdi
  01844: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0184b:    	mov    QWORD PTR [rsp-0x38],rax
  01850: 00 	mov    rdi,0x0
  01857: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01860: 00 	movabs rax,0x0
  0186a:    	mov    QWORD PTR [rsp-0x28],rax
  0186f: 00 	movabs r13,0x0
  01879:    	call   0xfffec6a8
  0187e:    	lea    rdi,[rbp-0x8]
  01882:    	mov    QWORD PTR [rbx],rdi
  01885:    	movq   xmm2,QWORD PTR [rsp]
  0188a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01890:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01896:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0189c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  018a2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  018a8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  018af: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  018b6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  018bd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  018c4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  018cb:    	add    rsp,0x60
  018cf:    	test   rax,rax
  018d2:    	je     0x37893
  018d8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00116 
:00118 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  018df: 01 	sub    DWORD PTR [rip+0xd36],0x1        # 0x261c
  018e6:    	je     0x3791b
  018ec: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  018f3: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  018fa:    	sub    rsp,0x60
  018fe:    	movq   QWORD PTR [rsp],xmm2
  01903:    	movq   QWORD PTR [rsp+0x8],xmm3
  01909:    	movq   QWORD PTR [rsp+0x10],xmm4
  0190f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01915:    	movq   QWORD PTR [rsp+0x20],xmm6
  0191b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01921: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01928: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0192f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01936: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0193d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01944:    	mov    rdx,rdi
  01947:    	mov    rcx,rsi
  0194a:    	mov    rdi,rbx
  0194d:    	mov    rsi,r12
  01950: 34 	movabs rax,0x563437f15c00
  0195a:    	call   rax
  0195c:    	movq   xmm2,QWORD PTR [rsp]
  01961:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01967:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0196d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01973:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01979:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0197f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01986: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0198d: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01994: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0199b: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  019a2:    	add    rsp,0x60
  019a6: 34 	movabs r13,0x56343987ee10
  019b0:    	test   rax,rax
  019b3:    	je     0xfffec6e3
  019b9: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00119 _ = %14.call x=(%15; 1)              [<INVALID>]
  019c0: 01 	sub    DWORD PTR [rip+0xc59],0x1        # 0x2620
  019c7:    	je     0x379b6
  019cd:    	sub    rsp,0x60
  019d1:    	movq   QWORD PTR [rsp],xmm2
  019d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  019dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  019e2:    	movq   QWORD PTR [rsp+0x18],xmm5
  019e8:    	movq   QWORD PTR [rsp+0x20],xmm6
  019ee:    	movq   QWORD PTR [rsp+0x28],xmm7
  019f4: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  019fb: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01a02: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01a09: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01a10: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01a17: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01a1e: 34 	movabs rax,0x563437f53600
  01a28:    	call   rax
  01a2a:    	mov    r15d,eax
  01a2d: 00 	cmp    r15d,DWORD PTR [rip+0xbf4]        # 0x2628
  01a34:    	jne    0x379d8
  01a3a:    	mov    eax,DWORD PTR [rip+0xfffffffffffed861]        # 0xfffef2a1
  01a40:    	cmp    DWORD PTR [rip+0xbde],eax        # 0x2624
  01a46:    	jne    0x379d8
  01a4c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a55:    	mov    QWORD PTR [rsp-0x38],rcx
  01a5a:    	mov    rax,QWORD PTR [rbx]
  01a5d:    	lea    rdi,[rsp-0x18]
  01a62:    	mov    QWORD PTR [rdi],rax
  01a65:    	mov    QWORD PTR [rbx],rdi
  01a68: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01a6f:    	mov    QWORD PTR [rsp-0x38],rax
  01a74: 00 	mov    rdi,0x1
  01a7b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01a82:    	mov    QWORD PTR [rsp-0x40],rax
  01a87: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a90: 00 	movabs rax,0x0
  01a9a:    	mov    QWORD PTR [rsp-0x28],rax
  01a9f: 00 	movabs r13,0x0
  01aa9:    	call   0xfffec6a8
  01aae:    	lea    rdi,[rbp-0x8]
  01ab2:    	mov    QWORD PTR [rbx],rdi
  01ab5:    	movq   xmm2,QWORD PTR [rsp]
  01aba:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01ac0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01ac6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01acc:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01ad2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01ad8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01adf: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01ae6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01aed: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01af4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01afb:    	add    rsp,0x60
  01aff:    	test   rax,rax
  01b02:    	je     0x37a47
:00120 
:00122 %14 = dynvar(2, %2)
  01b08:    	mov    rax,QWORD PTR [rbp-0x10]
  01b0c:    	mov    rax,QWORD PTR [rax]
  01b0f:    	mov    rax,QWORD PTR [rax-0x28]
  01b13: ff 	mov    QWORD PTR [rbp-0x98],rax
:00123 %16 = dynvar(2, %2)
  01b1a:    	mov    rax,QWORD PTR [rbp-0x10]
  01b1e:    	mov    rax,QWORD PTR [rax]
  01b21:    	mov    rax,QWORD PTR [rax-0x28]
  01b25: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00124 %15 = %16.call y()                   [<INVALID>]
  01b2c: 01 	sub    DWORD PTR [rip+0xaf9],0x1        # 0x262c
  01b33:    	je     0x37acf
  01b39:    	sub    rsp,0x60
  01b3d:    	movq   QWORD PTR [rsp],xmm2
  01b42:    	movq   QWORD PTR [rsp+0x8],xmm3
  01b48:    	movq   QWORD PTR [rsp+0x10],xmm4
  01b4e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01b54:    	movq   QWORD PTR [rsp+0x20],xmm6
  01b5a:    	movq   QWORD PTR [rsp+0x28],xmm7
  01b60: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01b67: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01b6e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01b75: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01b7c: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01b83: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01b8a: 34 	movabs rax,0x563437f53600
  01b94:    	call   rax
  01b96:    	mov    r15d,eax
  01b99: 00 	cmp    r15d,DWORD PTR [rip+0xa94]        # 0x2634
  01ba0:    	jne    0x37af1
  01ba6:    	mov    eax,DWORD PTR [rip+0xfffffffffffed6f5]        # 0xfffef2a1
  01bac:    	cmp    DWORD PTR [rip+0xa7e],eax        # 0x2630
  01bb2:    	jne    0x37af1
  01bb8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bc1:    	mov    QWORD PTR [rsp-0x38],rcx
  01bc6:    	mov    rax,QWORD PTR [rbx]
  01bc9:    	lea    rdi,[rsp-0x18]
  01bce:    	mov    QWORD PTR [rdi],rax
  01bd1:    	mov    QWORD PTR [rbx],rdi
  01bd4: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01bdb:    	mov    QWORD PTR [rsp-0x38],rax
  01be0: 00 	mov    rdi,0x0
  01be7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01bf0: 00 	movabs rax,0x0
  01bfa:    	mov    QWORD PTR [rsp-0x28],rax
  01bff: 00 	movabs r13,0x0
  01c09:    	call   0xfffec6a8
  01c0e:    	lea    rdi,[rbp-0x8]
  01c12:    	mov    QWORD PTR [rbx],rdi
  01c15:    	movq   xmm2,QWORD PTR [rsp]
  01c1a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01c20:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01c26:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01c2c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01c32:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01c38: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01c3f: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01c46: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01c4d: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01c54: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01c5b:    	add    rsp,0x60
  01c5f:    	test   rax,rax
  01c62:    	je     0x37b60
  01c68: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00125 
:00127 %16 = %13.call y()                   [<INVALID>]
  01c6f: 01 	sub    DWORD PTR [rip+0x9c2],0x1        # 0x2638
  01c76:    	je     0x37be8
  01c7c:    	sub    rsp,0x60
  01c80:    	movq   QWORD PTR [rsp],xmm2
  01c85:    	movq   QWORD PTR [rsp+0x8],xmm3
  01c8b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01c91:    	movq   QWORD PTR [rsp+0x18],xmm5
  01c97:    	movq   QWORD PTR [rsp+0x20],xmm6
  01c9d:    	movq   QWORD PTR [rsp+0x28],xmm7
  01ca3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01caa: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01cb1: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01cb8: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01cbf: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01cc6: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01ccd: 34 	movabs rax,0x563437f53600
  01cd7:    	call   rax
  01cd9:    	mov    r15d,eax
  01cdc: 00 	cmp    r15d,DWORD PTR [rip+0x95d]        # 0x2640
  01ce3:    	jne    0x37c0a
  01ce9:    	mov    eax,DWORD PTR [rip+0xfffffffffffed5b2]        # 0xfffef2a1
  01cef:    	cmp    DWORD PTR [rip+0x947],eax        # 0x263c
  01cf5:    	jne    0x37c0a
  01cfb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01d04:    	mov    QWORD PTR [rsp-0x38],rcx
  01d09:    	mov    rax,QWORD PTR [rbx]
  01d0c:    	lea    rdi,[rsp-0x18]
  01d11:    	mov    QWORD PTR [rdi],rax
  01d14:    	mov    QWORD PTR [rbx],rdi
  01d17: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01d1e:    	mov    QWORD PTR [rsp-0x38],rax
  01d23: 00 	mov    rdi,0x0
  01d2a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01d33: 00 	movabs rax,0x0
  01d3d:    	mov    QWORD PTR [rsp-0x28],rax
  01d42: 00 	movabs r13,0x0
  01d4c:    	call   0xfffec6a8
  01d51:    	lea    rdi,[rbp-0x8]
  01d55:    	mov    QWORD PTR [rbx],rdi
  01d58:    	movq   xmm2,QWORD PTR [rsp]
  01d5d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01d63:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01d69:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01d6f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01d75:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01d7b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01d82: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01d89: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01d90: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01d97: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01d9e:    	add    rsp,0x60
  01da2:    	test   rax,rax
  01da5:    	je     0x37c79
  01dab: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00128 
:00130 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01db2: 01 	sub    DWORD PTR [rip+0x88b],0x1        # 0x2644
  01db9:    	je     0x37d01
  01dbf: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01dc6: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  01dcd:    	sub    rsp,0x60
  01dd1:    	movq   QWORD PTR [rsp],xmm2
  01dd6:    	movq   QWORD PTR [rsp+0x8],xmm3
  01ddc:    	movq   QWORD PTR [rsp+0x10],xmm4
  01de2:    	movq   QWORD PTR [rsp+0x18],xmm5
  01de8:    	movq   QWORD PTR [rsp+0x20],xmm6
  01dee:    	movq   QWORD PTR [rsp+0x28],xmm7
  01df4: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01dfb: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01e02: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01e09: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01e10: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01e17:    	mov    rdx,rdi
  01e1a:    	mov    rcx,rsi
  01e1d:    	mov    rdi,rbx
  01e20:    	mov    rsi,r12
  01e23: 34 	movabs rax,0x563437f15c00
  01e2d:    	call   rax
  01e2f:    	movq   xmm2,QWORD PTR [rsp]
  01e34:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01e3a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01e40:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01e46:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01e4c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01e52: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01e59: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01e60: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01e67: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01e6e: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01e75:    	add    rsp,0x60
  01e79: 34 	movabs r13,0x56343987eed0
  01e83:    	test   rax,rax
  01e86:    	je     0xfffec6e3
  01e8c: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00131 _ = %14.call y=(%15; 1)              [<INVALID>]
  01e93: 01 	sub    DWORD PTR [rip+0x7ae],0x1        # 0x2648
  01e9a:    	je     0x37d9c
  01ea0:    	sub    rsp,0x60
  01ea4:    	movq   QWORD PTR [rsp],xmm2
  01ea9:    	movq   QWORD PTR [rsp+0x8],xmm3
  01eaf:    	movq   QWORD PTR [rsp+0x10],xmm4
  01eb5:    	movq   QWORD PTR [rsp+0x18],xmm5
  01ebb:    	movq   QWORD PTR [rsp+0x20],xmm6
  01ec1:    	movq   QWORD PTR [rsp+0x28],xmm7
  01ec7: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01ece: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01ed5: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01edc: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01ee3: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01eea: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01ef1: 34 	movabs rax,0x563437f53600
  01efb:    	call   rax
  01efd:    	mov    r15d,eax
  01f00: 00 	cmp    r15d,DWORD PTR [rip+0x749]        # 0x2650
  01f07:    	jne    0x37dbe
  01f0d:    	mov    eax,DWORD PTR [rip+0xfffffffffffed38e]        # 0xfffef2a1
  01f13:    	cmp    DWORD PTR [rip+0x733],eax        # 0x264c
  01f19:    	jne    0x37dbe
  01f1f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01f28:    	mov    QWORD PTR [rsp-0x38],rcx
  01f2d:    	mov    rax,QWORD PTR [rbx]
  01f30:    	lea    rdi,[rsp-0x18]
  01f35:    	mov    QWORD PTR [rdi],rax
  01f38:    	mov    QWORD PTR [rbx],rdi
  01f3b: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01f42:    	mov    QWORD PTR [rsp-0x38],rax
  01f47: 00 	mov    rdi,0x1
  01f4e: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01f55:    	mov    QWORD PTR [rsp-0x40],rax
  01f5a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01f63: 00 	movabs rax,0x0
  01f6d:    	mov    QWORD PTR [rsp-0x28],rax
  01f72: 00 	movabs r13,0x0
  01f7c:    	call   0xfffec6a8
  01f81:    	lea    rdi,[rbp-0x8]
  01f85:    	mov    QWORD PTR [rbx],rdi
  01f88:    	movq   xmm2,QWORD PTR [rsp]
  01f8d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01f93:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01f99:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01f9f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01fa5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01fab: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01fb2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01fb9: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01fc0: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01fc7: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01fce:    	add    rsp,0x60
  01fd2:    	test   rax,rax
  01fd5:    	je     0x37e2d
:00132 
:00134 %14 = dynvar(2, %2)
  01fdb:    	mov    rax,QWORD PTR [rbp-0x10]
  01fdf:    	mov    rax,QWORD PTR [rax]
  01fe2:    	mov    rax,QWORD PTR [rax-0x28]
  01fe6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00135 %16 = dynvar(2, %2)
  01fed:    	mov    rax,QWORD PTR [rbp-0x10]
  01ff1:    	mov    rax,QWORD PTR [rax]
  01ff4:    	mov    rax,QWORD PTR [rax-0x28]
  01ff8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00136 %15 = %16.call z()                   [<INVALID>]
  01fff: 01 	sub    DWORD PTR [rip+0x64e],0x1        # 0x2654
  02006:    	je     0x37eb5
  0200c:    	sub    rsp,0x60
  02010:    	movq   QWORD PTR [rsp],xmm2
  02015:    	movq   QWORD PTR [rsp+0x8],xmm3
  0201b:    	movq   QWORD PTR [rsp+0x10],xmm4
  02021:    	movq   QWORD PTR [rsp+0x18],xmm5
  02027:    	movq   QWORD PTR [rsp+0x20],xmm6
  0202d:    	movq   QWORD PTR [rsp+0x28],xmm7
  02033: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0203a: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02041: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02048: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0204f: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02056: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  0205d: 34 	movabs rax,0x563437f53600
  02067:    	call   rax
  02069:    	mov    r15d,eax
  0206c: 00 	cmp    r15d,DWORD PTR [rip+0x5e9]        # 0x265c
  02073:    	jne    0x37ed7
  02079:    	mov    eax,DWORD PTR [rip+0xfffffffffffed222]        # 0xfffef2a1
  0207f:    	cmp    DWORD PTR [rip+0x5d3],eax        # 0x2658
  02085:    	jne    0x37ed7
  0208b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  02094:    	mov    QWORD PTR [rsp-0x38],rcx
  02099:    	mov    rax,QWORD PTR [rbx]
  0209c:    	lea    rdi,[rsp-0x18]
  020a1:    	mov    QWORD PTR [rdi],rax
  020a4:    	mov    QWORD PTR [rbx],rdi
  020a7: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  020ae:    	mov    QWORD PTR [rsp-0x38],rax
  020b3: 00 	mov    rdi,0x0
  020ba: 00 	mov    QWORD PTR [rsp-0x30],0x0
  020c3: 00 	movabs rax,0x0
  020cd:    	mov    QWORD PTR [rsp-0x28],rax
  020d2: 00 	movabs r13,0x0
  020dc:    	call   0xfffec6a8
  020e1:    	lea    rdi,[rbp-0x8]
  020e5:    	mov    QWORD PTR [rbx],rdi
  020e8:    	movq   xmm2,QWORD PTR [rsp]
  020ed:    	movq   xmm3,QWORD PTR [rsp+0x8]
  020f3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  020f9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  020ff:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02105:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0210b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02112: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  02119: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  02120: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02127: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  0212e:    	add    rsp,0x60
  02132:    	test   rax,rax
  02135:    	je     0x37f46
  0213b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00137 
:00139 %16 = %13.call z()                   [<INVALID>]
  02142: 01 	sub    DWORD PTR [rip+0x517],0x1        # 0x2660
  02149:    	je     0x37fce
  0214f:    	sub    rsp,0x60
  02153:    	movq   QWORD PTR [rsp],xmm2
  02158:    	movq   QWORD PTR [rsp+0x8],xmm3
  0215e:    	movq   QWORD PTR [rsp+0x10],xmm4
  02164:    	movq   QWORD PTR [rsp+0x18],xmm5
  0216a:    	movq   QWORD PTR [rsp+0x20],xmm6
  02170:    	movq   QWORD PTR [rsp+0x28],xmm7
  02176: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0217d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02184: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0218b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  02192: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02199: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  021a0: 34 	movabs rax,0x563437f53600
  021aa:    	call   rax
  021ac:    	mov    r15d,eax
  021af: 00 	cmp    r15d,DWORD PTR [rip+0x4b2]        # 0x2668
  021b6:    	jne    0x37ff0
  021bc:    	mov    eax,DWORD PTR [rip+0xfffffffffffed0df]        # 0xfffef2a1
  021c2:    	cmp    DWORD PTR [rip+0x49c],eax        # 0x2664
  021c8:    	jne    0x37ff0
  021ce: 00 	mov    QWORD PTR [rsp-0x20],0x0
  021d7:    	mov    QWORD PTR [rsp-0x38],rcx
  021dc:    	mov    rax,QWORD PTR [rbx]
  021df:    	lea    rdi,[rsp-0x18]
  021e4:    	mov    QWORD PTR [rdi],rax
  021e7:    	mov    QWORD PTR [rbx],rdi
  021ea: ff 	mov    rax,QWORD PTR [rbp-0x90]
  021f1:    	mov    QWORD PTR [rsp-0x38],rax
  021f6: 00 	mov    rdi,0x0
  021fd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02206: 00 	movabs rax,0x0
  02210:    	mov    QWORD PTR [rsp-0x28],rax
  02215: 00 	movabs r13,0x0
  0221f:    	call   0xfffec6a8
  02224:    	lea    rdi,[rbp-0x8]
  02228:    	mov    QWORD PTR [rbx],rdi
  0222b:    	movq   xmm2,QWORD PTR [rsp]
  02230:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02236:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0223c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02242:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02248:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0224e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02255: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0225c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  02263: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0226a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02271:    	add    rsp,0x60
  02275:    	test   rax,rax
  02278:    	je     0x3805f
  0227e: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00140 
:00142 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  02285: 01 	sub    DWORD PTR [rip+0x3e0],0x1        # 0x266c
  0228c:    	je     0x380e7
  02292: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  02299: ff 	mov    rsi,QWORD PTR [rbp-0xa8]
  022a0:    	sub    rsp,0x60
  022a4:    	movq   QWORD PTR [rsp],xmm2
  022a9:    	movq   QWORD PTR [rsp+0x8],xmm3
  022af:    	movq   QWORD PTR [rsp+0x10],xmm4
  022b5:    	movq   QWORD PTR [rsp+0x18],xmm5
  022bb:    	movq   QWORD PTR [rsp+0x20],xmm6
  022c1:    	movq   QWORD PTR [rsp+0x28],xmm7
  022c7: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  022ce: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  022d5: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  022dc: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  022e3: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  022ea:    	mov    rdx,rdi
  022ed:    	mov    rcx,rsi
  022f0:    	mov    rdi,rbx
  022f3:    	mov    rsi,r12
  022f6: 34 	movabs rax,0x563437f15c00
  02300:    	call   rax
  02302:    	movq   xmm2,QWORD PTR [rsp]
  02307:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0230d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02313:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02319:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0231f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02325: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0232c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  02333: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0233a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  02341: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  02348:    	add    rsp,0x60
  0234c: 34 	movabs r13,0x56343987ef90
  02356:    	test   rax,rax
  02359:    	je     0xfffec6e3
  0235f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00143 _ = %14.call z=(%15; 1)              [<INVALID>]
  02366: 01 	sub    DWORD PTR [rip+0x303],0x1        # 0x2670
  0236d:    	je     0x38182
  02373:    	sub    rsp,0x60
  02377:    	movq   QWORD PTR [rsp],xmm2
  0237c:    	movq   QWORD PTR [rsp+0x8],xmm3
  02382:    	movq   QWORD PTR [rsp+0x10],xmm4
  02388:    	movq   QWORD PTR [rsp+0x18],xmm5
  0238e:    	movq   QWORD PTR [rsp+0x20],xmm6
  02394:    	movq   QWORD PTR [rsp+0x28],xmm7
  0239a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  023a1: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  023a8: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  023af: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  023b6: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  023bd: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  023c4: 34 	movabs rax,0x563437f53600
  023ce:    	call   rax
  023d0:    	mov    r15d,eax
  023d3: 00 	cmp    r15d,DWORD PTR [rip+0x29e]        # 0x2678
  023da:    	jne    0x381a4
  023e0:    	mov    eax,DWORD PTR [rip+0xfffffffffffecebb]        # 0xfffef2a1
  023e6:    	cmp    DWORD PTR [rip+0x288],eax        # 0x2674
  023ec:    	jne    0x381a4
  023f2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  023fb:    	mov    QWORD PTR [rsp-0x38],rcx
  02400:    	mov    rax,QWORD PTR [rbx]
  02403:    	lea    rdi,[rsp-0x18]
  02408:    	mov    QWORD PTR [rdi],rax
  0240b:    	mov    QWORD PTR [rbx],rdi
  0240e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02415:    	mov    QWORD PTR [rsp-0x38],rax
  0241a: 00 	mov    rdi,0x1
  02421: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02428:    	mov    QWORD PTR [rsp-0x40],rax
  0242d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02436: 00 	movabs rax,0x0
  02440:    	mov    QWORD PTR [rsp-0x28],rax
  02445: 00 	movabs r13,0x0
  0244f:    	call   0xfffec6a8
  02454:    	lea    rdi,[rbp-0x8]
  02458:    	mov    QWORD PTR [rbx],rdi
  0245b:    	movq   xmm2,QWORD PTR [rsp]
  02460:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02466:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0246c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02472:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02478:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0247e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02485: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0248c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  02493: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0249a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  024a1:    	add    rsp,0x60
  024a5:    	test   rax,rax
  024a8:    	je     0x38213
:00144 
:00146 %14 = %15
  024ae: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  024b5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00147 ret %14
  024bc: ff 	mov    rax,QWORD PTR [rbp-0x98]
  024c3:    	leave  
  024c4:    	ret    
:00148 %14 = nil
  024c5: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00149 ret %14
  024d0: ff 	mov    rax,QWORD PTR [rbp-0x98]
  024d7:    	leave  
  024d8:    	ret    
==> start whole compile: ambient_occlusion FuncId(76) self_class:Scene start:[00000] bytecode:0x56343985c820
<== finished compile. elapsed:98.2µs
offset:Pos(90068) code: 4032 bytes  data: 292 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0xa0
  0000e: cmp    edx,0x1
  00011: je     0x4d
  00017: jl     0x22
  0001d: jmp    0x35ba6
  00022: jmp    0x35ba6
  00027: mov    eax,0x1
  0002c: sub    eax,edx
  0002e: test   rax,rax
  00031: je     0x4d
  00037: lea    rdi,[rbp-0x38]
  0003b: mov    QWORD PTR [rdi+rax*8],0x0
  00043: sub    rax,0x1
  00047: jne    0x3b
  0004d: mov    rax,0x4
  00054: mov    QWORD PTR [rbp-0x38],rax
  00058: mov    QWORD PTR [rbp-0x40],rax
  0005c: mov    QWORD PTR [rbp-0x48],rax
  00060: mov    QWORD PTR [rbp-0x50],rax
  00064: mov    QWORD PTR [rbp-0x58],rax
  00068: mov    QWORD PTR [rbp-0x60],rax
  0006c: mov    QWORD PTR [rbp-0x68],rax
  00070: mov    QWORD PTR [rbp-0x70],rax
  00074: mov    QWORD PTR [rbp-0x78],rax
  00078: mov    QWORD PTR [rbp-0x80],rax
  0007c: mov    QWORD PTR [rbp-0x88],rax
  00083: mov    QWORD PTR [rbp-0x90],rax
  0008a: mov    rdi,QWORD PTR [rbp-0x28]
  0008e: test   rdi,0x7
  00095: jne    0x35bb5
  0009b: cmp    DWORD PTR [rdi+0x4],0x32
  0009f: jne    0x35bb5
:00000 init_method reg:14 arg:1 pos:1 req:1 stack_offset:10
:00001 %8 = const[Array]                    [Array]
  000a5: mov    rax,QWORD PTR [rip+0xfffffffffffecb80]        # 0xfffecc2c
  000ac: cmp    rax,QWORD PTR [rip+0xf29]        # 0xfdc
  000b3: jne    0x35bc4
  000b9: mov    rax,QWORD PTR [rip+0xf0c]        # 0xfcc
  000c0: mov    QWORD PTR [rbp-0x68],rax
:00002 %2 = %8.call new()                   [#<Class:Array>]
  000c4: mov    rdi,QWORD PTR [rbp-0x68]
  000c8: test   rdi,0x7
  000cf: jne    0x35c0a
  000d5: cmp    DWORD PTR [rdi+0x4],0x1e
  000d9: jne    0x35c0a
  000df: cmp    DWORD PTR [rip+0xfffffffffffecb3f],0x26        # 0xfffecc25
  000e6: jne    0x35c0a
  000ec: mov    r9,0x0
  000f3: mov    rdx,rdi
  000f6: mov    QWORD PTR [rsp-0x20],0x0
  000ff: mov    QWORD PTR [rsp-0x38],rcx
  00104: mov    rax,QWORD PTR [rbx]
  00107: lea    rdi,[rsp-0x18]
  0010c: mov    QWORD PTR [rdi],rax
  0010f: mov    QWORD PTR [rbx],rdi
  00112: lea    rcx,[rbp-0x70]
  00116: mov    r8,0x0
  0011d: call   0x35c19
  00122: lea    rdi,[rbp-0x8]
  00126: mov    QWORD PTR [rbx],rdi
  00129: movabs r13,0x56343985c860
  00133: test   rax,rax
  00136: je     0xfffea067
  0013c: mov    QWORD PTR [rbp-0x38],rax
:00003 
:00005 %8 = %2
  00140: mov    rax,QWORD PTR [rbp-0x38]
  00144: mov    QWORD PTR [rbp-0x68],rax
:00006 %9 = %1.call n()                     [Isect]
  00148: mov    rdi,QWORD PTR [rbp-0x30]
  0014c: test   rdi,0x7
  00153: jne    0x35c4b
  00159: cmp    DWORD PTR [rdi+0x4],0x30
  0015d: jne    0x35c4b
  00163: cmp    DWORD PTR [rip+0xfffffffffffecabb],0x26        # 0xfffecc25
  0016a: jne    0x35c4b
  00170: mov    esi,DWORD PTR [rip+0xe72]        # 0xfe8
  00176: cmp    esi,0xffffffff
  00179: je     0x35c5a
  0017f: cmp    WORD PTR [rdi+0x2],0x3
  00184: jne    0x19d
  0018a: cmp    esi,0x6
  0018d: jge    0x19d
  00193: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00198: jmp    0x1a9
  0019d: movabs rax,0x563437ed0590
  001a7: call   rax
  001a9: mov    QWORD PTR [rbp-0x70],rax
:00007 
:00009 _ = %0.call otherBasis(%8; 2)        [Scene]
  001ad: mov    rdi,QWORD PTR [rbp-0x28]
  001b1: cmp    DWORD PTR [rip+0xfffffffffffeca6d],0x26        # 0xfffecc25
  001b8: jne    0x35c83
  001be: mov    QWORD PTR [rsp-0x20],0x0
  001c7: mov    QWORD PTR [rsp-0x38],rcx
  001cc: mov    rax,QWORD PTR [rbx]
  001cf: lea    rdi,[rsp-0x18]
  001d4: mov    QWORD PTR [rdi],rax
  001d7: mov    QWORD PTR [rbx],rdi
  001da: mov    rax,QWORD PTR [rbp-0x28]
  001de: mov    QWORD PTR [rsp-0x38],rax
  001e3: mov    rdi,0x2
  001ea: mov    rax,QWORD PTR [rbp-0x68]
  001ee: mov    QWORD PTR [rsp-0x40],rax
  001f3: mov    rax,QWORD PTR [rbp-0x70]
  001f7: mov    QWORD PTR [rsp-0x48],rax
  001fc: mov    QWORD PTR [rsp-0x30],0x0
  00205: movabs rax,0x90000003c
  0020f: mov    QWORD PTR [rsp-0x28],rax
  00214: movabs r13,0x5634398723f0
  0021e: call   0xffff6a79
  00223: lea    rdi,[rbp-0x8]
  00227: mov    QWORD PTR [rbx],rdi
  0022a: movabs r13,0x56343985c8d0
  00234: test   rax,rax
  00237: je     0xfffea067
:00010 
:00012 %3 = const[NAO_SAMPLES]              [8]
  0023d: mov    rax,QWORD PTR [rip+0xfffffffffffec9e8]        # 0xfffecc2c
  00244: cmp    rax,QWORD PTR [rip+0xdb1]        # 0xffc
  0024b: jne    0x35c92
  00251: mov    rax,QWORD PTR [rip+0xd94]        # 0xfec
  00258: mov    QWORD PTR [rbp-0x40],rax
:00013 %4 = const[NAO_SAMPLES]              [8]
  0025c: mov    rax,QWORD PTR [rip+0xfffffffffffec9c9]        # 0xfffecc2c
  00263: cmp    rax,QWORD PTR [rip+0xdb2]        # 0x101c
  0026a: jne    0x35cd8
  00270: mov    rax,QWORD PTR [rip+0xd95]        # 0x100c
  00277: mov    QWORD PTR [rbp-0x48],rax
:00014 %5 = literal[0.0001]
  0027b: movq   xmm2,QWORD PTR [rip+0xda9]        # 0x102c
  00283: movabs rax,0xf8d1b71758e2196a
  0028d: mov    QWORD PTR [rbp-0x50],rax
:00015 %6 = literal[0.0]
  00291: movq   xmm3,QWORD PTR [rip+0xda3]        # 0x103c
  00299: movabs rax,0x8000000000000002
  002a3: mov    QWORD PTR [rbp-0x58],rax
:00016 %8 = const[Vec]                      [Vec]
  002a7: mov    rax,QWORD PTR [rip+0xfffffffffffec97e]        # 0xfffecc2c
  002ae: cmp    rax,QWORD PTR [rip+0xda7]        # 0x105c
  002b5: jne    0x35d1e
  002bb: mov    rax,QWORD PTR [rip+0xd8a]        # 0x104c
  002c2: mov    QWORD PTR [rbp-0x68],rax
:00017 %10 = %1.call pl()                   [Isect]
  002c6: mov    rdi,QWORD PTR [rbp-0x30]
  002ca: test   rdi,0x7
  002d1: jne    0x35d82
  002d7: cmp    DWORD PTR [rdi+0x4],0x30
  002db: jne    0x35d82
  002e1: cmp    DWORD PTR [rip+0xfffffffffffec93d],0x26        # 0xfffecc25
  002e8: jne    0x35d82
  002ee: mov    esi,DWORD PTR [rip+0xd74]        # 0x1068
  002f4: cmp    esi,0xffffffff
  002f7: je     0x35d91
  002fd: cmp    WORD PTR [rdi+0x2],0x3
  00302: jne    0x31b
  00308: cmp    esi,0x6
  0030b: jge    0x31b
  00311: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00316: jmp    0x345
  0031b: sub    rsp,0x10
  0031f: movq   QWORD PTR [rsp],xmm2
  00324: movq   QWORD PTR [rsp+0x8],xmm3
  0032a: movabs rax,0x563437ed0590
  00334: call   rax
  00336: movq   xmm2,QWORD PTR [rsp]
  0033b: movq   xmm3,QWORD PTR [rsp+0x8]
  00341: add    rsp,0x10
  00345: mov    QWORD PTR [rbp-0x78],rax
:00018 
:00020 %9 = %10.call x()                    [Vec]
  00349: mov    rdi,QWORD PTR [rbp-0x78]
  0034d: test   rdi,0x7
  00354: jne    0x35dd8
  0035a: cmp    DWORD PTR [rdi+0x4],0x28
  0035e: jne    0x35dd8
  00364: cmp    DWORD PTR [rip+0xfffffffffffec8ba],0x26        # 0xfffecc25
  0036b: jne    0x35dd8
  00371: mov    esi,DWORD PTR [rip+0xcf9]        # 0x1070
  00377: cmp    esi,0xffffffff
  0037a: je     0x35de7
  00380: cmp    WORD PTR [rdi+0x2],0x3
  00385: jne    0x39e
  0038b: cmp    esi,0x6
  0038e: jge    0x39e
  00394: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00399: jmp    0x3c8
  0039e: sub    rsp,0x10
  003a2: movq   QWORD PTR [rsp],xmm2
  003a7: movq   QWORD PTR [rsp+0x8],xmm3
  003ad: movabs rax,0x563437ed0590
  003b7: call   rax
  003b9: movq   xmm2,QWORD PTR [rsp]
  003be: movq   xmm3,QWORD PTR [rsp+0x8]
  003c4: add    rsp,0x10
  003c8: mov    QWORD PTR [rbp-0x70],rax
:00021 
:00023 %11 = %1.call n()                    [Isect]
  003cc: mov    rdi,QWORD PTR [rbp-0x30]
  003d0: test   rdi,0x7
  003d7: jne    0x35e2e
  003dd: cmp    DWORD PTR [rdi+0x4],0x30
  003e1: jne    0x35e2e
  003e7: cmp    DWORD PTR [rip+0xfffffffffffec837],0x26        # 0xfffecc25
  003ee: jne    0x35e2e
  003f4: mov    esi,DWORD PTR [rip+0xc7e]        # 0x1078
  003fa: cmp    esi,0xffffffff
  003fd: je     0x35e3d
  00403: cmp    WORD PTR [rdi+0x2],0x3
  00408: jne    0x421
  0040e: cmp    esi,0x6
  00411: jge    0x421
  00417: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0041c: jmp    0x44b
  00421: sub    rsp,0x10
  00425: movq   QWORD PTR [rsp],xmm2
  0042a: movq   QWORD PTR [rsp+0x8],xmm3
  00430: movabs rax,0x563437ed0590
  0043a: call   rax
  0043c: movq   xmm2,QWORD PTR [rsp]
  00441: movq   xmm3,QWORD PTR [rsp+0x8]
  00447: add    rsp,0x10
  0044b: mov    QWORD PTR [rbp-0x80],rax
:00024 
:00026 %10 = %11.call x()                   [Vec]
  0044f: mov    rdi,QWORD PTR [rbp-0x80]
  00453: test   rdi,0x7
  0045a: jne    0x35e84
  00460: cmp    DWORD PTR [rdi+0x4],0x28
  00464: jne    0x35e84
  0046a: cmp    DWORD PTR [rip+0xfffffffffffec7b4],0x26        # 0xfffecc25
  00471: jne    0x35e84
  00477: mov    esi,DWORD PTR [rip+0xc03]        # 0x1080
  0047d: cmp    esi,0xffffffff
  00480: je     0x35e93
  00486: cmp    WORD PTR [rdi+0x2],0x3
  0048b: jne    0x4a4
  00491: cmp    esi,0x6
  00494: jge    0x4a4
  0049a: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0049f: jmp    0x4ce
  004a4: sub    rsp,0x10
  004a8: movq   QWORD PTR [rsp],xmm2
  004ad: movq   QWORD PTR [rsp+0x8],xmm3
  004b3: movabs rax,0x563437ed0590
  004bd: call   rax
  004bf: movq   xmm2,QWORD PTR [rsp]
  004c4: movq   xmm3,QWORD PTR [rsp+0x8]
  004ca: add    rsp,0x10
  004ce: mov    QWORD PTR [rbp-0x78],rax
:00027 
:00029 %10 = %5 * %10                       [Float][Float]
  004d2: mov    rdi,QWORD PTR [rbp-0x78]
  004d6: test   rdi,0x1
  004dd: jne    0x35eda
  004e3: test   rdi,0x2
  004ea: je     0x526
  004f0: xorps  xmm4,xmm4
  004f3: movabs rax,0x8000000000000002
  004fd: cmp    rdi,rax
  00500: je     0x538
  00506: mov    rax,rdi
  00509: sar    rax,0x3f
  0050d: add    rax,0x2
  00511: and    rdi,0xfffffffffffffffc
  00515: or     rdi,rax
  00518: rol    rdi,0x3d
  0051c: movq   xmm4,rdi
  00521: jmp    0x538
  00526: call   0xfffea0c0
  0052b: test   rax,rax
  0052e: je     0x35eda
  00534: movq   xmm4,xmm0
  00538: mulsd  xmm4,xmm2
:00030 %9 = %9 + %10                        [Float][Float]
  0053c: mov    rdi,QWORD PTR [rbp-0x70]
  00540: test   rdi,0x1
  00547: jne    0x35ee9
  0054d: test   rdi,0x2
  00554: je     0x590
  0055a: xorps  xmm5,xmm5
  0055d: movabs rax,0x8000000000000002
  00567: cmp    rdi,rax
  0056a: je     0x5a2
  00570: mov    rax,rdi
  00573: sar    rax,0x3f
  00577: add    rax,0x2
  0057b: and    rdi,0xfffffffffffffffc
  0057f: or     rdi,rax
  00582: rol    rdi,0x3d
  00586: movq   xmm5,rdi
  0058b: jmp    0x5a2
  00590: call   0xfffea0c0
  00595: test   rax,rax
  00598: je     0x35ee9
  0059e: movq   xmm5,xmm0
  005a2: addsd  xmm5,xmm4
:00031 %11 = %1.call pl()                   [Isect]
  005a6: mov    rdi,QWORD PTR [rbp-0x30]
  005aa: test   rdi,0x7
  005b1: jne    0x35f05
  005b7: cmp    DWORD PTR [rdi+0x4],0x30
  005bb: jne    0x35f05
  005c1: cmp    DWORD PTR [rip+0xfffffffffffec65d],0x26        # 0xfffecc25
  005c8: jne    0x35f05
  005ce: mov    esi,DWORD PTR [rip+0xab4]        # 0x1088
  005d4: cmp    esi,0xffffffff
  005d7: je     0x35f2e
  005dd: cmp    WORD PTR [rdi+0x2],0x3
  005e2: jne    0x5fb
  005e8: cmp    esi,0x6
  005eb: jge    0x5fb
  005f1: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005f6: jmp    0x63d
  005fb: sub    rsp,0x20
  005ff: movq   QWORD PTR [rsp],xmm2
  00604: movq   QWORD PTR [rsp+0x8],xmm3
  0060a: movq   QWORD PTR [rsp+0x10],xmm4
  00610: movq   QWORD PTR [rsp+0x18],xmm5
  00616: movabs rax,0x563437ed0590
  00620: call   rax
  00622: movq   xmm2,QWORD PTR [rsp]
  00627: movq   xmm3,QWORD PTR [rsp+0x8]
  0062d: movq   xmm4,QWORD PTR [rsp+0x10]
  00633: movq   xmm5,QWORD PTR [rsp+0x18]
  00639: add    rsp,0x20
  0063d: mov    QWORD PTR [rbp-0x80],rax
:00032 
:00034 %10 = %11.call y()                   [Vec]
  00641: mov    rdi,QWORD PTR [rbp-0x80]
  00645: test   rdi,0x7
  0064c: jne    0x35f8d
  00652: cmp    DWORD PTR [rdi+0x4],0x28
  00656: jne    0x35f8d
  0065c: cmp    DWORD PTR [rip+0xfffffffffffec5c2],0x26        # 0xfffecc25
  00663: jne    0x35f8d
  00669: mov    esi,DWORD PTR [rip+0xa21]        # 0x1090
  0066f: cmp    esi,0xffffffff
  00672: je     0x35fa9
  00678: cmp    WORD PTR [rdi+0x2],0x3
  0067d: jne    0x696
  00683: cmp    esi,0x6
  00686: jge    0x696
  0068c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00691: jmp    0x6cc
  00696: sub    rsp,0x20
  0069a: movq   QWORD PTR [rsp],xmm2
  0069f: movq   QWORD PTR [rsp+0x8],xmm3
  006a5: movq   QWORD PTR [rsp+0x10],xmm5
  006ab: movabs rax,0x563437ed0590
  006b5: call   rax
  006b7: movq   xmm2,QWORD PTR [rsp]
  006bc: movq   xmm3,QWORD PTR [rsp+0x8]
  006c2: movq   xmm5,QWORD PTR [rsp+0x10]
  006c8: add    rsp,0x20
  006cc: mov    QWORD PTR [rbp-0x78],rax
:00035 
:00037 %12 = %1.call n()                    [Isect]
  006d0: mov    rdi,QWORD PTR [rbp-0x30]
  006d4: test   rdi,0x7
  006db: jne    0x35ffc
  006e1: cmp    DWORD PTR [rdi+0x4],0x30
  006e5: jne    0x35ffc
  006eb: cmp    DWORD PTR [rip+0xfffffffffffec533],0x26        # 0xfffecc25
  006f2: jne    0x35ffc
  006f8: mov    esi,DWORD PTR [rip+0x99a]        # 0x1098
  006fe: cmp    esi,0xffffffff
  00701: je     0x36018
  00707: cmp    WORD PTR [rdi+0x2],0x3
  0070c: jne    0x725
  00712: cmp    esi,0x6
  00715: jge    0x725
  0071b: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00720: jmp    0x75b
  00725: sub    rsp,0x20
  00729: movq   QWORD PTR [rsp],xmm2
  0072e: movq   QWORD PTR [rsp+0x8],xmm3
  00734: movq   QWORD PTR [rsp+0x10],xmm5
  0073a: movabs rax,0x563437ed0590
  00744: call   rax
  00746: movq   xmm2,QWORD PTR [rsp]
  0074b: movq   xmm3,QWORD PTR [rsp+0x8]
  00751: movq   xmm5,QWORD PTR [rsp+0x10]
  00757: add    rsp,0x20
  0075b: mov    QWORD PTR [rbp-0x88],rax
:00038 
:00040 %11 = %12.call y()                   [Vec]
  00762: mov    rdi,QWORD PTR [rbp-0x88]
  00769: test   rdi,0x7
  00770: jne    0x3606b
  00776: cmp    DWORD PTR [rdi+0x4],0x28
  0077a: jne    0x3606b
  00780: cmp    DWORD PTR [rip+0xfffffffffffec49e],0x26        # 0xfffecc25
  00787: jne    0x3606b
  0078d: mov    esi,DWORD PTR [rip+0x90d]        # 0x10a0
  00793: cmp    esi,0xffffffff
  00796: je     0x36087
  0079c: cmp    WORD PTR [rdi+0x2],0x3
  007a1: jne    0x7ba
  007a7: cmp    esi,0x6
  007aa: jge    0x7ba
  007b0: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007b5: jmp    0x7f0
  007ba: sub    rsp,0x20
  007be: movq   QWORD PTR [rsp],xmm2
  007c3: movq   QWORD PTR [rsp+0x8],xmm3
  007c9: movq   QWORD PTR [rsp+0x10],xmm5
  007cf: movabs rax,0x563437ed0590
  007d9: call   rax
  007db: movq   xmm2,QWORD PTR [rsp]
  007e0: movq   xmm3,QWORD PTR [rsp+0x8]
  007e6: movq   xmm5,QWORD PTR [rsp+0x10]
  007ec: add    rsp,0x20
  007f0: mov    QWORD PTR [rbp-0x80],rax
:00041 
:00043 %11 = %5 * %11                       [Float][Float]
  007f4: mov    rdi,QWORD PTR [rbp-0x80]
  007f8: test   rdi,0x1
  007ff: jne    0x360da
  00805: test   rdi,0x2
  0080c: je     0x848
  00812: xorps  xmm4,xmm4
  00815: movabs rax,0x8000000000000002
  0081f: cmp    rdi,rax
  00822: je     0x85a
  00828: mov    rax,rdi
  0082b: sar    rax,0x3f
  0082f: add    rax,0x2
  00833: and    rdi,0xfffffffffffffffc
  00837: or     rdi,rax
  0083a: rol    rdi,0x3d
  0083e: movq   xmm4,rdi
  00843: jmp    0x85a
  00848: call   0xfffea0c0
  0084d: test   rax,rax
  00850: je     0x360da
  00856: movq   xmm4,xmm0
  0085a: mulsd  xmm4,xmm2
:00044 %10 = %10 + %11                      [Float][Float]
  0085e: mov    rdi,QWORD PTR [rbp-0x78]
  00862: test   rdi,0x1
  00869: jne    0x360f6
  0086f: test   rdi,0x2
  00876: je     0x8b2
  0087c: xorps  xmm6,xmm6
  0087f: movabs rax,0x8000000000000002
  00889: cmp    rdi,rax
  0088c: je     0x8c4
  00892: mov    rax,rdi
  00895: sar    rax,0x3f
  00899: add    rax,0x2
  0089d: and    rdi,0xfffffffffffffffc
  008a1: or     rdi,rax
  008a4: rol    rdi,0x3d
  008a8: movq   xmm6,rdi
  008ad: jmp    0x8c4
  008b2: call   0xfffea0c0
  008b7: test   rax,rax
  008ba: je     0x360f6
  008c0: movq   xmm6,xmm0
  008c4: addsd  xmm6,xmm4
:00045 %12 = %1.call pl()                   [Isect]
  008c8: mov    rdi,QWORD PTR [rbp-0x30]
  008cc: test   rdi,0x7
  008d3: jne    0x3611f
  008d9: cmp    DWORD PTR [rdi+0x4],0x30
  008dd: jne    0x3611f
  008e3: cmp    DWORD PTR [rip+0xfffffffffffec33b],0x26        # 0xfffecc25
  008ea: jne    0x3611f
  008f0: mov    esi,DWORD PTR [rip+0x7b2]        # 0x10a8
  008f6: cmp    esi,0xffffffff
  008f9: je     0x36155
  008ff: cmp    WORD PTR [rdi+0x2],0x3
  00904: jne    0x91d
  0090a: cmp    esi,0x6
  0090d: jge    0x91d
  00913: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00918: jmp    0x96b
  0091d: sub    rsp,0x30
  00921: movq   QWORD PTR [rsp],xmm2
  00926: movq   QWORD PTR [rsp+0x8],xmm3
  0092c: movq   QWORD PTR [rsp+0x10],xmm4
  00932: movq   QWORD PTR [rsp+0x18],xmm5
  00938: movq   QWORD PTR [rsp+0x20],xmm6
  0093e: movabs rax,0x563437ed0590
  00948: call   rax
  0094a: movq   xmm2,QWORD PTR [rsp]
  0094f: movq   xmm3,QWORD PTR [rsp+0x8]
  00955: movq   xmm4,QWORD PTR [rsp+0x10]
  0095b: movq   xmm5,QWORD PTR [rsp+0x18]
  00961: movq   xmm6,QWORD PTR [rsp+0x20]
  00967: add    rsp,0x30
  0096b: mov    QWORD PTR [rbp-0x88],rax
:00046 
:00048 %11 = %12.call z()                   [Vec]
  00972: mov    rdi,QWORD PTR [rbp-0x88]
  00979: test   rdi,0x7
  00980: jne    0x361c0
  00986: cmp    DWORD PTR [rdi+0x4],0x28
  0098a: jne    0x361c0
  00990: cmp    DWORD PTR [rip+0xfffffffffffec28e],0x26        # 0xfffecc25
  00997: jne    0x361c0
  0099d: mov    esi,DWORD PTR [rip+0x70d]        # 0x10b0
  009a3: cmp    esi,0xffffffff
  009a6: je     0x361e9
  009ac: cmp    WORD PTR [rdi+0x2],0x3
  009b1: jne    0x9ca
  009b7: cmp    esi,0x6
  009ba: jge    0x9ca
  009c0: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  009c5: jmp    0xa0c
  009ca: sub    rsp,0x20
  009ce: movq   QWORD PTR [rsp],xmm2
  009d3: movq   QWORD PTR [rsp+0x8],xmm3
  009d9: movq   QWORD PTR [rsp+0x10],xmm5
  009df: movq   QWORD PTR [rsp+0x18],xmm6
  009e5: movabs rax,0x563437ed0590
  009ef: call   rax
  009f1: movq   xmm2,QWORD PTR [rsp]
  009f6: movq   xmm3,QWORD PTR [rsp+0x8]
  009fc: movq   xmm5,QWORD PTR [rsp+0x10]
  00a02: movq   xmm6,QWORD PTR [rsp+0x18]
  00a08: add    rsp,0x20
  00a0c: mov    QWORD PTR [rbp-0x80],rax
:00049 
:00051 %13 = %1.call n()                    [Isect]
  00a10: mov    rdi,QWORD PTR [rbp-0x30]
  00a14: test   rdi,0x7
  00a1b: jne    0x36248
  00a21: cmp    DWORD PTR [rdi+0x4],0x30
  00a25: jne    0x36248
  00a2b: cmp    DWORD PTR [rip+0xfffffffffffec1f3],0x26        # 0xfffecc25
  00a32: jne    0x36248
  00a38: mov    esi,DWORD PTR [rip+0x67a]        # 0x10b8
  00a3e: cmp    esi,0xffffffff
  00a41: je     0x36271
  00a47: cmp    WORD PTR [rdi+0x2],0x3
  00a4c: jne    0xa65
  00a52: cmp    esi,0x6
  00a55: jge    0xa65
  00a5b: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a60: jmp    0xaa7
  00a65: sub    rsp,0x20
  00a69: movq   QWORD PTR [rsp],xmm2
  00a6e: movq   QWORD PTR [rsp+0x8],xmm3
  00a74: movq   QWORD PTR [rsp+0x10],xmm5
  00a7a: movq   QWORD PTR [rsp+0x18],xmm6
  00a80: movabs rax,0x563437ed0590
  00a8a: call   rax
  00a8c: movq   xmm2,QWORD PTR [rsp]
  00a91: movq   xmm3,QWORD PTR [rsp+0x8]
  00a97: movq   xmm5,QWORD PTR [rsp+0x10]
  00a9d: movq   xmm6,QWORD PTR [rsp+0x18]
  00aa3: add    rsp,0x20
  00aa7: mov    QWORD PTR [rbp-0x90],rax
:00052 
:00054 %12 = %13.call z()                   [Vec]
  00aae: mov    rdi,QWORD PTR [rbp-0x90]
  00ab5: test   rdi,0x7
  00abc: jne    0x362d0
  00ac2: cmp    DWORD PTR [rdi+0x4],0x28
  00ac6: jne    0x362d0
  00acc: cmp    DWORD PTR [rip+0xfffffffffffec152],0x26        # 0xfffecc25
  00ad3: jne    0x362d0
  00ad9: mov    esi,DWORD PTR [rip+0x5e1]        # 0x10c0
  00adf: cmp    esi,0xffffffff
  00ae2: je     0x362f9
  00ae8: cmp    WORD PTR [rdi+0x2],0x3
  00aed: jne    0xb06
  00af3: cmp    esi,0x6
  00af6: jge    0xb06
  00afc: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b01: jmp    0xb48
  00b06: sub    rsp,0x20
  00b0a: movq   QWORD PTR [rsp],xmm2
  00b0f: movq   QWORD PTR [rsp+0x8],xmm3
  00b15: movq   QWORD PTR [rsp+0x10],xmm5
  00b1b: movq   QWORD PTR [rsp+0x18],xmm6
  00b21: movabs rax,0x563437ed0590
  00b2b: call   rax
  00b2d: movq   xmm2,QWORD PTR [rsp]
  00b32: movq   xmm3,QWORD PTR [rsp+0x8]
  00b38: movq   xmm5,QWORD PTR [rsp+0x10]
  00b3e: movq   xmm6,QWORD PTR [rsp+0x18]
  00b44: add    rsp,0x20
  00b48: mov    QWORD PTR [rbp-0x88],rax
:00055 
:00057 %12 = %5 * %12                       [Float][Float]
  00b4f: mov    rdi,QWORD PTR [rbp-0x88]
  00b56: test   rdi,0x1
  00b5d: jne    0x36358
  00b63: test   rdi,0x2
  00b6a: je     0xba6
  00b70: xorps  xmm4,xmm4
  00b73: movabs rax,0x8000000000000002
  00b7d: cmp    rdi,rax
  00b80: je     0xbb8
  00b86: mov    rax,rdi
  00b89: sar    rax,0x3f
  00b8d: add    rax,0x2
  00b91: and    rdi,0xfffffffffffffffc
  00b95: or     rdi,rax
  00b98: rol    rdi,0x3d
  00b9c: movq   xmm4,rdi
  00ba1: jmp    0xbb8
  00ba6: call   0xfffea0c0
  00bab: test   rax,rax
  00bae: je     0x36358
  00bb4: movq   xmm4,xmm0
  00bb8: mulsd  xmm4,xmm2
:00058 %11 = %11 + %12                      [Float][Float]
  00bbc: mov    rdi,QWORD PTR [rbp-0x80]
  00bc0: test   rdi,0x1
  00bc7: jne    0x36381
  00bcd: test   rdi,0x2
  00bd4: je     0xc10
  00bda: xorps  xmm7,xmm7
  00bdd: movabs rax,0x8000000000000002
  00be7: cmp    rdi,rax
  00bea: je     0xc22
  00bf0: mov    rax,rdi
  00bf3: sar    rax,0x3f
  00bf7: add    rax,0x2
  00bfb: and    rdi,0xfffffffffffffffc
  00bff: or     rdi,rax
  00c02: rol    rdi,0x3d
  00c06: movq   xmm7,rdi
  00c0b: jmp    0xc22
  00c10: call   0xfffea0c0
  00c15: test   rax,rax
  00c18: je     0x36381
  00c1e: movq   xmm7,xmm0
  00c22: addsd  xmm7,xmm4
:00059 %7 = %8.call new(%9; 3)              [#<Class:Vec>]
  00c26: movq   xmm0,xmm5
  00c2a: call   0xfffea1b3
  00c2f: mov    QWORD PTR [rbp-0x70],rax
  00c33: movq   xmm0,xmm6
  00c37: call   0xfffea1b3
  00c3c: mov    QWORD PTR [rbp-0x78],rax
  00c40: movq   xmm0,xmm7
  00c44: call   0xfffea1b3
  00c49: mov    QWORD PTR [rbp-0x80],rax
  00c4d: mov    rdi,QWORD PTR [rbp-0x68]
  00c51: test   rdi,0x7
  00c58: jne    0x363ba
  00c5e: cmp    DWORD PTR [rdi+0x4],0x29
  00c62: jne    0x363ba
  00c68: cmp    DWORD PTR [rip+0xfffffffffffebfb6],0x26        # 0xfffecc25
  00c6f: jne    0x363ba
  00c75: mov    r9,0x0
  00c7c: sub    rsp,0x30
  00c80: movq   QWORD PTR [rsp],xmm2
  00c85: movq   QWORD PTR [rsp+0x8],xmm3
  00c8b: movq   QWORD PTR [rsp+0x10],xmm4
  00c91: movq   QWORD PTR [rsp+0x18],xmm5
  00c97: movq   QWORD PTR [rsp+0x20],xmm6
  00c9d: movq   QWORD PTR [rsp+0x28],xmm7
  00ca3: mov    rdx,rdi
  00ca6: mov    QWORD PTR [rsp-0x20],0x0
  00caf: mov    QWORD PTR [rsp-0x38],rcx
  00cb4: mov    rax,QWORD PTR [rbx]
  00cb7: lea    rdi,[rsp-0x18]
  00cbc: mov    QWORD PTR [rdi],rax
  00cbf: mov    QWORD PTR [rbx],rdi
  00cc2: lea    rcx,[rbp-0x70]
  00cc6: mov    r8,0x3
  00ccd: call   0x363d9
  00cd2: lea    rdi,[rbp-0x8]
  00cd6: mov    QWORD PTR [rbx],rdi
  00cd9: movq   xmm2,QWORD PTR [rsp]
  00cde: movq   xmm3,QWORD PTR [rsp+0x8]
  00ce4: movq   xmm4,QWORD PTR [rsp+0x10]
  00cea: movq   xmm5,QWORD PTR [rsp+0x18]
  00cf0: movq   xmm6,QWORD PTR [rsp+0x20]
  00cf6: movq   xmm7,QWORD PTR [rsp+0x28]
  00cfc: add    rsp,0x30
  00d00: movabs r13,0x56343985cbf0
  00d0a: test   rax,rax
  00d0d: je     0xfffea067
  00d13: mov    QWORD PTR [rbp-0x60],rax
:00060 
:00062 %8 = literal[5111809]
  00d17: mov    rax,0x9c0003
  00d1e: mov    QWORD PTR [rbp-0x68],rax
:00063 _ = %4.call times(&%8)               [Integer]
  00d22: mov    rdi,QWORD PTR [rbp-0x48]
  00d26: test   rdi,0x1
  00d2d: je     0x3640b
  00d33: cmp    DWORD PTR [rip+0xfffffffffffebeeb],0x26        # 0xfffecc25
  00d3a: jne    0x3640b
  00d40: mov    r9,QWORD PTR [rbp-0x68]
  00d44: sub    rsp,0x20
  00d48: movq   QWORD PTR [rsp],xmm4
  00d4d: movq   QWORD PTR [rsp+0x8],xmm5
  00d53: movq   QWORD PTR [rsp+0x10],xmm6
  00d59: movq   QWORD PTR [rsp+0x18],xmm7
  00d5f: mov    rdx,rdi
  00d62: mov    QWORD PTR [rsp-0x20],0x0
  00d6b: mov    QWORD PTR [rsp-0x38],rcx
  00d70: mov    rax,QWORD PTR [rbx]
  00d73: lea    rdi,[rsp-0x18]
  00d78: mov    QWORD PTR [rdi],rax
  00d7b: mov    QWORD PTR [rbx],rdi
  00d7e: lea    rcx,[rbp-0x70]
  00d82: mov    r8,0x0
  00d89: call   0x3642a
  00d8e: lea    rdi,[rbp-0x8]
  00d92: mov    QWORD PTR [rbx],rdi
  00d95: movq   xmm4,QWORD PTR [rsp]
  00d9a: movq   xmm5,QWORD PTR [rsp+0x8]
  00da0: movq   xmm6,QWORD PTR [rsp+0x10]
  00da6: movq   xmm7,QWORD PTR [rsp+0x18]
  00dac: add    rsp,0x20
  00db0: movabs r13,0x56343985cc30
  00dba: test   rax,rax
  00dbd: je     0xfffea067
:00064 
:00066 %8 = %3.call to_f()                  [Integer]
  00dc3: mov    rdi,QWORD PTR [rbp-0x40]
  00dc7: test   rdi,0x1
  00dce: je     0x3645c
  00dd4: cmp    DWORD PTR [rip+0xfffffffffffebe4a],0x26        # 0xfffecc25
  00ddb: jne    0x3645c
  00de1: sar    rdi,1
  00de4: cvtsi2sd xmm2,rdi
:00067 
:00069 %9 = %4.call to_f()                  [Integer]
  00de9: mov    rdi,QWORD PTR [rbp-0x48]
  00ded: test   rdi,0x1
  00df4: je     0x3647b
  00dfa: cmp    DWORD PTR [rip+0xfffffffffffebe24],0x26        # 0xfffecc25
  00e01: jne    0x3647b
  00e07: sar    rdi,1
  00e0a: cvtsi2sd xmm3,rdi
:00070 
:00072 %8 = %8 * %9                         [Float][Float]
  00e0f: mulsd  xmm2,xmm3
:00073 %8 = %8 - %6                         [Float][Float]
  00e13: mov    rdi,QWORD PTR [rbp-0x58]
  00e17: test   rdi,0x1
  00e1e: jne    0x364a7
  00e24: test   rdi,0x2
  00e2b: je     0xe67
  00e31: xorps  xmm5,xmm5
  00e34: movabs rax,0x8000000000000002
  00e3e: cmp    rdi,rax
  00e41: je     0xe79
  00e47: mov    rax,rdi
  00e4a: sar    rax,0x3f
  00e4e: add    rax,0x2
  00e52: and    rdi,0xfffffffffffffffc
  00e56: or     rdi,rax
  00e59: rol    rdi,0x3d
  00e5d: movq   xmm5,rdi
  00e62: jmp    0xe79
  00e67: call   0xfffea0c0
  00e6c: test   rax,rax
  00e6f: je     0x364a7
  00e75: movq   xmm5,xmm0
  00e79: subsd  xmm2,xmm5
:00074 %9 = %3.call to_f()                  [Integer]
  00e7d: mov    rdi,QWORD PTR [rbp-0x40]
  00e81: test   rdi,0x1
  00e88: je     0x364e0
  00e8e: cmp    DWORD PTR [rip+0xfffffffffffebd90],0x26        # 0xfffecc25
  00e95: jne    0x364e0
  00e9b: sar    rdi,1
  00e9e: cvtsi2sd xmm3,rdi
:00075 
:00077 %10 = %4.call to_f()                 [Integer]
  00ea3: mov    rdi,QWORD PTR [rbp-0x48]
  00ea7: test   rdi,0x1
  00eae: je     0x3650c
  00eb4: cmp    DWORD PTR [rip+0xfffffffffffebd6a],0x26        # 0xfffecc25
  00ebb: jne    0x3650c
  00ec1: sar    rdi,1
  00ec4: cvtsi2sd xmm6,rdi
:00078 
:00080 %9 = %9 * %10                        [Float][Float]
  00ec9: mulsd  xmm3,xmm6
:00081 %6 = %8 / %9                         [Float][Float]
  00ecd: movq   xmm5,xmm2
  00ed1: movq   rax,xmm3
  00ed6: test   rax,rax
  00ed9: je     0xfffea08c
  00edf: divsd  xmm5,xmm3
:00082 %9 = const[Vec]                      [Vec]
  00ee3: mov    rax,QWORD PTR [rip+0xfffffffffffebd42]        # 0xfffecc2c
  00eea: cmp    rax,QWORD PTR [rip+0x1eb]        # 0x10dc
  00ef1: jne    0x36545
  00ef7: mov    rax,QWORD PTR [rip+0x1ce]        # 0x10cc
  00efe: mov    QWORD PTR [rbp-0x70],rax
:00083 %10 = %6
:00084 %11 = %6
:00085 %12 = %6
:00086 %8 = %9.call new(%10; 3)             [#<Class:Vec>]
  00f02: movq   xmm0,xmm5
  00f06: call   0xfffea1b3
  00f0b: mov    QWORD PTR [rbp-0x78],rax
  00f0f: movq   xmm0,xmm5
  00f13: call   0xfffea1b3
  00f18: mov    QWORD PTR [rbp-0x80],rax
  00f1c: movq   xmm0,xmm5
  00f20: call   0xfffea1b3
  00f25: mov    QWORD PTR [rbp-0x88],rax
  00f2c: mov    rdi,QWORD PTR [rbp-0x70]
  00f30: test   rdi,0x7
  00f37: jne    0x365cd
  00f3d: cmp    DWORD PTR [rdi+0x4],0x29
  00f41: jne    0x365cd
  00f47: cmp    DWORD PTR [rip+0xfffffffffffebcd7],0x26        # 0xfffecc25
  00f4e: jne    0x365cd
  00f54: mov    r9,0x0
  00f5b: sub    rsp,0x10
  00f5f: movq   QWORD PTR [rsp],xmm5
  00f64: mov    rdx,rdi
  00f67: mov    QWORD PTR [rsp-0x20],0x0
  00f70: mov    QWORD PTR [rsp-0x38],rcx
  00f75: mov    rax,QWORD PTR [rbx]
  00f78: lea    rdi,[rsp-0x18]
  00f7d: mov    QWORD PTR [rdi],rax
  00f80: mov    QWORD PTR [rbx],rdi
  00f83: lea    rcx,[rbp-0x78]
  00f87: mov    r8,0x3
  00f8e: call   0x365e9
  00f93: lea    rdi,[rbp-0x8]
  00f97: mov    QWORD PTR [rbx],rdi
  00f9a: movq   xmm5,QWORD PTR [rsp]
  00f9f: add    rsp,0x10
  00fa3: movabs r13,0x56343985cda0
  00fad: test   rax,rax
  00fb0: je     0xfffea067
  00fb6: mov    QWORD PTR [rbp-0x68],rax
:00087 
:00089 ret %8
  00fba: mov    rax,QWORD PTR [rbp-0x68]
  00fbe: leave  
  00fbf: ret    
==> start whole compile: otherBasis FuncId(60) self_class:Scene start:[00000] bytecode:0x5634398723f0
<== finished compile. elapsed:126.5µs
offset:Pos(94392) code: 7615 bytes  data: 381 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	je     0x4a
  00014:    	jl     0x1f
  0001a:    	jmp    0x35537
  0001f:    	jmp    0x35537
  00024:    	mov    eax,0x2
  00029:    	sub    eax,edx
  0002b:    	test   rax,rax
  0002e:    	je     0x4a
  00034:    	lea    rdi,[rbp-0x40]
  00038: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00040:    	sub    rax,0x1
  00044:    	jne    0x38
  0004a: 00 	mov    rax,0x4
  00051:    	mov    QWORD PTR [rbp-0x40],rax
  00055:    	mov    QWORD PTR [rbp-0x48],rax
  00059:    	mov    QWORD PTR [rbp-0x50],rax
  0005d:    	mov    QWORD PTR [rbp-0x58],rax
  00061:    	mov    QWORD PTR [rbp-0x60],rax
  00065:    	mov    QWORD PTR [rbp-0x68],rax
  00069:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x35546
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x32
  0007e:    	jne    0x35546
:00000 init_method reg:9 arg:2 pos:2 req:2 stack_offset:7
:00001 %3 = 2: i32
  00084: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00002 %5 = const[Vec]                      [Vec]
  0008c: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffebab5]        # 0xfffebb48
  00093: 00 	cmp    rax,QWORD PTR [rip+0x1d3e]        # 0x1dd8
  0009a:    	jne    0x35555
  000a0: 00 	mov    rax,QWORD PTR [rip+0x1d21]        # 0x1dc8
  000a7:    	mov    QWORD PTR [rbp-0x50],rax
:00003 %6 = %2.call x()                     [Vec]
  000ab:    	mov    rdi,QWORD PTR [rbp-0x38]
  000af: 00 	test   rdi,0x7
  000b6:    	jne    0x3559b
  000bc:    	cmp    DWORD PTR [rdi+0x4],0x28
  000c0:    	jne    0x3559b
  000c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffeba74],0x26        # 0xfffebb41
  000cd:    	jne    0x3559b
  000d3:    	mov    esi,DWORD PTR [rip+0x1d0b]        # 0x1de4
  000d9:    	cmp    esi,0xffffffff
  000dc:    	je     0x355aa
  000e2:    	cmp    WORD PTR [rdi+0x2],0x3
  000e7:    	jne    0x100
  000ed:    	cmp    esi,0x6
  000f0:    	jge    0x100
  000f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000fb:    	jmp    0x10c
  00100: 34 	movabs rax,0x563437ed0590
  0010a:    	call   rax
  0010c:    	mov    QWORD PTR [rbp-0x58],rax
:00004 
:00006 %7 = %2.call y()                     [Vec]
  00110:    	mov    rdi,QWORD PTR [rbp-0x38]
  00114: 00 	test   rdi,0x7
  0011b:    	jne    0x355d3
  00121:    	cmp    DWORD PTR [rdi+0x4],0x28
  00125:    	jne    0x355d3
  0012b: 26 	cmp    DWORD PTR [rip+0xfffffffffffeba0f],0x26        # 0xfffebb41
  00132:    	jne    0x355d3
  00138:    	mov    esi,DWORD PTR [rip+0x1cae]        # 0x1dec
  0013e:    	cmp    esi,0xffffffff
  00141:    	je     0x355e2
  00147:    	cmp    WORD PTR [rdi+0x2],0x3
  0014c:    	jne    0x165
  00152:    	cmp    esi,0x6
  00155:    	jge    0x165
  0015b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00160:    	jmp    0x171
  00165: 34 	movabs rax,0x563437ed0590
  0016f:    	call   rax
  00171:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = %2.call z()                     [Vec]
  00175:    	mov    rdi,QWORD PTR [rbp-0x38]
  00179: 00 	test   rdi,0x7
  00180:    	jne    0x3560b
  00186:    	cmp    DWORD PTR [rdi+0x4],0x28
  0018a:    	jne    0x3560b
  00190: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb9aa],0x26        # 0xfffebb41
  00197:    	jne    0x3560b
  0019d:    	mov    esi,DWORD PTR [rip+0x1c51]        # 0x1df4
  001a3:    	cmp    esi,0xffffffff
  001a6:    	je     0x3561a
  001ac:    	cmp    WORD PTR [rdi+0x2],0x3
  001b1:    	jne    0x1ca
  001b7:    	cmp    esi,0x6
  001ba:    	jge    0x1ca
  001c0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001c5:    	jmp    0x1d6
  001ca: 34 	movabs rax,0x563437ed0590
  001d4:    	call   rax
  001d6:    	mov    QWORD PTR [rbp-0x68],rax
:00010 
:00012 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  001da:    	mov    rdi,QWORD PTR [rbp-0x50]
  001de: 00 	test   rdi,0x7
  001e5:    	jne    0x35643
  001eb:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ef:    	jne    0x35643
  001f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb945],0x26        # 0xfffebb41
  001fc:    	jne    0x35643
  00202: 00 	mov    r9,0x0
  00209:    	mov    rdx,rdi
  0020c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00215:    	mov    QWORD PTR [rsp-0x38],rcx
  0021a:    	mov    rax,QWORD PTR [rbx]
  0021d:    	lea    rdi,[rsp-0x18]
  00222:    	mov    QWORD PTR [rdi],rax
  00225:    	mov    QWORD PTR [rbx],rdi
  00228:    	lea    rcx,[rbp-0x58]
  0022c: 00 	mov    r8,0x3
  00233:    	call   0x35652
  00238:    	lea    rdi,[rbp-0x8]
  0023c:    	mov    QWORD PTR [rbx],rdi
  0023f: 34 	movabs r13,0x5634398724d0
  00249:    	test   rax,rax
  0024c:    	je     0xfffe8f83
  00252:    	mov    QWORD PTR [rbp-0x48],rax
:00013 
:00015 %1:.[%3:] = %4
  00256:    	mov    rdx,QWORD PTR [rbp-0x30]
  0025a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0025e:    	mov    r8,QWORD PTR [rbp-0x48]
  00262:    	mov    rdi,rbx
  00265:    	mov    rsi,r12
  00268: 34 	movabs rax,0x563437f474a0
  00272:    	call   rax
  00274: 34 	movabs r13,0x5634398724f0
  0027e:    	test   rax,rax
  00281:    	je     0xfffe8f83
:00016 %3 = 1: i32
  00287: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00017 %5 = const[Vec]                      [Vec]
  0028f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeb8b2]        # 0xfffebb48
  00296: 00 	cmp    rax,QWORD PTR [rip+0x1b6b]        # 0x1e08
  0029d:    	jne    0x35684
  002a3: 00 	mov    rax,QWORD PTR [rip+0x1b4e]        # 0x1df8
  002aa:    	mov    QWORD PTR [rbp-0x50],rax
:00018 %6 = literal[0.0]
  002ae: 00 	movq   xmm2,QWORD PTR [rip+0x1b62]        # 0x1e18
  002b6: 00 	movabs rax,0x8000000000000002
  002c0:    	mov    QWORD PTR [rbp-0x58],rax
:00019 %7 = literal[0.0]
  002c4: 00 	movq   xmm3,QWORD PTR [rip+0x1b5c]        # 0x1e28
  002cc: 00 	movabs rax,0x8000000000000002
  002d6:    	mov    QWORD PTR [rbp-0x60],rax
:00020 %8 = literal[0.0]
  002da: 00 	movq   xmm4,QWORD PTR [rip+0x1b56]        # 0x1e38
  002e2: 00 	movabs rax,0x8000000000000002
  002ec:    	mov    QWORD PTR [rbp-0x68],rax
:00021 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002f0:    	mov    rdi,QWORD PTR [rbp-0x50]
  002f4: 00 	test   rdi,0x7
  002fb:    	jne    0x356ca
  00301:    	cmp    DWORD PTR [rdi+0x4],0x29
  00305:    	jne    0x356ca
  0030b: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb82f],0x26        # 0xfffebb41
  00312:    	jne    0x356ca
  00318: 00 	mov    r9,0x0
  0031f:    	sub    rsp,0x20
  00323:    	movq   QWORD PTR [rsp],xmm2
  00328:    	movq   QWORD PTR [rsp+0x8],xmm3
  0032e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00334:    	mov    rdx,rdi
  00337: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00340:    	mov    QWORD PTR [rsp-0x38],rcx
  00345:    	mov    rax,QWORD PTR [rbx]
  00348:    	lea    rdi,[rsp-0x18]
  0034d:    	mov    QWORD PTR [rdi],rax
  00350:    	mov    QWORD PTR [rbx],rdi
  00353:    	lea    rcx,[rbp-0x58]
  00357: 00 	mov    r8,0x3
  0035e:    	call   0x356d9
  00363:    	lea    rdi,[rbp-0x8]
  00367:    	mov    QWORD PTR [rbx],rdi
  0036a:    	movq   xmm2,QWORD PTR [rsp]
  0036f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00375:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0037b:    	add    rsp,0x20
  0037f: 34 	movabs r13,0x563439872560
  00389:    	test   rax,rax
  0038c:    	je     0xfffe8f83
  00392:    	mov    QWORD PTR [rbp-0x48],rax
:00022 
:00024 %1:.[%3:] = %4
  00396:    	sub    rsp,0x20
  0039a:    	movq   QWORD PTR [rsp],xmm2
  0039f:    	movq   QWORD PTR [rsp+0x8],xmm3
  003a5:    	movq   QWORD PTR [rsp+0x10],xmm4
  003ab:    	mov    rdx,QWORD PTR [rbp-0x30]
  003af:    	mov    rcx,QWORD PTR [rbp-0x40]
  003b3:    	mov    r8,QWORD PTR [rbp-0x48]
  003b7:    	mov    rdi,rbx
  003ba:    	mov    rsi,r12
  003bd: 34 	movabs rax,0x563437f474a0
  003c7:    	call   rax
  003c9:    	movq   xmm2,QWORD PTR [rsp]
  003ce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003d4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003da:    	add    rsp,0x20
  003de: 34 	movabs r13,0x563439872580
  003e8:    	test   rax,rax
  003eb:    	je     0xfffe8f83
:00025 %3 = %2.call x()                     [Vec]
  003f1:    	mov    rdi,QWORD PTR [rbp-0x38]
  003f5: 00 	test   rdi,0x7
  003fc:    	jne    0x3570b
  00402:    	cmp    DWORD PTR [rdi+0x4],0x28
  00406:    	jne    0x3570b
  0040c: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb72e],0x26        # 0xfffebb41
  00413:    	jne    0x3570b
  00419:    	mov    esi,DWORD PTR [rip+0x1a25]        # 0x1e44
  0041f:    	cmp    esi,0xffffffff
  00422:    	je     0x3571a
  00428:    	cmp    WORD PTR [rdi+0x2],0x3
  0042d:    	jne    0x446
  00433:    	cmp    esi,0x6
  00436:    	jge    0x446
  0043c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00441:    	jmp    0x47c
  00446:    	sub    rsp,0x20
  0044a:    	movq   QWORD PTR [rsp],xmm2
  0044f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00455:    	movq   QWORD PTR [rsp+0x10],xmm4
  0045b: 34 	movabs rax,0x563437ed0590
  00465:    	call   rax
  00467:    	movq   xmm2,QWORD PTR [rsp]
  0046c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00472:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00478:    	add    rsp,0x20
  0047c:    	mov    QWORD PTR [rbp-0x40],rax
:00026 
:00028 %4 = literal[0.6]
  00480: 00 	movq   xmm5,QWORD PTR [rip+0x19c0]        # 0x1e48
  00488: 99 	movabs rax,0xff1999999999999a
  00492:    	mov    QWORD PTR [rbp-0x48],rax
:00029 _%3 = %3 < %4                        [Float][Float]
:00030 condnotbr _%3 =>:00044
  00496:    	mov    rdi,QWORD PTR [rbp-0x40]
  0049a: 00 	test   rdi,0x1
  004a1:    	jne    0x3576d
  004a7: 00 	test   rdi,0x2
  004ae:    	je     0x4ea
  004b4:    	xorps  xmm6,xmm6
  004b7: 00 	movabs rax,0x8000000000000002
  004c1:    	cmp    rdi,rax
  004c4:    	je     0x4fc
  004ca:    	mov    rax,rdi
  004cd:    	sar    rax,0x3f
  004d1:    	add    rax,0x2
  004d5:    	and    rdi,0xfffffffffffffffc
  004d9:    	or     rdi,rax
  004dc:    	rol    rdi,0x3d
  004e0:    	movq   xmm6,rdi
  004e5:    	jmp    0x4fc
  004ea:    	call   0xfffe8fdc
  004ef:    	test   rax,rax
  004f2:    	je     0x3576d
  004f8:    	movq   xmm6,xmm0
  004fc:    	ucomisd xmm6,xmm5
  00500:    	jae    0x3586e
:00031 %3 = %2.call x()                     [Vec]
  00506:    	mov    rdi,QWORD PTR [rbp-0x38]
  0050a: 00 	test   rdi,0x7
  00511:    	jne    0x3577c
  00517:    	cmp    DWORD PTR [rdi+0x4],0x28
  0051b:    	jne    0x3577c
  00521: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb619],0x26        # 0xfffebb41
  00528:    	jne    0x3577c
  0052e:    	mov    esi,DWORD PTR [rip+0x1920]        # 0x1e54
  00534:    	cmp    esi,0xffffffff
  00537:    	je     0x3578b
  0053d:    	cmp    WORD PTR [rdi+0x2],0x3
  00542:    	jne    0x55b
  00548:    	cmp    esi,0x6
  0054b:    	jge    0x55b
  00551:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00556:    	jmp    0x59d
  0055b:    	sub    rsp,0x20
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576: 34 	movabs rax,0x563437ed0590
  00580:    	call   rax
  00582:    	movq   xmm2,QWORD PTR [rsp]
  00587:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0058d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00593:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00599:    	add    rsp,0x20
  0059d:    	mov    QWORD PTR [rbp-0x40],rax
:00032 
:00034 %4 = literal[-0.6]
  005a1: 00 	movq   xmm5,QWORD PTR [rip+0x18af]        # 0x1e58
  005a9: 99 	movabs rax,0xff1999999999999e
  005b3:    	mov    QWORD PTR [rbp-0x48],rax
:00035 _%3 = %3 > %4                        [Float][Float]
:00036 condnotbr _%3 =>:00044
  005b7:    	mov    rdi,QWORD PTR [rbp-0x40]
  005bb: 00 	test   rdi,0x1
  005c2:    	jne    0x357ea
  005c8: 00 	test   rdi,0x2
  005cf:    	je     0x60b
  005d5:    	xorps  xmm6,xmm6
  005d8: 00 	movabs rax,0x8000000000000002
  005e2:    	cmp    rdi,rax
  005e5:    	je     0x61d
  005eb:    	mov    rax,rdi
  005ee:    	sar    rax,0x3f
  005f2:    	add    rax,0x2
  005f6:    	and    rdi,0xfffffffffffffffc
  005fa:    	or     rdi,rax
  005fd:    	rol    rdi,0x3d
  00601:    	movq   xmm6,rdi
  00606:    	jmp    0x61d
  0060b:    	call   0xfffe8fdc
  00610:    	test   rax,rax
  00613:    	je     0x357ea
  00619:    	movq   xmm6,xmm0
  0061d:    	ucomisd xmm6,xmm5
  00621:    	jbe    0x35887
:00037 %3 = 1: i32
  00627: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00038 %3 = %1.[%3]                         [Array][Integer]
  0062f:    	sub    rsp,0x20
  00633:    	movq   QWORD PTR [rsp],xmm2
  00638:    	movq   QWORD PTR [rsp+0x8],xmm3
  0063e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00644:    	movq   QWORD PTR [rsp+0x18],xmm5
  0064a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0064e:    	mov    rcx,QWORD PTR [rbp-0x40]
  00652:    	mov    rdi,rbx
  00655:    	mov    rsi,r12
  00658: 34 	movabs r8,0x563439872658
  00662: 34 	movabs rax,0x563437f47370
  0066c:    	call   rax
  0066e:    	movq   xmm2,QWORD PTR [rsp]
  00673:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00679:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0067f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00685:    	add    rsp,0x20
  00689: 34 	movabs r13,0x563439872660
  00693:    	test   rax,rax
  00696:    	je     0xfffe8f83
  0069c:    	mov    QWORD PTR [rbp-0x40],rax
:00039 %4 = literal[1.0]
  006a0: 00 	movq   xmm5,QWORD PTR [rip+0x17c0]        # 0x1e68
  006a8: 00 	movabs rax,0xff80000000000002
  006b2:    	mov    QWORD PTR [rbp-0x48],rax
:00040 _ = %3.call x=(%4; 1)                [Vec]
  006b6:    	mov    rdi,QWORD PTR [rbp-0x40]
  006ba: 00 	test   rdi,0x7
  006c1:    	jne    0x357f9
  006c7:    	cmp    DWORD PTR [rdi+0x4],0x28
  006cb:    	jne    0x357f9
  006d1: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb469],0x26        # 0xfffebb41
  006d8:    	jne    0x357f9
  006de:    	mov    esi,DWORD PTR [rip+0x1790]        # 0x1e74
  006e4:    	cmp    esi,0xffffffff
  006e7:    	je     0x35808
  006ed:    	cmp    WORD PTR [rdi+0x2],0x3
  006f2:    	jne    0x70f
  006f8:    	cmp    esi,0x6
  006fb:    	jge    0x70f
  00701:    	mov    rax,QWORD PTR [rbp-0x48]
  00705:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0070a:    	jmp    0x768
  0070f:    	sub    rsp,0x20
  00713:    	movq   QWORD PTR [rsp],xmm2
  00718:    	movq   QWORD PTR [rsp+0x8],xmm3
  0071e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00724:    	movq   QWORD PTR [rsp+0x18],xmm5
  0072a:    	mov    rdx,QWORD PTR [rbp-0x48]
  0072e: 34 	movabs rax,0x563437ed0810
  00738:    	call   rax
  0073a:    	movq   xmm2,QWORD PTR [rsp]
  0073f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00745:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0074b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00751:    	add    rsp,0x20
  00755: 34 	movabs r13,0x563439872690
  0075f:    	test   rax,rax
  00762:    	je     0xfffe8f83
:00041 
:00043 br =>:00088
  00768:    	jmp    0x35f48
:00044 %3 = %2.call y()                     [<INVALID>]
  0076d: 01 	sub    DWORD PTR [rip+0x1704],0x1        # 0x1e78
  00774:    	je     0x358af
  0077a:    	sub    rsp,0x20
  0077e:    	movq   QWORD PTR [rsp],xmm2
  00783:    	movq   QWORD PTR [rsp+0x8],xmm3
  00789:    	movq   QWORD PTR [rsp+0x10],xmm4
  0078f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00795:    	mov    rdi,QWORD PTR [rbp-0x38]
  00799: 34 	movabs rax,0x563437f53600
  007a3:    	call   rax
  007a5:    	mov    r15d,eax
  007a8: 00 	cmp    r15d,DWORD PTR [rip+0x16d1]        # 0x1e80
  007af:    	jne    0x358d1
  007b5:    	mov    eax,DWORD PTR [rip+0xfffffffffffeb386]        # 0xfffebb41
  007bb:    	cmp    DWORD PTR [rip+0x16bb],eax        # 0x1e7c
  007c1:    	jne    0x358d1
  007c7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  007d0:    	mov    QWORD PTR [rsp-0x38],rcx
  007d5:    	mov    rax,QWORD PTR [rbx]
  007d8:    	lea    rdi,[rsp-0x18]
  007dd:    	mov    QWORD PTR [rdi],rax
  007e0:    	mov    QWORD PTR [rbx],rdi
  007e3:    	mov    rax,QWORD PTR [rbp-0x38]
  007e7:    	mov    QWORD PTR [rsp-0x38],rax
  007ec: 00 	mov    rdi,0x0
  007f3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007fc: 00 	movabs rax,0x0
  00806:    	mov    QWORD PTR [rsp-0x28],rax
  0080b: 00 	movabs r13,0x0
  00815:    	call   0xfffe8f48
  0081a:    	lea    rdi,[rbp-0x8]
  0081e:    	mov    QWORD PTR [rbx],rdi
  00821:    	movq   xmm2,QWORD PTR [rsp]
  00826:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0082c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00832:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00838:    	add    rsp,0x20
  0083c:    	test   rax,rax
  0083f:    	je     0x3593d
  00845:    	mov    QWORD PTR [rbp-0x40],rax
:00045 
:00047 %4 = literal[0.6]
  00849: 00 	movq   xmm5,QWORD PTR [rip+0x1637]        # 0x1e88
  00851: 99 	movabs rax,0xff1999999999999a
  0085b:    	mov    QWORD PTR [rbp-0x48],rax
:00048 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00049 condnotbr _%3 =>:00063
  0085f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00863:    	mov    rsi,QWORD PTR [rbp-0x48]
  00867: 00 	test   rdi,0x1
  0086e:    	je     0x3594c
  00874: 00 	test   rsi,0x1
  0087b:    	je     0x3594c
  00881:    	cmp    rdi,rsi
  00884:    	jge    0x35b4e
:00050 %3 = %2.call y()                     [<INVALID>]
  0088a: 01 	sub    DWORD PTR [rip+0x15ff],0x1        # 0x1e90
  00891:    	je     0x359b0
  00897:    	sub    rsp,0x20
  0089b:    	movq   QWORD PTR [rsp],xmm2
  008a0:    	movq   QWORD PTR [rsp+0x8],xmm3
  008a6:    	movq   QWORD PTR [rsp+0x10],xmm4
  008ac:    	movq   QWORD PTR [rsp+0x18],xmm5
  008b2:    	mov    rdi,QWORD PTR [rbp-0x38]
  008b6: 34 	movabs rax,0x563437f53600
  008c0:    	call   rax
  008c2:    	mov    r15d,eax
  008c5: 00 	cmp    r15d,DWORD PTR [rip+0x15cc]        # 0x1e98
  008cc:    	jne    0x359d2
  008d2:    	mov    eax,DWORD PTR [rip+0xfffffffffffeb269]        # 0xfffebb41
  008d8:    	cmp    DWORD PTR [rip+0x15b6],eax        # 0x1e94
  008de:    	jne    0x359d2
  008e4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008ed:    	mov    QWORD PTR [rsp-0x38],rcx
  008f2:    	mov    rax,QWORD PTR [rbx]
  008f5:    	lea    rdi,[rsp-0x18]
  008fa:    	mov    QWORD PTR [rdi],rax
  008fd:    	mov    QWORD PTR [rbx],rdi
  00900:    	mov    rax,QWORD PTR [rbp-0x38]
  00904:    	mov    QWORD PTR [rsp-0x38],rax
  00909: 00 	mov    rdi,0x0
  00910: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00919: 00 	movabs rax,0x0
  00923:    	mov    QWORD PTR [rsp-0x28],rax
  00928: 00 	movabs r13,0x0
  00932:    	call   0xfffe8f48
  00937:    	lea    rdi,[rbp-0x8]
  0093b:    	mov    QWORD PTR [rbx],rdi
  0093e:    	movq   xmm2,QWORD PTR [rsp]
  00943:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00949:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0094f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00955:    	add    rsp,0x20
  00959:    	test   rax,rax
  0095c:    	je     0x35a3e
  00962:    	mov    QWORD PTR [rbp-0x40],rax
:00051 
:00053 %4 = literal[-0.6]
  00966: 00 	movq   xmm5,QWORD PTR [rip+0x153a]        # 0x1ea8
  0096e: 99 	movabs rax,0xff1999999999999e
  00978:    	mov    QWORD PTR [rbp-0x48],rax
:00054 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00055 condnotbr _%3 =>:00063
  0097c:    	mov    rdi,QWORD PTR [rbp-0x40]
  00980:    	mov    rsi,QWORD PTR [rbp-0x48]
  00984: 00 	test   rdi,0x1
  0098b:    	je     0x35a4d
  00991: 00 	test   rsi,0x1
  00998:    	je     0x35a4d
  0099e:    	cmp    rdi,rsi
  009a1:    	jle    0x35b67
:00056 %3 = 1: i32
  009a7: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00057 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  009af:    	sub    rsp,0x20
  009b3:    	movq   QWORD PTR [rsp],xmm2
  009b8:    	movq   QWORD PTR [rsp+0x8],xmm3
  009be:    	movq   QWORD PTR [rsp+0x10],xmm4
  009c4:    	movq   QWORD PTR [rsp+0x18],xmm5
  009ca:    	mov    rdx,QWORD PTR [rbp-0x30]
  009ce:    	mov    rcx,QWORD PTR [rbp-0x40]
  009d2:    	mov    rdi,rbx
  009d5:    	mov    rsi,r12
  009d8: 34 	movabs r8,0x563439872788
  009e2: 34 	movabs rax,0x563437f47370
  009ec:    	call   rax
  009ee:    	movq   xmm2,QWORD PTR [rsp]
  009f3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009f9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009ff:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a05:    	add    rsp,0x20
  00a09: 34 	movabs r13,0x563439872790
  00a13:    	test   rax,rax
  00a16:    	je     0xfffe8f83
  00a1c:    	mov    QWORD PTR [rbp-0x40],rax
:00058 %4 = literal[1.0]
  00a20: 00 	movq   xmm5,QWORD PTR [rip+0x1490]        # 0x1eb8
  00a28: 00 	movabs rax,0xff80000000000002
  00a32:    	mov    QWORD PTR [rbp-0x48],rax
:00059 _ = %3.call y=(%4; 1)                [<INVALID>]
  00a36: 01 	sub    DWORD PTR [rip+0x1483],0x1        # 0x1ec0
  00a3d:    	je     0x35ab1
  00a43:    	sub    rsp,0x20
  00a47:    	movq   QWORD PTR [rsp],xmm2
  00a4c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a52:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a58:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a5e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a62: 34 	movabs rax,0x563437f53600
  00a6c:    	call   rax
  00a6e:    	mov    r15d,eax
  00a71: 00 	cmp    r15d,DWORD PTR [rip+0x1450]        # 0x1ec8
  00a78:    	jne    0x35ad3
  00a7e:    	mov    eax,DWORD PTR [rip+0xfffffffffffeb0bd]        # 0xfffebb41
  00a84:    	cmp    DWORD PTR [rip+0x143a],eax        # 0x1ec4
  00a8a:    	jne    0x35ad3
  00a90: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a99:    	mov    QWORD PTR [rsp-0x38],rcx
  00a9e:    	mov    rax,QWORD PTR [rbx]
  00aa1:    	lea    rdi,[rsp-0x18]
  00aa6:    	mov    QWORD PTR [rdi],rax
  00aa9:    	mov    QWORD PTR [rbx],rdi
  00aac:    	mov    rax,QWORD PTR [rbp-0x40]
  00ab0:    	mov    QWORD PTR [rsp-0x38],rax
  00ab5: 00 	mov    rdi,0x1
  00abc:    	mov    rax,QWORD PTR [rbp-0x48]
  00ac0:    	mov    QWORD PTR [rsp-0x40],rax
  00ac5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ace: 00 	movabs rax,0x0
  00ad8:    	mov    QWORD PTR [rsp-0x28],rax
  00add: 00 	movabs r13,0x0
  00ae7:    	call   0xfffe8f48
  00aec:    	lea    rdi,[rbp-0x8]
  00af0:    	mov    QWORD PTR [rbx],rdi
  00af3:    	movq   xmm2,QWORD PTR [rsp]
  00af8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00afe:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b04:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b0a:    	add    rsp,0x20
  00b0e:    	test   rax,rax
  00b11:    	je     0x35b3f
:00060 
:00062 br =>:00088
  00b17:    	jmp    0x35f61
:00063 %3 = %2.call z()                     [<INVALID>]
  00b1c: 01 	sub    DWORD PTR [rip+0x13a9],0x1        # 0x1ecc
  00b23:    	je     0x35b8f
  00b29:    	sub    rsp,0x20
  00b2d:    	movq   QWORD PTR [rsp],xmm2
  00b32:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b38:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b3e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b44:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b48: 34 	movabs rax,0x563437f53600
  00b52:    	call   rax
  00b54:    	mov    r15d,eax
  00b57: 00 	cmp    r15d,DWORD PTR [rip+0x1376]        # 0x1ed4
  00b5e:    	jne    0x35bb1
  00b64:    	mov    eax,DWORD PTR [rip+0xfffffffffffeafd7]        # 0xfffebb41
  00b6a:    	cmp    DWORD PTR [rip+0x1360],eax        # 0x1ed0
  00b70:    	jne    0x35bb1
  00b76: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b7f:    	mov    QWORD PTR [rsp-0x38],rcx
  00b84:    	mov    rax,QWORD PTR [rbx]
  00b87:    	lea    rdi,[rsp-0x18]
  00b8c:    	mov    QWORD PTR [rdi],rax
  00b8f:    	mov    QWORD PTR [rbx],rdi
  00b92:    	mov    rax,QWORD PTR [rbp-0x38]
  00b96:    	mov    QWORD PTR [rsp-0x38],rax
  00b9b: 00 	mov    rdi,0x0
  00ba2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00bab: 00 	movabs rax,0x0
  00bb5:    	mov    QWORD PTR [rsp-0x28],rax
  00bba: 00 	movabs r13,0x0
  00bc4:    	call   0xfffe8f48
  00bc9:    	lea    rdi,[rbp-0x8]
  00bcd:    	mov    QWORD PTR [rbx],rdi
  00bd0:    	movq   xmm2,QWORD PTR [rsp]
  00bd5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bdb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00be1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00be7:    	add    rsp,0x20
  00beb:    	test   rax,rax
  00bee:    	je     0x35c1d
  00bf4:    	mov    QWORD PTR [rbp-0x40],rax
:00064 
:00066 %4 = literal[0.6]
  00bf8: 00 	movq   xmm5,QWORD PTR [rip+0x12d8]        # 0x1ed8
  00c00: 99 	movabs rax,0xff1999999999999a
  00c0a:    	mov    QWORD PTR [rbp-0x48],rax
:00067 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00068 condnotbr _%3 =>:00082
  00c0e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00c12:    	mov    rsi,QWORD PTR [rbp-0x48]
  00c16: 00 	test   rdi,0x1
  00c1d:    	je     0x35c2c
  00c23: 00 	test   rsi,0x1
  00c2a:    	je     0x35c2c
  00c30:    	cmp    rdi,rsi
  00c33:    	jge    0x35e2e
:00069 %3 = %2.call z()                     [<INVALID>]
  00c39: 01 	sub    DWORD PTR [rip+0x12a0],0x1        # 0x1ee0
  00c40:    	je     0x35c90
  00c46:    	sub    rsp,0x20
  00c4a:    	movq   QWORD PTR [rsp],xmm2
  00c4f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c55:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c5b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c61:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c65: 34 	movabs rax,0x563437f53600
  00c6f:    	call   rax
  00c71:    	mov    r15d,eax
  00c74: 00 	cmp    r15d,DWORD PTR [rip+0x126d]        # 0x1ee8
  00c7b:    	jne    0x35cb2
  00c81:    	mov    eax,DWORD PTR [rip+0xfffffffffffeaeba]        # 0xfffebb41
  00c87:    	cmp    DWORD PTR [rip+0x1257],eax        # 0x1ee4
  00c8d:    	jne    0x35cb2
  00c93: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c9c:    	mov    QWORD PTR [rsp-0x38],rcx
  00ca1:    	mov    rax,QWORD PTR [rbx]
  00ca4:    	lea    rdi,[rsp-0x18]
  00ca9:    	mov    QWORD PTR [rdi],rax
  00cac:    	mov    QWORD PTR [rbx],rdi
  00caf:    	mov    rax,QWORD PTR [rbp-0x38]
  00cb3:    	mov    QWORD PTR [rsp-0x38],rax
  00cb8: 00 	mov    rdi,0x0
  00cbf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cc8: 00 	movabs rax,0x0
  00cd2:    	mov    QWORD PTR [rsp-0x28],rax
  00cd7: 00 	movabs r13,0x0
  00ce1:    	call   0xfffe8f48
  00ce6:    	lea    rdi,[rbp-0x8]
  00cea:    	mov    QWORD PTR [rbx],rdi
  00ced:    	movq   xmm2,QWORD PTR [rsp]
  00cf2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cf8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cfe:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d04:    	add    rsp,0x20
  00d08:    	test   rax,rax
  00d0b:    	je     0x35d1e
  00d11:    	mov    QWORD PTR [rbp-0x40],rax
:00070 
:00072 %4 = literal[-0.6]
  00d15: 00 	movq   xmm5,QWORD PTR [rip+0x11db]        # 0x1ef8
  00d1d: 99 	movabs rax,0xff1999999999999e
  00d27:    	mov    QWORD PTR [rbp-0x48],rax
:00073 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00074 condnotbr _%3 =>:00082
  00d2b:    	mov    rdi,QWORD PTR [rbp-0x40]
  00d2f:    	mov    rsi,QWORD PTR [rbp-0x48]
  00d33: 00 	test   rdi,0x1
  00d3a:    	je     0x35d2d
  00d40: 00 	test   rsi,0x1
  00d47:    	je     0x35d2d
  00d4d:    	cmp    rdi,rsi
  00d50:    	jle    0x35e47
:00075 %3 = 1: i32
  00d56: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00076 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00d5e:    	sub    rsp,0x20
  00d62:    	movq   QWORD PTR [rsp],xmm2
  00d67:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d6d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d73:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d79:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d7d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d81:    	mov    rdi,rbx
  00d84:    	mov    rsi,r12
  00d87: 34 	movabs r8,0x5634398728b8
  00d91: 34 	movabs rax,0x563437f47370
  00d9b:    	call   rax
  00d9d:    	movq   xmm2,QWORD PTR [rsp]
  00da2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00da8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dae:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00db4:    	add    rsp,0x20
  00db8: 34 	movabs r13,0x5634398728c0
  00dc2:    	test   rax,rax
  00dc5:    	je     0xfffe8f83
  00dcb:    	mov    QWORD PTR [rbp-0x40],rax
:00077 %4 = literal[1.0]
  00dcf: 00 	movq   xmm5,QWORD PTR [rip+0x1131]        # 0x1f08
  00dd7: 00 	movabs rax,0xff80000000000002
  00de1:    	mov    QWORD PTR [rbp-0x48],rax
:00078 _ = %3.call z=(%4; 1)                [<INVALID>]
  00de5: 01 	sub    DWORD PTR [rip+0x1124],0x1        # 0x1f10
  00dec:    	je     0x35d91
  00df2:    	sub    rsp,0x20
  00df6:    	movq   QWORD PTR [rsp],xmm2
  00dfb:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e01:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e07:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e0d:    	mov    rdi,QWORD PTR [rbp-0x40]
  00e11: 34 	movabs rax,0x563437f53600
  00e1b:    	call   rax
  00e1d:    	mov    r15d,eax
  00e20: 00 	cmp    r15d,DWORD PTR [rip+0x10f1]        # 0x1f18
  00e27:    	jne    0x35db3
  00e2d:    	mov    eax,DWORD PTR [rip+0xfffffffffffead0e]        # 0xfffebb41
  00e33:    	cmp    DWORD PTR [rip+0x10db],eax        # 0x1f14
  00e39:    	jne    0x35db3
  00e3f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00e48:    	mov    QWORD PTR [rsp-0x38],rcx
  00e4d:    	mov    rax,QWORD PTR [rbx]
  00e50:    	lea    rdi,[rsp-0x18]
  00e55:    	mov    QWORD PTR [rdi],rax
  00e58:    	mov    QWORD PTR [rbx],rdi
  00e5b:    	mov    rax,QWORD PTR [rbp-0x40]
  00e5f:    	mov    QWORD PTR [rsp-0x38],rax
  00e64: 00 	mov    rdi,0x1
  00e6b:    	mov    rax,QWORD PTR [rbp-0x48]
  00e6f:    	mov    QWORD PTR [rsp-0x40],rax
  00e74: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e7d: 00 	movabs rax,0x0
  00e87:    	mov    QWORD PTR [rsp-0x28],rax
  00e8c: 00 	movabs r13,0x0
  00e96:    	call   0xfffe8f48
  00e9b:    	lea    rdi,[rbp-0x8]
  00e9f:    	mov    QWORD PTR [rbx],rdi
  00ea2:    	movq   xmm2,QWORD PTR [rsp]
  00ea7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ead:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00eb3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00eb9:    	add    rsp,0x20
  00ebd:    	test   rax,rax
  00ec0:    	je     0x35e1f
:00079 
:00081 br =>:00088
  00ec6:    	jmp    0x35f7a
:00082 %3 = 1: i32
  00ecb: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00083 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00ed3:    	sub    rsp,0x20
  00ed7:    	movq   QWORD PTR [rsp],xmm2
  00edc:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ee2:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ee8:    	movq   QWORD PTR [rsp+0x18],xmm5
  00eee:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ef2:    	mov    rcx,QWORD PTR [rbp-0x40]
  00ef6:    	mov    rdi,rbx
  00ef9:    	mov    rsi,r12
  00efc: 34 	movabs r8,0x563439872928
  00f06: 34 	movabs rax,0x563437f47370
  00f10:    	call   rax
  00f12:    	movq   xmm2,QWORD PTR [rsp]
  00f17:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f1d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f23:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f29:    	add    rsp,0x20
  00f2d: 34 	movabs r13,0x563439872930
  00f37:    	test   rax,rax
  00f3a:    	je     0xfffe8f83
  00f40:    	mov    QWORD PTR [rbp-0x40],rax
:00084 %4 = literal[1.0]
  00f44: 00 	movq   xmm5,QWORD PTR [rip+0xfdc]        # 0x1f28
  00f4c: 00 	movabs rax,0xff80000000000002
  00f56:    	mov    QWORD PTR [rbp-0x48],rax
:00085 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f5a: 01 	sub    DWORD PTR [rip+0xfcf],0x1        # 0x1f30
  00f61:    	je     0x35e6f
  00f67:    	sub    rsp,0x20
  00f6b:    	movq   QWORD PTR [rsp],xmm2
  00f70:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f76:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f7c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f82:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f86: 34 	movabs rax,0x563437f53600
  00f90:    	call   rax
  00f92:    	mov    r15d,eax
  00f95: 00 	cmp    r15d,DWORD PTR [rip+0xf9c]        # 0x1f38
  00f9c:    	jne    0x35e91
  00fa2:    	mov    eax,DWORD PTR [rip+0xfffffffffffeab99]        # 0xfffebb41
  00fa8:    	cmp    DWORD PTR [rip+0xf86],eax        # 0x1f34
  00fae:    	jne    0x35e91
  00fb4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fbd:    	mov    QWORD PTR [rsp-0x38],rcx
  00fc2:    	mov    rax,QWORD PTR [rbx]
  00fc5:    	lea    rdi,[rsp-0x18]
  00fca:    	mov    QWORD PTR [rdi],rax
  00fcd:    	mov    QWORD PTR [rbx],rdi
  00fd0:    	mov    rax,QWORD PTR [rbp-0x40]
  00fd4:    	mov    QWORD PTR [rsp-0x38],rax
  00fd9: 00 	mov    rdi,0x1
  00fe0:    	mov    rax,QWORD PTR [rbp-0x48]
  00fe4:    	mov    QWORD PTR [rsp-0x40],rax
  00fe9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ff2: 00 	movabs rax,0x0
  00ffc:    	mov    QWORD PTR [rsp-0x28],rax
  01001: 00 	movabs r13,0x0
  0100b:    	call   0xfffe8f48
  01010:    	lea    rdi,[rbp-0x8]
  01014:    	mov    QWORD PTR [rbx],rdi
  01017:    	movq   xmm2,QWORD PTR [rsp]
  0101c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01022:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01028:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0102e:    	add    rsp,0x20
  01032:    	test   rax,rax
  01035:    	je     0x35efd
:00086 
:00088 %3 = 0: i32
  0103b: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  01043: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  0104b:    	sub    rsp,0x20
  0104f:    	movq   QWORD PTR [rsp],xmm2
  01054:    	movq   QWORD PTR [rsp+0x8],xmm3
  0105a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01060:    	movq   QWORD PTR [rsp+0x18],xmm5
  01066:    	mov    rdx,QWORD PTR [rbp-0x30]
  0106a:    	mov    rcx,QWORD PTR [rbp-0x50]
  0106e:    	mov    rdi,rbx
  01071:    	mov    rsi,r12
  01074: 34 	movabs r8,0x563439872998
  0107e: 34 	movabs rax,0x563437f47370
  01088:    	call   rax
  0108a:    	movq   xmm2,QWORD PTR [rsp]
  0108f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01095:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0109b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010a1:    	add    rsp,0x20
  010a5: 34 	movabs r13,0x5634398729a0
  010af:    	test   rax,rax
  010b2:    	je     0xfffe8f83
  010b8:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  010bc: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  010c4:    	sub    rsp,0x20
  010c8:    	movq   QWORD PTR [rsp],xmm3
  010cd:    	movq   QWORD PTR [rsp+0x8],xmm4
  010d3:    	movq   QWORD PTR [rsp+0x10],xmm5
  010d9:    	mov    rdx,QWORD PTR [rbp-0x30]
  010dd:    	mov    rcx,QWORD PTR [rbp-0x58]
  010e1:    	mov    rdi,rbx
  010e4:    	mov    rsi,r12
  010e7: 34 	movabs r8,0x5634398729b8
  010f1: 34 	movabs rax,0x563437f47370
  010fb:    	call   rax
  010fd:    	movq   xmm3,QWORD PTR [rsp]
  01102:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01108:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0110e:    	add    rsp,0x20
  01112: 34 	movabs r13,0x5634398729c0
  0111c:    	test   rax,rax
  0111f:    	je     0xfffe8f83
  01125:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  01129:    	mov    rdi,QWORD PTR [rbp-0x50]
  0112d: 00 	test   rdi,0x7
  01134:    	jne    0x35f0c
  0113a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0113e:    	jne    0x35f0c
  01144: 26 	cmp    DWORD PTR [rip+0xfffffffffffea9f6],0x26        # 0xfffebb41
  0114b:    	jne    0x35f0c
  01151:    	sub    rsp,0x10
  01155:    	movq   QWORD PTR [rsp],xmm3
  0115a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01160: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01169:    	mov    QWORD PTR [rsp-0x38],rcx
  0116e:    	mov    rax,QWORD PTR [rbx]
  01171:    	lea    rdi,[rsp-0x18]
  01176:    	mov    QWORD PTR [rdi],rax
  01179:    	mov    QWORD PTR [rbx],rdi
  0117c:    	mov    rax,QWORD PTR [rbp-0x50]
  01180:    	mov    QWORD PTR [rsp-0x38],rax
  01185: 00 	mov    rdi,0x1
  0118c:    	mov    rax,QWORD PTR [rbp-0x58]
  01190:    	mov    QWORD PTR [rsp-0x40],rax
  01195: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0119e: 09 	movabs rax,0x900000041
  011a8:    	mov    QWORD PTR [rsp-0x28],rax
  011ad: 34 	movabs r13,0x563439838e30
  011b7:    	call   0xffff59ed
  011bc:    	lea    rdi,[rbp-0x8]
  011c0:    	mov    QWORD PTR [rbx],rdi
  011c3:    	movq   xmm3,QWORD PTR [rsp]
  011c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011ce:    	add    rsp,0x10
  011d2: 34 	movabs r13,0x5634398729e0
  011dc:    	test   rax,rax
  011df:    	je     0xfffe8f83
  011e5:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  011e9:    	sub    rsp,0x10
  011ed:    	movq   QWORD PTR [rsp],xmm3
  011f2:    	movq   QWORD PTR [rsp+0x8],xmm4
  011f8:    	mov    rdx,QWORD PTR [rbp-0x30]
  011fc:    	mov    rcx,QWORD PTR [rbp-0x40]
  01200:    	mov    r8,QWORD PTR [rbp-0x48]
  01204:    	mov    rdi,rbx
  01207:    	mov    rsi,r12
  0120a: 34 	movabs rax,0x563437f474a0
  01214:    	call   rax
  01216:    	movq   xmm3,QWORD PTR [rsp]
  0121b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01221:    	add    rsp,0x10
  01225: 34 	movabs r13,0x563439872a00
  0122f:    	test   rax,rax
  01232:    	je     0xfffe8f83
:00097 %3 = 0: i32
  01238: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  01240: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  01248:    	sub    rsp,0x10
  0124c:    	movq   QWORD PTR [rsp],xmm3
  01251:    	movq   QWORD PTR [rsp+0x8],xmm4
  01257:    	mov    rdx,QWORD PTR [rbp-0x30]
  0125b:    	mov    rcx,QWORD PTR [rbp-0x50]
  0125f:    	mov    rdi,rbx
  01262:    	mov    rsi,r12
  01265: 34 	movabs r8,0x563439872a28
  0126f: 34 	movabs rax,0x563437f47370
  01279:    	call   rax
  0127b:    	movq   xmm3,QWORD PTR [rsp]
  01280:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01286:    	add    rsp,0x10
  0128a: 34 	movabs r13,0x563439872a30
  01294:    	test   rax,rax
  01297:    	je     0xfffe8f83
  0129d:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  012a1:    	mov    rdi,QWORD PTR [rbp-0x50]
  012a5: 00 	test   rdi,0x7
  012ac:    	jne    0x35f1b
  012b2:    	cmp    DWORD PTR [rdi+0x4],0x28
  012b6:    	jne    0x35f1b
  012bc: 26 	cmp    DWORD PTR [rip+0xfffffffffffea87e],0x26        # 0xfffebb41
  012c3:    	jne    0x35f1b
  012c9:    	sub    rsp,0x10
  012cd:    	movq   QWORD PTR [rsp],xmm3
  012d2:    	movq   QWORD PTR [rsp+0x8],xmm4
  012d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012e1:    	mov    QWORD PTR [rsp-0x38],rcx
  012e6:    	mov    rax,QWORD PTR [rbx]
  012e9:    	lea    rdi,[rsp-0x18]
  012ee:    	mov    QWORD PTR [rdi],rax
  012f1:    	mov    QWORD PTR [rbx],rdi
  012f4:    	mov    rax,QWORD PTR [rbp-0x50]
  012f8:    	mov    QWORD PTR [rsp-0x38],rax
  012fd: 00 	mov    rdi,0x0
  01304: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0130d: 07 	movabs rax,0x1000700000044
  01317:    	mov    QWORD PTR [rsp-0x28],rax
  0131c: 34 	movabs r13,0x5634398639e0
  01326:    	call   0xfffec47a
  0132b:    	lea    rdi,[rbp-0x8]
  0132f:    	mov    QWORD PTR [rbx],rdi
  01332:    	movq   xmm3,QWORD PTR [rsp]
  01337:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0133d:    	add    rsp,0x10
  01341: 34 	movabs r13,0x563439872a50
  0134b:    	test   rax,rax
  0134e:    	je     0xfffe8f83
  01354:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  01358:    	sub    rsp,0x10
  0135c:    	movq   QWORD PTR [rsp],xmm3
  01361:    	movq   QWORD PTR [rsp+0x8],xmm4
  01367:    	mov    rdx,QWORD PTR [rbp-0x30]
  0136b:    	mov    rcx,QWORD PTR [rbp-0x40]
  0136f:    	mov    r8,QWORD PTR [rbp-0x48]
  01373:    	mov    rdi,rbx
  01376:    	mov    rsi,r12
  01379: 34 	movabs rax,0x563437f474a0
  01383:    	call   rax
  01385:    	movq   xmm3,QWORD PTR [rsp]
  0138a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01390:    	add    rsp,0x10
  01394: 34 	movabs r13,0x563439872a70
  0139e:    	test   rax,rax
  013a1:    	je     0xfffe8f83
:00104 %3 = 1: i32
  013a7: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  013af: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  013b7:    	sub    rsp,0x10
  013bb:    	movq   QWORD PTR [rsp],xmm3
  013c0:    	movq   QWORD PTR [rsp+0x8],xmm4
  013c6:    	mov    rdx,QWORD PTR [rbp-0x30]
  013ca:    	mov    rcx,QWORD PTR [rbp-0x50]
  013ce:    	mov    rdi,rbx
  013d1:    	mov    rsi,r12
  013d4: 34 	movabs r8,0x563439872a98
  013de: 34 	movabs rax,0x563437f47370
  013e8:    	call   rax
  013ea:    	movq   xmm3,QWORD PTR [rsp]
  013ef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013f5:    	add    rsp,0x10
  013f9: 34 	movabs r13,0x563439872aa0
  01403:    	test   rax,rax
  01406:    	je     0xfffe8f83
  0140c:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  01410: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  01418:    	sub    rsp,0x10
  0141c:    	movq   QWORD PTR [rsp],xmm3
  01421:    	movq   QWORD PTR [rsp+0x8],xmm4
  01427:    	mov    rdx,QWORD PTR [rbp-0x30]
  0142b:    	mov    rcx,QWORD PTR [rbp-0x58]
  0142f:    	mov    rdi,rbx
  01432:    	mov    rsi,r12
  01435: 34 	movabs r8,0x563439872ab8
  0143f: 34 	movabs rax,0x563437f47370
  01449:    	call   rax
  0144b:    	movq   xmm3,QWORD PTR [rsp]
  01450:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01456:    	add    rsp,0x10
  0145a: 34 	movabs r13,0x563439872ac0
  01464:    	test   rax,rax
  01467:    	je     0xfffe8f83
  0146d:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01471:    	mov    rdi,QWORD PTR [rbp-0x50]
  01475: 00 	test   rdi,0x7
  0147c:    	jne    0x35f2a
  01482:    	cmp    DWORD PTR [rdi+0x4],0x28
  01486:    	jne    0x35f2a
  0148c: 26 	cmp    DWORD PTR [rip+0xfffffffffffea6ae],0x26        # 0xfffebb41
  01493:    	jne    0x35f2a
  01499:    	sub    rsp,0x10
  0149d:    	movq   QWORD PTR [rsp],xmm3
  014a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  014a8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014b1:    	mov    QWORD PTR [rsp-0x38],rcx
  014b6:    	mov    rax,QWORD PTR [rbx]
  014b9:    	lea    rdi,[rsp-0x18]
  014be:    	mov    QWORD PTR [rdi],rax
  014c1:    	mov    QWORD PTR [rbx],rdi
  014c4:    	mov    rax,QWORD PTR [rbp-0x50]
  014c8:    	mov    QWORD PTR [rsp-0x38],rax
  014cd: 00 	mov    rdi,0x1
  014d4:    	mov    rax,QWORD PTR [rbp-0x58]
  014d8:    	mov    QWORD PTR [rsp-0x40],rax
  014dd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014e6: 09 	movabs rax,0x900000041
  014f0:    	mov    QWORD PTR [rsp-0x28],rax
  014f5: 34 	movabs r13,0x563439838e30
  014ff:    	call   0xffff59ed
  01504:    	lea    rdi,[rbp-0x8]
  01508:    	mov    QWORD PTR [rbx],rdi
  0150b:    	movq   xmm3,QWORD PTR [rsp]
  01510:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01516:    	add    rsp,0x10
  0151a: 34 	movabs r13,0x563439872ae0
  01524:    	test   rax,rax
  01527:    	je     0xfffe8f83
  0152d:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  01531:    	sub    rsp,0x10
  01535:    	movq   QWORD PTR [rsp],xmm3
  0153a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01540:    	mov    rdx,QWORD PTR [rbp-0x30]
  01544:    	mov    rcx,QWORD PTR [rbp-0x40]
  01548:    	mov    r8,QWORD PTR [rbp-0x48]
  0154c:    	mov    rdi,rbx
  0154f:    	mov    rsi,r12
  01552: 34 	movabs rax,0x563437f474a0
  0155c:    	call   rax
  0155e:    	movq   xmm3,QWORD PTR [rsp]
  01563:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01569:    	add    rsp,0x10
  0156d: 34 	movabs r13,0x563439872b00
  01577:    	test   rax,rax
  0157a:    	je     0xfffe8f83
:00113 %3 = 1: i32
  01580: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01588: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01590:    	sub    rsp,0x10
  01594:    	movq   QWORD PTR [rsp],xmm3
  01599:    	movq   QWORD PTR [rsp+0x8],xmm4
  0159f:    	mov    rdx,QWORD PTR [rbp-0x30]
  015a3:    	mov    rcx,QWORD PTR [rbp-0x50]
  015a7:    	mov    rdi,rbx
  015aa:    	mov    rsi,r12
  015ad: 34 	movabs r8,0x563439872b28
  015b7: 34 	movabs rax,0x563437f47370
  015c1:    	call   rax
  015c3:    	movq   xmm3,QWORD PTR [rsp]
  015c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015ce:    	add    rsp,0x10
  015d2: 34 	movabs r13,0x563439872b30
  015dc:    	test   rax,rax
  015df:    	je     0xfffe8f83
  015e5:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  015e9:    	mov    rdi,QWORD PTR [rbp-0x50]
  015ed: 00 	test   rdi,0x7
  015f4:    	jne    0x35f39
  015fa:    	cmp    DWORD PTR [rdi+0x4],0x28
  015fe:    	jne    0x35f39
  01604: 26 	cmp    DWORD PTR [rip+0xfffffffffffea536],0x26        # 0xfffebb41
  0160b:    	jne    0x35f39
  01611:    	sub    rsp,0x10
  01615:    	movq   QWORD PTR [rsp],xmm3
  0161a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01620: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01629:    	mov    QWORD PTR [rsp-0x38],rcx
  0162e:    	mov    rax,QWORD PTR [rbx]
  01631:    	lea    rdi,[rsp-0x18]
  01636:    	mov    QWORD PTR [rdi],rax
  01639:    	mov    QWORD PTR [rbx],rdi
  0163c:    	mov    rax,QWORD PTR [rbp-0x50]
  01640:    	mov    QWORD PTR [rsp-0x38],rax
  01645: 00 	mov    rdi,0x0
  0164c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01655: 07 	movabs rax,0x1000700000044
  0165f:    	mov    QWORD PTR [rsp-0x28],rax
  01664: 34 	movabs r13,0x5634398639e0
  0166e:    	call   0xfffec47a
  01673:    	lea    rdi,[rbp-0x8]
  01677:    	mov    QWORD PTR [rbx],rdi
  0167a:    	movq   xmm3,QWORD PTR [rsp]
  0167f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01685:    	add    rsp,0x10
  01689: 34 	movabs r13,0x563439872b50
  01693:    	test   rax,rax
  01696:    	je     0xfffe8f83
  0169c:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  016a0:    	sub    rsp,0x10
  016a4:    	movq   QWORD PTR [rsp],xmm3
  016a9:    	movq   QWORD PTR [rsp+0x8],xmm4
  016af:    	mov    rdx,QWORD PTR [rbp-0x30]
  016b3:    	mov    rcx,QWORD PTR [rbp-0x40]
  016b7:    	mov    r8,QWORD PTR [rbp-0x48]
  016bb:    	mov    rdi,rbx
  016be:    	mov    rsi,r12
  016c1: 34 	movabs rax,0x563437f474a0
  016cb:    	call   rax
  016cd:    	movq   xmm3,QWORD PTR [rsp]
  016d2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016d8:    	add    rsp,0x10
  016dc: 34 	movabs r13,0x563439872b70
  016e6:    	test   rax,rax
  016e9:    	je     0xfffe8f83
:00120 %3 = %4
  016ef:    	mov    rax,QWORD PTR [rbp-0x48]
  016f3:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  016f7:    	mov    rax,QWORD PTR [rbp-0x40]
  016fb:    	leave  
  016fc:    	ret    
:00088 %3 = 0: i32
  016fd: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  01705: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  0170d:    	sub    rsp,0x20
  01711:    	movq   QWORD PTR [rsp],xmm2
  01716:    	movq   QWORD PTR [rsp+0x8],xmm3
  0171c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01722:    	movq   QWORD PTR [rsp+0x18],xmm5
  01728:    	mov    rdx,QWORD PTR [rbp-0x30]
  0172c:    	mov    rcx,QWORD PTR [rbp-0x50]
  01730:    	mov    rdi,rbx
  01733:    	mov    rsi,r12
  01736: 34 	movabs r8,0x563439872998
  01740: 34 	movabs rax,0x563437f47370
  0174a:    	call   rax
  0174c:    	movq   xmm2,QWORD PTR [rsp]
  01751:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01757:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0175d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01763:    	add    rsp,0x20
  01767: 34 	movabs r13,0x5634398729a0
  01771:    	test   rax,rax
  01774:    	je     0xfffe8f83
  0177a:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  0177e: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  01786:    	sub    rsp,0x20
  0178a:    	movq   QWORD PTR [rsp],xmm3
  0178f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01795:    	movq   QWORD PTR [rsp+0x10],xmm5
  0179b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0179f:    	mov    rcx,QWORD PTR [rbp-0x58]
  017a3:    	mov    rdi,rbx
  017a6:    	mov    rsi,r12
  017a9: 34 	movabs r8,0x5634398729b8
  017b3: 34 	movabs rax,0x563437f47370
  017bd:    	call   rax
  017bf:    	movq   xmm3,QWORD PTR [rsp]
  017c4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017ca:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017d0:    	add    rsp,0x20
  017d4: 34 	movabs r13,0x5634398729c0
  017de:    	test   rax,rax
  017e1:    	je     0xfffe8f83
  017e7:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  017eb:    	mov    rdi,QWORD PTR [rbp-0x50]
  017ef: 00 	test   rdi,0x7
  017f6:    	jne    0x35f93
  017fc:    	cmp    DWORD PTR [rdi+0x4],0x28
  01800:    	jne    0x35f93
  01806: 26 	cmp    DWORD PTR [rip+0xfffffffffffea334],0x26        # 0xfffebb41
  0180d:    	jne    0x35f93
  01813:    	sub    rsp,0x10
  01817:    	movq   QWORD PTR [rsp],xmm3
  0181c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01822: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0182b:    	mov    QWORD PTR [rsp-0x38],rcx
  01830:    	mov    rax,QWORD PTR [rbx]
  01833:    	lea    rdi,[rsp-0x18]
  01838:    	mov    QWORD PTR [rdi],rax
  0183b:    	mov    QWORD PTR [rbx],rdi
  0183e:    	mov    rax,QWORD PTR [rbp-0x50]
  01842:    	mov    QWORD PTR [rsp-0x38],rax
  01847: 00 	mov    rdi,0x1
  0184e:    	mov    rax,QWORD PTR [rbp-0x58]
  01852:    	mov    QWORD PTR [rsp-0x40],rax
  01857: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01860: 09 	movabs rax,0x900000041
  0186a:    	mov    QWORD PTR [rsp-0x28],rax
  0186f: 34 	movabs r13,0x563439838e30
  01879:    	call   0xffff59ed
  0187e:    	lea    rdi,[rbp-0x8]
  01882:    	mov    QWORD PTR [rbx],rdi
  01885:    	movq   xmm3,QWORD PTR [rsp]
  0188a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01890:    	add    rsp,0x10
  01894: 34 	movabs r13,0x5634398729e0
  0189e:    	test   rax,rax
  018a1:    	je     0xfffe8f83
  018a7:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  018ab:    	sub    rsp,0x10
  018af:    	movq   QWORD PTR [rsp],xmm3
  018b4:    	movq   QWORD PTR [rsp+0x8],xmm4
  018ba:    	mov    rdx,QWORD PTR [rbp-0x30]
  018be:    	mov    rcx,QWORD PTR [rbp-0x40]
  018c2:    	mov    r8,QWORD PTR [rbp-0x48]
  018c6:    	mov    rdi,rbx
  018c9:    	mov    rsi,r12
  018cc: 34 	movabs rax,0x563437f474a0
  018d6:    	call   rax
  018d8:    	movq   xmm3,QWORD PTR [rsp]
  018dd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018e3:    	add    rsp,0x10
  018e7: 34 	movabs r13,0x563439872a00
  018f1:    	test   rax,rax
  018f4:    	je     0xfffe8f83
:00097 %3 = 0: i32
  018fa: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  01902: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  0190a:    	sub    rsp,0x10
  0190e:    	movq   QWORD PTR [rsp],xmm3
  01913:    	movq   QWORD PTR [rsp+0x8],xmm4
  01919:    	mov    rdx,QWORD PTR [rbp-0x30]
  0191d:    	mov    rcx,QWORD PTR [rbp-0x50]
  01921:    	mov    rdi,rbx
  01924:    	mov    rsi,r12
  01927: 34 	movabs r8,0x563439872a28
  01931: 34 	movabs rax,0x563437f47370
  0193b:    	call   rax
  0193d:    	movq   xmm3,QWORD PTR [rsp]
  01942:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01948:    	add    rsp,0x10
  0194c: 34 	movabs r13,0x563439872a30
  01956:    	test   rax,rax
  01959:    	je     0xfffe8f83
  0195f:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  01963:    	mov    rdi,QWORD PTR [rbp-0x50]
  01967: 00 	test   rdi,0x7
  0196e:    	jne    0x35fa2
  01974:    	cmp    DWORD PTR [rdi+0x4],0x28
  01978:    	jne    0x35fa2
  0197e: 26 	cmp    DWORD PTR [rip+0xfffffffffffea1bc],0x26        # 0xfffebb41
  01985:    	jne    0x35fa2
  0198b:    	sub    rsp,0x10
  0198f:    	movq   QWORD PTR [rsp],xmm3
  01994:    	movq   QWORD PTR [rsp+0x8],xmm4
  0199a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019a3:    	mov    QWORD PTR [rsp-0x38],rcx
  019a8:    	mov    rax,QWORD PTR [rbx]
  019ab:    	lea    rdi,[rsp-0x18]
  019b0:    	mov    QWORD PTR [rdi],rax
  019b3:    	mov    QWORD PTR [rbx],rdi
  019b6:    	mov    rax,QWORD PTR [rbp-0x50]
  019ba:    	mov    QWORD PTR [rsp-0x38],rax
  019bf: 00 	mov    rdi,0x0
  019c6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019cf: 07 	movabs rax,0x1000700000044
  019d9:    	mov    QWORD PTR [rsp-0x28],rax
  019de: 34 	movabs r13,0x5634398639e0
  019e8:    	call   0xfffec47a
  019ed:    	lea    rdi,[rbp-0x8]
  019f1:    	mov    QWORD PTR [rbx],rdi
  019f4:    	movq   xmm3,QWORD PTR [rsp]
  019f9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ff:    	add    rsp,0x10
  01a03: 34 	movabs r13,0x563439872a50
  01a0d:    	test   rax,rax
  01a10:    	je     0xfffe8f83
  01a16:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  01a1a:    	sub    rsp,0x10
  01a1e:    	movq   QWORD PTR [rsp],xmm3
  01a23:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a29:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a2d:    	mov    rcx,QWORD PTR [rbp-0x40]
  01a31:    	mov    r8,QWORD PTR [rbp-0x48]
  01a35:    	mov    rdi,rbx
  01a38:    	mov    rsi,r12
  01a3b: 34 	movabs rax,0x563437f474a0
  01a45:    	call   rax
  01a47:    	movq   xmm3,QWORD PTR [rsp]
  01a4c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a52:    	add    rsp,0x10
  01a56: 34 	movabs r13,0x563439872a70
  01a60:    	test   rax,rax
  01a63:    	je     0xfffe8f83
:00104 %3 = 1: i32
  01a69: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  01a71: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01a79:    	sub    rsp,0x10
  01a7d:    	movq   QWORD PTR [rsp],xmm3
  01a82:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a88:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a8c:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a90:    	mov    rdi,rbx
  01a93:    	mov    rsi,r12
  01a96: 34 	movabs r8,0x563439872a98
  01aa0: 34 	movabs rax,0x563437f47370
  01aaa:    	call   rax
  01aac:    	movq   xmm3,QWORD PTR [rsp]
  01ab1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ab7:    	add    rsp,0x10
  01abb: 34 	movabs r13,0x563439872aa0
  01ac5:    	test   rax,rax
  01ac8:    	je     0xfffe8f83
  01ace:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  01ad2: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  01ada:    	sub    rsp,0x10
  01ade:    	movq   QWORD PTR [rsp],xmm3
  01ae3:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ae9:    	mov    rdx,QWORD PTR [rbp-0x30]
  01aed:    	mov    rcx,QWORD PTR [rbp-0x58]
  01af1:    	mov    rdi,rbx
  01af4:    	mov    rsi,r12
  01af7: 34 	movabs r8,0x563439872ab8
  01b01: 34 	movabs rax,0x563437f47370
  01b0b:    	call   rax
  01b0d:    	movq   xmm3,QWORD PTR [rsp]
  01b12:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b18:    	add    rsp,0x10
  01b1c: 34 	movabs r13,0x563439872ac0
  01b26:    	test   rax,rax
  01b29:    	je     0xfffe8f83
  01b2f:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01b33:    	mov    rdi,QWORD PTR [rbp-0x50]
  01b37: 00 	test   rdi,0x7
  01b3e:    	jne    0x35fb1
  01b44:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b48:    	jne    0x35fb1
  01b4e: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9fec],0x26        # 0xfffebb41
  01b55:    	jne    0x35fb1
  01b5b:    	sub    rsp,0x10
  01b5f:    	movq   QWORD PTR [rsp],xmm3
  01b64:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b6a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b73:    	mov    QWORD PTR [rsp-0x38],rcx
  01b78:    	mov    rax,QWORD PTR [rbx]
  01b7b:    	lea    rdi,[rsp-0x18]
  01b80:    	mov    QWORD PTR [rdi],rax
  01b83:    	mov    QWORD PTR [rbx],rdi
  01b86:    	mov    rax,QWORD PTR [rbp-0x50]
  01b8a:    	mov    QWORD PTR [rsp-0x38],rax
  01b8f: 00 	mov    rdi,0x1
  01b96:    	mov    rax,QWORD PTR [rbp-0x58]
  01b9a:    	mov    QWORD PTR [rsp-0x40],rax
  01b9f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01ba8: 09 	movabs rax,0x900000041
  01bb2:    	mov    QWORD PTR [rsp-0x28],rax
  01bb7: 34 	movabs r13,0x563439838e30
  01bc1:    	call   0xffff59ed
  01bc6:    	lea    rdi,[rbp-0x8]
  01bca:    	mov    QWORD PTR [rbx],rdi
  01bcd:    	movq   xmm3,QWORD PTR [rsp]
  01bd2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bd8:    	add    rsp,0x10
  01bdc: 34 	movabs r13,0x563439872ae0
  01be6:    	test   rax,rax
  01be9:    	je     0xfffe8f83
  01bef:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  01bf3:    	sub    rsp,0x10
  01bf7:    	movq   QWORD PTR [rsp],xmm3
  01bfc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c02:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c06:    	mov    rcx,QWORD PTR [rbp-0x40]
  01c0a:    	mov    r8,QWORD PTR [rbp-0x48]
  01c0e:    	mov    rdi,rbx
  01c11:    	mov    rsi,r12
  01c14: 34 	movabs rax,0x563437f474a0
  01c1e:    	call   rax
  01c20:    	movq   xmm3,QWORD PTR [rsp]
  01c25:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c2b:    	add    rsp,0x10
  01c2f: 34 	movabs r13,0x563439872b00
  01c39:    	test   rax,rax
  01c3c:    	je     0xfffe8f83
:00113 %3 = 1: i32
  01c42: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01c4a: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01c52:    	sub    rsp,0x10
  01c56:    	movq   QWORD PTR [rsp],xmm3
  01c5b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c61:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c65:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c69:    	mov    rdi,rbx
  01c6c:    	mov    rsi,r12
  01c6f: 34 	movabs r8,0x563439872b28
  01c79: 34 	movabs rax,0x563437f47370
  01c83:    	call   rax
  01c85:    	movq   xmm3,QWORD PTR [rsp]
  01c8a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c90:    	add    rsp,0x10
  01c94: 34 	movabs r13,0x563439872b30
  01c9e:    	test   rax,rax
  01ca1:    	je     0xfffe8f83
  01ca7:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  01cab:    	mov    rdi,QWORD PTR [rbp-0x50]
  01caf: 00 	test   rdi,0x7
  01cb6:    	jne    0x35fc0
  01cbc:    	cmp    DWORD PTR [rdi+0x4],0x28
  01cc0:    	jne    0x35fc0
  01cc6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9e74],0x26        # 0xfffebb41
  01ccd:    	jne    0x35fc0
  01cd3:    	sub    rsp,0x10
  01cd7:    	movq   QWORD PTR [rsp],xmm3
  01cdc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ce2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01ceb:    	mov    QWORD PTR [rsp-0x38],rcx
  01cf0:    	mov    rax,QWORD PTR [rbx]
  01cf3:    	lea    rdi,[rsp-0x18]
  01cf8:    	mov    QWORD PTR [rdi],rax
  01cfb:    	mov    QWORD PTR [rbx],rdi
  01cfe:    	mov    rax,QWORD PTR [rbp-0x50]
  01d02:    	mov    QWORD PTR [rsp-0x38],rax
  01d07: 00 	mov    rdi,0x0
  01d0e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01d17: 07 	movabs rax,0x1000700000044
  01d21:    	mov    QWORD PTR [rsp-0x28],rax
  01d26: 34 	movabs r13,0x5634398639e0
  01d30:    	call   0xfffec47a
  01d35:    	lea    rdi,[rbp-0x8]
  01d39:    	mov    QWORD PTR [rbx],rdi
  01d3c:    	movq   xmm3,QWORD PTR [rsp]
  01d41:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d47:    	add    rsp,0x10
  01d4b: 34 	movabs r13,0x563439872b50
  01d55:    	test   rax,rax
  01d58:    	je     0xfffe8f83
  01d5e:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  01d62:    	sub    rsp,0x10
  01d66:    	movq   QWORD PTR [rsp],xmm3
  01d6b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d71:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d75:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d79:    	mov    r8,QWORD PTR [rbp-0x48]
  01d7d:    	mov    rdi,rbx
  01d80:    	mov    rsi,r12
  01d83: 34 	movabs rax,0x563437f474a0
  01d8d:    	call   rax
  01d8f:    	movq   xmm3,QWORD PTR [rsp]
  01d94:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d9a:    	add    rsp,0x10
  01d9e: 34 	movabs r13,0x563439872b70
  01da8:    	test   rax,rax
  01dab:    	je     0xfffe8f83
:00120 %3 = %4
  01db1:    	mov    rax,QWORD PTR [rbp-0x48]
  01db5:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  01db9:    	mov    rax,QWORD PTR [rbp-0x40]
  01dbd:    	leave  
  01dbe:    	ret    
==> start whole compile: intersect FuncId(72) self_class:Plane start:[00000] bytecode:0x563439855550
<== finished compile. elapsed:133.4µs
offset:Pos(102388) code: 6695 bytes  data: 349 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xa0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x34093
  00022:    	jmp    0x34093
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086:    	mov    rdi,QWORD PTR [rbp-0x28]
  0008a: 00 	test   rdi,0x7
  00091:    	jne    0x340a2
  00097:    	cmp    DWORD PTR [rdi+0x4],0x2c
  0009b:    	jne    0x340a2
:00000 init_method reg:14 arg:2 pos:2 req:2 stack_offset:10
:00001 %7 = @p: Plane[IvarId(0)]
  000a1:    	mov    rdi,QWORD PTR [rbp-0x28]
  000a5:    	mov    rax,QWORD PTR [rdi+0x10]
  000a9:    	mov    QWORD PTR [rbp-0x60],rax
:00002 %8 = @n: Plane[IvarId(1)]
  000ad:    	mov    rdi,QWORD PTR [rbp-0x28]
  000b1:    	mov    rax,QWORD PTR [rdi+0x18]
  000b5:    	mov    QWORD PTR [rbp-0x68],rax
:00003 %3 = %7.call vdot(%8; 1)             [Vec]
  000b9:    	mov    rdi,QWORD PTR [rbp-0x60]
  000bd: 00 	test   rdi,0x7
  000c4:    	jne    0x340b1
  000ca:    	cmp    DWORD PTR [rdi+0x4],0x28
  000ce:    	jne    0x340b1
  000d4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9b2a],0x26        # 0xfffe9c05
  000db:    	jne    0x340b1
  000e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000ea:    	mov    QWORD PTR [rsp-0x38],rcx
  000ef:    	mov    rax,QWORD PTR [rbx]
  000f2:    	lea    rdi,[rsp-0x18]
  000f7:    	mov    QWORD PTR [rdi],rax
  000fa:    	mov    QWORD PTR [rbx],rdi
  000fd:    	mov    rax,QWORD PTR [rbp-0x60]
  00101:    	mov    QWORD PTR [rsp-0x38],rax
  00106: 00 	mov    rdi,0x1
  0010d:    	mov    rax,QWORD PTR [rbp-0x68]
  00111:    	mov    QWORD PTR [rsp-0x40],rax
  00116: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0011f: 05 	movabs rax,0x1000500000042
  00129:    	mov    QWORD PTR [rsp-0x28],rax
  0012e: 34 	movabs r13,0x563439877e20
  00138:    	call   0xfffea96a
  0013d:    	lea    rdi,[rbp-0x8]
  00141:    	mov    QWORD PTR [rbx],rdi
  00144: 34 	movabs r13,0x5634398555a0
  0014e:    	test   rax,rax
  00151:    	je     0xfffe7047
  00157:    	mov    QWORD PTR [rbp-0x40],rax
:00004 
:00006 %3 = neg %3                          [Float]
  0015b:    	mov    rdi,QWORD PTR [rbp-0x40]
  0015f: 00 	test   rdi,0x1
  00166:    	jne    0x340c0
  0016c: 00 	test   rdi,0x2
  00173:    	je     0x1af
  00179:    	xorps  xmm2,xmm2
  0017c: 00 	movabs rax,0x8000000000000002
  00186:    	cmp    rdi,rax
  00189:    	je     0x1c1
  0018f:    	mov    rax,rdi
  00192:    	sar    rax,0x3f
  00196:    	add    rax,0x2
  0019a:    	and    rdi,0xfffffffffffffffc
  0019e:    	or     rdi,rax
  001a1:    	rol    rdi,0x3d
  001a5:    	movq   xmm2,rdi
  001aa:    	jmp    0x1c1
  001af:    	call   0xfffe70a0
  001b4:    	test   rax,rax
  001b7:    	je     0x340c0
  001bd:    	movq   xmm2,xmm0
  001c1: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1864]        # 0x1a2c
:00007 %7 = %1.call dir()                   [Ray]
  001c8:    	mov    rdi,QWORD PTR [rbp-0x30]
  001cc: 00 	test   rdi,0x7
  001d3:    	jne    0x340cf
  001d9:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001dd:    	jne    0x340cf
  001e3: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9a1b],0x26        # 0xfffe9c05
  001ea:    	jne    0x340cf
  001f0:    	mov    esi,DWORD PTR [rip+0x1842]        # 0x1a38
  001f6:    	cmp    esi,0xffffffff
  001f9:    	je     0x340eb
  001ff:    	cmp    WORD PTR [rdi+0x2],0x3
  00204:    	jne    0x21d
  0020a:    	cmp    esi,0x6
  0020d:    	jge    0x21d
  00213:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00218:    	jmp    0x23b
  0021d:    	sub    rsp,0x10
  00221:    	movq   QWORD PTR [rsp],xmm2
  00226: 34 	movabs rax,0x563437ed0590
  00230:    	call   rax
  00232:    	movq   xmm2,QWORD PTR [rsp]
  00237:    	add    rsp,0x10
  0023b:    	mov    QWORD PTR [rbp-0x60],rax
:00008 
:00010 %8 = @n: Plane[IvarId(1)]
  0023f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00243:    	mov    rax,QWORD PTR [rdi+0x18]
  00247:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %7.call vdot(%8; 1)             [Vec]
  0024b:    	mov    rdi,QWORD PTR [rbp-0x60]
  0024f: 00 	test   rdi,0x7
  00256:    	jne    0x34126
  0025c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00260:    	jne    0x34126
  00266: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9998],0x26        # 0xfffe9c05
  0026d:    	jne    0x34126
  00273:    	sub    rsp,0x10
  00277:    	movq   QWORD PTR [rsp],xmm2
  0027c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00285:    	mov    QWORD PTR [rsp-0x38],rcx
  0028a:    	mov    rax,QWORD PTR [rbx]
  0028d:    	lea    rdi,[rsp-0x18]
  00292:    	mov    QWORD PTR [rdi],rax
  00295:    	mov    QWORD PTR [rbx],rdi
  00298:    	mov    rax,QWORD PTR [rbp-0x60]
  0029c:    	mov    QWORD PTR [rsp-0x38],rax
  002a1: 00 	mov    rdi,0x1
  002a8:    	mov    rax,QWORD PTR [rbp-0x68]
  002ac:    	mov    QWORD PTR [rsp-0x40],rax
  002b1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002ba: 05 	movabs rax,0x1000500000042
  002c4:    	mov    QWORD PTR [rsp-0x28],rax
  002c9: 34 	movabs r13,0x563439877e20
  002d3:    	call   0xfffea96a
  002d8:    	lea    rdi,[rbp-0x8]
  002dc:    	mov    QWORD PTR [rbx],rdi
  002df:    	movq   xmm2,QWORD PTR [rsp]
  002e4:    	add    rsp,0x10
  002e8: 34 	movabs r13,0x563439855620
  002f2:    	test   rax,rax
  002f5:    	je     0xfffe7047
  002fb:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %5 = %4
  002ff:    	mov    rax,QWORD PTR [rbp-0x48]
  00303:    	mov    QWORD PTR [rbp-0x50],rax
:00015 %7 = literal[0.0]
  00307: 00 	movq   xmm3,QWORD PTR [rip+0x172d]        # 0x1a3c
  0030f: 00 	movabs rax,0x8000000000000002
  00319:    	mov    QWORD PTR [rbp-0x60],rax
:00016 _%7 = %4 < %7                        [Float][Float]
:00017 condnotbr _%7 =>:00021
  0031d:    	mov    rdi,QWORD PTR [rbp-0x48]
  00321: 00 	test   rdi,0x1
  00328:    	jne    0x34142
  0032e: 00 	test   rdi,0x2
  00335:    	je     0x371
  0033b:    	xorps  xmm4,xmm4
  0033e: 00 	movabs rax,0x8000000000000002
  00348:    	cmp    rdi,rax
  0034b:    	je     0x383
  00351:    	mov    rax,rdi
  00354:    	sar    rax,0x3f
  00358:    	add    rax,0x2
  0035c:    	and    rdi,0xfffffffffffffffc
  00360:    	or     rdi,rax
  00363:    	rol    rdi,0x3d
  00367:    	movq   xmm4,rdi
  0036c:    	jmp    0x383
  00371:    	call   0xfffe70a0
  00376:    	test   rax,rax
  00379:    	je     0x34142
  0037f:    	movq   xmm4,xmm0
  00383:    	ucomisd xmm4,xmm3
  00387:    	jae    0x341a9
:00018 %5 = %4
:00019 %5 = neg %5                          [<INVALID>]
  0038d: 01 	sub    DWORD PTR [rip+0x16b0],0x1        # 0x1a44
  00394:    	je     0x34187
  0039a:    	movq   xmm0,xmm4
  0039e:    	call   0xfffe7193
  003a3:    	mov    QWORD PTR [rbp-0x50],rax
  003a7:    	sub    rsp,0x20
  003ab:    	movq   QWORD PTR [rsp],xmm2
  003b0:    	movq   QWORD PTR [rsp+0x8],xmm3
  003b6:    	movq   QWORD PTR [rsp+0x10],xmm4
  003bc:    	mov    rdi,QWORD PTR [rbp-0x50]
  003c0:    	mov    rdx,rdi
  003c3:    	mov    rdi,rbx
  003c6:    	mov    rsi,r12
  003c9: 34 	movabs rax,0x563437f14b70
  003d3:    	call   rax
  003d5:    	movq   xmm2,QWORD PTR [rsp]
  003da:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003e0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003e6:    	add    rsp,0x20
  003ea: 34 	movabs r13,0x563439855690
  003f4:    	test   rax,rax
  003f7:    	je     0xfffe7047
  003fd:    	mov    QWORD PTR [rbp-0x50],rax
:00020 br =>:00021
  00401:    	jmp    0x341cf
:00021 %7 = literal[1e-17]
  00406: 00 	movq   xmm3,QWORD PTR [rip+0x163e]        # 0x1a4c
  0040e: aa 	movabs rax,0xe33877aa3236a4ba
  00418:    	mov    QWORD PTR [rbp-0x60],rax
:00022 _%7 = %5 < %7                        [Float][Float]
:00023 condnotbr _%7 =>:00027
  0041c:    	mov    rdi,QWORD PTR [rbp-0x50]
  00420: 00 	test   rdi,0x1
  00427:    	jne    0x341f5
  0042d: 00 	test   rdi,0x2
  00434:    	je     0x470
  0043a:    	xorps  xmm5,xmm5
  0043d: 00 	movabs rax,0x8000000000000002
  00447:    	cmp    rdi,rax
  0044a:    	je     0x482
  00450:    	mov    rax,rdi
  00453:    	sar    rax,0x3f
  00457:    	add    rax,0x2
  0045b:    	and    rdi,0xfffffffffffffffc
  0045f:    	or     rdi,rax
  00462:    	rol    rdi,0x3d
  00466:    	movq   xmm5,rdi
  0046b:    	jmp    0x482
  00470:    	call   0xfffe70a0
  00475:    	test   rax,rax
  00478:    	je     0x341f5
  0047e:    	movq   xmm5,xmm0
  00482:    	ucomisd xmm5,xmm3
  00486:    	jae    0x49a
:00024 %7 = nil
  0048c: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00025 ret %7
  00494:    	mov    rax,QWORD PTR [rbp-0x60]
  00498:    	leave  
  00499:    	ret    
:00027 %8 = %1.call org()                   [Ray]
  0049a:    	mov    rdi,QWORD PTR [rbp-0x30]
  0049e: 00 	test   rdi,0x7
  004a5:    	jne    0x34211
  004ab:    	cmp    DWORD PTR [rdi+0x4],0x2e
  004af:    	jne    0x34211
  004b5: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9749],0x26        # 0xfffe9c05
  004bc:    	jne    0x34211
  004c2:    	mov    esi,DWORD PTR [rip+0x1590]        # 0x1a58
  004c8:    	cmp    esi,0xffffffff
  004cb:    	je     0x3422d
  004d1:    	cmp    WORD PTR [rdi+0x2],0x3
  004d6:    	jne    0x4ef
  004dc:    	cmp    esi,0x6
  004df:    	jge    0x4ef
  004e5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004ea:    	jmp    0x531
  004ef:    	sub    rsp,0x20
  004f3:    	movq   QWORD PTR [rsp],xmm2
  004f8:    	movq   QWORD PTR [rsp+0x8],xmm3
  004fe:    	movq   QWORD PTR [rsp+0x10],xmm4
  00504:    	movq   QWORD PTR [rsp+0x18],xmm5
  0050a: 34 	movabs rax,0x563437ed0590
  00514:    	call   rax
  00516:    	movq   xmm2,QWORD PTR [rsp]
  0051b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00521:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00527:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0052d:    	add    rsp,0x20
  00531:    	mov    QWORD PTR [rbp-0x68],rax
:00028 
:00030 %9 = @n: Plane[IvarId(1)]
  00535:    	mov    rdi,QWORD PTR [rbp-0x28]
  00539:    	mov    rax,QWORD PTR [rdi+0x18]
  0053d:    	mov    QWORD PTR [rbp-0x70],rax
:00031 %7 = %8.call vdot(%9; 1)             [Vec]
  00541:    	mov    rdi,QWORD PTR [rbp-0x68]
  00545: 00 	test   rdi,0x7
  0054c:    	jne    0x3428c
  00552:    	cmp    DWORD PTR [rdi+0x4],0x28
  00556:    	jne    0x3428c
  0055c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe96a2],0x26        # 0xfffe9c05
  00563:    	jne    0x3428c
  00569:    	sub    rsp,0x20
  0056d:    	movq   QWORD PTR [rsp],xmm2
  00572:    	movq   QWORD PTR [rsp+0x8],xmm4
  00578:    	movq   QWORD PTR [rsp+0x10],xmm5
  0057e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00587:    	mov    QWORD PTR [rsp-0x38],rcx
  0058c:    	mov    rax,QWORD PTR [rbx]
  0058f:    	lea    rdi,[rsp-0x18]
  00594:    	mov    QWORD PTR [rdi],rax
  00597:    	mov    QWORD PTR [rbx],rdi
  0059a:    	mov    rax,QWORD PTR [rbp-0x68]
  0059e:    	mov    QWORD PTR [rsp-0x38],rax
  005a3: 00 	mov    rdi,0x1
  005aa:    	mov    rax,QWORD PTR [rbp-0x70]
  005ae:    	mov    QWORD PTR [rsp-0x40],rax
  005b3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  005bc: 05 	movabs rax,0x1000500000042
  005c6:    	mov    QWORD PTR [rsp-0x28],rax
  005cb: 34 	movabs r13,0x563439877e20
  005d5:    	call   0xfffea96a
  005da:    	lea    rdi,[rbp-0x8]
  005de:    	mov    QWORD PTR [rbx],rdi
  005e1:    	movq   xmm2,QWORD PTR [rsp]
  005e6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  005ec:    	movq   xmm5,QWORD PTR [rsp+0x10]
  005f2:    	add    rsp,0x20
  005f6: 34 	movabs r13,0x563439855760
  00600:    	test   rax,rax
  00603:    	je     0xfffe7047
  00609:    	mov    QWORD PTR [rbp-0x60],rax
:00032 
:00034 %7 = %7 + %3                         [Float][Float]
  0060d:    	mov    rdi,QWORD PTR [rbp-0x60]
  00611: 00 	test   rdi,0x1
  00618:    	jne    0x342a8
  0061e: 00 	test   rdi,0x2
  00625:    	je     0x661
  0062b:    	xorps  xmm3,xmm3
  0062e: 00 	movabs rax,0x8000000000000002
  00638:    	cmp    rdi,rax
  0063b:    	je     0x673
  00641:    	mov    rax,rdi
  00644:    	sar    rax,0x3f
  00648:    	add    rax,0x2
  0064c:    	and    rdi,0xfffffffffffffffc
  00650:    	or     rdi,rax
  00653:    	rol    rdi,0x3d
  00657:    	movq   xmm3,rdi
  0065c:    	jmp    0x673
  00661:    	call   0xfffe70a0
  00666:    	test   rax,rax
  00669:    	je     0x342a8
  0066f:    	movq   xmm3,xmm0
  00673:    	addsd  xmm3,xmm2
:00035 %7 = neg %7                          [Float]
  00677: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13de]        # 0x1a5c
:00036 %6 = %7 / %4                         [Float][Float]
  0067e:    	movq   xmm6,xmm3
  00682:    	movq   rax,xmm4
  00687:    	test   rax,rax
  0068a:    	je     0xfffe706c
  00690:    	divsd  xmm6,xmm4
:00037 %7 = literal[0.0]
  00694: 00 	movq   xmm3,QWORD PTR [rip+0x13d0]        # 0x1a6c
  0069c: 00 	movabs rax,0x8000000000000002
  006a6:    	mov    QWORD PTR [rbp-0x60],rax
:00038 _%7 = %6 > %7                        [Float][Float]
:00039 condnotbr _%7 =>:00106
  006aa:    	ucomisd xmm6,xmm3
  006ae:    	jbe    0x35221
:00040 %7 = %2.call t()                     [<INVALID>]
  006b4: 01 	sub    DWORD PTR [rip+0x13b9],0x1        # 0x1a74
  006bb:    	je     0x342ed
  006c1:    	sub    rsp,0x20
  006c5:    	movq   QWORD PTR [rsp],xmm2
  006ca:    	movq   QWORD PTR [rsp+0x8],xmm4
  006d0:    	movq   QWORD PTR [rsp+0x10],xmm5
  006d6:    	movq   QWORD PTR [rsp+0x18],xmm6
  006dc:    	mov    rdi,QWORD PTR [rbp-0x38]
  006e0: 34 	movabs rax,0x563437f53600
  006ea:    	call   rax
  006ec:    	mov    r15d,eax
  006ef: 00 	cmp    r15d,DWORD PTR [rip+0x1386]        # 0x1a7c
  006f6:    	jne    0x3430f
  006fc:    	mov    eax,DWORD PTR [rip+0xfffffffffffe9503]        # 0xfffe9c05
  00702:    	cmp    DWORD PTR [rip+0x1370],eax        # 0x1a78
  00708:    	jne    0x3430f
  0070e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00717:    	mov    QWORD PTR [rsp-0x38],rcx
  0071c:    	mov    rax,QWORD PTR [rbx]
  0071f:    	lea    rdi,[rsp-0x18]
  00724:    	mov    QWORD PTR [rdi],rax
  00727:    	mov    QWORD PTR [rbx],rdi
  0072a:    	mov    rax,QWORD PTR [rbp-0x38]
  0072e:    	mov    QWORD PTR [rsp-0x38],rax
  00733: 00 	mov    rdi,0x0
  0073a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00743: 00 	movabs rax,0x0
  0074d:    	mov    QWORD PTR [rsp-0x28],rax
  00752: 00 	movabs r13,0x0
  0075c:    	call   0xfffe700c
  00761:    	lea    rdi,[rbp-0x8]
  00765:    	mov    QWORD PTR [rbx],rdi
  00768:    	movq   xmm2,QWORD PTR [rsp]
  0076d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00773:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00779:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0077f:    	add    rsp,0x20
  00783:    	test   rax,rax
  00786:    	je     0x3437b
  0078c:    	mov    QWORD PTR [rbp-0x60],rax
:00041 
:00043 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00044 condnotbr _%7 =>:00106
  00790:    	movq   xmm0,xmm6
  00794:    	call   0xfffe7193
  00799:    	mov    QWORD PTR [rbp-0x58],rax
  0079d:    	mov    rdi,QWORD PTR [rbp-0x58]
  007a1:    	mov    rsi,QWORD PTR [rbp-0x60]
  007a5: 00 	test   rdi,0x1
  007ac:    	je     0x3438a
  007b2: 00 	test   rsi,0x1
  007b9:    	je     0x3438a
  007bf:    	cmp    rdi,rsi
  007c2:    	jge    0x35254
:00045 %7 = literal[true]
  007c8: 00 	mov    rax,0x1c
  007cf:    	mov    QWORD PTR [rbp-0x60],rax
:00046 _ = %2.call hit=(%7; 1)              [<INVALID>]
  007d3: 01 	sub    DWORD PTR [rip+0x12a6],0x1        # 0x1a80
  007da:    	je     0x343fb
  007e0:    	sub    rsp,0x20
  007e4:    	movq   QWORD PTR [rsp],xmm2
  007e9:    	movq   QWORD PTR [rsp+0x8],xmm4
  007ef:    	movq   QWORD PTR [rsp+0x10],xmm5
  007f5:    	movq   QWORD PTR [rsp+0x18],xmm6
  007fb:    	mov    rdi,QWORD PTR [rbp-0x38]
  007ff: 34 	movabs rax,0x563437f53600
  00809:    	call   rax
  0080b:    	mov    r15d,eax
  0080e: 00 	cmp    r15d,DWORD PTR [rip+0x1273]        # 0x1a88
  00815:    	jne    0x3441d
  0081b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe93e4]        # 0xfffe9c05
  00821:    	cmp    DWORD PTR [rip+0x125d],eax        # 0x1a84
  00827:    	jne    0x3441d
  0082d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00836:    	mov    QWORD PTR [rsp-0x38],rcx
  0083b:    	mov    rax,QWORD PTR [rbx]
  0083e:    	lea    rdi,[rsp-0x18]
  00843:    	mov    QWORD PTR [rdi],rax
  00846:    	mov    QWORD PTR [rbx],rdi
  00849:    	mov    rax,QWORD PTR [rbp-0x38]
  0084d:    	mov    QWORD PTR [rsp-0x38],rax
  00852: 00 	mov    rdi,0x1
  00859:    	mov    rax,QWORD PTR [rbp-0x60]
  0085d:    	mov    QWORD PTR [rsp-0x40],rax
  00862: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0086b: 00 	movabs rax,0x0
  00875:    	mov    QWORD PTR [rsp-0x28],rax
  0087a: 00 	movabs r13,0x0
  00884:    	call   0xfffe700c
  00889:    	lea    rdi,[rbp-0x8]
  0088d:    	mov    QWORD PTR [rbx],rdi
  00890:    	movq   xmm2,QWORD PTR [rsp]
  00895:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0089b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008a1:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008a7:    	add    rsp,0x20
  008ab:    	test   rax,rax
  008ae:    	je     0x34489
:00047 
:00049 _ = %2.call t=(%6; 1)                [<INVALID>]
  008b4: 01 	sub    DWORD PTR [rip+0x11d1],0x1        # 0x1a8c
  008bb:    	je     0x344b4
  008c1:    	sub    rsp,0x20
  008c5:    	movq   QWORD PTR [rsp],xmm2
  008ca:    	movq   QWORD PTR [rsp+0x8],xmm4
  008d0:    	movq   QWORD PTR [rsp+0x10],xmm5
  008d6:    	movq   QWORD PTR [rsp+0x18],xmm6
  008dc:    	mov    rdi,QWORD PTR [rbp-0x38]
  008e0: 34 	movabs rax,0x563437f53600
  008ea:    	call   rax
  008ec:    	mov    r15d,eax
  008ef: 00 	cmp    r15d,DWORD PTR [rip+0x119e]        # 0x1a94
  008f6:    	jne    0x344d6
  008fc:    	mov    eax,DWORD PTR [rip+0xfffffffffffe9303]        # 0xfffe9c05
  00902:    	cmp    DWORD PTR [rip+0x1188],eax        # 0x1a90
  00908:    	jne    0x344d6
  0090e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00917:    	mov    QWORD PTR [rsp-0x38],rcx
  0091c:    	mov    rax,QWORD PTR [rbx]
  0091f:    	lea    rdi,[rsp-0x18]
  00924:    	mov    QWORD PTR [rdi],rax
  00927:    	mov    QWORD PTR [rbx],rdi
  0092a:    	mov    rax,QWORD PTR [rbp-0x38]
  0092e:    	mov    QWORD PTR [rsp-0x38],rax
  00933: 00 	mov    rdi,0x1
  0093a:    	mov    rax,QWORD PTR [rbp-0x58]
  0093e:    	mov    QWORD PTR [rsp-0x40],rax
  00943: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0094c: 00 	movabs rax,0x0
  00956:    	mov    QWORD PTR [rsp-0x28],rax
  0095b: 00 	movabs r13,0x0
  00965:    	call   0xfffe700c
  0096a:    	lea    rdi,[rbp-0x8]
  0096e:    	mov    QWORD PTR [rbx],rdi
  00971:    	movq   xmm2,QWORD PTR [rsp]
  00976:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0097c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00982:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00988:    	add    rsp,0x20
  0098c:    	test   rax,rax
  0098f:    	je     0x34542
:00050 
:00052 %7 = @n: <INVALID>[IvarId(0)]
  00995:    	mov    rdi,QWORD PTR [rbp-0x28]
  00999:    	sub    rsp,0x20
  0099d:    	movq   QWORD PTR [rsp],xmm2
  009a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  009a8:    	movq   QWORD PTR [rsp+0x10],xmm5
  009ae:    	movq   QWORD PTR [rsp+0x18],xmm6
  009b4: 00 	mov    rsi,0x97
  009bb:    	mov    rdx,r12
  009be: 34 	movabs rax,0x563437f47590
  009c8:    	call   rax
  009ca:    	movq   xmm2,QWORD PTR [rsp]
  009cf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009d5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009db:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009e1:    	add    rsp,0x20
  009e5:    	mov    QWORD PTR [rbp-0x60],rax
:00053 _ = %2.call n=(%7; 1)                [<INVALID>]
  009e9: 01 	sub    DWORD PTR [rip+0x10a8],0x1        # 0x1a98
  009f0:    	je     0x3456d
  009f6:    	sub    rsp,0x20
  009fa:    	movq   QWORD PTR [rsp],xmm2
  009ff:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a05:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a0b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a11:    	mov    rdi,QWORD PTR [rbp-0x38]
  00a15: 34 	movabs rax,0x563437f53600
  00a1f:    	call   rax
  00a21:    	mov    r15d,eax
  00a24: 00 	cmp    r15d,DWORD PTR [rip+0x1075]        # 0x1aa0
  00a2b:    	jne    0x3458f
  00a31:    	mov    eax,DWORD PTR [rip+0xfffffffffffe91ce]        # 0xfffe9c05
  00a37:    	cmp    DWORD PTR [rip+0x105f],eax        # 0x1a9c
  00a3d:    	jne    0x3458f
  00a43: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a4c:    	mov    QWORD PTR [rsp-0x38],rcx
  00a51:    	mov    rax,QWORD PTR [rbx]
  00a54:    	lea    rdi,[rsp-0x18]
  00a59:    	mov    QWORD PTR [rdi],rax
  00a5c:    	mov    QWORD PTR [rbx],rdi
  00a5f:    	mov    rax,QWORD PTR [rbp-0x38]
  00a63:    	mov    QWORD PTR [rsp-0x38],rax
  00a68: 00 	mov    rdi,0x1
  00a6f:    	mov    rax,QWORD PTR [rbp-0x60]
  00a73:    	mov    QWORD PTR [rsp-0x40],rax
  00a78: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a81: 00 	movabs rax,0x0
  00a8b:    	mov    QWORD PTR [rsp-0x28],rax
  00a90: 00 	movabs r13,0x0
  00a9a:    	call   0xfffe700c
  00a9f:    	lea    rdi,[rbp-0x8]
  00aa3:    	mov    QWORD PTR [rbx],rdi
  00aa6:    	movq   xmm2,QWORD PTR [rsp]
  00aab:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ab1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ab7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00abd:    	add    rsp,0x20
  00ac1:    	test   rax,rax
  00ac4:    	je     0x345fb
:00054 
:00056 %8 = const[Vec]                      [<INVALID>]
  00aca: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe913b]        # 0xfffe9c0c
  00ad1: 00 	cmp    rax,QWORD PTR [rip+0xfe4]        # 0x1abc
  00ad8:    	jne    0x3460a
  00ade: 00 	mov    rax,QWORD PTR [rip+0xfc7]        # 0x1aac
  00ae5:    	mov    QWORD PTR [rbp-0x68],rax
:00057 %10 = %1.call org()                  [<INVALID>]
  00ae9: 01 	sub    DWORD PTR [rip+0xfd4],0x1        # 0x1ac4
  00af0:    	je     0x346a2
  00af6:    	sub    rsp,0x20
  00afa:    	movq   QWORD PTR [rsp],xmm2
  00aff:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b05:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b0b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b11:    	mov    rdi,QWORD PTR [rbp-0x30]
  00b15: 34 	movabs rax,0x563437f53600
  00b1f:    	call   rax
  00b21:    	mov    r15d,eax
  00b24: 00 	cmp    r15d,DWORD PTR [rip+0xfa1]        # 0x1acc
  00b2b:    	jne    0x346c4
  00b31:    	mov    eax,DWORD PTR [rip+0xfffffffffffe90ce]        # 0xfffe9c05
  00b37:    	cmp    DWORD PTR [rip+0xf8b],eax        # 0x1ac8
  00b3d:    	jne    0x346c4
  00b43: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b4c:    	mov    QWORD PTR [rsp-0x38],rcx
  00b51:    	mov    rax,QWORD PTR [rbx]
  00b54:    	lea    rdi,[rsp-0x18]
  00b59:    	mov    QWORD PTR [rdi],rax
  00b5c:    	mov    QWORD PTR [rbx],rdi
  00b5f:    	mov    rax,QWORD PTR [rbp-0x30]
  00b63:    	mov    QWORD PTR [rsp-0x38],rax
  00b68: 00 	mov    rdi,0x0
  00b6f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b78: 00 	movabs rax,0x0
  00b82:    	mov    QWORD PTR [rsp-0x28],rax
  00b87: 00 	movabs r13,0x0
  00b91:    	call   0xfffe700c
  00b96:    	lea    rdi,[rbp-0x8]
  00b9a:    	mov    QWORD PTR [rbx],rdi
  00b9d:    	movq   xmm2,QWORD PTR [rsp]
  00ba2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ba8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00bae:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00bb4:    	add    rsp,0x20
  00bb8:    	test   rax,rax
  00bbb:    	je     0x34730
  00bc1:    	mov    QWORD PTR [rbp-0x78],rax
:00058 
:00060 %9 = %10.call x()                    [<INVALID>]
  00bc5: 01 	sub    DWORD PTR [rip+0xf04],0x1        # 0x1ad0
  00bcc:    	je     0x3475b
  00bd2:    	sub    rsp,0x20
  00bd6:    	movq   QWORD PTR [rsp],xmm2
  00bdb:    	movq   QWORD PTR [rsp+0x8],xmm4
  00be1:    	movq   QWORD PTR [rsp+0x10],xmm5
  00be7:    	movq   QWORD PTR [rsp+0x18],xmm6
  00bed:    	mov    rdi,QWORD PTR [rbp-0x78]
  00bf1: 34 	movabs rax,0x563437f53600
  00bfb:    	call   rax
  00bfd:    	mov    r15d,eax
  00c00: 00 	cmp    r15d,DWORD PTR [rip+0xed1]        # 0x1ad8
  00c07:    	jne    0x3477d
  00c0d:    	mov    eax,DWORD PTR [rip+0xfffffffffffe8ff2]        # 0xfffe9c05
  00c13:    	cmp    DWORD PTR [rip+0xebb],eax        # 0x1ad4
  00c19:    	jne    0x3477d
  00c1f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c28:    	mov    QWORD PTR [rsp-0x38],rcx
  00c2d:    	mov    rax,QWORD PTR [rbx]
  00c30:    	lea    rdi,[rsp-0x18]
  00c35:    	mov    QWORD PTR [rdi],rax
  00c38:    	mov    QWORD PTR [rbx],rdi
  00c3b:    	mov    rax,QWORD PTR [rbp-0x78]
  00c3f:    	mov    QWORD PTR [rsp-0x38],rax
  00c44: 00 	mov    rdi,0x0
  00c4b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c54: 00 	movabs rax,0x0
  00c5e:    	mov    QWORD PTR [rsp-0x28],rax
  00c63: 00 	movabs r13,0x0
  00c6d:    	call   0xfffe700c
  00c72:    	lea    rdi,[rbp-0x8]
  00c76:    	mov    QWORD PTR [rbx],rdi
  00c79:    	movq   xmm2,QWORD PTR [rsp]
  00c7e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c84:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c8a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c90:    	add    rsp,0x20
  00c94:    	test   rax,rax
  00c97:    	je     0x347e9
  00c9d:    	mov    QWORD PTR [rbp-0x70],rax
:00061 
:00063 %11 = %1.call dir()                  [<INVALID>]
  00ca1: 01 	sub    DWORD PTR [rip+0xe34],0x1        # 0x1adc
  00ca8:    	je     0x34814
  00cae:    	sub    rsp,0x20
  00cb2:    	movq   QWORD PTR [rsp],xmm2
  00cb7:    	movq   QWORD PTR [rsp+0x8],xmm4
  00cbd:    	movq   QWORD PTR [rsp+0x10],xmm5
  00cc3:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cc9:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ccd: 34 	movabs rax,0x563437f53600
  00cd7:    	call   rax
  00cd9:    	mov    r15d,eax
  00cdc: 00 	cmp    r15d,DWORD PTR [rip+0xe01]        # 0x1ae4
  00ce3:    	jne    0x34836
  00ce9:    	mov    eax,DWORD PTR [rip+0xfffffffffffe8f16]        # 0xfffe9c05
  00cef:    	cmp    DWORD PTR [rip+0xdeb],eax        # 0x1ae0
  00cf5:    	jne    0x34836
  00cfb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d04:    	mov    QWORD PTR [rsp-0x38],rcx
  00d09:    	mov    rax,QWORD PTR [rbx]
  00d0c:    	lea    rdi,[rsp-0x18]
  00d11:    	mov    QWORD PTR [rdi],rax
  00d14:    	mov    QWORD PTR [rbx],rdi
  00d17:    	mov    rax,QWORD PTR [rbp-0x30]
  00d1b:    	mov    QWORD PTR [rsp-0x38],rax
  00d20: 00 	mov    rdi,0x0
  00d27: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d30: 00 	movabs rax,0x0
  00d3a:    	mov    QWORD PTR [rsp-0x28],rax
  00d3f: 00 	movabs r13,0x0
  00d49:    	call   0xfffe700c
  00d4e:    	lea    rdi,[rbp-0x8]
  00d52:    	mov    QWORD PTR [rbx],rdi
  00d55:    	movq   xmm2,QWORD PTR [rsp]
  00d5a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d60:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d66:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d6c:    	add    rsp,0x20
  00d70:    	test   rax,rax
  00d73:    	je     0x348a2
  00d79:    	mov    QWORD PTR [rbp-0x80],rax
:00064 
:00066 %10 = %11.call x()                   [<INVALID>]
  00d7d: 01 	sub    DWORD PTR [rip+0xd64],0x1        # 0x1ae8
  00d84:    	je     0x348cd
  00d8a:    	sub    rsp,0x20
  00d8e:    	movq   QWORD PTR [rsp],xmm2
  00d93:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d99:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d9f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00da5:    	mov    rdi,QWORD PTR [rbp-0x80]
  00da9: 34 	movabs rax,0x563437f53600
  00db3:    	call   rax
  00db5:    	mov    r15d,eax
  00db8: 00 	cmp    r15d,DWORD PTR [rip+0xd31]        # 0x1af0
  00dbf:    	jne    0x348ef
  00dc5:    	mov    eax,DWORD PTR [rip+0xfffffffffffe8e3a]        # 0xfffe9c05
  00dcb:    	cmp    DWORD PTR [rip+0xd1b],eax        # 0x1aec
  00dd1:    	jne    0x348ef
  00dd7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00de0:    	mov    QWORD PTR [rsp-0x38],rcx
  00de5:    	mov    rax,QWORD PTR [rbx]
  00de8:    	lea    rdi,[rsp-0x18]
  00ded:    	mov    QWORD PTR [rdi],rax
  00df0:    	mov    QWORD PTR [rbx],rdi
  00df3:    	mov    rax,QWORD PTR [rbp-0x80]
  00df7:    	mov    QWORD PTR [rsp-0x38],rax
  00dfc: 00 	mov    rdi,0x0
  00e03: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e0c: 00 	movabs rax,0x0
  00e16:    	mov    QWORD PTR [rsp-0x28],rax
  00e1b: 00 	movabs r13,0x0
  00e25:    	call   0xfffe700c
  00e2a:    	lea    rdi,[rbp-0x8]
  00e2e:    	mov    QWORD PTR [rbx],rdi
  00e31:    	movq   xmm2,QWORD PTR [rsp]
  00e36:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e3c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e42:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e48:    	add    rsp,0x20
  00e4c:    	test   rax,rax
  00e4f:    	je     0x3495b
  00e55:    	mov    QWORD PTR [rbp-0x78],rax
:00067 
:00069 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00e59: 01 	sub    DWORD PTR [rip+0xc94],0x1        # 0x1af4
  00e60:    	je     0x34986
  00e66:    	mov    rdi,QWORD PTR [rbp-0x58]
  00e6a:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e6e:    	sub    rsp,0x20
  00e72:    	movq   QWORD PTR [rsp],xmm2
  00e77:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e7d:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e83:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e89:    	mov    rdx,rdi
  00e8c:    	mov    rcx,rsi
  00e8f:    	mov    rdi,rbx
  00e92:    	mov    rsi,r12
  00e95: 34 	movabs rax,0x563437f17b80
  00e9f:    	call   rax
  00ea1:    	movq   xmm2,QWORD PTR [rsp]
  00ea6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00eac:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00eb2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00eb8:    	add    rsp,0x20
  00ebc: 34 	movabs r13,0x5634398559b0
  00ec6:    	test   rax,rax
  00ec9:    	je     0xfffe7047
  00ecf:    	mov    QWORD PTR [rbp-0x78],rax
:00070 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00ed3: 01 	sub    DWORD PTR [rip+0xc1e],0x1        # 0x1af8
  00eda:    	je     0x349c4
  00ee0:    	mov    rdi,QWORD PTR [rbp-0x70]
  00ee4:    	mov    rsi,QWORD PTR [rbp-0x78]
  00ee8:    	sub    rsp,0x20
  00eec:    	movq   QWORD PTR [rsp],xmm2
  00ef1:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ef7:    	movq   QWORD PTR [rsp+0x10],xmm5
  00efd:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f03:    	mov    rdx,rdi
  00f06:    	mov    rcx,rsi
  00f09:    	mov    rdi,rbx
  00f0c:    	mov    rsi,r12
  00f0f: 34 	movabs rax,0x563437f15c00
  00f19:    	call   rax
  00f1b:    	movq   xmm2,QWORD PTR [rsp]
  00f20:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f26:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f2c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f32:    	add    rsp,0x20
  00f36: 34 	movabs r13,0x5634398559c0
  00f40:    	test   rax,rax
  00f43:    	je     0xfffe7047
  00f49:    	mov    QWORD PTR [rbp-0x70],rax
:00071 %11 = %1.call org()                  [<INVALID>]
  00f4d: 01 	sub    DWORD PTR [rip+0xba8],0x1        # 0x1afc
  00f54:    	je     0x34a02
  00f5a:    	sub    rsp,0x20
  00f5e:    	movq   QWORD PTR [rsp],xmm2
  00f63:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f69:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f6f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f75:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f79: 34 	movabs rax,0x563437f53600
  00f83:    	call   rax
  00f85:    	mov    r15d,eax
  00f88: 00 	cmp    r15d,DWORD PTR [rip+0xb75]        # 0x1b04
  00f8f:    	jne    0x34a24
  00f95:    	mov    eax,DWORD PTR [rip+0xfffffffffffe8c6a]        # 0xfffe9c05
  00f9b:    	cmp    DWORD PTR [rip+0xb5f],eax        # 0x1b00
  00fa1:    	jne    0x34a24
  00fa7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fb0:    	mov    QWORD PTR [rsp-0x38],rcx
  00fb5:    	mov    rax,QWORD PTR [rbx]
  00fb8:    	lea    rdi,[rsp-0x18]
  00fbd:    	mov    QWORD PTR [rdi],rax
  00fc0:    	mov    QWORD PTR [rbx],rdi
  00fc3:    	mov    rax,QWORD PTR [rbp-0x30]
  00fc7:    	mov    QWORD PTR [rsp-0x38],rax
  00fcc: 00 	mov    rdi,0x0
  00fd3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fdc: 00 	movabs rax,0x0
  00fe6:    	mov    QWORD PTR [rsp-0x28],rax
  00feb: 00 	movabs r13,0x0
  00ff5:    	call   0xfffe700c
  00ffa:    	lea    rdi,[rbp-0x8]
  00ffe:    	mov    QWORD PTR [rbx],rdi
  01001:    	movq   xmm2,QWORD PTR [rsp]
  01006:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0100c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01012:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01018:    	add    rsp,0x20
  0101c:    	test   rax,rax
  0101f:    	je     0x34a90
  01025:    	mov    QWORD PTR [rbp-0x80],rax
:00072 
:00074 %10 = %11.call y()                   [<INVALID>]
  01029: 01 	sub    DWORD PTR [rip+0xad8],0x1        # 0x1b08
  01030:    	je     0x34abb
  01036:    	sub    rsp,0x20
  0103a:    	movq   QWORD PTR [rsp],xmm2
  0103f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01045:    	movq   QWORD PTR [rsp+0x10],xmm5
  0104b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01051:    	mov    rdi,QWORD PTR [rbp-0x80]
  01055: 34 	movabs rax,0x563437f53600
  0105f:    	call   rax
  01061:    	mov    r15d,eax
  01064: 00 	cmp    r15d,DWORD PTR [rip+0xaa5]        # 0x1b10
  0106b:    	jne    0x34add
  01071:    	mov    eax,DWORD PTR [rip+0xfffffffffffe8b8e]        # 0xfffe9c05
  01077:    	cmp    DWORD PTR [rip+0xa8f],eax        # 0x1b0c
  0107d:    	jne    0x34add
  01083: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0108c:    	mov    QWORD PTR [rsp-0x38],rcx
  01091:    	mov    rax,QWORD PTR [rbx]
  01094:    	lea    rdi,[rsp-0x18]
  01099:    	mov    QWORD PTR [rdi],rax
  0109c:    	mov    QWORD PTR [rbx],rdi
  0109f:    	mov    rax,QWORD PTR [rbp-0x80]
  010a3:    	mov    QWORD PTR [rsp-0x38],rax
  010a8: 00 	mov    rdi,0x0
  010af: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010b8: 00 	movabs rax,0x0
  010c2:    	mov    QWORD PTR [rsp-0x28],rax
  010c7: 00 	movabs r13,0x0
  010d1:    	call   0xfffe700c
  010d6:    	lea    rdi,[rbp-0x8]
  010da:    	mov    QWORD PTR [rbx],rdi
  010dd:    	movq   xmm2,QWORD PTR [rsp]
  010e2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010e8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010ee:    	movq   xmm6,QWORD PTR [rsp+0x18]
  010f4:    	add    rsp,0x20
  010f8:    	test   rax,rax
  010fb:    	je     0x34b49
  01101:    	mov    QWORD PTR [rbp-0x78],rax
:00075 
:00077 %12 = %1.call dir()                  [<INVALID>]
  01105: 01 	sub    DWORD PTR [rip+0xa08],0x1        # 0x1b14
  0110c:    	je     0x34b74
  01112:    	sub    rsp,0x20
  01116:    	movq   QWORD PTR [rsp],xmm2
  0111b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01121:    	movq   QWORD PTR [rsp+0x10],xmm5
  01127:    	movq   QWORD PTR [rsp+0x18],xmm6
  0112d:    	mov    rdi,QWORD PTR [rbp-0x30]
  01131: 34 	movabs rax,0x563437f53600
  0113b:    	call   rax
  0113d:    	mov    r15d,eax
  01140: 00 	cmp    r15d,DWORD PTR [rip+0x9d5]        # 0x1b1c
  01147:    	jne    0x34b96
  0114d:    	mov    eax,DWORD PTR [rip+0xfffffffffffe8ab2]        # 0xfffe9c05
  01153:    	cmp    DWORD PTR [rip+0x9bf],eax        # 0x1b18
  01159:    	jne    0x34b96
  0115f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01168:    	mov    QWORD PTR [rsp-0x38],rcx
  0116d:    	mov    rax,QWORD PTR [rbx]
  01170:    	lea    rdi,[rsp-0x18]
  01175:    	mov    QWORD PTR [rdi],rax
  01178:    	mov    QWORD PTR [rbx],rdi
  0117b:    	mov    rax,QWORD PTR [rbp-0x30]
  0117f:    	mov    QWORD PTR [rsp-0x38],rax
  01184: 00 	mov    rdi,0x0
  0118b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01194: 00 	movabs rax,0x0
  0119e:    	mov    QWORD PTR [rsp-0x28],rax
  011a3: 00 	movabs r13,0x0
  011ad:    	call   0xfffe700c
  011b2:    	lea    rdi,[rbp-0x8]
  011b6:    	mov    QWORD PTR [rbx],rdi
  011b9:    	movq   xmm2,QWORD PTR [rsp]
  011be:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011c4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011ca:    	movq   xmm6,QWORD PTR [rsp+0x18]
  011d0:    	add    rsp,0x20
  011d4:    	test   rax,rax
  011d7:    	je     0x34c02
  011dd: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 
:00080 %11 = %12.call y()                   [<INVALID>]
  011e4: 01 	sub    DWORD PTR [rip+0x935],0x1        # 0x1b20
  011eb:    	je     0x34c2d
  011f1:    	sub    rsp,0x20
  011f5:    	movq   QWORD PTR [rsp],xmm2
  011fa:    	movq   QWORD PTR [rsp+0x8],xmm4
  01200:    	movq   QWORD PTR [rsp+0x10],xmm5
  01206:    	movq   QWORD PTR [rsp+0x18],xmm6
  0120c: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01213: 34 	movabs rax,0x563437f53600
  0121d:    	call   rax
  0121f:    	mov    r15d,eax
  01222: 00 	cmp    r15d,DWORD PTR [rip+0x8ff]        # 0x1b28
  01229:    	jne    0x34c4f
  0122f:    	mov    eax,DWORD PTR [rip+0xfffffffffffe89d0]        # 0xfffe9c05
  01235:    	cmp    DWORD PTR [rip+0x8e9],eax        # 0x1b24
  0123b:    	jne    0x34c4f
  01241: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0124a:    	mov    QWORD PTR [rsp-0x38],rcx
  0124f:    	mov    rax,QWORD PTR [rbx]
  01252:    	lea    rdi,[rsp-0x18]
  01257:    	mov    QWORD PTR [rdi],rax
  0125a:    	mov    QWORD PTR [rbx],rdi
  0125d: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01264:    	mov    QWORD PTR [rsp-0x38],rax
  01269: 00 	mov    rdi,0x0
  01270: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01279: 00 	movabs rax,0x0
  01283:    	mov    QWORD PTR [rsp-0x28],rax
  01288: 00 	movabs r13,0x0
  01292:    	call   0xfffe700c
  01297:    	lea    rdi,[rbp-0x8]
  0129b:    	mov    QWORD PTR [rbx],rdi
  0129e:    	movq   xmm2,QWORD PTR [rsp]
  012a3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012a9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012af:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012b5:    	add    rsp,0x20
  012b9:    	test   rax,rax
  012bc:    	je     0x34cbe
  012c2:    	mov    QWORD PTR [rbp-0x80],rax
:00081 
:00083 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  012c6: 01 	sub    DWORD PTR [rip+0x85f],0x1        # 0x1b2c
  012cd:    	je     0x34ce9
  012d3:    	mov    rdi,QWORD PTR [rbp-0x58]
  012d7:    	mov    rsi,QWORD PTR [rbp-0x80]
  012db:    	sub    rsp,0x20
  012df:    	movq   QWORD PTR [rsp],xmm2
  012e4:    	movq   QWORD PTR [rsp+0x8],xmm4
  012ea:    	movq   QWORD PTR [rsp+0x10],xmm5
  012f0:    	movq   QWORD PTR [rsp+0x18],xmm6
  012f6:    	mov    rdx,rdi
  012f9:    	mov    rcx,rsi
  012fc:    	mov    rdi,rbx
  012ff:    	mov    rsi,r12
  01302: 34 	movabs rax,0x563437f17b80
  0130c:    	call   rax
  0130e:    	movq   xmm2,QWORD PTR [rsp]
  01313:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01319:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0131f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01325:    	add    rsp,0x20
  01329: 34 	movabs r13,0x563439855a90
  01333:    	test   rax,rax
  01336:    	je     0xfffe7047
  0133c:    	mov    QWORD PTR [rbp-0x80],rax
:00084 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  01340: 01 	sub    DWORD PTR [rip+0x7e9],0x1        # 0x1b30
  01347:    	je     0x34d27
  0134d:    	mov    rdi,QWORD PTR [rbp-0x78]
  01351:    	mov    rsi,QWORD PTR [rbp-0x80]
  01355:    	sub    rsp,0x20
  01359:    	movq   QWORD PTR [rsp],xmm2
  0135e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01364:    	movq   QWORD PTR [rsp+0x10],xmm5
  0136a:    	movq   QWORD PTR [rsp+0x18],xmm6
  01370:    	mov    rdx,rdi
  01373:    	mov    rcx,rsi
  01376:    	mov    rdi,rbx
  01379:    	mov    rsi,r12
  0137c: 34 	movabs rax,0x563437f15c00
  01386:    	call   rax
  01388:    	movq   xmm2,QWORD PTR [rsp]
  0138d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01393:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01399:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0139f:    	add    rsp,0x20
  013a3: 34 	movabs r13,0x563439855aa0
  013ad:    	test   rax,rax
  013b0:    	je     0xfffe7047
  013b6:    	mov    QWORD PTR [rbp-0x78],rax
:00085 %12 = %1.call org()                  [<INVALID>]
  013ba: 01 	sub    DWORD PTR [rip+0x773],0x1        # 0x1b34
  013c1:    	je     0x34d65
  013c7:    	sub    rsp,0x20
  013cb:    	movq   QWORD PTR [rsp],xmm2
  013d0:    	movq   QWORD PTR [rsp+0x8],xmm4
  013d6:    	movq   QWORD PTR [rsp+0x10],xmm5
  013dc:    	movq   QWORD PTR [rsp+0x18],xmm6
  013e2:    	mov    rdi,QWORD PTR [rbp-0x30]
  013e6: 34 	movabs rax,0x563437f53600
  013f0:    	call   rax
  013f2:    	mov    r15d,eax
  013f5: 00 	cmp    r15d,DWORD PTR [rip+0x740]        # 0x1b3c
  013fc:    	jne    0x34d87
  01402:    	mov    eax,DWORD PTR [rip+0xfffffffffffe87fd]        # 0xfffe9c05
  01408:    	cmp    DWORD PTR [rip+0x72a],eax        # 0x1b38
  0140e:    	jne    0x34d87
  01414: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0141d:    	mov    QWORD PTR [rsp-0x38],rcx
  01422:    	mov    rax,QWORD PTR [rbx]
  01425:    	lea    rdi,[rsp-0x18]
  0142a:    	mov    QWORD PTR [rdi],rax
  0142d:    	mov    QWORD PTR [rbx],rdi
  01430:    	mov    rax,QWORD PTR [rbp-0x30]
  01434:    	mov    QWORD PTR [rsp-0x38],rax
  01439: 00 	mov    rdi,0x0
  01440: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01449: 00 	movabs rax,0x0
  01453:    	mov    QWORD PTR [rsp-0x28],rax
  01458: 00 	movabs r13,0x0
  01462:    	call   0xfffe700c
  01467:    	lea    rdi,[rbp-0x8]
  0146b:    	mov    QWORD PTR [rbx],rdi
  0146e:    	movq   xmm2,QWORD PTR [rsp]
  01473:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01479:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0147f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01485:    	add    rsp,0x20
  01489:    	test   rax,rax
  0148c:    	je     0x34df3
  01492: ff 	mov    QWORD PTR [rbp-0x88],rax
:00086 
:00088 %11 = %12.call z()                   [<INVALID>]
  01499: 01 	sub    DWORD PTR [rip+0x6a0],0x1        # 0x1b40
  014a0:    	je     0x34e1e
  014a6:    	sub    rsp,0x20
  014aa:    	movq   QWORD PTR [rsp],xmm2
  014af:    	movq   QWORD PTR [rsp+0x8],xmm4
  014b5:    	movq   QWORD PTR [rsp+0x10],xmm5
  014bb:    	movq   QWORD PTR [rsp+0x18],xmm6
  014c1: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  014c8: 34 	movabs rax,0x563437f53600
  014d2:    	call   rax
  014d4:    	mov    r15d,eax
  014d7: 00 	cmp    r15d,DWORD PTR [rip+0x66a]        # 0x1b48
  014de:    	jne    0x34e40
  014e4:    	mov    eax,DWORD PTR [rip+0xfffffffffffe871b]        # 0xfffe9c05
  014ea:    	cmp    DWORD PTR [rip+0x654],eax        # 0x1b44
  014f0:    	jne    0x34e40
  014f6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014ff:    	mov    QWORD PTR [rsp-0x38],rcx
  01504:    	mov    rax,QWORD PTR [rbx]
  01507:    	lea    rdi,[rsp-0x18]
  0150c:    	mov    QWORD PTR [rdi],rax
  0150f:    	mov    QWORD PTR [rbx],rdi
  01512: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01519:    	mov    QWORD PTR [rsp-0x38],rax
  0151e: 00 	mov    rdi,0x0
  01525: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0152e: 00 	movabs rax,0x0
  01538:    	mov    QWORD PTR [rsp-0x28],rax
  0153d: 00 	movabs r13,0x0
  01547:    	call   0xfffe700c
  0154c:    	lea    rdi,[rbp-0x8]
  01550:    	mov    QWORD PTR [rbx],rdi
  01553:    	movq   xmm2,QWORD PTR [rsp]
  01558:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0155e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01564:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0156a:    	add    rsp,0x20
  0156e:    	test   rax,rax
  01571:    	je     0x34eaf
  01577:    	mov    QWORD PTR [rbp-0x80],rax
:00089 
:00091 %13 = %1.call dir()                  [<INVALID>]
  0157b: 01 	sub    DWORD PTR [rip+0x5ca],0x1        # 0x1b4c
  01582:    	je     0x34eda
  01588:    	sub    rsp,0x20
  0158c:    	movq   QWORD PTR [rsp],xmm2
  01591:    	movq   QWORD PTR [rsp+0x8],xmm4
  01597:    	movq   QWORD PTR [rsp+0x10],xmm5
  0159d:    	movq   QWORD PTR [rsp+0x18],xmm6
  015a3:    	mov    rdi,QWORD PTR [rbp-0x30]
  015a7: 34 	movabs rax,0x563437f53600
  015b1:    	call   rax
  015b3:    	mov    r15d,eax
  015b6: 00 	cmp    r15d,DWORD PTR [rip+0x597]        # 0x1b54
  015bd:    	jne    0x34efc
  015c3:    	mov    eax,DWORD PTR [rip+0xfffffffffffe863c]        # 0xfffe9c05
  015c9:    	cmp    DWORD PTR [rip+0x581],eax        # 0x1b50
  015cf:    	jne    0x34efc
  015d5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015de:    	mov    QWORD PTR [rsp-0x38],rcx
  015e3:    	mov    rax,QWORD PTR [rbx]
  015e6:    	lea    rdi,[rsp-0x18]
  015eb:    	mov    QWORD PTR [rdi],rax
  015ee:    	mov    QWORD PTR [rbx],rdi
  015f1:    	mov    rax,QWORD PTR [rbp-0x30]
  015f5:    	mov    QWORD PTR [rsp-0x38],rax
  015fa: 00 	mov    rdi,0x0
  01601: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0160a: 00 	movabs rax,0x0
  01614:    	mov    QWORD PTR [rsp-0x28],rax
  01619: 00 	movabs r13,0x0
  01623:    	call   0xfffe700c
  01628:    	lea    rdi,[rbp-0x8]
  0162c:    	mov    QWORD PTR [rbx],rdi
  0162f:    	movq   xmm2,QWORD PTR [rsp]
  01634:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0163a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01640:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01646:    	add    rsp,0x20
  0164a:    	test   rax,rax
  0164d:    	je     0x34f68
  01653: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 
:00094 %12 = %13.call z()                   [<INVALID>]
  0165a: 01 	sub    DWORD PTR [rip+0x4f7],0x1        # 0x1b58
  01661:    	je     0x34f93
  01667:    	sub    rsp,0x20
  0166b:    	movq   QWORD PTR [rsp],xmm2
  01670:    	movq   QWORD PTR [rsp+0x8],xmm4
  01676:    	movq   QWORD PTR [rsp+0x10],xmm5
  0167c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01682: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01689: 34 	movabs rax,0x563437f53600
  01693:    	call   rax
  01695:    	mov    r15d,eax
  01698: 00 	cmp    r15d,DWORD PTR [rip+0x4c1]        # 0x1b60
  0169f:    	jne    0x34fb5
  016a5:    	mov    eax,DWORD PTR [rip+0xfffffffffffe855a]        # 0xfffe9c05
  016ab:    	cmp    DWORD PTR [rip+0x4ab],eax        # 0x1b5c
  016b1:    	jne    0x34fb5
  016b7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016c0:    	mov    QWORD PTR [rsp-0x38],rcx
  016c5:    	mov    rax,QWORD PTR [rbx]
  016c8:    	lea    rdi,[rsp-0x18]
  016cd:    	mov    QWORD PTR [rdi],rax
  016d0:    	mov    QWORD PTR [rbx],rdi
  016d3: ff 	mov    rax,QWORD PTR [rbp-0x90]
  016da:    	mov    QWORD PTR [rsp-0x38],rax
  016df: 00 	mov    rdi,0x0
  016e6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016ef: 00 	movabs rax,0x0
  016f9:    	mov    QWORD PTR [rsp-0x28],rax
  016fe: 00 	movabs r13,0x0
  01708:    	call   0xfffe700c
  0170d:    	lea    rdi,[rbp-0x8]
  01711:    	mov    QWORD PTR [rbx],rdi
  01714:    	movq   xmm2,QWORD PTR [rsp]
  01719:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0171f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01725:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0172b:    	add    rsp,0x20
  0172f:    	test   rax,rax
  01732:    	je     0x35024
  01738: ff 	mov    QWORD PTR [rbp-0x88],rax
:00095 
:00097 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  0173f: 01 	sub    DWORD PTR [rip+0x41e],0x1        # 0x1b64
  01746:    	je     0x3504f
  0174c:    	mov    rdi,QWORD PTR [rbp-0x58]
  01750: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  01757:    	sub    rsp,0x20
  0175b:    	movq   QWORD PTR [rsp],xmm2
  01760:    	movq   QWORD PTR [rsp+0x8],xmm4
  01766:    	movq   QWORD PTR [rsp+0x10],xmm5
  0176c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01772:    	mov    rdx,rdi
  01775:    	mov    rcx,rsi
  01778:    	mov    rdi,rbx
  0177b:    	mov    rsi,r12
  0177e: 34 	movabs rax,0x563437f17b80
  01788:    	call   rax
  0178a:    	movq   xmm2,QWORD PTR [rsp]
  0178f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01795:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0179b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  017a1:    	add    rsp,0x20
  017a5: 34 	movabs r13,0x563439855b70
  017af:    	test   rax,rax
  017b2:    	je     0xfffe7047
  017b8: ff 	mov    QWORD PTR [rbp-0x88],rax
:00098 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  017bf: 01 	sub    DWORD PTR [rip+0x3a2],0x1        # 0x1b68
  017c6:    	je     0x3508d
  017cc:    	mov    rdi,QWORD PTR [rbp-0x80]
  017d0: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  017d7:    	sub    rsp,0x20
  017db:    	movq   QWORD PTR [rsp],xmm2
  017e0:    	movq   QWORD PTR [rsp+0x8],xmm4
  017e6:    	movq   QWORD PTR [rsp+0x10],xmm5
  017ec:    	movq   QWORD PTR [rsp+0x18],xmm6
  017f2:    	mov    rdx,rdi
  017f5:    	mov    rcx,rsi
  017f8:    	mov    rdi,rbx
  017fb:    	mov    rsi,r12
  017fe: 34 	movabs rax,0x563437f15c00
  01808:    	call   rax
  0180a:    	movq   xmm2,QWORD PTR [rsp]
  0180f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01815:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0181b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01821:    	add    rsp,0x20
  01825: 34 	movabs r13,0x563439855b80
  0182f:    	test   rax,rax
  01832:    	je     0xfffe7047
  01838:    	mov    QWORD PTR [rbp-0x80],rax
:00099 %7 = %8.call new(%9; 3)              [<INVALID>]
  0183c: 01 	sub    DWORD PTR [rip+0x329],0x1        # 0x1b6c
  01843:    	je     0x350cb
  01849:    	sub    rsp,0x20
  0184d:    	movq   QWORD PTR [rsp],xmm2
  01852:    	movq   QWORD PTR [rsp+0x8],xmm4
  01858:    	movq   QWORD PTR [rsp+0x10],xmm5
  0185e:    	movq   QWORD PTR [rsp+0x18],xmm6
  01864:    	mov    rdi,QWORD PTR [rbp-0x68]
  01868: 34 	movabs rax,0x563437f53600
  01872:    	call   rax
  01874:    	mov    r15d,eax
  01877: 00 	cmp    r15d,DWORD PTR [rip+0x2f6]        # 0x1b74
  0187e:    	jne    0x350ed
  01884:    	mov    eax,DWORD PTR [rip+0xfffffffffffe837b]        # 0xfffe9c05
  0188a:    	cmp    DWORD PTR [rip+0x2e0],eax        # 0x1b70
  01890:    	jne    0x350ed
  01896: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0189f:    	mov    QWORD PTR [rsp-0x38],rcx
  018a4:    	mov    rax,QWORD PTR [rbx]
  018a7:    	lea    rdi,[rsp-0x18]
  018ac:    	mov    QWORD PTR [rdi],rax
  018af:    	mov    QWORD PTR [rbx],rdi
  018b2:    	mov    rax,QWORD PTR [rbp-0x68]
  018b6:    	mov    QWORD PTR [rsp-0x38],rax
  018bb: 00 	mov    rdi,0x3
  018c2:    	mov    rax,QWORD PTR [rbp-0x70]
  018c6:    	mov    QWORD PTR [rsp-0x40],rax
  018cb:    	mov    rax,QWORD PTR [rbp-0x78]
  018cf:    	mov    QWORD PTR [rsp-0x48],rax
  018d4:    	mov    rax,QWORD PTR [rbp-0x80]
  018d8:    	mov    QWORD PTR [rsp-0x50],rax
  018dd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  018e6: 00 	movabs rax,0x0
  018f0:    	mov    QWORD PTR [rsp-0x28],rax
  018f5: 00 	movabs r13,0x0
  018ff:    	call   0xfffe700c
  01904:    	lea    rdi,[rbp-0x8]
  01908:    	mov    QWORD PTR [rbx],rdi
  0190b:    	movq   xmm2,QWORD PTR [rsp]
  01910:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01916:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0191c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01922:    	add    rsp,0x20
  01926:    	test   rax,rax
  01929:    	je     0x35159
  0192f:    	mov    QWORD PTR [rbp-0x60],rax
:00100 
:00102 _ = %2.call pl=(%7; 1)               [<INVALID>]
  01933: 01 	sub    DWORD PTR [rip+0x23e],0x1        # 0x1b78
  0193a:    	je     0x35184
  01940:    	sub    rsp,0x20
  01944:    	movq   QWORD PTR [rsp],xmm2
  01949:    	movq   QWORD PTR [rsp+0x8],xmm4
  0194f:    	movq   QWORD PTR [rsp+0x10],xmm5
  01955:    	movq   QWORD PTR [rsp+0x18],xmm6
  0195b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0195f: 34 	movabs rax,0x563437f53600
  01969:    	call   rax
  0196b:    	mov    r15d,eax
  0196e: 00 	cmp    r15d,DWORD PTR [rip+0x20b]        # 0x1b80
  01975:    	jne    0x351a6
  0197b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe8284]        # 0xfffe9c05
  01981:    	cmp    DWORD PTR [rip+0x1f5],eax        # 0x1b7c
  01987:    	jne    0x351a6
  0198d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01996:    	mov    QWORD PTR [rsp-0x38],rcx
  0199b:    	mov    rax,QWORD PTR [rbx]
  0199e:    	lea    rdi,[rsp-0x18]
  019a3:    	mov    QWORD PTR [rdi],rax
  019a6:    	mov    QWORD PTR [rbx],rdi
  019a9:    	mov    rax,QWORD PTR [rbp-0x38]
  019ad:    	mov    QWORD PTR [rsp-0x38],rax
  019b2: 00 	mov    rdi,0x1
  019b9:    	mov    rax,QWORD PTR [rbp-0x60]
  019bd:    	mov    QWORD PTR [rsp-0x40],rax
  019c2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019cb: 00 	movabs rax,0x0
  019d5:    	mov    QWORD PTR [rsp-0x28],rax
  019da: 00 	movabs r13,0x0
  019e4:    	call   0xfffe700c
  019e9:    	lea    rdi,[rbp-0x8]
  019ed:    	mov    QWORD PTR [rbx],rdi
  019f0:    	movq   xmm2,QWORD PTR [rsp]
  019f5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019fb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a01:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01a07:    	add    rsp,0x20
  01a0b:    	test   rax,rax
  01a0e:    	je     0x35212
:00103 
:00105 br =>:00106
  01a14:    	jmp    0x3527a
:00106 %7 = nil
  01a19: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00107 ret %7
  01a21:    	mov    rax,QWORD PTR [rbp-0x60]
  01a25:    	leave  
  01a26:    	ret    
==> start whole compile: intersect FuncId(70) self_class:Sphere start:[00000] bytecode:0x5634398536b0
<== finished compile. elapsed:153.8µs
offset:Pos(109432) code: 7265 bytes  data: 399 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x3371c
  00022:    	jmp    0x3371c
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086: ff 	mov    QWORD PTR [rbp-0x98],rax
  0008d: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00094:    	mov    rdi,QWORD PTR [rbp-0x28]
  00098: 00 	test   rdi,0x7
  0009f:    	jne    0x3372b
  000a5:    	cmp    DWORD PTR [rdi+0x4],0x2a
  000a9:    	jne    0x3372b
:00000 init_method reg:16 arg:2 pos:2 req:2 stack_offset:11
:00001 %9 = %1.call org()                   [Ray]
  000af:    	mov    rdi,QWORD PTR [rbp-0x30]
  000b3: 00 	test   rdi,0x7
  000ba:    	jne    0x3373a
  000c0:    	cmp    DWORD PTR [rdi+0x4],0x2e
  000c4:    	jne    0x3373a
  000ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7fb0],0x26        # 0xfffe8081
  000d1:    	jne    0x3373a
  000d7:    	mov    esi,DWORD PTR [rip+0x1b88]        # 0x1c65
  000dd:    	cmp    esi,0xffffffff
  000e0:    	je     0x33749
  000e6:    	cmp    WORD PTR [rdi+0x2],0x3
  000eb:    	jne    0x104
  000f1:    	cmp    esi,0x6
  000f4:    	jge    0x104
  000fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000ff:    	jmp    0x110
  00104: 34 	movabs rax,0x563437ed0590
  0010e:    	call   rax
  00110:    	mov    QWORD PTR [rbp-0x70],rax
:00002 
:00004 %10 = @center: Sphere[IvarId(0)]
  00114:    	mov    rdi,QWORD PTR [rbp-0x28]
  00118:    	mov    rax,QWORD PTR [rdi+0x10]
  0011c:    	mov    QWORD PTR [rbp-0x78],rax
:00005 %3 = %9.call vsub(%10; 1)            [Vec]
  00120:    	mov    rdi,QWORD PTR [rbp-0x70]
  00124: 00 	test   rdi,0x7
  0012b:    	jne    0x33772
  00131:    	cmp    DWORD PTR [rdi+0x4],0x28
  00135:    	jne    0x33772
  0013b: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7f3f],0x26        # 0xfffe8081
  00142:    	jne    0x33772
  00148: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00151:    	mov    QWORD PTR [rsp-0x38],rcx
  00156:    	mov    rax,QWORD PTR [rbx]
  00159:    	lea    rdi,[rsp-0x18]
  0015e:    	mov    QWORD PTR [rdi],rax
  00161:    	mov    QWORD PTR [rbx],rdi
  00164:    	mov    rax,QWORD PTR [rbp-0x70]
  00168:    	mov    QWORD PTR [rsp-0x38],rax
  0016d: 00 	mov    rdi,0x1
  00174:    	mov    rax,QWORD PTR [rbp-0x78]
  00178:    	mov    QWORD PTR [rsp-0x40],rax
  0017d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00186: 08 	movabs rax,0x800000040
  00190:    	mov    QWORD PTR [rsp-0x28],rax
  00195: 34 	movabs r13,0x563439872ba0
  0019f:    	call   0xfffe8d54
  001a4:    	lea    rdi,[rbp-0x8]
  001a8:    	mov    QWORD PTR [rbx],rdi
  001ab: 34 	movabs r13,0x563439853720
  001b5:    	test   rax,rax
  001b8:    	je     0xfffe54c3
  001be:    	mov    QWORD PTR [rbp-0x40],rax
:00006 
:00008 %9 = %1.call dir()                   [Ray]
  001c2:    	mov    rdi,QWORD PTR [rbp-0x30]
  001c6: 00 	test   rdi,0x7
  001cd:    	jne    0x33781
  001d3:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001d7:    	jne    0x33781
  001dd: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7e9d],0x26        # 0xfffe8081
  001e4:    	jne    0x33781
  001ea:    	mov    esi,DWORD PTR [rip+0x1a7d]        # 0x1c6d
  001f0:    	cmp    esi,0xffffffff
  001f3:    	je     0x33790
  001f9:    	cmp    WORD PTR [rdi+0x2],0x3
  001fe:    	jne    0x217
  00204:    	cmp    esi,0x6
  00207:    	jge    0x217
  0020d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00212:    	jmp    0x223
  00217: 34 	movabs rax,0x563437ed0590
  00221:    	call   rax
  00223:    	mov    QWORD PTR [rbp-0x70],rax
:00009 
:00011 %4 = %3.call vdot(%9; 1)             [Vec]
  00227:    	mov    rdi,QWORD PTR [rbp-0x40]
  0022b: 00 	test   rdi,0x7
  00232:    	jne    0x337b9
  00238:    	cmp    DWORD PTR [rdi+0x4],0x28
  0023c:    	jne    0x337b9
  00242: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7e38],0x26        # 0xfffe8081
  00249:    	jne    0x337b9
  0024f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00258:    	mov    QWORD PTR [rsp-0x38],rcx
  0025d:    	mov    rax,QWORD PTR [rbx]
  00260:    	lea    rdi,[rsp-0x18]
  00265:    	mov    QWORD PTR [rdi],rax
  00268:    	mov    QWORD PTR [rbx],rdi
  0026b:    	mov    rax,QWORD PTR [rbp-0x40]
  0026f:    	mov    QWORD PTR [rsp-0x38],rax
  00274: 00 	mov    rdi,0x1
  0027b:    	mov    rax,QWORD PTR [rbp-0x70]
  0027f:    	mov    QWORD PTR [rsp-0x40],rax
  00284: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0028d: 05 	movabs rax,0x500000042
  00297:    	mov    QWORD PTR [rsp-0x28],rax
  0029c: 34 	movabs r13,0x563439877e20
  002a6:    	call   0xfffe8de6
  002ab:    	lea    rdi,[rbp-0x8]
  002af:    	mov    QWORD PTR [rbx],rdi
  002b2: 34 	movabs r13,0x563439853780
  002bc:    	test   rax,rax
  002bf:    	je     0xfffe54c3
  002c5:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %10 = %3
  002c9:    	mov    rax,QWORD PTR [rbp-0x40]
  002cd:    	mov    QWORD PTR [rbp-0x78],rax
:00015 %9 = %3.call vdot(%10; 1)            [Vec]
  002d1:    	mov    rdi,QWORD PTR [rbp-0x40]
  002d5: 00 	test   rdi,0x7
  002dc:    	jne    0x337c8
  002e2:    	cmp    DWORD PTR [rdi+0x4],0x28
  002e6:    	jne    0x337c8
  002ec: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7d8e],0x26        # 0xfffe8081
  002f3:    	jne    0x337c8
  002f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00302:    	mov    QWORD PTR [rsp-0x38],rcx
  00307:    	mov    rax,QWORD PTR [rbx]
  0030a:    	lea    rdi,[rsp-0x18]
  0030f:    	mov    QWORD PTR [rdi],rax
  00312:    	mov    QWORD PTR [rbx],rdi
  00315:    	mov    rax,QWORD PTR [rbp-0x40]
  00319:    	mov    QWORD PTR [rsp-0x38],rax
  0031e: 00 	mov    rdi,0x1
  00325:    	mov    rax,QWORD PTR [rbp-0x78]
  00329:    	mov    QWORD PTR [rsp-0x40],rax
  0032e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00337: 05 	movabs rax,0x500000042
  00341:    	mov    QWORD PTR [rsp-0x28],rax
  00346: 34 	movabs r13,0x563439877e20
  00350:    	call   0xfffe8de6
  00355:    	lea    rdi,[rbp-0x8]
  00359:    	mov    QWORD PTR [rbx],rdi
  0035c: 34 	movabs r13,0x5634398537c0
  00366:    	test   rax,rax
  00369:    	je     0xfffe54c3
  0036f:    	mov    QWORD PTR [rbp-0x70],rax
:00016 
:00018 %10 = @radius: Sphere[IvarId(1)]
  00373:    	mov    rdi,QWORD PTR [rbp-0x28]
  00377:    	mov    rax,QWORD PTR [rdi+0x18]
  0037b:    	mov    QWORD PTR [rbp-0x78],rax
:00019 %11 = @radius: Sphere[IvarId(1)]
  0037f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00383:    	mov    rax,QWORD PTR [rdi+0x18]
  00387:    	mov    QWORD PTR [rbp-0x80],rax
:00020 %10 = %10 * %11                      [Float][Float]
  0038b:    	mov    rdi,QWORD PTR [rbp-0x78]
  0038f: 00 	test   rdi,0x1
  00396:    	jne    0x337d7
  0039c: 00 	test   rdi,0x2
  003a3:    	je     0x3df
  003a9:    	xorps  xmm2,xmm2
  003ac: 00 	movabs rax,0x8000000000000002
  003b6:    	cmp    rdi,rax
  003b9:    	je     0x3f1
  003bf:    	mov    rax,rdi
  003c2:    	sar    rax,0x3f
  003c6:    	add    rax,0x2
  003ca:    	and    rdi,0xfffffffffffffffc
  003ce:    	or     rdi,rax
  003d1:    	rol    rdi,0x3d
  003d5:    	movq   xmm2,rdi
  003da:    	jmp    0x3f1
  003df:    	call   0xfffe551c
  003e4:    	test   rax,rax
  003e7:    	je     0x337d7
  003ed:    	movq   xmm2,xmm0
  003f1:    	mov    rdi,QWORD PTR [rbp-0x80]
  003f5: 00 	test   rdi,0x1
  003fc:    	jne    0x337e6
  00402: 00 	test   rdi,0x2
  00409:    	je     0x445
  0040f:    	xorps  xmm3,xmm3
  00412: 00 	movabs rax,0x8000000000000002
  0041c:    	cmp    rdi,rax
  0041f:    	je     0x457
  00425:    	mov    rax,rdi
  00428:    	sar    rax,0x3f
  0042c:    	add    rax,0x2
  00430:    	and    rdi,0xfffffffffffffffc
  00434:    	or     rdi,rax
  00437:    	rol    rdi,0x3d
  0043b:    	movq   xmm3,rdi
  00440:    	jmp    0x457
  00445:    	call   0xfffe551c
  0044a:    	test   rax,rax
  0044d:    	je     0x337e6
  00453:    	movq   xmm3,xmm0
  00457:    	mulsd  xmm2,xmm3
:00021 %5 = %9 - %10                        [Float][Float]
  0045b:    	mov    rdi,QWORD PTR [rbp-0x70]
  0045f: 00 	test   rdi,0x1
  00466:    	jne    0x337f5
  0046c: 00 	test   rdi,0x2
  00473:    	je     0x4af
  00479:    	xorps  xmm4,xmm4
  0047c: 00 	movabs rax,0x8000000000000002
  00486:    	cmp    rdi,rax
  00489:    	je     0x4c1
  0048f:    	mov    rax,rdi
  00492:    	sar    rax,0x3f
  00496:    	add    rax,0x2
  0049a:    	and    rdi,0xfffffffffffffffc
  0049e:    	or     rdi,rax
  004a1:    	rol    rdi,0x3d
  004a5:    	movq   xmm4,rdi
  004aa:    	jmp    0x4c1
  004af:    	call   0xfffe551c
  004b4:    	test   rax,rax
  004b7:    	je     0x337f5
  004bd:    	movq   xmm4,xmm0
  004c1:    	movq   xmm5,xmm4
  004c5:    	subsd  xmm5,xmm2
:00022 %9 = %4 * %4                         [Float][Float]
  004c9:    	mov    rdi,QWORD PTR [rbp-0x48]
  004cd: 00 	test   rdi,0x1
  004d4:    	jne    0x33811
  004da: 00 	test   rdi,0x2
  004e1:    	je     0x51d
  004e7:    	xorps  xmm6,xmm6
  004ea: 00 	movabs rax,0x8000000000000002
  004f4:    	cmp    rdi,rax
  004f7:    	je     0x52f
  004fd:    	mov    rax,rdi
  00500:    	sar    rax,0x3f
  00504:    	add    rax,0x2
  00508:    	and    rdi,0xfffffffffffffffc
  0050c:    	or     rdi,rax
  0050f:    	rol    rdi,0x3d
  00513:    	movq   xmm6,rdi
  00518:    	jmp    0x52f
  0051d:    	call   0xfffe551c
  00522:    	test   rax,rax
  00525:    	je     0x33811
  0052b:    	movq   xmm6,xmm0
  0052f:    	movq   xmm4,xmm6
  00533:    	mulsd  xmm4,xmm6
:00023 %6 = %9 - %5                         [Float][Float]
  00537:    	movq   xmm7,xmm4
  0053b:    	subsd  xmm7,xmm5
:00024 %9 = literal[0.0]
  0053f: 00 	movq   xmm4,QWORD PTR [rip+0x1731]        # 0x1c78
  00547: 00 	movabs rax,0x8000000000000002
  00551:    	mov    QWORD PTR [rbp-0x70],rax
:00025 _%9 = %6 > %9                        [Float][Float]
:00026 condnotbr _%9 =>:00114
  00555:    	ucomisd xmm7,xmm4
  00559:    	jbe    0x34d7e
:00027 %9 = %4
:00028 %9 = neg %9                          [Float]
  0055f:    	movq   xmm4,xmm6
  00563: 00 	xorps  xmm4,XMMWORD PTR [rip+0x171e]        # 0x1c88
:00029 %11 = const[Math]                    [Math]
  0056a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe7b17]        # 0xfffe8088
  00571: 00 	cmp    rax,QWORD PTR [rip+0x1730]        # 0x1ca8
  00578:    	jne    0x3383a
  0057e: 00 	mov    rax,QWORD PTR [rip+0x1713]        # 0x1c98
  00585:    	mov    QWORD PTR [rbp-0x80],rax
:00030 %12 = %6
:00031 %10 = %11.call sqrt(%12; 1)          [#<Class:Math>]
  00589:    	mov    rdi,QWORD PTR [rbp-0x80]
  0058d: 00 	test   rdi,0x7
  00594:    	jne    0x338c2
  0059a:    	cmp    DWORD PTR [rdi+0x4],0x21
  0059e:    	jne    0x338c2
  005a4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7ad6],0x26        # 0xfffe8081
  005ab:    	jne    0x338c2
  005b1:    	sqrtsd xmm2,xmm7
:00032 
:00034 %7 = %9 - %10                        [Float][Float]
  005b5:    	movq   xmm3,xmm4
  005b9:    	subsd  xmm3,xmm2
:00035 %9 = literal[0.0]
  005bd: 00 	movq   xmm4,QWORD PTR [rip+0x16f3]        # 0x1cb8
  005c5: 00 	movabs rax,0x8000000000000002
  005cf:    	mov    QWORD PTR [rbp-0x70],rax
:00036 _%9 = %7 > %9                        [Float][Float]
:00037 condnotbr _%9 =>:00113
  005d3:    	ucomisd xmm3,xmm4
  005d7:    	jbe    0x34c3e
:00038 %9 = %2.call t()                     [<INVALID>]
  005dd: 01 	sub    DWORD PTR [rip+0x16dc],0x1        # 0x1cc0
  005e4:    	je     0x33949
  005ea:    	sub    rsp,0x30
  005ee:    	movq   QWORD PTR [rsp],xmm2
  005f3:    	movq   QWORD PTR [rsp+0x8],xmm3
  005f9:    	movq   QWORD PTR [rsp+0x10],xmm5
  005ff:    	movq   QWORD PTR [rsp+0x18],xmm6
  00605:    	movq   QWORD PTR [rsp+0x20],xmm7
  0060b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0060f: 34 	movabs rax,0x563437f53600
  00619:    	call   rax
  0061b:    	mov    r15d,eax
  0061e: 00 	cmp    r15d,DWORD PTR [rip+0x16a3]        # 0x1cc8
  00625:    	jne    0x3396b
  0062b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7a50]        # 0xfffe8081
  00631:    	cmp    DWORD PTR [rip+0x168d],eax        # 0x1cc4
  00637:    	jne    0x3396b
  0063d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00646:    	mov    QWORD PTR [rsp-0x38],rcx
  0064b:    	mov    rax,QWORD PTR [rbx]
  0064e:    	lea    rdi,[rsp-0x18]
  00653:    	mov    QWORD PTR [rdi],rax
  00656:    	mov    QWORD PTR [rbx],rdi
  00659:    	mov    rax,QWORD PTR [rbp-0x38]
  0065d:    	mov    QWORD PTR [rsp-0x38],rax
  00662: 00 	mov    rdi,0x0
  00669: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00672: 00 	movabs rax,0x0
  0067c:    	mov    QWORD PTR [rsp-0x28],rax
  00681: 00 	movabs r13,0x0
  0068b:    	call   0xfffe5488
  00690:    	lea    rdi,[rbp-0x8]
  00694:    	mov    QWORD PTR [rbx],rdi
  00697:    	movq   xmm2,QWORD PTR [rsp]
  0069c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006a2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006a8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006ae:    	movq   xmm7,QWORD PTR [rsp+0x20]
  006b4:    	add    rsp,0x30
  006b8:    	test   rax,rax
  006bb:    	je     0x339d7
  006c1:    	mov    QWORD PTR [rbp-0x70],rax
:00039 
:00041 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00042 condnotbr _%9 =>:00113
  006c5:    	movq   xmm0,xmm3
  006c9:    	call   0xfffe560f
  006ce:    	mov    QWORD PTR [rbp-0x60],rax
  006d2:    	mov    rdi,QWORD PTR [rbp-0x60]
  006d6:    	mov    rsi,QWORD PTR [rbp-0x70]
  006da: 00 	test   rdi,0x1
  006e1:    	je     0x339e6
  006e7: 00 	test   rsi,0x1
  006ee:    	je     0x339e6
  006f4:    	cmp    rdi,rsi
  006f7:    	jge    0x34ccb
:00043 _ = %2.call t=(%7; 1)                [<INVALID>]
  006fd: 01 	sub    DWORD PTR [rip+0x15c8],0x1        # 0x1ccc
  00704:    	je     0x33a84
  0070a:    	sub    rsp,0x30
  0070e:    	movq   QWORD PTR [rsp],xmm2
  00713:    	movq   QWORD PTR [rsp+0x8],xmm3
  00719:    	movq   QWORD PTR [rsp+0x10],xmm5
  0071f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00725:    	movq   QWORD PTR [rsp+0x20],xmm7
  0072b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0072f: 34 	movabs rax,0x563437f53600
  00739:    	call   rax
  0073b:    	mov    r15d,eax
  0073e: 00 	cmp    r15d,DWORD PTR [rip+0x158f]        # 0x1cd4
  00745:    	jne    0x33aa6
  0074b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7930]        # 0xfffe8081
  00751:    	cmp    DWORD PTR [rip+0x1579],eax        # 0x1cd0
  00757:    	jne    0x33aa6
  0075d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00766:    	mov    QWORD PTR [rsp-0x38],rcx
  0076b:    	mov    rax,QWORD PTR [rbx]
  0076e:    	lea    rdi,[rsp-0x18]
  00773:    	mov    QWORD PTR [rdi],rax
  00776:    	mov    QWORD PTR [rbx],rdi
  00779:    	mov    rax,QWORD PTR [rbp-0x38]
  0077d:    	mov    QWORD PTR [rsp-0x38],rax
  00782: 00 	mov    rdi,0x1
  00789:    	mov    rax,QWORD PTR [rbp-0x60]
  0078d:    	mov    QWORD PTR [rsp-0x40],rax
  00792: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0079b: 00 	movabs rax,0x0
  007a5:    	mov    QWORD PTR [rsp-0x28],rax
  007aa: 00 	movabs r13,0x0
  007b4:    	call   0xfffe5488
  007b9:    	lea    rdi,[rbp-0x8]
  007bd:    	mov    QWORD PTR [rbx],rdi
  007c0:    	movq   xmm2,QWORD PTR [rsp]
  007c5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007cb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007d1:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007d7:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007dd:    	add    rsp,0x30
  007e1:    	test   rax,rax
  007e4:    	je     0x33b12
:00044 
:00046 %9 = literal[true]
  007ea: 00 	mov    rax,0x1c
  007f1:    	mov    QWORD PTR [rbp-0x70],rax
:00047 _ = %2.call hit=(%9; 1)              [<INVALID>]
  007f5: 01 	sub    DWORD PTR [rip+0x14dc],0x1        # 0x1cd8
  007fc:    	je     0x33b5e
  00802:    	sub    rsp,0x30
  00806:    	movq   QWORD PTR [rsp],xmm2
  0080b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00811:    	movq   QWORD PTR [rsp+0x10],xmm5
  00817:    	movq   QWORD PTR [rsp+0x18],xmm6
  0081d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00823:    	mov    rdi,QWORD PTR [rbp-0x38]
  00827: 34 	movabs rax,0x563437f53600
  00831:    	call   rax
  00833:    	mov    r15d,eax
  00836: 00 	cmp    r15d,DWORD PTR [rip+0x14a3]        # 0x1ce0
  0083d:    	jne    0x33b80
  00843:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7838]        # 0xfffe8081
  00849:    	cmp    DWORD PTR [rip+0x148d],eax        # 0x1cdc
  0084f:    	jne    0x33b80
  00855: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0085e:    	mov    QWORD PTR [rsp-0x38],rcx
  00863:    	mov    rax,QWORD PTR [rbx]
  00866:    	lea    rdi,[rsp-0x18]
  0086b:    	mov    QWORD PTR [rdi],rax
  0086e:    	mov    QWORD PTR [rbx],rdi
  00871:    	mov    rax,QWORD PTR [rbp-0x38]
  00875:    	mov    QWORD PTR [rsp-0x38],rax
  0087a: 00 	mov    rdi,0x1
  00881:    	mov    rax,QWORD PTR [rbp-0x70]
  00885:    	mov    QWORD PTR [rsp-0x40],rax
  0088a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00893: 00 	movabs rax,0x0
  0089d:    	mov    QWORD PTR [rsp-0x28],rax
  008a2: 00 	movabs r13,0x0
  008ac:    	call   0xfffe5488
  008b1:    	lea    rdi,[rbp-0x8]
  008b5:    	mov    QWORD PTR [rbx],rdi
  008b8:    	movq   xmm2,QWORD PTR [rsp]
  008bd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008c3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008c9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008cf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  008d5:    	add    rsp,0x30
  008d9:    	test   rax,rax
  008dc:    	je     0x33bec
:00048 
:00050 %10 = const[Vec]                     [<INVALID>]
  008e2: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe779f]        # 0xfffe8088
  008e9: 00 	cmp    rax,QWORD PTR [rip+0x1408]        # 0x1cf8
  008f0:    	jne    0x33bfb
  008f6: 00 	mov    rax,QWORD PTR [rip+0x13eb]        # 0x1ce8
  008fd:    	mov    QWORD PTR [rbp-0x78],rax
:00051 %12 = %1.call org()                  [<INVALID>]
  00901: 01 	sub    DWORD PTR [rip+0x13f8],0x1        # 0x1d00
  00908:    	je     0x33ca7
  0090e:    	sub    rsp,0x20
  00912:    	movq   QWORD PTR [rsp],xmm3
  00917:    	movq   QWORD PTR [rsp+0x8],xmm5
  0091d:    	movq   QWORD PTR [rsp+0x10],xmm6
  00923:    	movq   QWORD PTR [rsp+0x18],xmm7
  00929:    	mov    rdi,QWORD PTR [rbp-0x30]
  0092d: 34 	movabs rax,0x563437f53600
  00937:    	call   rax
  00939:    	mov    r15d,eax
  0093c: 00 	cmp    r15d,DWORD PTR [rip+0x13c5]        # 0x1d08
  00943:    	jne    0x33cc9
  00949:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7732]        # 0xfffe8081
  0094f:    	cmp    DWORD PTR [rip+0x13af],eax        # 0x1d04
  00955:    	jne    0x33cc9
  0095b: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00964:    	mov    QWORD PTR [rsp-0x38],rcx
  00969:    	mov    rax,QWORD PTR [rbx]
  0096c:    	lea    rdi,[rsp-0x18]
  00971:    	mov    QWORD PTR [rdi],rax
  00974:    	mov    QWORD PTR [rbx],rdi
  00977:    	mov    rax,QWORD PTR [rbp-0x30]
  0097b:    	mov    QWORD PTR [rsp-0x38],rax
  00980: 00 	mov    rdi,0x0
  00987: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00990: 00 	movabs rax,0x0
  0099a:    	mov    QWORD PTR [rsp-0x28],rax
  0099f: 00 	movabs r13,0x0
  009a9:    	call   0xfffe5488
  009ae:    	lea    rdi,[rbp-0x8]
  009b2:    	mov    QWORD PTR [rbx],rdi
  009b5:    	movq   xmm3,QWORD PTR [rsp]
  009ba:    	movq   xmm5,QWORD PTR [rsp+0x8]
  009c0:    	movq   xmm6,QWORD PTR [rsp+0x10]
  009c6:    	movq   xmm7,QWORD PTR [rsp+0x18]
  009cc:    	add    rsp,0x20
  009d0:    	test   rax,rax
  009d3:    	je     0x33d35
  009d9: ff 	mov    QWORD PTR [rbp-0x88],rax
:00052 
:00054 %11 = %12.call x()                   [<INVALID>]
  009e0: 01 	sub    DWORD PTR [rip+0x1325],0x1        # 0x1d0c
  009e7:    	je     0x33d6d
  009ed:    	sub    rsp,0x20
  009f1:    	movq   QWORD PTR [rsp],xmm3
  009f6:    	movq   QWORD PTR [rsp+0x8],xmm5
  009fc:    	movq   QWORD PTR [rsp+0x10],xmm6
  00a02:    	movq   QWORD PTR [rsp+0x18],xmm7
  00a08: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00a0f: 34 	movabs rax,0x563437f53600
  00a19:    	call   rax
  00a1b:    	mov    r15d,eax
  00a1e: 00 	cmp    r15d,DWORD PTR [rip+0x12ef]        # 0x1d14
  00a25:    	jne    0x33d8f
  00a2b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7650]        # 0xfffe8081
  00a31:    	cmp    DWORD PTR [rip+0x12d9],eax        # 0x1d10
  00a37:    	jne    0x33d8f
  00a3d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a46:    	mov    QWORD PTR [rsp-0x38],rcx
  00a4b:    	mov    rax,QWORD PTR [rbx]
  00a4e:    	lea    rdi,[rsp-0x18]
  00a53:    	mov    QWORD PTR [rdi],rax
  00a56:    	mov    QWORD PTR [rbx],rdi
  00a59: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00a60:    	mov    QWORD PTR [rsp-0x38],rax
  00a65: 00 	mov    rdi,0x0
  00a6c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a75: 00 	movabs rax,0x0
  00a7f:    	mov    QWORD PTR [rsp-0x28],rax
  00a84: 00 	movabs r13,0x0
  00a8e:    	call   0xfffe5488
  00a93:    	lea    rdi,[rbp-0x8]
  00a97:    	mov    QWORD PTR [rbx],rdi
  00a9a:    	movq   xmm3,QWORD PTR [rsp]
  00a9f:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00aa5:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00aab:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ab1:    	add    rsp,0x20
  00ab5:    	test   rax,rax
  00ab8:    	je     0x33dfe
  00abe:    	mov    QWORD PTR [rbp-0x80],rax
:00055 
:00057 %13 = %1.call dir()                  [<INVALID>]
  00ac2: 01 	sub    DWORD PTR [rip+0x124f],0x1        # 0x1d18
  00ac9:    	je     0x33e36
  00acf:    	sub    rsp,0x20
  00ad3:    	movq   QWORD PTR [rsp],xmm3
  00ad8:    	movq   QWORD PTR [rsp+0x8],xmm5
  00ade:    	movq   QWORD PTR [rsp+0x10],xmm6
  00ae4:    	movq   QWORD PTR [rsp+0x18],xmm7
  00aea:    	mov    rdi,QWORD PTR [rbp-0x30]
  00aee: 34 	movabs rax,0x563437f53600
  00af8:    	call   rax
  00afa:    	mov    r15d,eax
  00afd: 00 	cmp    r15d,DWORD PTR [rip+0x121c]        # 0x1d20
  00b04:    	jne    0x33e58
  00b0a:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7571]        # 0xfffe8081
  00b10:    	cmp    DWORD PTR [rip+0x1206],eax        # 0x1d1c
  00b16:    	jne    0x33e58
  00b1c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b25:    	mov    QWORD PTR [rsp-0x38],rcx
  00b2a:    	mov    rax,QWORD PTR [rbx]
  00b2d:    	lea    rdi,[rsp-0x18]
  00b32:    	mov    QWORD PTR [rdi],rax
  00b35:    	mov    QWORD PTR [rbx],rdi
  00b38:    	mov    rax,QWORD PTR [rbp-0x30]
  00b3c:    	mov    QWORD PTR [rsp-0x38],rax
  00b41: 00 	mov    rdi,0x0
  00b48: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b51: 00 	movabs rax,0x0
  00b5b:    	mov    QWORD PTR [rsp-0x28],rax
  00b60: 00 	movabs r13,0x0
  00b6a:    	call   0xfffe5488
  00b6f:    	lea    rdi,[rbp-0x8]
  00b73:    	mov    QWORD PTR [rbx],rdi
  00b76:    	movq   xmm3,QWORD PTR [rsp]
  00b7b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b81:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00b87:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b8d:    	add    rsp,0x20
  00b91:    	test   rax,rax
  00b94:    	je     0x33ec4
  00b9a: ff 	mov    QWORD PTR [rbp-0x90],rax
:00058 
:00060 %12 = %13.call x()                   [<INVALID>]
  00ba1: 01 	sub    DWORD PTR [rip+0x117c],0x1        # 0x1d24
  00ba8:    	je     0x33efc
  00bae:    	sub    rsp,0x20
  00bb2:    	movq   QWORD PTR [rsp],xmm3
  00bb7:    	movq   QWORD PTR [rsp+0x8],xmm5
  00bbd:    	movq   QWORD PTR [rsp+0x10],xmm6
  00bc3:    	movq   QWORD PTR [rsp+0x18],xmm7
  00bc9: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00bd0: 34 	movabs rax,0x563437f53600
  00bda:    	call   rax
  00bdc:    	mov    r15d,eax
  00bdf: 00 	cmp    r15d,DWORD PTR [rip+0x1146]        # 0x1d2c
  00be6:    	jne    0x33f1e
  00bec:    	mov    eax,DWORD PTR [rip+0xfffffffffffe748f]        # 0xfffe8081
  00bf2:    	cmp    DWORD PTR [rip+0x1130],eax        # 0x1d28
  00bf8:    	jne    0x33f1e
  00bfe: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c07:    	mov    QWORD PTR [rsp-0x38],rcx
  00c0c:    	mov    rax,QWORD PTR [rbx]
  00c0f:    	lea    rdi,[rsp-0x18]
  00c14:    	mov    QWORD PTR [rdi],rax
  00c17:    	mov    QWORD PTR [rbx],rdi
  00c1a: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00c21:    	mov    QWORD PTR [rsp-0x38],rax
  00c26: 00 	mov    rdi,0x0
  00c2d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00c36: 00 	movabs rax,0x0
  00c40:    	mov    QWORD PTR [rsp-0x28],rax
  00c45: 00 	movabs r13,0x0
  00c4f:    	call   0xfffe5488
  00c54:    	lea    rdi,[rbp-0x8]
  00c58:    	mov    QWORD PTR [rbx],rdi
  00c5b:    	movq   xmm3,QWORD PTR [rsp]
  00c60:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00c66:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00c6c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c72:    	add    rsp,0x20
  00c76:    	test   rax,rax
  00c79:    	je     0x33f8d
  00c7f: ff 	mov    QWORD PTR [rbp-0x88],rax
:00061 
:00063 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  00c86: 01 	sub    DWORD PTR [rip+0x10a3],0x1        # 0x1d30
  00c8d:    	je     0x33fc5
  00c93: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00c9a:    	mov    rsi,QWORD PTR [rbp-0x60]
  00c9e:    	sub    rsp,0x20
  00ca2:    	movq   QWORD PTR [rsp],xmm3
  00ca7:    	movq   QWORD PTR [rsp+0x8],xmm5
  00cad:    	movq   QWORD PTR [rsp+0x10],xmm6
  00cb3:    	movq   QWORD PTR [rsp+0x18],xmm7
  00cb9:    	mov    rdx,rdi
  00cbc:    	mov    rcx,rsi
  00cbf:    	mov    rdi,rbx
  00cc2:    	mov    rsi,r12
  00cc5: 34 	movabs rax,0x563437f17b80
  00ccf:    	call   rax
  00cd1:    	movq   xmm3,QWORD PTR [rsp]
  00cd6:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00cdc:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00ce2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ce8:    	add    rsp,0x20
  00cec: 34 	movabs r13,0x563439853ab0
  00cf6:    	test   rax,rax
  00cf9:    	je     0xfffe54c3
  00cff: ff 	mov    QWORD PTR [rbp-0x88],rax
:00064 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  00d06: 01 	sub    DWORD PTR [rip+0x1027],0x1        # 0x1d34
  00d0d:    	je     0x34010
  00d13:    	mov    rdi,QWORD PTR [rbp-0x80]
  00d17: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00d1e:    	sub    rsp,0x20
  00d22:    	movq   QWORD PTR [rsp],xmm3
  00d27:    	movq   QWORD PTR [rsp+0x8],xmm5
  00d2d:    	movq   QWORD PTR [rsp+0x10],xmm6
  00d33:    	movq   QWORD PTR [rsp+0x18],xmm7
  00d39:    	mov    rdx,rdi
  00d3c:    	mov    rcx,rsi
  00d3f:    	mov    rdi,rbx
  00d42:    	mov    rsi,r12
  00d45: 34 	movabs rax,0x563437f15c00
  00d4f:    	call   rax
  00d51:    	movq   xmm3,QWORD PTR [rsp]
  00d56:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00d5c:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00d62:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00d68:    	add    rsp,0x20
  00d6c: 34 	movabs r13,0x563439853ac0
  00d76:    	test   rax,rax
  00d79:    	je     0xfffe54c3
  00d7f:    	mov    QWORD PTR [rbp-0x80],rax
:00065 %13 = %1.call org()                  [<INVALID>]
  00d83: 01 	sub    DWORD PTR [rip+0xfae],0x1        # 0x1d38
  00d8a:    	je     0x3405b
  00d90:    	sub    rsp,0x20
  00d94:    	movq   QWORD PTR [rsp],xmm3
  00d99:    	movq   QWORD PTR [rsp+0x8],xmm5
  00d9f:    	movq   QWORD PTR [rsp+0x10],xmm6
  00da5:    	movq   QWORD PTR [rsp+0x18],xmm7
  00dab:    	mov    rdi,QWORD PTR [rbp-0x30]
  00daf: 34 	movabs rax,0x563437f53600
  00db9:    	call   rax
  00dbb:    	mov    r15d,eax
  00dbe: 00 	cmp    r15d,DWORD PTR [rip+0xf7b]        # 0x1d40
  00dc5:    	jne    0x3407d
  00dcb:    	mov    eax,DWORD PTR [rip+0xfffffffffffe72b0]        # 0xfffe8081
  00dd1:    	cmp    DWORD PTR [rip+0xf65],eax        # 0x1d3c
  00dd7:    	jne    0x3407d
  00ddd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00de6:    	mov    QWORD PTR [rsp-0x38],rcx
  00deb:    	mov    rax,QWORD PTR [rbx]
  00dee:    	lea    rdi,[rsp-0x18]
  00df3:    	mov    QWORD PTR [rdi],rax
  00df6:    	mov    QWORD PTR [rbx],rdi
  00df9:    	mov    rax,QWORD PTR [rbp-0x30]
  00dfd:    	mov    QWORD PTR [rsp-0x38],rax
  00e02: 00 	mov    rdi,0x0
  00e09: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e12: 00 	movabs rax,0x0
  00e1c:    	mov    QWORD PTR [rsp-0x28],rax
  00e21: 00 	movabs r13,0x0
  00e2b:    	call   0xfffe5488
  00e30:    	lea    rdi,[rbp-0x8]
  00e34:    	mov    QWORD PTR [rbx],rdi
  00e37:    	movq   xmm3,QWORD PTR [rsp]
  00e3c:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00e42:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00e48:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00e4e:    	add    rsp,0x20
  00e52:    	test   rax,rax
  00e55:    	je     0x340e9
  00e5b: ff 	mov    QWORD PTR [rbp-0x90],rax
:00066 
:00068 %12 = %13.call y()                   [<INVALID>]
  00e62: 01 	sub    DWORD PTR [rip+0xedb],0x1        # 0x1d44
  00e69:    	je     0x34121
  00e6f:    	sub    rsp,0x20
  00e73:    	movq   QWORD PTR [rsp],xmm3
  00e78:    	movq   QWORD PTR [rsp+0x8],xmm5
  00e7e:    	movq   QWORD PTR [rsp+0x10],xmm6
  00e84:    	movq   QWORD PTR [rsp+0x18],xmm7
  00e8a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00e91: 34 	movabs rax,0x563437f53600
  00e9b:    	call   rax
  00e9d:    	mov    r15d,eax
  00ea0: 00 	cmp    r15d,DWORD PTR [rip+0xea5]        # 0x1d4c
  00ea7:    	jne    0x34143
  00ead:    	mov    eax,DWORD PTR [rip+0xfffffffffffe71ce]        # 0xfffe8081
  00eb3:    	cmp    DWORD PTR [rip+0xe8f],eax        # 0x1d48
  00eb9:    	jne    0x34143
  00ebf: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ec8:    	mov    QWORD PTR [rsp-0x38],rcx
  00ecd:    	mov    rax,QWORD PTR [rbx]
  00ed0:    	lea    rdi,[rsp-0x18]
  00ed5:    	mov    QWORD PTR [rdi],rax
  00ed8:    	mov    QWORD PTR [rbx],rdi
  00edb: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00ee2:    	mov    QWORD PTR [rsp-0x38],rax
  00ee7: 00 	mov    rdi,0x0
  00eee: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ef7: 00 	movabs rax,0x0
  00f01:    	mov    QWORD PTR [rsp-0x28],rax
  00f06: 00 	movabs r13,0x0
  00f10:    	call   0xfffe5488
  00f15:    	lea    rdi,[rbp-0x8]
  00f19:    	mov    QWORD PTR [rbx],rdi
  00f1c:    	movq   xmm3,QWORD PTR [rsp]
  00f21:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00f27:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00f2d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00f33:    	add    rsp,0x20
  00f37:    	test   rax,rax
  00f3a:    	je     0x341b2
  00f40: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = %1.call dir()                  [<INVALID>]
  00f47: 01 	sub    DWORD PTR [rip+0xe02],0x1        # 0x1d50
  00f4e:    	je     0x341ea
  00f54:    	sub    rsp,0x20
  00f58:    	movq   QWORD PTR [rsp],xmm3
  00f5d:    	movq   QWORD PTR [rsp+0x8],xmm5
  00f63:    	movq   QWORD PTR [rsp+0x10],xmm6
  00f69:    	movq   QWORD PTR [rsp+0x18],xmm7
  00f6f:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f73: 34 	movabs rax,0x563437f53600
  00f7d:    	call   rax
  00f7f:    	mov    r15d,eax
  00f82: 00 	cmp    r15d,DWORD PTR [rip+0xdcf]        # 0x1d58
  00f89:    	jne    0x3420c
  00f8f:    	mov    eax,DWORD PTR [rip+0xfffffffffffe70ec]        # 0xfffe8081
  00f95:    	cmp    DWORD PTR [rip+0xdb9],eax        # 0x1d54
  00f9b:    	jne    0x3420c
  00fa1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00faa:    	mov    QWORD PTR [rsp-0x38],rcx
  00faf:    	mov    rax,QWORD PTR [rbx]
  00fb2:    	lea    rdi,[rsp-0x18]
  00fb7:    	mov    QWORD PTR [rdi],rax
  00fba:    	mov    QWORD PTR [rbx],rdi
  00fbd:    	mov    rax,QWORD PTR [rbp-0x30]
  00fc1:    	mov    QWORD PTR [rsp-0x38],rax
  00fc6: 00 	mov    rdi,0x0
  00fcd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fd6: 00 	movabs rax,0x0
  00fe0:    	mov    QWORD PTR [rsp-0x28],rax
  00fe5: 00 	movabs r13,0x0
  00fef:    	call   0xfffe5488
  00ff4:    	lea    rdi,[rbp-0x8]
  00ff8:    	mov    QWORD PTR [rbx],rdi
  00ffb:    	movq   xmm3,QWORD PTR [rsp]
  01000:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01006:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0100c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01012:    	add    rsp,0x20
  01016:    	test   rax,rax
  01019:    	je     0x34278
  0101f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 
:00074 %13 = %14.call y()                   [<INVALID>]
  01026: 01 	sub    DWORD PTR [rip+0xd2f],0x1        # 0x1d5c
  0102d:    	je     0x342b0
  01033:    	sub    rsp,0x20
  01037:    	movq   QWORD PTR [rsp],xmm3
  0103c:    	movq   QWORD PTR [rsp+0x8],xmm5
  01042:    	movq   QWORD PTR [rsp+0x10],xmm6
  01048:    	movq   QWORD PTR [rsp+0x18],xmm7
  0104e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01055: 34 	movabs rax,0x563437f53600
  0105f:    	call   rax
  01061:    	mov    r15d,eax
  01064: 00 	cmp    r15d,DWORD PTR [rip+0xcf9]        # 0x1d64
  0106b:    	jne    0x342d2
  01071:    	mov    eax,DWORD PTR [rip+0xfffffffffffe700a]        # 0xfffe8081
  01077:    	cmp    DWORD PTR [rip+0xce3],eax        # 0x1d60
  0107d:    	jne    0x342d2
  01083: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0108c:    	mov    QWORD PTR [rsp-0x38],rcx
  01091:    	mov    rax,QWORD PTR [rbx]
  01094:    	lea    rdi,[rsp-0x18]
  01099:    	mov    QWORD PTR [rdi],rax
  0109c:    	mov    QWORD PTR [rbx],rdi
  0109f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  010a6:    	mov    QWORD PTR [rsp-0x38],rax
  010ab: 00 	mov    rdi,0x0
  010b2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  010bb: 00 	movabs rax,0x0
  010c5:    	mov    QWORD PTR [rsp-0x28],rax
  010ca: 00 	movabs r13,0x0
  010d4:    	call   0xfffe5488
  010d9:    	lea    rdi,[rbp-0x8]
  010dd:    	mov    QWORD PTR [rbx],rdi
  010e0:    	movq   xmm3,QWORD PTR [rsp]
  010e5:    	movq   xmm5,QWORD PTR [rsp+0x8]
  010eb:    	movq   xmm6,QWORD PTR [rsp+0x10]
  010f1:    	movq   xmm7,QWORD PTR [rsp+0x18]
  010f7:    	add    rsp,0x20
  010fb:    	test   rax,rax
  010fe:    	je     0x34341
  01104: ff 	mov    QWORD PTR [rbp-0x90],rax
:00075 
:00077 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  0110b: 01 	sub    DWORD PTR [rip+0xc56],0x1        # 0x1d68
  01112:    	je     0x34379
  01118: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0111f:    	mov    rsi,QWORD PTR [rbp-0x60]
  01123:    	sub    rsp,0x20
  01127:    	movq   QWORD PTR [rsp],xmm3
  0112c:    	movq   QWORD PTR [rsp+0x8],xmm5
  01132:    	movq   QWORD PTR [rsp+0x10],xmm6
  01138:    	movq   QWORD PTR [rsp+0x18],xmm7
  0113e:    	mov    rdx,rdi
  01141:    	mov    rcx,rsi
  01144:    	mov    rdi,rbx
  01147:    	mov    rsi,r12
  0114a: 34 	movabs rax,0x563437f17b80
  01154:    	call   rax
  01156:    	movq   xmm3,QWORD PTR [rsp]
  0115b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01161:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01167:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0116d:    	add    rsp,0x20
  01171: 34 	movabs r13,0x563439853b90
  0117b:    	test   rax,rax
  0117e:    	je     0xfffe54c3
  01184: ff 	mov    QWORD PTR [rbp-0x90],rax
:00078 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  0118b: 01 	sub    DWORD PTR [rip+0xbda],0x1        # 0x1d6c
  01192:    	je     0x343c4
  01198: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0119f: ff 	mov    rsi,QWORD PTR [rbp-0x90]
  011a6:    	sub    rsp,0x20
  011aa:    	movq   QWORD PTR [rsp],xmm3
  011af:    	movq   QWORD PTR [rsp+0x8],xmm5
  011b5:    	movq   QWORD PTR [rsp+0x10],xmm6
  011bb:    	movq   QWORD PTR [rsp+0x18],xmm7
  011c1:    	mov    rdx,rdi
  011c4:    	mov    rcx,rsi
  011c7:    	mov    rdi,rbx
  011ca:    	mov    rsi,r12
  011cd: 34 	movabs rax,0x563437f15c00
  011d7:    	call   rax
  011d9:    	movq   xmm3,QWORD PTR [rsp]
  011de:    	movq   xmm5,QWORD PTR [rsp+0x8]
  011e4:    	movq   xmm6,QWORD PTR [rsp+0x10]
  011ea:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011f0:    	add    rsp,0x20
  011f4: 34 	movabs r13,0x563439853ba0
  011fe:    	test   rax,rax
  01201:    	je     0xfffe54c3
  01207: ff 	mov    QWORD PTR [rbp-0x88],rax
:00079 %14 = %1.call org()                  [<INVALID>]
  0120e: 01 	sub    DWORD PTR [rip+0xb5b],0x1        # 0x1d70
  01215:    	je     0x3440f
  0121b:    	sub    rsp,0x20
  0121f:    	movq   QWORD PTR [rsp],xmm3
  01224:    	movq   QWORD PTR [rsp+0x8],xmm5
  0122a:    	movq   QWORD PTR [rsp+0x10],xmm6
  01230:    	movq   QWORD PTR [rsp+0x18],xmm7
  01236:    	mov    rdi,QWORD PTR [rbp-0x30]
  0123a: 34 	movabs rax,0x563437f53600
  01244:    	call   rax
  01246:    	mov    r15d,eax
  01249: 00 	cmp    r15d,DWORD PTR [rip+0xb28]        # 0x1d78
  01250:    	jne    0x34431
  01256:    	mov    eax,DWORD PTR [rip+0xfffffffffffe6e25]        # 0xfffe8081
  0125c:    	cmp    DWORD PTR [rip+0xb12],eax        # 0x1d74
  01262:    	jne    0x34431
  01268: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01271:    	mov    QWORD PTR [rsp-0x38],rcx
  01276:    	mov    rax,QWORD PTR [rbx]
  01279:    	lea    rdi,[rsp-0x18]
  0127e:    	mov    QWORD PTR [rdi],rax
  01281:    	mov    QWORD PTR [rbx],rdi
  01284:    	mov    rax,QWORD PTR [rbp-0x30]
  01288:    	mov    QWORD PTR [rsp-0x38],rax
  0128d: 00 	mov    rdi,0x0
  01294: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0129d: 00 	movabs rax,0x0
  012a7:    	mov    QWORD PTR [rsp-0x28],rax
  012ac: 00 	movabs r13,0x0
  012b6:    	call   0xfffe5488
  012bb:    	lea    rdi,[rbp-0x8]
  012bf:    	mov    QWORD PTR [rbx],rdi
  012c2:    	movq   xmm3,QWORD PTR [rsp]
  012c7:    	movq   xmm5,QWORD PTR [rsp+0x8]
  012cd:    	movq   xmm6,QWORD PTR [rsp+0x10]
  012d3:    	movq   xmm7,QWORD PTR [rsp+0x18]
  012d9:    	add    rsp,0x20
  012dd:    	test   rax,rax
  012e0:    	je     0x3449d
  012e6: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 
:00082 %13 = %14.call z()                   [<INVALID>]
  012ed: 01 	sub    DWORD PTR [rip+0xa88],0x1        # 0x1d7c
  012f4:    	je     0x344d5
  012fa:    	sub    rsp,0x20
  012fe:    	movq   QWORD PTR [rsp],xmm3
  01303:    	movq   QWORD PTR [rsp+0x8],xmm5
  01309:    	movq   QWORD PTR [rsp+0x10],xmm6
  0130f:    	movq   QWORD PTR [rsp+0x18],xmm7
  01315: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0131c: 34 	movabs rax,0x563437f53600
  01326:    	call   rax
  01328:    	mov    r15d,eax
  0132b: 00 	cmp    r15d,DWORD PTR [rip+0xa52]        # 0x1d84
  01332:    	jne    0x344f7
  01338:    	mov    eax,DWORD PTR [rip+0xfffffffffffe6d43]        # 0xfffe8081
  0133e:    	cmp    DWORD PTR [rip+0xa3c],eax        # 0x1d80
  01344:    	jne    0x344f7
  0134a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01353:    	mov    QWORD PTR [rsp-0x38],rcx
  01358:    	mov    rax,QWORD PTR [rbx]
  0135b:    	lea    rdi,[rsp-0x18]
  01360:    	mov    QWORD PTR [rdi],rax
  01363:    	mov    QWORD PTR [rbx],rdi
  01366: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0136d:    	mov    QWORD PTR [rsp-0x38],rax
  01372: 00 	mov    rdi,0x0
  01379: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01382: 00 	movabs rax,0x0
  0138c:    	mov    QWORD PTR [rsp-0x28],rax
  01391: 00 	movabs r13,0x0
  0139b:    	call   0xfffe5488
  013a0:    	lea    rdi,[rbp-0x8]
  013a4:    	mov    QWORD PTR [rbx],rdi
  013a7:    	movq   xmm3,QWORD PTR [rsp]
  013ac:    	movq   xmm5,QWORD PTR [rsp+0x8]
  013b2:    	movq   xmm6,QWORD PTR [rsp+0x10]
  013b8:    	movq   xmm7,QWORD PTR [rsp+0x18]
  013be:    	add    rsp,0x20
  013c2:    	test   rax,rax
  013c5:    	je     0x34566
  013cb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00083 
:00085 %15 = %1.call dir()                  [<INVALID>]
  013d2: 01 	sub    DWORD PTR [rip+0x9af],0x1        # 0x1d88
  013d9:    	je     0x3459e
  013df:    	sub    rsp,0x20
  013e3:    	movq   QWORD PTR [rsp],xmm3
  013e8:    	movq   QWORD PTR [rsp+0x8],xmm5
  013ee:    	movq   QWORD PTR [rsp+0x10],xmm6
  013f4:    	movq   QWORD PTR [rsp+0x18],xmm7
  013fa:    	mov    rdi,QWORD PTR [rbp-0x30]
  013fe: 34 	movabs rax,0x563437f53600
  01408:    	call   rax
  0140a:    	mov    r15d,eax
  0140d: 00 	cmp    r15d,DWORD PTR [rip+0x97c]        # 0x1d90
  01414:    	jne    0x345c0
  0141a:    	mov    eax,DWORD PTR [rip+0xfffffffffffe6c61]        # 0xfffe8081
  01420:    	cmp    DWORD PTR [rip+0x966],eax        # 0x1d8c
  01426:    	jne    0x345c0
  0142c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01435:    	mov    QWORD PTR [rsp-0x38],rcx
  0143a:    	mov    rax,QWORD PTR [rbx]
  0143d:    	lea    rdi,[rsp-0x18]
  01442:    	mov    QWORD PTR [rdi],rax
  01445:    	mov    QWORD PTR [rbx],rdi
  01448:    	mov    rax,QWORD PTR [rbp-0x30]
  0144c:    	mov    QWORD PTR [rsp-0x38],rax
  01451: 00 	mov    rdi,0x0
  01458: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01461: 00 	movabs rax,0x0
  0146b:    	mov    QWORD PTR [rsp-0x28],rax
  01470: 00 	movabs r13,0x0
  0147a:    	call   0xfffe5488
  0147f:    	lea    rdi,[rbp-0x8]
  01483:    	mov    QWORD PTR [rbx],rdi
  01486:    	movq   xmm3,QWORD PTR [rsp]
  0148b:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01491:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01497:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0149d:    	add    rsp,0x20
  014a1:    	test   rax,rax
  014a4:    	je     0x3462c
  014aa: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00086 
:00088 %14 = %15.call z()                   [<INVALID>]
  014b1: 01 	sub    DWORD PTR [rip+0x8dc],0x1        # 0x1d94
  014b8:    	je     0x34664
  014be:    	sub    rsp,0x20
  014c2:    	movq   QWORD PTR [rsp],xmm3
  014c7:    	movq   QWORD PTR [rsp+0x8],xmm5
  014cd:    	movq   QWORD PTR [rsp+0x10],xmm6
  014d3:    	movq   QWORD PTR [rsp+0x18],xmm7
  014d9: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  014e0: 34 	movabs rax,0x563437f53600
  014ea:    	call   rax
  014ec:    	mov    r15d,eax
  014ef: 00 	cmp    r15d,DWORD PTR [rip+0x8a6]        # 0x1d9c
  014f6:    	jne    0x34686
  014fc:    	mov    eax,DWORD PTR [rip+0xfffffffffffe6b7f]        # 0xfffe8081
  01502:    	cmp    DWORD PTR [rip+0x890],eax        # 0x1d98
  01508:    	jne    0x34686
  0150e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01517:    	mov    QWORD PTR [rsp-0x38],rcx
  0151c:    	mov    rax,QWORD PTR [rbx]
  0151f:    	lea    rdi,[rsp-0x18]
  01524:    	mov    QWORD PTR [rdi],rax
  01527:    	mov    QWORD PTR [rbx],rdi
  0152a: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01531:    	mov    QWORD PTR [rsp-0x38],rax
  01536: 00 	mov    rdi,0x0
  0153d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01546: 00 	movabs rax,0x0
  01550:    	mov    QWORD PTR [rsp-0x28],rax
  01555: 00 	movabs r13,0x0
  0155f:    	call   0xfffe5488
  01564:    	lea    rdi,[rbp-0x8]
  01568:    	mov    QWORD PTR [rbx],rdi
  0156b:    	movq   xmm3,QWORD PTR [rsp]
  01570:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01576:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0157c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01582:    	add    rsp,0x20
  01586:    	test   rax,rax
  01589:    	je     0x346f5
  0158f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 
:00091 %14 = %14 * %7                       [<INVALID>][<INVALID>]
  01596: 01 	sub    DWORD PTR [rip+0x803],0x1        # 0x1da0
  0159d:    	je     0x3472d
  015a3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  015aa:    	mov    rsi,QWORD PTR [rbp-0x60]
  015ae:    	sub    rsp,0x20
  015b2:    	movq   QWORD PTR [rsp],xmm3
  015b7:    	movq   QWORD PTR [rsp+0x8],xmm5
  015bd:    	movq   QWORD PTR [rsp+0x10],xmm6
  015c3:    	movq   QWORD PTR [rsp+0x18],xmm7
  015c9:    	mov    rdx,rdi
  015cc:    	mov    rcx,rsi
  015cf:    	mov    rdi,rbx
  015d2:    	mov    rsi,r12
  015d5: 34 	movabs rax,0x563437f17b80
  015df:    	call   rax
  015e1:    	movq   xmm3,QWORD PTR [rsp]
  015e6:    	movq   xmm5,QWORD PTR [rsp+0x8]
  015ec:    	movq   xmm6,QWORD PTR [rsp+0x10]
  015f2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  015f8:    	add    rsp,0x20
  015fc: 34 	movabs r13,0x563439853c70
  01606:    	test   rax,rax
  01609:    	je     0xfffe54c3
  0160f: ff 	mov    QWORD PTR [rbp-0x98],rax
:00092 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  01616: 01 	sub    DWORD PTR [rip+0x787],0x1        # 0x1da4
  0161d:    	je     0x34778
  01623: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0162a: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  01631:    	sub    rsp,0x20
  01635:    	movq   QWORD PTR [rsp],xmm3
  0163a:    	movq   QWORD PTR [rsp+0x8],xmm5
  01640:    	movq   QWORD PTR [rsp+0x10],xmm6
  01646:    	movq   QWORD PTR [rsp+0x18],xmm7
  0164c:    	mov    rdx,rdi
  0164f:    	mov    rcx,rsi
  01652:    	mov    rdi,rbx
  01655:    	mov    rsi,r12
  01658: 34 	movabs rax,0x563437f15c00
  01662:    	call   rax
  01664:    	movq   xmm3,QWORD PTR [rsp]
  01669:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0166f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01675:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0167b:    	add    rsp,0x20
  0167f: 34 	movabs r13,0x563439853c80
  01689:    	test   rax,rax
  0168c:    	je     0xfffe54c3
  01692: ff 	mov    QWORD PTR [rbp-0x90],rax
:00093 %9 = %10.call new(%11; 3)            [<INVALID>]
  01699: 01 	sub    DWORD PTR [rip+0x708],0x1        # 0x1da8
  016a0:    	je     0x347c3
  016a6:    	sub    rsp,0x20
  016aa:    	movq   QWORD PTR [rsp],xmm3
  016af:    	movq   QWORD PTR [rsp+0x8],xmm5
  016b5:    	movq   QWORD PTR [rsp+0x10],xmm6
  016bb:    	movq   QWORD PTR [rsp+0x18],xmm7
  016c1:    	mov    rdi,QWORD PTR [rbp-0x78]
  016c5: 34 	movabs rax,0x563437f53600
  016cf:    	call   rax
  016d1:    	mov    r15d,eax
  016d4: 00 	cmp    r15d,DWORD PTR [rip+0x6d5]        # 0x1db0
  016db:    	jne    0x347e5
  016e1:    	mov    eax,DWORD PTR [rip+0xfffffffffffe699a]        # 0xfffe8081
  016e7:    	cmp    DWORD PTR [rip+0x6bf],eax        # 0x1dac
  016ed:    	jne    0x347e5
  016f3: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016fc:    	mov    QWORD PTR [rsp-0x38],rcx
  01701:    	mov    rax,QWORD PTR [rbx]
  01704:    	lea    rdi,[rsp-0x18]
  01709:    	mov    QWORD PTR [rdi],rax
  0170c:    	mov    QWORD PTR [rbx],rdi
  0170f:    	mov    rax,QWORD PTR [rbp-0x78]
  01713:    	mov    QWORD PTR [rsp-0x38],rax
  01718: 00 	mov    rdi,0x3
  0171f:    	mov    rax,QWORD PTR [rbp-0x80]
  01723:    	mov    QWORD PTR [rsp-0x40],rax
  01728: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0172f:    	mov    QWORD PTR [rsp-0x48],rax
  01734: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0173b:    	mov    QWORD PTR [rsp-0x50],rax
  01740: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01749: 00 	movabs rax,0x0
  01753:    	mov    QWORD PTR [rsp-0x28],rax
  01758: 00 	movabs r13,0x0
  01762:    	call   0xfffe5488
  01767:    	lea    rdi,[rbp-0x8]
  0176b:    	mov    QWORD PTR [rbx],rdi
  0176e:    	movq   xmm3,QWORD PTR [rsp]
  01773:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01779:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0177f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01785:    	add    rsp,0x20
  01789:    	test   rax,rax
  0178c:    	je     0x34851
  01792:    	mov    QWORD PTR [rbp-0x70],rax
:00094 
:00096 _ = %2.call pl=(%9; 1)               [<INVALID>]
  01796: 01 	sub    DWORD PTR [rip+0x617],0x1        # 0x1db4
  0179d:    	je     0x34889
  017a3:    	sub    rsp,0x20
  017a7:    	movq   QWORD PTR [rsp],xmm3
  017ac:    	movq   QWORD PTR [rsp+0x8],xmm5
  017b2:    	movq   QWORD PTR [rsp+0x10],xmm6
  017b8:    	movq   QWORD PTR [rsp+0x18],xmm7
  017be:    	mov    rdi,QWORD PTR [rbp-0x38]
  017c2: 34 	movabs rax,0x563437f53600
  017cc:    	call   rax
  017ce:    	mov    r15d,eax
  017d1: 00 	cmp    r15d,DWORD PTR [rip+0x5e4]        # 0x1dbc
  017d8:    	jne    0x348ab
  017de:    	mov    eax,DWORD PTR [rip+0xfffffffffffe689d]        # 0xfffe8081
  017e4:    	cmp    DWORD PTR [rip+0x5ce],eax        # 0x1db8
  017ea:    	jne    0x348ab
  017f0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017f9:    	mov    QWORD PTR [rsp-0x38],rcx
  017fe:    	mov    rax,QWORD PTR [rbx]
  01801:    	lea    rdi,[rsp-0x18]
  01806:    	mov    QWORD PTR [rdi],rax
  01809:    	mov    QWORD PTR [rbx],rdi
  0180c:    	mov    rax,QWORD PTR [rbp-0x38]
  01810:    	mov    QWORD PTR [rsp-0x38],rax
  01815: 00 	mov    rdi,0x1
  0181c:    	mov    rax,QWORD PTR [rbp-0x70]
  01820:    	mov    QWORD PTR [rsp-0x40],rax
  01825: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0182e: 00 	movabs rax,0x0
  01838:    	mov    QWORD PTR [rsp-0x28],rax
  0183d: 00 	movabs r13,0x0
  01847:    	call   0xfffe5488
  0184c:    	lea    rdi,[rbp-0x8]
  01850:    	mov    QWORD PTR [rbx],rdi
  01853:    	movq   xmm3,QWORD PTR [rsp]
  01858:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0185e:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01864:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0186a:    	add    rsp,0x20
  0186e:    	test   rax,rax
  01871:    	je     0x34917
:00097 
:00099 %9 = %2.call pl()                    [<INVALID>]
  01877: 01 	sub    DWORD PTR [rip+0x542],0x1        # 0x1dc0
  0187e:    	je     0x3494f
  01884:    	sub    rsp,0x20
  01888:    	movq   QWORD PTR [rsp],xmm3
  0188d:    	movq   QWORD PTR [rsp+0x8],xmm5
  01893:    	movq   QWORD PTR [rsp+0x10],xmm6
  01899:    	movq   QWORD PTR [rsp+0x18],xmm7
  0189f:    	mov    rdi,QWORD PTR [rbp-0x38]
  018a3: 34 	movabs rax,0x563437f53600
  018ad:    	call   rax
  018af:    	mov    r15d,eax
  018b2: 00 	cmp    r15d,DWORD PTR [rip+0x50f]        # 0x1dc8
  018b9:    	jne    0x34971
  018bf:    	mov    eax,DWORD PTR [rip+0xfffffffffffe67bc]        # 0xfffe8081
  018c5:    	cmp    DWORD PTR [rip+0x4f9],eax        # 0x1dc4
  018cb:    	jne    0x34971
  018d1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  018da:    	mov    QWORD PTR [rsp-0x38],rcx
  018df:    	mov    rax,QWORD PTR [rbx]
  018e2:    	lea    rdi,[rsp-0x18]
  018e7:    	mov    QWORD PTR [rdi],rax
  018ea:    	mov    QWORD PTR [rbx],rdi
  018ed:    	mov    rax,QWORD PTR [rbp-0x38]
  018f1:    	mov    QWORD PTR [rsp-0x38],rax
  018f6: 00 	mov    rdi,0x0
  018fd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01906: 00 	movabs rax,0x0
  01910:    	mov    QWORD PTR [rsp-0x28],rax
  01915: 00 	movabs r13,0x0
  0191f:    	call   0xfffe5488
  01924:    	lea    rdi,[rbp-0x8]
  01928:    	mov    QWORD PTR [rbx],rdi
  0192b:    	movq   xmm3,QWORD PTR [rsp]
  01930:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01936:    	movq   xmm6,QWORD PTR [rsp+0x10]
  0193c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01942:    	add    rsp,0x20
  01946:    	test   rax,rax
  01949:    	je     0x349dd
  0194f:    	mov    QWORD PTR [rbp-0x70],rax
:00100 
:00102 %10 = @center: <INVALID>[IvarId(0)]
  01953:    	mov    rdi,QWORD PTR [rbp-0x28]
  01957:    	sub    rsp,0x20
  0195b:    	movq   QWORD PTR [rsp],xmm3
  01960:    	movq   QWORD PTR [rsp+0x8],xmm5
  01966:    	movq   QWORD PTR [rsp+0x10],xmm6
  0196c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01972: 00 	mov    rsi,0x90
  01979:    	mov    rdx,r12
  0197c: 34 	movabs rax,0x563437f47590
  01986:    	call   rax
  01988:    	movq   xmm3,QWORD PTR [rsp]
  0198d:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01993:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01999:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0199f:    	add    rsp,0x20
  019a3:    	mov    QWORD PTR [rbp-0x78],rax
:00103 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  019a7: 01 	sub    DWORD PTR [rip+0x41e],0x1        # 0x1dcc
  019ae:    	je     0x34a15
  019b4:    	sub    rsp,0x20
  019b8:    	movq   QWORD PTR [rsp],xmm3
  019bd:    	movq   QWORD PTR [rsp+0x8],xmm5
  019c3:    	movq   QWORD PTR [rsp+0x10],xmm6
  019c9:    	movq   QWORD PTR [rsp+0x18],xmm7
  019cf:    	mov    rdi,QWORD PTR [rbp-0x70]
  019d3: 34 	movabs rax,0x563437f53600
  019dd:    	call   rax
  019df:    	mov    r15d,eax
  019e2: 00 	cmp    r15d,DWORD PTR [rip+0x3eb]        # 0x1dd4
  019e9:    	jne    0x34a37
  019ef:    	mov    eax,DWORD PTR [rip+0xfffffffffffe668c]        # 0xfffe8081
  019f5:    	cmp    DWORD PTR [rip+0x3d5],eax        # 0x1dd0
  019fb:    	jne    0x34a37
  01a01: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a0a:    	mov    QWORD PTR [rsp-0x38],rcx
  01a0f:    	mov    rax,QWORD PTR [rbx]
  01a12:    	lea    rdi,[rsp-0x18]
  01a17:    	mov    QWORD PTR [rdi],rax
  01a1a:    	mov    QWORD PTR [rbx],rdi
  01a1d:    	mov    rax,QWORD PTR [rbp-0x70]
  01a21:    	mov    QWORD PTR [rsp-0x38],rax
  01a26: 00 	mov    rdi,0x1
  01a2d:    	mov    rax,QWORD PTR [rbp-0x78]
  01a31:    	mov    QWORD PTR [rsp-0x40],rax
  01a36: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01a3f: 00 	movabs rax,0x0
  01a49:    	mov    QWORD PTR [rsp-0x28],rax
  01a4e: 00 	movabs r13,0x0
  01a58:    	call   0xfffe5488
  01a5d:    	lea    rdi,[rbp-0x8]
  01a61:    	mov    QWORD PTR [rbx],rdi
  01a64:    	movq   xmm3,QWORD PTR [rsp]
  01a69:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01a6f:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01a75:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a7b:    	add    rsp,0x20
  01a7f:    	test   rax,rax
  01a82:    	je     0x34aa3
  01a88:    	mov    QWORD PTR [rbp-0x68],rax
:00104 
:00106 %9 = %8.call vnormalize()            [<INVALID>]
  01a8c: 01 	sub    DWORD PTR [rip+0x345],0x1        # 0x1dd8
  01a93:    	je     0x34adb
  01a99:    	sub    rsp,0x20
  01a9d:    	movq   QWORD PTR [rsp],xmm3
  01aa2:    	movq   QWORD PTR [rsp+0x8],xmm5
  01aa8:    	movq   QWORD PTR [rsp+0x10],xmm6
  01aae:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ab4:    	mov    rdi,QWORD PTR [rbp-0x68]
  01ab8: 34 	movabs rax,0x563437f53600
  01ac2:    	call   rax
  01ac4:    	mov    r15d,eax
  01ac7: 00 	cmp    r15d,DWORD PTR [rip+0x312]        # 0x1de0
  01ace:    	jne    0x34afd
  01ad4:    	mov    eax,DWORD PTR [rip+0xfffffffffffe65a7]        # 0xfffe8081
  01ada:    	cmp    DWORD PTR [rip+0x2fc],eax        # 0x1ddc
  01ae0:    	jne    0x34afd
  01ae6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01aef:    	mov    QWORD PTR [rsp-0x38],rcx
  01af4:    	mov    rax,QWORD PTR [rbx]
  01af7:    	lea    rdi,[rsp-0x18]
  01afc:    	mov    QWORD PTR [rdi],rax
  01aff:    	mov    QWORD PTR [rbx],rdi
  01b02:    	mov    rax,QWORD PTR [rbp-0x68]
  01b06:    	mov    QWORD PTR [rsp-0x38],rax
  01b0b: 00 	mov    rdi,0x0
  01b12: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b1b: 00 	movabs rax,0x0
  01b25:    	mov    QWORD PTR [rsp-0x28],rax
  01b2a: 00 	movabs r13,0x0
  01b34:    	call   0xfffe5488
  01b39:    	lea    rdi,[rbp-0x8]
  01b3d:    	mov    QWORD PTR [rbx],rdi
  01b40:    	movq   xmm3,QWORD PTR [rsp]
  01b45:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01b4b:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01b51:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b57:    	add    rsp,0x20
  01b5b:    	test   rax,rax
  01b5e:    	je     0x34b69
  01b64:    	mov    QWORD PTR [rbp-0x70],rax
:00107 
:00109 _ = %2.call n=(%9; 1)                [<INVALID>]
  01b68: 01 	sub    DWORD PTR [rip+0x275],0x1        # 0x1de4
  01b6f:    	je     0x34ba1
  01b75:    	sub    rsp,0x20
  01b79:    	movq   QWORD PTR [rsp],xmm3
  01b7e:    	movq   QWORD PTR [rsp+0x8],xmm5
  01b84:    	movq   QWORD PTR [rsp+0x10],xmm6
  01b8a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01b90:    	mov    rdi,QWORD PTR [rbp-0x38]
  01b94: 34 	movabs rax,0x563437f53600
  01b9e:    	call   rax
  01ba0:    	mov    r15d,eax
  01ba3: 00 	cmp    r15d,DWORD PTR [rip+0x242]        # 0x1dec
  01baa:    	jne    0x34bc3
  01bb0:    	mov    eax,DWORD PTR [rip+0xfffffffffffe64cb]        # 0xfffe8081
  01bb6:    	cmp    DWORD PTR [rip+0x22c],eax        # 0x1de8
  01bbc:    	jne    0x34bc3
  01bc2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bcb:    	mov    QWORD PTR [rsp-0x38],rcx
  01bd0:    	mov    rax,QWORD PTR [rbx]
  01bd3:    	lea    rdi,[rsp-0x18]
  01bd8:    	mov    QWORD PTR [rdi],rax
  01bdb:    	mov    QWORD PTR [rbx],rdi
  01bde:    	mov    rax,QWORD PTR [rbp-0x38]
  01be2:    	mov    QWORD PTR [rsp-0x38],rax
  01be7: 00 	mov    rdi,0x1
  01bee:    	mov    rax,QWORD PTR [rbp-0x70]
  01bf2:    	mov    QWORD PTR [rsp-0x40],rax
  01bf7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c00: 00 	movabs rax,0x0
  01c0a:    	mov    QWORD PTR [rsp-0x28],rax
  01c0f: 00 	movabs r13,0x0
  01c19:    	call   0xfffe5488
  01c1e:    	lea    rdi,[rbp-0x8]
  01c22:    	mov    QWORD PTR [rbx],rdi
  01c25:    	movq   xmm3,QWORD PTR [rsp]
  01c2a:    	movq   xmm5,QWORD PTR [rsp+0x8]
  01c30:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01c36:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c3c:    	add    rsp,0x20
  01c40:    	test   rax,rax
  01c43:    	je     0x34c2f
:00110 
:00112 br =>:00113
  01c49:    	jmp    0x34d4b
:00113 br =>:00114
  01c4e:    	jmp    0x34dbe
:00114 %9 = nil
  01c53: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00115 ret %9
  01c5b:    	mov    rax,QWORD PTR [rbp-0x70]
  01c5f:    	leave  
  01c60:    	ret    
==> start whole compile: <unnamed> FuncId(80) self_class:Scene start:[00000] bytecode:0x563439851560
<== finished compile. elapsed:169.1µs
offset:Pos(117096) code: 9237 bytes  data: 411 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x1
  00011:    	je     0x73
  00017:    	jl     0x22
  0001d:    	jmp    0x73
  00022:    	mov    eax,0x1
  00027:    	sub    eax,edx
  00029:    	test   rax,rax
  0002c:    	je     0x48
  00032:    	lea    rdi,[rbp-0x38]
  00036: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  0003e:    	sub    rax,0x1
  00042:    	jne    0x36
  00048:    	mov    edx,0x1
  0004d:    	mov    eax,0x1
  00052:    	sub    eax,edx
  00054:    	test   rax,rax
  00057:    	je     0x73
  0005d:    	lea    rdi,[rbp-0x38]
  00061: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00069:    	sub    rax,0x1
  0006d:    	jne    0x61
  00073: 00 	mov    rax,0x4
  0007a:    	mov    QWORD PTR [rbp-0x38],rax
  0007e:    	mov    QWORD PTR [rbp-0x40],rax
  00082:    	mov    QWORD PTR [rbp-0x48],rax
  00086:    	mov    QWORD PTR [rbp-0x50],rax
  0008a:    	mov    QWORD PTR [rbp-0x58],rax
  0008e:    	mov    QWORD PTR [rbp-0x60],rax
  00092:    	mov    QWORD PTR [rbp-0x68],rax
  00096:    	mov    QWORD PTR [rbp-0x70],rax
  0009a:    	mov    QWORD PTR [rbp-0x78],rax
  0009e:    	mov    QWORD PTR [rbp-0x80],rax
  000a2: ff 	mov    QWORD PTR [rbp-0x88],rax
  000a9: ff 	mov    QWORD PTR [rbp-0x90],rax
  000b0: ff 	mov    QWORD PTR [rbp-0x98],rax
  000b7: ff 	mov    QWORD PTR [rbp-0xa0],rax
  000be: ff 	mov    QWORD PTR [rbp-0xa8],rax
  000c5:    	mov    rdi,QWORD PTR [rbp-0x28]
  000c9: 00 	test   rdi,0x7
  000d0:    	jne    0x33010
  000d6:    	cmp    DWORD PTR [rdi+0x4],0x32
  000da:    	jne    0x33010
:00000 init_block reg:17 arg:1 pos:1 req:1 stack_offset:11
:00001 %13 = %0.call rand()                 [Scene]
  000e0:    	mov    rdi,QWORD PTR [rbp-0x28]
  000e4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe61a6],0x26        # 0xfffe6291
  000eb:    	jne    0x3301f
  000f1: 00 	mov    r9,0x0
  000f8:    	mov    rdx,rdi
  000fb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00104:    	mov    QWORD PTR [rsp-0x38],rcx
  00109:    	mov    rax,QWORD PTR [rbx]
  0010c:    	lea    rdi,[rsp-0x18]
  00111:    	mov    QWORD PTR [rdi],rax
  00114:    	mov    QWORD PTR [rbx],rdi
  00117: ff 	lea    rcx,[rbp-0x98]
  0011e: 00 	mov    r8,0x0
  00125:    	call   0x3302e
  0012a:    	lea    rdi,[rbp-0x8]
  0012e:    	mov    QWORD PTR [rbx],rdi
  00131: 34 	movabs r13,0x563439851590
  0013b:    	test   rax,rax
  0013e:    	je     0xfffe36d3
  00144: ff 	mov    QWORD PTR [rbp-0x90],rax
:00002 
:00004 %2 = %13
  0014b: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00152:    	mov    QWORD PTR [rbp-0x38],rax
:00005 %13 = literal[2.0]
  00156: 00 	movq   xmm2,QWORD PTR [rip+0x22ba]        # 0x2418
  0015e: 00 	mov    rax,0x2
  00165: ff 	mov    QWORD PTR [rbp-0x90],rax
:00006 %14 = literal[3.14159265]
  0016c: 00 	movq   xmm3,QWORD PTR [rip+0x22b4]        # 0x2428
  00174: da 	movabs rax,0x490fda9e46a78a
  0017e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00007 %13 = %13 * %14                      [Float][Float]
  00185:    	mulsd  xmm2,xmm3
:00008 %14 = %0.call rand()                 [Scene]
  00189:    	mov    rdi,QWORD PTR [rbp-0x28]
  0018d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe60fd],0x26        # 0xfffe6291
  00194:    	jne    0x33060
  0019a: 00 	mov    r9,0x0
  001a1:    	sub    rsp,0x10
  001a5:    	movq   QWORD PTR [rsp],xmm2
  001aa:    	mov    rdx,rdi
  001ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001b6:    	mov    QWORD PTR [rsp-0x38],rcx
  001bb:    	mov    rax,QWORD PTR [rbx]
  001be:    	lea    rdi,[rsp-0x18]
  001c3:    	mov    QWORD PTR [rdi],rax
  001c6:    	mov    QWORD PTR [rbx],rdi
  001c9: ff 	lea    rcx,[rbp-0xa0]
  001d0: 00 	mov    r8,0x0
  001d7:    	call   0x3307f
  001dc:    	lea    rdi,[rbp-0x8]
  001e0:    	mov    QWORD PTR [rbx],rdi
  001e3:    	movq   xmm2,QWORD PTR [rsp]
  001e8:    	add    rsp,0x10
  001ec: 34 	movabs r13,0x563439851600
  001f6:    	test   rax,rax
  001f9:    	je     0xfffe36d3
  001ff: ff 	mov    QWORD PTR [rbp-0x98],rax
:00009 
:00011 %3 = %13 * %14                       [Float][Float]
  00206: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0020d: 00 	test   rdi,0x1
  00214:    	jne    0x330b1
  0021a: 00 	test   rdi,0x2
  00221:    	je     0x25d
  00227:    	xorps  xmm3,xmm3
  0022a: 00 	movabs rax,0x8000000000000002
  00234:    	cmp    rdi,rax
  00237:    	je     0x26f
  0023d:    	mov    rax,rdi
  00240:    	sar    rax,0x3f
  00244:    	add    rax,0x2
  00248:    	and    rdi,0xfffffffffffffffc
  0024c:    	or     rdi,rax
  0024f:    	rol    rdi,0x3d
  00253:    	movq   xmm3,rdi
  00258:    	jmp    0x26f
  0025d:    	call   0xfffe372c
  00262:    	test   rax,rax
  00265:    	je     0x330b1
  0026b:    	movq   xmm3,xmm0
  0026f:    	movq   xmm4,xmm2
  00273:    	mulsd  xmm4,xmm3
:00012 %14 = const[Math]                    [Math]
  00277: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe601a]        # 0xfffe6298
  0027e: 00 	cmp    rax,QWORD PTR [rip+0x21c3]        # 0x2448
  00285:    	jne    0x330d0
  0028b: 00 	mov    rax,QWORD PTR [rip+0x21a6]        # 0x2438
  00292: ff 	mov    QWORD PTR [rbp-0x98],rax
:00013 %15 = %3
:00014 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
  00299: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002a0: 00 	test   rdi,0x7
  002a7:    	jne    0x33134
  002ad:    	cmp    DWORD PTR [rdi+0x4],0x21
  002b1:    	jne    0x33134
  002b7: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5fd3],0x26        # 0xfffe6291
  002be:    	jne    0x33134
  002c4:    	sub    rsp,0x10
  002c8:    	movq   QWORD PTR [rsp],xmm2
  002cd:    	movq   QWORD PTR [rsp+0x8],xmm4
  002d3:    	movq   xmm0,xmm4
  002d7: 34 	movabs rax,0x563437f28290
  002e1:    	call   rax
  002e3:    	movq   xmm2,QWORD PTR [rsp]
  002e8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  002ee:    	add    rsp,0x10
  002f2:    	movq   xmm2,xmm0
:00015 
:00017 %15 = const[Math]                    [Math]
  002f6: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe5f9b]        # 0xfffe6298
  002fd: 00 	cmp    rax,QWORD PTR [rip+0x2164]        # 0x2468
  00304:    	jne    0x33157
  0030a: 00 	mov    rax,QWORD PTR [rip+0x2147]        # 0x2458
  00311: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00018 %16 = literal[1.0]
  00318: 00 	movq   xmm3,QWORD PTR [rip+0x2158]        # 0x2478
  00320: 00 	movabs rax,0xff80000000000002
  0032a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00019 %16 = %16 - %2                       [Float][Float]
  00331:    	mov    rdi,QWORD PTR [rbp-0x38]
  00335: 00 	test   rdi,0x1
  0033c:    	jne    0x331bb
  00342: 00 	test   rdi,0x2
  00349:    	je     0x385
  0034f:    	xorps  xmm5,xmm5
  00352: 00 	movabs rax,0x8000000000000002
  0035c:    	cmp    rdi,rax
  0035f:    	je     0x397
  00365:    	mov    rax,rdi
  00368:    	sar    rax,0x3f
  0036c:    	add    rax,0x2
  00370:    	and    rdi,0xfffffffffffffffc
  00374:    	or     rdi,rax
  00377:    	rol    rdi,0x3d
  0037b:    	movq   xmm5,rdi
  00380:    	jmp    0x397
  00385:    	call   0xfffe372c
  0038a:    	test   rax,rax
  0038d:    	je     0x331bb
  00393:    	movq   xmm5,xmm0
  00397:    	subsd  xmm3,xmm5
:00020 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  0039b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  003a2: 00 	test   rdi,0x7
  003a9:    	jne    0x331e7
  003af:    	cmp    DWORD PTR [rdi+0x4],0x21
  003b3:    	jne    0x331e7
  003b9: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5ed1],0x26        # 0xfffe6291
  003c0:    	jne    0x331e7
  003c6:    	sqrtsd xmm6,xmm3
:00021 
:00023 %4 = %13 * %14                       [Float][Float]
  003ca:    	movq   xmm7,xmm2
  003ce:    	mulsd  xmm7,xmm6
:00024 %14 = const[Math]                    [Math]
  003d2: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe5ebf]        # 0xfffe6298
  003d9: 00 	cmp    rax,QWORD PTR [rip+0x20b8]        # 0x2498
  003e0:    	jne    0x33223
  003e6: 00 	mov    rax,QWORD PTR [rip+0x209b]        # 0x2488
  003ed: ff 	mov    QWORD PTR [rbp-0x98],rax
:00025 %15 = %3
:00026 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
  003f4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003fb: 00 	test   rdi,0x7
  00402:    	jne    0x332ab
  00408:    	cmp    DWORD PTR [rdi+0x4],0x21
  0040c:    	jne    0x332ab
  00412: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5e78],0x26        # 0xfffe6291
  00419:    	jne    0x332ab
  0041f:    	sub    rsp,0x30
  00423:    	movq   QWORD PTR [rsp],xmm2
  00428:    	movq   QWORD PTR [rsp+0x8],xmm3
  0042e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00434:    	movq   QWORD PTR [rsp+0x18],xmm5
  0043a:    	movq   QWORD PTR [rsp+0x20],xmm7
  00440:    	movq   xmm0,xmm4
  00444: 34 	movabs rax,0x563437f282a0
  0044e:    	call   rax
  00450:    	movq   xmm2,QWORD PTR [rsp]
  00455:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0045b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00461:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00467:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0046d:    	add    rsp,0x30
  00471:    	movq   xmm2,xmm0
:00027 
:00029 %15 = const[Math]                    [Math]
  00475: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe5e1c]        # 0xfffe6298
  0047c: 00 	cmp    rax,QWORD PTR [rip+0x2035]        # 0x24b8
  00483:    	jne    0x332eb
  00489: 00 	mov    rax,QWORD PTR [rip+0x2018]        # 0x24a8
  00490: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00030 %16 = literal[1.0]
  00497: 00 	movq   xmm3,QWORD PTR [rip+0x2029]        # 0x24c8
  0049f: 00 	movabs rax,0xff80000000000002
  004a9: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00031 %16 = %16 - %2                       [Float][Float]
  004b0:    	subsd  xmm3,xmm5
:00032 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  004b4: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  004bb: 00 	test   rdi,0x7
  004c2:    	jne    0x33373
  004c8:    	cmp    DWORD PTR [rdi+0x4],0x21
  004cc:    	jne    0x33373
  004d2: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5db8],0x26        # 0xfffe6291
  004d9:    	jne    0x33373
  004df:    	sqrtsd xmm6,xmm3
:00033 
:00035 %5 = %13 * %14                       [Float][Float]
  004e3:    	movq   xmm8,xmm2
  004e8:    	mulsd  xmm8,xmm6
:00036 %13 = const[Math]                    [Math]
  004ed: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe5da4]        # 0xfffe6298
  004f4: 00 	cmp    rax,QWORD PTR [rip+0x1fed]        # 0x24e8
  004fb:    	jne    0x333bc
  00501: 00 	mov    rax,QWORD PTR [rip+0x1fd0]        # 0x24d8
  00508: ff 	mov    QWORD PTR [rbp-0x90],rax
:00037 %14 = %2
:00038 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  0050f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00516: 00 	test   rdi,0x7
  0051d:    	jne    0x33452
  00523:    	cmp    DWORD PTR [rdi+0x4],0x21
  00527:    	jne    0x33452
  0052d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5d5d],0x26        # 0xfffe6291
  00534:    	jne    0x33452
  0053a:    	sqrtsd xmm2,xmm5
:00039 
:00041 %14 = dynvar(2, %2)
  0053e:    	mov    rax,QWORD PTR [rbp-0x10]
  00542:    	mov    rax,QWORD PTR [rax]
  00545:    	mov    rax,QWORD PTR [rax-0x28]
  00549: ff 	mov    QWORD PTR [rbp-0x98],rax
:00042 %15 = 0: i32
  00550: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00043 %14 = %14.[%15]                      [Array][Integer]
  0055b:    	sub    rsp,0x30
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576:    	movq   QWORD PTR [rsp+0x20],xmm7
  0057c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00583: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  0058a: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00591:    	mov    rdi,rbx
  00594:    	mov    rsi,r12
  00597: 34 	movabs r8,0x563439851818
  005a1: 34 	movabs rax,0x563437f47370
  005ab:    	call   rax
  005ad:    	movq   xmm2,QWORD PTR [rsp]
  005b2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005b8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005be:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005c4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005ca: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  005d1:    	add    rsp,0x30
  005d5: 34 	movabs r13,0x563439851820
  005df:    	test   rax,rax
  005e2:    	je     0xfffe36d3
  005e8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00044 %13 = %14.call x()                   [Vec]
  005ef: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  005f6: 00 	test   rdi,0x7
  005fd:    	jne    0x334a9
  00603:    	cmp    DWORD PTR [rdi+0x4],0x28
  00607:    	jne    0x334a9
  0060d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5c7d],0x26        # 0xfffe6291
  00614:    	jne    0x334a9
  0061a:    	mov    esi,DWORD PTR [rip+0x1ed4]        # 0x24f4
  00620:    	cmp    esi,0xffffffff
  00623:    	je     0x334fd
  00629:    	cmp    WORD PTR [rdi+0x2],0x3
  0062e:    	jne    0x647
  00634:    	cmp    esi,0x6
  00637:    	jge    0x647
  0063d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00642:    	jmp    0x6a3
  00647:    	sub    rsp,0x30
  0064b:    	movq   QWORD PTR [rsp],xmm2
  00650:    	movq   QWORD PTR [rsp+0x8],xmm3
  00656:    	movq   QWORD PTR [rsp+0x10],xmm4
  0065c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00662:    	movq   QWORD PTR [rsp+0x20],xmm7
  00668: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0066f: 34 	movabs rax,0x563437ed0590
  00679:    	call   rax
  0067b:    	movq   xmm2,QWORD PTR [rsp]
  00680:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00686:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0068c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00692:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00698: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0069f:    	add    rsp,0x30
  006a3: ff 	mov    QWORD PTR [rbp-0x90],rax
:00045 
:00047 %13 = %4 * %13                       [Float][Float]
  006aa: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  006b1: 00 	test   rdi,0x1
  006b8:    	jne    0x33576
  006be: 00 	test   rdi,0x2
  006c5:    	je     0x701
  006cb:    	xorps  xmm6,xmm6
  006ce: 00 	movabs rax,0x8000000000000002
  006d8:    	cmp    rdi,rax
  006db:    	je     0x713
  006e1:    	mov    rax,rdi
  006e4:    	sar    rax,0x3f
  006e8:    	add    rax,0x2
  006ec:    	and    rdi,0xfffffffffffffffc
  006f0:    	or     rdi,rax
  006f3:    	rol    rdi,0x3d
  006f7:    	movq   xmm6,rdi
  006fc:    	jmp    0x713
  00701:    	call   0xfffe372c
  00706:    	test   rax,rax
  00709:    	je     0x33576
  0070f:    	movq   xmm6,xmm0
  00713:    	mulsd  xmm6,xmm7
:00048 %15 = dynvar(2, %2)
  00717:    	mov    rax,QWORD PTR [rbp-0x10]
  0071b:    	mov    rax,QWORD PTR [rax]
  0071e:    	mov    rax,QWORD PTR [rax-0x28]
  00722: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00049 %16 = 1: i32
  00729: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00050 %15 = %15.[%16]                      [Array][Integer]
  00734:    	sub    rsp,0x30
  00738:    	movq   QWORD PTR [rsp],xmm2
  0073d:    	movq   QWORD PTR [rsp+0x8],xmm4
  00743:    	movq   QWORD PTR [rsp+0x10],xmm5
  00749:    	movq   QWORD PTR [rsp+0x18],xmm6
  0074f:    	movq   QWORD PTR [rsp+0x20],xmm7
  00755: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0075c: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00763: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0076a:    	mov    rdi,rbx
  0076d:    	mov    rsi,r12
  00770: 34 	movabs r8,0x563439851888
  0077a: 34 	movabs rax,0x563437f47370
  00784:    	call   rax
  00786:    	movq   xmm2,QWORD PTR [rsp]
  0078b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00791:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00797:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0079d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007a3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  007aa:    	add    rsp,0x30
  007ae: 34 	movabs r13,0x563439851890
  007b8:    	test   rax,rax
  007bb:    	je     0xfffe36d3
  007c1: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00051 %14 = %15.call x()                   [Vec]
  007c8: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  007cf: 00 	test   rdi,0x7
  007d6:    	jne    0x335ca
  007dc:    	cmp    DWORD PTR [rdi+0x4],0x28
  007e0:    	jne    0x335ca
  007e6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5aa4],0x26        # 0xfffe6291
  007ed:    	jne    0x335ca
  007f3:    	mov    esi,DWORD PTR [rip+0x1d03]        # 0x24fc
  007f9:    	cmp    esi,0xffffffff
  007fc:    	je     0x3361e
  00802:    	cmp    WORD PTR [rdi+0x2],0x3
  00807:    	jne    0x820
  0080d:    	cmp    esi,0x6
  00810:    	jge    0x820
  00816:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0081b:    	jmp    0x87c
  00820:    	sub    rsp,0x30
  00824:    	movq   QWORD PTR [rsp],xmm2
  00829:    	movq   QWORD PTR [rsp+0x8],xmm4
  0082f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00835:    	movq   QWORD PTR [rsp+0x18],xmm6
  0083b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00841: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00848: 34 	movabs rax,0x563437ed0590
  00852:    	call   rax
  00854:    	movq   xmm2,QWORD PTR [rsp]
  00859:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0085f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00865:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0086b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00871: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00878:    	add    rsp,0x30
  0087c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00052 
:00054 %14 = %5 * %14                       [Float][Float]
  00883: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0088a: 00 	test   rdi,0x1
  00891:    	jne    0x33697
  00897: 00 	test   rdi,0x2
  0089e:    	je     0x8da
  008a4:    	xorps  xmm3,xmm3
  008a7: 00 	movabs rax,0x8000000000000002
  008b1:    	cmp    rdi,rax
  008b4:    	je     0x8ec
  008ba:    	mov    rax,rdi
  008bd:    	sar    rax,0x3f
  008c1:    	add    rax,0x2
  008c5:    	and    rdi,0xfffffffffffffffc
  008c9:    	or     rdi,rax
  008cc:    	rol    rdi,0x3d
  008d0:    	movq   xmm3,rdi
  008d5:    	jmp    0x8ec
  008da:    	call   0xfffe372c
  008df:    	test   rax,rax
  008e2:    	je     0x33697
  008e8:    	movq   xmm3,xmm0
  008ec:    	mulsd  xmm3,xmm8
:00055 %13 = %13 + %14                      [Float][Float]
  008f1:    	addsd  xmm6,xmm3
:00056 %15 = dynvar(2, %2)
  008f5:    	mov    rax,QWORD PTR [rbp-0x10]
  008f9:    	mov    rax,QWORD PTR [rax]
  008fc:    	mov    rax,QWORD PTR [rax-0x28]
  00900: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00057 %16 = 2: i32
  00907: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00058 %15 = %15.[%16]                      [Array][Integer]
  00912:    	sub    rsp,0x40
  00916:    	movq   QWORD PTR [rsp],xmm2
  0091b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00921:    	movq   QWORD PTR [rsp+0x10],xmm4
  00927:    	movq   QWORD PTR [rsp+0x18],xmm5
  0092d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00933:    	movq   QWORD PTR [rsp+0x28],xmm7
  00939: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00940: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00947: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0094e:    	mov    rdi,rbx
  00951:    	mov    rsi,r12
  00954: 34 	movabs r8,0x563439851908
  0095e: 34 	movabs rax,0x563437f47370
  00968:    	call   rax
  0096a:    	movq   xmm2,QWORD PTR [rsp]
  0096f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00975:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0097b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00981:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00987:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0098d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00994:    	add    rsp,0x40
  00998: 34 	movabs r13,0x563439851910
  009a2:    	test   rax,rax
  009a5:    	je     0xfffe36d3
  009ab: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00059 %14 = %15.call x()                   [Vec]
  009b2: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  009b9: 00 	test   rdi,0x7
  009c0:    	jne    0x336eb
  009c6:    	cmp    DWORD PTR [rdi+0x4],0x28
  009ca:    	jne    0x336eb
  009d0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe58ba],0x26        # 0xfffe6291
  009d7:    	jne    0x336eb
  009dd:    	mov    esi,DWORD PTR [rip+0x1b21]        # 0x2504
  009e3:    	cmp    esi,0xffffffff
  009e6:    	je     0x3373f
  009ec:    	cmp    WORD PTR [rdi+0x2],0x3
  009f1:    	jne    0xa0a
  009f7:    	cmp    esi,0x6
  009fa:    	jge    0xa0a
  00a00:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a05:    	jmp    0xa66
  00a0a:    	sub    rsp,0x30
  00a0e:    	movq   QWORD PTR [rsp],xmm2
  00a13:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a19:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a1f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a25:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a2b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a32: 34 	movabs rax,0x563437ed0590
  00a3c:    	call   rax
  00a3e:    	movq   xmm2,QWORD PTR [rsp]
  00a43:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a49:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a4f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a55:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00a5b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00a62:    	add    rsp,0x30
  00a66: ff 	mov    QWORD PTR [rbp-0x98],rax
:00060 
:00062 %14 = %6 * %14                       [Float][Float]
  00a6d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a74: 00 	test   rdi,0x1
  00a7b:    	jne    0x337b8
  00a81: 00 	test   rdi,0x2
  00a88:    	je     0xac4
  00a8e:    	xorps  xmm3,xmm3
  00a91: 00 	movabs rax,0x8000000000000002
  00a9b:    	cmp    rdi,rax
  00a9e:    	je     0xad6
  00aa4:    	mov    rax,rdi
  00aa7:    	sar    rax,0x3f
  00aab:    	add    rax,0x2
  00aaf:    	and    rdi,0xfffffffffffffffc
  00ab3:    	or     rdi,rax
  00ab6:    	rol    rdi,0x3d
  00aba:    	movq   xmm3,rdi
  00abf:    	jmp    0xad6
  00ac4:    	call   0xfffe372c
  00ac9:    	test   rax,rax
  00acc:    	je     0x337b8
  00ad2:    	movq   xmm3,xmm0
  00ad6:    	mulsd  xmm3,xmm2
:00063 %7 = %13 + %14                       [Float][Float]
  00ada:    	movq   xmm9,xmm6
  00adf:    	addsd  xmm9,xmm3
:00064 %14 = dynvar(2, %2)
  00ae4:    	mov    rax,QWORD PTR [rbp-0x10]
  00ae8:    	mov    rax,QWORD PTR [rax]
  00aeb:    	mov    rax,QWORD PTR [rax-0x28]
  00aef: ff 	mov    QWORD PTR [rbp-0x98],rax
:00065 %15 = 0: i32
  00af6: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00066 %14 = %14.[%15]                      [Array][Integer]
  00b01:    	sub    rsp,0x40
  00b05:    	movq   QWORD PTR [rsp],xmm2
  00b0a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b10:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b16:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b1c:    	movq   QWORD PTR [rsp+0x20],xmm7
  00b22: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00b29: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00b30: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00b37: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00b3e:    	mov    rdi,rbx
  00b41:    	mov    rsi,r12
  00b44: 34 	movabs r8,0x563439851988
  00b4e: 34 	movabs rax,0x563437f47370
  00b58:    	call   rax
  00b5a:    	movq   xmm2,QWORD PTR [rsp]
  00b5f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b65:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b6b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b71:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00b77: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00b7e: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00b85:    	add    rsp,0x40
  00b89: 34 	movabs r13,0x563439851990
  00b93:    	test   rax,rax
  00b96:    	je     0xfffe36d3
  00b9c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00067 %13 = %14.call y()                   [Vec]
  00ba3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00baa: 00 	test   rdi,0x7
  00bb1:    	jne    0x3380c
  00bb7:    	cmp    DWORD PTR [rdi+0x4],0x28
  00bbb:    	jne    0x3380c
  00bc1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe56c9],0x26        # 0xfffe6291
  00bc8:    	jne    0x3380c
  00bce:    	mov    esi,DWORD PTR [rip+0x1938]        # 0x250c
  00bd4:    	cmp    esi,0xffffffff
  00bd7:    	je     0x3385e
  00bdd:    	cmp    WORD PTR [rdi+0x2],0x3
  00be2:    	jne    0xbfb
  00be8:    	cmp    esi,0x6
  00beb:    	jge    0xbfb
  00bf1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00bf6:    	jmp    0xc59
  00bfb:    	sub    rsp,0x30
  00bff:    	movq   QWORD PTR [rsp],xmm2
  00c04:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c0a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c10:    	movq   QWORD PTR [rsp+0x18],xmm7
  00c16: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00c1d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00c24: 34 	movabs rax,0x563437ed0590
  00c2e:    	call   rax
  00c30:    	movq   xmm2,QWORD PTR [rsp]
  00c35:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c3b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c41:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c47: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00c4e: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00c55:    	add    rsp,0x30
  00c59: ff 	mov    QWORD PTR [rbp-0x90],rax
:00068 
:00070 %13 = %4 * %13                       [Float][Float]
  00c60: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00c67: 00 	test   rdi,0x1
  00c6e:    	jne    0x338d9
  00c74: 00 	test   rdi,0x2
  00c7b:    	je     0xcb7
  00c81:    	xorps  xmm3,xmm3
  00c84: 00 	movabs rax,0x8000000000000002
  00c8e:    	cmp    rdi,rax
  00c91:    	je     0xcc9
  00c97:    	mov    rax,rdi
  00c9a:    	sar    rax,0x3f
  00c9e:    	add    rax,0x2
  00ca2:    	and    rdi,0xfffffffffffffffc
  00ca6:    	or     rdi,rax
  00ca9:    	rol    rdi,0x3d
  00cad:    	movq   xmm3,rdi
  00cb2:    	jmp    0xcc9
  00cb7:    	call   0xfffe372c
  00cbc:    	test   rax,rax
  00cbf:    	je     0x338d9
  00cc5:    	movq   xmm3,xmm0
  00cc9:    	mulsd  xmm3,xmm7
:00071 %15 = dynvar(2, %2)
  00ccd:    	mov    rax,QWORD PTR [rbp-0x10]
  00cd1:    	mov    rax,QWORD PTR [rax]
  00cd4:    	mov    rax,QWORD PTR [rax-0x28]
  00cd8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00072 %16 = 1: i32
  00cdf: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00073 %15 = %15.[%16]                      [Array][Integer]
  00cea:    	sub    rsp,0x40
  00cee:    	movq   QWORD PTR [rsp],xmm2
  00cf3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cf9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cff:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d05:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d0b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d12: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d19: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00d20: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00d27:    	mov    rdi,rbx
  00d2a:    	mov    rsi,r12
  00d2d: 34 	movabs r8,0x5634398519f8
  00d37: 34 	movabs rax,0x563437f47370
  00d41:    	call   rax
  00d43:    	movq   xmm2,QWORD PTR [rsp]
  00d48:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d4e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d54:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d5a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d60: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00d67: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d6e:    	add    rsp,0x40
  00d72: 34 	movabs r13,0x563439851a00
  00d7c:    	test   rax,rax
  00d7f:    	je     0xfffe36d3
  00d85: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00074 %14 = %15.call y()                   [Vec]
  00d8c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00d93: 00 	test   rdi,0x7
  00d9a:    	jne    0x3392b
  00da0:    	cmp    DWORD PTR [rdi+0x4],0x28
  00da4:    	jne    0x3392b
  00daa: 26 	cmp    DWORD PTR [rip+0xfffffffffffe54e0],0x26        # 0xfffe6291
  00db1:    	jne    0x3392b
  00db7:    	mov    esi,DWORD PTR [rip+0x1757]        # 0x2514
  00dbd:    	cmp    esi,0xffffffff
  00dc0:    	je     0x3398d
  00dc6:    	cmp    WORD PTR [rdi+0x2],0x3
  00dcb:    	jne    0xde4
  00dd1:    	cmp    esi,0x6
  00dd4:    	jge    0xde4
  00dda:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ddf:    	jmp    0xe4e
  00de4:    	sub    rsp,0x40
  00de8:    	movq   QWORD PTR [rsp],xmm2
  00ded:    	movq   QWORD PTR [rsp+0x8],xmm3
  00df3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00df9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00dff:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e05: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00e0c: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00e13: 34 	movabs rax,0x563437ed0590
  00e1d:    	call   rax
  00e1f:    	movq   xmm2,QWORD PTR [rsp]
  00e24:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e2a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e30:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e36:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e3c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00e43: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00e4a:    	add    rsp,0x40
  00e4e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00075 
:00077 %14 = %5 * %14                       [Float][Float]
  00e55: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e5c: 00 	test   rdi,0x1
  00e63:    	jne    0x33a14
  00e69: 00 	test   rdi,0x2
  00e70:    	je     0xeac
  00e76:    	xorps  xmm6,xmm6
  00e79: 00 	movabs rax,0x8000000000000002
  00e83:    	cmp    rdi,rax
  00e86:    	je     0xebe
  00e8c:    	mov    rax,rdi
  00e8f:    	sar    rax,0x3f
  00e93:    	add    rax,0x2
  00e97:    	and    rdi,0xfffffffffffffffc
  00e9b:    	or     rdi,rax
  00e9e:    	rol    rdi,0x3d
  00ea2:    	movq   xmm6,rdi
  00ea7:    	jmp    0xebe
  00eac:    	call   0xfffe372c
  00eb1:    	test   rax,rax
  00eb4:    	je     0x33a14
  00eba:    	movq   xmm6,xmm0
  00ebe:    	mulsd  xmm6,xmm8
:00078 %13 = %13 + %14                      [Float][Float]
  00ec3:    	addsd  xmm3,xmm6
:00079 %15 = dynvar(2, %2)
  00ec7:    	mov    rax,QWORD PTR [rbp-0x10]
  00ecb:    	mov    rax,QWORD PTR [rax]
  00ece:    	mov    rax,QWORD PTR [rax-0x28]
  00ed2: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00080 %16 = 2: i32
  00ed9: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00081 %15 = %15.[%16]                      [Array][Integer]
  00ee4:    	sub    rsp,0x40
  00ee8:    	movq   QWORD PTR [rsp],xmm2
  00eed:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ef3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ef9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00eff:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f05:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f0b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f12: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f19: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00f20: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00f27:    	mov    rdi,rbx
  00f2a:    	mov    rsi,r12
  00f2d: 34 	movabs r8,0x563439851a78
  00f37: 34 	movabs rax,0x563437f47370
  00f41:    	call   rax
  00f43:    	movq   xmm2,QWORD PTR [rsp]
  00f48:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f4e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f54:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f5a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f60:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f66: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f6d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f74:    	add    rsp,0x40
  00f78: 34 	movabs r13,0x563439851a80
  00f82:    	test   rax,rax
  00f85:    	je     0xfffe36d3
  00f8b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00082 %14 = %15.call y()                   [Vec]
  00f92: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00f99: 00 	test   rdi,0x7
  00fa0:    	jne    0x33a76
  00fa6:    	cmp    DWORD PTR [rdi+0x4],0x28
  00faa:    	jne    0x33a76
  00fb0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe52da],0x26        # 0xfffe6291
  00fb7:    	jne    0x33a76
  00fbd:    	mov    esi,DWORD PTR [rip+0x1559]        # 0x251c
  00fc3:    	cmp    esi,0xffffffff
  00fc6:    	je     0x33ad8
  00fcc:    	cmp    WORD PTR [rdi+0x2],0x3
  00fd1:    	jne    0xfea
  00fd7:    	cmp    esi,0x6
  00fda:    	jge    0xfea
  00fe0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00fe5:    	jmp    0x1054
  00fea:    	sub    rsp,0x40
  00fee:    	movq   QWORD PTR [rsp],xmm2
  00ff3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ff9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fff:    	movq   QWORD PTR [rsp+0x18],xmm5
  01005:    	movq   QWORD PTR [rsp+0x20],xmm7
  0100b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01012: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01019: 34 	movabs rax,0x563437ed0590
  01023:    	call   rax
  01025:    	movq   xmm2,QWORD PTR [rsp]
  0102a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01030:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01036:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0103c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01042: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01049: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01050:    	add    rsp,0x40
  01054: ff 	mov    QWORD PTR [rbp-0x98],rax
:00083 
:00085 %14 = %6 * %14                       [Float][Float]
  0105b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01062: 00 	test   rdi,0x1
  01069:    	jne    0x33b5f
  0106f: 00 	test   rdi,0x2
  01076:    	je     0x10b2
  0107c:    	xorps  xmm6,xmm6
  0107f: 00 	movabs rax,0x8000000000000002
  01089:    	cmp    rdi,rax
  0108c:    	je     0x10c4
  01092:    	mov    rax,rdi
  01095:    	sar    rax,0x3f
  01099:    	add    rax,0x2
  0109d:    	and    rdi,0xfffffffffffffffc
  010a1:    	or     rdi,rax
  010a4:    	rol    rdi,0x3d
  010a8:    	movq   xmm6,rdi
  010ad:    	jmp    0x10c4
  010b2:    	call   0xfffe372c
  010b7:    	test   rax,rax
  010ba:    	je     0x33b5f
  010c0:    	movq   xmm6,xmm0
  010c4:    	mulsd  xmm6,xmm2
:00086 %8 = %13 + %14                       [Float][Float]
  010c8:    	movq   xmm10,xmm3
  010cd:    	addsd  xmm10,xmm6
:00087 %14 = dynvar(2, %2)
  010d2:    	mov    rax,QWORD PTR [rbp-0x10]
  010d6:    	mov    rax,QWORD PTR [rax]
  010d9:    	mov    rax,QWORD PTR [rax-0x28]
  010dd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 0: i32
  010e4: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00089 %14 = %14.[%15]                      [Array][Integer]
  010ef:    	sub    rsp,0x40
  010f3:    	movq   QWORD PTR [rsp],xmm2
  010f8:    	movq   QWORD PTR [rsp+0x8],xmm3
  010fe:    	movq   QWORD PTR [rsp+0x10],xmm4
  01104:    	movq   QWORD PTR [rsp+0x18],xmm5
  0110a:    	movq   QWORD PTR [rsp+0x20],xmm7
  01110: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01117: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0111e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01125: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  0112c: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01133:    	mov    rdi,rbx
  01136:    	mov    rsi,r12
  01139: 34 	movabs r8,0x563439851af8
  01143: 34 	movabs rax,0x563437f47370
  0114d:    	call   rax
  0114f:    	movq   xmm2,QWORD PTR [rsp]
  01154:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0115a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01160:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01166:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0116c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01173: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0117a: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01181:    	add    rsp,0x40
  01185: 34 	movabs r13,0x563439851b00
  0118f:    	test   rax,rax
  01192:    	je     0xfffe36d3
  01198: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %13 = %14.call z()                   [Vec]
  0119f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  011a6: 00 	test   rdi,0x7
  011ad:    	jne    0x33bc1
  011b3:    	cmp    DWORD PTR [rdi+0x4],0x28
  011b7:    	jne    0x33bc1
  011bd: 26 	cmp    DWORD PTR [rip+0xfffffffffffe50cd],0x26        # 0xfffe6291
  011c4:    	jne    0x33bc1
  011ca:    	mov    esi,DWORD PTR [rip+0x1354]        # 0x2524
  011d0:    	cmp    esi,0xffffffff
  011d3:    	je     0x33c21
  011d9:    	cmp    WORD PTR [rdi+0x2],0x3
  011de:    	jne    0x11f7
  011e4:    	cmp    esi,0x6
  011e7:    	jge    0x11f7
  011ed:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  011f2:    	jmp    0x1263
  011f7:    	sub    rsp,0x40
  011fb:    	movq   QWORD PTR [rsp],xmm2
  01200:    	movq   QWORD PTR [rsp+0x8],xmm4
  01206:    	movq   QWORD PTR [rsp+0x10],xmm5
  0120c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01212: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01219: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01220: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01227: 34 	movabs rax,0x563437ed0590
  01231:    	call   rax
  01233:    	movq   xmm2,QWORD PTR [rsp]
  01238:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0123e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01244:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0124a: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01251: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01258: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  0125f:    	add    rsp,0x40
  01263: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %13 = %4 * %13                       [Float][Float]
  0126a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01271: 00 	test   rdi,0x1
  01278:    	jne    0x33caa
  0127e: 00 	test   rdi,0x2
  01285:    	je     0x12c1
  0128b:    	xorps  xmm3,xmm3
  0128e: 00 	movabs rax,0x8000000000000002
  01298:    	cmp    rdi,rax
  0129b:    	je     0x12d3
  012a1:    	mov    rax,rdi
  012a4:    	sar    rax,0x3f
  012a8:    	add    rax,0x2
  012ac:    	and    rdi,0xfffffffffffffffc
  012b0:    	or     rdi,rax
  012b3:    	rol    rdi,0x3d
  012b7:    	movq   xmm3,rdi
  012bc:    	jmp    0x12d3
  012c1:    	call   0xfffe372c
  012c6:    	test   rax,rax
  012c9:    	je     0x33caa
  012cf:    	movq   xmm3,xmm0
  012d3:    	mulsd  xmm3,xmm7
:00094 %15 = dynvar(2, %2)
  012d7:    	mov    rax,QWORD PTR [rbp-0x10]
  012db:    	mov    rax,QWORD PTR [rax]
  012de:    	mov    rax,QWORD PTR [rax-0x28]
  012e2: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00095 %16 = 1: i32
  012e9: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00096 %15 = %15.[%16]                      [Array][Integer]
  012f4:    	sub    rsp,0x40
  012f8:    	movq   QWORD PTR [rsp],xmm2
  012fd:    	movq   QWORD PTR [rsp+0x8],xmm3
  01303:    	movq   QWORD PTR [rsp+0x10],xmm4
  01309:    	movq   QWORD PTR [rsp+0x18],xmm5
  0130f:    	movq   QWORD PTR [rsp+0x20],xmm7
  01315: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0131c: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01323: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0132a: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01331: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01338:    	mov    rdi,rbx
  0133b:    	mov    rsi,r12
  0133e: 34 	movabs r8,0x563439851b68
  01348: 34 	movabs rax,0x563437f47370
  01352:    	call   rax
  01354:    	movq   xmm2,QWORD PTR [rsp]
  01359:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0135f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01365:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0136b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01371: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01378: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0137f: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01386:    	add    rsp,0x40
  0138a: 34 	movabs r13,0x563439851b70
  01394:    	test   rax,rax
  01397:    	je     0xfffe36d3
  0139d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %14 = %15.call z()                   [Vec]
  013a4: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  013ab: 00 	test   rdi,0x7
  013b2:    	jne    0x33d0a
  013b8:    	cmp    DWORD PTR [rdi+0x4],0x28
  013bc:    	jne    0x33d0a
  013c2: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4ec8],0x26        # 0xfffe6291
  013c9:    	jne    0x33d0a
  013cf:    	mov    esi,DWORD PTR [rip+0x1157]        # 0x252c
  013d5:    	cmp    esi,0xffffffff
  013d8:    	je     0x33d7a
  013de:    	cmp    WORD PTR [rdi+0x2],0x3
  013e3:    	jne    0x13fc
  013e9:    	cmp    esi,0x6
  013ec:    	jge    0x13fc
  013f2:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  013f7:    	jmp    0x1474
  013fc:    	sub    rsp,0x40
  01400:    	movq   QWORD PTR [rsp],xmm2
  01405:    	movq   QWORD PTR [rsp+0x8],xmm3
  0140b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01411:    	movq   QWORD PTR [rsp+0x18],xmm5
  01417:    	movq   QWORD PTR [rsp+0x20],xmm7
  0141d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01424: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0142b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01432: 34 	movabs rax,0x563437ed0590
  0143c:    	call   rax
  0143e:    	movq   xmm2,QWORD PTR [rsp]
  01443:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01449:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0144f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01455:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0145b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01462: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01469: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01470:    	add    rsp,0x40
  01474: ff 	mov    QWORD PTR [rbp-0x98],rax
:00098 
:00100 %14 = %5 * %14                       [Float][Float]
  0147b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01482: 00 	test   rdi,0x1
  01489:    	jne    0x33e0f
  0148f: 00 	test   rdi,0x2
  01496:    	je     0x14d2
  0149c:    	xorps  xmm6,xmm6
  0149f: 00 	movabs rax,0x8000000000000002
  014a9:    	cmp    rdi,rax
  014ac:    	je     0x14e4
  014b2:    	mov    rax,rdi
  014b5:    	sar    rax,0x3f
  014b9:    	add    rax,0x2
  014bd:    	and    rdi,0xfffffffffffffffc
  014c1:    	or     rdi,rax
  014c4:    	rol    rdi,0x3d
  014c8:    	movq   xmm6,rdi
  014cd:    	jmp    0x14e4
  014d2:    	call   0xfffe372c
  014d7:    	test   rax,rax
  014da:    	je     0x33e0f
  014e0:    	movq   xmm6,xmm0
  014e4:    	mulsd  xmm6,xmm8
:00101 %13 = %13 + %14                      [Float][Float]
  014e9:    	addsd  xmm3,xmm6
:00102 %15 = dynvar(2, %2)
  014ed:    	mov    rax,QWORD PTR [rbp-0x10]
  014f1:    	mov    rax,QWORD PTR [rax]
  014f4:    	mov    rax,QWORD PTR [rax-0x28]
  014f8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00103 %16 = 2: i32
  014ff: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00104 %15 = %15.[%16]                      [Array][Integer]
  0150a:    	sub    rsp,0x50
  0150e:    	movq   QWORD PTR [rsp],xmm2
  01513:    	movq   QWORD PTR [rsp+0x8],xmm3
  01519:    	movq   QWORD PTR [rsp+0x10],xmm4
  0151f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01525:    	movq   QWORD PTR [rsp+0x20],xmm6
  0152b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01531: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01538: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0153f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01546: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  0154d: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01554:    	mov    rdi,rbx
  01557:    	mov    rsi,r12
  0155a: 34 	movabs r8,0x563439851be8
  01564: 34 	movabs rax,0x563437f47370
  0156e:    	call   rax
  01570:    	movq   xmm2,QWORD PTR [rsp]
  01575:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0157b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01581:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01587:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0158d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01593: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0159a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015a1: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015a8:    	add    rsp,0x50
  015ac: 34 	movabs r13,0x563439851bf0
  015b6:    	test   rax,rax
  015b9:    	je     0xfffe36d3
  015bf: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00105 %14 = %15.call z()                   [Vec]
  015c6: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  015cd: 00 	test   rdi,0x7
  015d4:    	jne    0x33e7f
  015da:    	cmp    DWORD PTR [rdi+0x4],0x28
  015de:    	jne    0x33e7f
  015e4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4ca6],0x26        # 0xfffe6291
  015eb:    	jne    0x33e7f
  015f1:    	mov    esi,DWORD PTR [rip+0xf3d]        # 0x2534
  015f7:    	cmp    esi,0xffffffff
  015fa:    	je     0x33eef
  01600:    	cmp    WORD PTR [rdi+0x2],0x3
  01605:    	jne    0x161e
  0160b:    	cmp    esi,0x6
  0160e:    	jge    0x161e
  01614:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01619:    	jmp    0x1696
  0161e:    	sub    rsp,0x40
  01622:    	movq   QWORD PTR [rsp],xmm2
  01627:    	movq   QWORD PTR [rsp+0x8],xmm3
  0162d:    	movq   QWORD PTR [rsp+0x10],xmm4
  01633:    	movq   QWORD PTR [rsp+0x18],xmm5
  01639:    	movq   QWORD PTR [rsp+0x20],xmm7
  0163f: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01646: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0164d: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01654: 34 	movabs rax,0x563437ed0590
  0165e:    	call   rax
  01660:    	movq   xmm2,QWORD PTR [rsp]
  01665:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0166b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01671:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01677:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0167d: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01684: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0168b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01692:    	add    rsp,0x40
  01696: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 
:00108 %14 = %6 * %14                       [Float][Float]
  0169d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  016a4: 00 	test   rdi,0x1
  016ab:    	jne    0x33f84
  016b1: 00 	test   rdi,0x2
  016b8:    	je     0x16f4
  016be:    	xorps  xmm6,xmm6
  016c1: 00 	movabs rax,0x8000000000000002
  016cb:    	cmp    rdi,rax
  016ce:    	je     0x1706
  016d4:    	mov    rax,rdi
  016d7:    	sar    rax,0x3f
  016db:    	add    rax,0x2
  016df:    	and    rdi,0xfffffffffffffffc
  016e3:    	or     rdi,rax
  016e6:    	rol    rdi,0x3d
  016ea:    	movq   xmm6,rdi
  016ef:    	jmp    0x1706
  016f4:    	call   0xfffe372c
  016f9:    	test   rax,rax
  016fc:    	je     0x33f84
  01702:    	movq   xmm6,xmm0
  01706:    	mulsd  xmm6,xmm2
:00109 %9 = %13 + %14                       [Float][Float]
  0170a:    	movq   xmm11,xmm3
  0170f:    	addsd  xmm11,xmm6
:00110 %13 = const[Vec]                     [Vec]
  01714: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe4b7d]        # 0xfffe6298
  0171b: 00 	cmp    rax,QWORD PTR [rip+0xe26]        # 0x2548
  01722:    	jne    0x33ff4
  01728: 00 	mov    rax,QWORD PTR [rip+0xe09]        # 0x2538
  0172f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00111 %14 = %7
:00112 %15 = %8
:00113 %16 = %9
:00114 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  01736:    	movq   xmm0,xmm9
  0173b:    	call   0xfffe381f
  01740: ff 	mov    QWORD PTR [rbp-0x98],rax
  01747:    	movq   xmm0,xmm10
  0174c:    	call   0xfffe381f
  01751: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01758:    	movq   xmm0,xmm11
  0175d:    	call   0xfffe381f
  01762: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01769: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01770: 00 	test   rdi,0x7
  01777:    	jne    0x340b4
  0177d:    	cmp    DWORD PTR [rdi+0x4],0x29
  01781:    	jne    0x340b4
  01787: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4b03],0x26        # 0xfffe6291
  0178e:    	jne    0x340b4
  01794: 00 	mov    r9,0x0
  0179b:    	sub    rsp,0x40
  0179f:    	movq   QWORD PTR [rsp],xmm2
  017a4:    	movq   QWORD PTR [rsp+0x8],xmm4
  017aa:    	movq   QWORD PTR [rsp+0x10],xmm5
  017b0:    	movq   QWORD PTR [rsp+0x18],xmm7
  017b6: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  017bd: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  017c4: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  017cb: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  017d2:    	mov    rdx,rdi
  017d5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017de:    	mov    QWORD PTR [rsp-0x38],rcx
  017e3:    	mov    rax,QWORD PTR [rbx]
  017e6:    	lea    rdi,[rsp-0x18]
  017eb:    	mov    QWORD PTR [rdi],rax
  017ee:    	mov    QWORD PTR [rbx],rdi
  017f1: ff 	lea    rcx,[rbp-0x98]
  017f8: 00 	mov    r8,0x3
  017ff:    	call   0x34122
  01804:    	lea    rdi,[rbp-0x8]
  01808:    	mov    QWORD PTR [rbx],rdi
  0180b:    	movq   xmm2,QWORD PTR [rsp]
  01810:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01816:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0181c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01822: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01829: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01830: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01837: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0183e:    	add    rsp,0x40
  01842: 34 	movabs r13,0x563439851ca0
  0184c:    	test   rax,rax
  0184f:    	je     0xfffe36d3
  01855:    	mov    QWORD PTR [rbp-0x78],rax
:00115 
:00117 %13 = const[Ray]                     [Ray]
  01859: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe4a38]        # 0xfffe6298
  01860: 00 	cmp    rax,QWORD PTR [rip+0xd01]        # 0x2568
  01867:    	jne    0x34154
  0186d: 00 	mov    rax,QWORD PTR [rip+0xce4]        # 0x2558
  01874: ff 	mov    QWORD PTR [rbp-0x90],rax
:00118 %14 = dynvar(2, %7)
  0187b:    	mov    rax,QWORD PTR [rbp-0x10]
  0187f:    	mov    rax,QWORD PTR [rax]
  01882:    	mov    rax,QWORD PTR [rax-0x50]
  01886: ff 	mov    QWORD PTR [rbp-0x98],rax
:00119 %15 = %10
  0188d:    	mov    rax,QWORD PTR [rbp-0x78]
  01891: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00120 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01898: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0189f: 00 	test   rdi,0x7
  018a6:    	jne    0x34208
  018ac:    	cmp    DWORD PTR [rdi+0x4],0x2f
  018b0:    	jne    0x34208
  018b6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe49d4],0x26        # 0xfffe6291
  018bd:    	jne    0x34208
  018c3: 00 	mov    r9,0x0
  018ca:    	sub    rsp,0x40
  018ce:    	movq   QWORD PTR [rsp],xmm2
  018d3:    	movq   QWORD PTR [rsp+0x8],xmm4
  018d9:    	movq   QWORD PTR [rsp+0x10],xmm5
  018df:    	movq   QWORD PTR [rsp+0x18],xmm7
  018e5: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  018ec: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  018f3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  018fa: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01901:    	mov    rdx,rdi
  01904: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0190d:    	mov    QWORD PTR [rsp-0x38],rcx
  01912:    	mov    rax,QWORD PTR [rbx]
  01915:    	lea    rdi,[rsp-0x18]
  0191a:    	mov    QWORD PTR [rdi],rax
  0191d:    	mov    QWORD PTR [rbx],rdi
  01920: ff 	lea    rcx,[rbp-0x98]
  01927: 00 	mov    r8,0x2
  0192e:    	call   0x34276
  01933:    	lea    rdi,[rbp-0x8]
  01937:    	mov    QWORD PTR [rbx],rdi
  0193a:    	movq   xmm2,QWORD PTR [rsp]
  0193f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01945:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0194b:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01951: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01958: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0195f: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01966: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0196d:    	add    rsp,0x40
  01971: 34 	movabs r13,0x563439851d00
  0197b:    	test   rax,rax
  0197e:    	je     0xfffe36d3
  01984:    	mov    QWORD PTR [rbp-0x80],rax
:00121 
:00123 %13 = const[Isect]                   [Isect]
  01988: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe4909]        # 0xfffe6298
  0198f: 00 	cmp    rax,QWORD PTR [rip+0xbf2]        # 0x2588
  01996:    	jne    0x342a8
  0199c: 00 	mov    rax,QWORD PTR [rip+0xbd5]        # 0x2578
  019a3: ff 	mov    QWORD PTR [rbp-0x90],rax
:00124 %12 = %13.call new()                 [#<Class:Isect>]
  019aa: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  019b1: 00 	test   rdi,0x7
  019b8:    	jne    0x3435c
  019be:    	cmp    DWORD PTR [rdi+0x4],0x31
  019c2:    	jne    0x3435c
  019c8: 26 	cmp    DWORD PTR [rip+0xfffffffffffe48c2],0x26        # 0xfffe6291
  019cf:    	jne    0x3435c
  019d5: 00 	mov    r9,0x0
  019dc:    	sub    rsp,0x40
  019e0:    	movq   QWORD PTR [rsp],xmm2
  019e5:    	movq   QWORD PTR [rsp+0x8],xmm4
  019eb:    	movq   QWORD PTR [rsp+0x10],xmm5
  019f1:    	movq   QWORD PTR [rsp+0x18],xmm7
  019f7: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  019fe: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01a05: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01a0c: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01a13:    	mov    rdx,rdi
  01a16: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a1f:    	mov    QWORD PTR [rsp-0x38],rcx
  01a24:    	mov    rax,QWORD PTR [rbx]
  01a27:    	lea    rdi,[rsp-0x18]
  01a2c:    	mov    QWORD PTR [rdi],rax
  01a2f:    	mov    QWORD PTR [rbx],rdi
  01a32: ff 	lea    rcx,[rbp-0x98]
  01a39: 00 	mov    r8,0x0
  01a40:    	call   0x343ca
  01a45:    	lea    rdi,[rbp-0x8]
  01a49:    	mov    QWORD PTR [rbx],rdi
  01a4c:    	movq   xmm2,QWORD PTR [rsp]
  01a51:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a57:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a5d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a63: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a6a: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a71: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a78: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a7f:    	add    rsp,0x40
  01a83: 34 	movabs r13,0x563439851d40
  01a8d:    	test   rax,rax
  01a90:    	je     0xfffe36d3
  01a96: ff 	mov    QWORD PTR [rbp-0x88],rax
:00125 
:00127 %13 = @spheres: Scene[IvarId(0)]
  01a9d:    	mov    rdi,QWORD PTR [rbp-0x28]
  01aa1:    	mov    rax,QWORD PTR [rdi+0x10]
  01aa5: ff 	mov    QWORD PTR [rbp-0x90],rax
:00128 %14 = 0: i32
  01aac: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00129 %13 = %13.[%14]                      [Array][Integer]
  01ab7:    	sub    rsp,0x40
  01abb:    	movq   QWORD PTR [rsp],xmm2
  01ac0:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ac6:    	movq   QWORD PTR [rsp+0x10],xmm5
  01acc:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ad2: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ad9: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ae0: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ae7: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01aee: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01af5: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01afc:    	mov    rdi,rbx
  01aff:    	mov    rsi,r12
  01b02: 34 	movabs r8,0x563439851d78
  01b0c: 34 	movabs rax,0x563437f47370
  01b16:    	call   rax
  01b18:    	movq   xmm2,QWORD PTR [rsp]
  01b1d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b23:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01b29:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b2f: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01b36: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01b3d: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01b44: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01b4b:    	add    rsp,0x40
  01b4f: 34 	movabs r13,0x563439851d80
  01b59:    	test   rax,rax
  01b5c:    	je     0xfffe36d3
  01b62: ff 	mov    QWORD PTR [rbp-0x90],rax
:00130 %14 = %11
  01b69:    	mov    rax,QWORD PTR [rbp-0x80]
  01b6d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00131 %15 = %12
  01b74: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b7b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00132 _ = %13.call intersect(%14; 2)       [Sphere]
  01b82: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b89: 00 	test   rdi,0x7
  01b90:    	jne    0x343fc
  01b96:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01b9a:    	jne    0x343fc
  01ba0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe46ea],0x26        # 0xfffe6291
  01ba7:    	jne    0x343fc
  01bad:    	sub    rsp,0x40
  01bb1:    	movq   QWORD PTR [rsp],xmm2
  01bb6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bbc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01bc2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01bc8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01bcf: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01bd6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01bdd: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01be4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bed:    	mov    QWORD PTR [rsp-0x38],rcx
  01bf2:    	mov    rax,QWORD PTR [rbx]
  01bf5:    	lea    rdi,[rsp-0x18]
  01bfa:    	mov    QWORD PTR [rdi],rax
  01bfd:    	mov    QWORD PTR [rbx],rdi
  01c00: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01c07:    	mov    QWORD PTR [rsp-0x38],rax
  01c0c: 00 	mov    rdi,0x2
  01c13: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01c1a:    	mov    QWORD PTR [rsp-0x40],rax
  01c1f: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01c26:    	mov    QWORD PTR [rsp-0x48],rax
  01c2b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c34: 10 	movabs rax,0x1001000000046
  01c3e:    	mov    QWORD PTR [rsp-0x28],rax
  01c43: 34 	movabs r13,0x5634398536b0
  01c4d:    	call   0xfffe6ed2
  01c52:    	lea    rdi,[rbp-0x8]
  01c56:    	mov    QWORD PTR [rbx],rdi
  01c59:    	movq   xmm2,QWORD PTR [rsp]
  01c5e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c64:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c6a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c70: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c77: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c7e: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c85: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c8c:    	add    rsp,0x40
  01c90: 34 	movabs r13,0x563439851dc0
  01c9a:    	test   rax,rax
  01c9d:    	je     0xfffe36d3
:00133 
:00135 %13 = @spheres: Scene[IvarId(0)]
  01ca3:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ca7:    	mov    rax,QWORD PTR [rdi+0x10]
  01cab: ff 	mov    QWORD PTR [rbp-0x90],rax
:00136 %14 = 1: i32
  01cb2: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00137 %13 = %13.[%14]                      [Array][Integer]
  01cbd:    	sub    rsp,0x40
  01cc1:    	movq   QWORD PTR [rsp],xmm2
  01cc6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ccc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01cd2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01cd8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01cdf: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ce6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ced: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01cf4: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01cfb: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01d02:    	mov    rdi,rbx
  01d05:    	mov    rsi,r12
  01d08: 34 	movabs r8,0x563439851df8
  01d12: 34 	movabs rax,0x563437f47370
  01d1c:    	call   rax
  01d1e:    	movq   xmm2,QWORD PTR [rsp]
  01d23:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d29:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01d2f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01d35: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01d3c: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01d43: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01d4a: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01d51:    	add    rsp,0x40
  01d55: 34 	movabs r13,0x563439851e00
  01d5f:    	test   rax,rax
  01d62:    	je     0xfffe36d3
  01d68: ff 	mov    QWORD PTR [rbp-0x90],rax
:00138 %14 = %11
  01d6f:    	mov    rax,QWORD PTR [rbp-0x80]
  01d73: ff 	mov    QWORD PTR [rbp-0x98],rax
:00139 %15 = %12
  01d7a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01d81: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00140 _ = %13.call intersect(%14; 2)       [Sphere]
  01d88: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01d8f: 00 	test   rdi,0x7
  01d96:    	jne    0x3446a
  01d9c:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01da0:    	jne    0x3446a
  01da6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe44e4],0x26        # 0xfffe6291
  01dad:    	jne    0x3446a
  01db3:    	sub    rsp,0x40
  01db7:    	movq   QWORD PTR [rsp],xmm2
  01dbc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01dc2:    	movq   QWORD PTR [rsp+0x10],xmm5
  01dc8:    	movq   QWORD PTR [rsp+0x18],xmm7
  01dce: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01dd5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ddc: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01de3: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01dea: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01df3:    	mov    QWORD PTR [rsp-0x38],rcx
  01df8:    	mov    rax,QWORD PTR [rbx]
  01dfb:    	lea    rdi,[rsp-0x18]
  01e00:    	mov    QWORD PTR [rdi],rax
  01e03:    	mov    QWORD PTR [rbx],rdi
  01e06: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01e0d:    	mov    QWORD PTR [rsp-0x38],rax
  01e12: 00 	mov    rdi,0x2
  01e19: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01e20:    	mov    QWORD PTR [rsp-0x40],rax
  01e25: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01e2c:    	mov    QWORD PTR [rsp-0x48],rax
  01e31: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01e3a: 10 	movabs rax,0x1001000000046
  01e44:    	mov    QWORD PTR [rsp-0x28],rax
  01e49: 34 	movabs r13,0x5634398536b0
  01e53:    	call   0xfffe6ed2
  01e58:    	lea    rdi,[rbp-0x8]
  01e5c:    	mov    QWORD PTR [rbx],rdi
  01e5f:    	movq   xmm2,QWORD PTR [rsp]
  01e64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e6a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e70:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e76: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e7d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e84: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e8b: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e92:    	add    rsp,0x40
  01e96: 34 	movabs r13,0x563439851e40
  01ea0:    	test   rax,rax
  01ea3:    	je     0xfffe36d3
:00141 
:00143 %13 = @spheres: Scene[IvarId(0)]
  01ea9:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ead:    	mov    rax,QWORD PTR [rdi+0x10]
  01eb1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00144 %14 = 2: i32
  01eb8: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00145 %13 = %13.[%14]                      [Array][Integer]
  01ec3:    	sub    rsp,0x40
  01ec7:    	movq   QWORD PTR [rsp],xmm2
  01ecc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ed2:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ed8:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ede: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ee5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01eec: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ef3: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01efa: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01f01: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01f08:    	mov    rdi,rbx
  01f0b:    	mov    rsi,r12
  01f0e: 34 	movabs r8,0x563439851e78
  01f18: 34 	movabs rax,0x563437f47370
  01f22:    	call   rax
  01f24:    	movq   xmm2,QWORD PTR [rsp]
  01f29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01f2f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01f35:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01f3b: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01f42: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01f49: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01f50: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01f57:    	add    rsp,0x40
  01f5b: 34 	movabs r13,0x563439851e80
  01f65:    	test   rax,rax
  01f68:    	je     0xfffe36d3
  01f6e: ff 	mov    QWORD PTR [rbp-0x90],rax
:00146 %14 = %11
  01f75:    	mov    rax,QWORD PTR [rbp-0x80]
  01f79: ff 	mov    QWORD PTR [rbp-0x98],rax
:00147 %15 = %12
  01f80: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01f87: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00148 _ = %13.call intersect(%14; 2)       [Sphere]
  01f8e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01f95: 00 	test   rdi,0x7
  01f9c:    	jne    0x344d8
  01fa2:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01fa6:    	jne    0x344d8
  01fac: 26 	cmp    DWORD PTR [rip+0xfffffffffffe42de],0x26        # 0xfffe6291
  01fb3:    	jne    0x344d8
  01fb9:    	sub    rsp,0x40
  01fbd:    	movq   QWORD PTR [rsp],xmm2
  01fc2:    	movq   QWORD PTR [rsp+0x8],xmm4
  01fc8:    	movq   QWORD PTR [rsp+0x10],xmm5
  01fce:    	movq   QWORD PTR [rsp+0x18],xmm7
  01fd4: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01fdb: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01fe2: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01fe9: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ff0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01ff9:    	mov    QWORD PTR [rsp-0x38],rcx
  01ffe:    	mov    rax,QWORD PTR [rbx]
  02001:    	lea    rdi,[rsp-0x18]
  02006:    	mov    QWORD PTR [rdi],rax
  02009:    	mov    QWORD PTR [rbx],rdi
  0200c: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02013:    	mov    QWORD PTR [rsp-0x38],rax
  02018: 00 	mov    rdi,0x2
  0201f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02026:    	mov    QWORD PTR [rsp-0x40],rax
  0202b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02032:    	mov    QWORD PTR [rsp-0x48],rax
  02037: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02040: 10 	movabs rax,0x1001000000046
  0204a:    	mov    QWORD PTR [rsp-0x28],rax
  0204f: 34 	movabs r13,0x5634398536b0
  02059:    	call   0xfffe6ed2
  0205e:    	lea    rdi,[rbp-0x8]
  02062:    	mov    QWORD PTR [rbx],rdi
  02065:    	movq   xmm2,QWORD PTR [rsp]
  0206a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02070:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02076:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0207c: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02083: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0208a: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02091: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02098:    	add    rsp,0x40
  0209c: 34 	movabs r13,0x563439851ec0
  020a6:    	test   rax,rax
  020a9:    	je     0xfffe36d3
:00149 
:00151 %13 = @plane: Scene[IvarId(1)]
  020af:    	mov    rdi,QWORD PTR [rbp-0x28]
  020b3:    	mov    rax,QWORD PTR [rdi+0x18]
  020b7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00152 %14 = %11
  020be:    	mov    rax,QWORD PTR [rbp-0x80]
  020c2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00153 %15 = %12
  020c9: ff 	mov    rax,QWORD PTR [rbp-0x88]
  020d0: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00154 _ = %13.call intersect(%14; 2)       [Plane]
  020d7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  020de: 00 	test   rdi,0x7
  020e5:    	jne    0x34546
  020eb:    	cmp    DWORD PTR [rdi+0x4],0x2c
  020ef:    	jne    0x34546
  020f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4195],0x26        # 0xfffe6291
  020fc:    	jne    0x34546
  02102:    	sub    rsp,0x40
  02106:    	movq   QWORD PTR [rsp],xmm2
  0210b:    	movq   QWORD PTR [rsp+0x8],xmm4
  02111:    	movq   QWORD PTR [rsp+0x10],xmm5
  02117:    	movq   QWORD PTR [rsp+0x18],xmm7
  0211d: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02124: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0212b: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02132: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02139: 00 	mov    QWORD PTR [rsp-0x20],0x0
  02142:    	mov    QWORD PTR [rsp-0x38],rcx
  02147:    	mov    rax,QWORD PTR [rbx]
  0214a:    	lea    rdi,[rsp-0x18]
  0214f:    	mov    QWORD PTR [rdi],rax
  02152:    	mov    QWORD PTR [rbx],rdi
  02155: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0215c:    	mov    QWORD PTR [rsp-0x38],rax
  02161: 00 	mov    rdi,0x2
  02168: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0216f:    	mov    QWORD PTR [rsp-0x40],rax
  02174: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0217b:    	mov    QWORD PTR [rsp-0x48],rax
  02180: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02189: 0e 	movabs rax,0x1000e00000048
  02193:    	mov    QWORD PTR [rsp-0x28],rax
  02198: 34 	movabs r13,0x563439855550
  021a2:    	call   0xfffe74e0
  021a7:    	lea    rdi,[rbp-0x8]
  021ab:    	mov    QWORD PTR [rbx],rdi
  021ae:    	movq   xmm2,QWORD PTR [rsp]
  021b3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  021b9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  021bf:    	movq   xmm7,QWORD PTR [rsp+0x18]
  021c5: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  021cc: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  021d3: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  021da: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  021e1:    	add    rsp,0x40
  021e5: 34 	movabs r13,0x563439851f20
  021ef:    	test   rax,rax
  021f2:    	je     0xfffe36d3
:00155 
:00157 %13 = %12.call hit()                 [Isect]
  021f8: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  021ff: 00 	test   rdi,0x7
  02206:    	jne    0x345b4
  0220c:    	cmp    DWORD PTR [rdi+0x4],0x30
  02210:    	jne    0x345b4
  02216: 26 	cmp    DWORD PTR [rip+0xfffffffffffe4074],0x26        # 0xfffe6291
  0221d:    	jne    0x345b4
  02223:    	mov    esi,DWORD PTR [rip+0x36b]        # 0x2594
  02229:    	cmp    esi,0xffffffff
  0222c:    	je     0x34622
  02232:    	cmp    WORD PTR [rdi+0x2],0x3
  02237:    	jne    0x2250
  0223d:    	cmp    esi,0x6
  02240:    	jge    0x2250
  02246:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0224b:    	jmp    0x22ca
  02250:    	sub    rsp,0x40
  02254:    	movq   QWORD PTR [rsp],xmm2
  02259:    	movq   QWORD PTR [rsp+0x8],xmm4
  0225f:    	movq   QWORD PTR [rsp+0x10],xmm5
  02265:    	movq   QWORD PTR [rsp+0x18],xmm7
  0226b: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02272: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02279: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02280: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02287: 34 	movabs rax,0x563437ed0590
  02291:    	call   rax
  02293:    	movq   xmm2,QWORD PTR [rsp]
  02298:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0229e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  022a4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  022aa: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  022b1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  022b8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  022bf: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  022c6:    	add    rsp,0x40
  022ca: ff 	mov    QWORD PTR [rbp-0x90],rax
:00158 
:00160 condnotbr %13 =>:00166
  022d1: ff 	mov    rax,QWORD PTR [rbp-0x90]
  022d8:    	or     rax,0x10
  022dc:    	cmp    rax,0x14
  022e0:    	je     0x23f3
:00161 %13 = dynvar(2, %6)
  022e6:    	mov    rax,QWORD PTR [rbp-0x10]
  022ea:    	mov    rax,QWORD PTR [rax]
  022ed:    	mov    rax,QWORD PTR [rax-0x48]
  022f1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00162 %14 = literal[1.0]
  022f8: 00 	movq   xmm3,QWORD PTR [rip+0x298]        # 0x2598
  02300: 00 	movabs rax,0xff80000000000002
  0230a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00163 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  02311: 01 	sub    DWORD PTR [rip+0x288],0x1        # 0x25a0
  02318:    	je     0x34727
  0231e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02325: ff 	mov    rsi,QWORD PTR [rbp-0x98]
  0232c:    	sub    rsp,0x50
  02330:    	movq   QWORD PTR [rsp],xmm2
  02335:    	movq   QWORD PTR [rsp+0x8],xmm3
  0233b:    	movq   QWORD PTR [rsp+0x10],xmm4
  02341:    	movq   QWORD PTR [rsp+0x18],xmm5
  02347:    	movq   QWORD PTR [rsp+0x20],xmm7
  0234d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  02354: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0235b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  02362: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  02369:    	mov    rdx,rdi
  0236c:    	mov    rcx,rsi
  0236f:    	mov    rdi,rbx
  02372:    	mov    rsi,r12
  02375: 34 	movabs rax,0x563437f15c00
  0237f:    	call   rax
  02381:    	movq   xmm2,QWORD PTR [rsp]
  02386:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0238c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02392:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02398:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0239e: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  023a5: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  023ac: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  023b3: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  023ba:    	add    rsp,0x50
  023be: 34 	movabs r13,0x563439851fa0
  023c8:    	test   rax,rax
  023cb:    	je     0xfffe36d3
  023d1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00164 dynvar(2, %6) = %13
  023d8:    	mov    rax,QWORD PTR [rbp-0x10]
  023dc:    	mov    rax,QWORD PTR [rax]
  023df: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  023e6:    	mov    QWORD PTR [rax-0x48],rdi
:00165 ret %13
  023ea: ff 	mov    rax,QWORD PTR [rbp-0x90]
  023f1:    	leave  
  023f2:    	ret    
:00166 %13 = literal[0.0]
  023f3: 00 	movq   xmm3,QWORD PTR [rip+0x1ad]        # 0x25a8
  023fb: 00 	movabs rax,0x8000000000000002
  02405: ff 	mov    QWORD PTR [rbp-0x90],rax
:00167 ret %13
  0240c: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02413:    	leave  
  02414:    	ret    
==> start whole compile: intersect FuncId(72) self_class:Plane start:[00000] bytecode:0x563439855550
<== finished compile. elapsed:223.5µs
offset:Pos(126744) code: 6590 bytes  data: 370 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xa0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x32199
  00022:    	jmp    0x32199
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086:    	mov    rdi,QWORD PTR [rbp-0x28]
  0008a: 00 	test   rdi,0x7
  00091:    	jne    0x321a8
  00097:    	cmp    DWORD PTR [rdi+0x4],0x2c
  0009b:    	jne    0x321a8
:00000 init_method reg:14 arg:2 pos:2 req:2 stack_offset:10
:00001 %7 = @p: Plane[IvarId(0)]
  000a1:    	mov    rdi,QWORD PTR [rbp-0x28]
  000a5:    	mov    rax,QWORD PTR [rdi+0x10]
  000a9:    	mov    QWORD PTR [rbp-0x60],rax
:00002 %8 = @n: Plane[IvarId(1)]
  000ad:    	mov    rdi,QWORD PTR [rbp-0x28]
  000b1:    	mov    rax,QWORD PTR [rdi+0x18]
  000b5:    	mov    QWORD PTR [rbp-0x68],rax
:00003 %3 = %7.call vdot(%8; 1)             [Vec]
  000b9:    	mov    rdi,QWORD PTR [rbp-0x60]
  000bd: 00 	test   rdi,0x7
  000c4:    	jne    0x321b7
  000ca:    	cmp    DWORD PTR [rdi+0x4],0x28
  000ce:    	jne    0x321b7
  000d4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe3c06],0x26        # 0xfffe3ce1
  000db:    	jne    0x321b7
  000e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000ea:    	mov    QWORD PTR [rsp-0x38],rcx
  000ef:    	mov    rax,QWORD PTR [rbx]
  000f2:    	lea    rdi,[rsp-0x18]
  000f7:    	mov    QWORD PTR [rdi],rax
  000fa:    	mov    QWORD PTR [rbx],rdi
  000fd:    	mov    rax,QWORD PTR [rbp-0x60]
  00101:    	mov    QWORD PTR [rsp-0x38],rax
  00106: 00 	mov    rdi,0x1
  0010d:    	mov    rax,QWORD PTR [rbp-0x68]
  00111:    	mov    QWORD PTR [rsp-0x40],rax
  00116: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0011f: 05 	movabs rax,0x1000500000042
  00129:    	mov    QWORD PTR [rsp-0x28],rax
  0012e: 34 	movabs r13,0x563439877e20
  00138:    	call   0xfffe4a46
  0013d:    	lea    rdi,[rbp-0x8]
  00141:    	mov    QWORD PTR [rbx],rdi
  00144: 34 	movabs r13,0x5634398555a0
  0014e:    	test   rax,rax
  00151:    	je     0xfffe1123
  00157:    	mov    QWORD PTR [rbp-0x40],rax
:00004 
:00006 %3 = neg %3                          [Float]
  0015b:    	mov    rdi,QWORD PTR [rbp-0x40]
  0015f: 00 	test   rdi,0x1
  00166:    	jne    0x321c6
  0016c: 00 	test   rdi,0x2
  00173:    	je     0x1af
  00179:    	xorps  xmm2,xmm2
  0017c: 00 	movabs rax,0x8000000000000002
  00186:    	cmp    rdi,rax
  00189:    	je     0x1c1
  0018f:    	mov    rax,rdi
  00192:    	sar    rax,0x3f
  00196:    	add    rax,0x2
  0019a:    	and    rdi,0xfffffffffffffffc
  0019e:    	or     rdi,rax
  001a1:    	rol    rdi,0x3d
  001a5:    	movq   xmm2,rdi
  001aa:    	jmp    0x1c1
  001af:    	call   0xfffe117c
  001b4:    	test   rax,rax
  001b7:    	je     0x321c6
  001bd:    	movq   xmm2,xmm0
  001c1: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1800]        # 0x19c8
:00007 %7 = %1.call dir()                   [Ray]
  001c8:    	mov    rdi,QWORD PTR [rbp-0x30]
  001cc: 00 	test   rdi,0x7
  001d3:    	jne    0x321d5
  001d9:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001dd:    	jne    0x321d5
  001e3: 26 	cmp    DWORD PTR [rip+0xfffffffffffe3af7],0x26        # 0xfffe3ce1
  001ea:    	jne    0x321d5
  001f0:    	mov    esi,DWORD PTR [rip+0x17de]        # 0x19d4
  001f6:    	cmp    esi,0xffffffff
  001f9:    	je     0x321f1
  001ff:    	cmp    WORD PTR [rdi+0x2],0x3
  00204:    	jne    0x21d
  0020a:    	cmp    esi,0x6
  0020d:    	jge    0x21d
  00213:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00218:    	jmp    0x23b
  0021d:    	sub    rsp,0x10
  00221:    	movq   QWORD PTR [rsp],xmm2
  00226: 34 	movabs rax,0x563437ed0590
  00230:    	call   rax
  00232:    	movq   xmm2,QWORD PTR [rsp]
  00237:    	add    rsp,0x10
  0023b:    	mov    QWORD PTR [rbp-0x60],rax
:00008 
:00010 %8 = @n: Plane[IvarId(1)]
  0023f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00243:    	mov    rax,QWORD PTR [rdi+0x18]
  00247:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %7.call vdot(%8; 1)             [Vec]
  0024b:    	mov    rdi,QWORD PTR [rbp-0x60]
  0024f: 00 	test   rdi,0x7
  00256:    	jne    0x3222c
  0025c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00260:    	jne    0x3222c
  00266: 26 	cmp    DWORD PTR [rip+0xfffffffffffe3a74],0x26        # 0xfffe3ce1
  0026d:    	jne    0x3222c
  00273:    	sub    rsp,0x10
  00277:    	movq   QWORD PTR [rsp],xmm2
  0027c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00285:    	mov    QWORD PTR [rsp-0x38],rcx
  0028a:    	mov    rax,QWORD PTR [rbx]
  0028d:    	lea    rdi,[rsp-0x18]
  00292:    	mov    QWORD PTR [rdi],rax
  00295:    	mov    QWORD PTR [rbx],rdi
  00298:    	mov    rax,QWORD PTR [rbp-0x60]
  0029c:    	mov    QWORD PTR [rsp-0x38],rax
  002a1: 00 	mov    rdi,0x1
  002a8:    	mov    rax,QWORD PTR [rbp-0x68]
  002ac:    	mov    QWORD PTR [rsp-0x40],rax
  002b1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002ba: 05 	movabs rax,0x1000500000042
  002c4:    	mov    QWORD PTR [rsp-0x28],rax
  002c9: 34 	movabs r13,0x563439877e20
  002d3:    	call   0xfffe4a46
  002d8:    	lea    rdi,[rbp-0x8]
  002dc:    	mov    QWORD PTR [rbx],rdi
  002df:    	movq   xmm2,QWORD PTR [rsp]
  002e4:    	add    rsp,0x10
  002e8: 34 	movabs r13,0x563439855620
  002f2:    	test   rax,rax
  002f5:    	je     0xfffe1123
  002fb:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %5 = %4
  002ff:    	mov    rax,QWORD PTR [rbp-0x48]
  00303:    	mov    QWORD PTR [rbp-0x50],rax
:00015 %7 = literal[0.0]
  00307: 00 	movq   xmm3,QWORD PTR [rip+0x16c9]        # 0x19d8
  0030f: 00 	movabs rax,0x8000000000000002
  00319:    	mov    QWORD PTR [rbp-0x60],rax
:00016 _%7 = %4 < %7                        [Float][Float]
:00017 condnotbr _%7 =>:00021
  0031d:    	mov    rdi,QWORD PTR [rbp-0x48]
  00321: 00 	test   rdi,0x1
  00328:    	jne    0x32248
  0032e: 00 	test   rdi,0x2
  00335:    	je     0x371
  0033b:    	xorps  xmm4,xmm4
  0033e: 00 	movabs rax,0x8000000000000002
  00348:    	cmp    rdi,rax
  0034b:    	je     0x383
  00351:    	mov    rax,rdi
  00354:    	sar    rax,0x3f
  00358:    	add    rax,0x2
  0035c:    	and    rdi,0xfffffffffffffffc
  00360:    	or     rdi,rax
  00363:    	rol    rdi,0x3d
  00367:    	movq   xmm4,rdi
  0036c:    	jmp    0x383
  00371:    	call   0xfffe117c
  00376:    	test   rax,rax
  00379:    	je     0x32248
  0037f:    	movq   xmm4,xmm0
  00383:    	ucomisd xmm4,xmm3
  00387:    	jae    0x32264
:00018 %5 = %4
:00019 %5 = neg %5                          [Float]
  0038d:    	movq   xmm5,xmm4
  00391: 00 	xorps  xmm5,XMMWORD PTR [rip+0x1650]        # 0x19e8
:00020 br =>:00021
  00398:    	jmp    0x3228a
:00021 %7 = literal[1e-17]
  0039d: 00 	movq   xmm3,QWORD PTR [rip+0x1653]        # 0x19f8
  003a5: aa 	movabs rax,0xe33877aa3236a4ba
  003af:    	mov    QWORD PTR [rbp-0x60],rax
:00022 _%7 = %5 < %7                        [Float][Float]
:00023 condnotbr _%7 =>:00027
  003b3:    	mov    rdi,QWORD PTR [rbp-0x50]
  003b7: 00 	test   rdi,0x1
  003be:    	jne    0x322bd
  003c4: 00 	test   rdi,0x2
  003cb:    	je     0x407
  003d1:    	xorps  xmm5,xmm5
  003d4: 00 	movabs rax,0x8000000000000002
  003de:    	cmp    rdi,rax
  003e1:    	je     0x419
  003e7:    	mov    rax,rdi
  003ea:    	sar    rax,0x3f
  003ee:    	add    rax,0x2
  003f2:    	and    rdi,0xfffffffffffffffc
  003f6:    	or     rdi,rax
  003f9:    	rol    rdi,0x3d
  003fd:    	movq   xmm5,rdi
  00402:    	jmp    0x419
  00407:    	call   0xfffe117c
  0040c:    	test   rax,rax
  0040f:    	je     0x322bd
  00415:    	movq   xmm5,xmm0
  00419:    	ucomisd xmm5,xmm3
  0041d:    	jae    0x431
:00024 %7 = nil
  00423: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00025 ret %7
  0042b:    	mov    rax,QWORD PTR [rbp-0x60]
  0042f:    	leave  
  00430:    	ret    
:00027 %8 = %1.call org()                   [Ray]
  00431:    	mov    rdi,QWORD PTR [rbp-0x30]
  00435: 00 	test   rdi,0x7
  0043c:    	jne    0x322d9
  00442:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00446:    	jne    0x322d9
  0044c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe388e],0x26        # 0xfffe3ce1
  00453:    	jne    0x322d9
  00459:    	mov    esi,DWORD PTR [rip+0x15a5]        # 0x1a04
  0045f:    	cmp    esi,0xffffffff
  00462:    	je     0x322f5
  00468:    	cmp    WORD PTR [rdi+0x2],0x3
  0046d:    	jne    0x486
  00473:    	cmp    esi,0x6
  00476:    	jge    0x486
  0047c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00481:    	jmp    0x4c8
  00486:    	sub    rsp,0x20
  0048a:    	movq   QWORD PTR [rsp],xmm2
  0048f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00495:    	movq   QWORD PTR [rsp+0x10],xmm4
  0049b:    	movq   QWORD PTR [rsp+0x18],xmm5
  004a1: 34 	movabs rax,0x563437ed0590
  004ab:    	call   rax
  004ad:    	movq   xmm2,QWORD PTR [rsp]
  004b2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004b8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004be:    	movq   xmm5,QWORD PTR [rsp+0x18]
  004c4:    	add    rsp,0x20
  004c8:    	mov    QWORD PTR [rbp-0x68],rax
:00028 
:00030 %9 = @n: Plane[IvarId(1)]
  004cc:    	mov    rdi,QWORD PTR [rbp-0x28]
  004d0:    	mov    rax,QWORD PTR [rdi+0x18]
  004d4:    	mov    QWORD PTR [rbp-0x70],rax
:00031 %7 = %8.call vdot(%9; 1)             [Vec]
  004d8:    	mov    rdi,QWORD PTR [rbp-0x68]
  004dc: 00 	test   rdi,0x7
  004e3:    	jne    0x32354
  004e9:    	cmp    DWORD PTR [rdi+0x4],0x28
  004ed:    	jne    0x32354
  004f3: 26 	cmp    DWORD PTR [rip+0xfffffffffffe37e7],0x26        # 0xfffe3ce1
  004fa:    	jne    0x32354
  00500:    	sub    rsp,0x20
  00504:    	movq   QWORD PTR [rsp],xmm2
  00509:    	movq   QWORD PTR [rsp+0x8],xmm4
  0050f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00515: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0051e:    	mov    QWORD PTR [rsp-0x38],rcx
  00523:    	mov    rax,QWORD PTR [rbx]
  00526:    	lea    rdi,[rsp-0x18]
  0052b:    	mov    QWORD PTR [rdi],rax
  0052e:    	mov    QWORD PTR [rbx],rdi
  00531:    	mov    rax,QWORD PTR [rbp-0x68]
  00535:    	mov    QWORD PTR [rsp-0x38],rax
  0053a: 00 	mov    rdi,0x1
  00541:    	mov    rax,QWORD PTR [rbp-0x70]
  00545:    	mov    QWORD PTR [rsp-0x40],rax
  0054a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00553: 05 	movabs rax,0x1000500000042
  0055d:    	mov    QWORD PTR [rsp-0x28],rax
  00562: 34 	movabs r13,0x563439877e20
  0056c:    	call   0xfffe4a46
  00571:    	lea    rdi,[rbp-0x8]
  00575:    	mov    QWORD PTR [rbx],rdi
  00578:    	movq   xmm2,QWORD PTR [rsp]
  0057d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00583:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00589:    	add    rsp,0x20
  0058d: 34 	movabs r13,0x563439855760
  00597:    	test   rax,rax
  0059a:    	je     0xfffe1123
  005a0:    	mov    QWORD PTR [rbp-0x60],rax
:00032 
:00034 %7 = %7 + %3                         [Float][Float]
  005a4:    	mov    rdi,QWORD PTR [rbp-0x60]
  005a8: 00 	test   rdi,0x1
  005af:    	jne    0x32370
  005b5: 00 	test   rdi,0x2
  005bc:    	je     0x5f8
  005c2:    	xorps  xmm3,xmm3
  005c5: 00 	movabs rax,0x8000000000000002
  005cf:    	cmp    rdi,rax
  005d2:    	je     0x60a
  005d8:    	mov    rax,rdi
  005db:    	sar    rax,0x3f
  005df:    	add    rax,0x2
  005e3:    	and    rdi,0xfffffffffffffffc
  005e7:    	or     rdi,rax
  005ea:    	rol    rdi,0x3d
  005ee:    	movq   xmm3,rdi
  005f3:    	jmp    0x60a
  005f8:    	call   0xfffe117c
  005fd:    	test   rax,rax
  00600:    	je     0x32370
  00606:    	movq   xmm3,xmm0
  0060a:    	addsd  xmm3,xmm2
:00035 %7 = neg %7                          [Float]
  0060e: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13f3]        # 0x1a08
:00036 %6 = %7 / %4                         [Float][Float]
  00615:    	movq   xmm6,xmm3
  00619:    	movq   rax,xmm4
  0061e:    	test   rax,rax
  00621:    	je     0xfffe1148
  00627:    	divsd  xmm6,xmm4
:00037 %7 = literal[0.0]
  0062b: 00 	movq   xmm3,QWORD PTR [rip+0x13e5]        # 0x1a18
  00633: 00 	movabs rax,0x8000000000000002
  0063d:    	mov    QWORD PTR [rbp-0x60],rax
:00038 _%7 = %6 > %7                        [Float][Float]
:00039 condnotbr _%7 =>:00106
  00641:    	ucomisd xmm6,xmm3
  00645:    	jbe    0x332e9
:00040 %7 = %2.call t()                     [<INVALID>]
  0064b: 01 	sub    DWORD PTR [rip+0x13ce],0x1        # 0x1a20
  00652:    	je     0x323b5
  00658:    	sub    rsp,0x20
  0065c:    	movq   QWORD PTR [rsp],xmm2
  00661:    	movq   QWORD PTR [rsp+0x8],xmm4
  00667:    	movq   QWORD PTR [rsp+0x10],xmm5
  0066d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00673:    	mov    rdi,QWORD PTR [rbp-0x38]
  00677: 34 	movabs rax,0x563437f53600
  00681:    	call   rax
  00683:    	mov    r15d,eax
  00686: 00 	cmp    r15d,DWORD PTR [rip+0x139b]        # 0x1a28
  0068d:    	jne    0x323d7
  00693:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3648]        # 0xfffe3ce1
  00699:    	cmp    DWORD PTR [rip+0x1385],eax        # 0x1a24
  0069f:    	jne    0x323d7
  006a5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006ae:    	mov    QWORD PTR [rsp-0x38],rcx
  006b3:    	mov    rax,QWORD PTR [rbx]
  006b6:    	lea    rdi,[rsp-0x18]
  006bb:    	mov    QWORD PTR [rdi],rax
  006be:    	mov    QWORD PTR [rbx],rdi
  006c1:    	mov    rax,QWORD PTR [rbp-0x38]
  006c5:    	mov    QWORD PTR [rsp-0x38],rax
  006ca: 00 	mov    rdi,0x0
  006d1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006da: 00 	movabs rax,0x0
  006e4:    	mov    QWORD PTR [rsp-0x28],rax
  006e9: 00 	movabs r13,0x0
  006f3:    	call   0xfffe10e8
  006f8:    	lea    rdi,[rbp-0x8]
  006fc:    	mov    QWORD PTR [rbx],rdi
  006ff:    	movq   xmm2,QWORD PTR [rsp]
  00704:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0070a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00710:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00716:    	add    rsp,0x20
  0071a:    	test   rax,rax
  0071d:    	je     0x32443
  00723:    	mov    QWORD PTR [rbp-0x60],rax
:00041 
:00043 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00044 condnotbr _%7 =>:00106
  00727:    	movq   xmm0,xmm6
  0072b:    	call   0xfffe126f
  00730:    	mov    QWORD PTR [rbp-0x58],rax
  00734:    	mov    rdi,QWORD PTR [rbp-0x58]
  00738:    	mov    rsi,QWORD PTR [rbp-0x60]
  0073c: 00 	test   rdi,0x1
  00743:    	je     0x32452
  00749: 00 	test   rsi,0x1
  00750:    	je     0x32452
  00756:    	cmp    rdi,rsi
  00759:    	jge    0x3331c
:00045 %7 = literal[true]
  0075f: 00 	mov    rax,0x1c
  00766:    	mov    QWORD PTR [rbp-0x60],rax
:00046 _ = %2.call hit=(%7; 1)              [<INVALID>]
  0076a: 01 	sub    DWORD PTR [rip+0x12bb],0x1        # 0x1a2c
  00771:    	je     0x324c3
  00777:    	sub    rsp,0x20
  0077b:    	movq   QWORD PTR [rsp],xmm2
  00780:    	movq   QWORD PTR [rsp+0x8],xmm4
  00786:    	movq   QWORD PTR [rsp+0x10],xmm5
  0078c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00792:    	mov    rdi,QWORD PTR [rbp-0x38]
  00796: 34 	movabs rax,0x563437f53600
  007a0:    	call   rax
  007a2:    	mov    r15d,eax
  007a5: 00 	cmp    r15d,DWORD PTR [rip+0x1288]        # 0x1a34
  007ac:    	jne    0x324e5
  007b2:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3529]        # 0xfffe3ce1
  007b8:    	cmp    DWORD PTR [rip+0x1272],eax        # 0x1a30
  007be:    	jne    0x324e5
  007c4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  007cd:    	mov    QWORD PTR [rsp-0x38],rcx
  007d2:    	mov    rax,QWORD PTR [rbx]
  007d5:    	lea    rdi,[rsp-0x18]
  007da:    	mov    QWORD PTR [rdi],rax
  007dd:    	mov    QWORD PTR [rbx],rdi
  007e0:    	mov    rax,QWORD PTR [rbp-0x38]
  007e4:    	mov    QWORD PTR [rsp-0x38],rax
  007e9: 00 	mov    rdi,0x1
  007f0:    	mov    rax,QWORD PTR [rbp-0x60]
  007f4:    	mov    QWORD PTR [rsp-0x40],rax
  007f9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00802: 00 	movabs rax,0x0
  0080c:    	mov    QWORD PTR [rsp-0x28],rax
  00811: 00 	movabs r13,0x0
  0081b:    	call   0xfffe10e8
  00820:    	lea    rdi,[rbp-0x8]
  00824:    	mov    QWORD PTR [rbx],rdi
  00827:    	movq   xmm2,QWORD PTR [rsp]
  0082c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00832:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00838:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0083e:    	add    rsp,0x20
  00842:    	test   rax,rax
  00845:    	je     0x32551
:00047 
:00049 _ = %2.call t=(%6; 1)                [<INVALID>]
  0084b: 01 	sub    DWORD PTR [rip+0x11e6],0x1        # 0x1a38
  00852:    	je     0x3257c
  00858:    	sub    rsp,0x20
  0085c:    	movq   QWORD PTR [rsp],xmm2
  00861:    	movq   QWORD PTR [rsp+0x8],xmm4
  00867:    	movq   QWORD PTR [rsp+0x10],xmm5
  0086d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00873:    	mov    rdi,QWORD PTR [rbp-0x38]
  00877: 34 	movabs rax,0x563437f53600
  00881:    	call   rax
  00883:    	mov    r15d,eax
  00886: 00 	cmp    r15d,DWORD PTR [rip+0x11b3]        # 0x1a40
  0088d:    	jne    0x3259e
  00893:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3448]        # 0xfffe3ce1
  00899:    	cmp    DWORD PTR [rip+0x119d],eax        # 0x1a3c
  0089f:    	jne    0x3259e
  008a5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008ae:    	mov    QWORD PTR [rsp-0x38],rcx
  008b3:    	mov    rax,QWORD PTR [rbx]
  008b6:    	lea    rdi,[rsp-0x18]
  008bb:    	mov    QWORD PTR [rdi],rax
  008be:    	mov    QWORD PTR [rbx],rdi
  008c1:    	mov    rax,QWORD PTR [rbp-0x38]
  008c5:    	mov    QWORD PTR [rsp-0x38],rax
  008ca: 00 	mov    rdi,0x1
  008d1:    	mov    rax,QWORD PTR [rbp-0x58]
  008d5:    	mov    QWORD PTR [rsp-0x40],rax
  008da: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008e3: 00 	movabs rax,0x0
  008ed:    	mov    QWORD PTR [rsp-0x28],rax
  008f2: 00 	movabs r13,0x0
  008fc:    	call   0xfffe10e8
  00901:    	lea    rdi,[rbp-0x8]
  00905:    	mov    QWORD PTR [rbx],rdi
  00908:    	movq   xmm2,QWORD PTR [rsp]
  0090d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00913:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00919:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0091f:    	add    rsp,0x20
  00923:    	test   rax,rax
  00926:    	je     0x3260a
:00050 
:00052 %7 = @n: <INVALID>[IvarId(0)]
  0092c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00930:    	sub    rsp,0x20
  00934:    	movq   QWORD PTR [rsp],xmm2
  00939:    	movq   QWORD PTR [rsp+0x8],xmm4
  0093f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00945:    	movq   QWORD PTR [rsp+0x18],xmm6
  0094b: 00 	mov    rsi,0x97
  00952:    	mov    rdx,r12
  00955: 34 	movabs rax,0x563437f47590
  0095f:    	call   rax
  00961:    	movq   xmm2,QWORD PTR [rsp]
  00966:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0096c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00972:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00978:    	add    rsp,0x20
  0097c:    	mov    QWORD PTR [rbp-0x60],rax
:00053 _ = %2.call n=(%7; 1)                [<INVALID>]
  00980: 01 	sub    DWORD PTR [rip+0x10bd],0x1        # 0x1a44
  00987:    	je     0x32635
  0098d:    	sub    rsp,0x20
  00991:    	movq   QWORD PTR [rsp],xmm2
  00996:    	movq   QWORD PTR [rsp+0x8],xmm4
  0099c:    	movq   QWORD PTR [rsp+0x10],xmm5
  009a2:    	movq   QWORD PTR [rsp+0x18],xmm6
  009a8:    	mov    rdi,QWORD PTR [rbp-0x38]
  009ac: 34 	movabs rax,0x563437f53600
  009b6:    	call   rax
  009b8:    	mov    r15d,eax
  009bb: 00 	cmp    r15d,DWORD PTR [rip+0x108a]        # 0x1a4c
  009c2:    	jne    0x32657
  009c8:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3313]        # 0xfffe3ce1
  009ce:    	cmp    DWORD PTR [rip+0x1074],eax        # 0x1a48
  009d4:    	jne    0x32657
  009da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009e3:    	mov    QWORD PTR [rsp-0x38],rcx
  009e8:    	mov    rax,QWORD PTR [rbx]
  009eb:    	lea    rdi,[rsp-0x18]
  009f0:    	mov    QWORD PTR [rdi],rax
  009f3:    	mov    QWORD PTR [rbx],rdi
  009f6:    	mov    rax,QWORD PTR [rbp-0x38]
  009fa:    	mov    QWORD PTR [rsp-0x38],rax
  009ff: 00 	mov    rdi,0x1
  00a06:    	mov    rax,QWORD PTR [rbp-0x60]
  00a0a:    	mov    QWORD PTR [rsp-0x40],rax
  00a0f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a18: 00 	movabs rax,0x0
  00a22:    	mov    QWORD PTR [rsp-0x28],rax
  00a27: 00 	movabs r13,0x0
  00a31:    	call   0xfffe10e8
  00a36:    	lea    rdi,[rbp-0x8]
  00a3a:    	mov    QWORD PTR [rbx],rdi
  00a3d:    	movq   xmm2,QWORD PTR [rsp]
  00a42:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a48:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a4e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a54:    	add    rsp,0x20
  00a58:    	test   rax,rax
  00a5b:    	je     0x326c3
:00054 
:00056 %8 = const[Vec]                      [<INVALID>]
  00a61: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe3280]        # 0xfffe3ce8
  00a68: 00 	cmp    rax,QWORD PTR [rip+0xff9]        # 0x1a68
  00a6f:    	jne    0x326d2
  00a75: 00 	mov    rax,QWORD PTR [rip+0xfdc]        # 0x1a58
  00a7c:    	mov    QWORD PTR [rbp-0x68],rax
:00057 %10 = %1.call org()                  [<INVALID>]
  00a80: 01 	sub    DWORD PTR [rip+0xfe9],0x1        # 0x1a70
  00a87:    	je     0x3276a
  00a8d:    	sub    rsp,0x20
  00a91:    	movq   QWORD PTR [rsp],xmm2
  00a96:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a9c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00aa2:    	movq   QWORD PTR [rsp+0x18],xmm6
  00aa8:    	mov    rdi,QWORD PTR [rbp-0x30]
  00aac: 34 	movabs rax,0x563437f53600
  00ab6:    	call   rax
  00ab8:    	mov    r15d,eax
  00abb: 00 	cmp    r15d,DWORD PTR [rip+0xfb6]        # 0x1a78
  00ac2:    	jne    0x3278c
  00ac8:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3213]        # 0xfffe3ce1
  00ace:    	cmp    DWORD PTR [rip+0xfa0],eax        # 0x1a74
  00ad4:    	jne    0x3278c
  00ada: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ae3:    	mov    QWORD PTR [rsp-0x38],rcx
  00ae8:    	mov    rax,QWORD PTR [rbx]
  00aeb:    	lea    rdi,[rsp-0x18]
  00af0:    	mov    QWORD PTR [rdi],rax
  00af3:    	mov    QWORD PTR [rbx],rdi
  00af6:    	mov    rax,QWORD PTR [rbp-0x30]
  00afa:    	mov    QWORD PTR [rsp-0x38],rax
  00aff: 00 	mov    rdi,0x0
  00b06: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b0f: 00 	movabs rax,0x0
  00b19:    	mov    QWORD PTR [rsp-0x28],rax
  00b1e: 00 	movabs r13,0x0
  00b28:    	call   0xfffe10e8
  00b2d:    	lea    rdi,[rbp-0x8]
  00b31:    	mov    QWORD PTR [rbx],rdi
  00b34:    	movq   xmm2,QWORD PTR [rsp]
  00b39:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b3f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b45:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b4b:    	add    rsp,0x20
  00b4f:    	test   rax,rax
  00b52:    	je     0x327f8
  00b58:    	mov    QWORD PTR [rbp-0x78],rax
:00058 
:00060 %9 = %10.call x()                    [<INVALID>]
  00b5c: 01 	sub    DWORD PTR [rip+0xf19],0x1        # 0x1a7c
  00b63:    	je     0x32823
  00b69:    	sub    rsp,0x20
  00b6d:    	movq   QWORD PTR [rsp],xmm2
  00b72:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b78:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b7e:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b84:    	mov    rdi,QWORD PTR [rbp-0x78]
  00b88: 34 	movabs rax,0x563437f53600
  00b92:    	call   rax
  00b94:    	mov    r15d,eax
  00b97: 00 	cmp    r15d,DWORD PTR [rip+0xee6]        # 0x1a84
  00b9e:    	jne    0x32845
  00ba4:    	mov    eax,DWORD PTR [rip+0xfffffffffffe3137]        # 0xfffe3ce1
  00baa:    	cmp    DWORD PTR [rip+0xed0],eax        # 0x1a80
  00bb0:    	jne    0x32845
  00bb6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00bbf:    	mov    QWORD PTR [rsp-0x38],rcx
  00bc4:    	mov    rax,QWORD PTR [rbx]
  00bc7:    	lea    rdi,[rsp-0x18]
  00bcc:    	mov    QWORD PTR [rdi],rax
  00bcf:    	mov    QWORD PTR [rbx],rdi
  00bd2:    	mov    rax,QWORD PTR [rbp-0x78]
  00bd6:    	mov    QWORD PTR [rsp-0x38],rax
  00bdb: 00 	mov    rdi,0x0
  00be2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00beb: 00 	movabs rax,0x0
  00bf5:    	mov    QWORD PTR [rsp-0x28],rax
  00bfa: 00 	movabs r13,0x0
  00c04:    	call   0xfffe10e8
  00c09:    	lea    rdi,[rbp-0x8]
  00c0d:    	mov    QWORD PTR [rbx],rdi
  00c10:    	movq   xmm2,QWORD PTR [rsp]
  00c15:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c1b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c21:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c27:    	add    rsp,0x20
  00c2b:    	test   rax,rax
  00c2e:    	je     0x328b1
  00c34:    	mov    QWORD PTR [rbp-0x70],rax
:00061 
:00063 %11 = %1.call dir()                  [<INVALID>]
  00c38: 01 	sub    DWORD PTR [rip+0xe49],0x1        # 0x1a88
  00c3f:    	je     0x328dc
  00c45:    	sub    rsp,0x20
  00c49:    	movq   QWORD PTR [rsp],xmm2
  00c4e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c54:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c5a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c60:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c64: 34 	movabs rax,0x563437f53600
  00c6e:    	call   rax
  00c70:    	mov    r15d,eax
  00c73: 00 	cmp    r15d,DWORD PTR [rip+0xe16]        # 0x1a90
  00c7a:    	jne    0x328fe
  00c80:    	mov    eax,DWORD PTR [rip+0xfffffffffffe305b]        # 0xfffe3ce1
  00c86:    	cmp    DWORD PTR [rip+0xe00],eax        # 0x1a8c
  00c8c:    	jne    0x328fe
  00c92: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c9b:    	mov    QWORD PTR [rsp-0x38],rcx
  00ca0:    	mov    rax,QWORD PTR [rbx]
  00ca3:    	lea    rdi,[rsp-0x18]
  00ca8:    	mov    QWORD PTR [rdi],rax
  00cab:    	mov    QWORD PTR [rbx],rdi
  00cae:    	mov    rax,QWORD PTR [rbp-0x30]
  00cb2:    	mov    QWORD PTR [rsp-0x38],rax
  00cb7: 00 	mov    rdi,0x0
  00cbe: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cc7: 00 	movabs rax,0x0
  00cd1:    	mov    QWORD PTR [rsp-0x28],rax
  00cd6: 00 	movabs r13,0x0
  00ce0:    	call   0xfffe10e8
  00ce5:    	lea    rdi,[rbp-0x8]
  00ce9:    	mov    QWORD PTR [rbx],rdi
  00cec:    	movq   xmm2,QWORD PTR [rsp]
  00cf1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00cf7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00cfd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d03:    	add    rsp,0x20
  00d07:    	test   rax,rax
  00d0a:    	je     0x3296a
  00d10:    	mov    QWORD PTR [rbp-0x80],rax
:00064 
:00066 %10 = %11.call x()                   [<INVALID>]
  00d14: 01 	sub    DWORD PTR [rip+0xd79],0x1        # 0x1a94
  00d1b:    	je     0x32995
  00d21:    	sub    rsp,0x20
  00d25:    	movq   QWORD PTR [rsp],xmm2
  00d2a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d30:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d36:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d3c:    	mov    rdi,QWORD PTR [rbp-0x80]
  00d40: 34 	movabs rax,0x563437f53600
  00d4a:    	call   rax
  00d4c:    	mov    r15d,eax
  00d4f: 00 	cmp    r15d,DWORD PTR [rip+0xd46]        # 0x1a9c
  00d56:    	jne    0x329b7
  00d5c:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2f7f]        # 0xfffe3ce1
  00d62:    	cmp    DWORD PTR [rip+0xd30],eax        # 0x1a98
  00d68:    	jne    0x329b7
  00d6e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d77:    	mov    QWORD PTR [rsp-0x38],rcx
  00d7c:    	mov    rax,QWORD PTR [rbx]
  00d7f:    	lea    rdi,[rsp-0x18]
  00d84:    	mov    QWORD PTR [rdi],rax
  00d87:    	mov    QWORD PTR [rbx],rdi
  00d8a:    	mov    rax,QWORD PTR [rbp-0x80]
  00d8e:    	mov    QWORD PTR [rsp-0x38],rax
  00d93: 00 	mov    rdi,0x0
  00d9a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00da3: 00 	movabs rax,0x0
  00dad:    	mov    QWORD PTR [rsp-0x28],rax
  00db2: 00 	movabs r13,0x0
  00dbc:    	call   0xfffe10e8
  00dc1:    	lea    rdi,[rbp-0x8]
  00dc5:    	mov    QWORD PTR [rbx],rdi
  00dc8:    	movq   xmm2,QWORD PTR [rsp]
  00dcd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00dd3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00dd9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ddf:    	add    rsp,0x20
  00de3:    	test   rax,rax
  00de6:    	je     0x32a23
  00dec:    	mov    QWORD PTR [rbp-0x78],rax
:00067 
:00069 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00df0: 01 	sub    DWORD PTR [rip+0xca9],0x1        # 0x1aa0
  00df7:    	je     0x32a4e
  00dfd:    	mov    rdi,QWORD PTR [rbp-0x58]
  00e01:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e05:    	sub    rsp,0x20
  00e09:    	movq   QWORD PTR [rsp],xmm2
  00e0e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e14:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e1a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e20:    	mov    rdx,rdi
  00e23:    	mov    rcx,rsi
  00e26:    	mov    rdi,rbx
  00e29:    	mov    rsi,r12
  00e2c: 34 	movabs rax,0x563437f17b80
  00e36:    	call   rax
  00e38:    	movq   xmm2,QWORD PTR [rsp]
  00e3d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e43:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e49:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e4f:    	add    rsp,0x20
  00e53: 34 	movabs r13,0x5634398559b0
  00e5d:    	test   rax,rax
  00e60:    	je     0xfffe1123
  00e66:    	mov    QWORD PTR [rbp-0x78],rax
:00070 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00e6a: 01 	sub    DWORD PTR [rip+0xc33],0x1        # 0x1aa4
  00e71:    	je     0x32a8c
  00e77:    	mov    rdi,QWORD PTR [rbp-0x70]
  00e7b:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e7f:    	sub    rsp,0x20
  00e83:    	movq   QWORD PTR [rsp],xmm2
  00e88:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e8e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e94:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e9a:    	mov    rdx,rdi
  00e9d:    	mov    rcx,rsi
  00ea0:    	mov    rdi,rbx
  00ea3:    	mov    rsi,r12
  00ea6: 34 	movabs rax,0x563437f15c00
  00eb0:    	call   rax
  00eb2:    	movq   xmm2,QWORD PTR [rsp]
  00eb7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ebd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ec3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ec9:    	add    rsp,0x20
  00ecd: 34 	movabs r13,0x5634398559c0
  00ed7:    	test   rax,rax
  00eda:    	je     0xfffe1123
  00ee0:    	mov    QWORD PTR [rbp-0x70],rax
:00071 %11 = %1.call org()                  [<INVALID>]
  00ee4: 01 	sub    DWORD PTR [rip+0xbbd],0x1        # 0x1aa8
  00eeb:    	je     0x32aca
  00ef1:    	sub    rsp,0x20
  00ef5:    	movq   QWORD PTR [rsp],xmm2
  00efa:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f00:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f06:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f0c:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f10: 34 	movabs rax,0x563437f53600
  00f1a:    	call   rax
  00f1c:    	mov    r15d,eax
  00f1f: 00 	cmp    r15d,DWORD PTR [rip+0xb8a]        # 0x1ab0
  00f26:    	jne    0x32aec
  00f2c:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2daf]        # 0xfffe3ce1
  00f32:    	cmp    DWORD PTR [rip+0xb74],eax        # 0x1aac
  00f38:    	jne    0x32aec
  00f3e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f47:    	mov    QWORD PTR [rsp-0x38],rcx
  00f4c:    	mov    rax,QWORD PTR [rbx]
  00f4f:    	lea    rdi,[rsp-0x18]
  00f54:    	mov    QWORD PTR [rdi],rax
  00f57:    	mov    QWORD PTR [rbx],rdi
  00f5a:    	mov    rax,QWORD PTR [rbp-0x30]
  00f5e:    	mov    QWORD PTR [rsp-0x38],rax
  00f63: 00 	mov    rdi,0x0
  00f6a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f73: 00 	movabs rax,0x0
  00f7d:    	mov    QWORD PTR [rsp-0x28],rax
  00f82: 00 	movabs r13,0x0
  00f8c:    	call   0xfffe10e8
  00f91:    	lea    rdi,[rbp-0x8]
  00f95:    	mov    QWORD PTR [rbx],rdi
  00f98:    	movq   xmm2,QWORD PTR [rsp]
  00f9d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fa3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00fa9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00faf:    	add    rsp,0x20
  00fb3:    	test   rax,rax
  00fb6:    	je     0x32b58
  00fbc:    	mov    QWORD PTR [rbp-0x80],rax
:00072 
:00074 %10 = %11.call y()                   [<INVALID>]
  00fc0: 01 	sub    DWORD PTR [rip+0xaed],0x1        # 0x1ab4
  00fc7:    	je     0x32b83
  00fcd:    	sub    rsp,0x20
  00fd1:    	movq   QWORD PTR [rsp],xmm2
  00fd6:    	movq   QWORD PTR [rsp+0x8],xmm4
  00fdc:    	movq   QWORD PTR [rsp+0x10],xmm5
  00fe2:    	movq   QWORD PTR [rsp+0x18],xmm6
  00fe8:    	mov    rdi,QWORD PTR [rbp-0x80]
  00fec: 34 	movabs rax,0x563437f53600
  00ff6:    	call   rax
  00ff8:    	mov    r15d,eax
  00ffb: 00 	cmp    r15d,DWORD PTR [rip+0xaba]        # 0x1abc
  01002:    	jne    0x32ba5
  01008:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2cd3]        # 0xfffe3ce1
  0100e:    	cmp    DWORD PTR [rip+0xaa4],eax        # 0x1ab8
  01014:    	jne    0x32ba5
  0101a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01023:    	mov    QWORD PTR [rsp-0x38],rcx
  01028:    	mov    rax,QWORD PTR [rbx]
  0102b:    	lea    rdi,[rsp-0x18]
  01030:    	mov    QWORD PTR [rdi],rax
  01033:    	mov    QWORD PTR [rbx],rdi
  01036:    	mov    rax,QWORD PTR [rbp-0x80]
  0103a:    	mov    QWORD PTR [rsp-0x38],rax
  0103f: 00 	mov    rdi,0x0
  01046: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0104f: 00 	movabs rax,0x0
  01059:    	mov    QWORD PTR [rsp-0x28],rax
  0105e: 00 	movabs r13,0x0
  01068:    	call   0xfffe10e8
  0106d:    	lea    rdi,[rbp-0x8]
  01071:    	mov    QWORD PTR [rbx],rdi
  01074:    	movq   xmm2,QWORD PTR [rsp]
  01079:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0107f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01085:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0108b:    	add    rsp,0x20
  0108f:    	test   rax,rax
  01092:    	je     0x32c11
  01098:    	mov    QWORD PTR [rbp-0x78],rax
:00075 
:00077 %12 = %1.call dir()                  [<INVALID>]
  0109c: 01 	sub    DWORD PTR [rip+0xa1d],0x1        # 0x1ac0
  010a3:    	je     0x32c3c
  010a9:    	sub    rsp,0x20
  010ad:    	movq   QWORD PTR [rsp],xmm2
  010b2:    	movq   QWORD PTR [rsp+0x8],xmm4
  010b8:    	movq   QWORD PTR [rsp+0x10],xmm5
  010be:    	movq   QWORD PTR [rsp+0x18],xmm6
  010c4:    	mov    rdi,QWORD PTR [rbp-0x30]
  010c8: 34 	movabs rax,0x563437f53600
  010d2:    	call   rax
  010d4:    	mov    r15d,eax
  010d7: 00 	cmp    r15d,DWORD PTR [rip+0x9ea]        # 0x1ac8
  010de:    	jne    0x32c5e
  010e4:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2bf7]        # 0xfffe3ce1
  010ea:    	cmp    DWORD PTR [rip+0x9d4],eax        # 0x1ac4
  010f0:    	jne    0x32c5e
  010f6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010ff:    	mov    QWORD PTR [rsp-0x38],rcx
  01104:    	mov    rax,QWORD PTR [rbx]
  01107:    	lea    rdi,[rsp-0x18]
  0110c:    	mov    QWORD PTR [rdi],rax
  0110f:    	mov    QWORD PTR [rbx],rdi
  01112:    	mov    rax,QWORD PTR [rbp-0x30]
  01116:    	mov    QWORD PTR [rsp-0x38],rax
  0111b: 00 	mov    rdi,0x0
  01122: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0112b: 00 	movabs rax,0x0
  01135:    	mov    QWORD PTR [rsp-0x28],rax
  0113a: 00 	movabs r13,0x0
  01144:    	call   0xfffe10e8
  01149:    	lea    rdi,[rbp-0x8]
  0114d:    	mov    QWORD PTR [rbx],rdi
  01150:    	movq   xmm2,QWORD PTR [rsp]
  01155:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0115b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01161:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01167:    	add    rsp,0x20
  0116b:    	test   rax,rax
  0116e:    	je     0x32cca
  01174: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 
:00080 %11 = %12.call y()                   [<INVALID>]
  0117b: 01 	sub    DWORD PTR [rip+0x94a],0x1        # 0x1acc
  01182:    	je     0x32cf5
  01188:    	sub    rsp,0x20
  0118c:    	movq   QWORD PTR [rsp],xmm2
  01191:    	movq   QWORD PTR [rsp+0x8],xmm4
  01197:    	movq   QWORD PTR [rsp+0x10],xmm5
  0119d:    	movq   QWORD PTR [rsp+0x18],xmm6
  011a3: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  011aa: 34 	movabs rax,0x563437f53600
  011b4:    	call   rax
  011b6:    	mov    r15d,eax
  011b9: 00 	cmp    r15d,DWORD PTR [rip+0x914]        # 0x1ad4
  011c0:    	jne    0x32d17
  011c6:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2b15]        # 0xfffe3ce1
  011cc:    	cmp    DWORD PTR [rip+0x8fe],eax        # 0x1ad0
  011d2:    	jne    0x32d17
  011d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  011e1:    	mov    QWORD PTR [rsp-0x38],rcx
  011e6:    	mov    rax,QWORD PTR [rbx]
  011e9:    	lea    rdi,[rsp-0x18]
  011ee:    	mov    QWORD PTR [rdi],rax
  011f1:    	mov    QWORD PTR [rbx],rdi
  011f4: ff 	mov    rax,QWORD PTR [rbp-0x88]
  011fb:    	mov    QWORD PTR [rsp-0x38],rax
  01200: 00 	mov    rdi,0x0
  01207: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01210: 00 	movabs rax,0x0
  0121a:    	mov    QWORD PTR [rsp-0x28],rax
  0121f: 00 	movabs r13,0x0
  01229:    	call   0xfffe10e8
  0122e:    	lea    rdi,[rbp-0x8]
  01232:    	mov    QWORD PTR [rbx],rdi
  01235:    	movq   xmm2,QWORD PTR [rsp]
  0123a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01240:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01246:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0124c:    	add    rsp,0x20
  01250:    	test   rax,rax
  01253:    	je     0x32d86
  01259:    	mov    QWORD PTR [rbp-0x80],rax
:00081 
:00083 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  0125d: 01 	sub    DWORD PTR [rip+0x874],0x1        # 0x1ad8
  01264:    	je     0x32db1
  0126a:    	mov    rdi,QWORD PTR [rbp-0x58]
  0126e:    	mov    rsi,QWORD PTR [rbp-0x80]
  01272:    	sub    rsp,0x20
  01276:    	movq   QWORD PTR [rsp],xmm2
  0127b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01281:    	movq   QWORD PTR [rsp+0x10],xmm5
  01287:    	movq   QWORD PTR [rsp+0x18],xmm6
  0128d:    	mov    rdx,rdi
  01290:    	mov    rcx,rsi
  01293:    	mov    rdi,rbx
  01296:    	mov    rsi,r12
  01299: 34 	movabs rax,0x563437f17b80
  012a3:    	call   rax
  012a5:    	movq   xmm2,QWORD PTR [rsp]
  012aa:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012b0:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012b6:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012bc:    	add    rsp,0x20
  012c0: 34 	movabs r13,0x563439855a90
  012ca:    	test   rax,rax
  012cd:    	je     0xfffe1123
  012d3:    	mov    QWORD PTR [rbp-0x80],rax
:00084 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  012d7: 01 	sub    DWORD PTR [rip+0x7fe],0x1        # 0x1adc
  012de:    	je     0x32def
  012e4:    	mov    rdi,QWORD PTR [rbp-0x78]
  012e8:    	mov    rsi,QWORD PTR [rbp-0x80]
  012ec:    	sub    rsp,0x20
  012f0:    	movq   QWORD PTR [rsp],xmm2
  012f5:    	movq   QWORD PTR [rsp+0x8],xmm4
  012fb:    	movq   QWORD PTR [rsp+0x10],xmm5
  01301:    	movq   QWORD PTR [rsp+0x18],xmm6
  01307:    	mov    rdx,rdi
  0130a:    	mov    rcx,rsi
  0130d:    	mov    rdi,rbx
  01310:    	mov    rsi,r12
  01313: 34 	movabs rax,0x563437f15c00
  0131d:    	call   rax
  0131f:    	movq   xmm2,QWORD PTR [rsp]
  01324:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0132a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01330:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01336:    	add    rsp,0x20
  0133a: 34 	movabs r13,0x563439855aa0
  01344:    	test   rax,rax
  01347:    	je     0xfffe1123
  0134d:    	mov    QWORD PTR [rbp-0x78],rax
:00085 %12 = %1.call org()                  [<INVALID>]
  01351: 01 	sub    DWORD PTR [rip+0x788],0x1        # 0x1ae0
  01358:    	je     0x32e2d
  0135e:    	sub    rsp,0x20
  01362:    	movq   QWORD PTR [rsp],xmm2
  01367:    	movq   QWORD PTR [rsp+0x8],xmm4
  0136d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01373:    	movq   QWORD PTR [rsp+0x18],xmm6
  01379:    	mov    rdi,QWORD PTR [rbp-0x30]
  0137d: 34 	movabs rax,0x563437f53600
  01387:    	call   rax
  01389:    	mov    r15d,eax
  0138c: 00 	cmp    r15d,DWORD PTR [rip+0x755]        # 0x1ae8
  01393:    	jne    0x32e4f
  01399:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2942]        # 0xfffe3ce1
  0139f:    	cmp    DWORD PTR [rip+0x73f],eax        # 0x1ae4
  013a5:    	jne    0x32e4f
  013ab: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013b4:    	mov    QWORD PTR [rsp-0x38],rcx
  013b9:    	mov    rax,QWORD PTR [rbx]
  013bc:    	lea    rdi,[rsp-0x18]
  013c1:    	mov    QWORD PTR [rdi],rax
  013c4:    	mov    QWORD PTR [rbx],rdi
  013c7:    	mov    rax,QWORD PTR [rbp-0x30]
  013cb:    	mov    QWORD PTR [rsp-0x38],rax
  013d0: 00 	mov    rdi,0x0
  013d7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  013e0: 00 	movabs rax,0x0
  013ea:    	mov    QWORD PTR [rsp-0x28],rax
  013ef: 00 	movabs r13,0x0
  013f9:    	call   0xfffe10e8
  013fe:    	lea    rdi,[rbp-0x8]
  01402:    	mov    QWORD PTR [rbx],rdi
  01405:    	movq   xmm2,QWORD PTR [rsp]
  0140a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01410:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01416:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0141c:    	add    rsp,0x20
  01420:    	test   rax,rax
  01423:    	je     0x32ebb
  01429: ff 	mov    QWORD PTR [rbp-0x88],rax
:00086 
:00088 %11 = %12.call z()                   [<INVALID>]
  01430: 01 	sub    DWORD PTR [rip+0x6b5],0x1        # 0x1aec
  01437:    	je     0x32ee6
  0143d:    	sub    rsp,0x20
  01441:    	movq   QWORD PTR [rsp],xmm2
  01446:    	movq   QWORD PTR [rsp+0x8],xmm4
  0144c:    	movq   QWORD PTR [rsp+0x10],xmm5
  01452:    	movq   QWORD PTR [rsp+0x18],xmm6
  01458: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0145f: 34 	movabs rax,0x563437f53600
  01469:    	call   rax
  0146b:    	mov    r15d,eax
  0146e: 00 	cmp    r15d,DWORD PTR [rip+0x67f]        # 0x1af4
  01475:    	jne    0x32f08
  0147b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2860]        # 0xfffe3ce1
  01481:    	cmp    DWORD PTR [rip+0x669],eax        # 0x1af0
  01487:    	jne    0x32f08
  0148d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01496:    	mov    QWORD PTR [rsp-0x38],rcx
  0149b:    	mov    rax,QWORD PTR [rbx]
  0149e:    	lea    rdi,[rsp-0x18]
  014a3:    	mov    QWORD PTR [rdi],rax
  014a6:    	mov    QWORD PTR [rbx],rdi
  014a9: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014b0:    	mov    QWORD PTR [rsp-0x38],rax
  014b5: 00 	mov    rdi,0x0
  014bc: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014c5: 00 	movabs rax,0x0
  014cf:    	mov    QWORD PTR [rsp-0x28],rax
  014d4: 00 	movabs r13,0x0
  014de:    	call   0xfffe10e8
  014e3:    	lea    rdi,[rbp-0x8]
  014e7:    	mov    QWORD PTR [rbx],rdi
  014ea:    	movq   xmm2,QWORD PTR [rsp]
  014ef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014f5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  014fb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01501:    	add    rsp,0x20
  01505:    	test   rax,rax
  01508:    	je     0x32f77
  0150e:    	mov    QWORD PTR [rbp-0x80],rax
:00089 
:00091 %13 = %1.call dir()                  [<INVALID>]
  01512: 01 	sub    DWORD PTR [rip+0x5df],0x1        # 0x1af8
  01519:    	je     0x32fa2
  0151f:    	sub    rsp,0x20
  01523:    	movq   QWORD PTR [rsp],xmm2
  01528:    	movq   QWORD PTR [rsp+0x8],xmm4
  0152e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01534:    	movq   QWORD PTR [rsp+0x18],xmm6
  0153a:    	mov    rdi,QWORD PTR [rbp-0x30]
  0153e: 34 	movabs rax,0x563437f53600
  01548:    	call   rax
  0154a:    	mov    r15d,eax
  0154d: 00 	cmp    r15d,DWORD PTR [rip+0x5ac]        # 0x1b00
  01554:    	jne    0x32fc4
  0155a:    	mov    eax,DWORD PTR [rip+0xfffffffffffe2781]        # 0xfffe3ce1
  01560:    	cmp    DWORD PTR [rip+0x596],eax        # 0x1afc
  01566:    	jne    0x32fc4
  0156c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01575:    	mov    QWORD PTR [rsp-0x38],rcx
  0157a:    	mov    rax,QWORD PTR [rbx]
  0157d:    	lea    rdi,[rsp-0x18]
  01582:    	mov    QWORD PTR [rdi],rax
  01585:    	mov    QWORD PTR [rbx],rdi
  01588:    	mov    rax,QWORD PTR [rbp-0x30]
  0158c:    	mov    QWORD PTR [rsp-0x38],rax
  01591: 00 	mov    rdi,0x0
  01598: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015a1: 00 	movabs rax,0x0
  015ab:    	mov    QWORD PTR [rsp-0x28],rax
  015b0: 00 	movabs r13,0x0
  015ba:    	call   0xfffe10e8
  015bf:    	lea    rdi,[rbp-0x8]
  015c3:    	mov    QWORD PTR [rbx],rdi
  015c6:    	movq   xmm2,QWORD PTR [rsp]
  015cb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015d1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  015d7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  015dd:    	add    rsp,0x20
  015e1:    	test   rax,rax
  015e4:    	je     0x33030
  015ea: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 
:00094 %12 = %13.call z()                   [<INVALID>]
  015f1: 01 	sub    DWORD PTR [rip+0x50c],0x1        # 0x1b04
  015f8:    	je     0x3305b
  015fe:    	sub    rsp,0x20
  01602:    	movq   QWORD PTR [rsp],xmm2
  01607:    	movq   QWORD PTR [rsp+0x8],xmm4
  0160d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01613:    	movq   QWORD PTR [rsp+0x18],xmm6
  01619: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01620: 34 	movabs rax,0x563437f53600
  0162a:    	call   rax
  0162c:    	mov    r15d,eax
  0162f: 00 	cmp    r15d,DWORD PTR [rip+0x4d6]        # 0x1b0c
  01636:    	jne    0x3307d
  0163c:    	mov    eax,DWORD PTR [rip+0xfffffffffffe269f]        # 0xfffe3ce1
  01642:    	cmp    DWORD PTR [rip+0x4c0],eax        # 0x1b08
  01648:    	jne    0x3307d
  0164e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01657:    	mov    QWORD PTR [rsp-0x38],rcx
  0165c:    	mov    rax,QWORD PTR [rbx]
  0165f:    	lea    rdi,[rsp-0x18]
  01664:    	mov    QWORD PTR [rdi],rax
  01667:    	mov    QWORD PTR [rbx],rdi
  0166a: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01671:    	mov    QWORD PTR [rsp-0x38],rax
  01676: 00 	mov    rdi,0x0
  0167d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01686: 00 	movabs rax,0x0
  01690:    	mov    QWORD PTR [rsp-0x28],rax
  01695: 00 	movabs r13,0x0
  0169f:    	call   0xfffe10e8
  016a4:    	lea    rdi,[rbp-0x8]
  016a8:    	mov    QWORD PTR [rbx],rdi
  016ab:    	movq   xmm2,QWORD PTR [rsp]
  016b0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016b6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  016bc:    	movq   xmm6,QWORD PTR [rsp+0x18]
  016c2:    	add    rsp,0x20
  016c6:    	test   rax,rax
  016c9:    	je     0x330ec
  016cf: ff 	mov    QWORD PTR [rbp-0x88],rax
:00095 
:00097 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  016d6: 01 	sub    DWORD PTR [rip+0x433],0x1        # 0x1b10
  016dd:    	je     0x33117
  016e3:    	mov    rdi,QWORD PTR [rbp-0x58]
  016e7: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  016ee:    	sub    rsp,0x20
  016f2:    	movq   QWORD PTR [rsp],xmm2
  016f7:    	movq   QWORD PTR [rsp+0x8],xmm4
  016fd:    	movq   QWORD PTR [rsp+0x10],xmm5
  01703:    	movq   QWORD PTR [rsp+0x18],xmm6
  01709:    	mov    rdx,rdi
  0170c:    	mov    rcx,rsi
  0170f:    	mov    rdi,rbx
  01712:    	mov    rsi,r12
  01715: 34 	movabs rax,0x563437f17b80
  0171f:    	call   rax
  01721:    	movq   xmm2,QWORD PTR [rsp]
  01726:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0172c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01732:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01738:    	add    rsp,0x20
  0173c: 34 	movabs r13,0x563439855b70
  01746:    	test   rax,rax
  01749:    	je     0xfffe1123
  0174f: ff 	mov    QWORD PTR [rbp-0x88],rax
:00098 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  01756: 01 	sub    DWORD PTR [rip+0x3b7],0x1        # 0x1b14
  0175d:    	je     0x33155
  01763:    	mov    rdi,QWORD PTR [rbp-0x80]
  01767: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  0176e:    	sub    rsp,0x20
  01772:    	movq   QWORD PTR [rsp],xmm2
  01777:    	movq   QWORD PTR [rsp+0x8],xmm4
  0177d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01783:    	movq   QWORD PTR [rsp+0x18],xmm6
  01789:    	mov    rdx,rdi
  0178c:    	mov    rcx,rsi
  0178f:    	mov    rdi,rbx
  01792:    	mov    rsi,r12
  01795: 34 	movabs rax,0x563437f15c00
  0179f:    	call   rax
  017a1:    	movq   xmm2,QWORD PTR [rsp]
  017a6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017ac:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017b2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  017b8:    	add    rsp,0x20
  017bc: 34 	movabs r13,0x563439855b80
  017c6:    	test   rax,rax
  017c9:    	je     0xfffe1123
  017cf:    	mov    QWORD PTR [rbp-0x80],rax
:00099 %7 = %8.call new(%9; 3)              [<INVALID>]
  017d3: 01 	sub    DWORD PTR [rip+0x33e],0x1        # 0x1b18
  017da:    	je     0x33193
  017e0:    	sub    rsp,0x20
  017e4:    	movq   QWORD PTR [rsp],xmm2
  017e9:    	movq   QWORD PTR [rsp+0x8],xmm4
  017ef:    	movq   QWORD PTR [rsp+0x10],xmm5
  017f5:    	movq   QWORD PTR [rsp+0x18],xmm6
  017fb:    	mov    rdi,QWORD PTR [rbp-0x68]
  017ff: 34 	movabs rax,0x563437f53600
  01809:    	call   rax
  0180b:    	mov    r15d,eax
  0180e: 00 	cmp    r15d,DWORD PTR [rip+0x30b]        # 0x1b20
  01815:    	jne    0x331b5
  0181b:    	mov    eax,DWORD PTR [rip+0xfffffffffffe24c0]        # 0xfffe3ce1
  01821:    	cmp    DWORD PTR [rip+0x2f5],eax        # 0x1b1c
  01827:    	jne    0x331b5
  0182d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01836:    	mov    QWORD PTR [rsp-0x38],rcx
  0183b:    	mov    rax,QWORD PTR [rbx]
  0183e:    	lea    rdi,[rsp-0x18]
  01843:    	mov    QWORD PTR [rdi],rax
  01846:    	mov    QWORD PTR [rbx],rdi
  01849:    	mov    rax,QWORD PTR [rbp-0x68]
  0184d:    	mov    QWORD PTR [rsp-0x38],rax
  01852: 00 	mov    rdi,0x3
  01859:    	mov    rax,QWORD PTR [rbp-0x70]
  0185d:    	mov    QWORD PTR [rsp-0x40],rax
  01862:    	mov    rax,QWORD PTR [rbp-0x78]
  01866:    	mov    QWORD PTR [rsp-0x48],rax
  0186b:    	mov    rax,QWORD PTR [rbp-0x80]
  0186f:    	mov    QWORD PTR [rsp-0x50],rax
  01874: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0187d: 00 	movabs rax,0x0
  01887:    	mov    QWORD PTR [rsp-0x28],rax
  0188c: 00 	movabs r13,0x0
  01896:    	call   0xfffe10e8
  0189b:    	lea    rdi,[rbp-0x8]
  0189f:    	mov    QWORD PTR [rbx],rdi
  018a2:    	movq   xmm2,QWORD PTR [rsp]
  018a7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018ad:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018b3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  018b9:    	add    rsp,0x20
  018bd:    	test   rax,rax
  018c0:    	je     0x33221
  018c6:    	mov    QWORD PTR [rbp-0x60],rax
:00100 
:00102 _ = %2.call pl=(%7; 1)               [<INVALID>]
  018ca: 01 	sub    DWORD PTR [rip+0x253],0x1        # 0x1b24
  018d1:    	je     0x3324c
  018d7:    	sub    rsp,0x20
  018db:    	movq   QWORD PTR [rsp],xmm2
  018e0:    	movq   QWORD PTR [rsp+0x8],xmm4
  018e6:    	movq   QWORD PTR [rsp+0x10],xmm5
  018ec:    	movq   QWORD PTR [rsp+0x18],xmm6
  018f2:    	mov    rdi,QWORD PTR [rbp-0x38]
  018f6: 34 	movabs rax,0x563437f53600
  01900:    	call   rax
  01902:    	mov    r15d,eax
  01905: 00 	cmp    r15d,DWORD PTR [rip+0x220]        # 0x1b2c
  0190c:    	jne    0x3326e
  01912:    	mov    eax,DWORD PTR [rip+0xfffffffffffe23c9]        # 0xfffe3ce1
  01918:    	cmp    DWORD PTR [rip+0x20a],eax        # 0x1b28
  0191e:    	jne    0x3326e
  01924: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0192d:    	mov    QWORD PTR [rsp-0x38],rcx
  01932:    	mov    rax,QWORD PTR [rbx]
  01935:    	lea    rdi,[rsp-0x18]
  0193a:    	mov    QWORD PTR [rdi],rax
  0193d:    	mov    QWORD PTR [rbx],rdi
  01940:    	mov    rax,QWORD PTR [rbp-0x38]
  01944:    	mov    QWORD PTR [rsp-0x38],rax
  01949: 00 	mov    rdi,0x1
  01950:    	mov    rax,QWORD PTR [rbp-0x60]
  01954:    	mov    QWORD PTR [rsp-0x40],rax
  01959: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01962: 00 	movabs rax,0x0
  0196c:    	mov    QWORD PTR [rsp-0x28],rax
  01971: 00 	movabs r13,0x0
  0197b:    	call   0xfffe10e8
  01980:    	lea    rdi,[rbp-0x8]
  01984:    	mov    QWORD PTR [rbx],rdi
  01987:    	movq   xmm2,QWORD PTR [rsp]
  0198c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01992:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01998:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0199e:    	add    rsp,0x20
  019a2:    	test   rax,rax
  019a5:    	je     0x332da
:00103 
:00105 br =>:00106
  019ab:    	jmp    0x33342
:00106 %7 = nil
  019b0: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00107 ret %7
  019b8:    	mov    rax,QWORD PTR [rbp-0x60]
  019bc:    	leave  
  019bd:    	ret    
==> start whole compile: <unnamed> FuncId(80) self_class:Scene start:[00000] bytecode:0x563439851560
<== finished compile. elapsed:152.1µs
offset:Pos(133704) code: 9163 bytes  data: 421 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x1
  00011:    	je     0x73
  00017:    	jl     0x22
  0001d:    	jmp    0x73
  00022:    	mov    eax,0x1
  00027:    	sub    eax,edx
  00029:    	test   rax,rax
  0002c:    	je     0x48
  00032:    	lea    rdi,[rbp-0x38]
  00036: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  0003e:    	sub    rax,0x1
  00042:    	jne    0x36
  00048:    	mov    edx,0x1
  0004d:    	mov    eax,0x1
  00052:    	sub    eax,edx
  00054:    	test   rax,rax
  00057:    	je     0x73
  0005d:    	lea    rdi,[rbp-0x38]
  00061: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00069:    	sub    rax,0x1
  0006d:    	jne    0x61
  00073: 00 	mov    rax,0x4
  0007a:    	mov    QWORD PTR [rbp-0x38],rax
  0007e:    	mov    QWORD PTR [rbp-0x40],rax
  00082:    	mov    QWORD PTR [rbp-0x48],rax
  00086:    	mov    QWORD PTR [rbp-0x50],rax
  0008a:    	mov    QWORD PTR [rbp-0x58],rax
  0008e:    	mov    QWORD PTR [rbp-0x60],rax
  00092:    	mov    QWORD PTR [rbp-0x68],rax
  00096:    	mov    QWORD PTR [rbp-0x70],rax
  0009a:    	mov    QWORD PTR [rbp-0x78],rax
  0009e:    	mov    QWORD PTR [rbp-0x80],rax
  000a2: ff 	mov    QWORD PTR [rbp-0x88],rax
  000a9: ff 	mov    QWORD PTR [rbp-0x90],rax
  000b0: ff 	mov    QWORD PTR [rbp-0x98],rax
  000b7: ff 	mov    QWORD PTR [rbp-0xa0],rax
  000be: ff 	mov    QWORD PTR [rbp-0xa8],rax
  000c5:    	mov    rdi,QWORD PTR [rbp-0x28]
  000c9: 00 	test   rdi,0x7
  000d0:    	jne    0x31847
  000d6:    	cmp    DWORD PTR [rdi+0x4],0x32
  000da:    	jne    0x31847
:00000 init_block reg:17 arg:1 pos:1 req:1 stack_offset:11
:00001 %13 = %0.call rand()                 [Scene]
  000e0:    	mov    rdi,QWORD PTR [rbp-0x28]
  000e4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe20c6],0x26        # 0xfffe21b1
  000eb:    	jne    0x31856
  000f1: 00 	mov    r9,0x0
  000f8:    	mov    rdx,rdi
  000fb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00104:    	mov    QWORD PTR [rsp-0x38],rcx
  00109:    	mov    rax,QWORD PTR [rbx]
  0010c:    	lea    rdi,[rsp-0x18]
  00111:    	mov    QWORD PTR [rdi],rax
  00114:    	mov    QWORD PTR [rbx],rdi
  00117: ff 	lea    rcx,[rbp-0x98]
  0011e: 00 	mov    r8,0x0
  00125:    	call   0x31865
  0012a:    	lea    rdi,[rbp-0x8]
  0012e:    	mov    QWORD PTR [rbx],rdi
  00131: 34 	movabs r13,0x563439851590
  0013b:    	test   rax,rax
  0013e:    	je     0xfffdf5f3
  00144: ff 	mov    QWORD PTR [rbp-0x90],rax
:00002 
:00004 %2 = %13
  0014b: ff 	mov    rax,QWORD PTR [rbp-0x90]
  00152:    	mov    QWORD PTR [rbp-0x38],rax
:00005 %13 = literal[2.0]
  00156: 00 	movq   xmm2,QWORD PTR [rip+0x227a]        # 0x23d8
  0015e: 00 	mov    rax,0x2
  00165: ff 	mov    QWORD PTR [rbp-0x90],rax
:00006 %14 = literal[3.14159265]
  0016c: 00 	movq   xmm3,QWORD PTR [rip+0x2274]        # 0x23e8
  00174: da 	movabs rax,0x490fda9e46a78a
  0017e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00007 %13 = %13 * %14                      [Float][Float]
  00185:    	mulsd  xmm2,xmm3
:00008 %14 = %0.call rand()                 [Scene]
  00189:    	mov    rdi,QWORD PTR [rbp-0x28]
  0018d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe201d],0x26        # 0xfffe21b1
  00194:    	jne    0x31897
  0019a: 00 	mov    r9,0x0
  001a1:    	sub    rsp,0x10
  001a5:    	movq   QWORD PTR [rsp],xmm2
  001aa:    	mov    rdx,rdi
  001ad: 00 	mov    QWORD PTR [rsp-0x20],0x0
  001b6:    	mov    QWORD PTR [rsp-0x38],rcx
  001bb:    	mov    rax,QWORD PTR [rbx]
  001be:    	lea    rdi,[rsp-0x18]
  001c3:    	mov    QWORD PTR [rdi],rax
  001c6:    	mov    QWORD PTR [rbx],rdi
  001c9: ff 	lea    rcx,[rbp-0xa0]
  001d0: 00 	mov    r8,0x0
  001d7:    	call   0x318b6
  001dc:    	lea    rdi,[rbp-0x8]
  001e0:    	mov    QWORD PTR [rbx],rdi
  001e3:    	movq   xmm2,QWORD PTR [rsp]
  001e8:    	add    rsp,0x10
  001ec: 34 	movabs r13,0x563439851600
  001f6:    	test   rax,rax
  001f9:    	je     0xfffdf5f3
  001ff: ff 	mov    QWORD PTR [rbp-0x98],rax
:00009 
:00011 %3 = %13 * %14                       [Float][Float]
  00206: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0020d: 00 	test   rdi,0x1
  00214:    	jne    0x318e8
  0021a: 00 	test   rdi,0x2
  00221:    	je     0x25d
  00227:    	xorps  xmm3,xmm3
  0022a: 00 	movabs rax,0x8000000000000002
  00234:    	cmp    rdi,rax
  00237:    	je     0x26f
  0023d:    	mov    rax,rdi
  00240:    	sar    rax,0x3f
  00244:    	add    rax,0x2
  00248:    	and    rdi,0xfffffffffffffffc
  0024c:    	or     rdi,rax
  0024f:    	rol    rdi,0x3d
  00253:    	movq   xmm3,rdi
  00258:    	jmp    0x26f
  0025d:    	call   0xfffdf64c
  00262:    	test   rax,rax
  00265:    	je     0x318e8
  0026b:    	movq   xmm3,xmm0
  0026f:    	movq   xmm4,xmm2
  00273:    	mulsd  xmm4,xmm3
:00012 %14 = const[Math]                    [Math]
  00277: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe1f3a]        # 0xfffe21b8
  0027e: 00 	cmp    rax,QWORD PTR [rip+0x2183]        # 0x2408
  00285:    	jne    0x31907
  0028b: 00 	mov    rax,QWORD PTR [rip+0x2166]        # 0x23f8
  00292: ff 	mov    QWORD PTR [rbp-0x98],rax
:00013 %15 = %3
:00014 %13 = %14.call cos(%15; 1)           [#<Class:Math>]
  00299: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002a0: 00 	test   rdi,0x7
  002a7:    	jne    0x3196b
  002ad:    	cmp    DWORD PTR [rdi+0x4],0x21
  002b1:    	jne    0x3196b
  002b7: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1ef3],0x26        # 0xfffe21b1
  002be:    	jne    0x3196b
  002c4:    	sub    rsp,0x10
  002c8:    	movq   QWORD PTR [rsp],xmm2
  002cd:    	movq   QWORD PTR [rsp+0x8],xmm4
  002d3:    	movq   xmm0,xmm4
  002d7: 34 	movabs rax,0x563437f28290
  002e1:    	call   rax
  002e3:    	movq   xmm2,QWORD PTR [rsp]
  002e8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  002ee:    	add    rsp,0x10
  002f2:    	movq   xmm2,xmm0
:00015 
:00017 %15 = const[Math]                    [Math]
  002f6: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe1ebb]        # 0xfffe21b8
  002fd: 00 	cmp    rax,QWORD PTR [rip+0x2124]        # 0x2428
  00304:    	jne    0x3198e
  0030a: 00 	mov    rax,QWORD PTR [rip+0x2107]        # 0x2418
  00311: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00018 %16 = literal[1.0]
  00318: 00 	movq   xmm3,QWORD PTR [rip+0x2118]        # 0x2438
  00320: 00 	movabs rax,0xff80000000000002
  0032a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00019 %16 = %16 - %2                       [Float][Float]
  00331:    	mov    rdi,QWORD PTR [rbp-0x38]
  00335: 00 	test   rdi,0x1
  0033c:    	jne    0x319f2
  00342: 00 	test   rdi,0x2
  00349:    	je     0x385
  0034f:    	xorps  xmm5,xmm5
  00352: 00 	movabs rax,0x8000000000000002
  0035c:    	cmp    rdi,rax
  0035f:    	je     0x397
  00365:    	mov    rax,rdi
  00368:    	sar    rax,0x3f
  0036c:    	add    rax,0x2
  00370:    	and    rdi,0xfffffffffffffffc
  00374:    	or     rdi,rax
  00377:    	rol    rdi,0x3d
  0037b:    	movq   xmm5,rdi
  00380:    	jmp    0x397
  00385:    	call   0xfffdf64c
  0038a:    	test   rax,rax
  0038d:    	je     0x319f2
  00393:    	movq   xmm5,xmm0
  00397:    	subsd  xmm3,xmm5
:00020 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  0039b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  003a2: 00 	test   rdi,0x7
  003a9:    	jne    0x31a1e
  003af:    	cmp    DWORD PTR [rdi+0x4],0x21
  003b3:    	jne    0x31a1e
  003b9: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1df1],0x26        # 0xfffe21b1
  003c0:    	jne    0x31a1e
  003c6:    	sqrtsd xmm6,xmm3
:00021 
:00023 %4 = %13 * %14                       [Float][Float]
  003ca:    	movq   xmm7,xmm2
  003ce:    	mulsd  xmm7,xmm6
:00024 %14 = const[Math]                    [Math]
  003d2: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe1ddf]        # 0xfffe21b8
  003d9: 00 	cmp    rax,QWORD PTR [rip+0x2078]        # 0x2458
  003e0:    	jne    0x31a5a
  003e6: 00 	mov    rax,QWORD PTR [rip+0x205b]        # 0x2448
  003ed: ff 	mov    QWORD PTR [rbp-0x98],rax
:00025 %15 = %3
:00026 %13 = %14.call sin(%15; 1)           [#<Class:Math>]
  003f4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003fb: 00 	test   rdi,0x7
  00402:    	jne    0x31ae2
  00408:    	cmp    DWORD PTR [rdi+0x4],0x21
  0040c:    	jne    0x31ae2
  00412: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1d98],0x26        # 0xfffe21b1
  00419:    	jne    0x31ae2
  0041f:    	sub    rsp,0x30
  00423:    	movq   QWORD PTR [rsp],xmm2
  00428:    	movq   QWORD PTR [rsp+0x8],xmm3
  0042e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00434:    	movq   QWORD PTR [rsp+0x18],xmm5
  0043a:    	movq   QWORD PTR [rsp+0x20],xmm7
  00440:    	movq   xmm0,xmm4
  00444: 34 	movabs rax,0x563437f282a0
  0044e:    	call   rax
  00450:    	movq   xmm2,QWORD PTR [rsp]
  00455:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0045b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00461:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00467:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0046d:    	add    rsp,0x30
  00471:    	movq   xmm2,xmm0
:00027 
:00029 %15 = const[Math]                    [Math]
  00475: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe1d3c]        # 0xfffe21b8
  0047c: 00 	cmp    rax,QWORD PTR [rip+0x1ff5]        # 0x2478
  00483:    	jne    0x31b22
  00489: 00 	mov    rax,QWORD PTR [rip+0x1fd8]        # 0x2468
  00490: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00030 %16 = literal[1.0]
  00497: 00 	movq   xmm3,QWORD PTR [rip+0x1fe9]        # 0x2488
  0049f: 00 	movabs rax,0xff80000000000002
  004a9: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00031 %16 = %16 - %2                       [Float][Float]
  004b0:    	subsd  xmm3,xmm5
:00032 %14 = %15.call sqrt(%16; 1)          [#<Class:Math>]
  004b4: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  004bb: 00 	test   rdi,0x7
  004c2:    	jne    0x31baa
  004c8:    	cmp    DWORD PTR [rdi+0x4],0x21
  004cc:    	jne    0x31baa
  004d2: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1cd8],0x26        # 0xfffe21b1
  004d9:    	jne    0x31baa
  004df:    	sqrtsd xmm6,xmm3
:00033 
:00035 %5 = %13 * %14                       [Float][Float]
  004e3:    	movq   xmm8,xmm2
  004e8:    	mulsd  xmm8,xmm6
:00036 %13 = const[Math]                    [Math]
  004ed: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe1cc4]        # 0xfffe21b8
  004f4: 00 	cmp    rax,QWORD PTR [rip+0x1fad]        # 0x24a8
  004fb:    	jne    0x31bf3
  00501: 00 	mov    rax,QWORD PTR [rip+0x1f90]        # 0x2498
  00508: ff 	mov    QWORD PTR [rbp-0x90],rax
:00037 %14 = %2
:00038 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  0050f: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00516: 00 	test   rdi,0x7
  0051d:    	jne    0x31c89
  00523:    	cmp    DWORD PTR [rdi+0x4],0x21
  00527:    	jne    0x31c89
  0052d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1c7d],0x26        # 0xfffe21b1
  00534:    	jne    0x31c89
  0053a:    	sqrtsd xmm2,xmm5
:00039 
:00041 %14 = dynvar(2, %2)
  0053e:    	mov    rax,QWORD PTR [rbp-0x10]
  00542:    	mov    rax,QWORD PTR [rax]
  00545:    	mov    rax,QWORD PTR [rax-0x28]
  00549: ff 	mov    QWORD PTR [rbp-0x98],rax
:00042 %15 = 0: i32
  00550: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00043 %14 = %14.[%15]                      [Array][Integer]
  0055b:    	sub    rsp,0x30
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576:    	movq   QWORD PTR [rsp+0x20],xmm7
  0057c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00583: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  0058a: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00591:    	mov    rdi,rbx
  00594:    	mov    rsi,r12
  00597: 34 	movabs r8,0x563439851818
  005a1: 34 	movabs rax,0x563437f47370
  005ab:    	call   rax
  005ad:    	movq   xmm2,QWORD PTR [rsp]
  005b2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005b8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005be:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005c4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005ca: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  005d1:    	add    rsp,0x30
  005d5: 34 	movabs r13,0x563439851820
  005df:    	test   rax,rax
  005e2:    	je     0xfffdf5f3
  005e8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00044 %13 = %14.call x()                   [Vec]
  005ef: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  005f6: 00 	test   rdi,0x7
  005fd:    	jne    0x31ce0
  00603:    	cmp    DWORD PTR [rdi+0x4],0x28
  00607:    	jne    0x31ce0
  0060d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1b9d],0x26        # 0xfffe21b1
  00614:    	jne    0x31ce0
  0061a:    	mov    esi,DWORD PTR [rip+0x1e94]        # 0x24b4
  00620:    	cmp    esi,0xffffffff
  00623:    	je     0x31d34
  00629:    	cmp    WORD PTR [rdi+0x2],0x3
  0062e:    	jne    0x647
  00634:    	cmp    esi,0x6
  00637:    	jge    0x647
  0063d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00642:    	jmp    0x6a3
  00647:    	sub    rsp,0x30
  0064b:    	movq   QWORD PTR [rsp],xmm2
  00650:    	movq   QWORD PTR [rsp+0x8],xmm3
  00656:    	movq   QWORD PTR [rsp+0x10],xmm4
  0065c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00662:    	movq   QWORD PTR [rsp+0x20],xmm7
  00668: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0066f: 34 	movabs rax,0x563437ed0590
  00679:    	call   rax
  0067b:    	movq   xmm2,QWORD PTR [rsp]
  00680:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00686:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0068c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00692:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00698: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0069f:    	add    rsp,0x30
  006a3: ff 	mov    QWORD PTR [rbp-0x90],rax
:00045 
:00047 %13 = %4 * %13                       [Float][Float]
  006aa: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  006b1: 00 	test   rdi,0x1
  006b8:    	jne    0x31dad
  006be: 00 	test   rdi,0x2
  006c5:    	je     0x701
  006cb:    	xorps  xmm6,xmm6
  006ce: 00 	movabs rax,0x8000000000000002
  006d8:    	cmp    rdi,rax
  006db:    	je     0x713
  006e1:    	mov    rax,rdi
  006e4:    	sar    rax,0x3f
  006e8:    	add    rax,0x2
  006ec:    	and    rdi,0xfffffffffffffffc
  006f0:    	or     rdi,rax
  006f3:    	rol    rdi,0x3d
  006f7:    	movq   xmm6,rdi
  006fc:    	jmp    0x713
  00701:    	call   0xfffdf64c
  00706:    	test   rax,rax
  00709:    	je     0x31dad
  0070f:    	movq   xmm6,xmm0
  00713:    	mulsd  xmm6,xmm7
:00048 %15 = dynvar(2, %2)
  00717:    	mov    rax,QWORD PTR [rbp-0x10]
  0071b:    	mov    rax,QWORD PTR [rax]
  0071e:    	mov    rax,QWORD PTR [rax-0x28]
  00722: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00049 %16 = 1: i32
  00729: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00050 %15 = %15.[%16]                      [Array][Integer]
  00734:    	sub    rsp,0x30
  00738:    	movq   QWORD PTR [rsp],xmm2
  0073d:    	movq   QWORD PTR [rsp+0x8],xmm4
  00743:    	movq   QWORD PTR [rsp+0x10],xmm5
  00749:    	movq   QWORD PTR [rsp+0x18],xmm6
  0074f:    	movq   QWORD PTR [rsp+0x20],xmm7
  00755: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0075c: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00763: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0076a:    	mov    rdi,rbx
  0076d:    	mov    rsi,r12
  00770: 34 	movabs r8,0x563439851888
  0077a: 34 	movabs rax,0x563437f47370
  00784:    	call   rax
  00786:    	movq   xmm2,QWORD PTR [rsp]
  0078b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00791:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00797:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0079d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007a3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  007aa:    	add    rsp,0x30
  007ae: 34 	movabs r13,0x563439851890
  007b8:    	test   rax,rax
  007bb:    	je     0xfffdf5f3
  007c1: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00051 %14 = %15.call x()                   [Vec]
  007c8: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  007cf: 00 	test   rdi,0x7
  007d6:    	jne    0x31e01
  007dc:    	cmp    DWORD PTR [rdi+0x4],0x28
  007e0:    	jne    0x31e01
  007e6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe19c4],0x26        # 0xfffe21b1
  007ed:    	jne    0x31e01
  007f3:    	mov    esi,DWORD PTR [rip+0x1cc3]        # 0x24bc
  007f9:    	cmp    esi,0xffffffff
  007fc:    	je     0x31e55
  00802:    	cmp    WORD PTR [rdi+0x2],0x3
  00807:    	jne    0x820
  0080d:    	cmp    esi,0x6
  00810:    	jge    0x820
  00816:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0081b:    	jmp    0x87c
  00820:    	sub    rsp,0x30
  00824:    	movq   QWORD PTR [rsp],xmm2
  00829:    	movq   QWORD PTR [rsp+0x8],xmm4
  0082f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00835:    	movq   QWORD PTR [rsp+0x18],xmm6
  0083b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00841: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00848: 34 	movabs rax,0x563437ed0590
  00852:    	call   rax
  00854:    	movq   xmm2,QWORD PTR [rsp]
  00859:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0085f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00865:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0086b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00871: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00878:    	add    rsp,0x30
  0087c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00052 
:00054 %14 = %5 * %14                       [Float][Float]
  00883: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0088a: 00 	test   rdi,0x1
  00891:    	jne    0x31ece
  00897: 00 	test   rdi,0x2
  0089e:    	je     0x8da
  008a4:    	xorps  xmm3,xmm3
  008a7: 00 	movabs rax,0x8000000000000002
  008b1:    	cmp    rdi,rax
  008b4:    	je     0x8ec
  008ba:    	mov    rax,rdi
  008bd:    	sar    rax,0x3f
  008c1:    	add    rax,0x2
  008c5:    	and    rdi,0xfffffffffffffffc
  008c9:    	or     rdi,rax
  008cc:    	rol    rdi,0x3d
  008d0:    	movq   xmm3,rdi
  008d5:    	jmp    0x8ec
  008da:    	call   0xfffdf64c
  008df:    	test   rax,rax
  008e2:    	je     0x31ece
  008e8:    	movq   xmm3,xmm0
  008ec:    	mulsd  xmm3,xmm8
:00055 %13 = %13 + %14                      [Float][Float]
  008f1:    	addsd  xmm6,xmm3
:00056 %15 = dynvar(2, %2)
  008f5:    	mov    rax,QWORD PTR [rbp-0x10]
  008f9:    	mov    rax,QWORD PTR [rax]
  008fc:    	mov    rax,QWORD PTR [rax-0x28]
  00900: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00057 %16 = 2: i32
  00907: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00058 %15 = %15.[%16]                      [Array][Integer]
  00912:    	sub    rsp,0x40
  00916:    	movq   QWORD PTR [rsp],xmm2
  0091b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00921:    	movq   QWORD PTR [rsp+0x10],xmm4
  00927:    	movq   QWORD PTR [rsp+0x18],xmm5
  0092d:    	movq   QWORD PTR [rsp+0x20],xmm6
  00933:    	movq   QWORD PTR [rsp+0x28],xmm7
  00939: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00940: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00947: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  0094e:    	mov    rdi,rbx
  00951:    	mov    rsi,r12
  00954: 34 	movabs r8,0x563439851908
  0095e: 34 	movabs rax,0x563437f47370
  00968:    	call   rax
  0096a:    	movq   xmm2,QWORD PTR [rsp]
  0096f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00975:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0097b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00981:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00987:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0098d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00994:    	add    rsp,0x40
  00998: 34 	movabs r13,0x563439851910
  009a2:    	test   rax,rax
  009a5:    	je     0xfffdf5f3
  009ab: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00059 %14 = %15.call x()                   [Vec]
  009b2: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  009b9: 00 	test   rdi,0x7
  009c0:    	jne    0x31f22
  009c6:    	cmp    DWORD PTR [rdi+0x4],0x28
  009ca:    	jne    0x31f22
  009d0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe17da],0x26        # 0xfffe21b1
  009d7:    	jne    0x31f22
  009dd:    	mov    esi,DWORD PTR [rip+0x1ae1]        # 0x24c4
  009e3:    	cmp    esi,0xffffffff
  009e6:    	je     0x31f76
  009ec:    	cmp    WORD PTR [rdi+0x2],0x3
  009f1:    	jne    0xa0a
  009f7:    	cmp    esi,0x6
  009fa:    	jge    0xa0a
  00a00:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a05:    	jmp    0xa66
  00a0a:    	sub    rsp,0x30
  00a0e:    	movq   QWORD PTR [rsp],xmm2
  00a13:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a19:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a1f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a25:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a2b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a32: 34 	movabs rax,0x563437ed0590
  00a3c:    	call   rax
  00a3e:    	movq   xmm2,QWORD PTR [rsp]
  00a43:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a49:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a4f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a55:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00a5b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00a62:    	add    rsp,0x30
  00a66: ff 	mov    QWORD PTR [rbp-0x98],rax
:00060 
:00062 %14 = %6 * %14                       [Float][Float]
  00a6d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a74: 00 	test   rdi,0x1
  00a7b:    	jne    0x31fef
  00a81: 00 	test   rdi,0x2
  00a88:    	je     0xac4
  00a8e:    	xorps  xmm3,xmm3
  00a91: 00 	movabs rax,0x8000000000000002
  00a9b:    	cmp    rdi,rax
  00a9e:    	je     0xad6
  00aa4:    	mov    rax,rdi
  00aa7:    	sar    rax,0x3f
  00aab:    	add    rax,0x2
  00aaf:    	and    rdi,0xfffffffffffffffc
  00ab3:    	or     rdi,rax
  00ab6:    	rol    rdi,0x3d
  00aba:    	movq   xmm3,rdi
  00abf:    	jmp    0xad6
  00ac4:    	call   0xfffdf64c
  00ac9:    	test   rax,rax
  00acc:    	je     0x31fef
  00ad2:    	movq   xmm3,xmm0
  00ad6:    	mulsd  xmm3,xmm2
:00063 %7 = %13 + %14                       [Float][Float]
  00ada:    	movq   xmm9,xmm6
  00adf:    	addsd  xmm9,xmm3
:00064 %14 = dynvar(2, %2)
  00ae4:    	mov    rax,QWORD PTR [rbp-0x10]
  00ae8:    	mov    rax,QWORD PTR [rax]
  00aeb:    	mov    rax,QWORD PTR [rax-0x28]
  00aef: ff 	mov    QWORD PTR [rbp-0x98],rax
:00065 %15 = 0: i32
  00af6: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00066 %14 = %14.[%15]                      [Array][Integer]
  00b01:    	sub    rsp,0x40
  00b05:    	movq   QWORD PTR [rsp],xmm2
  00b0a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b10:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b16:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b1c:    	movq   QWORD PTR [rsp+0x20],xmm7
  00b22: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00b29: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00b30: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00b37: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00b3e:    	mov    rdi,rbx
  00b41:    	mov    rsi,r12
  00b44: 34 	movabs r8,0x563439851988
  00b4e: 34 	movabs rax,0x563437f47370
  00b58:    	call   rax
  00b5a:    	movq   xmm2,QWORD PTR [rsp]
  00b5f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b65:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b6b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b71:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00b77: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00b7e: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00b85:    	add    rsp,0x40
  00b89: 34 	movabs r13,0x563439851990
  00b93:    	test   rax,rax
  00b96:    	je     0xfffdf5f3
  00b9c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00067 %13 = %14.call y()                   [Vec]
  00ba3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00baa: 00 	test   rdi,0x7
  00bb1:    	jne    0x32043
  00bb7:    	cmp    DWORD PTR [rdi+0x4],0x28
  00bbb:    	jne    0x32043
  00bc1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe15e9],0x26        # 0xfffe21b1
  00bc8:    	jne    0x32043
  00bce:    	mov    esi,DWORD PTR [rip+0x18f8]        # 0x24cc
  00bd4:    	cmp    esi,0xffffffff
  00bd7:    	je     0x32095
  00bdd:    	cmp    WORD PTR [rdi+0x2],0x3
  00be2:    	jne    0xbfb
  00be8:    	cmp    esi,0x6
  00beb:    	jge    0xbfb
  00bf1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00bf6:    	jmp    0xc59
  00bfb:    	sub    rsp,0x30
  00bff:    	movq   QWORD PTR [rsp],xmm2
  00c04:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c0a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c10:    	movq   QWORD PTR [rsp+0x18],xmm7
  00c16: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00c1d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00c24: 34 	movabs rax,0x563437ed0590
  00c2e:    	call   rax
  00c30:    	movq   xmm2,QWORD PTR [rsp]
  00c35:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c3b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c41:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c47: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00c4e: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00c55:    	add    rsp,0x30
  00c59: ff 	mov    QWORD PTR [rbp-0x90],rax
:00068 
:00070 %13 = %4 * %13                       [Float][Float]
  00c60: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00c67: 00 	test   rdi,0x1
  00c6e:    	jne    0x32110
  00c74: 00 	test   rdi,0x2
  00c7b:    	je     0xcb7
  00c81:    	xorps  xmm3,xmm3
  00c84: 00 	movabs rax,0x8000000000000002
  00c8e:    	cmp    rdi,rax
  00c91:    	je     0xcc9
  00c97:    	mov    rax,rdi
  00c9a:    	sar    rax,0x3f
  00c9e:    	add    rax,0x2
  00ca2:    	and    rdi,0xfffffffffffffffc
  00ca6:    	or     rdi,rax
  00ca9:    	rol    rdi,0x3d
  00cad:    	movq   xmm3,rdi
  00cb2:    	jmp    0xcc9
  00cb7:    	call   0xfffdf64c
  00cbc:    	test   rax,rax
  00cbf:    	je     0x32110
  00cc5:    	movq   xmm3,xmm0
  00cc9:    	mulsd  xmm3,xmm7
:00071 %15 = dynvar(2, %2)
  00ccd:    	mov    rax,QWORD PTR [rbp-0x10]
  00cd1:    	mov    rax,QWORD PTR [rax]
  00cd4:    	mov    rax,QWORD PTR [rax-0x28]
  00cd8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00072 %16 = 1: i32
  00cdf: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00073 %15 = %15.[%16]                      [Array][Integer]
  00cea:    	sub    rsp,0x40
  00cee:    	movq   QWORD PTR [rsp],xmm2
  00cf3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cf9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cff:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d05:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d0b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d12: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d19: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00d20: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00d27:    	mov    rdi,rbx
  00d2a:    	mov    rsi,r12
  00d2d: 34 	movabs r8,0x5634398519f8
  00d37: 34 	movabs rax,0x563437f47370
  00d41:    	call   rax
  00d43:    	movq   xmm2,QWORD PTR [rsp]
  00d48:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d4e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d54:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d5a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d60: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00d67: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d6e:    	add    rsp,0x40
  00d72: 34 	movabs r13,0x563439851a00
  00d7c:    	test   rax,rax
  00d7f:    	je     0xfffdf5f3
  00d85: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00074 %14 = %15.call y()                   [Vec]
  00d8c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00d93: 00 	test   rdi,0x7
  00d9a:    	jne    0x32162
  00da0:    	cmp    DWORD PTR [rdi+0x4],0x28
  00da4:    	jne    0x32162
  00daa: 26 	cmp    DWORD PTR [rip+0xfffffffffffe1400],0x26        # 0xfffe21b1
  00db1:    	jne    0x32162
  00db7:    	mov    esi,DWORD PTR [rip+0x1717]        # 0x24d4
  00dbd:    	cmp    esi,0xffffffff
  00dc0:    	je     0x321c4
  00dc6:    	cmp    WORD PTR [rdi+0x2],0x3
  00dcb:    	jne    0xde4
  00dd1:    	cmp    esi,0x6
  00dd4:    	jge    0xde4
  00dda:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ddf:    	jmp    0xe4e
  00de4:    	sub    rsp,0x40
  00de8:    	movq   QWORD PTR [rsp],xmm2
  00ded:    	movq   QWORD PTR [rsp+0x8],xmm3
  00df3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00df9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00dff:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e05: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00e0c: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00e13: 34 	movabs rax,0x563437ed0590
  00e1d:    	call   rax
  00e1f:    	movq   xmm2,QWORD PTR [rsp]
  00e24:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e2a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e30:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e36:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e3c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00e43: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00e4a:    	add    rsp,0x40
  00e4e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00075 
:00077 %14 = %5 * %14                       [Float][Float]
  00e55: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e5c: 00 	test   rdi,0x1
  00e63:    	jne    0x3224b
  00e69: 00 	test   rdi,0x2
  00e70:    	je     0xeac
  00e76:    	xorps  xmm6,xmm6
  00e79: 00 	movabs rax,0x8000000000000002
  00e83:    	cmp    rdi,rax
  00e86:    	je     0xebe
  00e8c:    	mov    rax,rdi
  00e8f:    	sar    rax,0x3f
  00e93:    	add    rax,0x2
  00e97:    	and    rdi,0xfffffffffffffffc
  00e9b:    	or     rdi,rax
  00e9e:    	rol    rdi,0x3d
  00ea2:    	movq   xmm6,rdi
  00ea7:    	jmp    0xebe
  00eac:    	call   0xfffdf64c
  00eb1:    	test   rax,rax
  00eb4:    	je     0x3224b
  00eba:    	movq   xmm6,xmm0
  00ebe:    	mulsd  xmm6,xmm8
:00078 %13 = %13 + %14                      [Float][Float]
  00ec3:    	addsd  xmm3,xmm6
:00079 %15 = dynvar(2, %2)
  00ec7:    	mov    rax,QWORD PTR [rbp-0x10]
  00ecb:    	mov    rax,QWORD PTR [rax]
  00ece:    	mov    rax,QWORD PTR [rax-0x28]
  00ed2: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00080 %16 = 2: i32
  00ed9: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00081 %15 = %15.[%16]                      [Array][Integer]
  00ee4:    	sub    rsp,0x40
  00ee8:    	movq   QWORD PTR [rsp],xmm2
  00eed:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ef3:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ef9:    	movq   QWORD PTR [rsp+0x18],xmm5
  00eff:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f05:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f0b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f12: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f19: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  00f20: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  00f27:    	mov    rdi,rbx
  00f2a:    	mov    rsi,r12
  00f2d: 34 	movabs r8,0x563439851a78
  00f37: 34 	movabs rax,0x563437f47370
  00f41:    	call   rax
  00f43:    	movq   xmm2,QWORD PTR [rsp]
  00f48:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f4e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f54:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f5a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f60:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f66: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f6d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f74:    	add    rsp,0x40
  00f78: 34 	movabs r13,0x563439851a80
  00f82:    	test   rax,rax
  00f85:    	je     0xfffdf5f3
  00f8b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00082 %14 = %15.call y()                   [Vec]
  00f92: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00f99: 00 	test   rdi,0x7
  00fa0:    	jne    0x322ad
  00fa6:    	cmp    DWORD PTR [rdi+0x4],0x28
  00faa:    	jne    0x322ad
  00fb0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe11fa],0x26        # 0xfffe21b1
  00fb7:    	jne    0x322ad
  00fbd:    	mov    esi,DWORD PTR [rip+0x1519]        # 0x24dc
  00fc3:    	cmp    esi,0xffffffff
  00fc6:    	je     0x3230f
  00fcc:    	cmp    WORD PTR [rdi+0x2],0x3
  00fd1:    	jne    0xfea
  00fd7:    	cmp    esi,0x6
  00fda:    	jge    0xfea
  00fe0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00fe5:    	jmp    0x1054
  00fea:    	sub    rsp,0x40
  00fee:    	movq   QWORD PTR [rsp],xmm2
  00ff3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ff9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fff:    	movq   QWORD PTR [rsp+0x18],xmm5
  01005:    	movq   QWORD PTR [rsp+0x20],xmm7
  0100b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01012: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01019: 34 	movabs rax,0x563437ed0590
  01023:    	call   rax
  01025:    	movq   xmm2,QWORD PTR [rsp]
  0102a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01030:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01036:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0103c:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01042: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01049: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01050:    	add    rsp,0x40
  01054: ff 	mov    QWORD PTR [rbp-0x98],rax
:00083 
:00085 %14 = %6 * %14                       [Float][Float]
  0105b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01062: 00 	test   rdi,0x1
  01069:    	jne    0x32396
  0106f: 00 	test   rdi,0x2
  01076:    	je     0x10b2
  0107c:    	xorps  xmm6,xmm6
  0107f: 00 	movabs rax,0x8000000000000002
  01089:    	cmp    rdi,rax
  0108c:    	je     0x10c4
  01092:    	mov    rax,rdi
  01095:    	sar    rax,0x3f
  01099:    	add    rax,0x2
  0109d:    	and    rdi,0xfffffffffffffffc
  010a1:    	or     rdi,rax
  010a4:    	rol    rdi,0x3d
  010a8:    	movq   xmm6,rdi
  010ad:    	jmp    0x10c4
  010b2:    	call   0xfffdf64c
  010b7:    	test   rax,rax
  010ba:    	je     0x32396
  010c0:    	movq   xmm6,xmm0
  010c4:    	mulsd  xmm6,xmm2
:00086 %8 = %13 + %14                       [Float][Float]
  010c8:    	movq   xmm10,xmm3
  010cd:    	addsd  xmm10,xmm6
:00087 %14 = dynvar(2, %2)
  010d2:    	mov    rax,QWORD PTR [rbp-0x10]
  010d6:    	mov    rax,QWORD PTR [rax]
  010d9:    	mov    rax,QWORD PTR [rax-0x28]
  010dd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00088 %15 = 0: i32
  010e4: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00089 %14 = %14.[%15]                      [Array][Integer]
  010ef:    	sub    rsp,0x40
  010f3:    	movq   QWORD PTR [rsp],xmm2
  010f8:    	movq   QWORD PTR [rsp+0x8],xmm3
  010fe:    	movq   QWORD PTR [rsp+0x10],xmm4
  01104:    	movq   QWORD PTR [rsp+0x18],xmm5
  0110a:    	movq   QWORD PTR [rsp+0x20],xmm7
  01110: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01117: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0111e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01125: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  0112c: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01133:    	mov    rdi,rbx
  01136:    	mov    rsi,r12
  01139: 34 	movabs r8,0x563439851af8
  01143: 34 	movabs rax,0x563437f47370
  0114d:    	call   rax
  0114f:    	movq   xmm2,QWORD PTR [rsp]
  01154:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0115a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01160:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01166:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0116c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01173: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0117a: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01181:    	add    rsp,0x40
  01185: 34 	movabs r13,0x563439851b00
  0118f:    	test   rax,rax
  01192:    	je     0xfffdf5f3
  01198: ff 	mov    QWORD PTR [rbp-0x98],rax
:00090 %13 = %14.call z()                   [Vec]
  0119f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  011a6: 00 	test   rdi,0x7
  011ad:    	jne    0x323f8
  011b3:    	cmp    DWORD PTR [rdi+0x4],0x28
  011b7:    	jne    0x323f8
  011bd: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0fed],0x26        # 0xfffe21b1
  011c4:    	jne    0x323f8
  011ca:    	mov    esi,DWORD PTR [rip+0x1314]        # 0x24e4
  011d0:    	cmp    esi,0xffffffff
  011d3:    	je     0x32458
  011d9:    	cmp    WORD PTR [rdi+0x2],0x3
  011de:    	jne    0x11f7
  011e4:    	cmp    esi,0x6
  011e7:    	jge    0x11f7
  011ed:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  011f2:    	jmp    0x1263
  011f7:    	sub    rsp,0x40
  011fb:    	movq   QWORD PTR [rsp],xmm2
  01200:    	movq   QWORD PTR [rsp+0x8],xmm4
  01206:    	movq   QWORD PTR [rsp+0x10],xmm5
  0120c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01212: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01219: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01220: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01227: 34 	movabs rax,0x563437ed0590
  01231:    	call   rax
  01233:    	movq   xmm2,QWORD PTR [rsp]
  01238:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0123e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01244:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0124a: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01251: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01258: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  0125f:    	add    rsp,0x40
  01263: ff 	mov    QWORD PTR [rbp-0x90],rax
:00091 
:00093 %13 = %4 * %13                       [Float][Float]
  0126a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01271: 00 	test   rdi,0x1
  01278:    	jne    0x324e1
  0127e: 00 	test   rdi,0x2
  01285:    	je     0x12c1
  0128b:    	xorps  xmm3,xmm3
  0128e: 00 	movabs rax,0x8000000000000002
  01298:    	cmp    rdi,rax
  0129b:    	je     0x12d3
  012a1:    	mov    rax,rdi
  012a4:    	sar    rax,0x3f
  012a8:    	add    rax,0x2
  012ac:    	and    rdi,0xfffffffffffffffc
  012b0:    	or     rdi,rax
  012b3:    	rol    rdi,0x3d
  012b7:    	movq   xmm3,rdi
  012bc:    	jmp    0x12d3
  012c1:    	call   0xfffdf64c
  012c6:    	test   rax,rax
  012c9:    	je     0x324e1
  012cf:    	movq   xmm3,xmm0
  012d3:    	mulsd  xmm3,xmm7
:00094 %15 = dynvar(2, %2)
  012d7:    	mov    rax,QWORD PTR [rbp-0x10]
  012db:    	mov    rax,QWORD PTR [rax]
  012de:    	mov    rax,QWORD PTR [rax-0x28]
  012e2: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00095 %16 = 1: i32
  012e9: ff 	mov    QWORD PTR [rbp-0xa8],0x3
:00096 %15 = %15.[%16]                      [Array][Integer]
  012f4:    	sub    rsp,0x40
  012f8:    	movq   QWORD PTR [rsp],xmm2
  012fd:    	movq   QWORD PTR [rsp+0x8],xmm3
  01303:    	movq   QWORD PTR [rsp+0x10],xmm4
  01309:    	movq   QWORD PTR [rsp+0x18],xmm5
  0130f:    	movq   QWORD PTR [rsp+0x20],xmm7
  01315: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0131c: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01323: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0132a: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01331: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01338:    	mov    rdi,rbx
  0133b:    	mov    rsi,r12
  0133e: 34 	movabs r8,0x563439851b68
  01348: 34 	movabs rax,0x563437f47370
  01352:    	call   rax
  01354:    	movq   xmm2,QWORD PTR [rsp]
  01359:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0135f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01365:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0136b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01371: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01378: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0137f: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01386:    	add    rsp,0x40
  0138a: 34 	movabs r13,0x563439851b70
  01394:    	test   rax,rax
  01397:    	je     0xfffdf5f3
  0139d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00097 %14 = %15.call z()                   [Vec]
  013a4: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  013ab: 00 	test   rdi,0x7
  013b2:    	jne    0x32541
  013b8:    	cmp    DWORD PTR [rdi+0x4],0x28
  013bc:    	jne    0x32541
  013c2: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0de8],0x26        # 0xfffe21b1
  013c9:    	jne    0x32541
  013cf:    	mov    esi,DWORD PTR [rip+0x1117]        # 0x24ec
  013d5:    	cmp    esi,0xffffffff
  013d8:    	je     0x325b1
  013de:    	cmp    WORD PTR [rdi+0x2],0x3
  013e3:    	jne    0x13fc
  013e9:    	cmp    esi,0x6
  013ec:    	jge    0x13fc
  013f2:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  013f7:    	jmp    0x1474
  013fc:    	sub    rsp,0x40
  01400:    	movq   QWORD PTR [rsp],xmm2
  01405:    	movq   QWORD PTR [rsp+0x8],xmm3
  0140b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01411:    	movq   QWORD PTR [rsp+0x18],xmm5
  01417:    	movq   QWORD PTR [rsp+0x20],xmm7
  0141d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01424: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0142b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01432: 34 	movabs rax,0x563437ed0590
  0143c:    	call   rax
  0143e:    	movq   xmm2,QWORD PTR [rsp]
  01443:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01449:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0144f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01455:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0145b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01462: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01469: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01470:    	add    rsp,0x40
  01474: ff 	mov    QWORD PTR [rbp-0x98],rax
:00098 
:00100 %14 = %5 * %14                       [Float][Float]
  0147b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01482: 00 	test   rdi,0x1
  01489:    	jne    0x32646
  0148f: 00 	test   rdi,0x2
  01496:    	je     0x14d2
  0149c:    	xorps  xmm6,xmm6
  0149f: 00 	movabs rax,0x8000000000000002
  014a9:    	cmp    rdi,rax
  014ac:    	je     0x14e4
  014b2:    	mov    rax,rdi
  014b5:    	sar    rax,0x3f
  014b9:    	add    rax,0x2
  014bd:    	and    rdi,0xfffffffffffffffc
  014c1:    	or     rdi,rax
  014c4:    	rol    rdi,0x3d
  014c8:    	movq   xmm6,rdi
  014cd:    	jmp    0x14e4
  014d2:    	call   0xfffdf64c
  014d7:    	test   rax,rax
  014da:    	je     0x32646
  014e0:    	movq   xmm6,xmm0
  014e4:    	mulsd  xmm6,xmm8
:00101 %13 = %13 + %14                      [Float][Float]
  014e9:    	addsd  xmm3,xmm6
:00102 %15 = dynvar(2, %2)
  014ed:    	mov    rax,QWORD PTR [rbp-0x10]
  014f1:    	mov    rax,QWORD PTR [rax]
  014f4:    	mov    rax,QWORD PTR [rax-0x28]
  014f8: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00103 %16 = 2: i32
  014ff: ff 	mov    QWORD PTR [rbp-0xa8],0x5
:00104 %15 = %15.[%16]                      [Array][Integer]
  0150a:    	sub    rsp,0x50
  0150e:    	movq   QWORD PTR [rsp],xmm2
  01513:    	movq   QWORD PTR [rsp+0x8],xmm3
  01519:    	movq   QWORD PTR [rsp+0x10],xmm4
  0151f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01525:    	movq   QWORD PTR [rsp+0x20],xmm6
  0152b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01531: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01538: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0153f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01546: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  0154d: ff 	mov    rcx,QWORD PTR [rbp-0xa8]
  01554:    	mov    rdi,rbx
  01557:    	mov    rsi,r12
  0155a: 34 	movabs r8,0x563439851be8
  01564: 34 	movabs rax,0x563437f47370
  0156e:    	call   rax
  01570:    	movq   xmm2,QWORD PTR [rsp]
  01575:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0157b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01581:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01587:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0158d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01593: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0159a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015a1: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015a8:    	add    rsp,0x50
  015ac: 34 	movabs r13,0x563439851bf0
  015b6:    	test   rax,rax
  015b9:    	je     0xfffdf5f3
  015bf: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00105 %14 = %15.call z()                   [Vec]
  015c6: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  015cd: 00 	test   rdi,0x7
  015d4:    	jne    0x326b6
  015da:    	cmp    DWORD PTR [rdi+0x4],0x28
  015de:    	jne    0x326b6
  015e4: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0bc6],0x26        # 0xfffe21b1
  015eb:    	jne    0x326b6
  015f1:    	mov    esi,DWORD PTR [rip+0xefd]        # 0x24f4
  015f7:    	cmp    esi,0xffffffff
  015fa:    	je     0x32726
  01600:    	cmp    WORD PTR [rdi+0x2],0x3
  01605:    	jne    0x161e
  0160b:    	cmp    esi,0x6
  0160e:    	jge    0x161e
  01614:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01619:    	jmp    0x1696
  0161e:    	sub    rsp,0x40
  01622:    	movq   QWORD PTR [rsp],xmm2
  01627:    	movq   QWORD PTR [rsp+0x8],xmm3
  0162d:    	movq   QWORD PTR [rsp+0x10],xmm4
  01633:    	movq   QWORD PTR [rsp+0x18],xmm5
  01639:    	movq   QWORD PTR [rsp+0x20],xmm7
  0163f: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01646: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0164d: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01654: 34 	movabs rax,0x563437ed0590
  0165e:    	call   rax
  01660:    	movq   xmm2,QWORD PTR [rsp]
  01665:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0166b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01671:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01677:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0167d: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01684: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0168b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01692:    	add    rsp,0x40
  01696: ff 	mov    QWORD PTR [rbp-0x98],rax
:00106 
:00108 %14 = %6 * %14                       [Float][Float]
  0169d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  016a4: 00 	test   rdi,0x1
  016ab:    	jne    0x327bb
  016b1: 00 	test   rdi,0x2
  016b8:    	je     0x16f4
  016be:    	xorps  xmm6,xmm6
  016c1: 00 	movabs rax,0x8000000000000002
  016cb:    	cmp    rdi,rax
  016ce:    	je     0x1706
  016d4:    	mov    rax,rdi
  016d7:    	sar    rax,0x3f
  016db:    	add    rax,0x2
  016df:    	and    rdi,0xfffffffffffffffc
  016e3:    	or     rdi,rax
  016e6:    	rol    rdi,0x3d
  016ea:    	movq   xmm6,rdi
  016ef:    	jmp    0x1706
  016f4:    	call   0xfffdf64c
  016f9:    	test   rax,rax
  016fc:    	je     0x327bb
  01702:    	movq   xmm6,xmm0
  01706:    	mulsd  xmm6,xmm2
:00109 %9 = %13 + %14                       [Float][Float]
  0170a:    	movq   xmm11,xmm3
  0170f:    	addsd  xmm11,xmm6
:00110 %13 = const[Vec]                     [Vec]
  01714: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe0a9d]        # 0xfffe21b8
  0171b: 00 	cmp    rax,QWORD PTR [rip+0xde6]        # 0x2508
  01722:    	jne    0x3282b
  01728: 00 	mov    rax,QWORD PTR [rip+0xdc9]        # 0x24f8
  0172f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00111 %14 = %7
:00112 %15 = %8
:00113 %16 = %9
:00114 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  01736:    	movq   xmm0,xmm9
  0173b:    	call   0xfffdf73f
  01740: ff 	mov    QWORD PTR [rbp-0x98],rax
  01747:    	movq   xmm0,xmm10
  0174c:    	call   0xfffdf73f
  01751: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01758:    	movq   xmm0,xmm11
  0175d:    	call   0xfffdf73f
  01762: ff 	mov    QWORD PTR [rbp-0xa8],rax
  01769: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01770: 00 	test   rdi,0x7
  01777:    	jne    0x328eb
  0177d:    	cmp    DWORD PTR [rdi+0x4],0x29
  01781:    	jne    0x328eb
  01787: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0a23],0x26        # 0xfffe21b1
  0178e:    	jne    0x328eb
  01794: 00 	mov    r9,0x0
  0179b:    	sub    rsp,0x40
  0179f:    	movq   QWORD PTR [rsp],xmm2
  017a4:    	movq   QWORD PTR [rsp+0x8],xmm4
  017aa:    	movq   QWORD PTR [rsp+0x10],xmm5
  017b0:    	movq   QWORD PTR [rsp+0x18],xmm7
  017b6: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  017bd: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  017c4: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  017cb: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  017d2:    	mov    rdx,rdi
  017d5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017de:    	mov    QWORD PTR [rsp-0x38],rcx
  017e3:    	mov    rax,QWORD PTR [rbx]
  017e6:    	lea    rdi,[rsp-0x18]
  017eb:    	mov    QWORD PTR [rdi],rax
  017ee:    	mov    QWORD PTR [rbx],rdi
  017f1: ff 	lea    rcx,[rbp-0x98]
  017f8: 00 	mov    r8,0x3
  017ff:    	call   0x32959
  01804:    	lea    rdi,[rbp-0x8]
  01808:    	mov    QWORD PTR [rbx],rdi
  0180b:    	movq   xmm2,QWORD PTR [rsp]
  01810:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01816:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0181c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01822: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01829: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01830: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01837: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0183e:    	add    rsp,0x40
  01842: 34 	movabs r13,0x563439851ca0
  0184c:    	test   rax,rax
  0184f:    	je     0xfffdf5f3
  01855:    	mov    QWORD PTR [rbp-0x78],rax
:00115 
:00117 %13 = const[Ray]                     [Ray]
  01859: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe0958]        # 0xfffe21b8
  01860: 00 	cmp    rax,QWORD PTR [rip+0xcc1]        # 0x2528
  01867:    	jne    0x3298b
  0186d: 00 	mov    rax,QWORD PTR [rip+0xca4]        # 0x2518
  01874: ff 	mov    QWORD PTR [rbp-0x90],rax
:00118 %14 = dynvar(2, %7)
  0187b:    	mov    rax,QWORD PTR [rbp-0x10]
  0187f:    	mov    rax,QWORD PTR [rax]
  01882:    	mov    rax,QWORD PTR [rax-0x50]
  01886: ff 	mov    QWORD PTR [rbp-0x98],rax
:00119 %15 = %10
  0188d:    	mov    rax,QWORD PTR [rbp-0x78]
  01891: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00120 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01898: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0189f: 00 	test   rdi,0x7
  018a6:    	jne    0x32a3f
  018ac:    	cmp    DWORD PTR [rdi+0x4],0x2f
  018b0:    	jne    0x32a3f
  018b6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe08f4],0x26        # 0xfffe21b1
  018bd:    	jne    0x32a3f
  018c3: 00 	mov    r9,0x0
  018ca:    	sub    rsp,0x40
  018ce:    	movq   QWORD PTR [rsp],xmm2
  018d3:    	movq   QWORD PTR [rsp+0x8],xmm4
  018d9:    	movq   QWORD PTR [rsp+0x10],xmm5
  018df:    	movq   QWORD PTR [rsp+0x18],xmm7
  018e5: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  018ec: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  018f3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  018fa: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01901:    	mov    rdx,rdi
  01904: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0190d:    	mov    QWORD PTR [rsp-0x38],rcx
  01912:    	mov    rax,QWORD PTR [rbx]
  01915:    	lea    rdi,[rsp-0x18]
  0191a:    	mov    QWORD PTR [rdi],rax
  0191d:    	mov    QWORD PTR [rbx],rdi
  01920: ff 	lea    rcx,[rbp-0x98]
  01927: 00 	mov    r8,0x2
  0192e:    	call   0x32aad
  01933:    	lea    rdi,[rbp-0x8]
  01937:    	mov    QWORD PTR [rbx],rdi
  0193a:    	movq   xmm2,QWORD PTR [rsp]
  0193f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01945:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0194b:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01951: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01958: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0195f: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01966: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0196d:    	add    rsp,0x40
  01971: 34 	movabs r13,0x563439851d00
  0197b:    	test   rax,rax
  0197e:    	je     0xfffdf5f3
  01984:    	mov    QWORD PTR [rbp-0x80],rax
:00121 
:00123 %13 = const[Isect]                   [Isect]
  01988: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe0829]        # 0xfffe21b8
  0198f: 00 	cmp    rax,QWORD PTR [rip+0xbb2]        # 0x2548
  01996:    	jne    0x32adf
  0199c: 00 	mov    rax,QWORD PTR [rip+0xb95]        # 0x2538
  019a3: ff 	mov    QWORD PTR [rbp-0x90],rax
:00124 %12 = %13.call new()                 [#<Class:Isect>]
  019aa: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  019b1: 00 	test   rdi,0x7
  019b8:    	jne    0x32b93
  019be:    	cmp    DWORD PTR [rdi+0x4],0x31
  019c2:    	jne    0x32b93
  019c8: 26 	cmp    DWORD PTR [rip+0xfffffffffffe07e2],0x26        # 0xfffe21b1
  019cf:    	jne    0x32b93
  019d5: 00 	mov    r9,0x0
  019dc:    	sub    rsp,0x40
  019e0:    	movq   QWORD PTR [rsp],xmm2
  019e5:    	movq   QWORD PTR [rsp+0x8],xmm4
  019eb:    	movq   QWORD PTR [rsp+0x10],xmm5
  019f1:    	movq   QWORD PTR [rsp+0x18],xmm7
  019f7: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  019fe: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01a05: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01a0c: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01a13:    	mov    rdx,rdi
  01a16: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01a1f:    	mov    QWORD PTR [rsp-0x38],rcx
  01a24:    	mov    rax,QWORD PTR [rbx]
  01a27:    	lea    rdi,[rsp-0x18]
  01a2c:    	mov    QWORD PTR [rdi],rax
  01a2f:    	mov    QWORD PTR [rbx],rdi
  01a32: ff 	lea    rcx,[rbp-0x98]
  01a39: 00 	mov    r8,0x0
  01a40:    	call   0x32c01
  01a45:    	lea    rdi,[rbp-0x8]
  01a49:    	mov    QWORD PTR [rbx],rdi
  01a4c:    	movq   xmm2,QWORD PTR [rsp]
  01a51:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a57:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a5d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01a63: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01a6a: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01a71: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a78: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a7f:    	add    rsp,0x40
  01a83: 34 	movabs r13,0x563439851d40
  01a8d:    	test   rax,rax
  01a90:    	je     0xfffdf5f3
  01a96: ff 	mov    QWORD PTR [rbp-0x88],rax
:00125 
:00127 %13 = @spheres: Scene[IvarId(0)]
  01a9d:    	mov    rdi,QWORD PTR [rbp-0x28]
  01aa1:    	mov    rax,QWORD PTR [rdi+0x10]
  01aa5: ff 	mov    QWORD PTR [rbp-0x90],rax
:00128 %14 = 0: i32
  01aac: ff 	mov    QWORD PTR [rbp-0x98],0x1
:00129 %13 = %13.[%14]                      [Array][Integer]
  01ab7:    	sub    rsp,0x40
  01abb:    	movq   QWORD PTR [rsp],xmm2
  01ac0:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ac6:    	movq   QWORD PTR [rsp+0x10],xmm5
  01acc:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ad2: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ad9: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ae0: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ae7: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01aee: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01af5: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01afc:    	mov    rdi,rbx
  01aff:    	mov    rsi,r12
  01b02: 34 	movabs r8,0x563439851d78
  01b0c: 34 	movabs rax,0x563437f47370
  01b16:    	call   rax
  01b18:    	movq   xmm2,QWORD PTR [rsp]
  01b1d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b23:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01b29:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b2f: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01b36: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01b3d: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01b44: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01b4b:    	add    rsp,0x40
  01b4f: 34 	movabs r13,0x563439851d80
  01b59:    	test   rax,rax
  01b5c:    	je     0xfffdf5f3
  01b62: ff 	mov    QWORD PTR [rbp-0x90],rax
:00130 %14 = %11
  01b69:    	mov    rax,QWORD PTR [rbp-0x80]
  01b6d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00131 %15 = %12
  01b74: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b7b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00132 _ = %13.call intersect(%14; 2)       [Sphere]
  01b82: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b89: 00 	test   rdi,0x7
  01b90:    	jne    0x32c33
  01b96:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01b9a:    	jne    0x32c33
  01ba0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe060a],0x26        # 0xfffe21b1
  01ba7:    	jne    0x32c33
  01bad:    	sub    rsp,0x40
  01bb1:    	movq   QWORD PTR [rsp],xmm2
  01bb6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bbc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01bc2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01bc8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01bcf: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01bd6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01bdd: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01be4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01bed:    	mov    QWORD PTR [rsp-0x38],rcx
  01bf2:    	mov    rax,QWORD PTR [rbx]
  01bf5:    	lea    rdi,[rsp-0x18]
  01bfa:    	mov    QWORD PTR [rdi],rax
  01bfd:    	mov    QWORD PTR [rbx],rdi
  01c00: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01c07:    	mov    QWORD PTR [rsp-0x38],rax
  01c0c: 00 	mov    rdi,0x2
  01c13: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01c1a:    	mov    QWORD PTR [rsp-0x40],rax
  01c1f: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01c26:    	mov    QWORD PTR [rsp-0x48],rax
  01c2b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01c34: 10 	movabs rax,0x1001000000046
  01c3e:    	mov    QWORD PTR [rsp-0x28],rax
  01c43: 34 	movabs r13,0x5634398536b0
  01c4d:    	call   0xfffe2df2
  01c52:    	lea    rdi,[rbp-0x8]
  01c56:    	mov    QWORD PTR [rbx],rdi
  01c59:    	movq   xmm2,QWORD PTR [rsp]
  01c5e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c64:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01c6a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01c70: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c77: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c7e: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c85: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c8c:    	add    rsp,0x40
  01c90: 34 	movabs r13,0x563439851dc0
  01c9a:    	test   rax,rax
  01c9d:    	je     0xfffdf5f3
:00133 
:00135 %13 = @spheres: Scene[IvarId(0)]
  01ca3:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ca7:    	mov    rax,QWORD PTR [rdi+0x10]
  01cab: ff 	mov    QWORD PTR [rbp-0x90],rax
:00136 %14 = 1: i32
  01cb2: ff 	mov    QWORD PTR [rbp-0x98],0x3
:00137 %13 = %13.[%14]                      [Array][Integer]
  01cbd:    	sub    rsp,0x40
  01cc1:    	movq   QWORD PTR [rsp],xmm2
  01cc6:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ccc:    	movq   QWORD PTR [rsp+0x10],xmm5
  01cd2:    	movq   QWORD PTR [rsp+0x18],xmm7
  01cd8: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01cdf: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ce6: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ced: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01cf4: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01cfb: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01d02:    	mov    rdi,rbx
  01d05:    	mov    rsi,r12
  01d08: 34 	movabs r8,0x563439851df8
  01d12: 34 	movabs rax,0x563437f47370
  01d1c:    	call   rax
  01d1e:    	movq   xmm2,QWORD PTR [rsp]
  01d23:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d29:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01d2f:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01d35: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01d3c: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01d43: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01d4a: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01d51:    	add    rsp,0x40
  01d55: 34 	movabs r13,0x563439851e00
  01d5f:    	test   rax,rax
  01d62:    	je     0xfffdf5f3
  01d68: ff 	mov    QWORD PTR [rbp-0x90],rax
:00138 %14 = %11
  01d6f:    	mov    rax,QWORD PTR [rbp-0x80]
  01d73: ff 	mov    QWORD PTR [rbp-0x98],rax
:00139 %15 = %12
  01d7a: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01d81: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00140 _ = %13.call intersect(%14; 2)       [Sphere]
  01d88: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01d8f: 00 	test   rdi,0x7
  01d96:    	jne    0x32ca1
  01d9c:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01da0:    	jne    0x32ca1
  01da6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe0404],0x26        # 0xfffe21b1
  01dad:    	jne    0x32ca1
  01db3:    	sub    rsp,0x40
  01db7:    	movq   QWORD PTR [rsp],xmm2
  01dbc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01dc2:    	movq   QWORD PTR [rsp+0x10],xmm5
  01dc8:    	movq   QWORD PTR [rsp+0x18],xmm7
  01dce: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01dd5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ddc: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01de3: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01dea: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01df3:    	mov    QWORD PTR [rsp-0x38],rcx
  01df8:    	mov    rax,QWORD PTR [rbx]
  01dfb:    	lea    rdi,[rsp-0x18]
  01e00:    	mov    QWORD PTR [rdi],rax
  01e03:    	mov    QWORD PTR [rbx],rdi
  01e06: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01e0d:    	mov    QWORD PTR [rsp-0x38],rax
  01e12: 00 	mov    rdi,0x2
  01e19: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01e20:    	mov    QWORD PTR [rsp-0x40],rax
  01e25: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01e2c:    	mov    QWORD PTR [rsp-0x48],rax
  01e31: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01e3a: 10 	movabs rax,0x1001000000046
  01e44:    	mov    QWORD PTR [rsp-0x28],rax
  01e49: 34 	movabs r13,0x5634398536b0
  01e53:    	call   0xfffe2df2
  01e58:    	lea    rdi,[rbp-0x8]
  01e5c:    	mov    QWORD PTR [rbx],rdi
  01e5f:    	movq   xmm2,QWORD PTR [rsp]
  01e64:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e6a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e70:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e76: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e7d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e84: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e8b: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e92:    	add    rsp,0x40
  01e96: 34 	movabs r13,0x563439851e40
  01ea0:    	test   rax,rax
  01ea3:    	je     0xfffdf5f3
:00141 
:00143 %13 = @spheres: Scene[IvarId(0)]
  01ea9:    	mov    rdi,QWORD PTR [rbp-0x28]
  01ead:    	mov    rax,QWORD PTR [rdi+0x10]
  01eb1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00144 %14 = 2: i32
  01eb8: ff 	mov    QWORD PTR [rbp-0x98],0x5
:00145 %13 = %13.[%14]                      [Array][Integer]
  01ec3:    	sub    rsp,0x40
  01ec7:    	movq   QWORD PTR [rsp],xmm2
  01ecc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ed2:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ed8:    	movq   QWORD PTR [rsp+0x18],xmm7
  01ede: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ee5: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01eec: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ef3: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01efa: ff 	mov    rdx,QWORD PTR [rbp-0x90]
  01f01: ff 	mov    rcx,QWORD PTR [rbp-0x98]
  01f08:    	mov    rdi,rbx
  01f0b:    	mov    rsi,r12
  01f0e: 34 	movabs r8,0x563439851e78
  01f18: 34 	movabs rax,0x563437f47370
  01f22:    	call   rax
  01f24:    	movq   xmm2,QWORD PTR [rsp]
  01f29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01f2f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01f35:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01f3b: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01f42: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01f49: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01f50: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01f57:    	add    rsp,0x40
  01f5b: 34 	movabs r13,0x563439851e80
  01f65:    	test   rax,rax
  01f68:    	je     0xfffdf5f3
  01f6e: ff 	mov    QWORD PTR [rbp-0x90],rax
:00146 %14 = %11
  01f75:    	mov    rax,QWORD PTR [rbp-0x80]
  01f79: ff 	mov    QWORD PTR [rbp-0x98],rax
:00147 %15 = %12
  01f80: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01f87: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00148 _ = %13.call intersect(%14; 2)       [Sphere]
  01f8e: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01f95: 00 	test   rdi,0x7
  01f9c:    	jne    0x32d0f
  01fa2:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01fa6:    	jne    0x32d0f
  01fac: 26 	cmp    DWORD PTR [rip+0xfffffffffffe01fe],0x26        # 0xfffe21b1
  01fb3:    	jne    0x32d0f
  01fb9:    	sub    rsp,0x40
  01fbd:    	movq   QWORD PTR [rsp],xmm2
  01fc2:    	movq   QWORD PTR [rsp+0x8],xmm4
  01fc8:    	movq   QWORD PTR [rsp+0x10],xmm5
  01fce:    	movq   QWORD PTR [rsp+0x18],xmm7
  01fd4: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01fdb: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01fe2: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01fe9: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ff0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01ff9:    	mov    QWORD PTR [rsp-0x38],rcx
  01ffe:    	mov    rax,QWORD PTR [rbx]
  02001:    	lea    rdi,[rsp-0x18]
  02006:    	mov    QWORD PTR [rdi],rax
  02009:    	mov    QWORD PTR [rbx],rdi
  0200c: ff 	mov    rax,QWORD PTR [rbp-0x90]
  02013:    	mov    QWORD PTR [rsp-0x38],rax
  02018: 00 	mov    rdi,0x2
  0201f: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02026:    	mov    QWORD PTR [rsp-0x40],rax
  0202b: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02032:    	mov    QWORD PTR [rsp-0x48],rax
  02037: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02040: 10 	movabs rax,0x1001000000046
  0204a:    	mov    QWORD PTR [rsp-0x28],rax
  0204f: 34 	movabs r13,0x5634398536b0
  02059:    	call   0xfffe2df2
  0205e:    	lea    rdi,[rbp-0x8]
  02062:    	mov    QWORD PTR [rbx],rdi
  02065:    	movq   xmm2,QWORD PTR [rsp]
  0206a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02070:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02076:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0207c: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02083: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0208a: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02091: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02098:    	add    rsp,0x40
  0209c: 34 	movabs r13,0x563439851ec0
  020a6:    	test   rax,rax
  020a9:    	je     0xfffdf5f3
:00149 
:00151 %13 = @plane: Scene[IvarId(1)]
  020af:    	mov    rdi,QWORD PTR [rbp-0x28]
  020b3:    	mov    rax,QWORD PTR [rdi+0x18]
  020b7: ff 	mov    QWORD PTR [rbp-0x90],rax
:00152 %14 = %11
  020be:    	mov    rax,QWORD PTR [rbp-0x80]
  020c2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00153 %15 = %12
  020c9: ff 	mov    rax,QWORD PTR [rbp-0x88]
  020d0: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00154 _ = %13.call intersect(%14; 2)       [Plane]
  020d7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  020de: 00 	test   rdi,0x7
  020e5:    	jne    0x32d7d
  020eb:    	cmp    DWORD PTR [rdi+0x4],0x2c
  020ef:    	jne    0x32d7d
  020f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffe00b5],0x26        # 0xfffe21b1
  020fc:    	jne    0x32d7d
  02102:    	sub    rsp,0x40
  02106:    	movq   QWORD PTR [rsp],xmm2
  0210b:    	movq   QWORD PTR [rsp+0x8],xmm4
  02111:    	movq   QWORD PTR [rsp+0x10],xmm5
  02117:    	movq   QWORD PTR [rsp+0x18],xmm7
  0211d: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02124: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0212b: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02132: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02139: 00 	mov    QWORD PTR [rsp-0x20],0x0
  02142:    	mov    QWORD PTR [rsp-0x38],rcx
  02147:    	mov    rax,QWORD PTR [rbx]
  0214a:    	lea    rdi,[rsp-0x18]
  0214f:    	mov    QWORD PTR [rdi],rax
  02152:    	mov    QWORD PTR [rbx],rdi
  02155: ff 	mov    rax,QWORD PTR [rbp-0x90]
  0215c:    	mov    QWORD PTR [rsp-0x38],rax
  02161: 00 	mov    rdi,0x2
  02168: ff 	mov    rax,QWORD PTR [rbp-0x98]
  0216f:    	mov    QWORD PTR [rsp-0x40],rax
  02174: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0217b:    	mov    QWORD PTR [rsp-0x48],rax
  02180: 00 	mov    QWORD PTR [rsp-0x30],0x0
  02189: 0e 	movabs rax,0x1000e00000048
  02193:    	mov    QWORD PTR [rsp-0x28],rax
  02198: 34 	movabs r13,0x563439855550
  021a2:    	call   0xfffe3400
  021a7:    	lea    rdi,[rbp-0x8]
  021ab:    	mov    QWORD PTR [rbx],rdi
  021ae:    	movq   xmm2,QWORD PTR [rsp]
  021b3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  021b9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  021bf:    	movq   xmm7,QWORD PTR [rsp+0x18]
  021c5: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  021cc: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  021d3: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  021da: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  021e1:    	add    rsp,0x40
  021e5: 34 	movabs r13,0x563439851f20
  021ef:    	test   rax,rax
  021f2:    	je     0xfffdf5f3
:00155 
:00157 %13 = %12.call hit()                 [Isect]
  021f8: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  021ff: 00 	test   rdi,0x7
  02206:    	jne    0x32deb
  0220c:    	cmp    DWORD PTR [rdi+0x4],0x30
  02210:    	jne    0x32deb
  02216: 26 	cmp    DWORD PTR [rip+0xfffffffffffdff94],0x26        # 0xfffe21b1
  0221d:    	jne    0x32deb
  02223:    	mov    esi,DWORD PTR [rip+0x32b]        # 0x2554
  02229:    	cmp    esi,0xffffffff
  0222c:    	je     0x32e59
  02232:    	cmp    WORD PTR [rdi+0x2],0x3
  02237:    	jne    0x2250
  0223d:    	cmp    esi,0x6
  02240:    	jge    0x2250
  02246:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0224b:    	jmp    0x22ca
  02250:    	sub    rsp,0x40
  02254:    	movq   QWORD PTR [rsp],xmm2
  02259:    	movq   QWORD PTR [rsp+0x8],xmm4
  0225f:    	movq   QWORD PTR [rsp+0x10],xmm5
  02265:    	movq   QWORD PTR [rsp+0x18],xmm7
  0226b: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02272: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02279: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02280: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02287: 34 	movabs rax,0x563437ed0590
  02291:    	call   rax
  02293:    	movq   xmm2,QWORD PTR [rsp]
  02298:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0229e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  022a4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  022aa: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  022b1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  022b8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  022bf: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  022c6:    	add    rsp,0x40
  022ca: ff 	mov    QWORD PTR [rbp-0x90],rax
:00158 
:00160 condnotbr %13 =>:00166
  022d1: ff 	mov    rax,QWORD PTR [rbp-0x90]
  022d8:    	or     rax,0x10
  022dc:    	cmp    rax,0x14
  022e0:    	je     0x23a9
:00161 %13 = dynvar(2, %6)
  022e6:    	mov    rax,QWORD PTR [rbp-0x10]
  022ea:    	mov    rax,QWORD PTR [rax]
  022ed:    	mov    rax,QWORD PTR [rax-0x48]
  022f1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00162 %14 = literal[1.0]
  022f8: 00 	movq   xmm3,QWORD PTR [rip+0x258]        # 0x2558
  02300: 00 	movabs rax,0xff80000000000002
  0230a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00163 %13 = %13 + %14                      [Float][Float]
  02311: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  02318: 00 	test   rdi,0x1
  0231f:    	jne    0x32ef0
  02325: 00 	test   rdi,0x2
  0232c:    	je     0x2368
  02332:    	xorps  xmm6,xmm6
  02335: 00 	movabs rax,0x8000000000000002
  0233f:    	cmp    rdi,rax
  02342:    	je     0x237a
  02348:    	mov    rax,rdi
  0234b:    	sar    rax,0x3f
  0234f:    	add    rax,0x2
  02353:    	and    rdi,0xfffffffffffffffc
  02357:    	or     rdi,rax
  0235a:    	rol    rdi,0x3d
  0235e:    	movq   xmm6,rdi
  02363:    	jmp    0x237a
  02368:    	call   0xfffdf64c
  0236d:    	test   rax,rax
  02370:    	je     0x32ef0
  02376:    	movq   xmm6,xmm0
  0237a:    	addsd  xmm6,xmm3
:00164 dynvar(2, %6) = %13
  0237e:    	movq   xmm0,xmm6
  02382:    	call   0xfffdf73f
  02387: ff 	mov    QWORD PTR [rbp-0x90],rax
  0238e:    	mov    rax,QWORD PTR [rbp-0x10]
  02392:    	mov    rax,QWORD PTR [rax]
  02395: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0239c:    	mov    QWORD PTR [rax-0x48],rdi
:00165 ret %13
  023a0: ff 	mov    rax,QWORD PTR [rbp-0x90]
  023a7:    	leave  
  023a8:    	ret    
:00166 %13 = literal[0.0]
  023a9: 00 	movq   xmm3,QWORD PTR [rip+0x1b7]        # 0x2568
  023b1: 00 	movabs rax,0x8000000000000002
  023bb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00167 ret %13
  023c2: ff 	mov    rax,QWORD PTR [rbp-0x90]
  023c9:    	leave  
  023ca:    	ret    
==> start whole compile: intersect FuncId(72) self_class:Plane start:[00000] bytecode:0x563439855550
<== finished compile. elapsed:160.7µs
offset:Pos(143288) code: 6590 bytes  data: 370 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xa0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x309ee
  00022:    	jmp    0x309ee
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086:    	mov    rdi,QWORD PTR [rbp-0x28]
  0008a: 00 	test   rdi,0x7
  00091:    	jne    0x309fd
  00097:    	cmp    DWORD PTR [rdi+0x4],0x2c
  0009b:    	jne    0x309fd
:00000 init_method reg:14 arg:2 pos:2 req:2 stack_offset:10
:00001 %7 = @p: Plane[IvarId(0)]
  000a1:    	mov    rdi,QWORD PTR [rbp-0x28]
  000a5:    	mov    rax,QWORD PTR [rdi+0x10]
  000a9:    	mov    QWORD PTR [rbp-0x60],rax
:00002 %8 = @n: Plane[IvarId(1)]
  000ad:    	mov    rdi,QWORD PTR [rbp-0x28]
  000b1:    	mov    rax,QWORD PTR [rdi+0x18]
  000b5:    	mov    QWORD PTR [rbp-0x68],rax
:00003 %3 = %7.call vdot(%8; 1)             [Vec]
  000b9:    	mov    rdi,QWORD PTR [rbp-0x60]
  000bd: 00 	test   rdi,0x7
  000c4:    	jne    0x30a0c
  000ca:    	cmp    DWORD PTR [rdi+0x4],0x28
  000ce:    	jne    0x30a0c
  000d4: 26 	cmp    DWORD PTR [rip+0xfffffffffffdfb66],0x26        # 0xfffdfc41
  000db:    	jne    0x30a0c
  000e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000ea:    	mov    QWORD PTR [rsp-0x38],rcx
  000ef:    	mov    rax,QWORD PTR [rbx]
  000f2:    	lea    rdi,[rsp-0x18]
  000f7:    	mov    QWORD PTR [rdi],rax
  000fa:    	mov    QWORD PTR [rbx],rdi
  000fd:    	mov    rax,QWORD PTR [rbp-0x60]
  00101:    	mov    QWORD PTR [rsp-0x38],rax
  00106: 00 	mov    rdi,0x1
  0010d:    	mov    rax,QWORD PTR [rbp-0x68]
  00111:    	mov    QWORD PTR [rsp-0x40],rax
  00116: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0011f: 05 	movabs rax,0x1000500000042
  00129:    	mov    QWORD PTR [rsp-0x28],rax
  0012e: 34 	movabs r13,0x563439877e20
  00138:    	call   0xfffe09a6
  0013d:    	lea    rdi,[rbp-0x8]
  00141:    	mov    QWORD PTR [rbx],rdi
  00144: 34 	movabs r13,0x5634398555a0
  0014e:    	test   rax,rax
  00151:    	je     0xfffdd083
  00157:    	mov    QWORD PTR [rbp-0x40],rax
:00004 
:00006 %3 = neg %3                          [Float]
  0015b:    	mov    rdi,QWORD PTR [rbp-0x40]
  0015f: 00 	test   rdi,0x1
  00166:    	jne    0x30a1b
  0016c: 00 	test   rdi,0x2
  00173:    	je     0x1af
  00179:    	xorps  xmm2,xmm2
  0017c: 00 	movabs rax,0x8000000000000002
  00186:    	cmp    rdi,rax
  00189:    	je     0x1c1
  0018f:    	mov    rax,rdi
  00192:    	sar    rax,0x3f
  00196:    	add    rax,0x2
  0019a:    	and    rdi,0xfffffffffffffffc
  0019e:    	or     rdi,rax
  001a1:    	rol    rdi,0x3d
  001a5:    	movq   xmm2,rdi
  001aa:    	jmp    0x1c1
  001af:    	call   0xfffdd0dc
  001b4:    	test   rax,rax
  001b7:    	je     0x30a1b
  001bd:    	movq   xmm2,xmm0
  001c1: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1800]        # 0x19c8
:00007 %7 = %1.call dir()                   [Ray]
  001c8:    	mov    rdi,QWORD PTR [rbp-0x30]
  001cc: 00 	test   rdi,0x7
  001d3:    	jne    0x30a2a
  001d9:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001dd:    	jne    0x30a2a
  001e3: 26 	cmp    DWORD PTR [rip+0xfffffffffffdfa57],0x26        # 0xfffdfc41
  001ea:    	jne    0x30a2a
  001f0:    	mov    esi,DWORD PTR [rip+0x17de]        # 0x19d4
  001f6:    	cmp    esi,0xffffffff
  001f9:    	je     0x30a46
  001ff:    	cmp    WORD PTR [rdi+0x2],0x3
  00204:    	jne    0x21d
  0020a:    	cmp    esi,0x6
  0020d:    	jge    0x21d
  00213:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00218:    	jmp    0x23b
  0021d:    	sub    rsp,0x10
  00221:    	movq   QWORD PTR [rsp],xmm2
  00226: 34 	movabs rax,0x563437ed0590
  00230:    	call   rax
  00232:    	movq   xmm2,QWORD PTR [rsp]
  00237:    	add    rsp,0x10
  0023b:    	mov    QWORD PTR [rbp-0x60],rax
:00008 
:00010 %8 = @n: Plane[IvarId(1)]
  0023f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00243:    	mov    rax,QWORD PTR [rdi+0x18]
  00247:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %7.call vdot(%8; 1)             [Vec]
  0024b:    	mov    rdi,QWORD PTR [rbp-0x60]
  0024f: 00 	test   rdi,0x7
  00256:    	jne    0x30a81
  0025c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00260:    	jne    0x30a81
  00266: 26 	cmp    DWORD PTR [rip+0xfffffffffffdf9d4],0x26        # 0xfffdfc41
  0026d:    	jne    0x30a81
  00273:    	sub    rsp,0x10
  00277:    	movq   QWORD PTR [rsp],xmm2
  0027c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00285:    	mov    QWORD PTR [rsp-0x38],rcx
  0028a:    	mov    rax,QWORD PTR [rbx]
  0028d:    	lea    rdi,[rsp-0x18]
  00292:    	mov    QWORD PTR [rdi],rax
  00295:    	mov    QWORD PTR [rbx],rdi
  00298:    	mov    rax,QWORD PTR [rbp-0x60]
  0029c:    	mov    QWORD PTR [rsp-0x38],rax
  002a1: 00 	mov    rdi,0x1
  002a8:    	mov    rax,QWORD PTR [rbp-0x68]
  002ac:    	mov    QWORD PTR [rsp-0x40],rax
  002b1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002ba: 05 	movabs rax,0x1000500000042
  002c4:    	mov    QWORD PTR [rsp-0x28],rax
  002c9: 34 	movabs r13,0x563439877e20
  002d3:    	call   0xfffe09a6
  002d8:    	lea    rdi,[rbp-0x8]
  002dc:    	mov    QWORD PTR [rbx],rdi
  002df:    	movq   xmm2,QWORD PTR [rsp]
  002e4:    	add    rsp,0x10
  002e8: 34 	movabs r13,0x563439855620
  002f2:    	test   rax,rax
  002f5:    	je     0xfffdd083
  002fb:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %5 = %4
  002ff:    	mov    rax,QWORD PTR [rbp-0x48]
  00303:    	mov    QWORD PTR [rbp-0x50],rax
:00015 %7 = literal[0.0]
  00307: 00 	movq   xmm3,QWORD PTR [rip+0x16c9]        # 0x19d8
  0030f: 00 	movabs rax,0x8000000000000002
  00319:    	mov    QWORD PTR [rbp-0x60],rax
:00016 _%7 = %4 < %7                        [Float][Float]
:00017 condnotbr _%7 =>:00021
  0031d:    	mov    rdi,QWORD PTR [rbp-0x48]
  00321: 00 	test   rdi,0x1
  00328:    	jne    0x30a9d
  0032e: 00 	test   rdi,0x2
  00335:    	je     0x371
  0033b:    	xorps  xmm4,xmm4
  0033e: 00 	movabs rax,0x8000000000000002
  00348:    	cmp    rdi,rax
  0034b:    	je     0x383
  00351:    	mov    rax,rdi
  00354:    	sar    rax,0x3f
  00358:    	add    rax,0x2
  0035c:    	and    rdi,0xfffffffffffffffc
  00360:    	or     rdi,rax
  00363:    	rol    rdi,0x3d
  00367:    	movq   xmm4,rdi
  0036c:    	jmp    0x383
  00371:    	call   0xfffdd0dc
  00376:    	test   rax,rax
  00379:    	je     0x30a9d
  0037f:    	movq   xmm4,xmm0
  00383:    	ucomisd xmm4,xmm3
  00387:    	jae    0x30ab9
:00018 %5 = %4
:00019 %5 = neg %5                          [Float]
  0038d:    	movq   xmm5,xmm4
  00391: 00 	xorps  xmm5,XMMWORD PTR [rip+0x1650]        # 0x19e8
:00020 br =>:00021
  00398:    	jmp    0x30adf
:00021 %7 = literal[1e-17]
  0039d: 00 	movq   xmm3,QWORD PTR [rip+0x1653]        # 0x19f8
  003a5: aa 	movabs rax,0xe33877aa3236a4ba
  003af:    	mov    QWORD PTR [rbp-0x60],rax
:00022 _%7 = %5 < %7                        [Float][Float]
:00023 condnotbr _%7 =>:00027
  003b3:    	mov    rdi,QWORD PTR [rbp-0x50]
  003b7: 00 	test   rdi,0x1
  003be:    	jne    0x30b12
  003c4: 00 	test   rdi,0x2
  003cb:    	je     0x407
  003d1:    	xorps  xmm5,xmm5
  003d4: 00 	movabs rax,0x8000000000000002
  003de:    	cmp    rdi,rax
  003e1:    	je     0x419
  003e7:    	mov    rax,rdi
  003ea:    	sar    rax,0x3f
  003ee:    	add    rax,0x2
  003f2:    	and    rdi,0xfffffffffffffffc
  003f6:    	or     rdi,rax
  003f9:    	rol    rdi,0x3d
  003fd:    	movq   xmm5,rdi
  00402:    	jmp    0x419
  00407:    	call   0xfffdd0dc
  0040c:    	test   rax,rax
  0040f:    	je     0x30b12
  00415:    	movq   xmm5,xmm0
  00419:    	ucomisd xmm5,xmm3
  0041d:    	jae    0x431
:00024 %7 = nil
  00423: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00025 ret %7
  0042b:    	mov    rax,QWORD PTR [rbp-0x60]
  0042f:    	leave  
  00430:    	ret    
:00027 %8 = %1.call org()                   [Ray]
  00431:    	mov    rdi,QWORD PTR [rbp-0x30]
  00435: 00 	test   rdi,0x7
  0043c:    	jne    0x30b2e
  00442:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00446:    	jne    0x30b2e
  0044c: 26 	cmp    DWORD PTR [rip+0xfffffffffffdf7ee],0x26        # 0xfffdfc41
  00453:    	jne    0x30b2e
  00459:    	mov    esi,DWORD PTR [rip+0x15a5]        # 0x1a04
  0045f:    	cmp    esi,0xffffffff
  00462:    	je     0x30b4a
  00468:    	cmp    WORD PTR [rdi+0x2],0x3
  0046d:    	jne    0x486
  00473:    	cmp    esi,0x6
  00476:    	jge    0x486
  0047c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00481:    	jmp    0x4c8
  00486:    	sub    rsp,0x20
  0048a:    	movq   QWORD PTR [rsp],xmm2
  0048f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00495:    	movq   QWORD PTR [rsp+0x10],xmm4
  0049b:    	movq   QWORD PTR [rsp+0x18],xmm5
  004a1: 34 	movabs rax,0x563437ed0590
  004ab:    	call   rax
  004ad:    	movq   xmm2,QWORD PTR [rsp]
  004b2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004b8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004be:    	movq   xmm5,QWORD PTR [rsp+0x18]
  004c4:    	add    rsp,0x20
  004c8:    	mov    QWORD PTR [rbp-0x68],rax
:00028 
:00030 %9 = @n: Plane[IvarId(1)]
  004cc:    	mov    rdi,QWORD PTR [rbp-0x28]
  004d0:    	mov    rax,QWORD PTR [rdi+0x18]
  004d4:    	mov    QWORD PTR [rbp-0x70],rax
:00031 %7 = %8.call vdot(%9; 1)             [Vec]
  004d8:    	mov    rdi,QWORD PTR [rbp-0x68]
  004dc: 00 	test   rdi,0x7
  004e3:    	jne    0x30ba9
  004e9:    	cmp    DWORD PTR [rdi+0x4],0x28
  004ed:    	jne    0x30ba9
  004f3: 26 	cmp    DWORD PTR [rip+0xfffffffffffdf747],0x26        # 0xfffdfc41
  004fa:    	jne    0x30ba9
  00500:    	sub    rsp,0x20
  00504:    	movq   QWORD PTR [rsp],xmm2
  00509:    	movq   QWORD PTR [rsp+0x8],xmm4
  0050f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00515: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0051e:    	mov    QWORD PTR [rsp-0x38],rcx
  00523:    	mov    rax,QWORD PTR [rbx]
  00526:    	lea    rdi,[rsp-0x18]
  0052b:    	mov    QWORD PTR [rdi],rax
  0052e:    	mov    QWORD PTR [rbx],rdi
  00531:    	mov    rax,QWORD PTR [rbp-0x68]
  00535:    	mov    QWORD PTR [rsp-0x38],rax
  0053a: 00 	mov    rdi,0x1
  00541:    	mov    rax,QWORD PTR [rbp-0x70]
  00545:    	mov    QWORD PTR [rsp-0x40],rax
  0054a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00553: 05 	movabs rax,0x1000500000042
  0055d:    	mov    QWORD PTR [rsp-0x28],rax
  00562: 34 	movabs r13,0x563439877e20
  0056c:    	call   0xfffe09a6
  00571:    	lea    rdi,[rbp-0x8]
  00575:    	mov    QWORD PTR [rbx],rdi
  00578:    	movq   xmm2,QWORD PTR [rsp]
  0057d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00583:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00589:    	add    rsp,0x20
  0058d: 34 	movabs r13,0x563439855760
  00597:    	test   rax,rax
  0059a:    	je     0xfffdd083
  005a0:    	mov    QWORD PTR [rbp-0x60],rax
:00032 
:00034 %7 = %7 + %3                         [Float][Float]
  005a4:    	mov    rdi,QWORD PTR [rbp-0x60]
  005a8: 00 	test   rdi,0x1
  005af:    	jne    0x30bc5
  005b5: 00 	test   rdi,0x2
  005bc:    	je     0x5f8
  005c2:    	xorps  xmm3,xmm3
  005c5: 00 	movabs rax,0x8000000000000002
  005cf:    	cmp    rdi,rax
  005d2:    	je     0x60a
  005d8:    	mov    rax,rdi
  005db:    	sar    rax,0x3f
  005df:    	add    rax,0x2
  005e3:    	and    rdi,0xfffffffffffffffc
  005e7:    	or     rdi,rax
  005ea:    	rol    rdi,0x3d
  005ee:    	movq   xmm3,rdi
  005f3:    	jmp    0x60a
  005f8:    	call   0xfffdd0dc
  005fd:    	test   rax,rax
  00600:    	je     0x30bc5
  00606:    	movq   xmm3,xmm0
  0060a:    	addsd  xmm3,xmm2
:00035 %7 = neg %7                          [Float]
  0060e: 00 	xorps  xmm3,XMMWORD PTR [rip+0x13f3]        # 0x1a08
:00036 %6 = %7 / %4                         [Float][Float]
  00615:    	movq   xmm6,xmm3
  00619:    	movq   rax,xmm4
  0061e:    	test   rax,rax
  00621:    	je     0xfffdd0a8
  00627:    	divsd  xmm6,xmm4
:00037 %7 = literal[0.0]
  0062b: 00 	movq   xmm3,QWORD PTR [rip+0x13e5]        # 0x1a18
  00633: 00 	movabs rax,0x8000000000000002
  0063d:    	mov    QWORD PTR [rbp-0x60],rax
:00038 _%7 = %6 > %7                        [Float][Float]
:00039 condnotbr _%7 =>:00106
  00641:    	ucomisd xmm6,xmm3
  00645:    	jbe    0x31b3e
:00040 %7 = %2.call t()                     [<INVALID>]
  0064b: 01 	sub    DWORD PTR [rip+0x13ce],0x1        # 0x1a20
  00652:    	je     0x30c0a
  00658:    	sub    rsp,0x20
  0065c:    	movq   QWORD PTR [rsp],xmm2
  00661:    	movq   QWORD PTR [rsp+0x8],xmm4
  00667:    	movq   QWORD PTR [rsp+0x10],xmm5
  0066d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00673:    	mov    rdi,QWORD PTR [rbp-0x38]
  00677: 34 	movabs rax,0x563437f53600
  00681:    	call   rax
  00683:    	mov    r15d,eax
  00686: 00 	cmp    r15d,DWORD PTR [rip+0x139b]        # 0x1a28
  0068d:    	jne    0x30c2c
  00693:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf5a8]        # 0xfffdfc41
  00699:    	cmp    DWORD PTR [rip+0x1385],eax        # 0x1a24
  0069f:    	jne    0x30c2c
  006a5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006ae:    	mov    QWORD PTR [rsp-0x38],rcx
  006b3:    	mov    rax,QWORD PTR [rbx]
  006b6:    	lea    rdi,[rsp-0x18]
  006bb:    	mov    QWORD PTR [rdi],rax
  006be:    	mov    QWORD PTR [rbx],rdi
  006c1:    	mov    rax,QWORD PTR [rbp-0x38]
  006c5:    	mov    QWORD PTR [rsp-0x38],rax
  006ca: 00 	mov    rdi,0x0
  006d1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006da: 00 	movabs rax,0x0
  006e4:    	mov    QWORD PTR [rsp-0x28],rax
  006e9: 00 	movabs r13,0x0
  006f3:    	call   0xfffdd048
  006f8:    	lea    rdi,[rbp-0x8]
  006fc:    	mov    QWORD PTR [rbx],rdi
  006ff:    	movq   xmm2,QWORD PTR [rsp]
  00704:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0070a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00710:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00716:    	add    rsp,0x20
  0071a:    	test   rax,rax
  0071d:    	je     0x30c98
  00723:    	mov    QWORD PTR [rbp-0x60],rax
:00041 
:00043 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00044 condnotbr _%7 =>:00106
  00727:    	movq   xmm0,xmm6
  0072b:    	call   0xfffdd1cf
  00730:    	mov    QWORD PTR [rbp-0x58],rax
  00734:    	mov    rdi,QWORD PTR [rbp-0x58]
  00738:    	mov    rsi,QWORD PTR [rbp-0x60]
  0073c: 00 	test   rdi,0x1
  00743:    	je     0x30ca7
  00749: 00 	test   rsi,0x1
  00750:    	je     0x30ca7
  00756:    	cmp    rdi,rsi
  00759:    	jge    0x31b71
:00045 %7 = literal[true]
  0075f: 00 	mov    rax,0x1c
  00766:    	mov    QWORD PTR [rbp-0x60],rax
:00046 _ = %2.call hit=(%7; 1)              [<INVALID>]
  0076a: 01 	sub    DWORD PTR [rip+0x12bb],0x1        # 0x1a2c
  00771:    	je     0x30d18
  00777:    	sub    rsp,0x20
  0077b:    	movq   QWORD PTR [rsp],xmm2
  00780:    	movq   QWORD PTR [rsp+0x8],xmm4
  00786:    	movq   QWORD PTR [rsp+0x10],xmm5
  0078c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00792:    	mov    rdi,QWORD PTR [rbp-0x38]
  00796: 34 	movabs rax,0x563437f53600
  007a0:    	call   rax
  007a2:    	mov    r15d,eax
  007a5: 00 	cmp    r15d,DWORD PTR [rip+0x1288]        # 0x1a34
  007ac:    	jne    0x30d3a
  007b2:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf489]        # 0xfffdfc41
  007b8:    	cmp    DWORD PTR [rip+0x1272],eax        # 0x1a30
  007be:    	jne    0x30d3a
  007c4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  007cd:    	mov    QWORD PTR [rsp-0x38],rcx
  007d2:    	mov    rax,QWORD PTR [rbx]
  007d5:    	lea    rdi,[rsp-0x18]
  007da:    	mov    QWORD PTR [rdi],rax
  007dd:    	mov    QWORD PTR [rbx],rdi
  007e0:    	mov    rax,QWORD PTR [rbp-0x38]
  007e4:    	mov    QWORD PTR [rsp-0x38],rax
  007e9: 00 	mov    rdi,0x1
  007f0:    	mov    rax,QWORD PTR [rbp-0x60]
  007f4:    	mov    QWORD PTR [rsp-0x40],rax
  007f9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00802: 00 	movabs rax,0x0
  0080c:    	mov    QWORD PTR [rsp-0x28],rax
  00811: 00 	movabs r13,0x0
  0081b:    	call   0xfffdd048
  00820:    	lea    rdi,[rbp-0x8]
  00824:    	mov    QWORD PTR [rbx],rdi
  00827:    	movq   xmm2,QWORD PTR [rsp]
  0082c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00832:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00838:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0083e:    	add    rsp,0x20
  00842:    	test   rax,rax
  00845:    	je     0x30da6
:00047 
:00049 _ = %2.call t=(%6; 1)                [<INVALID>]
  0084b: 01 	sub    DWORD PTR [rip+0x11e6],0x1        # 0x1a38
  00852:    	je     0x30dd1
  00858:    	sub    rsp,0x20
  0085c:    	movq   QWORD PTR [rsp],xmm2
  00861:    	movq   QWORD PTR [rsp+0x8],xmm4
  00867:    	movq   QWORD PTR [rsp+0x10],xmm5
  0086d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00873:    	mov    rdi,QWORD PTR [rbp-0x38]
  00877: 34 	movabs rax,0x563437f53600
  00881:    	call   rax
  00883:    	mov    r15d,eax
  00886: 00 	cmp    r15d,DWORD PTR [rip+0x11b3]        # 0x1a40
  0088d:    	jne    0x30df3
  00893:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf3a8]        # 0xfffdfc41
  00899:    	cmp    DWORD PTR [rip+0x119d],eax        # 0x1a3c
  0089f:    	jne    0x30df3
  008a5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008ae:    	mov    QWORD PTR [rsp-0x38],rcx
  008b3:    	mov    rax,QWORD PTR [rbx]
  008b6:    	lea    rdi,[rsp-0x18]
  008bb:    	mov    QWORD PTR [rdi],rax
  008be:    	mov    QWORD PTR [rbx],rdi
  008c1:    	mov    rax,QWORD PTR [rbp-0x38]
  008c5:    	mov    QWORD PTR [rsp-0x38],rax
  008ca: 00 	mov    rdi,0x1
  008d1:    	mov    rax,QWORD PTR [rbp-0x58]
  008d5:    	mov    QWORD PTR [rsp-0x40],rax
  008da: 00 	mov    QWORD PTR [rsp-0x30],0x0
  008e3: 00 	movabs rax,0x0
  008ed:    	mov    QWORD PTR [rsp-0x28],rax
  008f2: 00 	movabs r13,0x0
  008fc:    	call   0xfffdd048
  00901:    	lea    rdi,[rbp-0x8]
  00905:    	mov    QWORD PTR [rbx],rdi
  00908:    	movq   xmm2,QWORD PTR [rsp]
  0090d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00913:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00919:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0091f:    	add    rsp,0x20
  00923:    	test   rax,rax
  00926:    	je     0x30e5f
:00050 
:00052 %7 = @n: <INVALID>[IvarId(0)]
  0092c:    	mov    rdi,QWORD PTR [rbp-0x28]
  00930:    	sub    rsp,0x20
  00934:    	movq   QWORD PTR [rsp],xmm2
  00939:    	movq   QWORD PTR [rsp+0x8],xmm4
  0093f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00945:    	movq   QWORD PTR [rsp+0x18],xmm6
  0094b: 00 	mov    rsi,0x97
  00952:    	mov    rdx,r12
  00955: 34 	movabs rax,0x563437f47590
  0095f:    	call   rax
  00961:    	movq   xmm2,QWORD PTR [rsp]
  00966:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0096c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00972:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00978:    	add    rsp,0x20
  0097c:    	mov    QWORD PTR [rbp-0x60],rax
:00053 _ = %2.call n=(%7; 1)                [<INVALID>]
  00980: 01 	sub    DWORD PTR [rip+0x10bd],0x1        # 0x1a44
  00987:    	je     0x30e8a
  0098d:    	sub    rsp,0x20
  00991:    	movq   QWORD PTR [rsp],xmm2
  00996:    	movq   QWORD PTR [rsp+0x8],xmm4
  0099c:    	movq   QWORD PTR [rsp+0x10],xmm5
  009a2:    	movq   QWORD PTR [rsp+0x18],xmm6
  009a8:    	mov    rdi,QWORD PTR [rbp-0x38]
  009ac: 34 	movabs rax,0x563437f53600
  009b6:    	call   rax
  009b8:    	mov    r15d,eax
  009bb: 00 	cmp    r15d,DWORD PTR [rip+0x108a]        # 0x1a4c
  009c2:    	jne    0x30eac
  009c8:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf273]        # 0xfffdfc41
  009ce:    	cmp    DWORD PTR [rip+0x1074],eax        # 0x1a48
  009d4:    	jne    0x30eac
  009da: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009e3:    	mov    QWORD PTR [rsp-0x38],rcx
  009e8:    	mov    rax,QWORD PTR [rbx]
  009eb:    	lea    rdi,[rsp-0x18]
  009f0:    	mov    QWORD PTR [rdi],rax
  009f3:    	mov    QWORD PTR [rbx],rdi
  009f6:    	mov    rax,QWORD PTR [rbp-0x38]
  009fa:    	mov    QWORD PTR [rsp-0x38],rax
  009ff: 00 	mov    rdi,0x1
  00a06:    	mov    rax,QWORD PTR [rbp-0x60]
  00a0a:    	mov    QWORD PTR [rsp-0x40],rax
  00a0f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00a18: 00 	movabs rax,0x0
  00a22:    	mov    QWORD PTR [rsp-0x28],rax
  00a27: 00 	movabs r13,0x0
  00a31:    	call   0xfffdd048
  00a36:    	lea    rdi,[rbp-0x8]
  00a3a:    	mov    QWORD PTR [rbx],rdi
  00a3d:    	movq   xmm2,QWORD PTR [rsp]
  00a42:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a48:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a4e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a54:    	add    rsp,0x20
  00a58:    	test   rax,rax
  00a5b:    	je     0x30f18
:00054 
:00056 %8 = const[Vec]                      [<INVALID>]
  00a61: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdf1e0]        # 0xfffdfc48
  00a68: 00 	cmp    rax,QWORD PTR [rip+0xff9]        # 0x1a68
  00a6f:    	jne    0x30f27
  00a75: 00 	mov    rax,QWORD PTR [rip+0xfdc]        # 0x1a58
  00a7c:    	mov    QWORD PTR [rbp-0x68],rax
:00057 %10 = %1.call org()                  [<INVALID>]
  00a80: 01 	sub    DWORD PTR [rip+0xfe9],0x1        # 0x1a70
  00a87:    	je     0x30fbf
  00a8d:    	sub    rsp,0x20
  00a91:    	movq   QWORD PTR [rsp],xmm2
  00a96:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a9c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00aa2:    	movq   QWORD PTR [rsp+0x18],xmm6
  00aa8:    	mov    rdi,QWORD PTR [rbp-0x30]
  00aac: 34 	movabs rax,0x563437f53600
  00ab6:    	call   rax
  00ab8:    	mov    r15d,eax
  00abb: 00 	cmp    r15d,DWORD PTR [rip+0xfb6]        # 0x1a78
  00ac2:    	jne    0x30fe1
  00ac8:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf173]        # 0xfffdfc41
  00ace:    	cmp    DWORD PTR [rip+0xfa0],eax        # 0x1a74
  00ad4:    	jne    0x30fe1
  00ada: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ae3:    	mov    QWORD PTR [rsp-0x38],rcx
  00ae8:    	mov    rax,QWORD PTR [rbx]
  00aeb:    	lea    rdi,[rsp-0x18]
  00af0:    	mov    QWORD PTR [rdi],rax
  00af3:    	mov    QWORD PTR [rbx],rdi
  00af6:    	mov    rax,QWORD PTR [rbp-0x30]
  00afa:    	mov    QWORD PTR [rsp-0x38],rax
  00aff: 00 	mov    rdi,0x0
  00b06: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00b0f: 00 	movabs rax,0x0
  00b19:    	mov    QWORD PTR [rsp-0x28],rax
  00b1e: 00 	movabs r13,0x0
  00b28:    	call   0xfffdd048
  00b2d:    	lea    rdi,[rbp-0x8]
  00b31:    	mov    QWORD PTR [rbx],rdi
  00b34:    	movq   xmm2,QWORD PTR [rsp]
  00b39:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b3f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b45:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b4b:    	add    rsp,0x20
  00b4f:    	test   rax,rax
  00b52:    	je     0x3104d
  00b58:    	mov    QWORD PTR [rbp-0x78],rax
:00058 
:00060 %9 = %10.call x()                    [<INVALID>]
  00b5c: 01 	sub    DWORD PTR [rip+0xf19],0x1        # 0x1a7c
  00b63:    	je     0x31078
  00b69:    	sub    rsp,0x20
  00b6d:    	movq   QWORD PTR [rsp],xmm2
  00b72:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b78:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b7e:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b84:    	mov    rdi,QWORD PTR [rbp-0x78]
  00b88: 34 	movabs rax,0x563437f53600
  00b92:    	call   rax
  00b94:    	mov    r15d,eax
  00b97: 00 	cmp    r15d,DWORD PTR [rip+0xee6]        # 0x1a84
  00b9e:    	jne    0x3109a
  00ba4:    	mov    eax,DWORD PTR [rip+0xfffffffffffdf097]        # 0xfffdfc41
  00baa:    	cmp    DWORD PTR [rip+0xed0],eax        # 0x1a80
  00bb0:    	jne    0x3109a
  00bb6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00bbf:    	mov    QWORD PTR [rsp-0x38],rcx
  00bc4:    	mov    rax,QWORD PTR [rbx]
  00bc7:    	lea    rdi,[rsp-0x18]
  00bcc:    	mov    QWORD PTR [rdi],rax
  00bcf:    	mov    QWORD PTR [rbx],rdi
  00bd2:    	mov    rax,QWORD PTR [rbp-0x78]
  00bd6:    	mov    QWORD PTR [rsp-0x38],rax
  00bdb: 00 	mov    rdi,0x0
  00be2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00beb: 00 	movabs rax,0x0
  00bf5:    	mov    QWORD PTR [rsp-0x28],rax
  00bfa: 00 	movabs r13,0x0
  00c04:    	call   0xfffdd048
  00c09:    	lea    rdi,[rbp-0x8]
  00c0d:    	mov    QWORD PTR [rbx],rdi
  00c10:    	movq   xmm2,QWORD PTR [rsp]
  00c15:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c1b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c21:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c27:    	add    rsp,0x20
  00c2b:    	test   rax,rax
  00c2e:    	je     0x31106
  00c34:    	mov    QWORD PTR [rbp-0x70],rax
:00061 
:00063 %11 = %1.call dir()                  [<INVALID>]
  00c38: 01 	sub    DWORD PTR [rip+0xe49],0x1        # 0x1a88
  00c3f:    	je     0x31131
  00c45:    	sub    rsp,0x20
  00c49:    	movq   QWORD PTR [rsp],xmm2
  00c4e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c54:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c5a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c60:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c64: 34 	movabs rax,0x563437f53600
  00c6e:    	call   rax
  00c70:    	mov    r15d,eax
  00c73: 00 	cmp    r15d,DWORD PTR [rip+0xe16]        # 0x1a90
  00c7a:    	jne    0x31153
  00c80:    	mov    eax,DWORD PTR [rip+0xfffffffffffdefbb]        # 0xfffdfc41
  00c86:    	cmp    DWORD PTR [rip+0xe00],eax        # 0x1a8c
  00c8c:    	jne    0x31153
  00c92: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c9b:    	mov    QWORD PTR [rsp-0x38],rcx
  00ca0:    	mov    rax,QWORD PTR [rbx]
  00ca3:    	lea    rdi,[rsp-0x18]
  00ca8:    	mov    QWORD PTR [rdi],rax
  00cab:    	mov    QWORD PTR [rbx],rdi
  00cae:    	mov    rax,QWORD PTR [rbp-0x30]
  00cb2:    	mov    QWORD PTR [rsp-0x38],rax
  00cb7: 00 	mov    rdi,0x0
  00cbe: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cc7: 00 	movabs rax,0x0
  00cd1:    	mov    QWORD PTR [rsp-0x28],rax
  00cd6: 00 	movabs r13,0x0
  00ce0:    	call   0xfffdd048
  00ce5:    	lea    rdi,[rbp-0x8]
  00ce9:    	mov    QWORD PTR [rbx],rdi
  00cec:    	movq   xmm2,QWORD PTR [rsp]
  00cf1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00cf7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00cfd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d03:    	add    rsp,0x20
  00d07:    	test   rax,rax
  00d0a:    	je     0x311bf
  00d10:    	mov    QWORD PTR [rbp-0x80],rax
:00064 
:00066 %10 = %11.call x()                   [<INVALID>]
  00d14: 01 	sub    DWORD PTR [rip+0xd79],0x1        # 0x1a94
  00d1b:    	je     0x311ea
  00d21:    	sub    rsp,0x20
  00d25:    	movq   QWORD PTR [rsp],xmm2
  00d2a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d30:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d36:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d3c:    	mov    rdi,QWORD PTR [rbp-0x80]
  00d40: 34 	movabs rax,0x563437f53600
  00d4a:    	call   rax
  00d4c:    	mov    r15d,eax
  00d4f: 00 	cmp    r15d,DWORD PTR [rip+0xd46]        # 0x1a9c
  00d56:    	jne    0x3120c
  00d5c:    	mov    eax,DWORD PTR [rip+0xfffffffffffdeedf]        # 0xfffdfc41
  00d62:    	cmp    DWORD PTR [rip+0xd30],eax        # 0x1a98
  00d68:    	jne    0x3120c
  00d6e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00d77:    	mov    QWORD PTR [rsp-0x38],rcx
  00d7c:    	mov    rax,QWORD PTR [rbx]
  00d7f:    	lea    rdi,[rsp-0x18]
  00d84:    	mov    QWORD PTR [rdi],rax
  00d87:    	mov    QWORD PTR [rbx],rdi
  00d8a:    	mov    rax,QWORD PTR [rbp-0x80]
  00d8e:    	mov    QWORD PTR [rsp-0x38],rax
  00d93: 00 	mov    rdi,0x0
  00d9a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00da3: 00 	movabs rax,0x0
  00dad:    	mov    QWORD PTR [rsp-0x28],rax
  00db2: 00 	movabs r13,0x0
  00dbc:    	call   0xfffdd048
  00dc1:    	lea    rdi,[rbp-0x8]
  00dc5:    	mov    QWORD PTR [rbx],rdi
  00dc8:    	movq   xmm2,QWORD PTR [rsp]
  00dcd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00dd3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00dd9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ddf:    	add    rsp,0x20
  00de3:    	test   rax,rax
  00de6:    	je     0x31278
  00dec:    	mov    QWORD PTR [rbp-0x78],rax
:00067 
:00069 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  00df0: 01 	sub    DWORD PTR [rip+0xca9],0x1        # 0x1aa0
  00df7:    	je     0x312a3
  00dfd:    	mov    rdi,QWORD PTR [rbp-0x58]
  00e01:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e05:    	sub    rsp,0x20
  00e09:    	movq   QWORD PTR [rsp],xmm2
  00e0e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e14:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e1a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e20:    	mov    rdx,rdi
  00e23:    	mov    rcx,rsi
  00e26:    	mov    rdi,rbx
  00e29:    	mov    rsi,r12
  00e2c: 34 	movabs rax,0x563437f17b80
  00e36:    	call   rax
  00e38:    	movq   xmm2,QWORD PTR [rsp]
  00e3d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e43:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e49:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e4f:    	add    rsp,0x20
  00e53: 34 	movabs r13,0x5634398559b0
  00e5d:    	test   rax,rax
  00e60:    	je     0xfffdd083
  00e66:    	mov    QWORD PTR [rbp-0x78],rax
:00070 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  00e6a: 01 	sub    DWORD PTR [rip+0xc33],0x1        # 0x1aa4
  00e71:    	je     0x312e1
  00e77:    	mov    rdi,QWORD PTR [rbp-0x70]
  00e7b:    	mov    rsi,QWORD PTR [rbp-0x78]
  00e7f:    	sub    rsp,0x20
  00e83:    	movq   QWORD PTR [rsp],xmm2
  00e88:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e8e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e94:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e9a:    	mov    rdx,rdi
  00e9d:    	mov    rcx,rsi
  00ea0:    	mov    rdi,rbx
  00ea3:    	mov    rsi,r12
  00ea6: 34 	movabs rax,0x563437f15c00
  00eb0:    	call   rax
  00eb2:    	movq   xmm2,QWORD PTR [rsp]
  00eb7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ebd:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ec3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ec9:    	add    rsp,0x20
  00ecd: 34 	movabs r13,0x5634398559c0
  00ed7:    	test   rax,rax
  00eda:    	je     0xfffdd083
  00ee0:    	mov    QWORD PTR [rbp-0x70],rax
:00071 %11 = %1.call org()                  [<INVALID>]
  00ee4: 01 	sub    DWORD PTR [rip+0xbbd],0x1        # 0x1aa8
  00eeb:    	je     0x3131f
  00ef1:    	sub    rsp,0x20
  00ef5:    	movq   QWORD PTR [rsp],xmm2
  00efa:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f00:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f06:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f0c:    	mov    rdi,QWORD PTR [rbp-0x30]
  00f10: 34 	movabs rax,0x563437f53600
  00f1a:    	call   rax
  00f1c:    	mov    r15d,eax
  00f1f: 00 	cmp    r15d,DWORD PTR [rip+0xb8a]        # 0x1ab0
  00f26:    	jne    0x31341
  00f2c:    	mov    eax,DWORD PTR [rip+0xfffffffffffded0f]        # 0xfffdfc41
  00f32:    	cmp    DWORD PTR [rip+0xb74],eax        # 0x1aac
  00f38:    	jne    0x31341
  00f3e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f47:    	mov    QWORD PTR [rsp-0x38],rcx
  00f4c:    	mov    rax,QWORD PTR [rbx]
  00f4f:    	lea    rdi,[rsp-0x18]
  00f54:    	mov    QWORD PTR [rdi],rax
  00f57:    	mov    QWORD PTR [rbx],rdi
  00f5a:    	mov    rax,QWORD PTR [rbp-0x30]
  00f5e:    	mov    QWORD PTR [rsp-0x38],rax
  00f63: 00 	mov    rdi,0x0
  00f6a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f73: 00 	movabs rax,0x0
  00f7d:    	mov    QWORD PTR [rsp-0x28],rax
  00f82: 00 	movabs r13,0x0
  00f8c:    	call   0xfffdd048
  00f91:    	lea    rdi,[rbp-0x8]
  00f95:    	mov    QWORD PTR [rbx],rdi
  00f98:    	movq   xmm2,QWORD PTR [rsp]
  00f9d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fa3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00fa9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00faf:    	add    rsp,0x20
  00fb3:    	test   rax,rax
  00fb6:    	je     0x313ad
  00fbc:    	mov    QWORD PTR [rbp-0x80],rax
:00072 
:00074 %10 = %11.call y()                   [<INVALID>]
  00fc0: 01 	sub    DWORD PTR [rip+0xaed],0x1        # 0x1ab4
  00fc7:    	je     0x313d8
  00fcd:    	sub    rsp,0x20
  00fd1:    	movq   QWORD PTR [rsp],xmm2
  00fd6:    	movq   QWORD PTR [rsp+0x8],xmm4
  00fdc:    	movq   QWORD PTR [rsp+0x10],xmm5
  00fe2:    	movq   QWORD PTR [rsp+0x18],xmm6
  00fe8:    	mov    rdi,QWORD PTR [rbp-0x80]
  00fec: 34 	movabs rax,0x563437f53600
  00ff6:    	call   rax
  00ff8:    	mov    r15d,eax
  00ffb: 00 	cmp    r15d,DWORD PTR [rip+0xaba]        # 0x1abc
  01002:    	jne    0x313fa
  01008:    	mov    eax,DWORD PTR [rip+0xfffffffffffdec33]        # 0xfffdfc41
  0100e:    	cmp    DWORD PTR [rip+0xaa4],eax        # 0x1ab8
  01014:    	jne    0x313fa
  0101a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01023:    	mov    QWORD PTR [rsp-0x38],rcx
  01028:    	mov    rax,QWORD PTR [rbx]
  0102b:    	lea    rdi,[rsp-0x18]
  01030:    	mov    QWORD PTR [rdi],rax
  01033:    	mov    QWORD PTR [rbx],rdi
  01036:    	mov    rax,QWORD PTR [rbp-0x80]
  0103a:    	mov    QWORD PTR [rsp-0x38],rax
  0103f: 00 	mov    rdi,0x0
  01046: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0104f: 00 	movabs rax,0x0
  01059:    	mov    QWORD PTR [rsp-0x28],rax
  0105e: 00 	movabs r13,0x0
  01068:    	call   0xfffdd048
  0106d:    	lea    rdi,[rbp-0x8]
  01071:    	mov    QWORD PTR [rbx],rdi
  01074:    	movq   xmm2,QWORD PTR [rsp]
  01079:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0107f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01085:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0108b:    	add    rsp,0x20
  0108f:    	test   rax,rax
  01092:    	je     0x31466
  01098:    	mov    QWORD PTR [rbp-0x78],rax
:00075 
:00077 %12 = %1.call dir()                  [<INVALID>]
  0109c: 01 	sub    DWORD PTR [rip+0xa1d],0x1        # 0x1ac0
  010a3:    	je     0x31491
  010a9:    	sub    rsp,0x20
  010ad:    	movq   QWORD PTR [rsp],xmm2
  010b2:    	movq   QWORD PTR [rsp+0x8],xmm4
  010b8:    	movq   QWORD PTR [rsp+0x10],xmm5
  010be:    	movq   QWORD PTR [rsp+0x18],xmm6
  010c4:    	mov    rdi,QWORD PTR [rbp-0x30]
  010c8: 34 	movabs rax,0x563437f53600
  010d2:    	call   rax
  010d4:    	mov    r15d,eax
  010d7: 00 	cmp    r15d,DWORD PTR [rip+0x9ea]        # 0x1ac8
  010de:    	jne    0x314b3
  010e4:    	mov    eax,DWORD PTR [rip+0xfffffffffffdeb57]        # 0xfffdfc41
  010ea:    	cmp    DWORD PTR [rip+0x9d4],eax        # 0x1ac4
  010f0:    	jne    0x314b3
  010f6: 00 	mov    QWORD PTR [rsp-0x20],0x0
  010ff:    	mov    QWORD PTR [rsp-0x38],rcx
  01104:    	mov    rax,QWORD PTR [rbx]
  01107:    	lea    rdi,[rsp-0x18]
  0110c:    	mov    QWORD PTR [rdi],rax
  0110f:    	mov    QWORD PTR [rbx],rdi
  01112:    	mov    rax,QWORD PTR [rbp-0x30]
  01116:    	mov    QWORD PTR [rsp-0x38],rax
  0111b: 00 	mov    rdi,0x0
  01122: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0112b: 00 	movabs rax,0x0
  01135:    	mov    QWORD PTR [rsp-0x28],rax
  0113a: 00 	movabs r13,0x0
  01144:    	call   0xfffdd048
  01149:    	lea    rdi,[rbp-0x8]
  0114d:    	mov    QWORD PTR [rbx],rdi
  01150:    	movq   xmm2,QWORD PTR [rsp]
  01155:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0115b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01161:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01167:    	add    rsp,0x20
  0116b:    	test   rax,rax
  0116e:    	je     0x3151f
  01174: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 
:00080 %11 = %12.call y()                   [<INVALID>]
  0117b: 01 	sub    DWORD PTR [rip+0x94a],0x1        # 0x1acc
  01182:    	je     0x3154a
  01188:    	sub    rsp,0x20
  0118c:    	movq   QWORD PTR [rsp],xmm2
  01191:    	movq   QWORD PTR [rsp+0x8],xmm4
  01197:    	movq   QWORD PTR [rsp+0x10],xmm5
  0119d:    	movq   QWORD PTR [rsp+0x18],xmm6
  011a3: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  011aa: 34 	movabs rax,0x563437f53600
  011b4:    	call   rax
  011b6:    	mov    r15d,eax
  011b9: 00 	cmp    r15d,DWORD PTR [rip+0x914]        # 0x1ad4
  011c0:    	jne    0x3156c
  011c6:    	mov    eax,DWORD PTR [rip+0xfffffffffffdea75]        # 0xfffdfc41
  011cc:    	cmp    DWORD PTR [rip+0x8fe],eax        # 0x1ad0
  011d2:    	jne    0x3156c
  011d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  011e1:    	mov    QWORD PTR [rsp-0x38],rcx
  011e6:    	mov    rax,QWORD PTR [rbx]
  011e9:    	lea    rdi,[rsp-0x18]
  011ee:    	mov    QWORD PTR [rdi],rax
  011f1:    	mov    QWORD PTR [rbx],rdi
  011f4: ff 	mov    rax,QWORD PTR [rbp-0x88]
  011fb:    	mov    QWORD PTR [rsp-0x38],rax
  01200: 00 	mov    rdi,0x0
  01207: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01210: 00 	movabs rax,0x0
  0121a:    	mov    QWORD PTR [rsp-0x28],rax
  0121f: 00 	movabs r13,0x0
  01229:    	call   0xfffdd048
  0122e:    	lea    rdi,[rbp-0x8]
  01232:    	mov    QWORD PTR [rbx],rdi
  01235:    	movq   xmm2,QWORD PTR [rsp]
  0123a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01240:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01246:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0124c:    	add    rsp,0x20
  01250:    	test   rax,rax
  01253:    	je     0x315db
  01259:    	mov    QWORD PTR [rbp-0x80],rax
:00081 
:00083 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  0125d: 01 	sub    DWORD PTR [rip+0x874],0x1        # 0x1ad8
  01264:    	je     0x31606
  0126a:    	mov    rdi,QWORD PTR [rbp-0x58]
  0126e:    	mov    rsi,QWORD PTR [rbp-0x80]
  01272:    	sub    rsp,0x20
  01276:    	movq   QWORD PTR [rsp],xmm2
  0127b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01281:    	movq   QWORD PTR [rsp+0x10],xmm5
  01287:    	movq   QWORD PTR [rsp+0x18],xmm6
  0128d:    	mov    rdx,rdi
  01290:    	mov    rcx,rsi
  01293:    	mov    rdi,rbx
  01296:    	mov    rsi,r12
  01299: 34 	movabs rax,0x563437f17b80
  012a3:    	call   rax
  012a5:    	movq   xmm2,QWORD PTR [rsp]
  012aa:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012b0:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012b6:    	movq   xmm6,QWORD PTR [rsp+0x18]
  012bc:    	add    rsp,0x20
  012c0: 34 	movabs r13,0x563439855a90
  012ca:    	test   rax,rax
  012cd:    	je     0xfffdd083
  012d3:    	mov    QWORD PTR [rbp-0x80],rax
:00084 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  012d7: 01 	sub    DWORD PTR [rip+0x7fe],0x1        # 0x1adc
  012de:    	je     0x31644
  012e4:    	mov    rdi,QWORD PTR [rbp-0x78]
  012e8:    	mov    rsi,QWORD PTR [rbp-0x80]
  012ec:    	sub    rsp,0x20
  012f0:    	movq   QWORD PTR [rsp],xmm2
  012f5:    	movq   QWORD PTR [rsp+0x8],xmm4
  012fb:    	movq   QWORD PTR [rsp+0x10],xmm5
  01301:    	movq   QWORD PTR [rsp+0x18],xmm6
  01307:    	mov    rdx,rdi
  0130a:    	mov    rcx,rsi
  0130d:    	mov    rdi,rbx
  01310:    	mov    rsi,r12
  01313: 34 	movabs rax,0x563437f15c00
  0131d:    	call   rax
  0131f:    	movq   xmm2,QWORD PTR [rsp]
  01324:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0132a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01330:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01336:    	add    rsp,0x20
  0133a: 34 	movabs r13,0x563439855aa0
  01344:    	test   rax,rax
  01347:    	je     0xfffdd083
  0134d:    	mov    QWORD PTR [rbp-0x78],rax
:00085 %12 = %1.call org()                  [<INVALID>]
  01351: 01 	sub    DWORD PTR [rip+0x788],0x1        # 0x1ae0
  01358:    	je     0x31682
  0135e:    	sub    rsp,0x20
  01362:    	movq   QWORD PTR [rsp],xmm2
  01367:    	movq   QWORD PTR [rsp+0x8],xmm4
  0136d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01373:    	movq   QWORD PTR [rsp+0x18],xmm6
  01379:    	mov    rdi,QWORD PTR [rbp-0x30]
  0137d: 34 	movabs rax,0x563437f53600
  01387:    	call   rax
  01389:    	mov    r15d,eax
  0138c: 00 	cmp    r15d,DWORD PTR [rip+0x755]        # 0x1ae8
  01393:    	jne    0x316a4
  01399:    	mov    eax,DWORD PTR [rip+0xfffffffffffde8a2]        # 0xfffdfc41
  0139f:    	cmp    DWORD PTR [rip+0x73f],eax        # 0x1ae4
  013a5:    	jne    0x316a4
  013ab: 00 	mov    QWORD PTR [rsp-0x20],0x0
  013b4:    	mov    QWORD PTR [rsp-0x38],rcx
  013b9:    	mov    rax,QWORD PTR [rbx]
  013bc:    	lea    rdi,[rsp-0x18]
  013c1:    	mov    QWORD PTR [rdi],rax
  013c4:    	mov    QWORD PTR [rbx],rdi
  013c7:    	mov    rax,QWORD PTR [rbp-0x30]
  013cb:    	mov    QWORD PTR [rsp-0x38],rax
  013d0: 00 	mov    rdi,0x0
  013d7: 00 	mov    QWORD PTR [rsp-0x30],0x0
  013e0: 00 	movabs rax,0x0
  013ea:    	mov    QWORD PTR [rsp-0x28],rax
  013ef: 00 	movabs r13,0x0
  013f9:    	call   0xfffdd048
  013fe:    	lea    rdi,[rbp-0x8]
  01402:    	mov    QWORD PTR [rbx],rdi
  01405:    	movq   xmm2,QWORD PTR [rsp]
  0140a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01410:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01416:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0141c:    	add    rsp,0x20
  01420:    	test   rax,rax
  01423:    	je     0x31710
  01429: ff 	mov    QWORD PTR [rbp-0x88],rax
:00086 
:00088 %11 = %12.call z()                   [<INVALID>]
  01430: 01 	sub    DWORD PTR [rip+0x6b5],0x1        # 0x1aec
  01437:    	je     0x3173b
  0143d:    	sub    rsp,0x20
  01441:    	movq   QWORD PTR [rsp],xmm2
  01446:    	movq   QWORD PTR [rsp+0x8],xmm4
  0144c:    	movq   QWORD PTR [rsp+0x10],xmm5
  01452:    	movq   QWORD PTR [rsp+0x18],xmm6
  01458: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0145f: 34 	movabs rax,0x563437f53600
  01469:    	call   rax
  0146b:    	mov    r15d,eax
  0146e: 00 	cmp    r15d,DWORD PTR [rip+0x67f]        # 0x1af4
  01475:    	jne    0x3175d
  0147b:    	mov    eax,DWORD PTR [rip+0xfffffffffffde7c0]        # 0xfffdfc41
  01481:    	cmp    DWORD PTR [rip+0x669],eax        # 0x1af0
  01487:    	jne    0x3175d
  0148d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01496:    	mov    QWORD PTR [rsp-0x38],rcx
  0149b:    	mov    rax,QWORD PTR [rbx]
  0149e:    	lea    rdi,[rsp-0x18]
  014a3:    	mov    QWORD PTR [rdi],rax
  014a6:    	mov    QWORD PTR [rbx],rdi
  014a9: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014b0:    	mov    QWORD PTR [rsp-0x38],rax
  014b5: 00 	mov    rdi,0x0
  014bc: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014c5: 00 	movabs rax,0x0
  014cf:    	mov    QWORD PTR [rsp-0x28],rax
  014d4: 00 	movabs r13,0x0
  014de:    	call   0xfffdd048
  014e3:    	lea    rdi,[rbp-0x8]
  014e7:    	mov    QWORD PTR [rbx],rdi
  014ea:    	movq   xmm2,QWORD PTR [rsp]
  014ef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014f5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  014fb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01501:    	add    rsp,0x20
  01505:    	test   rax,rax
  01508:    	je     0x317cc
  0150e:    	mov    QWORD PTR [rbp-0x80],rax
:00089 
:00091 %13 = %1.call dir()                  [<INVALID>]
  01512: 01 	sub    DWORD PTR [rip+0x5df],0x1        # 0x1af8
  01519:    	je     0x317f7
  0151f:    	sub    rsp,0x20
  01523:    	movq   QWORD PTR [rsp],xmm2
  01528:    	movq   QWORD PTR [rsp+0x8],xmm4
  0152e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01534:    	movq   QWORD PTR [rsp+0x18],xmm6
  0153a:    	mov    rdi,QWORD PTR [rbp-0x30]
  0153e: 34 	movabs rax,0x563437f53600
  01548:    	call   rax
  0154a:    	mov    r15d,eax
  0154d: 00 	cmp    r15d,DWORD PTR [rip+0x5ac]        # 0x1b00
  01554:    	jne    0x31819
  0155a:    	mov    eax,DWORD PTR [rip+0xfffffffffffde6e1]        # 0xfffdfc41
  01560:    	cmp    DWORD PTR [rip+0x596],eax        # 0x1afc
  01566:    	jne    0x31819
  0156c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01575:    	mov    QWORD PTR [rsp-0x38],rcx
  0157a:    	mov    rax,QWORD PTR [rbx]
  0157d:    	lea    rdi,[rsp-0x18]
  01582:    	mov    QWORD PTR [rdi],rax
  01585:    	mov    QWORD PTR [rbx],rdi
  01588:    	mov    rax,QWORD PTR [rbp-0x30]
  0158c:    	mov    QWORD PTR [rsp-0x38],rax
  01591: 00 	mov    rdi,0x0
  01598: 00 	mov    QWORD PTR [rsp-0x30],0x0
  015a1: 00 	movabs rax,0x0
  015ab:    	mov    QWORD PTR [rsp-0x28],rax
  015b0: 00 	movabs r13,0x0
  015ba:    	call   0xfffdd048
  015bf:    	lea    rdi,[rbp-0x8]
  015c3:    	mov    QWORD PTR [rbx],rdi
  015c6:    	movq   xmm2,QWORD PTR [rsp]
  015cb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015d1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  015d7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  015dd:    	add    rsp,0x20
  015e1:    	test   rax,rax
  015e4:    	je     0x31885
  015ea: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 
:00094 %12 = %13.call z()                   [<INVALID>]
  015f1: 01 	sub    DWORD PTR [rip+0x50c],0x1        # 0x1b04
  015f8:    	je     0x318b0
  015fe:    	sub    rsp,0x20
  01602:    	movq   QWORD PTR [rsp],xmm2
  01607:    	movq   QWORD PTR [rsp+0x8],xmm4
  0160d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01613:    	movq   QWORD PTR [rsp+0x18],xmm6
  01619: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01620: 34 	movabs rax,0x563437f53600
  0162a:    	call   rax
  0162c:    	mov    r15d,eax
  0162f: 00 	cmp    r15d,DWORD PTR [rip+0x4d6]        # 0x1b0c
  01636:    	jne    0x318d2
  0163c:    	mov    eax,DWORD PTR [rip+0xfffffffffffde5ff]        # 0xfffdfc41
  01642:    	cmp    DWORD PTR [rip+0x4c0],eax        # 0x1b08
  01648:    	jne    0x318d2
  0164e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01657:    	mov    QWORD PTR [rsp-0x38],rcx
  0165c:    	mov    rax,QWORD PTR [rbx]
  0165f:    	lea    rdi,[rsp-0x18]
  01664:    	mov    QWORD PTR [rdi],rax
  01667:    	mov    QWORD PTR [rbx],rdi
  0166a: ff 	mov    rax,QWORD PTR [rbp-0x90]
  01671:    	mov    QWORD PTR [rsp-0x38],rax
  01676: 00 	mov    rdi,0x0
  0167d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01686: 00 	movabs rax,0x0
  01690:    	mov    QWORD PTR [rsp-0x28],rax
  01695: 00 	movabs r13,0x0
  0169f:    	call   0xfffdd048
  016a4:    	lea    rdi,[rbp-0x8]
  016a8:    	mov    QWORD PTR [rbx],rdi
  016ab:    	movq   xmm2,QWORD PTR [rsp]
  016b0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016b6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  016bc:    	movq   xmm6,QWORD PTR [rsp+0x18]
  016c2:    	add    rsp,0x20
  016c6:    	test   rax,rax
  016c9:    	je     0x31941
  016cf: ff 	mov    QWORD PTR [rbp-0x88],rax
:00095 
:00097 %12 = %6 * %12                       [<INVALID>][<INVALID>]
  016d6: 01 	sub    DWORD PTR [rip+0x433],0x1        # 0x1b10
  016dd:    	je     0x3196c
  016e3:    	mov    rdi,QWORD PTR [rbp-0x58]
  016e7: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  016ee:    	sub    rsp,0x20
  016f2:    	movq   QWORD PTR [rsp],xmm2
  016f7:    	movq   QWORD PTR [rsp+0x8],xmm4
  016fd:    	movq   QWORD PTR [rsp+0x10],xmm5
  01703:    	movq   QWORD PTR [rsp+0x18],xmm6
  01709:    	mov    rdx,rdi
  0170c:    	mov    rcx,rsi
  0170f:    	mov    rdi,rbx
  01712:    	mov    rsi,r12
  01715: 34 	movabs rax,0x563437f17b80
  0171f:    	call   rax
  01721:    	movq   xmm2,QWORD PTR [rsp]
  01726:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0172c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01732:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01738:    	add    rsp,0x20
  0173c: 34 	movabs r13,0x563439855b70
  01746:    	test   rax,rax
  01749:    	je     0xfffdd083
  0174f: ff 	mov    QWORD PTR [rbp-0x88],rax
:00098 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  01756: 01 	sub    DWORD PTR [rip+0x3b7],0x1        # 0x1b14
  0175d:    	je     0x319aa
  01763:    	mov    rdi,QWORD PTR [rbp-0x80]
  01767: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  0176e:    	sub    rsp,0x20
  01772:    	movq   QWORD PTR [rsp],xmm2
  01777:    	movq   QWORD PTR [rsp+0x8],xmm4
  0177d:    	movq   QWORD PTR [rsp+0x10],xmm5
  01783:    	movq   QWORD PTR [rsp+0x18],xmm6
  01789:    	mov    rdx,rdi
  0178c:    	mov    rcx,rsi
  0178f:    	mov    rdi,rbx
  01792:    	mov    rsi,r12
  01795: 34 	movabs rax,0x563437f15c00
  0179f:    	call   rax
  017a1:    	movq   xmm2,QWORD PTR [rsp]
  017a6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017ac:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017b2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  017b8:    	add    rsp,0x20
  017bc: 34 	movabs r13,0x563439855b80
  017c6:    	test   rax,rax
  017c9:    	je     0xfffdd083
  017cf:    	mov    QWORD PTR [rbp-0x80],rax
:00099 %7 = %8.call new(%9; 3)              [<INVALID>]
  017d3: 01 	sub    DWORD PTR [rip+0x33e],0x1        # 0x1b18
  017da:    	je     0x319e8
  017e0:    	sub    rsp,0x20
  017e4:    	movq   QWORD PTR [rsp],xmm2
  017e9:    	movq   QWORD PTR [rsp+0x8],xmm4
  017ef:    	movq   QWORD PTR [rsp+0x10],xmm5
  017f5:    	movq   QWORD PTR [rsp+0x18],xmm6
  017fb:    	mov    rdi,QWORD PTR [rbp-0x68]
  017ff: 34 	movabs rax,0x563437f53600
  01809:    	call   rax
  0180b:    	mov    r15d,eax
  0180e: 00 	cmp    r15d,DWORD PTR [rip+0x30b]        # 0x1b20
  01815:    	jne    0x31a0a
  0181b:    	mov    eax,DWORD PTR [rip+0xfffffffffffde420]        # 0xfffdfc41
  01821:    	cmp    DWORD PTR [rip+0x2f5],eax        # 0x1b1c
  01827:    	jne    0x31a0a
  0182d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01836:    	mov    QWORD PTR [rsp-0x38],rcx
  0183b:    	mov    rax,QWORD PTR [rbx]
  0183e:    	lea    rdi,[rsp-0x18]
  01843:    	mov    QWORD PTR [rdi],rax
  01846:    	mov    QWORD PTR [rbx],rdi
  01849:    	mov    rax,QWORD PTR [rbp-0x68]
  0184d:    	mov    QWORD PTR [rsp-0x38],rax
  01852: 00 	mov    rdi,0x3
  01859:    	mov    rax,QWORD PTR [rbp-0x70]
  0185d:    	mov    QWORD PTR [rsp-0x40],rax
  01862:    	mov    rax,QWORD PTR [rbp-0x78]
  01866:    	mov    QWORD PTR [rsp-0x48],rax
  0186b:    	mov    rax,QWORD PTR [rbp-0x80]
  0186f:    	mov    QWORD PTR [rsp-0x50],rax
  01874: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0187d: 00 	movabs rax,0x0
  01887:    	mov    QWORD PTR [rsp-0x28],rax
  0188c: 00 	movabs r13,0x0
  01896:    	call   0xfffdd048
  0189b:    	lea    rdi,[rbp-0x8]
  0189f:    	mov    QWORD PTR [rbx],rdi
  018a2:    	movq   xmm2,QWORD PTR [rsp]
  018a7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018ad:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018b3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  018b9:    	add    rsp,0x20
  018bd:    	test   rax,rax
  018c0:    	je     0x31a76
  018c6:    	mov    QWORD PTR [rbp-0x60],rax
:00100 
:00102 _ = %2.call pl=(%7; 1)               [<INVALID>]
  018ca: 01 	sub    DWORD PTR [rip+0x253],0x1        # 0x1b24
  018d1:    	je     0x31aa1
  018d7:    	sub    rsp,0x20
  018db:    	movq   QWORD PTR [rsp],xmm2
  018e0:    	movq   QWORD PTR [rsp+0x8],xmm4
  018e6:    	movq   QWORD PTR [rsp+0x10],xmm5
  018ec:    	movq   QWORD PTR [rsp+0x18],xmm6
  018f2:    	mov    rdi,QWORD PTR [rbp-0x38]
  018f6: 34 	movabs rax,0x563437f53600
  01900:    	call   rax
  01902:    	mov    r15d,eax
  01905: 00 	cmp    r15d,DWORD PTR [rip+0x220]        # 0x1b2c
  0190c:    	jne    0x31ac3
  01912:    	mov    eax,DWORD PTR [rip+0xfffffffffffde329]        # 0xfffdfc41
  01918:    	cmp    DWORD PTR [rip+0x20a],eax        # 0x1b28
  0191e:    	jne    0x31ac3
  01924: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0192d:    	mov    QWORD PTR [rsp-0x38],rcx
  01932:    	mov    rax,QWORD PTR [rbx]
  01935:    	lea    rdi,[rsp-0x18]
  0193a:    	mov    QWORD PTR [rdi],rax
  0193d:    	mov    QWORD PTR [rbx],rdi
  01940:    	mov    rax,QWORD PTR [rbp-0x38]
  01944:    	mov    QWORD PTR [rsp-0x38],rax
  01949: 00 	mov    rdi,0x1
  01950:    	mov    rax,QWORD PTR [rbp-0x60]
  01954:    	mov    QWORD PTR [rsp-0x40],rax
  01959: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01962: 00 	movabs rax,0x0
  0196c:    	mov    QWORD PTR [rsp-0x28],rax
  01971: 00 	movabs r13,0x0
  0197b:    	call   0xfffdd048
  01980:    	lea    rdi,[rbp-0x8]
  01984:    	mov    QWORD PTR [rbx],rdi
  01987:    	movq   xmm2,QWORD PTR [rsp]
  0198c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01992:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01998:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0199e:    	add    rsp,0x20
  019a2:    	test   rax,rax
  019a5:    	je     0x31b2f
:00103 
:00105 br =>:00106
  019ab:    	jmp    0x31b97
:00106 %7 = nil
  019b0: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00107 ret %7
  019b8:    	mov    rax,QWORD PTR [rbp-0x60]
  019bc:    	leave  
  019bd:    	ret    
==> start whole compile: intersect FuncId(72) self_class:Plane start:[00000] bytecode:0x563439855550
<== finished compile. elapsed:150.6µs
offset:Pos(150248) code: 5701 bytes  data: 259 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xa0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x3008d
  00022:    	jmp    0x3008d
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086:    	mov    rdi,QWORD PTR [rbp-0x28]
  0008a: 00 	test   rdi,0x7
  00091:    	jne    0x3009c
  00097:    	cmp    DWORD PTR [rdi+0x4],0x2c
  0009b:    	jne    0x3009c
:00000 init_method reg:14 arg:2 pos:2 req:2 stack_offset:10
:00001 %7 = @p: Plane[IvarId(0)]
  000a1:    	mov    rdi,QWORD PTR [rbp-0x28]
  000a5:    	mov    rax,QWORD PTR [rdi+0x10]
  000a9:    	mov    QWORD PTR [rbp-0x60],rax
:00002 %8 = @n: Plane[IvarId(1)]
  000ad:    	mov    rdi,QWORD PTR [rbp-0x28]
  000b1:    	mov    rax,QWORD PTR [rdi+0x18]
  000b5:    	mov    QWORD PTR [rbp-0x68],rax
:00003 %3 = %7.call vdot(%8; 1)             [Vec]
  000b9:    	mov    rdi,QWORD PTR [rbp-0x60]
  000bd: 00 	test   rdi,0x7
  000c4:    	jne    0x300ab
  000ca:    	cmp    DWORD PTR [rdi+0x4],0x28
  000ce:    	jne    0x300ab
  000d4: 26 	cmp    DWORD PTR [rip+0xfffffffffffde036],0x26        # 0xfffde111
  000db:    	jne    0x300ab
  000e1: 00 	mov    QWORD PTR [rsp-0x20],0x0
  000ea:    	mov    QWORD PTR [rsp-0x38],rcx
  000ef:    	mov    rax,QWORD PTR [rbx]
  000f2:    	lea    rdi,[rsp-0x18]
  000f7:    	mov    QWORD PTR [rdi],rax
  000fa:    	mov    QWORD PTR [rbx],rdi
  000fd:    	mov    rax,QWORD PTR [rbp-0x60]
  00101:    	mov    QWORD PTR [rsp-0x38],rax
  00106: 00 	mov    rdi,0x1
  0010d:    	mov    rax,QWORD PTR [rbp-0x68]
  00111:    	mov    QWORD PTR [rsp-0x40],rax
  00116: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0011f: 05 	movabs rax,0x1000500000042
  00129:    	mov    QWORD PTR [rsp-0x28],rax
  0012e: 34 	movabs r13,0x563439877e20
  00138:    	call   0xfffdee76
  0013d:    	lea    rdi,[rbp-0x8]
  00141:    	mov    QWORD PTR [rbx],rdi
  00144: 34 	movabs r13,0x5634398555a0
  0014e:    	test   rax,rax
  00151:    	je     0xfffdb553
  00157:    	mov    QWORD PTR [rbp-0x40],rax
:00004 
:00006 %3 = neg %3                          [Float]
  0015b:    	mov    rdi,QWORD PTR [rbp-0x40]
  0015f: 00 	test   rdi,0x1
  00166:    	jne    0x300ba
  0016c: 00 	test   rdi,0x2
  00173:    	je     0x1af
  00179:    	xorps  xmm2,xmm2
  0017c: 00 	movabs rax,0x8000000000000002
  00186:    	cmp    rdi,rax
  00189:    	je     0x1c1
  0018f:    	mov    rax,rdi
  00192:    	sar    rax,0x3f
  00196:    	add    rax,0x2
  0019a:    	and    rdi,0xfffffffffffffffc
  0019e:    	or     rdi,rax
  001a1:    	rol    rdi,0x3d
  001a5:    	movq   xmm2,rdi
  001aa:    	jmp    0x1c1
  001af:    	call   0xfffdb5ac
  001b4:    	test   rax,rax
  001b7:    	je     0x300ba
  001bd:    	movq   xmm2,xmm0
  001c1: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1480]        # 0x1648
:00007 %7 = %1.call dir()                   [Ray]
  001c8:    	mov    rdi,QWORD PTR [rbp-0x30]
  001cc: 00 	test   rdi,0x7
  001d3:    	jne    0x300c9
  001d9:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001dd:    	jne    0x300c9
  001e3: 26 	cmp    DWORD PTR [rip+0xfffffffffffddf27],0x26        # 0xfffde111
  001ea:    	jne    0x300c9
  001f0:    	mov    esi,DWORD PTR [rip+0x145e]        # 0x1654
  001f6:    	cmp    esi,0xffffffff
  001f9:    	je     0x300e5
  001ff:    	cmp    WORD PTR [rdi+0x2],0x3
  00204:    	jne    0x21d
  0020a:    	cmp    esi,0x6
  0020d:    	jge    0x21d
  00213:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00218:    	jmp    0x23b
  0021d:    	sub    rsp,0x10
  00221:    	movq   QWORD PTR [rsp],xmm2
  00226: 34 	movabs rax,0x563437ed0590
  00230:    	call   rax
  00232:    	movq   xmm2,QWORD PTR [rsp]
  00237:    	add    rsp,0x10
  0023b:    	mov    QWORD PTR [rbp-0x60],rax
:00008 
:00010 %8 = @n: Plane[IvarId(1)]
  0023f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00243:    	mov    rax,QWORD PTR [rdi+0x18]
  00247:    	mov    QWORD PTR [rbp-0x68],rax
:00011 %4 = %7.call vdot(%8; 1)             [Vec]
  0024b:    	mov    rdi,QWORD PTR [rbp-0x60]
  0024f: 00 	test   rdi,0x7
  00256:    	jne    0x30120
  0025c:    	cmp    DWORD PTR [rdi+0x4],0x28
  00260:    	jne    0x30120
  00266: 26 	cmp    DWORD PTR [rip+0xfffffffffffddea4],0x26        # 0xfffde111
  0026d:    	jne    0x30120
  00273:    	sub    rsp,0x10
  00277:    	movq   QWORD PTR [rsp],xmm2
  0027c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00285:    	mov    QWORD PTR [rsp-0x38],rcx
  0028a:    	mov    rax,QWORD PTR [rbx]
  0028d:    	lea    rdi,[rsp-0x18]
  00292:    	mov    QWORD PTR [rdi],rax
  00295:    	mov    QWORD PTR [rbx],rdi
  00298:    	mov    rax,QWORD PTR [rbp-0x60]
  0029c:    	mov    QWORD PTR [rsp-0x38],rax
  002a1: 00 	mov    rdi,0x1
  002a8:    	mov    rax,QWORD PTR [rbp-0x68]
  002ac:    	mov    QWORD PTR [rsp-0x40],rax
  002b1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  002ba: 05 	movabs rax,0x1000500000042
  002c4:    	mov    QWORD PTR [rsp-0x28],rax
  002c9: 34 	movabs r13,0x563439877e20
  002d3:    	call   0xfffdee76
  002d8:    	lea    rdi,[rbp-0x8]
  002dc:    	mov    QWORD PTR [rbx],rdi
  002df:    	movq   xmm2,QWORD PTR [rsp]
  002e4:    	add    rsp,0x10
  002e8: 34 	movabs r13,0x563439855620
  002f2:    	test   rax,rax
  002f5:    	je     0xfffdb553
  002fb:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %5 = %4
  002ff:    	mov    rax,QWORD PTR [rbp-0x48]
  00303:    	mov    QWORD PTR [rbp-0x50],rax
:00015 %7 = literal[0.0]
  00307: 00 	movq   xmm3,QWORD PTR [rip+0x1349]        # 0x1658
  0030f: 00 	movabs rax,0x8000000000000002
  00319:    	mov    QWORD PTR [rbp-0x60],rax
:00016 _%7 = %4 < %7                        [Float][Float]
:00017 condnotbr _%7 =>:00021
  0031d:    	mov    rdi,QWORD PTR [rbp-0x48]
  00321: 00 	test   rdi,0x1
  00328:    	jne    0x3013c
  0032e: 00 	test   rdi,0x2
  00335:    	je     0x371
  0033b:    	xorps  xmm4,xmm4
  0033e: 00 	movabs rax,0x8000000000000002
  00348:    	cmp    rdi,rax
  0034b:    	je     0x383
  00351:    	mov    rax,rdi
  00354:    	sar    rax,0x3f
  00358:    	add    rax,0x2
  0035c:    	and    rdi,0xfffffffffffffffc
  00360:    	or     rdi,rax
  00363:    	rol    rdi,0x3d
  00367:    	movq   xmm4,rdi
  0036c:    	jmp    0x383
  00371:    	call   0xfffdb5ac
  00376:    	test   rax,rax
  00379:    	je     0x3013c
  0037f:    	movq   xmm4,xmm0
  00383:    	ucomisd xmm4,xmm3
  00387:    	jae    0x30158
:00018 %5 = %4
:00019 %5 = neg %5                          [Float]
  0038d:    	movq   xmm5,xmm4
  00391: 00 	xorps  xmm5,XMMWORD PTR [rip+0x12d0]        # 0x1668
:00020 br =>:00021
  00398:    	jmp    0x3017e
:00021 %7 = literal[1e-17]
  0039d: 00 	movq   xmm3,QWORD PTR [rip+0x12d3]        # 0x1678
  003a5: aa 	movabs rax,0xe33877aa3236a4ba
  003af:    	mov    QWORD PTR [rbp-0x60],rax
:00022 _%7 = %5 < %7                        [Float][Float]
:00023 condnotbr _%7 =>:00027
  003b3:    	mov    rdi,QWORD PTR [rbp-0x50]
  003b7: 00 	test   rdi,0x1
  003be:    	jne    0x301b1
  003c4: 00 	test   rdi,0x2
  003cb:    	je     0x407
  003d1:    	xorps  xmm5,xmm5
  003d4: 00 	movabs rax,0x8000000000000002
  003de:    	cmp    rdi,rax
  003e1:    	je     0x419
  003e7:    	mov    rax,rdi
  003ea:    	sar    rax,0x3f
  003ee:    	add    rax,0x2
  003f2:    	and    rdi,0xfffffffffffffffc
  003f6:    	or     rdi,rax
  003f9:    	rol    rdi,0x3d
  003fd:    	movq   xmm5,rdi
  00402:    	jmp    0x419
  00407:    	call   0xfffdb5ac
  0040c:    	test   rax,rax
  0040f:    	je     0x301b1
  00415:    	movq   xmm5,xmm0
  00419:    	ucomisd xmm5,xmm3
  0041d:    	jae    0x431
:00024 %7 = nil
  00423: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00025 ret %7
  0042b:    	mov    rax,QWORD PTR [rbp-0x60]
  0042f:    	leave  
  00430:    	ret    
:00027 %8 = %1.call org()                   [Ray]
  00431:    	mov    rdi,QWORD PTR [rbp-0x30]
  00435: 00 	test   rdi,0x7
  0043c:    	jne    0x301cd
  00442:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00446:    	jne    0x301cd
  0044c: 26 	cmp    DWORD PTR [rip+0xfffffffffffddcbe],0x26        # 0xfffde111
  00453:    	jne    0x301cd
  00459:    	mov    esi,DWORD PTR [rip+0x1225]        # 0x1684
  0045f:    	cmp    esi,0xffffffff
  00462:    	je     0x301e9
  00468:    	cmp    WORD PTR [rdi+0x2],0x3
  0046d:    	jne    0x486
  00473:    	cmp    esi,0x6
  00476:    	jge    0x486
  0047c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00481:    	jmp    0x4c8
  00486:    	sub    rsp,0x20
  0048a:    	movq   QWORD PTR [rsp],xmm2
  0048f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00495:    	movq   QWORD PTR [rsp+0x10],xmm4
  0049b:    	movq   QWORD PTR [rsp+0x18],xmm5
  004a1: 34 	movabs rax,0x563437ed0590
  004ab:    	call   rax
  004ad:    	movq   xmm2,QWORD PTR [rsp]
  004b2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004b8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004be:    	movq   xmm5,QWORD PTR [rsp+0x18]
  004c4:    	add    rsp,0x20
  004c8:    	mov    QWORD PTR [rbp-0x68],rax
:00028 
:00030 %9 = @n: Plane[IvarId(1)]
  004cc:    	mov    rdi,QWORD PTR [rbp-0x28]
  004d0:    	mov    rax,QWORD PTR [rdi+0x18]
  004d4:    	mov    QWORD PTR [rbp-0x70],rax
:00031 %7 = %8.call vdot(%9; 1)             [Vec]
  004d8:    	mov    rdi,QWORD PTR [rbp-0x68]
  004dc: 00 	test   rdi,0x7
  004e3:    	jne    0x30248
  004e9:    	cmp    DWORD PTR [rdi+0x4],0x28
  004ed:    	jne    0x30248
  004f3: 26 	cmp    DWORD PTR [rip+0xfffffffffffddc17],0x26        # 0xfffde111
  004fa:    	jne    0x30248
  00500:    	sub    rsp,0x20
  00504:    	movq   QWORD PTR [rsp],xmm2
  00509:    	movq   QWORD PTR [rsp+0x8],xmm4
  0050f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00515: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0051e:    	mov    QWORD PTR [rsp-0x38],rcx
  00523:    	mov    rax,QWORD PTR [rbx]
  00526:    	lea    rdi,[rsp-0x18]
  0052b:    	mov    QWORD PTR [rdi],rax
  0052e:    	mov    QWORD PTR [rbx],rdi
  00531:    	mov    rax,QWORD PTR [rbp-0x68]
  00535:    	mov    QWORD PTR [rsp-0x38],rax
  0053a: 00 	mov    rdi,0x1
  00541:    	mov    rax,QWORD PTR [rbp-0x70]
  00545:    	mov    QWORD PTR [rsp-0x40],rax
  0054a: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00553: 05 	movabs rax,0x1000500000042
  0055d:    	mov    QWORD PTR [rsp-0x28],rax
  00562: 34 	movabs r13,0x563439877e20
  0056c:    	call   0xfffdee76
  00571:    	lea    rdi,[rbp-0x8]
  00575:    	mov    QWORD PTR [rbx],rdi
  00578:    	movq   xmm2,QWORD PTR [rsp]
  0057d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00583:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00589:    	add    rsp,0x20
  0058d: 34 	movabs r13,0x563439855760
  00597:    	test   rax,rax
  0059a:    	je     0xfffdb553
  005a0:    	mov    QWORD PTR [rbp-0x60],rax
:00032 
:00034 %7 = %7 + %3                         [Float][Float]
  005a4:    	mov    rdi,QWORD PTR [rbp-0x60]
  005a8: 00 	test   rdi,0x1
  005af:    	jne    0x30264
  005b5: 00 	test   rdi,0x2
  005bc:    	je     0x5f8
  005c2:    	xorps  xmm3,xmm3
  005c5: 00 	movabs rax,0x8000000000000002
  005cf:    	cmp    rdi,rax
  005d2:    	je     0x60a
  005d8:    	mov    rax,rdi
  005db:    	sar    rax,0x3f
  005df:    	add    rax,0x2
  005e3:    	and    rdi,0xfffffffffffffffc
  005e7:    	or     rdi,rax
  005ea:    	rol    rdi,0x3d
  005ee:    	movq   xmm3,rdi
  005f3:    	jmp    0x60a
  005f8:    	call   0xfffdb5ac
  005fd:    	test   rax,rax
  00600:    	je     0x30264
  00606:    	movq   xmm3,xmm0
  0060a:    	addsd  xmm3,xmm2
:00035 %7 = neg %7                          [Float]
  0060e: 00 	xorps  xmm3,XMMWORD PTR [rip+0x1073]        # 0x1688
:00036 %6 = %7 / %4                         [Float][Float]
  00615:    	movq   xmm6,xmm3
  00619:    	movq   rax,xmm4
  0061e:    	test   rax,rax
  00621:    	je     0xfffdb578
  00627:    	divsd  xmm6,xmm4
:00037 %7 = literal[0.0]
  0062b: 00 	movq   xmm3,QWORD PTR [rip+0x1065]        # 0x1698
  00633: 00 	movabs rax,0x8000000000000002
  0063d:    	mov    QWORD PTR [rbp-0x60],rax
:00038 _%7 = %6 > %7                        [Float][Float]
:00039 condnotbr _%7 =>:00106
  00641:    	ucomisd xmm6,xmm3
  00645:    	jbe    0x30eb4
:00040 %7 = %2.call t()                     [Isect]
  0064b:    	mov    rdi,QWORD PTR [rbp-0x38]
  0064f: 00 	test   rdi,0x7
  00656:    	jne    0x30280
  0065c:    	cmp    DWORD PTR [rdi+0x4],0x30
  00660:    	jne    0x30280
  00666: 26 	cmp    DWORD PTR [rip+0xfffffffffffddaa4],0x26        # 0xfffde111
  0066d:    	jne    0x30280
  00673:    	mov    esi,DWORD PTR [rip+0x102b]        # 0x16a4
  00679:    	cmp    esi,0xffffffff
  0067c:    	je     0x302a9
  00682:    	cmp    WORD PTR [rdi+0x2],0x3
  00687:    	jne    0x6a0
  0068d:    	cmp    esi,0x6
  00690:    	jge    0x6a0
  00696:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0069b:    	jmp    0x6e2
  006a0:    	sub    rsp,0x20
  006a4:    	movq   QWORD PTR [rsp],xmm2
  006a9:    	movq   QWORD PTR [rsp+0x8],xmm4
  006af:    	movq   QWORD PTR [rsp+0x10],xmm5
  006b5:    	movq   QWORD PTR [rsp+0x18],xmm6
  006bb: 34 	movabs rax,0x563437ed0590
  006c5:    	call   rax
  006c7:    	movq   xmm2,QWORD PTR [rsp]
  006cc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  006d2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006d8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006de:    	add    rsp,0x20
  006e2:    	mov    QWORD PTR [rbp-0x60],rax
:00041 
:00043 _%7 = %6 < %7                        [Float][Float]
:00044 condnotbr _%7 =>:00106
  006e6:    	mov    rdi,QWORD PTR [rbp-0x60]
  006ea: 00 	test   rdi,0x1
  006f1:    	jne    0x30308
  006f7: 00 	test   rdi,0x2
  006fe:    	je     0x73a
  00704:    	xorps  xmm3,xmm3
  00707: 00 	movabs rax,0x8000000000000002
  00711:    	cmp    rdi,rax
  00714:    	je     0x74c
  0071a:    	mov    rax,rdi
  0071d:    	sar    rax,0x3f
  00721:    	add    rax,0x2
  00725:    	and    rdi,0xfffffffffffffffc
  00729:    	or     rdi,rax
  0072c:    	rol    rdi,0x3d
  00730:    	movq   xmm3,rdi
  00735:    	jmp    0x74c
  0073a:    	call   0xfffdb5ac
  0073f:    	test   rax,rax
  00742:    	je     0x30308
  00748:    	movq   xmm3,xmm0
  0074c:    	ucomisd xmm6,xmm3
  00750:    	jae    0x30ee7
:00045 %7 = literal[true]
  00756: 00 	mov    rax,0x1c
  0075d:    	mov    QWORD PTR [rbp-0x60],rax
:00046 _ = %2.call hit=(%7; 1)              [Isect]
  00761:    	mov    rdi,QWORD PTR [rbp-0x38]
  00765: 00 	test   rdi,0x7
  0076c:    	jne    0x30331
  00772:    	cmp    DWORD PTR [rdi+0x4],0x30
  00776:    	jne    0x30331
  0077c: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd98e],0x26        # 0xfffde111
  00783:    	jne    0x30331
  00789:    	mov    esi,DWORD PTR [rip+0xf1d]        # 0x16ac
  0078f:    	cmp    esi,0xffffffff
  00792:    	je     0x3035a
  00798:    	cmp    WORD PTR [rdi+0x2],0x3
  0079d:    	jne    0x7ba
  007a3:    	cmp    esi,0x6
  007a6:    	jge    0x7ba
  007ac:    	mov    rax,QWORD PTR [rbp-0x60]
  007b0:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  007b5:    	jmp    0x813
  007ba:    	sub    rsp,0x20
  007be:    	movq   QWORD PTR [rsp],xmm2
  007c3:    	movq   QWORD PTR [rsp+0x8],xmm4
  007c9:    	movq   QWORD PTR [rsp+0x10],xmm5
  007cf:    	movq   QWORD PTR [rsp+0x18],xmm6
  007d5:    	mov    rdx,QWORD PTR [rbp-0x60]
  007d9: 34 	movabs rax,0x563437ed0810
  007e3:    	call   rax
  007e5:    	movq   xmm2,QWORD PTR [rsp]
  007ea:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007f0:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007f6:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007fc:    	add    rsp,0x20
  00800: 34 	movabs r13,0x563439855850
  0080a:    	test   rax,rax
  0080d:    	je     0xfffdb553
:00047 
:00049 _ = %2.call t=(%6; 1)                [Isect]
  00813:    	movq   xmm0,xmm6
  00817:    	call   0xfffdb69f
  0081c:    	mov    QWORD PTR [rbp-0x58],rax
  00820:    	mov    rdi,QWORD PTR [rbp-0x38]
  00824: 00 	test   rdi,0x7
  0082b:    	jne    0x303c0
  00831:    	cmp    DWORD PTR [rdi+0x4],0x30
  00835:    	jne    0x303c0
  0083b: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd8cf],0x26        # 0xfffde111
  00842:    	jne    0x303c0
  00848:    	mov    esi,DWORD PTR [rip+0xe66]        # 0x16b4
  0084e:    	cmp    esi,0xffffffff
  00851:    	je     0x303dc
  00857:    	cmp    WORD PTR [rdi+0x2],0x3
  0085c:    	jne    0x879
  00862:    	cmp    esi,0x6
  00865:    	jge    0x879
  0086b:    	mov    rax,QWORD PTR [rbp-0x58]
  0086f:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00874:    	jmp    0x8d2
  00879:    	sub    rsp,0x20
  0087d:    	movq   QWORD PTR [rsp],xmm2
  00882:    	movq   QWORD PTR [rsp+0x8],xmm4
  00888:    	movq   QWORD PTR [rsp+0x10],xmm5
  0088e:    	movq   QWORD PTR [rsp+0x18],xmm6
  00894:    	mov    rdx,QWORD PTR [rbp-0x58]
  00898: 34 	movabs rax,0x563437ed0810
  008a2:    	call   rax
  008a4:    	movq   xmm2,QWORD PTR [rsp]
  008a9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  008af:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008b5:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008bb:    	add    rsp,0x20
  008bf: 34 	movabs r13,0x563439855880
  008c9:    	test   rax,rax
  008cc:    	je     0xfffdb553
:00050 
:00052 %7 = @n: Plane[IvarId(1)]
  008d2:    	mov    rdi,QWORD PTR [rbp-0x28]
  008d6:    	mov    rax,QWORD PTR [rdi+0x18]
  008da:    	mov    QWORD PTR [rbp-0x60],rax
:00053 _ = %2.call n=(%7; 1)                [Isect]
  008de:    	mov    rdi,QWORD PTR [rbp-0x38]
  008e2: 00 	test   rdi,0x7
  008e9:    	jne    0x30442
  008ef:    	cmp    DWORD PTR [rdi+0x4],0x30
  008f3:    	jne    0x30442
  008f9: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd811],0x26        # 0xfffde111
  00900:    	jne    0x30442
  00906:    	mov    esi,DWORD PTR [rip+0xdb0]        # 0x16bc
  0090c:    	cmp    esi,0xffffffff
  0090f:    	je     0x3045e
  00915:    	cmp    WORD PTR [rdi+0x2],0x3
  0091a:    	jne    0x937
  00920:    	cmp    esi,0x6
  00923:    	jge    0x937
  00929:    	mov    rax,QWORD PTR [rbp-0x60]
  0092d:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00932:    	jmp    0x990
  00937:    	sub    rsp,0x20
  0093b:    	movq   QWORD PTR [rsp],xmm2
  00940:    	movq   QWORD PTR [rsp+0x8],xmm4
  00946:    	movq   QWORD PTR [rsp+0x10],xmm5
  0094c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00952:    	mov    rdx,QWORD PTR [rbp-0x60]
  00956: 34 	movabs rax,0x563437ed0810
  00960:    	call   rax
  00962:    	movq   xmm2,QWORD PTR [rsp]
  00967:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0096d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00973:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00979:    	add    rsp,0x20
  0097d: 34 	movabs r13,0x5634398558c0
  00987:    	test   rax,rax
  0098a:    	je     0xfffdb553
:00054 
:00056 %8 = const[Vec]                      [Vec]
  00990: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdd781]        # 0xfffde118
  00997: 00 	cmp    rax,QWORD PTR [rip+0xd3a]        # 0x16d8
  0099e:    	jne    0x304c4
  009a4: 00 	mov    rax,QWORD PTR [rip+0xd1d]        # 0x16c8
  009ab:    	mov    QWORD PTR [rbp-0x68],rax
:00057 %10 = %1.call org()                  [Ray]
  009af:    	mov    rdi,QWORD PTR [rbp-0x30]
  009b3: 00 	test   rdi,0x7
  009ba:    	jne    0x30540
  009c0:    	cmp    DWORD PTR [rdi+0x4],0x2e
  009c4:    	jne    0x30540
  009ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd740],0x26        # 0xfffde111
  009d1:    	jne    0x30540
  009d7:    	mov    esi,DWORD PTR [rip+0xd07]        # 0x16e4
  009dd:    	cmp    esi,0xffffffff
  009e0:    	je     0x3055c
  009e6:    	cmp    WORD PTR [rdi+0x2],0x3
  009eb:    	jne    0xa04
  009f1:    	cmp    esi,0x6
  009f4:    	jge    0xa04
  009fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  009ff:    	jmp    0xa46
  00a04:    	sub    rsp,0x20
  00a08:    	movq   QWORD PTR [rsp],xmm2
  00a0d:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a13:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a19:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a1f: 34 	movabs rax,0x563437ed0590
  00a29:    	call   rax
  00a2b:    	movq   xmm2,QWORD PTR [rsp]
  00a30:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a36:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a3c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a42:    	add    rsp,0x20
  00a46:    	mov    QWORD PTR [rbp-0x78],rax
:00058 
:00060 %9 = %10.call x()                    [Vec]
  00a4a:    	mov    rdi,QWORD PTR [rbp-0x78]
  00a4e: 00 	test   rdi,0x7
  00a55:    	jne    0x305bb
  00a5b:    	cmp    DWORD PTR [rdi+0x4],0x28
  00a5f:    	jne    0x305bb
  00a65: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd6a5],0x26        # 0xfffde111
  00a6c:    	jne    0x305bb
  00a72:    	mov    esi,DWORD PTR [rip+0xc74]        # 0x16ec
  00a78:    	cmp    esi,0xffffffff
  00a7b:    	je     0x305d7
  00a81:    	cmp    WORD PTR [rdi+0x2],0x3
  00a86:    	jne    0xa9f
  00a8c:    	cmp    esi,0x6
  00a8f:    	jge    0xa9f
  00a95:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a9a:    	jmp    0xae1
  00a9f:    	sub    rsp,0x20
  00aa3:    	movq   QWORD PTR [rsp],xmm2
  00aa8:    	movq   QWORD PTR [rsp+0x8],xmm4
  00aae:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ab4:    	movq   QWORD PTR [rsp+0x18],xmm6
  00aba: 34 	movabs rax,0x563437ed0590
  00ac4:    	call   rax
  00ac6:    	movq   xmm2,QWORD PTR [rsp]
  00acb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ad1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ad7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00add:    	add    rsp,0x20
  00ae1:    	mov    QWORD PTR [rbp-0x70],rax
:00061 
:00063 %11 = %1.call dir()                  [Ray]
  00ae5:    	mov    rdi,QWORD PTR [rbp-0x30]
  00ae9: 00 	test   rdi,0x7
  00af0:    	jne    0x30636
  00af6:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00afa:    	jne    0x30636
  00b00: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd60a],0x26        # 0xfffde111
  00b07:    	jne    0x30636
  00b0d:    	mov    esi,DWORD PTR [rip+0xbe1]        # 0x16f4
  00b13:    	cmp    esi,0xffffffff
  00b16:    	je     0x30652
  00b1c:    	cmp    WORD PTR [rdi+0x2],0x3
  00b21:    	jne    0xb3a
  00b27:    	cmp    esi,0x6
  00b2a:    	jge    0xb3a
  00b30:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b35:    	jmp    0xb7c
  00b3a:    	sub    rsp,0x20
  00b3e:    	movq   QWORD PTR [rsp],xmm2
  00b43:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b49:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b4f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b55: 34 	movabs rax,0x563437ed0590
  00b5f:    	call   rax
  00b61:    	movq   xmm2,QWORD PTR [rsp]
  00b66:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b6c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b72:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b78:    	add    rsp,0x20
  00b7c:    	mov    QWORD PTR [rbp-0x80],rax
:00064 
:00066 %10 = %11.call x()                   [Vec]
  00b80:    	mov    rdi,QWORD PTR [rbp-0x80]
  00b84: 00 	test   rdi,0x7
  00b8b:    	jne    0x306b1
  00b91:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b95:    	jne    0x306b1
  00b9b: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd56f],0x26        # 0xfffde111
  00ba2:    	jne    0x306b1
  00ba8:    	mov    esi,DWORD PTR [rip+0xb4e]        # 0x16fc
  00bae:    	cmp    esi,0xffffffff
  00bb1:    	je     0x306cd
  00bb7:    	cmp    WORD PTR [rdi+0x2],0x3
  00bbc:    	jne    0xbd5
  00bc2:    	cmp    esi,0x6
  00bc5:    	jge    0xbd5
  00bcb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00bd0:    	jmp    0xc17
  00bd5:    	sub    rsp,0x20
  00bd9:    	movq   QWORD PTR [rsp],xmm2
  00bde:    	movq   QWORD PTR [rsp+0x8],xmm4
  00be4:    	movq   QWORD PTR [rsp+0x10],xmm5
  00bea:    	movq   QWORD PTR [rsp+0x18],xmm6
  00bf0: 34 	movabs rax,0x563437ed0590
  00bfa:    	call   rax
  00bfc:    	movq   xmm2,QWORD PTR [rsp]
  00c01:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c07:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c0d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c13:    	add    rsp,0x20
  00c17:    	mov    QWORD PTR [rbp-0x78],rax
:00067 
:00069 %10 = %6 * %10                       [Float][Float]
  00c1b:    	mov    rdi,QWORD PTR [rbp-0x78]
  00c1f: 00 	test   rdi,0x1
  00c26:    	jne    0x3072c
  00c2c: 00 	test   rdi,0x2
  00c33:    	je     0xc6f
  00c39:    	xorps  xmm3,xmm3
  00c3c: 00 	movabs rax,0x8000000000000002
  00c46:    	cmp    rdi,rax
  00c49:    	je     0xc81
  00c4f:    	mov    rax,rdi
  00c52:    	sar    rax,0x3f
  00c56:    	add    rax,0x2
  00c5a:    	and    rdi,0xfffffffffffffffc
  00c5e:    	or     rdi,rax
  00c61:    	rol    rdi,0x3d
  00c65:    	movq   xmm3,rdi
  00c6a:    	jmp    0xc81
  00c6f:    	call   0xfffdb5ac
  00c74:    	test   rax,rax
  00c77:    	je     0x3072c
  00c7d:    	movq   xmm3,xmm0
  00c81:    	mulsd  xmm3,xmm6
:00070 %9 = %9 + %10                        [Float][Float]
  00c85:    	mov    rdi,QWORD PTR [rbp-0x70]
  00c89: 00 	test   rdi,0x1
  00c90:    	jne    0x30748
  00c96: 00 	test   rdi,0x2
  00c9d:    	je     0xcd9
  00ca3:    	xorps  xmm7,xmm7
  00ca6: 00 	movabs rax,0x8000000000000002
  00cb0:    	cmp    rdi,rax
  00cb3:    	je     0xceb
  00cb9:    	mov    rax,rdi
  00cbc:    	sar    rax,0x3f
  00cc0:    	add    rax,0x2
  00cc4:    	and    rdi,0xfffffffffffffffc
  00cc8:    	or     rdi,rax
  00ccb:    	rol    rdi,0x3d
  00ccf:    	movq   xmm7,rdi
  00cd4:    	jmp    0xceb
  00cd9:    	call   0xfffdb5ac
  00cde:    	test   rax,rax
  00ce1:    	je     0x30748
  00ce7:    	movq   xmm7,xmm0
  00ceb:    	addsd  xmm7,xmm3
:00071 %11 = %1.call org()                  [Ray]
  00cef:    	mov    rdi,QWORD PTR [rbp-0x30]
  00cf3: 00 	test   rdi,0x7
  00cfa:    	jne    0x30771
  00d00:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00d04:    	jne    0x30771
  00d0a: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd400],0x26        # 0xfffde111
  00d11:    	jne    0x30771
  00d17:    	mov    esi,DWORD PTR [rip+0x9e7]        # 0x1704
  00d1d:    	cmp    esi,0xffffffff
  00d20:    	je     0x307a7
  00d26:    	cmp    WORD PTR [rdi+0x2],0x3
  00d2b:    	jne    0xd44
  00d31:    	cmp    esi,0x6
  00d34:    	jge    0xd44
  00d3a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d3f:    	jmp    0xd9e
  00d44:    	sub    rsp,0x30
  00d48:    	movq   QWORD PTR [rsp],xmm2
  00d4d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d53:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d59:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d5f:    	movq   QWORD PTR [rsp+0x20],xmm6
  00d65:    	movq   QWORD PTR [rsp+0x28],xmm7
  00d6b: 34 	movabs rax,0x563437ed0590
  00d75:    	call   rax
  00d77:    	movq   xmm2,QWORD PTR [rsp]
  00d7c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d82:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d88:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d8e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d94:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d9a:    	add    rsp,0x30
  00d9e:    	mov    QWORD PTR [rbp-0x80],rax
:00072 
:00074 %10 = %11.call y()                   [Vec]
  00da2:    	mov    rdi,QWORD PTR [rbp-0x80]
  00da6: 00 	test   rdi,0x7
  00dad:    	jne    0x3081e
  00db3:    	cmp    DWORD PTR [rdi+0x4],0x28
  00db7:    	jne    0x3081e
  00dbd: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd34d],0x26        # 0xfffde111
  00dc4:    	jne    0x3081e
  00dca:    	mov    esi,DWORD PTR [rip+0x93c]        # 0x170c
  00dd0:    	cmp    esi,0xffffffff
  00dd3:    	je     0x30847
  00dd9:    	cmp    WORD PTR [rdi+0x2],0x3
  00dde:    	jne    0xdf7
  00de4:    	cmp    esi,0x6
  00de7:    	jge    0xdf7
  00ded:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00df2:    	jmp    0xe45
  00df7:    	sub    rsp,0x30
  00dfb:    	movq   QWORD PTR [rsp],xmm2
  00e00:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e06:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e0c:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e12:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e18: 34 	movabs rax,0x563437ed0590
  00e22:    	call   rax
  00e24:    	movq   xmm2,QWORD PTR [rsp]
  00e29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e2f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e35:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e3b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e41:    	add    rsp,0x30
  00e45:    	mov    QWORD PTR [rbp-0x78],rax
:00075 
:00077 %12 = %1.call dir()                  [Ray]
  00e49:    	mov    rdi,QWORD PTR [rbp-0x30]
  00e4d: 00 	test   rdi,0x7
  00e54:    	jne    0x308b2
  00e5a:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00e5e:    	jne    0x308b2
  00e64: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd2a6],0x26        # 0xfffde111
  00e6b:    	jne    0x308b2
  00e71:    	mov    esi,DWORD PTR [rip+0x89d]        # 0x1714
  00e77:    	cmp    esi,0xffffffff
  00e7a:    	je     0x308db
  00e80:    	cmp    WORD PTR [rdi+0x2],0x3
  00e85:    	jne    0xe9e
  00e8b:    	cmp    esi,0x6
  00e8e:    	jge    0xe9e
  00e94:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e99:    	jmp    0xeec
  00e9e:    	sub    rsp,0x30
  00ea2:    	movq   QWORD PTR [rsp],xmm2
  00ea7:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ead:    	movq   QWORD PTR [rsp+0x10],xmm5
  00eb3:    	movq   QWORD PTR [rsp+0x18],xmm6
  00eb9:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ebf: 34 	movabs rax,0x563437ed0590
  00ec9:    	call   rax
  00ecb:    	movq   xmm2,QWORD PTR [rsp]
  00ed0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ed6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00edc:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ee2:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00ee8:    	add    rsp,0x30
  00eec: ff 	mov    QWORD PTR [rbp-0x88],rax
:00078 
:00080 %11 = %12.call y()                   [Vec]
  00ef3: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00efa: 00 	test   rdi,0x7
  00f01:    	jne    0x30946
  00f07:    	cmp    DWORD PTR [rdi+0x4],0x28
  00f0b:    	jne    0x30946
  00f11: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd1f9],0x26        # 0xfffde111
  00f18:    	jne    0x30946
  00f1e:    	mov    esi,DWORD PTR [rip+0x7f8]        # 0x171c
  00f24:    	cmp    esi,0xffffffff
  00f27:    	je     0x3096f
  00f2d:    	cmp    WORD PTR [rdi+0x2],0x3
  00f32:    	jne    0xf4b
  00f38:    	cmp    esi,0x6
  00f3b:    	jge    0xf4b
  00f41:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f46:    	jmp    0xf99
  00f4b:    	sub    rsp,0x30
  00f4f:    	movq   QWORD PTR [rsp],xmm2
  00f54:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f5a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f60:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f66:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f6c: 34 	movabs rax,0x563437ed0590
  00f76:    	call   rax
  00f78:    	movq   xmm2,QWORD PTR [rsp]
  00f7d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f83:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f89:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f8f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00f95:    	add    rsp,0x30
  00f99:    	mov    QWORD PTR [rbp-0x80],rax
:00081 
:00083 %11 = %6 * %11                       [Float][Float]
  00f9d:    	mov    rdi,QWORD PTR [rbp-0x80]
  00fa1: 00 	test   rdi,0x1
  00fa8:    	jne    0x309da
  00fae: 00 	test   rdi,0x2
  00fb5:    	je     0xff1
  00fbb:    	xorps  xmm3,xmm3
  00fbe: 00 	movabs rax,0x8000000000000002
  00fc8:    	cmp    rdi,rax
  00fcb:    	je     0x1003
  00fd1:    	mov    rax,rdi
  00fd4:    	sar    rax,0x3f
  00fd8:    	add    rax,0x2
  00fdc:    	and    rdi,0xfffffffffffffffc
  00fe0:    	or     rdi,rax
  00fe3:    	rol    rdi,0x3d
  00fe7:    	movq   xmm3,rdi
  00fec:    	jmp    0x1003
  00ff1:    	call   0xfffdb5ac
  00ff6:    	test   rax,rax
  00ff9:    	je     0x309da
  00fff:    	movq   xmm3,xmm0
  01003:    	mulsd  xmm3,xmm6
:00084 %10 = %10 + %11                      [Float][Float]
  01007:    	mov    rdi,QWORD PTR [rbp-0x78]
  0100b: 00 	test   rdi,0x1
  01012:    	jne    0x30a03
  01018: 00 	test   rdi,0x2
  0101f:    	je     0x105c
  01025:    	xorps  xmm8,xmm8
  01029: 00 	movabs rax,0x8000000000000002
  01033:    	cmp    rdi,rax
  01036:    	je     0x106f
  0103c:    	mov    rax,rdi
  0103f:    	sar    rax,0x3f
  01043:    	add    rax,0x2
  01047:    	and    rdi,0xfffffffffffffffc
  0104b:    	or     rdi,rax
  0104e:    	rol    rdi,0x3d
  01052:    	movq   xmm8,rdi
  01057:    	jmp    0x106f
  0105c:    	call   0xfffdb5ac
  01061:    	test   rax,rax
  01064:    	je     0x30a03
  0106a:    	movq   xmm8,xmm0
  0106f:    	addsd  xmm8,xmm3
:00085 %12 = %1.call org()                  [Ray]
  01074:    	mov    rdi,QWORD PTR [rbp-0x30]
  01078: 00 	test   rdi,0x7
  0107f:    	jne    0x30a39
  01085:    	cmp    DWORD PTR [rdi+0x4],0x2e
  01089:    	jne    0x30a39
  0108f: 26 	cmp    DWORD PTR [rip+0xfffffffffffdd07b],0x26        # 0xfffde111
  01096:    	jne    0x30a39
  0109c:    	mov    esi,DWORD PTR [rip+0x682]        # 0x1724
  010a2:    	cmp    esi,0xffffffff
  010a5:    	je     0x30a7d
  010ab:    	cmp    WORD PTR [rdi+0x2],0x3
  010b0:    	jne    0x10c9
  010b6:    	cmp    esi,0x6
  010b9:    	jge    0x10c9
  010bf:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  010c4:    	jmp    0x1131
  010c9:    	sub    rsp,0x40
  010cd:    	movq   QWORD PTR [rsp],xmm2
  010d2:    	movq   QWORD PTR [rsp+0x8],xmm3
  010d8:    	movq   QWORD PTR [rsp+0x10],xmm4
  010de:    	movq   QWORD PTR [rsp+0x18],xmm5
  010e4:    	movq   QWORD PTR [rsp+0x20],xmm6
  010ea:    	movq   QWORD PTR [rsp+0x28],xmm7
  010f0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  010f7: 34 	movabs rax,0x563437ed0590
  01101:    	call   rax
  01103:    	movq   xmm2,QWORD PTR [rsp]
  01108:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0110e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01114:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0111a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01120:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01126: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0112d:    	add    rsp,0x40
  01131: ff 	mov    QWORD PTR [rbp-0x88],rax
:00086 
:00088 %11 = %12.call z()                   [Vec]
  01138: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0113f: 00 	test   rdi,0x7
  01146:    	jne    0x30b02
  0114c:    	cmp    DWORD PTR [rdi+0x4],0x28
  01150:    	jne    0x30b02
  01156: 26 	cmp    DWORD PTR [rip+0xfffffffffffdcfb4],0x26        # 0xfffde111
  0115d:    	jne    0x30b02
  01163:    	mov    esi,DWORD PTR [rip+0x5c3]        # 0x172c
  01169:    	cmp    esi,0xffffffff
  0116c:    	je     0x30b39
  01172:    	cmp    WORD PTR [rdi+0x2],0x3
  01177:    	jne    0x1190
  0117d:    	cmp    esi,0x6
  01180:    	jge    0x1190
  01186:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0118b:    	jmp    0x11ec
  01190:    	sub    rsp,0x30
  01194:    	movq   QWORD PTR [rsp],xmm2
  01199:    	movq   QWORD PTR [rsp+0x8],xmm4
  0119f:    	movq   QWORD PTR [rsp+0x10],xmm5
  011a5:    	movq   QWORD PTR [rsp+0x18],xmm6
  011ab:    	movq   QWORD PTR [rsp+0x20],xmm7
  011b1: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  011b8: 34 	movabs rax,0x563437ed0590
  011c2:    	call   rax
  011c4:    	movq   xmm2,QWORD PTR [rsp]
  011c9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011cf:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011d5:    	movq   xmm6,QWORD PTR [rsp+0x18]
  011db:    	movq   xmm7,QWORD PTR [rsp+0x20]
  011e1: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  011e8:    	add    rsp,0x30
  011ec:    	mov    QWORD PTR [rbp-0x80],rax
:00089 
:00091 %13 = %1.call dir()                  [Ray]
  011f0:    	mov    rdi,QWORD PTR [rbp-0x30]
  011f4: 00 	test   rdi,0x7
  011fb:    	jne    0x30bb2
  01201:    	cmp    DWORD PTR [rdi+0x4],0x2e
  01205:    	jne    0x30bb2
  0120b: 26 	cmp    DWORD PTR [rip+0xfffffffffffdceff],0x26        # 0xfffde111
  01212:    	jne    0x30bb2
  01218:    	mov    esi,DWORD PTR [rip+0x516]        # 0x1734
  0121e:    	cmp    esi,0xffffffff
  01221:    	je     0x30be9
  01227:    	cmp    WORD PTR [rdi+0x2],0x3
  0122c:    	jne    0x1245
  01232:    	cmp    esi,0x6
  01235:    	jge    0x1245
  0123b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01240:    	jmp    0x12a1
  01245:    	sub    rsp,0x30
  01249:    	movq   QWORD PTR [rsp],xmm2
  0124e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01254:    	movq   QWORD PTR [rsp+0x10],xmm5
  0125a:    	movq   QWORD PTR [rsp+0x18],xmm6
  01260:    	movq   QWORD PTR [rsp+0x20],xmm7
  01266: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0126d: 34 	movabs rax,0x563437ed0590
  01277:    	call   rax
  01279:    	movq   xmm2,QWORD PTR [rsp]
  0127e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01284:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0128a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01290:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01296: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0129d:    	add    rsp,0x30
  012a1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 
:00094 %12 = %13.call z()                   [Vec]
  012a8: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  012af: 00 	test   rdi,0x7
  012b6:    	jne    0x30c62
  012bc:    	cmp    DWORD PTR [rdi+0x4],0x28
  012c0:    	jne    0x30c62
  012c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffdce44],0x26        # 0xfffde111
  012cd:    	jne    0x30c62
  012d3:    	mov    esi,DWORD PTR [rip+0x463]        # 0x173c
  012d9:    	cmp    esi,0xffffffff
  012dc:    	je     0x30c99
  012e2:    	cmp    WORD PTR [rdi+0x2],0x3
  012e7:    	jne    0x1300
  012ed:    	cmp    esi,0x6
  012f0:    	jge    0x1300
  012f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  012fb:    	jmp    0x135c
  01300:    	sub    rsp,0x30
  01304:    	movq   QWORD PTR [rsp],xmm2
  01309:    	movq   QWORD PTR [rsp+0x8],xmm4
  0130f:    	movq   QWORD PTR [rsp+0x10],xmm5
  01315:    	movq   QWORD PTR [rsp+0x18],xmm6
  0131b:    	movq   QWORD PTR [rsp+0x20],xmm7
  01321: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01328: 34 	movabs rax,0x563437ed0590
  01332:    	call   rax
  01334:    	movq   xmm2,QWORD PTR [rsp]
  01339:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0133f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01345:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0134b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01351: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01358:    	add    rsp,0x30
  0135c: ff 	mov    QWORD PTR [rbp-0x88],rax
:00095 
:00097 %12 = %6 * %12                       [Float][Float]
  01363: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0136a: 00 	test   rdi,0x1
  01371:    	jne    0x30d12
  01377: 00 	test   rdi,0x2
  0137e:    	je     0x13ba
  01384:    	xorps  xmm3,xmm3
  01387: 00 	movabs rax,0x8000000000000002
  01391:    	cmp    rdi,rax
  01394:    	je     0x13cc
  0139a:    	mov    rax,rdi
  0139d:    	sar    rax,0x3f
  013a1:    	add    rax,0x2
  013a5:    	and    rdi,0xfffffffffffffffc
  013a9:    	or     rdi,rax
  013ac:    	rol    rdi,0x3d
  013b0:    	movq   xmm3,rdi
  013b5:    	jmp    0x13cc
  013ba:    	call   0xfffdb5ac
  013bf:    	test   rax,rax
  013c2:    	je     0x30d12
  013c8:    	movq   xmm3,xmm0
  013cc:    	mulsd  xmm3,xmm6
:00098 %11 = %11 + %12                      [Float][Float]
  013d0:    	mov    rdi,QWORD PTR [rbp-0x80]
  013d4: 00 	test   rdi,0x1
  013db:    	jne    0x30d49
  013e1: 00 	test   rdi,0x2
  013e8:    	je     0x1425
  013ee:    	xorps  xmm9,xmm9
  013f2: 00 	movabs rax,0x8000000000000002
  013fc:    	cmp    rdi,rax
  013ff:    	je     0x1438
  01405:    	mov    rax,rdi
  01408:    	sar    rax,0x3f
  0140c:    	add    rax,0x2
  01410:    	and    rdi,0xfffffffffffffffc
  01414:    	or     rdi,rax
  01417:    	rol    rdi,0x3d
  0141b:    	movq   xmm9,rdi
  01420:    	jmp    0x1438
  01425:    	call   0xfffdb5ac
  0142a:    	test   rax,rax
  0142d:    	je     0x30d49
  01433:    	movq   xmm9,xmm0
  01438:    	addsd  xmm9,xmm3
:00099 %7 = %8.call new(%9; 3)              [#<Class:Vec>]
  0143d:    	movq   xmm0,xmm7
  01441:    	call   0xfffdb69f
  01446:    	mov    QWORD PTR [rbp-0x70],rax
  0144a:    	movq   xmm0,xmm8
  0144f:    	call   0xfffdb69f
  01454:    	mov    QWORD PTR [rbp-0x78],rax
  01458:    	movq   xmm0,xmm9
  0145d:    	call   0xfffdb69f
  01462:    	mov    QWORD PTR [rbp-0x80],rax
  01466:    	mov    rdi,QWORD PTR [rbp-0x68]
  0146a: 00 	test   rdi,0x7
  01471:    	jne    0x30d90
  01477:    	cmp    DWORD PTR [rdi+0x4],0x29
  0147b:    	jne    0x30d90
  01481: 26 	cmp    DWORD PTR [rip+0xfffffffffffdcc89],0x26        # 0xfffde111
  01488:    	jne    0x30d90
  0148e: 00 	mov    r9,0x0
  01495:    	sub    rsp,0x40
  01499:    	movq   QWORD PTR [rsp],xmm2
  0149e:    	movq   QWORD PTR [rsp+0x8],xmm3
  014a4:    	movq   QWORD PTR [rsp+0x10],xmm4
  014aa:    	movq   QWORD PTR [rsp+0x18],xmm5
  014b0:    	movq   QWORD PTR [rsp+0x20],xmm6
  014b6:    	movq   QWORD PTR [rsp+0x28],xmm7
  014bc: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014c3: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014ca:    	mov    rdx,rdi
  014cd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014d6:    	mov    QWORD PTR [rsp-0x38],rcx
  014db:    	mov    rax,QWORD PTR [rbx]
  014de:    	lea    rdi,[rsp-0x18]
  014e3:    	mov    QWORD PTR [rdi],rax
  014e6:    	mov    QWORD PTR [rbx],rdi
  014e9:    	lea    rcx,[rbp-0x70]
  014ed: 00 	mov    r8,0x3
  014f4:    	call   0x30dbc
  014f9:    	lea    rdi,[rbp-0x8]
  014fd:    	mov    QWORD PTR [rbx],rdi
  01500:    	movq   xmm2,QWORD PTR [rsp]
  01505:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0150b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01511:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01517:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0151d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01523: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0152a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01531:    	add    rsp,0x40
  01535: 34 	movabs r13,0x563439855ba0
  0153f:    	test   rax,rax
  01542:    	je     0xfffdb553
  01548:    	mov    QWORD PTR [rbp-0x60],rax
:00100 
:00102 _ = %2.call pl=(%7; 1)               [Isect]
  0154c:    	mov    rdi,QWORD PTR [rbp-0x38]
  01550: 00 	test   rdi,0x7
  01557:    	jne    0x30dee
  0155d:    	cmp    DWORD PTR [rdi+0x4],0x30
  01561:    	jne    0x30dee
  01567: 26 	cmp    DWORD PTR [rip+0xfffffffffffdcba3],0x26        # 0xfffde111
  0156e:    	jne    0x30dee
  01574:    	mov    esi,DWORD PTR [rip+0x1ca]        # 0x1744
  0157a:    	cmp    esi,0xffffffff
  0157d:    	je     0x30e1a
  01583:    	cmp    WORD PTR [rdi+0x2],0x3
  01588:    	jne    0x15a5
  0158e:    	cmp    esi,0x6
  01591:    	jge    0x15a5
  01597:    	mov    rax,QWORD PTR [rbp-0x60]
  0159b:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  015a0:    	jmp    0x1632
  015a5:    	sub    rsp,0x40
  015a9:    	movq   QWORD PTR [rsp],xmm2
  015ae:    	movq   QWORD PTR [rsp+0x8],xmm3
  015b4:    	movq   QWORD PTR [rsp+0x10],xmm4
  015ba:    	movq   QWORD PTR [rsp+0x18],xmm5
  015c0:    	movq   QWORD PTR [rsp+0x20],xmm6
  015c6:    	movq   QWORD PTR [rsp+0x28],xmm7
  015cc: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  015d3: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  015da:    	mov    rdx,QWORD PTR [rbp-0x60]
  015de: 34 	movabs rax,0x563437ed0810
  015e8:    	call   rax
  015ea:    	movq   xmm2,QWORD PTR [rsp]
  015ef:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015f5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015fb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01601:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01607:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0160d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01614: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0161b:    	add    rsp,0x40
  0161f: 34 	movabs r13,0x563439855bd0
  01629:    	test   rax,rax
  0162c:    	je     0xfffdb553
:00103 
:00105 br =>:00106
  01632:    	jmp    0x30f1a
:00106 %7 = nil
  01637: 00 	mov    QWORD PTR [rbp-0x60],0x4
:00107 ret %7
  0163f:    	mov    rax,QWORD PTR [rbp-0x60]
  01643:    	leave  
  01644:    	ret    
==> start whole compile: <unnamed> FuncId(83) self_class:Scene start:[00000] bytecode:0x56343987e6a0
<== finished compile. elapsed:182.2µs
offset:Pos(156208) code: 8981 bytes  data: 355 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xd0
  0000e:    	cmp    edx,0x1
  00011:    	je     0x73
  00017:    	jl     0x22
  0001d:    	jmp    0x73
  00022:    	mov    eax,0x1
  00027:    	sub    eax,edx
  00029:    	test   rax,rax
  0002c:    	je     0x48
  00032:    	lea    rdi,[rbp-0x38]
  00036: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  0003e:    	sub    rax,0x1
  00042:    	jne    0x36
  00048:    	mov    edx,0x1
  0004d:    	mov    eax,0x1
  00052:    	sub    eax,edx
  00054:    	test   rax,rax
  00057:    	je     0x73
  0005d:    	lea    rdi,[rbp-0x38]
  00061: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00069:    	sub    rax,0x1
  0006d:    	jne    0x61
  00073: 00 	mov    rax,0x4
  0007a:    	mov    QWORD PTR [rbp-0x38],rax
  0007e:    	mov    QWORD PTR [rbp-0x40],rax
  00082:    	mov    QWORD PTR [rbp-0x48],rax
  00086:    	mov    QWORD PTR [rbp-0x50],rax
  0008a:    	mov    QWORD PTR [rbp-0x58],rax
  0008e:    	mov    QWORD PTR [rbp-0x60],rax
  00092:    	mov    QWORD PTR [rbp-0x68],rax
  00096:    	mov    QWORD PTR [rbp-0x70],rax
  0009a:    	mov    QWORD PTR [rbp-0x78],rax
  0009e:    	mov    QWORD PTR [rbp-0x80],rax
  000a2: ff 	mov    QWORD PTR [rbp-0x88],rax
  000a9: ff 	mov    QWORD PTR [rbp-0x90],rax
  000b0: ff 	mov    QWORD PTR [rbp-0x98],rax
  000b7: ff 	mov    QWORD PTR [rbp-0xa0],rax
  000be: ff 	mov    QWORD PTR [rbp-0xa8],rax
  000c5: ff 	mov    QWORD PTR [rbp-0xb0],rax
  000cc: ff 	mov    QWORD PTR [rbp-0xb8],rax
  000d3: ff 	mov    QWORD PTR [rbp-0xc0],rax
  000da:    	mov    rdi,QWORD PTR [rbp-0x28]
  000de: 00 	test   rdi,0x7
  000e5:    	jne    0x2f817
  000eb:    	cmp    DWORD PTR [rdi+0x4],0x32
  000ef:    	jne    0x2f817
:00000 init_block reg:20 arg:1 pos:1 req:1 stack_offset:13
:00001 %14 = dynvar(4, %4)
  000f5:    	mov    rax,QWORD PTR [rbp-0x10]
  000f9:    	mov    rax,QWORD PTR [rax]
  000fc:    	mov    rax,QWORD PTR [rax]
  000ff:    	mov    rax,QWORD PTR [rax]
  00102:    	mov    rax,QWORD PTR [rax-0x38]
  00106: ff 	mov    QWORD PTR [rbp-0x98],rax
:00002 %14 = %14 + 1: i16                   [Integer][Integer]
  0010d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00114: 00 	test   rdi,0x1
  0011b:    	je     0x2f826
  00121:    	add    rdi,0x2
  00125:    	jo     0x2f826
  0012b: ff 	mov    QWORD PTR [rbp-0x98],rdi
:00003 dynvar(4, %4) = %14
  00132:    	mov    rax,QWORD PTR [rbp-0x10]
  00136:    	mov    rax,QWORD PTR [rax]
  00139:    	mov    rax,QWORD PTR [rax]
  0013c:    	mov    rax,QWORD PTR [rax]
  0013f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00146:    	mov    QWORD PTR [rax-0x38],rdi
:00004 %14 = dynvar(4, %1)
  0014a:    	mov    rax,QWORD PTR [rbp-0x10]
  0014e:    	mov    rax,QWORD PTR [rax]
  00151:    	mov    rax,QWORD PTR [rax]
  00154:    	mov    rax,QWORD PTR [rax]
  00157:    	mov    rax,QWORD PTR [rax-0x20]
  0015b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00005 %2 = %14.call to_f()                 [Integer]
  00162: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00169: 00 	test   rdi,0x1
  00170:    	je     0x2f835
  00176: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc84c],0x26        # 0xfffdc9c9
  0017d:    	jne    0x2f835
  00183:    	sar    rdi,1
  00186:    	cvtsi2sd xmm2,rdi
:00006 
:00008 %14 = dynvar(4, %2)
  0018b:    	mov    rax,QWORD PTR [rbp-0x10]
  0018f:    	mov    rax,QWORD PTR [rax]
  00192:    	mov    rax,QWORD PTR [rax]
  00195:    	mov    rax,QWORD PTR [rax]
  00198:    	mov    rax,QWORD PTR [rax-0x28]
  0019c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00009 %3 = %14.call to_f()                 [Integer]
  001a3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001aa: 00 	test   rdi,0x1
  001b1:    	je     0x2f844
  001b7: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc80b],0x26        # 0xfffdc9c9
  001be:    	jne    0x2f844
  001c4:    	sar    rdi,1
  001c7:    	cvtsi2sd xmm3,rdi
:00010 
:00012 %14 = dynvar(2, %1)
  001cc:    	mov    rax,QWORD PTR [rbp-0x10]
  001d0:    	mov    rax,QWORD PTR [rax]
  001d3:    	mov    rax,QWORD PTR [rax-0x20]
  001d7: ff 	mov    QWORD PTR [rbp-0x98],rax
:00013 %4 = %14.call to_f()                 [Integer]
  001de: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  001e5: 00 	test   rdi,0x1
  001ec:    	je     0x2f860
  001f2: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc7d0],0x26        # 0xfffdc9c9
  001f9:    	jne    0x2f860
  001ff:    	sar    rdi,1
  00202:    	cvtsi2sd xmm4,rdi
:00014 
:00016 %14 = dynvar(3, %1)
  00207:    	mov    rax,QWORD PTR [rbp-0x10]
  0020b:    	mov    rax,QWORD PTR [rax]
  0020e:    	mov    rax,QWORD PTR [rax]
  00211:    	mov    rax,QWORD PTR [rax-0x20]
  00215: ff 	mov    QWORD PTR [rbp-0x98],rax
:00017 %5 = %14.call to_f()                 [Integer]
  0021c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00223: 00 	test   rdi,0x1
  0022a:    	je     0x2f889
  00230: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc792],0x26        # 0xfffdc9c9
  00237:    	jne    0x2f889
  0023d:    	sar    rdi,1
  00240:    	cvtsi2sd xmm5,rdi
:00018 
:00020 %6 = %1.call to_f()                  [Integer]
  00245:    	mov    rdi,QWORD PTR [rbp-0x30]
  00249: 00 	test   rdi,0x1
  00250:    	je     0x2f8bf
  00256: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc76c],0x26        # 0xfffdc9c9
  0025d:    	jne    0x2f8bf
  00263:    	sar    rdi,1
  00266:    	cvtsi2sd xmm6,rdi
:00021 
:00023 %14 = dynvar(1, %1)
  0026b:    	mov    rax,QWORD PTR [rbp-0x10]
  0026f:    	mov    rax,QWORD PTR [rax-0x20]
  00273: ff 	mov    QWORD PTR [rbp-0x98],rax
:00024 %7 = %14.call to_f()                 [Integer]
  0027a: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00281: 00 	test   rdi,0x1
  00288:    	je     0x2f902
  0028e: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc734],0x26        # 0xfffdc9c9
  00295:    	jne    0x2f902
  0029b:    	sar    rdi,1
  0029e:    	cvtsi2sd xmm7,rdi
:00025 
:00027 %14 = dynvar(4, %5)
  002a3:    	mov    rax,QWORD PTR [rbp-0x10]
  002a7:    	mov    rax,QWORD PTR [rax]
  002aa:    	mov    rax,QWORD PTR [rax]
  002ad:    	mov    rax,QWORD PTR [rax]
  002b0:    	mov    rax,QWORD PTR [rax-0x40]
  002b4: ff 	mov    QWORD PTR [rbp-0x98],rax
:00028 %14 = %6 / %14                       [Float][Float]
  002bb: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002c2: 00 	test   rdi,0x1
  002c9:    	jne    0x2f952
  002cf: 00 	test   rdi,0x2
  002d6:    	je     0x313
  002dc:    	xorps  xmm8,xmm8
  002e0: 00 	movabs rax,0x8000000000000002
  002ea:    	cmp    rdi,rax
  002ed:    	je     0x326
  002f3:    	mov    rax,rdi
  002f6:    	sar    rax,0x3f
  002fa:    	add    rax,0x2
  002fe:    	and    rdi,0xfffffffffffffffc
  00302:    	or     rdi,rax
  00305:    	rol    rdi,0x3d
  00309:    	movq   xmm8,rdi
  0030e:    	jmp    0x326
  00313:    	call   0xfffd9e64
  00318:    	test   rax,rax
  0031b:    	je     0x2f952
  00321:    	movq   xmm8,xmm0
  00326:    	movq   rax,xmm8
  0032b:    	test   rax,rax
  0032e:    	je     0xfffd9e30
  00334:    	movq   xmm0,xmm6
  00338:    	divsd  xmm0,xmm8
  0033d:    	movq   xmm8,xmm0
:00029 %14 = %4 + %14                       [Float][Float]
  00342:    	addsd  xmm8,xmm4
:00030 %15 = literal[2.0]
  00347: 1f 	movq   xmm9,QWORD PTR [rip+0x1fd0]        # 0x2320
  00350: 00 	mov    rax,0x2
  00357: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00031 %15 = %2 / %15                       [Float][Float]
  0035e:    	movq   rax,xmm9
  00363:    	test   rax,rax
  00366:    	je     0xfffd9e30
  0036c:    	movq   xmm0,xmm2
  00370:    	divsd  xmm0,xmm9
  00375:    	movq   xmm9,xmm0
:00032 %14 = %14 - %15                      [Float][Float]
  0037a:    	subsd  xmm8,xmm9
:00033 %15 = literal[2.0]
  0037f: 1f 	movq   xmm9,QWORD PTR [rip+0x1fa8]        # 0x2330
  00388: 00 	mov    rax,0x2
  0038f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00034 %15 = %2 / %15                       [Float][Float]
  00396:    	movq   rax,xmm9
  0039b:    	test   rax,rax
  0039e:    	je     0xfffd9e30
  003a4:    	movq   xmm0,xmm2
  003a8:    	divsd  xmm0,xmm9
  003ad:    	movq   xmm9,xmm0
:00035 %8 = %14 / %15                       [Float][Float]
  003b2:    	movq   xmm10,xmm8
  003b7:    	movq   rax,xmm9
  003bc:    	test   rax,rax
  003bf:    	je     0xfffd9e30
  003c5:    	divsd  xmm10,xmm9
:00036 %14 = dynvar(4, %5)
  003ca:    	mov    rax,QWORD PTR [rbp-0x10]
  003ce:    	mov    rax,QWORD PTR [rax]
  003d1:    	mov    rax,QWORD PTR [rax]
  003d4:    	mov    rax,QWORD PTR [rax]
  003d7:    	mov    rax,QWORD PTR [rax-0x40]
  003db: ff 	mov    QWORD PTR [rbp-0x98],rax
:00037 %14 = %7 / %14                       [Float][Float]
  003e2: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003e9: 00 	test   rdi,0x1
  003f0:    	jne    0x2f9af
  003f6: 00 	test   rdi,0x2
  003fd:    	je     0x43a
  00403:    	xorps  xmm8,xmm8
  00407: 00 	movabs rax,0x8000000000000002
  00411:    	cmp    rdi,rax
  00414:    	je     0x44d
  0041a:    	mov    rax,rdi
  0041d:    	sar    rax,0x3f
  00421:    	add    rax,0x2
  00425:    	and    rdi,0xfffffffffffffffc
  00429:    	or     rdi,rax
  0042c:    	rol    rdi,0x3d
  00430:    	movq   xmm8,rdi
  00435:    	jmp    0x44d
  0043a:    	call   0xfffd9e64
  0043f:    	test   rax,rax
  00442:    	je     0x2f9af
  00448:    	movq   xmm8,xmm0
  0044d:    	movq   rax,xmm8
  00452:    	test   rax,rax
  00455:    	je     0xfffd9e30
  0045b:    	movq   xmm0,xmm7
  0045f:    	divsd  xmm0,xmm8
  00464:    	movq   xmm8,xmm0
:00038 %14 = %5 + %14                       [Float][Float]
  00469:    	addsd  xmm8,xmm5
:00039 %15 = literal[2.0]
  0046e: 1e 	movq   xmm9,QWORD PTR [rip+0x1ec9]        # 0x2340
  00477: 00 	mov    rax,0x2
  0047e: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00040 %15 = %3 / %15                       [Float][Float]
  00485:    	movq   rax,xmm9
  0048a:    	test   rax,rax
  0048d:    	je     0xfffd9e30
  00493:    	movq   xmm0,xmm3
  00497:    	divsd  xmm0,xmm9
  0049c:    	movq   xmm9,xmm0
:00041 %14 = %14 - %15                      [Float][Float]
  004a1:    	subsd  xmm8,xmm9
:00042 %14 = neg %14                        [Float]
  004a6: 00 	xorps  xmm8,XMMWORD PTR [rip+0x1ea2]        # 0x2350
:00043 %15 = literal[2.0]
  004ae: 1e 	movq   xmm9,QWORD PTR [rip+0x1ea9]        # 0x2360
  004b7: 00 	mov    rax,0x2
  004be: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00044 %15 = %3 / %15                       [Float][Float]
  004c5:    	movq   rax,xmm9
  004ca:    	test   rax,rax
  004cd:    	je     0xfffd9e30
  004d3:    	movq   xmm0,xmm3
  004d7:    	divsd  xmm0,xmm9
  004dc:    	movq   xmm9,xmm0
:00045 %9 = %14 / %15                       [Float][Float]
  004e1:    	movq   xmm11,xmm8
  004e6:    	movq   rax,xmm9
  004eb:    	test   rax,rax
  004ee:    	je     0xfffd9e30
  004f4:    	divsd  xmm11,xmm9
:00046 %15 = const[Vec]                     [Vec]
  004f9: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdc4d0]        # 0xfffdc9d0
  00500: 00 	cmp    rax,QWORD PTR [rip+0x1e79]        # 0x2380
  00507:    	jne    0x2fa2b
  0050d: 00 	mov    rax,QWORD PTR [rip+0x1e5c]        # 0x2370
  00514: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00047 %16 = %8
:00048 %17 = %9
:00049 %18 = literal[-1.0]
  0051b: 1e 	movq   xmm9,QWORD PTR [rip+0x1e6c]        # 0x2390
  00524: 00 	movabs rax,0xff80000000000006
  0052e: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00050 %14 = %15.call new(%16; 3)           [#<Class:Vec>]
  00535:    	movq   xmm0,xmm10
  0053a:    	call   0xfffd9f57
  0053f: ff 	mov    QWORD PTR [rbp-0xa8],rax
  00546:    	movq   xmm0,xmm11
  0054b:    	call   0xfffd9f57
  00550: ff 	mov    QWORD PTR [rbp-0xb0],rax
  00557: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0055e: 00 	test   rdi,0x7
  00565:    	jne    0x2fae9
  0056b:    	cmp    DWORD PTR [rdi+0x4],0x29
  0056f:    	jne    0x2fae9
  00575: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc44d],0x26        # 0xfffdc9c9
  0057c:    	jne    0x2fae9
  00582: 00 	mov    r9,0x0
  00589:    	sub    rsp,0x50
  0058d:    	movq   QWORD PTR [rsp],xmm2
  00592:    	movq   QWORD PTR [rsp+0x8],xmm3
  00598:    	movq   QWORD PTR [rsp+0x10],xmm4
  0059e:    	movq   QWORD PTR [rsp+0x18],xmm5
  005a4:    	movq   QWORD PTR [rsp+0x20],xmm6
  005aa:    	movq   QWORD PTR [rsp+0x28],xmm7
  005b0: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  005b7: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  005be: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  005c5:    	mov    rdx,rdi
  005c8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  005d1:    	mov    QWORD PTR [rsp-0x38],rcx
  005d6:    	mov    rax,QWORD PTR [rbx]
  005d9:    	lea    rdi,[rsp-0x18]
  005de:    	mov    QWORD PTR [rdi],rax
  005e1:    	mov    QWORD PTR [rbx],rdi
  005e4: ff 	lea    rcx,[rbp-0xa8]
  005eb: 00 	mov    r8,0x3
  005f2:    	call   0x2fb62
  005f7:    	lea    rdi,[rbp-0x8]
  005fb:    	mov    QWORD PTR [rbx],rdi
  005fe:    	movq   xmm2,QWORD PTR [rsp]
  00603:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00609:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0060f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00615:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0061b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00621: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00628: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0062f: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00636:    	add    rsp,0x50
  0063a: 34 	movabs r13,0x56343987e9e0
  00644:    	test   rax,rax
  00647:    	je     0xfffd9e0b
  0064d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00051 
:00053 %10 = %14.call vnormalize()          [Vec]
  00654: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0065b: 00 	test   rdi,0x7
  00662:    	jne    0x2fb94
  00668:    	cmp    DWORD PTR [rdi+0x4],0x28
  0066c:    	jne    0x2fb94
  00672: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc350],0x26        # 0xfffdc9c9
  00679:    	jne    0x2fb94
  0067f:    	sub    rsp,0x50
  00683:    	movq   QWORD PTR [rsp],xmm2
  00688:    	movq   QWORD PTR [rsp+0x8],xmm3
  0068e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00694:    	movq   QWORD PTR [rsp+0x18],xmm5
  0069a:    	movq   QWORD PTR [rsp+0x20],xmm6
  006a0:    	movq   QWORD PTR [rsp+0x28],xmm7
  006a6: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  006ad: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  006b4: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  006bb: 00 	mov    QWORD PTR [rsp-0x20],0x0
  006c4:    	mov    QWORD PTR [rsp-0x38],rcx
  006c9:    	mov    rax,QWORD PTR [rbx]
  006cc:    	lea    rdi,[rsp-0x18]
  006d1:    	mov    QWORD PTR [rdi],rax
  006d4:    	mov    QWORD PTR [rbx],rdi
  006d7: ff 	mov    rax,QWORD PTR [rbp-0x98]
  006de:    	mov    QWORD PTR [rsp-0x38],rax
  006e3: 00 	mov    rdi,0x0
  006ea: 00 	mov    QWORD PTR [rsp-0x30],0x0
  006f3: 07 	movabs rax,0x700000044
  006fd:    	mov    QWORD PTR [rsp-0x28],rax
  00702: 34 	movabs r13,0x5634398639e0
  0070c:    	call   0xfffdd302
  00711:    	lea    rdi,[rbp-0x8]
  00715:    	mov    QWORD PTR [rbx],rdi
  00718:    	movq   xmm2,QWORD PTR [rsp]
  0071d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00723:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00729:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0072f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00735:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0073b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00742: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00749: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00750:    	add    rsp,0x50
  00754: 34 	movabs r13,0x56343987ea10
  0075e:    	test   rax,rax
  00761:    	je     0xfffd9e0b
  00767:    	mov    QWORD PTR [rbp-0x78],rax
:00054 
:00056 %14 = const[Ray]                     [Ray]
  0076b: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdc25e]        # 0xfffdc9d0
  00772: 00 	cmp    rax,QWORD PTR [rip+0x1c37]        # 0x23b0
  00779:    	jne    0x2fc0d
  0077f: 00 	mov    rax,QWORD PTR [rip+0x1c1a]        # 0x23a0
  00786: ff 	mov    QWORD PTR [rbp-0x98],rax
:00057 %16 = const[Vec]                     [Vec]
  0078d: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdc23c]        # 0xfffdc9d0
  00794: 00 	cmp    rax,QWORD PTR [rip+0x1c35]        # 0x23d0
  0079b:    	jne    0x2fccb
  007a1: 00 	mov    rax,QWORD PTR [rip+0x1c18]        # 0x23c0
  007a8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00058 %17 = literal[0.0]
  007af: 1c 	movq   xmm8,QWORD PTR [rip+0x1c28]        # 0x23e0
  007b8: 00 	movabs rax,0x8000000000000002
  007c2: ff 	mov    QWORD PTR [rbp-0xb0],rax
:00059 %18 = literal[0.0]
  007c9: 1c 	movq   xmm9,QWORD PTR [rip+0x1c1e]        # 0x23f0
  007d2: 00 	movabs rax,0x8000000000000002
  007dc: ff 	mov    QWORD PTR [rbp-0xb8],rax
:00060 %19 = literal[0.0]
  007e3: 1c 	movq   xmm12,QWORD PTR [rip+0x1c14]        # 0x2400
  007ec: 00 	movabs rax,0x8000000000000002
  007f6: ff 	mov    QWORD PTR [rbp-0xc0],rax
:00061 %15 = %16.call new(%17; 3)           [#<Class:Vec>]
  007fd: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  00804: 00 	test   rdi,0x7
  0080b:    	jne    0x2fd89
  00811:    	cmp    DWORD PTR [rdi+0x4],0x29
  00815:    	jne    0x2fd89
  0081b: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc1a7],0x26        # 0xfffdc9c9
  00822:    	jne    0x2fd89
  00828: 00 	mov    r9,0x0
  0082f:    	sub    rsp,0x60
  00833:    	movq   QWORD PTR [rsp],xmm2
  00838:    	movq   QWORD PTR [rsp+0x8],xmm3
  0083e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00844:    	movq   QWORD PTR [rsp+0x18],xmm5
  0084a:    	movq   QWORD PTR [rsp+0x20],xmm6
  00850:    	movq   QWORD PTR [rsp+0x28],xmm7
  00856: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0085d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00864: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0086b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00872: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00879:    	mov    rdx,rdi
  0087c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00885:    	mov    QWORD PTR [rsp-0x38],rcx
  0088a:    	mov    rax,QWORD PTR [rbx]
  0088d:    	lea    rdi,[rsp-0x18]
  00892:    	mov    QWORD PTR [rdi],rax
  00895:    	mov    QWORD PTR [rbx],rdi
  00898: ff 	lea    rcx,[rbp-0xb0]
  0089f: 00 	mov    r8,0x3
  008a6:    	call   0x2fe02
  008ab:    	lea    rdi,[rbp-0x8]
  008af:    	mov    QWORD PTR [rbx],rdi
  008b2:    	movq   xmm2,QWORD PTR [rsp]
  008b7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008bd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  008c3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  008c9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  008cf:    	movq   xmm7,QWORD PTR [rsp+0x28]
  008d5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  008dc: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  008e3: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  008ea: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  008f1: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  008f8:    	add    rsp,0x60
  008fc: 34 	movabs r13,0x56343987ea90
  00906:    	test   rax,rax
  00909:    	je     0xfffd9e0b
  0090f: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00062 
:00064 %16 = %10
  00916:    	mov    rax,QWORD PTR [rbp-0x78]
  0091a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00065 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  00921: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00928: 00 	test   rdi,0x7
  0092f:    	jne    0x2fe34
  00935:    	cmp    DWORD PTR [rdi+0x4],0x2f
  00939:    	jne    0x2fe34
  0093f: 26 	cmp    DWORD PTR [rip+0xfffffffffffdc083],0x26        # 0xfffdc9c9
  00946:    	jne    0x2fe34
  0094c: 00 	mov    r9,0x0
  00953:    	sub    rsp,0x60
  00957:    	movq   QWORD PTR [rsp],xmm2
  0095c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00962:    	movq   QWORD PTR [rsp+0x10],xmm4
  00968:    	movq   QWORD PTR [rsp+0x18],xmm5
  0096e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00974:    	movq   QWORD PTR [rsp+0x28],xmm7
  0097a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00981: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00988: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0098f: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00996: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0099d:    	mov    rdx,rdi
  009a0: 00 	mov    QWORD PTR [rsp-0x20],0x0
  009a9:    	mov    QWORD PTR [rsp-0x38],rcx
  009ae:    	mov    rax,QWORD PTR [rbx]
  009b1:    	lea    rdi,[rsp-0x18]
  009b6:    	mov    QWORD PTR [rdi],rax
  009b9:    	mov    QWORD PTR [rbx],rdi
  009bc: ff 	lea    rcx,[rbp-0xa0]
  009c3: 00 	mov    r8,0x2
  009ca:    	call   0x2fead
  009cf:    	lea    rdi,[rbp-0x8]
  009d3:    	mov    QWORD PTR [rbx],rdi
  009d6:    	movq   xmm2,QWORD PTR [rsp]
  009db:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009e1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009e7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009ed:    	movq   xmm6,QWORD PTR [rsp+0x20]
  009f3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  009f9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00a00: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00a07: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00a0e: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00a15: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00a1c:    	add    rsp,0x60
  00a20: 34 	movabs r13,0x56343987ead0
  00a2a:    	test   rax,rax
  00a2d:    	je     0xfffd9e0b
  00a33:    	mov    QWORD PTR [rbp-0x80],rax
:00066 
:00068 %14 = const[Isect]                   [Isect]
  00a37: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffdbf92]        # 0xfffdc9d0
  00a3e: 00 	cmp    rax,QWORD PTR [rip+0x19db]        # 0x2420
  00a45:    	jne    0x2fedf
  00a4b: 00 	mov    rax,QWORD PTR [rip+0x19be]        # 0x2410
  00a52: ff 	mov    QWORD PTR [rbp-0x98],rax
:00069 %12 = %14.call new()                 [#<Class:Isect>]
  00a59: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a60: 00 	test   rdi,0x7
  00a67:    	jne    0x2ffb9
  00a6d:    	cmp    DWORD PTR [rdi+0x4],0x31
  00a71:    	jne    0x2ffb9
  00a77: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbf4b],0x26        # 0xfffdc9c9
  00a7e:    	jne    0x2ffb9
  00a84: 00 	mov    r9,0x0
  00a8b:    	sub    rsp,0x60
  00a8f:    	movq   QWORD PTR [rsp],xmm2
  00a94:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a9a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00aa0:    	movq   QWORD PTR [rsp+0x18],xmm5
  00aa6:    	movq   QWORD PTR [rsp+0x20],xmm6
  00aac:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ab2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ab9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00ac0: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ac7: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ace: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00ad5:    	mov    rdx,rdi
  00ad8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00ae1:    	mov    QWORD PTR [rsp-0x38],rcx
  00ae6:    	mov    rax,QWORD PTR [rbx]
  00ae9:    	lea    rdi,[rsp-0x18]
  00aee:    	mov    QWORD PTR [rdi],rax
  00af1:    	mov    QWORD PTR [rbx],rdi
  00af4: ff 	lea    rcx,[rbp-0xa0]
  00afb: 00 	mov    r8,0x0
  00b02:    	call   0x30032
  00b07:    	lea    rdi,[rbp-0x8]
  00b0b:    	mov    QWORD PTR [rbx],rdi
  00b0e:    	movq   xmm2,QWORD PTR [rsp]
  00b13:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b19:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b1f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b25:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00b2b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00b31: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00b38: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00b3f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00b46: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00b4d: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00b54:    	add    rsp,0x60
  00b58: 34 	movabs r13,0x56343987eb10
  00b62:    	test   rax,rax
  00b65:    	je     0xfffd9e0b
  00b6b: ff 	mov    QWORD PTR [rbp-0x88],rax
:00070 
:00072 %14 = @spheres: Scene[IvarId(0)]
  00b72:    	mov    rdi,QWORD PTR [rbp-0x28]
  00b76:    	mov    rax,QWORD PTR [rdi+0x10]
  00b7a: ff 	mov    QWORD PTR [rbp-0x98],rax
:00073 %15 = 0: i32
  00b81: ff 	mov    QWORD PTR [rbp-0xa0],0x1
:00074 %14 = %14.[%15]                      [Array][Integer]
  00b8c:    	sub    rsp,0x60
  00b90:    	movq   QWORD PTR [rsp],xmm2
  00b95:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b9b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ba1:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ba7:    	movq   QWORD PTR [rsp+0x20],xmm6
  00bad:    	movq   QWORD PTR [rsp+0x28],xmm7
  00bb3: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00bba: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00bc1: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00bc8: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00bcf: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00bd6: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00bdd: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00be4:    	mov    rdi,rbx
  00be7:    	mov    rsi,r12
  00bea: 34 	movabs r8,0x56343987eb48
  00bf4: 34 	movabs rax,0x563437f47370
  00bfe:    	call   rax
  00c00:    	movq   xmm2,QWORD PTR [rsp]
  00c05:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c0b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c11:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c17:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00c1d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00c23: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00c2a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00c31: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00c38: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00c3f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00c46:    	add    rsp,0x60
  00c4a: 34 	movabs r13,0x56343987eb50
  00c54:    	test   rax,rax
  00c57:    	je     0xfffd9e0b
  00c5d: ff 	mov    QWORD PTR [rbp-0x98],rax
:00075 %15 = %11
  00c64:    	mov    rax,QWORD PTR [rbp-0x80]
  00c68: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00076 %16 = %12
  00c6f: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c76: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00077 _ = %14.call intersect(%15; 2)       [Sphere]
  00c7d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c84: 00 	test   rdi,0x7
  00c8b:    	jne    0x30064
  00c91:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00c95:    	jne    0x30064
  00c9b: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbd27],0x26        # 0xfffdc9c9
  00ca2:    	jne    0x30064
  00ca8:    	sub    rsp,0x60
  00cac:    	movq   QWORD PTR [rsp],xmm2
  00cb1:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cb7:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cbd:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cc3:    	movq   QWORD PTR [rsp+0x20],xmm6
  00cc9:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ccf: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00cd6: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00cdd: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ce4: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ceb: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00cf2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00cfb:    	mov    QWORD PTR [rsp-0x38],rcx
  00d00:    	mov    rax,QWORD PTR [rbx]
  00d03:    	lea    rdi,[rsp-0x18]
  00d08:    	mov    QWORD PTR [rdi],rax
  00d0b:    	mov    QWORD PTR [rbx],rdi
  00d0e: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00d15:    	mov    QWORD PTR [rsp-0x38],rax
  00d1a: 00 	mov    rdi,0x2
  00d21: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00d28:    	mov    QWORD PTR [rsp-0x40],rax
  00d2d: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00d34:    	mov    QWORD PTR [rsp-0x48],rax
  00d39: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00d42: 10 	movabs rax,0x1000000046
  00d4c:    	mov    QWORD PTR [rsp-0x28],rax
  00d51: 34 	movabs r13,0x5634398536b0
  00d5b:    	call   0xfffdd60a
  00d60:    	lea    rdi,[rbp-0x8]
  00d64:    	mov    QWORD PTR [rbx],rdi
  00d67:    	movq   xmm2,QWORD PTR [rsp]
  00d6c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d72:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d78:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d7e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d84:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d8a: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d91: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00d98: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00d9f: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00da6: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00dad:    	add    rsp,0x60
  00db1: 34 	movabs r13,0x56343987eb90
  00dbb:    	test   rax,rax
  00dbe:    	je     0xfffd9e0b
:00078 
:00080 %14 = @spheres: Scene[IvarId(0)]
  00dc4:    	mov    rdi,QWORD PTR [rbp-0x28]
  00dc8:    	mov    rax,QWORD PTR [rdi+0x10]
  00dcc: ff 	mov    QWORD PTR [rbp-0x98],rax
:00081 %15 = 1: i32
  00dd3: ff 	mov    QWORD PTR [rbp-0xa0],0x3
:00082 %14 = %14.[%15]                      [Array][Integer]
  00dde:    	sub    rsp,0x60
  00de2:    	movq   QWORD PTR [rsp],xmm2
  00de7:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ded:    	movq   QWORD PTR [rsp+0x10],xmm4
  00df3:    	movq   QWORD PTR [rsp+0x18],xmm5
  00df9:    	movq   QWORD PTR [rsp+0x20],xmm6
  00dff:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e05: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e0c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e13: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00e1a: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00e21: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00e28: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  00e2f: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  00e36:    	mov    rdi,rbx
  00e39:    	mov    rsi,r12
  00e3c: 34 	movabs r8,0x56343987ebc8
  00e46: 34 	movabs rax,0x563437f47370
  00e50:    	call   rax
  00e52:    	movq   xmm2,QWORD PTR [rsp]
  00e57:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e5d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e63:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e69:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e6f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e75: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e7c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e83: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e8a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e91: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00e98:    	add    rsp,0x60
  00e9c: 34 	movabs r13,0x56343987ebd0
  00ea6:    	test   rax,rax
  00ea9:    	je     0xfffd9e0b
  00eaf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00083 %15 = %11
  00eb6:    	mov    rax,QWORD PTR [rbp-0x80]
  00eba: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00084 %16 = %12
  00ec1: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00ec8: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00085 _ = %14.call intersect(%15; 2)       [Sphere]
  00ecf: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ed6: 00 	test   rdi,0x7
  00edd:    	jne    0x300dd
  00ee3:    	cmp    DWORD PTR [rdi+0x4],0x2a
  00ee7:    	jne    0x300dd
  00eed: 26 	cmp    DWORD PTR [rip+0xfffffffffffdbad5],0x26        # 0xfffdc9c9
  00ef4:    	jne    0x300dd
  00efa:    	sub    rsp,0x60
  00efe:    	movq   QWORD PTR [rsp],xmm2
  00f03:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f09:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f0f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f15:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f1b:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f21: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f28: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f2f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00f36: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00f3d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00f44: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f4d:    	mov    QWORD PTR [rsp-0x38],rcx
  00f52:    	mov    rax,QWORD PTR [rbx]
  00f55:    	lea    rdi,[rsp-0x18]
  00f5a:    	mov    QWORD PTR [rdi],rax
  00f5d:    	mov    QWORD PTR [rbx],rdi
  00f60: ff 	mov    rax,QWORD PTR [rbp-0x98]
  00f67:    	mov    QWORD PTR [rsp-0x38],rax
  00f6c: 00 	mov    rdi,0x2
  00f73: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  00f7a:    	mov    QWORD PTR [rsp-0x40],rax
  00f7f: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  00f86:    	mov    QWORD PTR [rsp-0x48],rax
  00f8b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00f94: 10 	movabs rax,0x1000000046
  00f9e:    	mov    QWORD PTR [rsp-0x28],rax
  00fa3: 34 	movabs r13,0x5634398536b0
  00fad:    	call   0xfffdd60a
  00fb2:    	lea    rdi,[rbp-0x8]
  00fb6:    	mov    QWORD PTR [rbx],rdi
  00fb9:    	movq   xmm2,QWORD PTR [rsp]
  00fbe:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fc4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fca:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fd0:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00fd6:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00fdc: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00fe3: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00fea: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00ff1: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00ff8: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  00fff:    	add    rsp,0x60
  01003: 34 	movabs r13,0x56343987ec10
  0100d:    	test   rax,rax
  01010:    	je     0xfffd9e0b
:00086 
:00088 %14 = @spheres: Scene[IvarId(0)]
  01016:    	mov    rdi,QWORD PTR [rbp-0x28]
  0101a:    	mov    rax,QWORD PTR [rdi+0x10]
  0101e: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 %15 = 2: i32
  01025: ff 	mov    QWORD PTR [rbp-0xa0],0x5
:00090 %14 = %14.[%15]                      [Array][Integer]
  01030:    	sub    rsp,0x60
  01034:    	movq   QWORD PTR [rsp],xmm2
  01039:    	movq   QWORD PTR [rsp+0x8],xmm3
  0103f:    	movq   QWORD PTR [rsp+0x10],xmm4
  01045:    	movq   QWORD PTR [rsp+0x18],xmm5
  0104b:    	movq   QWORD PTR [rsp+0x20],xmm6
  01051:    	movq   QWORD PTR [rsp+0x28],xmm7
  01057: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0105e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01065: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0106c: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01073: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0107a: ff 	mov    rdx,QWORD PTR [rbp-0x98]
  01081: ff 	mov    rcx,QWORD PTR [rbp-0xa0]
  01088:    	mov    rdi,rbx
  0108b:    	mov    rsi,r12
  0108e: 34 	movabs r8,0x56343987ec48
  01098: 34 	movabs rax,0x563437f47370
  010a2:    	call   rax
  010a4:    	movq   xmm2,QWORD PTR [rsp]
  010a9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010af:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010b5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010bb:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010c1:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010c7: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010ce: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  010d5: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  010dc: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  010e3: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  010ea:    	add    rsp,0x60
  010ee: 34 	movabs r13,0x56343987ec50
  010f8:    	test   rax,rax
  010fb:    	je     0xfffd9e0b
  01101: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %15 = %11
  01108:    	mov    rax,QWORD PTR [rbp-0x80]
  0110c: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00092 %16 = %12
  01113: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0111a: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00093 _ = %14.call intersect(%15; 2)       [Sphere]
  01121: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01128: 00 	test   rdi,0x7
  0112f:    	jne    0x30156
  01135:    	cmp    DWORD PTR [rdi+0x4],0x2a
  01139:    	jne    0x30156
  0113f: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb883],0x26        # 0xfffdc9c9
  01146:    	jne    0x30156
  0114c:    	sub    rsp,0x60
  01150:    	movq   QWORD PTR [rsp],xmm2
  01155:    	movq   QWORD PTR [rsp+0x8],xmm3
  0115b:    	movq   QWORD PTR [rsp+0x10],xmm4
  01161:    	movq   QWORD PTR [rsp+0x18],xmm5
  01167:    	movq   QWORD PTR [rsp+0x20],xmm6
  0116d:    	movq   QWORD PTR [rsp+0x28],xmm7
  01173: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0117a: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01181: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01188: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0118f: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01196: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0119f:    	mov    QWORD PTR [rsp-0x38],rcx
  011a4:    	mov    rax,QWORD PTR [rbx]
  011a7:    	lea    rdi,[rsp-0x18]
  011ac:    	mov    QWORD PTR [rdi],rax
  011af:    	mov    QWORD PTR [rbx],rdi
  011b2: ff 	mov    rax,QWORD PTR [rbp-0x98]
  011b9:    	mov    QWORD PTR [rsp-0x38],rax
  011be: 00 	mov    rdi,0x2
  011c5: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  011cc:    	mov    QWORD PTR [rsp-0x40],rax
  011d1: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  011d8:    	mov    QWORD PTR [rsp-0x48],rax
  011dd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  011e6: 10 	movabs rax,0x1000000046
  011f0:    	mov    QWORD PTR [rsp-0x28],rax
  011f5: 34 	movabs r13,0x5634398536b0
  011ff:    	call   0xfffdd60a
  01204:    	lea    rdi,[rbp-0x8]
  01208:    	mov    QWORD PTR [rbx],rdi
  0120b:    	movq   xmm2,QWORD PTR [rsp]
  01210:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01216:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0121c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01222:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01228:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0122e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01235: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0123c: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01243: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0124a: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01251:    	add    rsp,0x60
  01255: 34 	movabs r13,0x56343987ec90
  0125f:    	test   rax,rax
  01262:    	je     0xfffd9e0b
:00094 
:00096 %14 = @plane: Scene[IvarId(1)]
  01268:    	mov    rdi,QWORD PTR [rbp-0x28]
  0126c:    	mov    rax,QWORD PTR [rdi+0x18]
  01270: ff 	mov    QWORD PTR [rbp-0x98],rax
:00097 %15 = %11
  01277:    	mov    rax,QWORD PTR [rbp-0x80]
  0127b: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00098 %16 = %12
  01282: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01289: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00099 _ = %14.call intersect(%15; 2)       [Plane]
  01290: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01297: 00 	test   rdi,0x7
  0129e:    	jne    0x301cf
  012a4:    	cmp    DWORD PTR [rdi+0x4],0x2c
  012a8:    	jne    0x301cf
  012ae: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb714],0x26        # 0xfffdc9c9
  012b5:    	jne    0x301cf
  012bb:    	sub    rsp,0x60
  012bf:    	movq   QWORD PTR [rsp],xmm2
  012c4:    	movq   QWORD PTR [rsp+0x8],xmm3
  012ca:    	movq   QWORD PTR [rsp+0x10],xmm4
  012d0:    	movq   QWORD PTR [rsp+0x18],xmm5
  012d6:    	movq   QWORD PTR [rsp+0x20],xmm6
  012dc:    	movq   QWORD PTR [rsp+0x28],xmm7
  012e2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  012e9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  012f0: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  012f7: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  012fe: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01305: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0130e:    	mov    QWORD PTR [rsp-0x38],rcx
  01313:    	mov    rax,QWORD PTR [rbx]
  01316:    	lea    rdi,[rsp-0x18]
  0131b:    	mov    QWORD PTR [rdi],rax
  0131e:    	mov    QWORD PTR [rbx],rdi
  01321: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01328:    	mov    QWORD PTR [rsp-0x38],rax
  0132d: 00 	mov    rdi,0x2
  01334: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  0133b:    	mov    QWORD PTR [rsp-0x40],rax
  01340: ff 	mov    rax,QWORD PTR [rbp-0xa8]
  01347:    	mov    QWORD PTR [rsp-0x48],rax
  0134c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01355: 0e 	movabs rax,0xe00000048
  0135f:    	mov    QWORD PTR [rsp-0x28],rax
  01364: 34 	movabs r13,0x563439855550
  0136e:    	call   0xfffddc18
  01373:    	lea    rdi,[rbp-0x8]
  01377:    	mov    QWORD PTR [rbx],rdi
  0137a:    	movq   xmm2,QWORD PTR [rsp]
  0137f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01385:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0138b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01391:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01397:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0139d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  013a4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  013ab: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  013b2: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  013b9: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  013c0:    	add    rsp,0x60
  013c4: 34 	movabs r13,0x56343987ecf0
  013ce:    	test   rax,rax
  013d1:    	je     0xfffd9e0b
:00100 
:00102 %14 = %12.call hit()                 [Isect]
  013d7: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  013de: 00 	test   rdi,0x7
  013e5:    	jne    0x30248
  013eb:    	cmp    DWORD PTR [rdi+0x4],0x30
  013ef:    	jne    0x30248
  013f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb5cd],0x26        # 0xfffdc9c9
  013fc:    	jne    0x30248
  01402:    	mov    esi,DWORD PTR [rip+0x1024]        # 0x242c
  01408:    	cmp    esi,0xffffffff
  0140b:    	je     0x302c1
  01411:    	cmp    WORD PTR [rdi+0x2],0x3
  01416:    	jne    0x142f
  0141c:    	cmp    esi,0x6
  0141f:    	jge    0x142f
  01425:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0142a:    	jmp    0x14cf
  0142f:    	sub    rsp,0x60
  01433:    	movq   QWORD PTR [rsp],xmm2
  01438:    	movq   QWORD PTR [rsp+0x8],xmm3
  0143e:    	movq   QWORD PTR [rsp+0x10],xmm4
  01444:    	movq   QWORD PTR [rsp+0x18],xmm5
  0144a:    	movq   QWORD PTR [rsp+0x20],xmm6
  01450:    	movq   QWORD PTR [rsp+0x28],xmm7
  01456: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0145d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01464: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0146b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01472: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01479: 34 	movabs rax,0x563437ed0590
  01483:    	call   rax
  01485:    	movq   xmm2,QWORD PTR [rsp]
  0148a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01490:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01496:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0149c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014a2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014a8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  014af: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  014b6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  014bd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  014c4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  014cb:    	add    rsp,0x60
  014cf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00103 
:00105 condnotbr %14 =>:00148
  014d6: ff 	mov    rax,QWORD PTR [rbp-0x98]
  014dd:    	or     rax,0x10
  014e1:    	cmp    rax,0x14
  014e5:    	je     0x2301
:00106 %14 = %12
  014eb: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014f2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00107 %13 = %0.call ambient_occlusion(%14; 1) [Scene]
  014f9:    	mov    rdi,QWORD PTR [rbp-0x28]
  014fd: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb4c5],0x26        # 0xfffdc9c9
  01504:    	jne    0x3037e
  0150a:    	sub    rsp,0x60
  0150e:    	movq   QWORD PTR [rsp],xmm2
  01513:    	movq   QWORD PTR [rsp+0x8],xmm3
  01519:    	movq   QWORD PTR [rsp+0x10],xmm4
  0151f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01525:    	movq   QWORD PTR [rsp+0x20],xmm6
  0152b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01531: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01538: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0153f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01546: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0154d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01554: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0155d:    	mov    QWORD PTR [rsp-0x38],rcx
  01562:    	mov    rax,QWORD PTR [rbx]
  01565:    	lea    rdi,[rsp-0x18]
  0156a:    	mov    QWORD PTR [rdi],rax
  0156d:    	mov    QWORD PTR [rbx],rdi
  01570:    	mov    rax,QWORD PTR [rbp-0x28]
  01574:    	mov    QWORD PTR [rsp-0x38],rax
  01579: 00 	mov    rdi,0x1
  01580: ff 	mov    rax,QWORD PTR [rbp-0x98]
  01587:    	mov    QWORD PTR [rsp-0x40],rax
  0158c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01595: 0e 	movabs rax,0xe0000004c
  0159f:    	mov    QWORD PTR [rsp-0x28],rax
  015a4: 34 	movabs r13,0x56343985c820
  015ae:    	call   0xfffe678b
  015b3:    	lea    rdi,[rbp-0x8]
  015b7:    	mov    QWORD PTR [rbx],rdi
  015ba:    	movq   xmm2,QWORD PTR [rsp]
  015bf:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015c5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015cb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015d1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015d7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015dd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  015e4: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015eb: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015f2: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  015f9: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01600:    	add    rsp,0x60
  01604: 34 	movabs r13,0x56343987ed70
  0160e:    	test   rax,rax
  01611:    	je     0xfffd9e0b
  01617: ff 	mov    QWORD PTR [rbp-0x90],rax
:00108 
:00110 %14 = dynvar(2, %2)
  0161e:    	mov    rax,QWORD PTR [rbp-0x10]
  01622:    	mov    rax,QWORD PTR [rax]
  01625:    	mov    rax,QWORD PTR [rax-0x28]
  01629: ff 	mov    QWORD PTR [rbp-0x98],rax
:00111 %16 = dynvar(2, %2)
  01630:    	mov    rax,QWORD PTR [rbp-0x10]
  01634:    	mov    rax,QWORD PTR [rax]
  01637:    	mov    rax,QWORD PTR [rax-0x28]
  0163b: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00112 %15 = %16.call x()                   [Vec]
  01642: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01649: 00 	test   rdi,0x7
  01650:    	jne    0x303f7
  01656:    	cmp    DWORD PTR [rdi+0x4],0x28
  0165a:    	jne    0x303f7
  01660: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb362],0x26        # 0xfffdc9c9
  01667:    	jne    0x303f7
  0166d:    	mov    esi,DWORD PTR [rip+0xdc1]        # 0x2434
  01673:    	cmp    esi,0xffffffff
  01676:    	je     0x30470
  0167c:    	cmp    WORD PTR [rdi+0x2],0x3
  01681:    	jne    0x169a
  01687:    	cmp    esi,0x6
  0168a:    	jge    0x169a
  01690:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01695:    	jmp    0x173a
  0169a:    	sub    rsp,0x60
  0169e:    	movq   QWORD PTR [rsp],xmm2
  016a3:    	movq   QWORD PTR [rsp+0x8],xmm3
  016a9:    	movq   QWORD PTR [rsp+0x10],xmm4
  016af:    	movq   QWORD PTR [rsp+0x18],xmm5
  016b5:    	movq   QWORD PTR [rsp+0x20],xmm6
  016bb:    	movq   QWORD PTR [rsp+0x28],xmm7
  016c1: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  016c8: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  016cf: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  016d6: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  016dd: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  016e4: 34 	movabs rax,0x563437ed0590
  016ee:    	call   rax
  016f0:    	movq   xmm2,QWORD PTR [rsp]
  016f5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016fb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01701:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01707:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0170d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01713: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0171a: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01721: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01728: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0172f: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01736:    	add    rsp,0x60
  0173a: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00113 
:00115 %16 = %13.call x()                   [Vec]
  01741: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01748: 00 	test   rdi,0x7
  0174f:    	jne    0x3052d
  01755:    	cmp    DWORD PTR [rdi+0x4],0x28
  01759:    	jne    0x3052d
  0175f: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb263],0x26        # 0xfffdc9c9
  01766:    	jne    0x3052d
  0176c:    	mov    esi,DWORD PTR [rip+0xcca]        # 0x243c
  01772:    	cmp    esi,0xffffffff
  01775:    	je     0x305a6
  0177b:    	cmp    WORD PTR [rdi+0x2],0x3
  01780:    	jne    0x1799
  01786:    	cmp    esi,0x6
  01789:    	jge    0x1799
  0178f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01794:    	jmp    0x1839
  01799:    	sub    rsp,0x60
  0179d:    	movq   QWORD PTR [rsp],xmm2
  017a2:    	movq   QWORD PTR [rsp+0x8],xmm3
  017a8:    	movq   QWORD PTR [rsp+0x10],xmm4
  017ae:    	movq   QWORD PTR [rsp+0x18],xmm5
  017b4:    	movq   QWORD PTR [rsp+0x20],xmm6
  017ba:    	movq   QWORD PTR [rsp+0x28],xmm7
  017c0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  017c7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  017ce: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  017d5: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  017dc: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  017e3: 34 	movabs rax,0x563437ed0590
  017ed:    	call   rax
  017ef:    	movq   xmm2,QWORD PTR [rsp]
  017f4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  017fa:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01800:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01806:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0180c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01812: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01819: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01820: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01827: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  0182e: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01835:    	add    rsp,0x60
  01839: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00116 
:00118 %15 = %15 + %16                      [Float][Float]
  01840: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01847: 00 	test   rdi,0x1
  0184e:    	jne    0x30663
  01854: 00 	test   rdi,0x2
  0185b:    	je     0x1898
  01861:    	xorps  xmm13,xmm13
  01865: 00 	movabs rax,0x8000000000000002
  0186f:    	cmp    rdi,rax
  01872:    	je     0x18ab
  01878:    	mov    rax,rdi
  0187b:    	sar    rax,0x3f
  0187f:    	add    rax,0x2
  01883:    	and    rdi,0xfffffffffffffffc
  01887:    	or     rdi,rax
  0188a:    	rol    rdi,0x3d
  0188e:    	movq   xmm13,rdi
  01893:    	jmp    0x18ab
  01898:    	call   0xfffd9e64
  0189d:    	test   rax,rax
  018a0:    	je     0x30663
  018a6:    	movq   xmm13,xmm0
  018ab: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  018b2: 00 	test   rdi,0x1
  018b9:    	jne    0x306dc
  018bf: 00 	test   rdi,0x2
  018c6:    	je     0x1903
  018cc:    	xorps  xmm14,xmm14
  018d0: 00 	movabs rax,0x8000000000000002
  018da:    	cmp    rdi,rax
  018dd:    	je     0x1916
  018e3:    	mov    rax,rdi
  018e6:    	sar    rax,0x3f
  018ea:    	add    rax,0x2
  018ee:    	and    rdi,0xfffffffffffffffc
  018f2:    	or     rdi,rax
  018f5:    	rol    rdi,0x3d
  018f9:    	movq   xmm14,rdi
  018fe:    	jmp    0x1916
  01903:    	call   0xfffd9e64
  01908:    	test   rax,rax
  0190b:    	je     0x306dc
  01911:    	movq   xmm14,xmm0
  01916:    	addsd  xmm13,xmm14
:00119 _ = %14.call x=(%15; 1)              [Vec]
  0191b:    	movq   xmm0,xmm13
  01920:    	call   0xfffd9f57
  01925: ff 	mov    QWORD PTR [rbp-0xa0],rax
  0192c: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01933: 00 	test   rdi,0x7
  0193a:    	jne    0x30755
  01940:    	cmp    DWORD PTR [rdi+0x4],0x28
  01944:    	jne    0x30755
  0194a: 26 	cmp    DWORD PTR [rip+0xfffffffffffdb078],0x26        # 0xfffdc9c9
  01951:    	jne    0x30755
  01957:    	mov    esi,DWORD PTR [rip+0xae7]        # 0x2444
  0195d:    	cmp    esi,0xffffffff
  01960:    	je     0x307ce
  01966:    	cmp    WORD PTR [rdi+0x2],0x3
  0196b:    	jne    0x198b
  01971:    	cmp    esi,0x6
  01974:    	jge    0x198b
  0197a: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01981:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01986:    	jmp    0x1a61
  0198b:    	sub    rsp,0x70
  0198f:    	movq   QWORD PTR [rsp],xmm2
  01994:    	movq   QWORD PTR [rsp+0x8],xmm3
  0199a:    	movq   QWORD PTR [rsp+0x10],xmm4
  019a0:    	movq   QWORD PTR [rsp+0x18],xmm5
  019a6:    	movq   QWORD PTR [rsp+0x20],xmm6
  019ac:    	movq   QWORD PTR [rsp+0x28],xmm7
  019b2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  019b9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  019c0: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  019c7: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  019ce: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  019d5: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  019dc: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  019e3: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  019ea: 34 	movabs rax,0x563437ed0810
  019f4:    	call   rax
  019f6:    	movq   xmm2,QWORD PTR [rsp]
  019fb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01a01:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01a07:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01a0d:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01a13:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01a19: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01a20: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01a27: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01a2e: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01a35: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01a3c: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  01a43: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  01a4a:    	add    rsp,0x70
  01a4e: 34 	movabs r13,0x56343987ee30
  01a58:    	test   rax,rax
  01a5b:    	je     0xfffd9e0b
:00120 
:00122 %14 = dynvar(2, %2)
  01a61:    	mov    rax,QWORD PTR [rbp-0x10]
  01a65:    	mov    rax,QWORD PTR [rax]
  01a68:    	mov    rax,QWORD PTR [rax-0x28]
  01a6c: ff 	mov    QWORD PTR [rbp-0x98],rax
:00123 %16 = dynvar(2, %2)
  01a73:    	mov    rax,QWORD PTR [rbp-0x10]
  01a77:    	mov    rax,QWORD PTR [rax]
  01a7a:    	mov    rax,QWORD PTR [rax-0x28]
  01a7e: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00124 %15 = %16.call y()                   [Vec]
  01a85: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01a8c: 00 	test   rdi,0x7
  01a93:    	jne    0x308b1
  01a99:    	cmp    DWORD PTR [rdi+0x4],0x28
  01a9d:    	jne    0x308b1
  01aa3: 26 	cmp    DWORD PTR [rip+0xfffffffffffdaf1f],0x26        # 0xfffdc9c9
  01aaa:    	jne    0x308b1
  01ab0:    	mov    esi,DWORD PTR [rip+0x996]        # 0x244c
  01ab6:    	cmp    esi,0xffffffff
  01ab9:    	je     0x3092a
  01abf:    	cmp    WORD PTR [rdi+0x2],0x3
  01ac4:    	jne    0x1add
  01aca:    	cmp    esi,0x6
  01acd:    	jge    0x1add
  01ad3:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01ad8:    	jmp    0x1b7d
  01add:    	sub    rsp,0x60
  01ae1:    	movq   QWORD PTR [rsp],xmm2
  01ae6:    	movq   QWORD PTR [rsp+0x8],xmm3
  01aec:    	movq   QWORD PTR [rsp+0x10],xmm4
  01af2:    	movq   QWORD PTR [rsp+0x18],xmm5
  01af8:    	movq   QWORD PTR [rsp+0x20],xmm6
  01afe:    	movq   QWORD PTR [rsp+0x28],xmm7
  01b04: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01b0b: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01b12: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01b19: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01b20: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01b27: 34 	movabs rax,0x563437ed0590
  01b31:    	call   rax
  01b33:    	movq   xmm2,QWORD PTR [rsp]
  01b38:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01b3e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01b44:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01b4a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01b50:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01b56: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01b5d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01b64: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01b6b: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01b72: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01b79:    	add    rsp,0x60
  01b7d: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00125 
:00127 %16 = %13.call y()                   [Vec]
  01b84: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01b8b: 00 	test   rdi,0x7
  01b92:    	jne    0x309e7
  01b98:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b9c:    	jne    0x309e7
  01ba2: 26 	cmp    DWORD PTR [rip+0xfffffffffffdae20],0x26        # 0xfffdc9c9
  01ba9:    	jne    0x309e7
  01baf:    	mov    esi,DWORD PTR [rip+0x89f]        # 0x2454
  01bb5:    	cmp    esi,0xffffffff
  01bb8:    	je     0x30a60
  01bbe:    	cmp    WORD PTR [rdi+0x2],0x3
  01bc3:    	jne    0x1bdc
  01bc9:    	cmp    esi,0x6
  01bcc:    	jge    0x1bdc
  01bd2:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01bd7:    	jmp    0x1c7c
  01bdc:    	sub    rsp,0x60
  01be0:    	movq   QWORD PTR [rsp],xmm2
  01be5:    	movq   QWORD PTR [rsp+0x8],xmm3
  01beb:    	movq   QWORD PTR [rsp+0x10],xmm4
  01bf1:    	movq   QWORD PTR [rsp+0x18],xmm5
  01bf7:    	movq   QWORD PTR [rsp+0x20],xmm6
  01bfd:    	movq   QWORD PTR [rsp+0x28],xmm7
  01c03: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01c0a: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01c11: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01c18: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01c1f: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01c26: 34 	movabs rax,0x563437ed0590
  01c30:    	call   rax
  01c32:    	movq   xmm2,QWORD PTR [rsp]
  01c37:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01c3d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01c43:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01c49:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01c4f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01c55: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01c5c: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01c63: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01c6a: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01c71: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01c78:    	add    rsp,0x60
  01c7c: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00128 
:00130 %15 = %15 + %16                      [Float][Float]
  01c83: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01c8a: 00 	test   rdi,0x1
  01c91:    	jne    0x30b1d
  01c97: 00 	test   rdi,0x2
  01c9e:    	je     0x1cdb
  01ca4:    	xorps  xmm13,xmm13
  01ca8: 00 	movabs rax,0x8000000000000002
  01cb2:    	cmp    rdi,rax
  01cb5:    	je     0x1cee
  01cbb:    	mov    rax,rdi
  01cbe:    	sar    rax,0x3f
  01cc2:    	add    rax,0x2
  01cc6:    	and    rdi,0xfffffffffffffffc
  01cca:    	or     rdi,rax
  01ccd:    	rol    rdi,0x3d
  01cd1:    	movq   xmm13,rdi
  01cd6:    	jmp    0x1cee
  01cdb:    	call   0xfffd9e64
  01ce0:    	test   rax,rax
  01ce3:    	je     0x30b1d
  01ce9:    	movq   xmm13,xmm0
  01cee: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01cf5: 00 	test   rdi,0x1
  01cfc:    	jne    0x30b96
  01d02: 00 	test   rdi,0x2
  01d09:    	je     0x1d46
  01d0f:    	xorps  xmm14,xmm14
  01d13: 00 	movabs rax,0x8000000000000002
  01d1d:    	cmp    rdi,rax
  01d20:    	je     0x1d59
  01d26:    	mov    rax,rdi
  01d29:    	sar    rax,0x3f
  01d2d:    	add    rax,0x2
  01d31:    	and    rdi,0xfffffffffffffffc
  01d35:    	or     rdi,rax
  01d38:    	rol    rdi,0x3d
  01d3c:    	movq   xmm14,rdi
  01d41:    	jmp    0x1d59
  01d46:    	call   0xfffd9e64
  01d4b:    	test   rax,rax
  01d4e:    	je     0x30b96
  01d54:    	movq   xmm14,xmm0
  01d59:    	addsd  xmm13,xmm14
:00131 _ = %14.call y=(%15; 1)              [Vec]
  01d5e:    	movq   xmm0,xmm13
  01d63:    	call   0xfffd9f57
  01d68: ff 	mov    QWORD PTR [rbp-0xa0],rax
  01d6f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01d76: 00 	test   rdi,0x7
  01d7d:    	jne    0x30c0f
  01d83:    	cmp    DWORD PTR [rdi+0x4],0x28
  01d87:    	jne    0x30c0f
  01d8d: 26 	cmp    DWORD PTR [rip+0xfffffffffffdac35],0x26        # 0xfffdc9c9
  01d94:    	jne    0x30c0f
  01d9a:    	mov    esi,DWORD PTR [rip+0x6bc]        # 0x245c
  01da0:    	cmp    esi,0xffffffff
  01da3:    	je     0x30c88
  01da9:    	cmp    WORD PTR [rdi+0x2],0x3
  01dae:    	jne    0x1dce
  01db4:    	cmp    esi,0x6
  01db7:    	jge    0x1dce
  01dbd: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  01dc4:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01dc9:    	jmp    0x1ea4
  01dce:    	sub    rsp,0x70
  01dd2:    	movq   QWORD PTR [rsp],xmm2
  01dd7:    	movq   QWORD PTR [rsp+0x8],xmm3
  01ddd:    	movq   QWORD PTR [rsp+0x10],xmm4
  01de3:    	movq   QWORD PTR [rsp+0x18],xmm5
  01de9:    	movq   QWORD PTR [rsp+0x20],xmm6
  01def:    	movq   QWORD PTR [rsp+0x28],xmm7
  01df5: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01dfc: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01e03: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01e0a: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01e11: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01e18: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  01e1f: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  01e26: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  01e2d: 34 	movabs rax,0x563437ed0810
  01e37:    	call   rax
  01e39:    	movq   xmm2,QWORD PTR [rsp]
  01e3e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01e44:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01e4a:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01e50:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01e56:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01e5c: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01e63: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01e6a: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01e71: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01e78: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01e7f: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  01e86: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  01e8d:    	add    rsp,0x70
  01e91: 34 	movabs r13,0x56343987eef0
  01e9b:    	test   rax,rax
  01e9e:    	je     0xfffd9e0b
:00132 
:00134 %14 = dynvar(2, %2)
  01ea4:    	mov    rax,QWORD PTR [rbp-0x10]
  01ea8:    	mov    rax,QWORD PTR [rax]
  01eab:    	mov    rax,QWORD PTR [rax-0x28]
  01eaf: ff 	mov    QWORD PTR [rbp-0x98],rax
:00135 %16 = dynvar(2, %2)
  01eb6:    	mov    rax,QWORD PTR [rbp-0x10]
  01eba:    	mov    rax,QWORD PTR [rax]
  01ebd:    	mov    rax,QWORD PTR [rax-0x28]
  01ec1: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00136 %15 = %16.call z()                   [Vec]
  01ec8: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  01ecf: 00 	test   rdi,0x7
  01ed6:    	jne    0x30d6b
  01edc:    	cmp    DWORD PTR [rdi+0x4],0x28
  01ee0:    	jne    0x30d6b
  01ee6: 26 	cmp    DWORD PTR [rip+0xfffffffffffdaadc],0x26        # 0xfffdc9c9
  01eed:    	jne    0x30d6b
  01ef3:    	mov    esi,DWORD PTR [rip+0x56b]        # 0x2464
  01ef9:    	cmp    esi,0xffffffff
  01efc:    	je     0x30de4
  01f02:    	cmp    WORD PTR [rdi+0x2],0x3
  01f07:    	jne    0x1f20
  01f0d:    	cmp    esi,0x6
  01f10:    	jge    0x1f20
  01f16:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01f1b:    	jmp    0x1fc0
  01f20:    	sub    rsp,0x60
  01f24:    	movq   QWORD PTR [rsp],xmm2
  01f29:    	movq   QWORD PTR [rsp+0x8],xmm3
  01f2f:    	movq   QWORD PTR [rsp+0x10],xmm4
  01f35:    	movq   QWORD PTR [rsp+0x18],xmm5
  01f3b:    	movq   QWORD PTR [rsp+0x20],xmm6
  01f41:    	movq   QWORD PTR [rsp+0x28],xmm7
  01f47: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01f4e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01f55: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01f5c: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01f63: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01f6a: 34 	movabs rax,0x563437ed0590
  01f74:    	call   rax
  01f76:    	movq   xmm2,QWORD PTR [rsp]
  01f7b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01f81:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01f87:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01f8d:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01f93:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01f99: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01fa0: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01fa7: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01fae: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01fb5: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01fbc:    	add    rsp,0x60
  01fc0: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00137 
:00139 %16 = %13.call z()                   [Vec]
  01fc7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01fce: 00 	test   rdi,0x7
  01fd5:    	jne    0x30ea1
  01fdb:    	cmp    DWORD PTR [rdi+0x4],0x28
  01fdf:    	jne    0x30ea1
  01fe5: 26 	cmp    DWORD PTR [rip+0xfffffffffffda9dd],0x26        # 0xfffdc9c9
  01fec:    	jne    0x30ea1
  01ff2:    	mov    esi,DWORD PTR [rip+0x474]        # 0x246c
  01ff8:    	cmp    esi,0xffffffff
  01ffb:    	je     0x30f1a
  02001:    	cmp    WORD PTR [rdi+0x2],0x3
  02006:    	jne    0x201f
  0200c:    	cmp    esi,0x6
  0200f:    	jge    0x201f
  02015:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0201a:    	jmp    0x20bf
  0201f:    	sub    rsp,0x60
  02023:    	movq   QWORD PTR [rsp],xmm2
  02028:    	movq   QWORD PTR [rsp+0x8],xmm3
  0202e:    	movq   QWORD PTR [rsp+0x10],xmm4
  02034:    	movq   QWORD PTR [rsp+0x18],xmm5
  0203a:    	movq   QWORD PTR [rsp+0x20],xmm6
  02040:    	movq   QWORD PTR [rsp+0x28],xmm7
  02046: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0204d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02054: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0205b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  02062: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  02069: 34 	movabs rax,0x563437ed0590
  02073:    	call   rax
  02075:    	movq   xmm2,QWORD PTR [rsp]
  0207a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02080:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02086:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0208c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02092:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02098: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0209f: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  020a6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  020ad: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  020b4: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  020bb:    	add    rsp,0x60
  020bf: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00140 
:00142 %15 = %15 + %16                      [Float][Float]
  020c6: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  020cd: 00 	test   rdi,0x1
  020d4:    	jne    0x30fd7
  020da: 00 	test   rdi,0x2
  020e1:    	je     0x211e
  020e7:    	xorps  xmm13,xmm13
  020eb: 00 	movabs rax,0x8000000000000002
  020f5:    	cmp    rdi,rax
  020f8:    	je     0x2131
  020fe:    	mov    rax,rdi
  02101:    	sar    rax,0x3f
  02105:    	add    rax,0x2
  02109:    	and    rdi,0xfffffffffffffffc
  0210d:    	or     rdi,rax
  02110:    	rol    rdi,0x3d
  02114:    	movq   xmm13,rdi
  02119:    	jmp    0x2131
  0211e:    	call   0xfffd9e64
  02123:    	test   rax,rax
  02126:    	je     0x30fd7
  0212c:    	movq   xmm13,xmm0
  02131: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  02138: 00 	test   rdi,0x1
  0213f:    	jne    0x31050
  02145: 00 	test   rdi,0x2
  0214c:    	je     0x2189
  02152:    	xorps  xmm14,xmm14
  02156: 00 	movabs rax,0x8000000000000002
  02160:    	cmp    rdi,rax
  02163:    	je     0x219c
  02169:    	mov    rax,rdi
  0216c:    	sar    rax,0x3f
  02170:    	add    rax,0x2
  02174:    	and    rdi,0xfffffffffffffffc
  02178:    	or     rdi,rax
  0217b:    	rol    rdi,0x3d
  0217f:    	movq   xmm14,rdi
  02184:    	jmp    0x219c
  02189:    	call   0xfffd9e64
  0218e:    	test   rax,rax
  02191:    	je     0x31050
  02197:    	movq   xmm14,xmm0
  0219c:    	addsd  xmm13,xmm14
:00143 _ = %14.call z=(%15; 1)              [Vec]
  021a1:    	movq   xmm0,xmm13
  021a6:    	call   0xfffd9f57
  021ab: ff 	mov    QWORD PTR [rbp-0xa0],rax
  021b2: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  021b9: 00 	test   rdi,0x7
  021c0:    	jne    0x310c9
  021c6:    	cmp    DWORD PTR [rdi+0x4],0x28
  021ca:    	jne    0x310c9
  021d0: 26 	cmp    DWORD PTR [rip+0xfffffffffffda7f2],0x26        # 0xfffdc9c9
  021d7:    	jne    0x310c9
  021dd:    	mov    esi,DWORD PTR [rip+0x291]        # 0x2474
  021e3:    	cmp    esi,0xffffffff
  021e6:    	je     0x31142
  021ec:    	cmp    WORD PTR [rdi+0x2],0x3
  021f1:    	jne    0x2211
  021f7:    	cmp    esi,0x6
  021fa:    	jge    0x2211
  02200: ff 	mov    rax,QWORD PTR [rbp-0xa0]
  02207:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0220c:    	jmp    0x22e7
  02211:    	sub    rsp,0x70
  02215:    	movq   QWORD PTR [rsp],xmm2
  0221a:    	movq   QWORD PTR [rsp+0x8],xmm3
  02220:    	movq   QWORD PTR [rsp+0x10],xmm4
  02226:    	movq   QWORD PTR [rsp+0x18],xmm5
  0222c:    	movq   QWORD PTR [rsp+0x20],xmm6
  02232:    	movq   QWORD PTR [rsp+0x28],xmm7
  02238: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0223f: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02246: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0224d: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  02254: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0225b: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  02262: 60 	movq   QWORD PTR [rsp+0x60],xmm14
  02269: ff 	mov    rdx,QWORD PTR [rbp-0xa0]
  02270: 34 	movabs rax,0x563437ed0810
  0227a:    	call   rax
  0227c:    	movq   xmm2,QWORD PTR [rsp]
  02281:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02287:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0228d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02293:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02299:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0229f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  022a6: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  022ad: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  022b4: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  022bb: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  022c2: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  022c9: 60 	movq   xmm14,QWORD PTR [rsp+0x60]
  022d0:    	add    rsp,0x70
  022d4: 34 	movabs r13,0x56343987efb0
  022de:    	test   rax,rax
  022e1:    	je     0xfffd9e0b
:00144 
:00146 %14 = %15
:00147 ret %14
  022e7:    	movq   xmm0,xmm13
  022ec:    	call   0xfffd9f57
  022f1: ff 	mov    QWORD PTR [rbp-0x98],rax
  022f8: ff 	mov    rax,QWORD PTR [rbp-0x98]
  022ff:    	leave  
  02300:    	ret    
:00148 %14 = nil
  02301: ff 	mov    QWORD PTR [rbp-0x98],0x4
:00149 ret %14
  0230c: ff 	mov    rax,QWORD PTR [rbp-0x98]
  02313:    	leave  
  02314:    	ret    
==> start whole compile: intersect FuncId(70) self_class:Sphere start:[00000] bytecode:0x5634398536b0
<== finished compile. elapsed:137.4µs
offset:Pos(165544) code: 6478 bytes  data: 266 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xb0
  0000e:    	cmp    edx,0x2
  00011:    	je     0x4d
  00017:    	jl     0x22
  0001d:    	jmp    0x2edad
  00022:    	jmp    0x2edad
  00027:    	mov    eax,0x2
  0002c:    	sub    eax,edx
  0002e:    	test   rax,rax
  00031:    	je     0x4d
  00037:    	lea    rdi,[rbp-0x40]
  0003b: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00043:    	sub    rax,0x1
  00047:    	jne    0x3b
  0004d: 00 	mov    rax,0x4
  00054:    	mov    QWORD PTR [rbp-0x40],rax
  00058:    	mov    QWORD PTR [rbp-0x48],rax
  0005c:    	mov    QWORD PTR [rbp-0x50],rax
  00060:    	mov    QWORD PTR [rbp-0x58],rax
  00064:    	mov    QWORD PTR [rbp-0x60],rax
  00068:    	mov    QWORD PTR [rbp-0x68],rax
  0006c:    	mov    QWORD PTR [rbp-0x70],rax
  00070:    	mov    QWORD PTR [rbp-0x78],rax
  00074:    	mov    QWORD PTR [rbp-0x80],rax
  00078: ff 	mov    QWORD PTR [rbp-0x88],rax
  0007f: ff 	mov    QWORD PTR [rbp-0x90],rax
  00086: ff 	mov    QWORD PTR [rbp-0x98],rax
  0008d: ff 	mov    QWORD PTR [rbp-0xa0],rax
  00094:    	mov    rdi,QWORD PTR [rbp-0x28]
  00098: 00 	test   rdi,0x7
  0009f:    	jne    0x2edbc
  000a5:    	cmp    DWORD PTR [rdi+0x4],0x2a
  000a9:    	jne    0x2edbc
:00000 init_method reg:16 arg:2 pos:2 req:2 stack_offset:11
:00001 %9 = %1.call org()                   [Ray]
  000af:    	mov    rdi,QWORD PTR [rbp-0x30]
  000b3: 00 	test   rdi,0x7
  000ba:    	jne    0x2edcb
  000c0:    	cmp    DWORD PTR [rdi+0x4],0x2e
  000c4:    	jne    0x2edcb
  000ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffda480],0x26        # 0xfffda551
  000d1:    	jne    0x2edcb
  000d7:    	mov    esi,DWORD PTR [rip+0x1875]        # 0x1952
  000dd:    	cmp    esi,0xffffffff
  000e0:    	je     0x2edda
  000e6:    	cmp    WORD PTR [rdi+0x2],0x3
  000eb:    	jne    0x104
  000f1:    	cmp    esi,0x6
  000f4:    	jge    0x104
  000fa:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000ff:    	jmp    0x110
  00104: 34 	movabs rax,0x563437ed0590
  0010e:    	call   rax
  00110:    	mov    QWORD PTR [rbp-0x70],rax
:00002 
:00004 %10 = @center: Sphere[IvarId(0)]
  00114:    	mov    rdi,QWORD PTR [rbp-0x28]
  00118:    	mov    rax,QWORD PTR [rdi+0x10]
  0011c:    	mov    QWORD PTR [rbp-0x78],rax
:00005 %3 = %9.call vsub(%10; 1)            [Vec]
  00120:    	mov    rdi,QWORD PTR [rbp-0x70]
  00124: 00 	test   rdi,0x7
  0012b:    	jne    0x2ee03
  00131:    	cmp    DWORD PTR [rdi+0x4],0x28
  00135:    	jne    0x2ee03
  0013b: 26 	cmp    DWORD PTR [rip+0xfffffffffffda40f],0x26        # 0xfffda551
  00142:    	jne    0x2ee03
  00148: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00151:    	mov    QWORD PTR [rsp-0x38],rcx
  00156:    	mov    rax,QWORD PTR [rbx]
  00159:    	lea    rdi,[rsp-0x18]
  0015e:    	mov    QWORD PTR [rdi],rax
  00161:    	mov    QWORD PTR [rbx],rdi
  00164:    	mov    rax,QWORD PTR [rbp-0x70]
  00168:    	mov    QWORD PTR [rsp-0x38],rax
  0016d: 00 	mov    rdi,0x1
  00174:    	mov    rax,QWORD PTR [rbp-0x78]
  00178:    	mov    QWORD PTR [rsp-0x40],rax
  0017d: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00186: 08 	movabs rax,0x800000040
  00190:    	mov    QWORD PTR [rsp-0x28],rax
  00195: 34 	movabs r13,0x563439872ba0
  0019f:    	call   0xfffdb224
  001a4:    	lea    rdi,[rbp-0x8]
  001a8:    	mov    QWORD PTR [rbx],rdi
  001ab: 34 	movabs r13,0x563439853720
  001b5:    	test   rax,rax
  001b8:    	je     0xfffd7993
  001be:    	mov    QWORD PTR [rbp-0x40],rax
:00006 
:00008 %9 = %1.call dir()                   [Ray]
  001c2:    	mov    rdi,QWORD PTR [rbp-0x30]
  001c6: 00 	test   rdi,0x7
  001cd:    	jne    0x2ee12
  001d3:    	cmp    DWORD PTR [rdi+0x4],0x2e
  001d7:    	jne    0x2ee12
  001dd: 26 	cmp    DWORD PTR [rip+0xfffffffffffda36d],0x26        # 0xfffda551
  001e4:    	jne    0x2ee12
  001ea:    	mov    esi,DWORD PTR [rip+0x176a]        # 0x195a
  001f0:    	cmp    esi,0xffffffff
  001f3:    	je     0x2ee21
  001f9:    	cmp    WORD PTR [rdi+0x2],0x3
  001fe:    	jne    0x217
  00204:    	cmp    esi,0x6
  00207:    	jge    0x217
  0020d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00212:    	jmp    0x223
  00217: 34 	movabs rax,0x563437ed0590
  00221:    	call   rax
  00223:    	mov    QWORD PTR [rbp-0x70],rax
:00009 
:00011 %4 = %3.call vdot(%9; 1)             [Vec]
  00227:    	mov    rdi,QWORD PTR [rbp-0x40]
  0022b: 00 	test   rdi,0x7
  00232:    	jne    0x2ee4a
  00238:    	cmp    DWORD PTR [rdi+0x4],0x28
  0023c:    	jne    0x2ee4a
  00242: 26 	cmp    DWORD PTR [rip+0xfffffffffffda308],0x26        # 0xfffda551
  00249:    	jne    0x2ee4a
  0024f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00258:    	mov    QWORD PTR [rsp-0x38],rcx
  0025d:    	mov    rax,QWORD PTR [rbx]
  00260:    	lea    rdi,[rsp-0x18]
  00265:    	mov    QWORD PTR [rdi],rax
  00268:    	mov    QWORD PTR [rbx],rdi
  0026b:    	mov    rax,QWORD PTR [rbp-0x40]
  0026f:    	mov    QWORD PTR [rsp-0x38],rax
  00274: 00 	mov    rdi,0x1
  0027b:    	mov    rax,QWORD PTR [rbp-0x70]
  0027f:    	mov    QWORD PTR [rsp-0x40],rax
  00284: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0028d: 05 	movabs rax,0x500000042
  00297:    	mov    QWORD PTR [rsp-0x28],rax
  0029c: 34 	movabs r13,0x563439877e20
  002a6:    	call   0xfffdb2b6
  002ab:    	lea    rdi,[rbp-0x8]
  002af:    	mov    QWORD PTR [rbx],rdi
  002b2: 34 	movabs r13,0x563439853780
  002bc:    	test   rax,rax
  002bf:    	je     0xfffd7993
  002c5:    	mov    QWORD PTR [rbp-0x48],rax
:00012 
:00014 %10 = %3
  002c9:    	mov    rax,QWORD PTR [rbp-0x40]
  002cd:    	mov    QWORD PTR [rbp-0x78],rax
:00015 %9 = %3.call vdot(%10; 1)            [Vec]
  002d1:    	mov    rdi,QWORD PTR [rbp-0x40]
  002d5: 00 	test   rdi,0x7
  002dc:    	jne    0x2ee59
  002e2:    	cmp    DWORD PTR [rdi+0x4],0x28
  002e6:    	jne    0x2ee59
  002ec: 26 	cmp    DWORD PTR [rip+0xfffffffffffda25e],0x26        # 0xfffda551
  002f3:    	jne    0x2ee59
  002f9: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00302:    	mov    QWORD PTR [rsp-0x38],rcx
  00307:    	mov    rax,QWORD PTR [rbx]
  0030a:    	lea    rdi,[rsp-0x18]
  0030f:    	mov    QWORD PTR [rdi],rax
  00312:    	mov    QWORD PTR [rbx],rdi
  00315:    	mov    rax,QWORD PTR [rbp-0x40]
  00319:    	mov    QWORD PTR [rsp-0x38],rax
  0031e: 00 	mov    rdi,0x1
  00325:    	mov    rax,QWORD PTR [rbp-0x78]
  00329:    	mov    QWORD PTR [rsp-0x40],rax
  0032e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00337: 05 	movabs rax,0x500000042
  00341:    	mov    QWORD PTR [rsp-0x28],rax
  00346: 34 	movabs r13,0x563439877e20
  00350:    	call   0xfffdb2b6
  00355:    	lea    rdi,[rbp-0x8]
  00359:    	mov    QWORD PTR [rbx],rdi
  0035c: 34 	movabs r13,0x5634398537c0
  00366:    	test   rax,rax
  00369:    	je     0xfffd7993
  0036f:    	mov    QWORD PTR [rbp-0x70],rax
:00016 
:00018 %10 = @radius: Sphere[IvarId(1)]
  00373:    	mov    rdi,QWORD PTR [rbp-0x28]
  00377:    	mov    rax,QWORD PTR [rdi+0x18]
  0037b:    	mov    QWORD PTR [rbp-0x78],rax
:00019 %11 = @radius: Sphere[IvarId(1)]
  0037f:    	mov    rdi,QWORD PTR [rbp-0x28]
  00383:    	mov    rax,QWORD PTR [rdi+0x18]
  00387:    	mov    QWORD PTR [rbp-0x80],rax
:00020 %10 = %10 * %11                      [Float][Float]
  0038b:    	mov    rdi,QWORD PTR [rbp-0x78]
  0038f: 00 	test   rdi,0x1
  00396:    	jne    0x2ee68
  0039c: 00 	test   rdi,0x2
  003a3:    	je     0x3df
  003a9:    	xorps  xmm2,xmm2
  003ac: 00 	movabs rax,0x8000000000000002
  003b6:    	cmp    rdi,rax
  003b9:    	je     0x3f1
  003bf:    	mov    rax,rdi
  003c2:    	sar    rax,0x3f
  003c6:    	add    rax,0x2
  003ca:    	and    rdi,0xfffffffffffffffc
  003ce:    	or     rdi,rax
  003d1:    	rol    rdi,0x3d
  003d5:    	movq   xmm2,rdi
  003da:    	jmp    0x3f1
  003df:    	call   0xfffd79ec
  003e4:    	test   rax,rax
  003e7:    	je     0x2ee68
  003ed:    	movq   xmm2,xmm0
  003f1:    	mov    rdi,QWORD PTR [rbp-0x80]
  003f5: 00 	test   rdi,0x1
  003fc:    	jne    0x2ee77
  00402: 00 	test   rdi,0x2
  00409:    	je     0x445
  0040f:    	xorps  xmm3,xmm3
  00412: 00 	movabs rax,0x8000000000000002
  0041c:    	cmp    rdi,rax
  0041f:    	je     0x457
  00425:    	mov    rax,rdi
  00428:    	sar    rax,0x3f
  0042c:    	add    rax,0x2
  00430:    	and    rdi,0xfffffffffffffffc
  00434:    	or     rdi,rax
  00437:    	rol    rdi,0x3d
  0043b:    	movq   xmm3,rdi
  00440:    	jmp    0x457
  00445:    	call   0xfffd79ec
  0044a:    	test   rax,rax
  0044d:    	je     0x2ee77
  00453:    	movq   xmm3,xmm0
  00457:    	mulsd  xmm2,xmm3
:00021 %5 = %9 - %10                        [Float][Float]
  0045b:    	mov    rdi,QWORD PTR [rbp-0x70]
  0045f: 00 	test   rdi,0x1
  00466:    	jne    0x2ee86
  0046c: 00 	test   rdi,0x2
  00473:    	je     0x4af
  00479:    	xorps  xmm4,xmm4
  0047c: 00 	movabs rax,0x8000000000000002
  00486:    	cmp    rdi,rax
  00489:    	je     0x4c1
  0048f:    	mov    rax,rdi
  00492:    	sar    rax,0x3f
  00496:    	add    rax,0x2
  0049a:    	and    rdi,0xfffffffffffffffc
  0049e:    	or     rdi,rax
  004a1:    	rol    rdi,0x3d
  004a5:    	movq   xmm4,rdi
  004aa:    	jmp    0x4c1
  004af:    	call   0xfffd79ec
  004b4:    	test   rax,rax
  004b7:    	je     0x2ee86
  004bd:    	movq   xmm4,xmm0
  004c1:    	movq   xmm5,xmm4
  004c5:    	subsd  xmm5,xmm2
:00022 %9 = %4 * %4                         [Float][Float]
  004c9:    	mov    rdi,QWORD PTR [rbp-0x48]
  004cd: 00 	test   rdi,0x1
  004d4:    	jne    0x2eea2
  004da: 00 	test   rdi,0x2
  004e1:    	je     0x51d
  004e7:    	xorps  xmm6,xmm6
  004ea: 00 	movabs rax,0x8000000000000002
  004f4:    	cmp    rdi,rax
  004f7:    	je     0x52f
  004fd:    	mov    rax,rdi
  00500:    	sar    rax,0x3f
  00504:    	add    rax,0x2
  00508:    	and    rdi,0xfffffffffffffffc
  0050c:    	or     rdi,rax
  0050f:    	rol    rdi,0x3d
  00513:    	movq   xmm6,rdi
  00518:    	jmp    0x52f
  0051d:    	call   0xfffd79ec
  00522:    	test   rax,rax
  00525:    	je     0x2eea2
  0052b:    	movq   xmm6,xmm0
  0052f:    	movq   xmm4,xmm6
  00533:    	mulsd  xmm4,xmm6
:00023 %6 = %9 - %5                         [Float][Float]
  00537:    	movq   xmm7,xmm4
  0053b:    	subsd  xmm7,xmm5
:00024 %9 = literal[0.0]
  0053f: 00 	movq   xmm4,QWORD PTR [rip+0x1421]        # 0x1968
  00547: 00 	movabs rax,0x8000000000000002
  00551:    	mov    QWORD PTR [rbp-0x70],rax
:00025 _%9 = %6 > %9                        [Float][Float]
:00026 condnotbr _%9 =>:00114
  00555:    	ucomisd xmm7,xmm4
  00559:    	jbe    0x30028
:00027 %9 = %4
:00028 %9 = neg %9                          [Float]
  0055f:    	movq   xmm4,xmm6
  00563: 00 	xorps  xmm4,XMMWORD PTR [rip+0x140e]        # 0x1978
:00029 %11 = const[Math]                    [Math]
  0056a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd9fe7]        # 0xfffda558
  00571: 00 	cmp    rax,QWORD PTR [rip+0x1420]        # 0x1998
  00578:    	jne    0x2eecb
  0057e: 00 	mov    rax,QWORD PTR [rip+0x1403]        # 0x1988
  00585:    	mov    QWORD PTR [rbp-0x80],rax
:00030 %12 = %6
:00031 %10 = %11.call sqrt(%12; 1)          [#<Class:Math>]
  00589:    	mov    rdi,QWORD PTR [rbp-0x80]
  0058d: 00 	test   rdi,0x7
  00594:    	jne    0x2ef53
  0059a:    	cmp    DWORD PTR [rdi+0x4],0x21
  0059e:    	jne    0x2ef53
  005a4: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9fa6],0x26        # 0xfffda551
  005ab:    	jne    0x2ef53
  005b1:    	sqrtsd xmm2,xmm7
:00032 
:00034 %7 = %9 - %10                        [Float][Float]
  005b5:    	movq   xmm3,xmm4
  005b9:    	subsd  xmm3,xmm2
:00035 %9 = literal[0.0]
  005bd: 00 	movq   xmm4,QWORD PTR [rip+0x13e3]        # 0x19a8
  005c5: 00 	movabs rax,0x8000000000000002
  005cf:    	mov    QWORD PTR [rbp-0x70],rax
:00036 _%9 = %7 > %9                        [Float][Float]
:00037 condnotbr _%9 =>:00113
  005d3:    	ucomisd xmm3,xmm4
  005d7:    	jbe    0x2ff1c
:00038 %9 = %2.call t()                     [Isect]
  005dd:    	mov    rdi,QWORD PTR [rbp-0x38]
  005e1: 00 	test   rdi,0x7
  005e8:    	jne    0x2ef90
  005ee:    	cmp    DWORD PTR [rdi+0x4],0x30
  005f2:    	jne    0x2ef90
  005f8: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9f52],0x26        # 0xfffda551
  005ff:    	jne    0x2ef90
  00605:    	mov    esi,DWORD PTR [rip+0x13a9]        # 0x19b4
  0060b:    	cmp    esi,0xffffffff
  0060e:    	je     0x2efda
  00614:    	cmp    WORD PTR [rdi+0x2],0x3
  00619:    	jne    0x632
  0061f:    	cmp    esi,0x6
  00622:    	jge    0x632
  00628:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0062d:    	jmp    0x680
  00632:    	sub    rsp,0x30
  00636:    	movq   QWORD PTR [rsp],xmm2
  0063b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00641:    	movq   QWORD PTR [rsp+0x10],xmm5
  00647:    	movq   QWORD PTR [rsp+0x18],xmm6
  0064d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00653: 34 	movabs rax,0x563437ed0590
  0065d:    	call   rax
  0065f:    	movq   xmm2,QWORD PTR [rsp]
  00664:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0066a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00670:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00676:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0067c:    	add    rsp,0x30
  00680:    	mov    QWORD PTR [rbp-0x70],rax
:00039 
:00041 _%9 = %7 < %9                        [Float][Float]
:00042 condnotbr _%9 =>:00113
  00684:    	mov    rdi,QWORD PTR [rbp-0x70]
  00688: 00 	test   rdi,0x1
  0068f:    	jne    0x2f045
  00695: 00 	test   rdi,0x2
  0069c:    	je     0x6d8
  006a2:    	xorps  xmm4,xmm4
  006a5: 00 	movabs rax,0x8000000000000002
  006af:    	cmp    rdi,rax
  006b2:    	je     0x6ea
  006b8:    	mov    rax,rdi
  006bb:    	sar    rax,0x3f
  006bf:    	add    rax,0x2
  006c3:    	and    rdi,0xfffffffffffffffc
  006c7:    	or     rdi,rax
  006ca:    	rol    rdi,0x3d
  006ce:    	movq   xmm4,rdi
  006d3:    	jmp    0x6ea
  006d8:    	call   0xfffd79ec
  006dd:    	test   rax,rax
  006e0:    	je     0x2f045
  006e6:    	movq   xmm4,xmm0
  006ea:    	ucomisd xmm3,xmm4
  006ee:    	jae    0x2ff79
:00043 _ = %2.call t=(%7; 1)                [Isect]
  006f4:    	movq   xmm0,xmm3
  006f8:    	call   0xfffd7adf
  006fd:    	mov    QWORD PTR [rbp-0x60],rax
  00701:    	mov    rdi,QWORD PTR [rbp-0x38]
  00705: 00 	test   rdi,0x7
  0070c:    	jne    0x2f08f
  00712:    	cmp    DWORD PTR [rdi+0x4],0x30
  00716:    	jne    0x2f08f
  0071c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9e2e],0x26        # 0xfffda551
  00723:    	jne    0x2f08f
  00729:    	mov    esi,DWORD PTR [rip+0x128d]        # 0x19bc
  0072f:    	cmp    esi,0xffffffff
  00732:    	je     0x2f0cc
  00738:    	cmp    WORD PTR [rdi+0x2],0x3
  0073d:    	jne    0x75a
  00743:    	cmp    esi,0x6
  00746:    	jge    0x75a
  0074c:    	mov    rax,QWORD PTR [rbp-0x60]
  00750:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00755:    	jmp    0x7cb
  0075a:    	sub    rsp,0x30
  0075e:    	movq   QWORD PTR [rsp],xmm2
  00763:    	movq   QWORD PTR [rsp+0x8],xmm3
  00769:    	movq   QWORD PTR [rsp+0x10],xmm4
  0076f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00775:    	movq   QWORD PTR [rsp+0x20],xmm6
  0077b:    	movq   QWORD PTR [rsp+0x28],xmm7
  00781:    	mov    rdx,QWORD PTR [rbp-0x60]
  00785: 34 	movabs rax,0x563437ed0810
  0078f:    	call   rax
  00791:    	movq   xmm2,QWORD PTR [rsp]
  00796:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0079c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007a2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007a8:    	movq   xmm6,QWORD PTR [rsp+0x20]
  007ae:    	movq   xmm7,QWORD PTR [rsp+0x28]
  007b4:    	add    rsp,0x30
  007b8: 34 	movabs r13,0x563439853980
  007c2:    	test   rax,rax
  007c5:    	je     0xfffd7993
:00044 
:00046 %9 = literal[true]
  007cb: 00 	mov    rax,0x1c
  007d2:    	mov    QWORD PTR [rbp-0x70],rax
:00047 _ = %2.call hit=(%9; 1)              [Isect]
  007d6:    	mov    rdi,QWORD PTR [rbp-0x38]
  007da: 00 	test   rdi,0x7
  007e1:    	jne    0x2f14a
  007e7:    	cmp    DWORD PTR [rdi+0x4],0x30
  007eb:    	jne    0x2f14a
  007f1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9d59],0x26        # 0xfffda551
  007f8:    	jne    0x2f14a
  007fe:    	mov    esi,DWORD PTR [rip+0x11c0]        # 0x19c4
  00804:    	cmp    esi,0xffffffff
  00807:    	je     0x2f187
  0080d:    	cmp    WORD PTR [rdi+0x2],0x3
  00812:    	jne    0x82f
  00818:    	cmp    esi,0x6
  0081b:    	jge    0x82f
  00821:    	mov    rax,QWORD PTR [rbp-0x70]
  00825:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0082a:    	jmp    0x894
  0082f:    	sub    rsp,0x30
  00833:    	movq   QWORD PTR [rsp],xmm2
  00838:    	movq   QWORD PTR [rsp+0x8],xmm3
  0083e:    	movq   QWORD PTR [rsp+0x10],xmm5
  00844:    	movq   QWORD PTR [rsp+0x18],xmm6
  0084a:    	movq   QWORD PTR [rsp+0x20],xmm7
  00850:    	mov    rdx,QWORD PTR [rbp-0x70]
  00854: 34 	movabs rax,0x563437ed0810
  0085e:    	call   rax
  00860:    	movq   xmm2,QWORD PTR [rsp]
  00865:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0086b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00871:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00877:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0087d:    	add    rsp,0x30
  00881: 34 	movabs r13,0x5634398539c0
  0088b:    	test   rax,rax
  0088e:    	je     0xfffd7993
:00048 
:00050 %10 = const[Vec]                     [Vec]
  00894: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd9cbd]        # 0xfffda558
  0089b: 00 	cmp    rax,QWORD PTR [rip+0x1136]        # 0x19d8
  008a2:    	jne    0x2f1f9
  008a8: 00 	mov    rax,QWORD PTR [rip+0x1119]        # 0x19c8
  008af:    	mov    QWORD PTR [rbp-0x78],rax
:00051 %12 = %1.call org()                  [Ray]
  008b3:    	mov    rdi,QWORD PTR [rbp-0x30]
  008b7: 00 	test   rdi,0x7
  008be:    	jne    0x2f275
  008c4:    	cmp    DWORD PTR [rdi+0x4],0x2e
  008c8:    	jne    0x2f275
  008ce: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9c7c],0x26        # 0xfffda551
  008d5:    	jne    0x2f275
  008db:    	mov    esi,DWORD PTR [rip+0x1103]        # 0x19e4
  008e1:    	cmp    esi,0xffffffff
  008e4:    	je     0x2f29e
  008ea:    	cmp    WORD PTR [rdi+0x2],0x3
  008ef:    	jne    0x908
  008f5:    	cmp    esi,0x6
  008f8:    	jge    0x908
  008fe:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00903:    	jmp    0x94a
  00908:    	sub    rsp,0x20
  0090c:    	movq   QWORD PTR [rsp],xmm3
  00911:    	movq   QWORD PTR [rsp+0x8],xmm5
  00917:    	movq   QWORD PTR [rsp+0x10],xmm6
  0091d:    	movq   QWORD PTR [rsp+0x18],xmm7
  00923: 34 	movabs rax,0x563437ed0590
  0092d:    	call   rax
  0092f:    	movq   xmm3,QWORD PTR [rsp]
  00934:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0093a:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00940:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00946:    	add    rsp,0x20
  0094a: ff 	mov    QWORD PTR [rbp-0x88],rax
:00052 
:00054 %11 = %12.call x()                   [Vec]
  00951: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00958: 00 	test   rdi,0x7
  0095f:    	jne    0x2f2fd
  00965:    	cmp    DWORD PTR [rdi+0x4],0x28
  00969:    	jne    0x2f2fd
  0096f: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9bdb],0x26        # 0xfffda551
  00976:    	jne    0x2f2fd
  0097c:    	mov    esi,DWORD PTR [rip+0x106a]        # 0x19ec
  00982:    	cmp    esi,0xffffffff
  00985:    	je     0x2f326
  0098b:    	cmp    WORD PTR [rdi+0x2],0x3
  00990:    	jne    0x9a9
  00996:    	cmp    esi,0x6
  00999:    	jge    0x9a9
  0099f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  009a4:    	jmp    0x9eb
  009a9:    	sub    rsp,0x20
  009ad:    	movq   QWORD PTR [rsp],xmm3
  009b2:    	movq   QWORD PTR [rsp+0x8],xmm5
  009b8:    	movq   QWORD PTR [rsp+0x10],xmm6
  009be:    	movq   QWORD PTR [rsp+0x18],xmm7
  009c4: 34 	movabs rax,0x563437ed0590
  009ce:    	call   rax
  009d0:    	movq   xmm3,QWORD PTR [rsp]
  009d5:    	movq   xmm5,QWORD PTR [rsp+0x8]
  009db:    	movq   xmm6,QWORD PTR [rsp+0x10]
  009e1:    	movq   xmm7,QWORD PTR [rsp+0x18]
  009e7:    	add    rsp,0x20
  009eb:    	mov    QWORD PTR [rbp-0x80],rax
:00055 
:00057 %13 = %1.call dir()                  [Ray]
  009ef:    	mov    rdi,QWORD PTR [rbp-0x30]
  009f3: 00 	test   rdi,0x7
  009fa:    	jne    0x2f385
  00a00:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00a04:    	jne    0x2f385
  00a0a: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9b40],0x26        # 0xfffda551
  00a11:    	jne    0x2f385
  00a17:    	mov    esi,DWORD PTR [rip+0xfd7]        # 0x19f4
  00a1d:    	cmp    esi,0xffffffff
  00a20:    	je     0x2f3ae
  00a26:    	cmp    WORD PTR [rdi+0x2],0x3
  00a2b:    	jne    0xa44
  00a31:    	cmp    esi,0x6
  00a34:    	jge    0xa44
  00a3a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a3f:    	jmp    0xa86
  00a44:    	sub    rsp,0x20
  00a48:    	movq   QWORD PTR [rsp],xmm3
  00a4d:    	movq   QWORD PTR [rsp+0x8],xmm5
  00a53:    	movq   QWORD PTR [rsp+0x10],xmm6
  00a59:    	movq   QWORD PTR [rsp+0x18],xmm7
  00a5f: 34 	movabs rax,0x563437ed0590
  00a69:    	call   rax
  00a6b:    	movq   xmm3,QWORD PTR [rsp]
  00a70:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00a76:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00a7c:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00a82:    	add    rsp,0x20
  00a86: ff 	mov    QWORD PTR [rbp-0x90],rax
:00058 
:00060 %12 = %13.call x()                   [Vec]
  00a8d: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00a94: 00 	test   rdi,0x7
  00a9b:    	jne    0x2f40d
  00aa1:    	cmp    DWORD PTR [rdi+0x4],0x28
  00aa5:    	jne    0x2f40d
  00aab: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9a9f],0x26        # 0xfffda551
  00ab2:    	jne    0x2f40d
  00ab8:    	mov    esi,DWORD PTR [rip+0xf3e]        # 0x19fc
  00abe:    	cmp    esi,0xffffffff
  00ac1:    	je     0x2f436
  00ac7:    	cmp    WORD PTR [rdi+0x2],0x3
  00acc:    	jne    0xae5
  00ad2:    	cmp    esi,0x6
  00ad5:    	jge    0xae5
  00adb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ae0:    	jmp    0xb27
  00ae5:    	sub    rsp,0x20
  00ae9:    	movq   QWORD PTR [rsp],xmm3
  00aee:    	movq   QWORD PTR [rsp+0x8],xmm5
  00af4:    	movq   QWORD PTR [rsp+0x10],xmm6
  00afa:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b00: 34 	movabs rax,0x563437ed0590
  00b0a:    	call   rax
  00b0c:    	movq   xmm3,QWORD PTR [rsp]
  00b11:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b17:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00b1d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b23:    	add    rsp,0x20
  00b27: ff 	mov    QWORD PTR [rbp-0x88],rax
:00061 
:00063 %12 = %12 * %7                       [Float][Float]
  00b2e: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00b35: 00 	test   rdi,0x1
  00b3c:    	jne    0x2f495
  00b42: 00 	test   rdi,0x2
  00b49:    	je     0xb85
  00b4f:    	xorps  xmm2,xmm2
  00b52: 00 	movabs rax,0x8000000000000002
  00b5c:    	cmp    rdi,rax
  00b5f:    	je     0xb97
  00b65:    	mov    rax,rdi
  00b68:    	sar    rax,0x3f
  00b6c:    	add    rax,0x2
  00b70:    	and    rdi,0xfffffffffffffffc
  00b74:    	or     rdi,rax
  00b77:    	rol    rdi,0x3d
  00b7b:    	movq   xmm2,rdi
  00b80:    	jmp    0xb97
  00b85:    	call   0xfffd79ec
  00b8a:    	test   rax,rax
  00b8d:    	je     0x2f495
  00b93:    	movq   xmm2,xmm0
  00b97:    	mulsd  xmm2,xmm3
:00064 %11 = %11 + %12                      [Float][Float]
  00b9b:    	mov    rdi,QWORD PTR [rbp-0x80]
  00b9f: 00 	test   rdi,0x1
  00ba6:    	jne    0x2f4be
  00bac: 00 	test   rdi,0x2
  00bb3:    	je     0xbef
  00bb9:    	xorps  xmm4,xmm4
  00bbc: 00 	movabs rax,0x8000000000000002
  00bc6:    	cmp    rdi,rax
  00bc9:    	je     0xc01
  00bcf:    	mov    rax,rdi
  00bd2:    	sar    rax,0x3f
  00bd6:    	add    rax,0x2
  00bda:    	and    rdi,0xfffffffffffffffc
  00bde:    	or     rdi,rax
  00be1:    	rol    rdi,0x3d
  00be5:    	movq   xmm4,rdi
  00bea:    	jmp    0xc01
  00bef:    	call   0xfffd79ec
  00bf4:    	test   rax,rax
  00bf7:    	je     0x2f4be
  00bfd:    	movq   xmm4,xmm0
  00c01:    	addsd  xmm4,xmm2
:00065 %13 = %1.call org()                  [Ray]
  00c05:    	mov    rdi,QWORD PTR [rbp-0x30]
  00c09: 00 	test   rdi,0x7
  00c10:    	jne    0x2f4f7
  00c16:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00c1a:    	jne    0x2f4f7
  00c20: 26 	cmp    DWORD PTR [rip+0xfffffffffffd992a],0x26        # 0xfffda551
  00c27:    	jne    0x2f4f7
  00c2d:    	mov    esi,DWORD PTR [rip+0xdd1]        # 0x1a04
  00c33:    	cmp    esi,0xffffffff
  00c36:    	je     0x2f53d
  00c3c:    	cmp    WORD PTR [rdi+0x2],0x3
  00c41:    	jne    0xc5a
  00c47:    	cmp    esi,0x6
  00c4a:    	jge    0xc5a
  00c50:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c55:    	jmp    0xcb4
  00c5a:    	sub    rsp,0x30
  00c5e:    	movq   QWORD PTR [rsp],xmm2
  00c63:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c69:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c6f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c75:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c7b:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c81: 34 	movabs rax,0x563437ed0590
  00c8b:    	call   rax
  00c8d:    	movq   xmm2,QWORD PTR [rsp]
  00c92:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c98:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c9e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ca4:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00caa:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00cb0:    	add    rsp,0x30
  00cb4: ff 	mov    QWORD PTR [rbp-0x90],rax
:00066 
:00068 %12 = %13.call y()                   [Vec]
  00cbb: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00cc2: 00 	test   rdi,0x7
  00cc9:    	jne    0x2f5b4
  00ccf:    	cmp    DWORD PTR [rdi+0x4],0x28
  00cd3:    	jne    0x2f5b4
  00cd9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9871],0x26        # 0xfffda551
  00ce0:    	jne    0x2f5b4
  00ce6:    	mov    esi,DWORD PTR [rip+0xd20]        # 0x1a0c
  00cec:    	cmp    esi,0xffffffff
  00cef:    	je     0x2f5ea
  00cf5:    	cmp    WORD PTR [rdi+0x2],0x3
  00cfa:    	jne    0xd13
  00d00:    	cmp    esi,0x6
  00d03:    	jge    0xd13
  00d09:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d0e:    	jmp    0xd61
  00d13:    	sub    rsp,0x30
  00d17:    	movq   QWORD PTR [rsp],xmm3
  00d1c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d22:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d28:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d2e:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d34: 34 	movabs rax,0x563437ed0590
  00d3e:    	call   rax
  00d40:    	movq   xmm3,QWORD PTR [rsp]
  00d45:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d4b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d51:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d57:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d5d:    	add    rsp,0x30
  00d61: ff 	mov    QWORD PTR [rbp-0x88],rax
:00069 
:00071 %14 = %1.call dir()                  [Ray]
  00d68:    	mov    rdi,QWORD PTR [rbp-0x30]
  00d6c: 00 	test   rdi,0x7
  00d73:    	jne    0x2f655
  00d79:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00d7d:    	jne    0x2f655
  00d83: 26 	cmp    DWORD PTR [rip+0xfffffffffffd97c7],0x26        # 0xfffda551
  00d8a:    	jne    0x2f655
  00d90:    	mov    esi,DWORD PTR [rip+0xc7e]        # 0x1a14
  00d96:    	cmp    esi,0xffffffff
  00d99:    	je     0x2f68b
  00d9f:    	cmp    WORD PTR [rdi+0x2],0x3
  00da4:    	jne    0xdbd
  00daa:    	cmp    esi,0x6
  00dad:    	jge    0xdbd
  00db3:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00db8:    	jmp    0xe0b
  00dbd:    	sub    rsp,0x30
  00dc1:    	movq   QWORD PTR [rsp],xmm3
  00dc6:    	movq   QWORD PTR [rsp+0x8],xmm4
  00dcc:    	movq   QWORD PTR [rsp+0x10],xmm5
  00dd2:    	movq   QWORD PTR [rsp+0x18],xmm6
  00dd8:    	movq   QWORD PTR [rsp+0x20],xmm7
  00dde: 34 	movabs rax,0x563437ed0590
  00de8:    	call   rax
  00dea:    	movq   xmm3,QWORD PTR [rsp]
  00def:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00df5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00dfb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e01:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e07:    	add    rsp,0x30
  00e0b: ff 	mov    QWORD PTR [rbp-0x98],rax
:00072 
:00074 %13 = %14.call y()                   [Vec]
  00e12: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e19: 00 	test   rdi,0x7
  00e20:    	jne    0x2f6f6
  00e26:    	cmp    DWORD PTR [rdi+0x4],0x28
  00e2a:    	jne    0x2f6f6
  00e30: 26 	cmp    DWORD PTR [rip+0xfffffffffffd971a],0x26        # 0xfffda551
  00e37:    	jne    0x2f6f6
  00e3d:    	mov    esi,DWORD PTR [rip+0xbd9]        # 0x1a1c
  00e43:    	cmp    esi,0xffffffff
  00e46:    	je     0x2f72c
  00e4c:    	cmp    WORD PTR [rdi+0x2],0x3
  00e51:    	jne    0xe6a
  00e57:    	cmp    esi,0x6
  00e5a:    	jge    0xe6a
  00e60:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e65:    	jmp    0xeb8
  00e6a:    	sub    rsp,0x30
  00e6e:    	movq   QWORD PTR [rsp],xmm3
  00e73:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e79:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e7f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e85:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e8b: 34 	movabs rax,0x563437ed0590
  00e95:    	call   rax
  00e97:    	movq   xmm3,QWORD PTR [rsp]
  00e9c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ea2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ea8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00eae:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00eb4:    	add    rsp,0x30
  00eb8: ff 	mov    QWORD PTR [rbp-0x90],rax
:00075 
:00077 %13 = %13 * %7                       [Float][Float]
  00ebf: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00ec6: 00 	test   rdi,0x1
  00ecd:    	jne    0x2f797
  00ed3: 00 	test   rdi,0x2
  00eda:    	je     0xf16
  00ee0:    	xorps  xmm2,xmm2
  00ee3: 00 	movabs rax,0x8000000000000002
  00eed:    	cmp    rdi,rax
  00ef0:    	je     0xf28
  00ef6:    	mov    rax,rdi
  00ef9:    	sar    rax,0x3f
  00efd:    	add    rax,0x2
  00f01:    	and    rdi,0xfffffffffffffffc
  00f05:    	or     rdi,rax
  00f08:    	rol    rdi,0x3d
  00f0c:    	movq   xmm2,rdi
  00f11:    	jmp    0xf28
  00f16:    	call   0xfffd79ec
  00f1b:    	test   rax,rax
  00f1e:    	je     0x2f797
  00f24:    	movq   xmm2,xmm0
  00f28:    	mulsd  xmm2,xmm3
:00078 %12 = %12 + %13                      [Float][Float]
  00f2c: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00f33: 00 	test   rdi,0x1
  00f3a:    	jne    0x2f7cd
  00f40: 00 	test   rdi,0x2
  00f47:    	je     0xf84
  00f4d:    	xorps  xmm8,xmm8
  00f51: 00 	movabs rax,0x8000000000000002
  00f5b:    	cmp    rdi,rax
  00f5e:    	je     0xf97
  00f64:    	mov    rax,rdi
  00f67:    	sar    rax,0x3f
  00f6b:    	add    rax,0x2
  00f6f:    	and    rdi,0xfffffffffffffffc
  00f73:    	or     rdi,rax
  00f76:    	rol    rdi,0x3d
  00f7a:    	movq   xmm8,rdi
  00f7f:    	jmp    0xf97
  00f84:    	call   0xfffd79ec
  00f89:    	test   rax,rax
  00f8c:    	je     0x2f7cd
  00f92:    	movq   xmm8,xmm0
  00f97:    	addsd  xmm8,xmm2
:00079 %14 = %1.call org()                  [Ray]
  00f9c:    	mov    rdi,QWORD PTR [rbp-0x30]
  00fa0: 00 	test   rdi,0x7
  00fa7:    	jne    0x2f813
  00fad:    	cmp    DWORD PTR [rdi+0x4],0x2e
  00fb1:    	jne    0x2f813
  00fb7: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9593],0x26        # 0xfffda551
  00fbe:    	jne    0x2f813
  00fc4:    	mov    esi,DWORD PTR [rip+0xa5a]        # 0x1a24
  00fca:    	cmp    esi,0xffffffff
  00fcd:    	je     0x2f86a
  00fd3:    	cmp    WORD PTR [rdi+0x2],0x3
  00fd8:    	jne    0xff1
  00fde:    	cmp    esi,0x6
  00fe1:    	jge    0xff1
  00fe7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00fec:    	jmp    0x1059
  00ff1:    	sub    rsp,0x40
  00ff5:    	movq   QWORD PTR [rsp],xmm2
  00ffa:    	movq   QWORD PTR [rsp+0x8],xmm3
  01000:    	movq   QWORD PTR [rsp+0x10],xmm4
  01006:    	movq   QWORD PTR [rsp+0x18],xmm5
  0100c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01012:    	movq   QWORD PTR [rsp+0x28],xmm7
  01018: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0101f: 34 	movabs rax,0x563437ed0590
  01029:    	call   rax
  0102b:    	movq   xmm2,QWORD PTR [rsp]
  01030:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01036:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0103c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01042:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01048:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0104e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01055:    	add    rsp,0x40
  01059: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 
:00082 %13 = %14.call z()                   [Vec]
  01060: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01067: 00 	test   rdi,0x7
  0106e:    	jne    0x2f8ef
  01074:    	cmp    DWORD PTR [rdi+0x4],0x28
  01078:    	jne    0x2f8ef
  0107e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd94cc],0x26        # 0xfffda551
  01085:    	jne    0x2f8ef
  0108b:    	mov    esi,DWORD PTR [rip+0x99b]        # 0x1a2c
  01091:    	cmp    esi,0xffffffff
  01094:    	je     0x2f936
  0109a:    	cmp    WORD PTR [rdi+0x2],0x3
  0109f:    	jne    0x10b8
  010a5:    	cmp    esi,0x6
  010a8:    	jge    0x10b8
  010ae:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  010b3:    	jmp    0x1114
  010b8:    	sub    rsp,0x30
  010bc:    	movq   QWORD PTR [rsp],xmm3
  010c1:    	movq   QWORD PTR [rsp+0x8],xmm4
  010c7:    	movq   QWORD PTR [rsp+0x10],xmm5
  010cd:    	movq   QWORD PTR [rsp+0x18],xmm6
  010d3:    	movq   QWORD PTR [rsp+0x20],xmm7
  010d9: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  010e0: 34 	movabs rax,0x563437ed0590
  010ea:    	call   rax
  010ec:    	movq   xmm3,QWORD PTR [rsp]
  010f1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010f7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010fd:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01103:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01109: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01110:    	add    rsp,0x30
  01114: ff 	mov    QWORD PTR [rbp-0x90],rax
:00083 
:00085 %15 = %1.call dir()                  [Ray]
  0111b:    	mov    rdi,QWORD PTR [rbp-0x30]
  0111f: 00 	test   rdi,0x7
  01126:    	jne    0x2f9af
  0112c:    	cmp    DWORD PTR [rdi+0x4],0x2e
  01130:    	jne    0x2f9af
  01136: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9414],0x26        # 0xfffda551
  0113d:    	jne    0x2f9af
  01143:    	mov    esi,DWORD PTR [rip+0x8eb]        # 0x1a34
  01149:    	cmp    esi,0xffffffff
  0114c:    	je     0x2f9f6
  01152:    	cmp    WORD PTR [rdi+0x2],0x3
  01157:    	jne    0x1170
  0115d:    	cmp    esi,0x6
  01160:    	jge    0x1170
  01166:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0116b:    	jmp    0x11cc
  01170:    	sub    rsp,0x30
  01174:    	movq   QWORD PTR [rsp],xmm3
  01179:    	movq   QWORD PTR [rsp+0x8],xmm4
  0117f:    	movq   QWORD PTR [rsp+0x10],xmm5
  01185:    	movq   QWORD PTR [rsp+0x18],xmm6
  0118b:    	movq   QWORD PTR [rsp+0x20],xmm7
  01191: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01198: 34 	movabs rax,0x563437ed0590
  011a2:    	call   rax
  011a4:    	movq   xmm3,QWORD PTR [rsp]
  011a9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011af:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011b5:    	movq   xmm6,QWORD PTR [rsp+0x18]
  011bb:    	movq   xmm7,QWORD PTR [rsp+0x20]
  011c1: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  011c8:    	add    rsp,0x30
  011cc: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00086 
:00088 %14 = %15.call z()                   [Vec]
  011d3: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  011da: 00 	test   rdi,0x7
  011e1:    	jne    0x2fa6f
  011e7:    	cmp    DWORD PTR [rdi+0x4],0x28
  011eb:    	jne    0x2fa6f
  011f1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9359],0x26        # 0xfffda551
  011f8:    	jne    0x2fa6f
  011fe:    	mov    esi,DWORD PTR [rip+0x838]        # 0x1a3c
  01204:    	cmp    esi,0xffffffff
  01207:    	je     0x2fab6
  0120d:    	cmp    WORD PTR [rdi+0x2],0x3
  01212:    	jne    0x122b
  01218:    	cmp    esi,0x6
  0121b:    	jge    0x122b
  01221:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01226:    	jmp    0x1287
  0122b:    	sub    rsp,0x30
  0122f:    	movq   QWORD PTR [rsp],xmm3
  01234:    	movq   QWORD PTR [rsp+0x8],xmm4
  0123a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01240:    	movq   QWORD PTR [rsp+0x18],xmm6
  01246:    	movq   QWORD PTR [rsp+0x20],xmm7
  0124c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01253: 34 	movabs rax,0x563437ed0590
  0125d:    	call   rax
  0125f:    	movq   xmm3,QWORD PTR [rsp]
  01264:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0126a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01270:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01276:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0127c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01283:    	add    rsp,0x30
  01287: ff 	mov    QWORD PTR [rbp-0x98],rax
:00089 
:00091 %14 = %14 * %7                       [Float][Float]
  0128e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01295: 00 	test   rdi,0x1
  0129c:    	jne    0x2fb2f
  012a2: 00 	test   rdi,0x2
  012a9:    	je     0x12e5
  012af:    	xorps  xmm2,xmm2
  012b2: 00 	movabs rax,0x8000000000000002
  012bc:    	cmp    rdi,rax
  012bf:    	je     0x12f7
  012c5:    	mov    rax,rdi
  012c8:    	sar    rax,0x3f
  012cc:    	add    rax,0x2
  012d0:    	and    rdi,0xfffffffffffffffc
  012d4:    	or     rdi,rax
  012d7:    	rol    rdi,0x3d
  012db:    	movq   xmm2,rdi
  012e0:    	jmp    0x12f7
  012e5:    	call   0xfffd79ec
  012ea:    	test   rax,rax
  012ed:    	je     0x2fb2f
  012f3:    	movq   xmm2,xmm0
  012f7:    	mulsd  xmm2,xmm3
:00092 %13 = %13 + %14                      [Float][Float]
  012fb: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01302: 00 	test   rdi,0x1
  01309:    	jne    0x2fb76
  0130f: 00 	test   rdi,0x2
  01316:    	je     0x1353
  0131c:    	xorps  xmm9,xmm9
  01320: 00 	movabs rax,0x8000000000000002
  0132a:    	cmp    rdi,rax
  0132d:    	je     0x1366
  01333:    	mov    rax,rdi
  01336:    	sar    rax,0x3f
  0133a:    	add    rax,0x2
  0133e:    	and    rdi,0xfffffffffffffffc
  01342:    	or     rdi,rax
  01345:    	rol    rdi,0x3d
  01349:    	movq   xmm9,rdi
  0134e:    	jmp    0x1366
  01353:    	call   0xfffd79ec
  01358:    	test   rax,rax
  0135b:    	je     0x2fb76
  01361:    	movq   xmm9,xmm0
  01366:    	addsd  xmm9,xmm2
:00093 %9 = %10.call new(%11; 3)            [#<Class:Vec>]
  0136b:    	movq   xmm0,xmm4
  0136f:    	call   0xfffd7adf
  01374:    	mov    QWORD PTR [rbp-0x80],rax
  01378:    	movq   xmm0,xmm8
  0137d:    	call   0xfffd7adf
  01382: ff 	mov    QWORD PTR [rbp-0x88],rax
  01389:    	movq   xmm0,xmm9
  0138e:    	call   0xfffd7adf
  01393: ff 	mov    QWORD PTR [rbp-0x90],rax
  0139a:    	mov    rdi,QWORD PTR [rbp-0x78]
  0139e: 00 	test   rdi,0x7
  013a5:    	jne    0x2fbcd
  013ab:    	cmp    DWORD PTR [rdi+0x4],0x29
  013af:    	jne    0x2fbcd
  013b5: 26 	cmp    DWORD PTR [rip+0xfffffffffffd9195],0x26        # 0xfffda551
  013bc:    	jne    0x2fbcd
  013c2: 00 	mov    r9,0x0
  013c9:    	sub    rsp,0x40
  013cd:    	movq   QWORD PTR [rsp],xmm2
  013d2:    	movq   QWORD PTR [rsp+0x8],xmm3
  013d8:    	movq   QWORD PTR [rsp+0x10],xmm4
  013de:    	movq   QWORD PTR [rsp+0x18],xmm5
  013e4:    	movq   QWORD PTR [rsp+0x20],xmm6
  013ea:    	movq   QWORD PTR [rsp+0x28],xmm7
  013f0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  013f7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  013fe:    	mov    rdx,rdi
  01401: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0140a:    	mov    QWORD PTR [rsp-0x38],rcx
  0140f:    	mov    rax,QWORD PTR [rbx]
  01412:    	lea    rdi,[rsp-0x18]
  01417:    	mov    QWORD PTR [rdi],rax
  0141a:    	mov    QWORD PTR [rbx],rdi
  0141d:    	lea    rcx,[rbp-0x80]
  01421: 00 	mov    r8,0x3
  01428:    	call   0x2fc06
  0142d:    	lea    rdi,[rbp-0x8]
  01431:    	mov    QWORD PTR [rbx],rdi
  01434:    	movq   xmm2,QWORD PTR [rsp]
  01439:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0143f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01445:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0144b:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01451:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01457: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0145e: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01465:    	add    rsp,0x40
  01469: 34 	movabs r13,0x563439853ca0
  01473:    	test   rax,rax
  01476:    	je     0xfffd7993
  0147c:    	mov    QWORD PTR [rbp-0x70],rax
:00094 
:00096 _ = %2.call pl=(%9; 1)               [Isect]
  01480:    	mov    rdi,QWORD PTR [rbp-0x38]
  01484: 00 	test   rdi,0x7
  0148b:    	jne    0x2fc38
  01491:    	cmp    DWORD PTR [rdi+0x4],0x30
  01495:    	jne    0x2fc38
  0149b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd90af],0x26        # 0xfffda551
  014a2:    	jne    0x2fc38
  014a8:    	mov    esi,DWORD PTR [rip+0x596]        # 0x1a44
  014ae:    	cmp    esi,0xffffffff
  014b1:    	je     0x2fc71
  014b7:    	cmp    WORD PTR [rdi+0x2],0x3
  014bc:    	jne    0x14d9
  014c2:    	cmp    esi,0x6
  014c5:    	jge    0x14d9
  014cb:    	mov    rax,QWORD PTR [rbp-0x70]
  014cf:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  014d4:    	jmp    0x1566
  014d9:    	sub    rsp,0x40
  014dd:    	movq   QWORD PTR [rsp],xmm2
  014e2:    	movq   QWORD PTR [rsp+0x8],xmm3
  014e8:    	movq   QWORD PTR [rsp+0x10],xmm4
  014ee:    	movq   QWORD PTR [rsp+0x18],xmm5
  014f4:    	movq   QWORD PTR [rsp+0x20],xmm6
  014fa:    	movq   QWORD PTR [rsp+0x28],xmm7
  01500: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01507: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0150e:    	mov    rdx,QWORD PTR [rbp-0x70]
  01512: 34 	movabs rax,0x563437ed0810
  0151c:    	call   rax
  0151e:    	movq   xmm2,QWORD PTR [rsp]
  01523:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01529:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0152f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01535:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0153b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01541: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01548: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0154f:    	add    rsp,0x40
  01553: 34 	movabs r13,0x563439853cd0
  0155d:    	test   rax,rax
  01560:    	je     0xfffd7993
:00097 
:00099 %9 = %2.call pl()                    [Isect]
  01566:    	mov    rdi,QWORD PTR [rbp-0x38]
  0156a: 00 	test   rdi,0x7
  01571:    	jne    0x2fd0b
  01577:    	cmp    DWORD PTR [rdi+0x4],0x30
  0157b:    	jne    0x2fd0b
  01581: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8fc9],0x26        # 0xfffda551
  01588:    	jne    0x2fd0b
  0158e:    	mov    esi,DWORD PTR [rip+0x4b8]        # 0x1a4c
  01594:    	cmp    esi,0xffffffff
  01597:    	je     0x2fd44
  0159d:    	cmp    WORD PTR [rdi+0x2],0x3
  015a2:    	jne    0x15bb
  015a8:    	cmp    esi,0x6
  015ab:    	jge    0x15bb
  015b1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  015b6:    	jmp    0x1631
  015bb:    	sub    rsp,0x40
  015bf:    	movq   QWORD PTR [rsp],xmm2
  015c4:    	movq   QWORD PTR [rsp+0x8],xmm3
  015ca:    	movq   QWORD PTR [rsp+0x10],xmm4
  015d0:    	movq   QWORD PTR [rsp+0x18],xmm5
  015d6:    	movq   QWORD PTR [rsp+0x20],xmm6
  015dc:    	movq   QWORD PTR [rsp+0x28],xmm7
  015e2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  015e9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  015f0: 34 	movabs rax,0x563437ed0590
  015fa:    	call   rax
  015fc:    	movq   xmm2,QWORD PTR [rsp]
  01601:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01607:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0160d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01613:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01619:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0161f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01626: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0162d:    	add    rsp,0x40
  01631:    	mov    QWORD PTR [rbp-0x70],rax
:00100 
:00102 %10 = @center: Sphere[IvarId(0)]
  01635:    	mov    rdi,QWORD PTR [rbp-0x28]
  01639:    	mov    rax,QWORD PTR [rdi+0x10]
  0163d:    	mov    QWORD PTR [rbp-0x78],rax
:00103 %8 = %9.call vsub(%10; 1)            [Vec]
  01641:    	mov    rdi,QWORD PTR [rbp-0x70]
  01645: 00 	test   rdi,0x7
  0164c:    	jne    0x2fdd7
  01652:    	cmp    DWORD PTR [rdi+0x4],0x28
  01656:    	jne    0x2fdd7
  0165c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8eee],0x26        # 0xfffda551
  01663:    	jne    0x2fdd7
  01669:    	sub    rsp,0x40
  0166d:    	movq   QWORD PTR [rsp],xmm2
  01672:    	movq   QWORD PTR [rsp+0x8],xmm3
  01678:    	movq   QWORD PTR [rsp+0x10],xmm4
  0167e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01684:    	movq   QWORD PTR [rsp+0x20],xmm6
  0168a:    	movq   QWORD PTR [rsp+0x28],xmm7
  01690: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01697: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0169e: 00 	mov    QWORD PTR [rsp-0x20],0x0
  016a7:    	mov    QWORD PTR [rsp-0x38],rcx
  016ac:    	mov    rax,QWORD PTR [rbx]
  016af:    	lea    rdi,[rsp-0x18]
  016b4:    	mov    QWORD PTR [rdi],rax
  016b7:    	mov    QWORD PTR [rbx],rdi
  016ba:    	mov    rax,QWORD PTR [rbp-0x70]
  016be:    	mov    QWORD PTR [rsp-0x38],rax
  016c3: 00 	mov    rdi,0x1
  016ca:    	mov    rax,QWORD PTR [rbp-0x78]
  016ce:    	mov    QWORD PTR [rsp-0x40],rax
  016d3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  016dc: 08 	movabs rax,0x1000800000040
  016e6:    	mov    QWORD PTR [rsp-0x28],rax
  016eb: 34 	movabs r13,0x563439872ba0
  016f5:    	call   0xfffdb224
  016fa:    	lea    rdi,[rbp-0x8]
  016fe:    	mov    QWORD PTR [rbx],rdi
  01701:    	movq   xmm2,QWORD PTR [rsp]
  01706:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0170c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01712:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01718:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0171e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01724: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0172b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01732:    	add    rsp,0x40
  01736: 34 	movabs r13,0x563439853d40
  01740:    	test   rax,rax
  01743:    	je     0xfffd7993
  01749:    	mov    QWORD PTR [rbp-0x68],rax
:00104 
:00106 %9 = %8.call vnormalize()            [Vec]
  0174d:    	mov    rdi,QWORD PTR [rbp-0x68]
  01751: 00 	test   rdi,0x7
  01758:    	jne    0x2fe10
  0175e:    	cmp    DWORD PTR [rdi+0x4],0x28
  01762:    	jne    0x2fe10
  01768: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8de2],0x26        # 0xfffda551
  0176f:    	jne    0x2fe10
  01775:    	sub    rsp,0x40
  01779:    	movq   QWORD PTR [rsp],xmm2
  0177e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01784:    	movq   QWORD PTR [rsp+0x10],xmm4
  0178a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01790:    	movq   QWORD PTR [rsp+0x20],xmm6
  01796:    	movq   QWORD PTR [rsp+0x28],xmm7
  0179c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  017a3: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  017aa: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017b3:    	mov    QWORD PTR [rsp-0x38],rcx
  017b8:    	mov    rax,QWORD PTR [rbx]
  017bb:    	lea    rdi,[rsp-0x18]
  017c0:    	mov    QWORD PTR [rdi],rax
  017c3:    	mov    QWORD PTR [rbx],rdi
  017c6:    	mov    rax,QWORD PTR [rbp-0x68]
  017ca:    	mov    QWORD PTR [rsp-0x38],rax
  017cf: 00 	mov    rdi,0x0
  017d6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  017df: 07 	movabs rax,0x1000700000044
  017e9:    	mov    QWORD PTR [rsp-0x28],rax
  017ee: 34 	movabs r13,0x5634398639e0
  017f8:    	call   0xfffdae8a
  017fd:    	lea    rdi,[rbp-0x8]
  01801:    	mov    QWORD PTR [rbx],rdi
  01804:    	movq   xmm2,QWORD PTR [rsp]
  01809:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0180f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01815:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0181b:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01821:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01827: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0182e: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01835:    	add    rsp,0x40
  01839: 34 	movabs r13,0x563439853d70
  01843:    	test   rax,rax
  01846:    	je     0xfffd7993
  0184c:    	mov    QWORD PTR [rbp-0x70],rax
:00107 
:00109 _ = %2.call n=(%9; 1)                [Isect]
  01850:    	mov    rdi,QWORD PTR [rbp-0x38]
  01854: 00 	test   rdi,0x7
  0185b:    	jne    0x2fe49
  01861:    	cmp    DWORD PTR [rdi+0x4],0x30
  01865:    	jne    0x2fe49
  0186b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8cdf],0x26        # 0xfffda551
  01872:    	jne    0x2fe49
  01878:    	mov    esi,DWORD PTR [rip+0x1d6]        # 0x1a54
  0187e:    	cmp    esi,0xffffffff
  01881:    	je     0x2fe82
  01887:    	cmp    WORD PTR [rdi+0x2],0x3
  0188c:    	jne    0x18a9
  01892:    	cmp    esi,0x6
  01895:    	jge    0x18a9
  0189b:    	mov    rax,QWORD PTR [rbp-0x70]
  0189f:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  018a4:    	jmp    0x1936
  018a9:    	sub    rsp,0x40
  018ad:    	movq   QWORD PTR [rsp],xmm2
  018b2:    	movq   QWORD PTR [rsp+0x8],xmm3
  018b8:    	movq   QWORD PTR [rsp+0x10],xmm4
  018be:    	movq   QWORD PTR [rsp+0x18],xmm5
  018c4:    	movq   QWORD PTR [rsp+0x20],xmm6
  018ca:    	movq   QWORD PTR [rsp+0x28],xmm7
  018d0: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  018d7: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  018de:    	mov    rdx,QWORD PTR [rbp-0x70]
  018e2: 34 	movabs rax,0x563437ed0810
  018ec:    	call   rax
  018ee:    	movq   xmm2,QWORD PTR [rsp]
  018f3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  018f9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  018ff:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01905:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0190b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01911: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01918: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0191f:    	add    rsp,0x40
  01923: 34 	movabs r13,0x563439853da0
  0192d:    	test   rax,rax
  01930:    	je     0xfffd7993
:00110 
:00112 br =>:00113
  01936:    	jmp    0x2ffd6
:00113 br =>:00114
  0193b:    	jmp    0x30068
:00114 %9 = nil
  01940: 00 	mov    QWORD PTR [rbp-0x70],0x4
:00115 ret %9
  01948:    	mov    rax,QWORD PTR [rbp-0x70]
  0194c:    	leave  
  0194d:    	ret    
==> start whole compile: otherBasis FuncId(60) self_class:Scene start:[00000] bytecode:0x5634398723f0
<== finished compile. elapsed:158.2µs
offset:Pos(172288) code: 7615 bytes  data: 373 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	je     0x4a
  00014:    	jl     0x1f
  0001a:    	jmp    0x2e643
  0001f:    	jmp    0x2e643
  00024:    	mov    eax,0x2
  00029:    	sub    eax,edx
  0002b:    	test   rax,rax
  0002e:    	je     0x4a
  00034:    	lea    rdi,[rbp-0x40]
  00038: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00040:    	sub    rax,0x1
  00044:    	jne    0x38
  0004a: 00 	mov    rax,0x4
  00051:    	mov    QWORD PTR [rbp-0x40],rax
  00055:    	mov    QWORD PTR [rbp-0x48],rax
  00059:    	mov    QWORD PTR [rbp-0x50],rax
  0005d:    	mov    QWORD PTR [rbp-0x58],rax
  00061:    	mov    QWORD PTR [rbp-0x60],rax
  00065:    	mov    QWORD PTR [rbp-0x68],rax
  00069:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2e652
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x32
  0007e:    	jne    0x2e652
:00000 init_method reg:9 arg:2 pos:2 req:2 stack_offset:7
:00001 %3 = 2: i32
  00084: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00002 %5 = const[Vec]                      [Vec]
  0008c: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd8a6d]        # 0xfffd8b00
  00093: 00 	cmp    rax,QWORD PTR [rip+0x1d36]        # 0x1dd0
  0009a:    	jne    0x2e661
  000a0: 00 	mov    rax,QWORD PTR [rip+0x1d19]        # 0x1dc0
  000a7:    	mov    QWORD PTR [rbp-0x50],rax
:00003 %6 = %2.call x()                     [Vec]
  000ab:    	mov    rdi,QWORD PTR [rbp-0x38]
  000af: 00 	test   rdi,0x7
  000b6:    	jne    0x2e6a7
  000bc:    	cmp    DWORD PTR [rdi+0x4],0x28
  000c0:    	jne    0x2e6a7
  000c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8a2c],0x26        # 0xfffd8af9
  000cd:    	jne    0x2e6a7
  000d3:    	mov    esi,DWORD PTR [rip+0x1d03]        # 0x1ddc
  000d9:    	cmp    esi,0xffffffff
  000dc:    	je     0x2e6b6
  000e2:    	cmp    WORD PTR [rdi+0x2],0x3
  000e7:    	jne    0x100
  000ed:    	cmp    esi,0x6
  000f0:    	jge    0x100
  000f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000fb:    	jmp    0x10c
  00100: 34 	movabs rax,0x563437ed0590
  0010a:    	call   rax
  0010c:    	mov    QWORD PTR [rbp-0x58],rax
:00004 
:00006 %7 = %2.call y()                     [Vec]
  00110:    	mov    rdi,QWORD PTR [rbp-0x38]
  00114: 00 	test   rdi,0x7
  0011b:    	jne    0x2e6df
  00121:    	cmp    DWORD PTR [rdi+0x4],0x28
  00125:    	jne    0x2e6df
  0012b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd89c7],0x26        # 0xfffd8af9
  00132:    	jne    0x2e6df
  00138:    	mov    esi,DWORD PTR [rip+0x1ca6]        # 0x1de4
  0013e:    	cmp    esi,0xffffffff
  00141:    	je     0x2e6ee
  00147:    	cmp    WORD PTR [rdi+0x2],0x3
  0014c:    	jne    0x165
  00152:    	cmp    esi,0x6
  00155:    	jge    0x165
  0015b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00160:    	jmp    0x171
  00165: 34 	movabs rax,0x563437ed0590
  0016f:    	call   rax
  00171:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = %2.call z()                     [Vec]
  00175:    	mov    rdi,QWORD PTR [rbp-0x38]
  00179: 00 	test   rdi,0x7
  00180:    	jne    0x2e717
  00186:    	cmp    DWORD PTR [rdi+0x4],0x28
  0018a:    	jne    0x2e717
  00190: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8962],0x26        # 0xfffd8af9
  00197:    	jne    0x2e717
  0019d:    	mov    esi,DWORD PTR [rip+0x1c49]        # 0x1dec
  001a3:    	cmp    esi,0xffffffff
  001a6:    	je     0x2e726
  001ac:    	cmp    WORD PTR [rdi+0x2],0x3
  001b1:    	jne    0x1ca
  001b7:    	cmp    esi,0x6
  001ba:    	jge    0x1ca
  001c0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001c5:    	jmp    0x1d6
  001ca: 34 	movabs rax,0x563437ed0590
  001d4:    	call   rax
  001d6:    	mov    QWORD PTR [rbp-0x68],rax
:00010 
:00012 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  001da:    	mov    rdi,QWORD PTR [rbp-0x50]
  001de: 00 	test   rdi,0x7
  001e5:    	jne    0x2e74f
  001eb:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ef:    	jne    0x2e74f
  001f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffd88fd],0x26        # 0xfffd8af9
  001fc:    	jne    0x2e74f
  00202: 00 	mov    r9,0x0
  00209:    	mov    rdx,rdi
  0020c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00215:    	mov    QWORD PTR [rsp-0x38],rcx
  0021a:    	mov    rax,QWORD PTR [rbx]
  0021d:    	lea    rdi,[rsp-0x18]
  00222:    	mov    QWORD PTR [rdi],rax
  00225:    	mov    QWORD PTR [rbx],rdi
  00228:    	lea    rcx,[rbp-0x58]
  0022c: 00 	mov    r8,0x3
  00233:    	call   0x2e75e
  00238:    	lea    rdi,[rbp-0x8]
  0023c:    	mov    QWORD PTR [rbx],rdi
  0023f: 34 	movabs r13,0x5634398724d0
  00249:    	test   rax,rax
  0024c:    	je     0xfffd5f3b
  00252:    	mov    QWORD PTR [rbp-0x48],rax
:00013 
:00015 %1:.[%3:] = %4
  00256:    	mov    rdx,QWORD PTR [rbp-0x30]
  0025a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0025e:    	mov    r8,QWORD PTR [rbp-0x48]
  00262:    	mov    rdi,rbx
  00265:    	mov    rsi,r12
  00268: 34 	movabs rax,0x563437f474a0
  00272:    	call   rax
  00274: 34 	movabs r13,0x5634398724f0
  0027e:    	test   rax,rax
  00281:    	je     0xfffd5f3b
:00016 %3 = 1: i32
  00287: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00017 %5 = const[Vec]                      [Vec]
  0028f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd886a]        # 0xfffd8b00
  00296: 00 	cmp    rax,QWORD PTR [rip+0x1b63]        # 0x1e00
  0029d:    	jne    0x2e790
  002a3: 00 	mov    rax,QWORD PTR [rip+0x1b46]        # 0x1df0
  002aa:    	mov    QWORD PTR [rbp-0x50],rax
:00018 %6 = literal[0.0]
  002ae: 00 	movq   xmm2,QWORD PTR [rip+0x1b5a]        # 0x1e10
  002b6: 00 	movabs rax,0x8000000000000002
  002c0:    	mov    QWORD PTR [rbp-0x58],rax
:00019 %7 = literal[0.0]
  002c4: 00 	movq   xmm3,QWORD PTR [rip+0x1b54]        # 0x1e20
  002cc: 00 	movabs rax,0x8000000000000002
  002d6:    	mov    QWORD PTR [rbp-0x60],rax
:00020 %8 = literal[0.0]
  002da: 00 	movq   xmm4,QWORD PTR [rip+0x1b4e]        # 0x1e30
  002e2: 00 	movabs rax,0x8000000000000002
  002ec:    	mov    QWORD PTR [rbp-0x68],rax
:00021 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002f0:    	mov    rdi,QWORD PTR [rbp-0x50]
  002f4: 00 	test   rdi,0x7
  002fb:    	jne    0x2e7d6
  00301:    	cmp    DWORD PTR [rdi+0x4],0x29
  00305:    	jne    0x2e7d6
  0030b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd87e7],0x26        # 0xfffd8af9
  00312:    	jne    0x2e7d6
  00318: 00 	mov    r9,0x0
  0031f:    	sub    rsp,0x20
  00323:    	movq   QWORD PTR [rsp],xmm2
  00328:    	movq   QWORD PTR [rsp+0x8],xmm3
  0032e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00334:    	mov    rdx,rdi
  00337: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00340:    	mov    QWORD PTR [rsp-0x38],rcx
  00345:    	mov    rax,QWORD PTR [rbx]
  00348:    	lea    rdi,[rsp-0x18]
  0034d:    	mov    QWORD PTR [rdi],rax
  00350:    	mov    QWORD PTR [rbx],rdi
  00353:    	lea    rcx,[rbp-0x58]
  00357: 00 	mov    r8,0x3
  0035e:    	call   0x2e7e5
  00363:    	lea    rdi,[rbp-0x8]
  00367:    	mov    QWORD PTR [rbx],rdi
  0036a:    	movq   xmm2,QWORD PTR [rsp]
  0036f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00375:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0037b:    	add    rsp,0x20
  0037f: 34 	movabs r13,0x563439872560
  00389:    	test   rax,rax
  0038c:    	je     0xfffd5f3b
  00392:    	mov    QWORD PTR [rbp-0x48],rax
:00022 
:00024 %1:.[%3:] = %4
  00396:    	sub    rsp,0x20
  0039a:    	movq   QWORD PTR [rsp],xmm2
  0039f:    	movq   QWORD PTR [rsp+0x8],xmm3
  003a5:    	movq   QWORD PTR [rsp+0x10],xmm4
  003ab:    	mov    rdx,QWORD PTR [rbp-0x30]
  003af:    	mov    rcx,QWORD PTR [rbp-0x40]
  003b3:    	mov    r8,QWORD PTR [rbp-0x48]
  003b7:    	mov    rdi,rbx
  003ba:    	mov    rsi,r12
  003bd: 34 	movabs rax,0x563437f474a0
  003c7:    	call   rax
  003c9:    	movq   xmm2,QWORD PTR [rsp]
  003ce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003d4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003da:    	add    rsp,0x20
  003de: 34 	movabs r13,0x563439872580
  003e8:    	test   rax,rax
  003eb:    	je     0xfffd5f3b
:00025 %3 = %2.call x()                     [Vec]
  003f1:    	mov    rdi,QWORD PTR [rbp-0x38]
  003f5: 00 	test   rdi,0x7
  003fc:    	jne    0x2e817
  00402:    	cmp    DWORD PTR [rdi+0x4],0x28
  00406:    	jne    0x2e817
  0040c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd86e6],0x26        # 0xfffd8af9
  00413:    	jne    0x2e817
  00419:    	mov    esi,DWORD PTR [rip+0x1a1d]        # 0x1e3c
  0041f:    	cmp    esi,0xffffffff
  00422:    	je     0x2e826
  00428:    	cmp    WORD PTR [rdi+0x2],0x3
  0042d:    	jne    0x446
  00433:    	cmp    esi,0x6
  00436:    	jge    0x446
  0043c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00441:    	jmp    0x47c
  00446:    	sub    rsp,0x20
  0044a:    	movq   QWORD PTR [rsp],xmm2
  0044f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00455:    	movq   QWORD PTR [rsp+0x10],xmm4
  0045b: 34 	movabs rax,0x563437ed0590
  00465:    	call   rax
  00467:    	movq   xmm2,QWORD PTR [rsp]
  0046c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00472:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00478:    	add    rsp,0x20
  0047c:    	mov    QWORD PTR [rbp-0x40],rax
:00026 
:00028 %4 = literal[0.6]
  00480: 00 	movq   xmm5,QWORD PTR [rip+0x19b8]        # 0x1e40
  00488: 99 	movabs rax,0xff1999999999999a
  00492:    	mov    QWORD PTR [rbp-0x48],rax
:00029 _%3 = %3 < %4                        [Float][Float]
:00030 condnotbr _%3 =>:00044
  00496:    	mov    rdi,QWORD PTR [rbp-0x40]
  0049a: 00 	test   rdi,0x1
  004a1:    	jne    0x2e879
  004a7: 00 	test   rdi,0x2
  004ae:    	je     0x4ea
  004b4:    	xorps  xmm6,xmm6
  004b7: 00 	movabs rax,0x8000000000000002
  004c1:    	cmp    rdi,rax
  004c4:    	je     0x4fc
  004ca:    	mov    rax,rdi
  004cd:    	sar    rax,0x3f
  004d1:    	add    rax,0x2
  004d5:    	and    rdi,0xfffffffffffffffc
  004d9:    	or     rdi,rax
  004dc:    	rol    rdi,0x3d
  004e0:    	movq   xmm6,rdi
  004e5:    	jmp    0x4fc
  004ea:    	call   0xfffd5f94
  004ef:    	test   rax,rax
  004f2:    	je     0x2e879
  004f8:    	movq   xmm6,xmm0
  004fc:    	ucomisd xmm6,xmm5
  00500:    	jae    0x2e97a
:00031 %3 = %2.call x()                     [Vec]
  00506:    	mov    rdi,QWORD PTR [rbp-0x38]
  0050a: 00 	test   rdi,0x7
  00511:    	jne    0x2e888
  00517:    	cmp    DWORD PTR [rdi+0x4],0x28
  0051b:    	jne    0x2e888
  00521: 26 	cmp    DWORD PTR [rip+0xfffffffffffd85d1],0x26        # 0xfffd8af9
  00528:    	jne    0x2e888
  0052e:    	mov    esi,DWORD PTR [rip+0x1918]        # 0x1e4c
  00534:    	cmp    esi,0xffffffff
  00537:    	je     0x2e897
  0053d:    	cmp    WORD PTR [rdi+0x2],0x3
  00542:    	jne    0x55b
  00548:    	cmp    esi,0x6
  0054b:    	jge    0x55b
  00551:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00556:    	jmp    0x59d
  0055b:    	sub    rsp,0x20
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576: 34 	movabs rax,0x563437ed0590
  00580:    	call   rax
  00582:    	movq   xmm2,QWORD PTR [rsp]
  00587:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0058d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00593:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00599:    	add    rsp,0x20
  0059d:    	mov    QWORD PTR [rbp-0x40],rax
:00032 
:00034 %4 = literal[-0.6]
  005a1: 00 	movq   xmm5,QWORD PTR [rip+0x18a7]        # 0x1e50
  005a9: 99 	movabs rax,0xff1999999999999e
  005b3:    	mov    QWORD PTR [rbp-0x48],rax
:00035 _%3 = %3 > %4                        [Float][Float]
:00036 condnotbr _%3 =>:00044
  005b7:    	mov    rdi,QWORD PTR [rbp-0x40]
  005bb: 00 	test   rdi,0x1
  005c2:    	jne    0x2e8f6
  005c8: 00 	test   rdi,0x2
  005cf:    	je     0x60b
  005d5:    	xorps  xmm6,xmm6
  005d8: 00 	movabs rax,0x8000000000000002
  005e2:    	cmp    rdi,rax
  005e5:    	je     0x61d
  005eb:    	mov    rax,rdi
  005ee:    	sar    rax,0x3f
  005f2:    	add    rax,0x2
  005f6:    	and    rdi,0xfffffffffffffffc
  005fa:    	or     rdi,rax
  005fd:    	rol    rdi,0x3d
  00601:    	movq   xmm6,rdi
  00606:    	jmp    0x61d
  0060b:    	call   0xfffd5f94
  00610:    	test   rax,rax
  00613:    	je     0x2e8f6
  00619:    	movq   xmm6,xmm0
  0061d:    	ucomisd xmm6,xmm5
  00621:    	jbe    0x2e993
:00037 %3 = 1: i32
  00627: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00038 %3 = %1.[%3]                         [Array][Integer]
  0062f:    	sub    rsp,0x20
  00633:    	movq   QWORD PTR [rsp],xmm2
  00638:    	movq   QWORD PTR [rsp+0x8],xmm3
  0063e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00644:    	movq   QWORD PTR [rsp+0x18],xmm5
  0064a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0064e:    	mov    rcx,QWORD PTR [rbp-0x40]
  00652:    	mov    rdi,rbx
  00655:    	mov    rsi,r12
  00658: 34 	movabs r8,0x563439872658
  00662: 34 	movabs rax,0x563437f47370
  0066c:    	call   rax
  0066e:    	movq   xmm2,QWORD PTR [rsp]
  00673:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00679:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0067f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00685:    	add    rsp,0x20
  00689: 34 	movabs r13,0x563439872660
  00693:    	test   rax,rax
  00696:    	je     0xfffd5f3b
  0069c:    	mov    QWORD PTR [rbp-0x40],rax
:00039 %4 = literal[1.0]
  006a0: 00 	movq   xmm5,QWORD PTR [rip+0x17b8]        # 0x1e60
  006a8: 00 	movabs rax,0xff80000000000002
  006b2:    	mov    QWORD PTR [rbp-0x48],rax
:00040 _ = %3.call x=(%4; 1)                [Vec]
  006b6:    	mov    rdi,QWORD PTR [rbp-0x40]
  006ba: 00 	test   rdi,0x7
  006c1:    	jne    0x2e905
  006c7:    	cmp    DWORD PTR [rdi+0x4],0x28
  006cb:    	jne    0x2e905
  006d1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd8421],0x26        # 0xfffd8af9
  006d8:    	jne    0x2e905
  006de:    	mov    esi,DWORD PTR [rip+0x1788]        # 0x1e6c
  006e4:    	cmp    esi,0xffffffff
  006e7:    	je     0x2e914
  006ed:    	cmp    WORD PTR [rdi+0x2],0x3
  006f2:    	jne    0x70f
  006f8:    	cmp    esi,0x6
  006fb:    	jge    0x70f
  00701:    	mov    rax,QWORD PTR [rbp-0x48]
  00705:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0070a:    	jmp    0x768
  0070f:    	sub    rsp,0x20
  00713:    	movq   QWORD PTR [rsp],xmm2
  00718:    	movq   QWORD PTR [rsp+0x8],xmm3
  0071e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00724:    	movq   QWORD PTR [rsp+0x18],xmm5
  0072a:    	mov    rdx,QWORD PTR [rbp-0x48]
  0072e: 34 	movabs rax,0x563437ed0810
  00738:    	call   rax
  0073a:    	movq   xmm2,QWORD PTR [rsp]
  0073f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00745:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0074b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00751:    	add    rsp,0x20
  00755: 34 	movabs r13,0x563439872690
  0075f:    	test   rax,rax
  00762:    	je     0xfffd5f3b
:00041 
:00043 br =>:00088
  00768:    	jmp    0x2f054
:00044 %3 = %2.call y()                     [<INVALID>]
  0076d: 01 	sub    DWORD PTR [rip+0x16fc],0x1        # 0x1e70
  00774:    	je     0x2e9bb
  0077a:    	sub    rsp,0x20
  0077e:    	movq   QWORD PTR [rsp],xmm2
  00783:    	movq   QWORD PTR [rsp+0x8],xmm3
  00789:    	movq   QWORD PTR [rsp+0x10],xmm4
  0078f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00795:    	mov    rdi,QWORD PTR [rbp-0x38]
  00799: 34 	movabs rax,0x563437f53600
  007a3:    	call   rax
  007a5:    	mov    r15d,eax
  007a8: 00 	cmp    r15d,DWORD PTR [rip+0x16c9]        # 0x1e78
  007af:    	jne    0x2e9dd
  007b5:    	mov    eax,DWORD PTR [rip+0xfffffffffffd833e]        # 0xfffd8af9
  007bb:    	cmp    DWORD PTR [rip+0x16b3],eax        # 0x1e74
  007c1:    	jne    0x2e9dd
  007c7: 00 	mov    QWORD PTR [rsp-0x20],0x0
  007d0:    	mov    QWORD PTR [rsp-0x38],rcx
  007d5:    	mov    rax,QWORD PTR [rbx]
  007d8:    	lea    rdi,[rsp-0x18]
  007dd:    	mov    QWORD PTR [rdi],rax
  007e0:    	mov    QWORD PTR [rbx],rdi
  007e3:    	mov    rax,QWORD PTR [rbp-0x38]
  007e7:    	mov    QWORD PTR [rsp-0x38],rax
  007ec: 00 	mov    rdi,0x0
  007f3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  007fc: 00 	movabs rax,0x0
  00806:    	mov    QWORD PTR [rsp-0x28],rax
  0080b: 00 	movabs r13,0x0
  00815:    	call   0xfffd5f00
  0081a:    	lea    rdi,[rbp-0x8]
  0081e:    	mov    QWORD PTR [rbx],rdi
  00821:    	movq   xmm2,QWORD PTR [rsp]
  00826:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0082c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00832:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00838:    	add    rsp,0x20
  0083c:    	test   rax,rax
  0083f:    	je     0x2ea49
  00845:    	mov    QWORD PTR [rbp-0x40],rax
:00045 
:00047 %4 = literal[0.6]
  00849: 00 	movq   xmm5,QWORD PTR [rip+0x162f]        # 0x1e80
  00851: 99 	movabs rax,0xff1999999999999a
  0085b:    	mov    QWORD PTR [rbp-0x48],rax
:00048 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00049 condnotbr _%3 =>:00063
  0085f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00863:    	mov    rsi,QWORD PTR [rbp-0x48]
  00867: 00 	test   rdi,0x1
  0086e:    	je     0x2ea58
  00874: 00 	test   rsi,0x1
  0087b:    	je     0x2ea58
  00881:    	cmp    rdi,rsi
  00884:    	jge    0x2ec5a
:00050 %3 = %2.call y()                     [<INVALID>]
  0088a: 01 	sub    DWORD PTR [rip+0x15f7],0x1        # 0x1e88
  00891:    	je     0x2eabc
  00897:    	sub    rsp,0x20
  0089b:    	movq   QWORD PTR [rsp],xmm2
  008a0:    	movq   QWORD PTR [rsp+0x8],xmm3
  008a6:    	movq   QWORD PTR [rsp+0x10],xmm4
  008ac:    	movq   QWORD PTR [rsp+0x18],xmm5
  008b2:    	mov    rdi,QWORD PTR [rbp-0x38]
  008b6: 34 	movabs rax,0x563437f53600
  008c0:    	call   rax
  008c2:    	mov    r15d,eax
  008c5: 00 	cmp    r15d,DWORD PTR [rip+0x15c4]        # 0x1e90
  008cc:    	jne    0x2eade
  008d2:    	mov    eax,DWORD PTR [rip+0xfffffffffffd8221]        # 0xfffd8af9
  008d8:    	cmp    DWORD PTR [rip+0x15ae],eax        # 0x1e8c
  008de:    	jne    0x2eade
  008e4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008ed:    	mov    QWORD PTR [rsp-0x38],rcx
  008f2:    	mov    rax,QWORD PTR [rbx]
  008f5:    	lea    rdi,[rsp-0x18]
  008fa:    	mov    QWORD PTR [rdi],rax
  008fd:    	mov    QWORD PTR [rbx],rdi
  00900:    	mov    rax,QWORD PTR [rbp-0x38]
  00904:    	mov    QWORD PTR [rsp-0x38],rax
  00909: 00 	mov    rdi,0x0
  00910: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00919: 00 	movabs rax,0x0
  00923:    	mov    QWORD PTR [rsp-0x28],rax
  00928: 00 	movabs r13,0x0
  00932:    	call   0xfffd5f00
  00937:    	lea    rdi,[rbp-0x8]
  0093b:    	mov    QWORD PTR [rbx],rdi
  0093e:    	movq   xmm2,QWORD PTR [rsp]
  00943:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00949:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0094f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00955:    	add    rsp,0x20
  00959:    	test   rax,rax
  0095c:    	je     0x2eb4a
  00962:    	mov    QWORD PTR [rbp-0x40],rax
:00051 
:00053 %4 = literal[-0.6]
  00966: 00 	movq   xmm5,QWORD PTR [rip+0x1532]        # 0x1ea0
  0096e: 99 	movabs rax,0xff1999999999999e
  00978:    	mov    QWORD PTR [rbp-0x48],rax
:00054 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00055 condnotbr _%3 =>:00063
  0097c:    	mov    rdi,QWORD PTR [rbp-0x40]
  00980:    	mov    rsi,QWORD PTR [rbp-0x48]
  00984: 00 	test   rdi,0x1
  0098b:    	je     0x2eb59
  00991: 00 	test   rsi,0x1
  00998:    	je     0x2eb59
  0099e:    	cmp    rdi,rsi
  009a1:    	jle    0x2ec73
:00056 %3 = 1: i32
  009a7: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00057 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  009af:    	sub    rsp,0x20
  009b3:    	movq   QWORD PTR [rsp],xmm2
  009b8:    	movq   QWORD PTR [rsp+0x8],xmm3
  009be:    	movq   QWORD PTR [rsp+0x10],xmm4
  009c4:    	movq   QWORD PTR [rsp+0x18],xmm5
  009ca:    	mov    rdx,QWORD PTR [rbp-0x30]
  009ce:    	mov    rcx,QWORD PTR [rbp-0x40]
  009d2:    	mov    rdi,rbx
  009d5:    	mov    rsi,r12
  009d8: 34 	movabs r8,0x563439872788
  009e2: 34 	movabs rax,0x563437f47370
  009ec:    	call   rax
  009ee:    	movq   xmm2,QWORD PTR [rsp]
  009f3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009f9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009ff:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a05:    	add    rsp,0x20
  00a09: 34 	movabs r13,0x563439872790
  00a13:    	test   rax,rax
  00a16:    	je     0xfffd5f3b
  00a1c:    	mov    QWORD PTR [rbp-0x40],rax
:00058 %4 = literal[1.0]
  00a20: 00 	movq   xmm5,QWORD PTR [rip+0x1488]        # 0x1eb0
  00a28: 00 	movabs rax,0xff80000000000002
  00a32:    	mov    QWORD PTR [rbp-0x48],rax
:00059 _ = %3.call y=(%4; 1)                [<INVALID>]
  00a36: 01 	sub    DWORD PTR [rip+0x147b],0x1        # 0x1eb8
  00a3d:    	je     0x2ebbd
  00a43:    	sub    rsp,0x20
  00a47:    	movq   QWORD PTR [rsp],xmm2
  00a4c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a52:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a58:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a5e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a62: 34 	movabs rax,0x563437f53600
  00a6c:    	call   rax
  00a6e:    	mov    r15d,eax
  00a71: 00 	cmp    r15d,DWORD PTR [rip+0x1448]        # 0x1ec0
  00a78:    	jne    0x2ebdf
  00a7e:    	mov    eax,DWORD PTR [rip+0xfffffffffffd8075]        # 0xfffd8af9
  00a84:    	cmp    DWORD PTR [rip+0x1432],eax        # 0x1ebc
  00a8a:    	jne    0x2ebdf
  00a90: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a99:    	mov    QWORD PTR [rsp-0x38],rcx
  00a9e:    	mov    rax,QWORD PTR [rbx]
  00aa1:    	lea    rdi,[rsp-0x18]
  00aa6:    	mov    QWORD PTR [rdi],rax
  00aa9:    	mov    QWORD PTR [rbx],rdi
  00aac:    	mov    rax,QWORD PTR [rbp-0x40]
  00ab0:    	mov    QWORD PTR [rsp-0x38],rax
  00ab5: 00 	mov    rdi,0x1
  00abc:    	mov    rax,QWORD PTR [rbp-0x48]
  00ac0:    	mov    QWORD PTR [rsp-0x40],rax
  00ac5: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ace: 00 	movabs rax,0x0
  00ad8:    	mov    QWORD PTR [rsp-0x28],rax
  00add: 00 	movabs r13,0x0
  00ae7:    	call   0xfffd5f00
  00aec:    	lea    rdi,[rbp-0x8]
  00af0:    	mov    QWORD PTR [rbx],rdi
  00af3:    	movq   xmm2,QWORD PTR [rsp]
  00af8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00afe:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b04:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b0a:    	add    rsp,0x20
  00b0e:    	test   rax,rax
  00b11:    	je     0x2ec4b
:00060 
:00062 br =>:00088
  00b17:    	jmp    0x2f06d
:00063 %3 = %2.call z()                     [<INVALID>]
  00b1c: 01 	sub    DWORD PTR [rip+0x13a1],0x1        # 0x1ec4
  00b23:    	je     0x2ec9b
  00b29:    	sub    rsp,0x20
  00b2d:    	movq   QWORD PTR [rsp],xmm2
  00b32:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b38:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b3e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b44:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b48: 34 	movabs rax,0x563437f53600
  00b52:    	call   rax
  00b54:    	mov    r15d,eax
  00b57: 00 	cmp    r15d,DWORD PTR [rip+0x136e]        # 0x1ecc
  00b5e:    	jne    0x2ecbd
  00b64:    	mov    eax,DWORD PTR [rip+0xfffffffffffd7f8f]        # 0xfffd8af9
  00b6a:    	cmp    DWORD PTR [rip+0x1358],eax        # 0x1ec8
  00b70:    	jne    0x2ecbd
  00b76: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00b7f:    	mov    QWORD PTR [rsp-0x38],rcx
  00b84:    	mov    rax,QWORD PTR [rbx]
  00b87:    	lea    rdi,[rsp-0x18]
  00b8c:    	mov    QWORD PTR [rdi],rax
  00b8f:    	mov    QWORD PTR [rbx],rdi
  00b92:    	mov    rax,QWORD PTR [rbp-0x38]
  00b96:    	mov    QWORD PTR [rsp-0x38],rax
  00b9b: 00 	mov    rdi,0x0
  00ba2: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00bab: 00 	movabs rax,0x0
  00bb5:    	mov    QWORD PTR [rsp-0x28],rax
  00bba: 00 	movabs r13,0x0
  00bc4:    	call   0xfffd5f00
  00bc9:    	lea    rdi,[rbp-0x8]
  00bcd:    	mov    QWORD PTR [rbx],rdi
  00bd0:    	movq   xmm2,QWORD PTR [rsp]
  00bd5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bdb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00be1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00be7:    	add    rsp,0x20
  00beb:    	test   rax,rax
  00bee:    	je     0x2ed29
  00bf4:    	mov    QWORD PTR [rbp-0x40],rax
:00064 
:00066 %4 = literal[0.6]
  00bf8: 00 	movq   xmm5,QWORD PTR [rip+0x12d0]        # 0x1ed0
  00c00: 99 	movabs rax,0xff1999999999999a
  00c0a:    	mov    QWORD PTR [rbp-0x48],rax
:00067 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00068 condnotbr _%3 =>:00082
  00c0e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00c12:    	mov    rsi,QWORD PTR [rbp-0x48]
  00c16: 00 	test   rdi,0x1
  00c1d:    	je     0x2ed38
  00c23: 00 	test   rsi,0x1
  00c2a:    	je     0x2ed38
  00c30:    	cmp    rdi,rsi
  00c33:    	jge    0x2ef3a
:00069 %3 = %2.call z()                     [<INVALID>]
  00c39: 01 	sub    DWORD PTR [rip+0x1298],0x1        # 0x1ed8
  00c40:    	je     0x2ed9c
  00c46:    	sub    rsp,0x20
  00c4a:    	movq   QWORD PTR [rsp],xmm2
  00c4f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c55:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c5b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c61:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c65: 34 	movabs rax,0x563437f53600
  00c6f:    	call   rax
  00c71:    	mov    r15d,eax
  00c74: 00 	cmp    r15d,DWORD PTR [rip+0x1265]        # 0x1ee0
  00c7b:    	jne    0x2edbe
  00c81:    	mov    eax,DWORD PTR [rip+0xfffffffffffd7e72]        # 0xfffd8af9
  00c87:    	cmp    DWORD PTR [rip+0x124f],eax        # 0x1edc
  00c8d:    	jne    0x2edbe
  00c93: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00c9c:    	mov    QWORD PTR [rsp-0x38],rcx
  00ca1:    	mov    rax,QWORD PTR [rbx]
  00ca4:    	lea    rdi,[rsp-0x18]
  00ca9:    	mov    QWORD PTR [rdi],rax
  00cac:    	mov    QWORD PTR [rbx],rdi
  00caf:    	mov    rax,QWORD PTR [rbp-0x38]
  00cb3:    	mov    QWORD PTR [rsp-0x38],rax
  00cb8: 00 	mov    rdi,0x0
  00cbf: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00cc8: 00 	movabs rax,0x0
  00cd2:    	mov    QWORD PTR [rsp-0x28],rax
  00cd7: 00 	movabs r13,0x0
  00ce1:    	call   0xfffd5f00
  00ce6:    	lea    rdi,[rbp-0x8]
  00cea:    	mov    QWORD PTR [rbx],rdi
  00ced:    	movq   xmm2,QWORD PTR [rsp]
  00cf2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cf8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cfe:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d04:    	add    rsp,0x20
  00d08:    	test   rax,rax
  00d0b:    	je     0x2ee2a
  00d11:    	mov    QWORD PTR [rbp-0x40],rax
:00070 
:00072 %4 = literal[-0.6]
  00d15: 00 	movq   xmm5,QWORD PTR [rip+0x11d3]        # 0x1ef0
  00d1d: 99 	movabs rax,0xff1999999999999e
  00d27:    	mov    QWORD PTR [rbp-0x48],rax
:00073 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00074 condnotbr _%3 =>:00082
  00d2b:    	mov    rdi,QWORD PTR [rbp-0x40]
  00d2f:    	mov    rsi,QWORD PTR [rbp-0x48]
  00d33: 00 	test   rdi,0x1
  00d3a:    	je     0x2ee39
  00d40: 00 	test   rsi,0x1
  00d47:    	je     0x2ee39
  00d4d:    	cmp    rdi,rsi
  00d50:    	jle    0x2ef53
:00075 %3 = 1: i32
  00d56: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00076 %3 = %1.[%3]                         [Array][Integer]
  00d5e:    	sub    rsp,0x20
  00d62:    	movq   QWORD PTR [rsp],xmm2
  00d67:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d6d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d73:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d79:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d7d:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d81:    	mov    rdi,rbx
  00d84:    	mov    rsi,r12
  00d87: 34 	movabs r8,0x5634398728b8
  00d91: 34 	movabs rax,0x563437f47370
  00d9b:    	call   rax
  00d9d:    	movq   xmm2,QWORD PTR [rsp]
  00da2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00da8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dae:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00db4:    	add    rsp,0x20
  00db8: 34 	movabs r13,0x5634398728c0
  00dc2:    	test   rax,rax
  00dc5:    	je     0xfffd5f3b
  00dcb:    	mov    QWORD PTR [rbp-0x40],rax
:00077 %4 = literal[1.0]
  00dcf: 00 	movq   xmm5,QWORD PTR [rip+0x1129]        # 0x1f00
  00dd7: 00 	movabs rax,0xff80000000000002
  00de1:    	mov    QWORD PTR [rbp-0x48],rax
:00078 _ = %3.call z=(%4; 1)                [<INVALID>]
  00de5: 01 	sub    DWORD PTR [rip+0x111c],0x1        # 0x1f08
  00dec:    	je     0x2ee9d
  00df2:    	sub    rsp,0x20
  00df6:    	movq   QWORD PTR [rsp],xmm2
  00dfb:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e01:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e07:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e0d:    	mov    rdi,QWORD PTR [rbp-0x40]
  00e11: 34 	movabs rax,0x563437f53600
  00e1b:    	call   rax
  00e1d:    	mov    r15d,eax
  00e20: 00 	cmp    r15d,DWORD PTR [rip+0x10e9]        # 0x1f10
  00e27:    	jne    0x2eebf
  00e2d:    	mov    eax,DWORD PTR [rip+0xfffffffffffd7cc6]        # 0xfffd8af9
  00e33:    	cmp    DWORD PTR [rip+0x10d3],eax        # 0x1f0c
  00e39:    	jne    0x2eebf
  00e3f: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00e48:    	mov    QWORD PTR [rsp-0x38],rcx
  00e4d:    	mov    rax,QWORD PTR [rbx]
  00e50:    	lea    rdi,[rsp-0x18]
  00e55:    	mov    QWORD PTR [rdi],rax
  00e58:    	mov    QWORD PTR [rbx],rdi
  00e5b:    	mov    rax,QWORD PTR [rbp-0x40]
  00e5f:    	mov    QWORD PTR [rsp-0x38],rax
  00e64: 00 	mov    rdi,0x1
  00e6b:    	mov    rax,QWORD PTR [rbp-0x48]
  00e6f:    	mov    QWORD PTR [rsp-0x40],rax
  00e74: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00e7d: 00 	movabs rax,0x0
  00e87:    	mov    QWORD PTR [rsp-0x28],rax
  00e8c: 00 	movabs r13,0x0
  00e96:    	call   0xfffd5f00
  00e9b:    	lea    rdi,[rbp-0x8]
  00e9f:    	mov    QWORD PTR [rbx],rdi
  00ea2:    	movq   xmm2,QWORD PTR [rsp]
  00ea7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ead:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00eb3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00eb9:    	add    rsp,0x20
  00ebd:    	test   rax,rax
  00ec0:    	je     0x2ef2b
:00079 
:00081 br =>:00088
  00ec6:    	jmp    0x2f086
:00082 %3 = 1: i32
  00ecb: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00083 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00ed3:    	sub    rsp,0x20
  00ed7:    	movq   QWORD PTR [rsp],xmm2
  00edc:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ee2:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ee8:    	movq   QWORD PTR [rsp+0x18],xmm5
  00eee:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ef2:    	mov    rcx,QWORD PTR [rbp-0x40]
  00ef6:    	mov    rdi,rbx
  00ef9:    	mov    rsi,r12
  00efc: 34 	movabs r8,0x563439872928
  00f06: 34 	movabs rax,0x563437f47370
  00f10:    	call   rax
  00f12:    	movq   xmm2,QWORD PTR [rsp]
  00f17:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f1d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f23:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f29:    	add    rsp,0x20
  00f2d: 34 	movabs r13,0x563439872930
  00f37:    	test   rax,rax
  00f3a:    	je     0xfffd5f3b
  00f40:    	mov    QWORD PTR [rbp-0x40],rax
:00084 %4 = literal[1.0]
  00f44: 00 	movq   xmm5,QWORD PTR [rip+0xfd4]        # 0x1f20
  00f4c: 00 	movabs rax,0xff80000000000002
  00f56:    	mov    QWORD PTR [rbp-0x48],rax
:00085 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f5a: 01 	sub    DWORD PTR [rip+0xfc7],0x1        # 0x1f28
  00f61:    	je     0x2ef7b
  00f67:    	sub    rsp,0x20
  00f6b:    	movq   QWORD PTR [rsp],xmm2
  00f70:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f76:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f7c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f82:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f86: 34 	movabs rax,0x563437f53600
  00f90:    	call   rax
  00f92:    	mov    r15d,eax
  00f95: 00 	cmp    r15d,DWORD PTR [rip+0xf94]        # 0x1f30
  00f9c:    	jne    0x2ef9d
  00fa2:    	mov    eax,DWORD PTR [rip+0xfffffffffffd7b51]        # 0xfffd8af9
  00fa8:    	cmp    DWORD PTR [rip+0xf7e],eax        # 0x1f2c
  00fae:    	jne    0x2ef9d
  00fb4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00fbd:    	mov    QWORD PTR [rsp-0x38],rcx
  00fc2:    	mov    rax,QWORD PTR [rbx]
  00fc5:    	lea    rdi,[rsp-0x18]
  00fca:    	mov    QWORD PTR [rdi],rax
  00fcd:    	mov    QWORD PTR [rbx],rdi
  00fd0:    	mov    rax,QWORD PTR [rbp-0x40]
  00fd4:    	mov    QWORD PTR [rsp-0x38],rax
  00fd9: 00 	mov    rdi,0x1
  00fe0:    	mov    rax,QWORD PTR [rbp-0x48]
  00fe4:    	mov    QWORD PTR [rsp-0x40],rax
  00fe9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ff2: 00 	movabs rax,0x0
  00ffc:    	mov    QWORD PTR [rsp-0x28],rax
  01001: 00 	movabs r13,0x0
  0100b:    	call   0xfffd5f00
  01010:    	lea    rdi,[rbp-0x8]
  01014:    	mov    QWORD PTR [rbx],rdi
  01017:    	movq   xmm2,QWORD PTR [rsp]
  0101c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01022:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01028:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0102e:    	add    rsp,0x20
  01032:    	test   rax,rax
  01035:    	je     0x2f009
:00086 
:00088 %3 = 0: i32
  0103b: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  01043: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  0104b:    	sub    rsp,0x20
  0104f:    	movq   QWORD PTR [rsp],xmm2
  01054:    	movq   QWORD PTR [rsp+0x8],xmm3
  0105a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01060:    	movq   QWORD PTR [rsp+0x18],xmm5
  01066:    	mov    rdx,QWORD PTR [rbp-0x30]
  0106a:    	mov    rcx,QWORD PTR [rbp-0x50]
  0106e:    	mov    rdi,rbx
  01071:    	mov    rsi,r12
  01074: 34 	movabs r8,0x563439872998
  0107e: 34 	movabs rax,0x563437f47370
  01088:    	call   rax
  0108a:    	movq   xmm2,QWORD PTR [rsp]
  0108f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01095:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0109b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010a1:    	add    rsp,0x20
  010a5: 34 	movabs r13,0x5634398729a0
  010af:    	test   rax,rax
  010b2:    	je     0xfffd5f3b
  010b8:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  010bc: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  010c4:    	sub    rsp,0x20
  010c8:    	movq   QWORD PTR [rsp],xmm3
  010cd:    	movq   QWORD PTR [rsp+0x8],xmm4
  010d3:    	movq   QWORD PTR [rsp+0x10],xmm5
  010d9:    	mov    rdx,QWORD PTR [rbp-0x30]
  010dd:    	mov    rcx,QWORD PTR [rbp-0x58]
  010e1:    	mov    rdi,rbx
  010e4:    	mov    rsi,r12
  010e7: 34 	movabs r8,0x5634398729b8
  010f1: 34 	movabs rax,0x563437f47370
  010fb:    	call   rax
  010fd:    	movq   xmm3,QWORD PTR [rsp]
  01102:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01108:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0110e:    	add    rsp,0x20
  01112: 34 	movabs r13,0x5634398729c0
  0111c:    	test   rax,rax
  0111f:    	je     0xfffd5f3b
  01125:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  01129:    	mov    rdi,QWORD PTR [rbp-0x50]
  0112d: 00 	test   rdi,0x7
  01134:    	jne    0x2f018
  0113a:    	cmp    DWORD PTR [rdi+0x4],0x28
  0113e:    	jne    0x2f018
  01144: 26 	cmp    DWORD PTR [rip+0xfffffffffffd79ae],0x26        # 0xfffd8af9
  0114b:    	jne    0x2f018
  01151:    	sub    rsp,0x10
  01155:    	movq   QWORD PTR [rsp],xmm3
  0115a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01160: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01169:    	mov    QWORD PTR [rsp-0x38],rcx
  0116e:    	mov    rax,QWORD PTR [rbx]
  01171:    	lea    rdi,[rsp-0x18]
  01176:    	mov    QWORD PTR [rdi],rax
  01179:    	mov    QWORD PTR [rbx],rdi
  0117c:    	mov    rax,QWORD PTR [rbp-0x50]
  01180:    	mov    QWORD PTR [rsp-0x38],rax
  01185: 00 	mov    rdi,0x1
  0118c:    	mov    rax,QWORD PTR [rbp-0x58]
  01190:    	mov    QWORD PTR [rsp-0x40],rax
  01195: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0119e: 09 	movabs rax,0x900000041
  011a8:    	mov    QWORD PTR [rsp-0x28],rax
  011ad: 34 	movabs r13,0x563439838e30
  011b7:    	call   0xfffe29a5
  011bc:    	lea    rdi,[rbp-0x8]
  011c0:    	mov    QWORD PTR [rbx],rdi
  011c3:    	movq   xmm3,QWORD PTR [rsp]
  011c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011ce:    	add    rsp,0x10
  011d2: 34 	movabs r13,0x5634398729e0
  011dc:    	test   rax,rax
  011df:    	je     0xfffd5f3b
  011e5:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  011e9:    	sub    rsp,0x10
  011ed:    	movq   QWORD PTR [rsp],xmm3
  011f2:    	movq   QWORD PTR [rsp+0x8],xmm4
  011f8:    	mov    rdx,QWORD PTR [rbp-0x30]
  011fc:    	mov    rcx,QWORD PTR [rbp-0x40]
  01200:    	mov    r8,QWORD PTR [rbp-0x48]
  01204:    	mov    rdi,rbx
  01207:    	mov    rsi,r12
  0120a: 34 	movabs rax,0x563437f474a0
  01214:    	call   rax
  01216:    	movq   xmm3,QWORD PTR [rsp]
  0121b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01221:    	add    rsp,0x10
  01225: 34 	movabs r13,0x563439872a00
  0122f:    	test   rax,rax
  01232:    	je     0xfffd5f3b
:00097 %3 = 0: i32
  01238: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  01240: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  01248:    	sub    rsp,0x10
  0124c:    	movq   QWORD PTR [rsp],xmm3
  01251:    	movq   QWORD PTR [rsp+0x8],xmm4
  01257:    	mov    rdx,QWORD PTR [rbp-0x30]
  0125b:    	mov    rcx,QWORD PTR [rbp-0x50]
  0125f:    	mov    rdi,rbx
  01262:    	mov    rsi,r12
  01265: 34 	movabs r8,0x563439872a28
  0126f: 34 	movabs rax,0x563437f47370
  01279:    	call   rax
  0127b:    	movq   xmm3,QWORD PTR [rsp]
  01280:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01286:    	add    rsp,0x10
  0128a: 34 	movabs r13,0x563439872a30
  01294:    	test   rax,rax
  01297:    	je     0xfffd5f3b
  0129d:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  012a1:    	mov    rdi,QWORD PTR [rbp-0x50]
  012a5: 00 	test   rdi,0x7
  012ac:    	jne    0x2f027
  012b2:    	cmp    DWORD PTR [rdi+0x4],0x28
  012b6:    	jne    0x2f027
  012bc: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7836],0x26        # 0xfffd8af9
  012c3:    	jne    0x2f027
  012c9:    	sub    rsp,0x10
  012cd:    	movq   QWORD PTR [rsp],xmm3
  012d2:    	movq   QWORD PTR [rsp+0x8],xmm4
  012d8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012e1:    	mov    QWORD PTR [rsp-0x38],rcx
  012e6:    	mov    rax,QWORD PTR [rbx]
  012e9:    	lea    rdi,[rsp-0x18]
  012ee:    	mov    QWORD PTR [rdi],rax
  012f1:    	mov    QWORD PTR [rbx],rdi
  012f4:    	mov    rax,QWORD PTR [rbp-0x50]
  012f8:    	mov    QWORD PTR [rsp-0x38],rax
  012fd: 00 	mov    rdi,0x0
  01304: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0130d: 07 	movabs rax,0x1000700000044
  01317:    	mov    QWORD PTR [rsp-0x28],rax
  0131c: 34 	movabs r13,0x5634398639e0
  01326:    	call   0xfffd9432
  0132b:    	lea    rdi,[rbp-0x8]
  0132f:    	mov    QWORD PTR [rbx],rdi
  01332:    	movq   xmm3,QWORD PTR [rsp]
  01337:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0133d:    	add    rsp,0x10
  01341: 34 	movabs r13,0x563439872a50
  0134b:    	test   rax,rax
  0134e:    	je     0xfffd5f3b
  01354:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  01358:    	sub    rsp,0x10
  0135c:    	movq   QWORD PTR [rsp],xmm3
  01361:    	movq   QWORD PTR [rsp+0x8],xmm4
  01367:    	mov    rdx,QWORD PTR [rbp-0x30]
  0136b:    	mov    rcx,QWORD PTR [rbp-0x40]
  0136f:    	mov    r8,QWORD PTR [rbp-0x48]
  01373:    	mov    rdi,rbx
  01376:    	mov    rsi,r12
  01379: 34 	movabs rax,0x563437f474a0
  01383:    	call   rax
  01385:    	movq   xmm3,QWORD PTR [rsp]
  0138a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01390:    	add    rsp,0x10
  01394: 34 	movabs r13,0x563439872a70
  0139e:    	test   rax,rax
  013a1:    	je     0xfffd5f3b
:00104 %3 = 1: i32
  013a7: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  013af: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  013b7:    	sub    rsp,0x10
  013bb:    	movq   QWORD PTR [rsp],xmm3
  013c0:    	movq   QWORD PTR [rsp+0x8],xmm4
  013c6:    	mov    rdx,QWORD PTR [rbp-0x30]
  013ca:    	mov    rcx,QWORD PTR [rbp-0x50]
  013ce:    	mov    rdi,rbx
  013d1:    	mov    rsi,r12
  013d4: 34 	movabs r8,0x563439872a98
  013de: 34 	movabs rax,0x563437f47370
  013e8:    	call   rax
  013ea:    	movq   xmm3,QWORD PTR [rsp]
  013ef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013f5:    	add    rsp,0x10
  013f9: 34 	movabs r13,0x563439872aa0
  01403:    	test   rax,rax
  01406:    	je     0xfffd5f3b
  0140c:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  01410: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  01418:    	sub    rsp,0x10
  0141c:    	movq   QWORD PTR [rsp],xmm3
  01421:    	movq   QWORD PTR [rsp+0x8],xmm4
  01427:    	mov    rdx,QWORD PTR [rbp-0x30]
  0142b:    	mov    rcx,QWORD PTR [rbp-0x58]
  0142f:    	mov    rdi,rbx
  01432:    	mov    rsi,r12
  01435: 34 	movabs r8,0x563439872ab8
  0143f: 34 	movabs rax,0x563437f47370
  01449:    	call   rax
  0144b:    	movq   xmm3,QWORD PTR [rsp]
  01450:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01456:    	add    rsp,0x10
  0145a: 34 	movabs r13,0x563439872ac0
  01464:    	test   rax,rax
  01467:    	je     0xfffd5f3b
  0146d:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01471:    	mov    rdi,QWORD PTR [rbp-0x50]
  01475: 00 	test   rdi,0x7
  0147c:    	jne    0x2f036
  01482:    	cmp    DWORD PTR [rdi+0x4],0x28
  01486:    	jne    0x2f036
  0148c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7666],0x26        # 0xfffd8af9
  01493:    	jne    0x2f036
  01499:    	sub    rsp,0x10
  0149d:    	movq   QWORD PTR [rsp],xmm3
  014a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  014a8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  014b1:    	mov    QWORD PTR [rsp-0x38],rcx
  014b6:    	mov    rax,QWORD PTR [rbx]
  014b9:    	lea    rdi,[rsp-0x18]
  014be:    	mov    QWORD PTR [rdi],rax
  014c1:    	mov    QWORD PTR [rbx],rdi
  014c4:    	mov    rax,QWORD PTR [rbp-0x50]
  014c8:    	mov    QWORD PTR [rsp-0x38],rax
  014cd: 00 	mov    rdi,0x1
  014d4:    	mov    rax,QWORD PTR [rbp-0x58]
  014d8:    	mov    QWORD PTR [rsp-0x40],rax
  014dd: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014e6: 09 	movabs rax,0x900000041
  014f0:    	mov    QWORD PTR [rsp-0x28],rax
  014f5: 34 	movabs r13,0x563439838e30
  014ff:    	call   0xfffe29a5
  01504:    	lea    rdi,[rbp-0x8]
  01508:    	mov    QWORD PTR [rbx],rdi
  0150b:    	movq   xmm3,QWORD PTR [rsp]
  01510:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01516:    	add    rsp,0x10
  0151a: 34 	movabs r13,0x563439872ae0
  01524:    	test   rax,rax
  01527:    	je     0xfffd5f3b
  0152d:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  01531:    	sub    rsp,0x10
  01535:    	movq   QWORD PTR [rsp],xmm3
  0153a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01540:    	mov    rdx,QWORD PTR [rbp-0x30]
  01544:    	mov    rcx,QWORD PTR [rbp-0x40]
  01548:    	mov    r8,QWORD PTR [rbp-0x48]
  0154c:    	mov    rdi,rbx
  0154f:    	mov    rsi,r12
  01552: 34 	movabs rax,0x563437f474a0
  0155c:    	call   rax
  0155e:    	movq   xmm3,QWORD PTR [rsp]
  01563:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01569:    	add    rsp,0x10
  0156d: 34 	movabs r13,0x563439872b00
  01577:    	test   rax,rax
  0157a:    	je     0xfffd5f3b
:00113 %3 = 1: i32
  01580: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01588: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01590:    	sub    rsp,0x10
  01594:    	movq   QWORD PTR [rsp],xmm3
  01599:    	movq   QWORD PTR [rsp+0x8],xmm4
  0159f:    	mov    rdx,QWORD PTR [rbp-0x30]
  015a3:    	mov    rcx,QWORD PTR [rbp-0x50]
  015a7:    	mov    rdi,rbx
  015aa:    	mov    rsi,r12
  015ad: 34 	movabs r8,0x563439872b28
  015b7: 34 	movabs rax,0x563437f47370
  015c1:    	call   rax
  015c3:    	movq   xmm3,QWORD PTR [rsp]
  015c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015ce:    	add    rsp,0x10
  015d2: 34 	movabs r13,0x563439872b30
  015dc:    	test   rax,rax
  015df:    	je     0xfffd5f3b
  015e5:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  015e9:    	mov    rdi,QWORD PTR [rbp-0x50]
  015ed: 00 	test   rdi,0x7
  015f4:    	jne    0x2f045
  015fa:    	cmp    DWORD PTR [rdi+0x4],0x28
  015fe:    	jne    0x2f045
  01604: 26 	cmp    DWORD PTR [rip+0xfffffffffffd74ee],0x26        # 0xfffd8af9
  0160b:    	jne    0x2f045
  01611:    	sub    rsp,0x10
  01615:    	movq   QWORD PTR [rsp],xmm3
  0161a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01620: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01629:    	mov    QWORD PTR [rsp-0x38],rcx
  0162e:    	mov    rax,QWORD PTR [rbx]
  01631:    	lea    rdi,[rsp-0x18]
  01636:    	mov    QWORD PTR [rdi],rax
  01639:    	mov    QWORD PTR [rbx],rdi
  0163c:    	mov    rax,QWORD PTR [rbp-0x50]
  01640:    	mov    QWORD PTR [rsp-0x38],rax
  01645: 00 	mov    rdi,0x0
  0164c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01655: 07 	movabs rax,0x1000700000044
  0165f:    	mov    QWORD PTR [rsp-0x28],rax
  01664: 34 	movabs r13,0x5634398639e0
  0166e:    	call   0xfffd9432
  01673:    	lea    rdi,[rbp-0x8]
  01677:    	mov    QWORD PTR [rbx],rdi
  0167a:    	movq   xmm3,QWORD PTR [rsp]
  0167f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01685:    	add    rsp,0x10
  01689: 34 	movabs r13,0x563439872b50
  01693:    	test   rax,rax
  01696:    	je     0xfffd5f3b
  0169c:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  016a0:    	sub    rsp,0x10
  016a4:    	movq   QWORD PTR [rsp],xmm3
  016a9:    	movq   QWORD PTR [rsp+0x8],xmm4
  016af:    	mov    rdx,QWORD PTR [rbp-0x30]
  016b3:    	mov    rcx,QWORD PTR [rbp-0x40]
  016b7:    	mov    r8,QWORD PTR [rbp-0x48]
  016bb:    	mov    rdi,rbx
  016be:    	mov    rsi,r12
  016c1: 34 	movabs rax,0x563437f474a0
  016cb:    	call   rax
  016cd:    	movq   xmm3,QWORD PTR [rsp]
  016d2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016d8:    	add    rsp,0x10
  016dc: 34 	movabs r13,0x563439872b70
  016e6:    	test   rax,rax
  016e9:    	je     0xfffd5f3b
:00120 %3 = %4
  016ef:    	mov    rax,QWORD PTR [rbp-0x48]
  016f3:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  016f7:    	mov    rax,QWORD PTR [rbp-0x40]
  016fb:    	leave  
  016fc:    	ret    
:00088 %3 = 0: i32
  016fd: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  01705: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  0170d:    	sub    rsp,0x20
  01711:    	movq   QWORD PTR [rsp],xmm2
  01716:    	movq   QWORD PTR [rsp+0x8],xmm3
  0171c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01722:    	movq   QWORD PTR [rsp+0x18],xmm5
  01728:    	mov    rdx,QWORD PTR [rbp-0x30]
  0172c:    	mov    rcx,QWORD PTR [rbp-0x50]
  01730:    	mov    rdi,rbx
  01733:    	mov    rsi,r12
  01736: 34 	movabs r8,0x563439872998
  01740: 34 	movabs rax,0x563437f47370
  0174a:    	call   rax
  0174c:    	movq   xmm2,QWORD PTR [rsp]
  01751:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01757:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0175d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01763:    	add    rsp,0x20
  01767: 34 	movabs r13,0x5634398729a0
  01771:    	test   rax,rax
  01774:    	je     0xfffd5f3b
  0177a:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  0177e: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  01786:    	sub    rsp,0x20
  0178a:    	movq   QWORD PTR [rsp],xmm3
  0178f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01795:    	movq   QWORD PTR [rsp+0x10],xmm5
  0179b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0179f:    	mov    rcx,QWORD PTR [rbp-0x58]
  017a3:    	mov    rdi,rbx
  017a6:    	mov    rsi,r12
  017a9: 34 	movabs r8,0x5634398729b8
  017b3: 34 	movabs rax,0x563437f47370
  017bd:    	call   rax
  017bf:    	movq   xmm3,QWORD PTR [rsp]
  017c4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017ca:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017d0:    	add    rsp,0x20
  017d4: 34 	movabs r13,0x5634398729c0
  017de:    	test   rax,rax
  017e1:    	je     0xfffd5f3b
  017e7:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  017eb:    	mov    rdi,QWORD PTR [rbp-0x50]
  017ef: 00 	test   rdi,0x7
  017f6:    	jne    0x2f09f
  017fc:    	cmp    DWORD PTR [rdi+0x4],0x28
  01800:    	jne    0x2f09f
  01806: 26 	cmp    DWORD PTR [rip+0xfffffffffffd72ec],0x26        # 0xfffd8af9
  0180d:    	jne    0x2f09f
  01813:    	sub    rsp,0x10
  01817:    	movq   QWORD PTR [rsp],xmm3
  0181c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01822: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0182b:    	mov    QWORD PTR [rsp-0x38],rcx
  01830:    	mov    rax,QWORD PTR [rbx]
  01833:    	lea    rdi,[rsp-0x18]
  01838:    	mov    QWORD PTR [rdi],rax
  0183b:    	mov    QWORD PTR [rbx],rdi
  0183e:    	mov    rax,QWORD PTR [rbp-0x50]
  01842:    	mov    QWORD PTR [rsp-0x38],rax
  01847: 00 	mov    rdi,0x1
  0184e:    	mov    rax,QWORD PTR [rbp-0x58]
  01852:    	mov    QWORD PTR [rsp-0x40],rax
  01857: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01860: 09 	movabs rax,0x900000041
  0186a:    	mov    QWORD PTR [rsp-0x28],rax
  0186f: 34 	movabs r13,0x563439838e30
  01879:    	call   0xfffe29a5
  0187e:    	lea    rdi,[rbp-0x8]
  01882:    	mov    QWORD PTR [rbx],rdi
  01885:    	movq   xmm3,QWORD PTR [rsp]
  0188a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01890:    	add    rsp,0x10
  01894: 34 	movabs r13,0x5634398729e0
  0189e:    	test   rax,rax
  018a1:    	je     0xfffd5f3b
  018a7:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  018ab:    	sub    rsp,0x10
  018af:    	movq   QWORD PTR [rsp],xmm3
  018b4:    	movq   QWORD PTR [rsp+0x8],xmm4
  018ba:    	mov    rdx,QWORD PTR [rbp-0x30]
  018be:    	mov    rcx,QWORD PTR [rbp-0x40]
  018c2:    	mov    r8,QWORD PTR [rbp-0x48]
  018c6:    	mov    rdi,rbx
  018c9:    	mov    rsi,r12
  018cc: 34 	movabs rax,0x563437f474a0
  018d6:    	call   rax
  018d8:    	movq   xmm3,QWORD PTR [rsp]
  018dd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018e3:    	add    rsp,0x10
  018e7: 34 	movabs r13,0x563439872a00
  018f1:    	test   rax,rax
  018f4:    	je     0xfffd5f3b
:00097 %3 = 0: i32
  018fa: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  01902: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  0190a:    	sub    rsp,0x10
  0190e:    	movq   QWORD PTR [rsp],xmm3
  01913:    	movq   QWORD PTR [rsp+0x8],xmm4
  01919:    	mov    rdx,QWORD PTR [rbp-0x30]
  0191d:    	mov    rcx,QWORD PTR [rbp-0x50]
  01921:    	mov    rdi,rbx
  01924:    	mov    rsi,r12
  01927: 34 	movabs r8,0x563439872a28
  01931: 34 	movabs rax,0x563437f47370
  0193b:    	call   rax
  0193d:    	movq   xmm3,QWORD PTR [rsp]
  01942:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01948:    	add    rsp,0x10
  0194c: 34 	movabs r13,0x563439872a30
  01956:    	test   rax,rax
  01959:    	je     0xfffd5f3b
  0195f:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  01963:    	mov    rdi,QWORD PTR [rbp-0x50]
  01967: 00 	test   rdi,0x7
  0196e:    	jne    0x2f0ae
  01974:    	cmp    DWORD PTR [rdi+0x4],0x28
  01978:    	jne    0x2f0ae
  0197e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd7174],0x26        # 0xfffd8af9
  01985:    	jne    0x2f0ae
  0198b:    	sub    rsp,0x10
  0198f:    	movq   QWORD PTR [rsp],xmm3
  01994:    	movq   QWORD PTR [rsp+0x8],xmm4
  0199a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  019a3:    	mov    QWORD PTR [rsp-0x38],rcx
  019a8:    	mov    rax,QWORD PTR [rbx]
  019ab:    	lea    rdi,[rsp-0x18]
  019b0:    	mov    QWORD PTR [rdi],rax
  019b3:    	mov    QWORD PTR [rbx],rdi
  019b6:    	mov    rax,QWORD PTR [rbp-0x50]
  019ba:    	mov    QWORD PTR [rsp-0x38],rax
  019bf: 00 	mov    rdi,0x0
  019c6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019cf: 07 	movabs rax,0x1000700000044
  019d9:    	mov    QWORD PTR [rsp-0x28],rax
  019de: 34 	movabs r13,0x5634398639e0
  019e8:    	call   0xfffd9432
  019ed:    	lea    rdi,[rbp-0x8]
  019f1:    	mov    QWORD PTR [rbx],rdi
  019f4:    	movq   xmm3,QWORD PTR [rsp]
  019f9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019ff:    	add    rsp,0x10
  01a03: 34 	movabs r13,0x563439872a50
  01a0d:    	test   rax,rax
  01a10:    	je     0xfffd5f3b
  01a16:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  01a1a:    	sub    rsp,0x10
  01a1e:    	movq   QWORD PTR [rsp],xmm3
  01a23:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a29:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a2d:    	mov    rcx,QWORD PTR [rbp-0x40]
  01a31:    	mov    r8,QWORD PTR [rbp-0x48]
  01a35:    	mov    rdi,rbx
  01a38:    	mov    rsi,r12
  01a3b: 34 	movabs rax,0x563437f474a0
  01a45:    	call   rax
  01a47:    	movq   xmm3,QWORD PTR [rsp]
  01a4c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a52:    	add    rsp,0x10
  01a56: 34 	movabs r13,0x563439872a70
  01a60:    	test   rax,rax
  01a63:    	je     0xfffd5f3b
:00104 %3 = 1: i32
  01a69: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  01a71: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01a79:    	sub    rsp,0x10
  01a7d:    	movq   QWORD PTR [rsp],xmm3
  01a82:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a88:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a8c:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a90:    	mov    rdi,rbx
  01a93:    	mov    rsi,r12
  01a96: 34 	movabs r8,0x563439872a98
  01aa0: 34 	movabs rax,0x563437f47370
  01aaa:    	call   rax
  01aac:    	movq   xmm3,QWORD PTR [rsp]
  01ab1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01ab7:    	add    rsp,0x10
  01abb: 34 	movabs r13,0x563439872aa0
  01ac5:    	test   rax,rax
  01ac8:    	je     0xfffd5f3b
  01ace:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  01ad2: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  01ada:    	sub    rsp,0x10
  01ade:    	movq   QWORD PTR [rsp],xmm3
  01ae3:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ae9:    	mov    rdx,QWORD PTR [rbp-0x30]
  01aed:    	mov    rcx,QWORD PTR [rbp-0x58]
  01af1:    	mov    rdi,rbx
  01af4:    	mov    rsi,r12
  01af7: 34 	movabs r8,0x563439872ab8
  01b01: 34 	movabs rax,0x563437f47370
  01b0b:    	call   rax
  01b0d:    	movq   xmm3,QWORD PTR [rsp]
  01b12:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b18:    	add    rsp,0x10
  01b1c: 34 	movabs r13,0x563439872ac0
  01b26:    	test   rax,rax
  01b29:    	je     0xfffd5f3b
  01b2f:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01b33:    	mov    rdi,QWORD PTR [rbp-0x50]
  01b37: 00 	test   rdi,0x7
  01b3e:    	jne    0x2f0bd
  01b44:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b48:    	jne    0x2f0bd
  01b4e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6fa4],0x26        # 0xfffd8af9
  01b55:    	jne    0x2f0bd
  01b5b:    	sub    rsp,0x10
  01b5f:    	movq   QWORD PTR [rsp],xmm3
  01b64:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b6a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b73:    	mov    QWORD PTR [rsp-0x38],rcx
  01b78:    	mov    rax,QWORD PTR [rbx]
  01b7b:    	lea    rdi,[rsp-0x18]
  01b80:    	mov    QWORD PTR [rdi],rax
  01b83:    	mov    QWORD PTR [rbx],rdi
  01b86:    	mov    rax,QWORD PTR [rbp-0x50]
  01b8a:    	mov    QWORD PTR [rsp-0x38],rax
  01b8f: 00 	mov    rdi,0x1
  01b96:    	mov    rax,QWORD PTR [rbp-0x58]
  01b9a:    	mov    QWORD PTR [rsp-0x40],rax
  01b9f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01ba8: 09 	movabs rax,0x900000041
  01bb2:    	mov    QWORD PTR [rsp-0x28],rax
  01bb7: 34 	movabs r13,0x563439838e30
  01bc1:    	call   0xfffe29a5
  01bc6:    	lea    rdi,[rbp-0x8]
  01bca:    	mov    QWORD PTR [rbx],rdi
  01bcd:    	movq   xmm3,QWORD PTR [rsp]
  01bd2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bd8:    	add    rsp,0x10
  01bdc: 34 	movabs r13,0x563439872ae0
  01be6:    	test   rax,rax
  01be9:    	je     0xfffd5f3b
  01bef:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  01bf3:    	sub    rsp,0x10
  01bf7:    	movq   QWORD PTR [rsp],xmm3
  01bfc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c02:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c06:    	mov    rcx,QWORD PTR [rbp-0x40]
  01c0a:    	mov    r8,QWORD PTR [rbp-0x48]
  01c0e:    	mov    rdi,rbx
  01c11:    	mov    rsi,r12
  01c14: 34 	movabs rax,0x563437f474a0
  01c1e:    	call   rax
  01c20:    	movq   xmm3,QWORD PTR [rsp]
  01c25:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c2b:    	add    rsp,0x10
  01c2f: 34 	movabs r13,0x563439872b00
  01c39:    	test   rax,rax
  01c3c:    	je     0xfffd5f3b
:00113 %3 = 1: i32
  01c42: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01c4a: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01c52:    	sub    rsp,0x10
  01c56:    	movq   QWORD PTR [rsp],xmm3
  01c5b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c61:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c65:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c69:    	mov    rdi,rbx
  01c6c:    	mov    rsi,r12
  01c6f: 34 	movabs r8,0x563439872b28
  01c79: 34 	movabs rax,0x563437f47370
  01c83:    	call   rax
  01c85:    	movq   xmm3,QWORD PTR [rsp]
  01c8a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c90:    	add    rsp,0x10
  01c94: 34 	movabs r13,0x563439872b30
  01c9e:    	test   rax,rax
  01ca1:    	je     0xfffd5f3b
  01ca7:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  01cab:    	mov    rdi,QWORD PTR [rbp-0x50]
  01caf: 00 	test   rdi,0x7
  01cb6:    	jne    0x2f0cc
  01cbc:    	cmp    DWORD PTR [rdi+0x4],0x28
  01cc0:    	jne    0x2f0cc
  01cc6: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6e2c],0x26        # 0xfffd8af9
  01ccd:    	jne    0x2f0cc
  01cd3:    	sub    rsp,0x10
  01cd7:    	movq   QWORD PTR [rsp],xmm3
  01cdc:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ce2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01ceb:    	mov    QWORD PTR [rsp-0x38],rcx
  01cf0:    	mov    rax,QWORD PTR [rbx]
  01cf3:    	lea    rdi,[rsp-0x18]
  01cf8:    	mov    QWORD PTR [rdi],rax
  01cfb:    	mov    QWORD PTR [rbx],rdi
  01cfe:    	mov    rax,QWORD PTR [rbp-0x50]
  01d02:    	mov    QWORD PTR [rsp-0x38],rax
  01d07: 00 	mov    rdi,0x0
  01d0e: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01d17: 07 	movabs rax,0x1000700000044
  01d21:    	mov    QWORD PTR [rsp-0x28],rax
  01d26: 34 	movabs r13,0x5634398639e0
  01d30:    	call   0xfffd9432
  01d35:    	lea    rdi,[rbp-0x8]
  01d39:    	mov    QWORD PTR [rbx],rdi
  01d3c:    	movq   xmm3,QWORD PTR [rsp]
  01d41:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d47:    	add    rsp,0x10
  01d4b: 34 	movabs r13,0x563439872b50
  01d55:    	test   rax,rax
  01d58:    	je     0xfffd5f3b
  01d5e:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  01d62:    	sub    rsp,0x10
  01d66:    	movq   QWORD PTR [rsp],xmm3
  01d6b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d71:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d75:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d79:    	mov    r8,QWORD PTR [rbp-0x48]
  01d7d:    	mov    rdi,rbx
  01d80:    	mov    rsi,r12
  01d83: 34 	movabs rax,0x563437f474a0
  01d8d:    	call   rax
  01d8f:    	movq   xmm3,QWORD PTR [rsp]
  01d94:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d9a:    	add    rsp,0x10
  01d9e: 34 	movabs r13,0x563439872b70
  01da8:    	test   rax,rax
  01dab:    	je     0xfffd5f3b
:00120 %3 = %4
  01db1:    	mov    rax,QWORD PTR [rbp-0x48]
  01db5:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  01db9:    	mov    rax,QWORD PTR [rbp-0x40]
  01dbd:    	leave  
  01dbe:    	ret    
==> start whole compile: otherBasis FuncId(60) self_class:Scene start:[00000] bytecode:0x5634398723f0
<== finished compile. elapsed:140µs
offset:Pos(180276) code: 7580 bytes  data: 340 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	je     0x4a
  00014:    	jl     0x1f
  0001a:    	jmp    0x2d1a7
  0001f:    	jmp    0x2d1a7
  00024:    	mov    eax,0x2
  00029:    	sub    eax,edx
  0002b:    	test   rax,rax
  0002e:    	je     0x4a
  00034:    	lea    rdi,[rbp-0x40]
  00038: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00040:    	sub    rax,0x1
  00044:    	jne    0x38
  0004a: 00 	mov    rax,0x4
  00051:    	mov    QWORD PTR [rbp-0x40],rax
  00055:    	mov    QWORD PTR [rbp-0x48],rax
  00059:    	mov    QWORD PTR [rbp-0x50],rax
  0005d:    	mov    QWORD PTR [rbp-0x58],rax
  00061:    	mov    QWORD PTR [rbp-0x60],rax
  00065:    	mov    QWORD PTR [rbp-0x68],rax
  00069:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2d1b6
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x32
  0007e:    	jne    0x2d1b6
:00000 init_method reg:9 arg:2 pos:2 req:2 stack_offset:7
:00001 %3 = 2: i32
  00084: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00002 %5 = const[Vec]                      [Vec]
  0008c: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd6b39]        # 0xfffd6bcc
  00093: 00 	cmp    rax,QWORD PTR [rip+0x1d12]        # 0x1dac
  0009a:    	jne    0x2d1c5
  000a0: 00 	mov    rax,QWORD PTR [rip+0x1cf5]        # 0x1d9c
  000a7:    	mov    QWORD PTR [rbp-0x50],rax
:00003 %6 = %2.call x()                     [Vec]
  000ab:    	mov    rdi,QWORD PTR [rbp-0x38]
  000af: 00 	test   rdi,0x7
  000b6:    	jne    0x2d20b
  000bc:    	cmp    DWORD PTR [rdi+0x4],0x28
  000c0:    	jne    0x2d20b
  000c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6af8],0x26        # 0xfffd6bc5
  000cd:    	jne    0x2d20b
  000d3:    	mov    esi,DWORD PTR [rip+0x1cdf]        # 0x1db8
  000d9:    	cmp    esi,0xffffffff
  000dc:    	je     0x2d21a
  000e2:    	cmp    WORD PTR [rdi+0x2],0x3
  000e7:    	jne    0x100
  000ed:    	cmp    esi,0x6
  000f0:    	jge    0x100
  000f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000fb:    	jmp    0x10c
  00100: 34 	movabs rax,0x563437ed0590
  0010a:    	call   rax
  0010c:    	mov    QWORD PTR [rbp-0x58],rax
:00004 
:00006 %7 = %2.call y()                     [Vec]
  00110:    	mov    rdi,QWORD PTR [rbp-0x38]
  00114: 00 	test   rdi,0x7
  0011b:    	jne    0x2d243
  00121:    	cmp    DWORD PTR [rdi+0x4],0x28
  00125:    	jne    0x2d243
  0012b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6a93],0x26        # 0xfffd6bc5
  00132:    	jne    0x2d243
  00138:    	mov    esi,DWORD PTR [rip+0x1c82]        # 0x1dc0
  0013e:    	cmp    esi,0xffffffff
  00141:    	je     0x2d252
  00147:    	cmp    WORD PTR [rdi+0x2],0x3
  0014c:    	jne    0x165
  00152:    	cmp    esi,0x6
  00155:    	jge    0x165
  0015b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00160:    	jmp    0x171
  00165: 34 	movabs rax,0x563437ed0590
  0016f:    	call   rax
  00171:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = %2.call z()                     [Vec]
  00175:    	mov    rdi,QWORD PTR [rbp-0x38]
  00179: 00 	test   rdi,0x7
  00180:    	jne    0x2d27b
  00186:    	cmp    DWORD PTR [rdi+0x4],0x28
  0018a:    	jne    0x2d27b
  00190: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6a2e],0x26        # 0xfffd6bc5
  00197:    	jne    0x2d27b
  0019d:    	mov    esi,DWORD PTR [rip+0x1c25]        # 0x1dc8
  001a3:    	cmp    esi,0xffffffff
  001a6:    	je     0x2d28a
  001ac:    	cmp    WORD PTR [rdi+0x2],0x3
  001b1:    	jne    0x1ca
  001b7:    	cmp    esi,0x6
  001ba:    	jge    0x1ca
  001c0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001c5:    	jmp    0x1d6
  001ca: 34 	movabs rax,0x563437ed0590
  001d4:    	call   rax
  001d6:    	mov    QWORD PTR [rbp-0x68],rax
:00010 
:00012 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  001da:    	mov    rdi,QWORD PTR [rbp-0x50]
  001de: 00 	test   rdi,0x7
  001e5:    	jne    0x2d2b3
  001eb:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ef:    	jne    0x2d2b3
  001f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffd69c9],0x26        # 0xfffd6bc5
  001fc:    	jne    0x2d2b3
  00202: 00 	mov    r9,0x0
  00209:    	mov    rdx,rdi
  0020c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00215:    	mov    QWORD PTR [rsp-0x38],rcx
  0021a:    	mov    rax,QWORD PTR [rbx]
  0021d:    	lea    rdi,[rsp-0x18]
  00222:    	mov    QWORD PTR [rdi],rax
  00225:    	mov    QWORD PTR [rbx],rdi
  00228:    	lea    rcx,[rbp-0x58]
  0022c: 00 	mov    r8,0x3
  00233:    	call   0x2d2c2
  00238:    	lea    rdi,[rbp-0x8]
  0023c:    	mov    QWORD PTR [rbx],rdi
  0023f: 34 	movabs r13,0x5634398724d0
  00249:    	test   rax,rax
  0024c:    	je     0xfffd4007
  00252:    	mov    QWORD PTR [rbp-0x48],rax
:00013 
:00015 %1:.[%3:] = %4
  00256:    	mov    rdx,QWORD PTR [rbp-0x30]
  0025a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0025e:    	mov    r8,QWORD PTR [rbp-0x48]
  00262:    	mov    rdi,rbx
  00265:    	mov    rsi,r12
  00268: 34 	movabs rax,0x563437f474a0
  00272:    	call   rax
  00274: 34 	movabs r13,0x5634398724f0
  0027e:    	test   rax,rax
  00281:    	je     0xfffd4007
:00016 %3 = 1: i32
  00287: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00017 %5 = const[Vec]                      [Vec]
  0028f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd6936]        # 0xfffd6bcc
  00296: 00 	cmp    rax,QWORD PTR [rip+0x1b3f]        # 0x1ddc
  0029d:    	jne    0x2d2f4
  002a3: 00 	mov    rax,QWORD PTR [rip+0x1b22]        # 0x1dcc
  002aa:    	mov    QWORD PTR [rbp-0x50],rax
:00018 %6 = literal[0.0]
  002ae: 00 	movq   xmm2,QWORD PTR [rip+0x1b36]        # 0x1dec
  002b6: 00 	movabs rax,0x8000000000000002
  002c0:    	mov    QWORD PTR [rbp-0x58],rax
:00019 %7 = literal[0.0]
  002c4: 00 	movq   xmm3,QWORD PTR [rip+0x1b30]        # 0x1dfc
  002cc: 00 	movabs rax,0x8000000000000002
  002d6:    	mov    QWORD PTR [rbp-0x60],rax
:00020 %8 = literal[0.0]
  002da: 00 	movq   xmm4,QWORD PTR [rip+0x1b2a]        # 0x1e0c
  002e2: 00 	movabs rax,0x8000000000000002
  002ec:    	mov    QWORD PTR [rbp-0x68],rax
:00021 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002f0:    	mov    rdi,QWORD PTR [rbp-0x50]
  002f4: 00 	test   rdi,0x7
  002fb:    	jne    0x2d33a
  00301:    	cmp    DWORD PTR [rdi+0x4],0x29
  00305:    	jne    0x2d33a
  0030b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd68b3],0x26        # 0xfffd6bc5
  00312:    	jne    0x2d33a
  00318: 00 	mov    r9,0x0
  0031f:    	sub    rsp,0x20
  00323:    	movq   QWORD PTR [rsp],xmm2
  00328:    	movq   QWORD PTR [rsp+0x8],xmm3
  0032e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00334:    	mov    rdx,rdi
  00337: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00340:    	mov    QWORD PTR [rsp-0x38],rcx
  00345:    	mov    rax,QWORD PTR [rbx]
  00348:    	lea    rdi,[rsp-0x18]
  0034d:    	mov    QWORD PTR [rdi],rax
  00350:    	mov    QWORD PTR [rbx],rdi
  00353:    	lea    rcx,[rbp-0x58]
  00357: 00 	mov    r8,0x3
  0035e:    	call   0x2d349
  00363:    	lea    rdi,[rbp-0x8]
  00367:    	mov    QWORD PTR [rbx],rdi
  0036a:    	movq   xmm2,QWORD PTR [rsp]
  0036f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00375:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0037b:    	add    rsp,0x20
  0037f: 34 	movabs r13,0x563439872560
  00389:    	test   rax,rax
  0038c:    	je     0xfffd4007
  00392:    	mov    QWORD PTR [rbp-0x48],rax
:00022 
:00024 %1:.[%3:] = %4
  00396:    	sub    rsp,0x20
  0039a:    	movq   QWORD PTR [rsp],xmm2
  0039f:    	movq   QWORD PTR [rsp+0x8],xmm3
  003a5:    	movq   QWORD PTR [rsp+0x10],xmm4
  003ab:    	mov    rdx,QWORD PTR [rbp-0x30]
  003af:    	mov    rcx,QWORD PTR [rbp-0x40]
  003b3:    	mov    r8,QWORD PTR [rbp-0x48]
  003b7:    	mov    rdi,rbx
  003ba:    	mov    rsi,r12
  003bd: 34 	movabs rax,0x563437f474a0
  003c7:    	call   rax
  003c9:    	movq   xmm2,QWORD PTR [rsp]
  003ce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003d4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003da:    	add    rsp,0x20
  003de: 34 	movabs r13,0x563439872580
  003e8:    	test   rax,rax
  003eb:    	je     0xfffd4007
:00025 %3 = %2.call x()                     [Vec]
  003f1:    	mov    rdi,QWORD PTR [rbp-0x38]
  003f5: 00 	test   rdi,0x7
  003fc:    	jne    0x2d37b
  00402:    	cmp    DWORD PTR [rdi+0x4],0x28
  00406:    	jne    0x2d37b
  0040c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd67b2],0x26        # 0xfffd6bc5
  00413:    	jne    0x2d37b
  00419:    	mov    esi,DWORD PTR [rip+0x19f9]        # 0x1e18
  0041f:    	cmp    esi,0xffffffff
  00422:    	je     0x2d38a
  00428:    	cmp    WORD PTR [rdi+0x2],0x3
  0042d:    	jne    0x446
  00433:    	cmp    esi,0x6
  00436:    	jge    0x446
  0043c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00441:    	jmp    0x47c
  00446:    	sub    rsp,0x20
  0044a:    	movq   QWORD PTR [rsp],xmm2
  0044f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00455:    	movq   QWORD PTR [rsp+0x10],xmm4
  0045b: 34 	movabs rax,0x563437ed0590
  00465:    	call   rax
  00467:    	movq   xmm2,QWORD PTR [rsp]
  0046c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00472:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00478:    	add    rsp,0x20
  0047c:    	mov    QWORD PTR [rbp-0x40],rax
:00026 
:00028 %4 = literal[0.6]
  00480: 00 	movq   xmm5,QWORD PTR [rip+0x1994]        # 0x1e1c
  00488: 99 	movabs rax,0xff1999999999999a
  00492:    	mov    QWORD PTR [rbp-0x48],rax
:00029 _%3 = %3 < %4                        [Float][Float]
:00030 condnotbr _%3 =>:00044
  00496:    	mov    rdi,QWORD PTR [rbp-0x40]
  0049a: 00 	test   rdi,0x1
  004a1:    	jne    0x2d3dd
  004a7: 00 	test   rdi,0x2
  004ae:    	je     0x4ea
  004b4:    	xorps  xmm6,xmm6
  004b7: 00 	movabs rax,0x8000000000000002
  004c1:    	cmp    rdi,rax
  004c4:    	je     0x4fc
  004ca:    	mov    rax,rdi
  004cd:    	sar    rax,0x3f
  004d1:    	add    rax,0x2
  004d5:    	and    rdi,0xfffffffffffffffc
  004d9:    	or     rdi,rax
  004dc:    	rol    rdi,0x3d
  004e0:    	movq   xmm6,rdi
  004e5:    	jmp    0x4fc
  004ea:    	call   0xfffd4060
  004ef:    	test   rax,rax
  004f2:    	je     0x2d3dd
  004f8:    	movq   xmm6,xmm0
  004fc:    	ucomisd xmm6,xmm5
  00500:    	jae    0x2d4de
:00031 %3 = %2.call x()                     [Vec]
  00506:    	mov    rdi,QWORD PTR [rbp-0x38]
  0050a: 00 	test   rdi,0x7
  00511:    	jne    0x2d3ec
  00517:    	cmp    DWORD PTR [rdi+0x4],0x28
  0051b:    	jne    0x2d3ec
  00521: 26 	cmp    DWORD PTR [rip+0xfffffffffffd669d],0x26        # 0xfffd6bc5
  00528:    	jne    0x2d3ec
  0052e:    	mov    esi,DWORD PTR [rip+0x18f4]        # 0x1e28
  00534:    	cmp    esi,0xffffffff
  00537:    	je     0x2d3fb
  0053d:    	cmp    WORD PTR [rdi+0x2],0x3
  00542:    	jne    0x55b
  00548:    	cmp    esi,0x6
  0054b:    	jge    0x55b
  00551:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00556:    	jmp    0x59d
  0055b:    	sub    rsp,0x20
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576: 34 	movabs rax,0x563437ed0590
  00580:    	call   rax
  00582:    	movq   xmm2,QWORD PTR [rsp]
  00587:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0058d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00593:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00599:    	add    rsp,0x20
  0059d:    	mov    QWORD PTR [rbp-0x40],rax
:00032 
:00034 %4 = literal[-0.6]
  005a1: 00 	movq   xmm5,QWORD PTR [rip+0x1883]        # 0x1e2c
  005a9: 99 	movabs rax,0xff1999999999999e
  005b3:    	mov    QWORD PTR [rbp-0x48],rax
:00035 _%3 = %3 > %4                        [Float][Float]
:00036 condnotbr _%3 =>:00044
  005b7:    	mov    rdi,QWORD PTR [rbp-0x40]
  005bb: 00 	test   rdi,0x1
  005c2:    	jne    0x2d45a
  005c8: 00 	test   rdi,0x2
  005cf:    	je     0x60b
  005d5:    	xorps  xmm6,xmm6
  005d8: 00 	movabs rax,0x8000000000000002
  005e2:    	cmp    rdi,rax
  005e5:    	je     0x61d
  005eb:    	mov    rax,rdi
  005ee:    	sar    rax,0x3f
  005f2:    	add    rax,0x2
  005f6:    	and    rdi,0xfffffffffffffffc
  005fa:    	or     rdi,rax
  005fd:    	rol    rdi,0x3d
  00601:    	movq   xmm6,rdi
  00606:    	jmp    0x61d
  0060b:    	call   0xfffd4060
  00610:    	test   rax,rax
  00613:    	je     0x2d45a
  00619:    	movq   xmm6,xmm0
  0061d:    	ucomisd xmm6,xmm5
  00621:    	jbe    0x2d4f7
:00037 %3 = 1: i32
  00627: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00038 %3 = %1.[%3]                         [Array][Integer]
  0062f:    	sub    rsp,0x20
  00633:    	movq   QWORD PTR [rsp],xmm2
  00638:    	movq   QWORD PTR [rsp+0x8],xmm3
  0063e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00644:    	movq   QWORD PTR [rsp+0x18],xmm5
  0064a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0064e:    	mov    rcx,QWORD PTR [rbp-0x40]
  00652:    	mov    rdi,rbx
  00655:    	mov    rsi,r12
  00658: 34 	movabs r8,0x563439872658
  00662: 34 	movabs rax,0x563437f47370
  0066c:    	call   rax
  0066e:    	movq   xmm2,QWORD PTR [rsp]
  00673:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00679:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0067f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00685:    	add    rsp,0x20
  00689: 34 	movabs r13,0x563439872660
  00693:    	test   rax,rax
  00696:    	je     0xfffd4007
  0069c:    	mov    QWORD PTR [rbp-0x40],rax
:00039 %4 = literal[1.0]
  006a0: 00 	movq   xmm5,QWORD PTR [rip+0x1794]        # 0x1e3c
  006a8: 00 	movabs rax,0xff80000000000002
  006b2:    	mov    QWORD PTR [rbp-0x48],rax
:00040 _ = %3.call x=(%4; 1)                [Vec]
  006b6:    	mov    rdi,QWORD PTR [rbp-0x40]
  006ba: 00 	test   rdi,0x7
  006c1:    	jne    0x2d469
  006c7:    	cmp    DWORD PTR [rdi+0x4],0x28
  006cb:    	jne    0x2d469
  006d1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd64ed],0x26        # 0xfffd6bc5
  006d8:    	jne    0x2d469
  006de:    	mov    esi,DWORD PTR [rip+0x1764]        # 0x1e48
  006e4:    	cmp    esi,0xffffffff
  006e7:    	je     0x2d478
  006ed:    	cmp    WORD PTR [rdi+0x2],0x3
  006f2:    	jne    0x70f
  006f8:    	cmp    esi,0x6
  006fb:    	jge    0x70f
  00701:    	mov    rax,QWORD PTR [rbp-0x48]
  00705:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0070a:    	jmp    0x768
  0070f:    	sub    rsp,0x20
  00713:    	movq   QWORD PTR [rsp],xmm2
  00718:    	movq   QWORD PTR [rsp+0x8],xmm3
  0071e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00724:    	movq   QWORD PTR [rsp+0x18],xmm5
  0072a:    	mov    rdx,QWORD PTR [rbp-0x48]
  0072e: 34 	movabs rax,0x563437ed0810
  00738:    	call   rax
  0073a:    	movq   xmm2,QWORD PTR [rsp]
  0073f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00745:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0074b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00751:    	add    rsp,0x20
  00755: 34 	movabs r13,0x563439872690
  0075f:    	test   rax,rax
  00762:    	je     0xfffd4007
:00041 
:00043 br =>:00088
  00768:    	jmp    0x2d9f5
:00044 %3 = %2.call y()                     [Vec]
  0076d:    	mov    rdi,QWORD PTR [rbp-0x38]
  00771: 00 	test   rdi,0x7
  00778:    	jne    0x2d510
  0077e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00782:    	jne    0x2d510
  00788: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6436],0x26        # 0xfffd6bc5
  0078f:    	jne    0x2d510
  00795:    	mov    esi,DWORD PTR [rip+0x16b5]        # 0x1e50
  0079b:    	cmp    esi,0xffffffff
  0079e:    	je     0x2d51f
  007a4:    	cmp    WORD PTR [rdi+0x2],0x3
  007a9:    	jne    0x7c2
  007af:    	cmp    esi,0x6
  007b2:    	jge    0x7c2
  007b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007bd:    	jmp    0x804
  007c2:    	sub    rsp,0x20
  007c6:    	movq   QWORD PTR [rsp],xmm2
  007cb:    	movq   QWORD PTR [rsp+0x8],xmm3
  007d1:    	movq   QWORD PTR [rsp+0x10],xmm4
  007d7:    	movq   QWORD PTR [rsp+0x18],xmm5
  007dd: 34 	movabs rax,0x563437ed0590
  007e7:    	call   rax
  007e9:    	movq   xmm2,QWORD PTR [rsp]
  007ee:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007f4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007fa:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00800:    	add    rsp,0x20
  00804:    	mov    QWORD PTR [rbp-0x40],rax
:00045 
:00047 %4 = literal[0.6]
  00808: 00 	movq   xmm5,QWORD PTR [rip+0x164c]        # 0x1e5c
  00810: 99 	movabs rax,0xff1999999999999a
  0081a:    	mov    QWORD PTR [rbp-0x48],rax
:00048 _%3 = %3 < %4                        [Float][Float]
:00049 condnotbr _%3 =>:00063
  0081e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00822: 00 	test   rdi,0x1
  00829:    	jne    0x2d57e
  0082f: 00 	test   rdi,0x2
  00836:    	je     0x872
  0083c:    	xorps  xmm6,xmm6
  0083f: 00 	movabs rax,0x8000000000000002
  00849:    	cmp    rdi,rax
  0084c:    	je     0x884
  00852:    	mov    rax,rdi
  00855:    	sar    rax,0x3f
  00859:    	add    rax,0x2
  0085d:    	and    rdi,0xfffffffffffffffc
  00861:    	or     rdi,rax
  00864:    	rol    rdi,0x3d
  00868:    	movq   xmm6,rdi
  0086d:    	jmp    0x884
  00872:    	call   0xfffd4060
  00877:    	test   rax,rax
  0087a:    	je     0x2d57e
  00880:    	movq   xmm6,xmm0
  00884:    	ucomisd xmm6,xmm5
  00888:    	jae    0x2d73a
:00050 %3 = %2.call y()                     [<INVALID>]
  0088e: 01 	sub    DWORD PTR [rip+0x15cf],0x1        # 0x1e64
  00895:    	je     0x2d59c
  0089b:    	sub    rsp,0x20
  0089f:    	movq   QWORD PTR [rsp],xmm2
  008a4:    	movq   QWORD PTR [rsp+0x8],xmm3
  008aa:    	movq   QWORD PTR [rsp+0x10],xmm4
  008b0:    	movq   QWORD PTR [rsp+0x18],xmm5
  008b6:    	mov    rdi,QWORD PTR [rbp-0x38]
  008ba: 34 	movabs rax,0x563437f53600
  008c4:    	call   rax
  008c6:    	mov    r15d,eax
  008c9: 00 	cmp    r15d,DWORD PTR [rip+0x159c]        # 0x1e6c
  008d0:    	jne    0x2d5be
  008d6:    	mov    eax,DWORD PTR [rip+0xfffffffffffd62e9]        # 0xfffd6bc5
  008dc:    	cmp    DWORD PTR [rip+0x1586],eax        # 0x1e68
  008e2:    	jne    0x2d5be
  008e8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008f1:    	mov    QWORD PTR [rsp-0x38],rcx
  008f6:    	mov    rax,QWORD PTR [rbx]
  008f9:    	lea    rdi,[rsp-0x18]
  008fe:    	mov    QWORD PTR [rdi],rax
  00901:    	mov    QWORD PTR [rbx],rdi
  00904:    	mov    rax,QWORD PTR [rbp-0x38]
  00908:    	mov    QWORD PTR [rsp-0x38],rax
  0090d: 00 	mov    rdi,0x0
  00914: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0091d: 00 	movabs rax,0x0
  00927:    	mov    QWORD PTR [rsp-0x28],rax
  0092c: 00 	movabs r13,0x0
  00936:    	call   0xfffd3fcc
  0093b:    	lea    rdi,[rbp-0x8]
  0093f:    	mov    QWORD PTR [rbx],rdi
  00942:    	movq   xmm2,QWORD PTR [rsp]
  00947:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0094d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00953:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00959:    	add    rsp,0x20
  0095d:    	test   rax,rax
  00960:    	je     0x2d62a
  00966:    	mov    QWORD PTR [rbp-0x40],rax
:00051 
:00053 %4 = literal[-0.6]
  0096a: 00 	movq   xmm5,QWORD PTR [rip+0x150a]        # 0x1e7c
  00972: 99 	movabs rax,0xff1999999999999e
  0097c:    	mov    QWORD PTR [rbp-0x48],rax
:00054 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00055 condnotbr _%3 =>:00063
  00980:    	mov    rdi,QWORD PTR [rbp-0x40]
  00984:    	mov    rsi,QWORD PTR [rbp-0x48]
  00988: 00 	test   rdi,0x1
  0098f:    	je     0x2d639
  00995: 00 	test   rsi,0x1
  0099c:    	je     0x2d639
  009a2:    	cmp    rdi,rsi
  009a5:    	jle    0x2d753
:00056 %3 = 1: i32
  009ab: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00057 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  009b3:    	sub    rsp,0x20
  009b7:    	movq   QWORD PTR [rsp],xmm2
  009bc:    	movq   QWORD PTR [rsp+0x8],xmm3
  009c2:    	movq   QWORD PTR [rsp+0x10],xmm4
  009c8:    	movq   QWORD PTR [rsp+0x18],xmm5
  009ce:    	mov    rdx,QWORD PTR [rbp-0x30]
  009d2:    	mov    rcx,QWORD PTR [rbp-0x40]
  009d6:    	mov    rdi,rbx
  009d9:    	mov    rsi,r12
  009dc: 34 	movabs r8,0x563439872788
  009e6: 34 	movabs rax,0x563437f47370
  009f0:    	call   rax
  009f2:    	movq   xmm2,QWORD PTR [rsp]
  009f7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009fd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a03:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a09:    	add    rsp,0x20
  00a0d: 34 	movabs r13,0x563439872790
  00a17:    	test   rax,rax
  00a1a:    	je     0xfffd4007
  00a20:    	mov    QWORD PTR [rbp-0x40],rax
:00058 %4 = literal[1.0]
  00a24: 00 	movq   xmm5,QWORD PTR [rip+0x1460]        # 0x1e8c
  00a2c: 00 	movabs rax,0xff80000000000002
  00a36:    	mov    QWORD PTR [rbp-0x48],rax
:00059 _ = %3.call y=(%4; 1)                [<INVALID>]
  00a3a: 01 	sub    DWORD PTR [rip+0x1453],0x1        # 0x1e94
  00a41:    	je     0x2d69d
  00a47:    	sub    rsp,0x20
  00a4b:    	movq   QWORD PTR [rsp],xmm2
  00a50:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a56:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a5c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a62:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a66: 34 	movabs rax,0x563437f53600
  00a70:    	call   rax
  00a72:    	mov    r15d,eax
  00a75: 00 	cmp    r15d,DWORD PTR [rip+0x1420]        # 0x1e9c
  00a7c:    	jne    0x2d6bf
  00a82:    	mov    eax,DWORD PTR [rip+0xfffffffffffd613d]        # 0xfffd6bc5
  00a88:    	cmp    DWORD PTR [rip+0x140a],eax        # 0x1e98
  00a8e:    	jne    0x2d6bf
  00a94: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a9d:    	mov    QWORD PTR [rsp-0x38],rcx
  00aa2:    	mov    rax,QWORD PTR [rbx]
  00aa5:    	lea    rdi,[rsp-0x18]
  00aaa:    	mov    QWORD PTR [rdi],rax
  00aad:    	mov    QWORD PTR [rbx],rdi
  00ab0:    	mov    rax,QWORD PTR [rbp-0x40]
  00ab4:    	mov    QWORD PTR [rsp-0x38],rax
  00ab9: 00 	mov    rdi,0x1
  00ac0:    	mov    rax,QWORD PTR [rbp-0x48]
  00ac4:    	mov    QWORD PTR [rsp-0x40],rax
  00ac9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ad2: 00 	movabs rax,0x0
  00adc:    	mov    QWORD PTR [rsp-0x28],rax
  00ae1: 00 	movabs r13,0x0
  00aeb:    	call   0xfffd3fcc
  00af0:    	lea    rdi,[rbp-0x8]
  00af4:    	mov    QWORD PTR [rbx],rdi
  00af7:    	movq   xmm2,QWORD PTR [rsp]
  00afc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b02:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b08:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b0e:    	add    rsp,0x20
  00b12:    	test   rax,rax
  00b15:    	je     0x2d72b
:00060 
:00062 br =>:00088
  00b1b:    	jmp    0x2da0e
:00063 %3 = %2.call z()                     [Vec]
  00b20:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b24: 00 	test   rdi,0x7
  00b2b:    	jne    0x2d76c
  00b31:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b35:    	jne    0x2d76c
  00b3b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd6083],0x26        # 0xfffd6bc5
  00b42:    	jne    0x2d76c
  00b48:    	mov    esi,DWORD PTR [rip+0x1356]        # 0x1ea4
  00b4e:    	cmp    esi,0xffffffff
  00b51:    	je     0x2d77b
  00b57:    	cmp    WORD PTR [rdi+0x2],0x3
  00b5c:    	jne    0xb75
  00b62:    	cmp    esi,0x6
  00b65:    	jge    0xb75
  00b6b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b70:    	jmp    0xbb7
  00b75:    	sub    rsp,0x20
  00b79:    	movq   QWORD PTR [rsp],xmm2
  00b7e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b84:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b8a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b90: 34 	movabs rax,0x563437ed0590
  00b9a:    	call   rax
  00b9c:    	movq   xmm2,QWORD PTR [rsp]
  00ba1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ba7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00bad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00bb3:    	add    rsp,0x20
  00bb7:    	mov    QWORD PTR [rbp-0x40],rax
:00064 
:00066 %4 = literal[0.6]
  00bbb: 00 	movq   xmm5,QWORD PTR [rip+0x12e9]        # 0x1eac
  00bc3: 99 	movabs rax,0xff1999999999999a
  00bcd:    	mov    QWORD PTR [rbp-0x48],rax
:00067 _%3 = %3 < %4                        [Float][Float]
:00068 condnotbr _%3 =>:00082
  00bd1:    	mov    rdi,QWORD PTR [rbp-0x40]
  00bd5: 00 	test   rdi,0x1
  00bdc:    	jne    0x2d7da
  00be2: 00 	test   rdi,0x2
  00be9:    	je     0xc25
  00bef:    	xorps  xmm6,xmm6
  00bf2: 00 	movabs rax,0x8000000000000002
  00bfc:    	cmp    rdi,rax
  00bff:    	je     0xc37
  00c05:    	mov    rax,rdi
  00c08:    	sar    rax,0x3f
  00c0c:    	add    rax,0x2
  00c10:    	and    rdi,0xfffffffffffffffc
  00c14:    	or     rdi,rax
  00c17:    	rol    rdi,0x3d
  00c1b:    	movq   xmm6,rdi
  00c20:    	jmp    0xc37
  00c25:    	call   0xfffd4060
  00c2a:    	test   rax,rax
  00c2d:    	je     0x2d7da
  00c33:    	movq   xmm6,xmm0
  00c37:    	ucomisd xmm6,xmm5
  00c3b:    	jae    0x2d8db
:00069 %3 = %2.call z()                     [Vec]
  00c41:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c45: 00 	test   rdi,0x7
  00c4c:    	jne    0x2d7e9
  00c52:    	cmp    DWORD PTR [rdi+0x4],0x28
  00c56:    	jne    0x2d7e9
  00c5c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5f62],0x26        # 0xfffd6bc5
  00c63:    	jne    0x2d7e9
  00c69:    	mov    esi,DWORD PTR [rip+0x1249]        # 0x1eb8
  00c6f:    	cmp    esi,0xffffffff
  00c72:    	je     0x2d7f8
  00c78:    	cmp    WORD PTR [rdi+0x2],0x3
  00c7d:    	jne    0xc96
  00c83:    	cmp    esi,0x6
  00c86:    	jge    0xc96
  00c8c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c91:    	jmp    0xcd8
  00c96:    	sub    rsp,0x20
  00c9a:    	movq   QWORD PTR [rsp],xmm2
  00c9f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ca5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cab:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cb1: 34 	movabs rax,0x563437ed0590
  00cbb:    	call   rax
  00cbd:    	movq   xmm2,QWORD PTR [rsp]
  00cc2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cc8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cce:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cd4:    	add    rsp,0x20
  00cd8:    	mov    QWORD PTR [rbp-0x40],rax
:00070 
:00072 %4 = literal[-0.6]
  00cdc: 00 	movq   xmm5,QWORD PTR [rip+0x11d8]        # 0x1ebc
  00ce4: 99 	movabs rax,0xff1999999999999e
  00cee:    	mov    QWORD PTR [rbp-0x48],rax
:00073 _%3 = %3 > %4                        [Float][Float]
:00074 condnotbr _%3 =>:00082
  00cf2:    	mov    rdi,QWORD PTR [rbp-0x40]
  00cf6: 00 	test   rdi,0x1
  00cfd:    	jne    0x2d857
  00d03: 00 	test   rdi,0x2
  00d0a:    	je     0xd46
  00d10:    	xorps  xmm6,xmm6
  00d13: 00 	movabs rax,0x8000000000000002
  00d1d:    	cmp    rdi,rax
  00d20:    	je     0xd58
  00d26:    	mov    rax,rdi
  00d29:    	sar    rax,0x3f
  00d2d:    	add    rax,0x2
  00d31:    	and    rdi,0xfffffffffffffffc
  00d35:    	or     rdi,rax
  00d38:    	rol    rdi,0x3d
  00d3c:    	movq   xmm6,rdi
  00d41:    	jmp    0xd58
  00d46:    	call   0xfffd4060
  00d4b:    	test   rax,rax
  00d4e:    	je     0x2d857
  00d54:    	movq   xmm6,xmm0
  00d58:    	ucomisd xmm6,xmm5
  00d5c:    	jbe    0x2d8f4
:00075 %3 = 1: i32
  00d62: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00076 %3 = %1.[%3]                         [Array][Integer]
  00d6a:    	sub    rsp,0x20
  00d6e:    	movq   QWORD PTR [rsp],xmm2
  00d73:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d79:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d7f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d85:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d89:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d8d:    	mov    rdi,rbx
  00d90:    	mov    rsi,r12
  00d93: 34 	movabs r8,0x5634398728b8
  00d9d: 34 	movabs rax,0x563437f47370
  00da7:    	call   rax
  00da9:    	movq   xmm2,QWORD PTR [rsp]
  00dae:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00db4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dba:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00dc0:    	add    rsp,0x20
  00dc4: 34 	movabs r13,0x5634398728c0
  00dce:    	test   rax,rax
  00dd1:    	je     0xfffd4007
  00dd7:    	mov    QWORD PTR [rbp-0x40],rax
:00077 %4 = literal[1.0]
  00ddb: 00 	movq   xmm5,QWORD PTR [rip+0x10e9]        # 0x1ecc
  00de3: 00 	movabs rax,0xff80000000000002
  00ded:    	mov    QWORD PTR [rbp-0x48],rax
:00078 _ = %3.call z=(%4; 1)                [Vec]
  00df1:    	mov    rdi,QWORD PTR [rbp-0x40]
  00df5: 00 	test   rdi,0x7
  00dfc:    	jne    0x2d866
  00e02:    	cmp    DWORD PTR [rdi+0x4],0x28
  00e06:    	jne    0x2d866
  00e0c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5db2],0x26        # 0xfffd6bc5
  00e13:    	jne    0x2d866
  00e19:    	mov    esi,DWORD PTR [rip+0x10b9]        # 0x1ed8
  00e1f:    	cmp    esi,0xffffffff
  00e22:    	je     0x2d875
  00e28:    	cmp    WORD PTR [rdi+0x2],0x3
  00e2d:    	jne    0xe4a
  00e33:    	cmp    esi,0x6
  00e36:    	jge    0xe4a
  00e3c:    	mov    rax,QWORD PTR [rbp-0x48]
  00e40:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e45:    	jmp    0xea3
  00e4a:    	sub    rsp,0x20
  00e4e:    	movq   QWORD PTR [rsp],xmm2
  00e53:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e59:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e5f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e65:    	mov    rdx,QWORD PTR [rbp-0x48]
  00e69: 34 	movabs rax,0x563437ed0810
  00e73:    	call   rax
  00e75:    	movq   xmm2,QWORD PTR [rsp]
  00e7a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e80:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e86:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e8c:    	add    rsp,0x20
  00e90: 34 	movabs r13,0x5634398728f0
  00e9a:    	test   rax,rax
  00e9d:    	je     0xfffd4007
:00079 
:00081 br =>:00088
  00ea3:    	jmp    0x2da27
:00082 %3 = 1: i32
  00ea8: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00083 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00eb0:    	sub    rsp,0x20
  00eb4:    	movq   QWORD PTR [rsp],xmm2
  00eb9:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ebf:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ec5:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ecb:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ecf:    	mov    rcx,QWORD PTR [rbp-0x40]
  00ed3:    	mov    rdi,rbx
  00ed6:    	mov    rsi,r12
  00ed9: 34 	movabs r8,0x563439872928
  00ee3: 34 	movabs rax,0x563437f47370
  00eed:    	call   rax
  00eef:    	movq   xmm2,QWORD PTR [rsp]
  00ef4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00efa:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f00:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f06:    	add    rsp,0x20
  00f0a: 34 	movabs r13,0x563439872930
  00f14:    	test   rax,rax
  00f17:    	je     0xfffd4007
  00f1d:    	mov    QWORD PTR [rbp-0x40],rax
:00084 %4 = literal[1.0]
  00f21: 00 	movq   xmm5,QWORD PTR [rip+0xfb3]        # 0x1edc
  00f29: 00 	movabs rax,0xff80000000000002
  00f33:    	mov    QWORD PTR [rbp-0x48],rax
:00085 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f37: 01 	sub    DWORD PTR [rip+0xfa6],0x1        # 0x1ee4
  00f3e:    	je     0x2d91c
  00f44:    	sub    rsp,0x20
  00f48:    	movq   QWORD PTR [rsp],xmm2
  00f4d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f53:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f59:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f5f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f63: 34 	movabs rax,0x563437f53600
  00f6d:    	call   rax
  00f6f:    	mov    r15d,eax
  00f72: 00 	cmp    r15d,DWORD PTR [rip+0xf73]        # 0x1eec
  00f79:    	jne    0x2d93e
  00f7f:    	mov    eax,DWORD PTR [rip+0xfffffffffffd5c40]        # 0xfffd6bc5
  00f85:    	cmp    DWORD PTR [rip+0xf5d],eax        # 0x1ee8
  00f8b:    	jne    0x2d93e
  00f91: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f9a:    	mov    QWORD PTR [rsp-0x38],rcx
  00f9f:    	mov    rax,QWORD PTR [rbx]
  00fa2:    	lea    rdi,[rsp-0x18]
  00fa7:    	mov    QWORD PTR [rdi],rax
  00faa:    	mov    QWORD PTR [rbx],rdi
  00fad:    	mov    rax,QWORD PTR [rbp-0x40]
  00fb1:    	mov    QWORD PTR [rsp-0x38],rax
  00fb6: 00 	mov    rdi,0x1
  00fbd:    	mov    rax,QWORD PTR [rbp-0x48]
  00fc1:    	mov    QWORD PTR [rsp-0x40],rax
  00fc6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fcf: 00 	movabs rax,0x0
  00fd9:    	mov    QWORD PTR [rsp-0x28],rax
  00fde: 00 	movabs r13,0x0
  00fe8:    	call   0xfffd3fcc
  00fed:    	lea    rdi,[rbp-0x8]
  00ff1:    	mov    QWORD PTR [rbx],rdi
  00ff4:    	movq   xmm2,QWORD PTR [rsp]
  00ff9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fff:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01005:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0100b:    	add    rsp,0x20
  0100f:    	test   rax,rax
  01012:    	je     0x2d9aa
:00086 
:00088 %3 = 0: i32
  01018: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  01020: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  01028:    	sub    rsp,0x20
  0102c:    	movq   QWORD PTR [rsp],xmm2
  01031:    	movq   QWORD PTR [rsp+0x8],xmm3
  01037:    	movq   QWORD PTR [rsp+0x10],xmm4
  0103d:    	movq   QWORD PTR [rsp+0x18],xmm5
  01043:    	mov    rdx,QWORD PTR [rbp-0x30]
  01047:    	mov    rcx,QWORD PTR [rbp-0x50]
  0104b:    	mov    rdi,rbx
  0104e:    	mov    rsi,r12
  01051: 34 	movabs r8,0x563439872998
  0105b: 34 	movabs rax,0x563437f47370
  01065:    	call   rax
  01067:    	movq   xmm2,QWORD PTR [rsp]
  0106c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01072:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01078:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0107e:    	add    rsp,0x20
  01082: 34 	movabs r13,0x5634398729a0
  0108c:    	test   rax,rax
  0108f:    	je     0xfffd4007
  01095:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  01099: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  010a1:    	sub    rsp,0x20
  010a5:    	movq   QWORD PTR [rsp],xmm3
  010aa:    	movq   QWORD PTR [rsp+0x8],xmm4
  010b0:    	movq   QWORD PTR [rsp+0x10],xmm5
  010b6:    	mov    rdx,QWORD PTR [rbp-0x30]
  010ba:    	mov    rcx,QWORD PTR [rbp-0x58]
  010be:    	mov    rdi,rbx
  010c1:    	mov    rsi,r12
  010c4: 34 	movabs r8,0x5634398729b8
  010ce: 34 	movabs rax,0x563437f47370
  010d8:    	call   rax
  010da:    	movq   xmm3,QWORD PTR [rsp]
  010df:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010e5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010eb:    	add    rsp,0x20
  010ef: 34 	movabs r13,0x5634398729c0
  010f9:    	test   rax,rax
  010fc:    	je     0xfffd4007
  01102:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  01106:    	mov    rdi,QWORD PTR [rbp-0x50]
  0110a: 00 	test   rdi,0x7
  01111:    	jne    0x2d9b9
  01117:    	cmp    DWORD PTR [rdi+0x4],0x28
  0111b:    	jne    0x2d9b9
  01121: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5a9d],0x26        # 0xfffd6bc5
  01128:    	jne    0x2d9b9
  0112e:    	sub    rsp,0x10
  01132:    	movq   QWORD PTR [rsp],xmm3
  01137:    	movq   QWORD PTR [rsp+0x8],xmm4
  0113d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01146:    	mov    QWORD PTR [rsp-0x38],rcx
  0114b:    	mov    rax,QWORD PTR [rbx]
  0114e:    	lea    rdi,[rsp-0x18]
  01153:    	mov    QWORD PTR [rdi],rax
  01156:    	mov    QWORD PTR [rbx],rdi
  01159:    	mov    rax,QWORD PTR [rbp-0x50]
  0115d:    	mov    QWORD PTR [rsp-0x38],rax
  01162: 00 	mov    rdi,0x1
  01169:    	mov    rax,QWORD PTR [rbp-0x58]
  0116d:    	mov    QWORD PTR [rsp-0x40],rax
  01172: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0117b: 09 	movabs rax,0x900000041
  01185:    	mov    QWORD PTR [rsp-0x28],rax
  0118a: 34 	movabs r13,0x563439838e30
  01194:    	call   0xfffe0a71
  01199:    	lea    rdi,[rbp-0x8]
  0119d:    	mov    QWORD PTR [rbx],rdi
  011a0:    	movq   xmm3,QWORD PTR [rsp]
  011a5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011ab:    	add    rsp,0x10
  011af: 34 	movabs r13,0x5634398729e0
  011b9:    	test   rax,rax
  011bc:    	je     0xfffd4007
  011c2:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  011c6:    	sub    rsp,0x10
  011ca:    	movq   QWORD PTR [rsp],xmm3
  011cf:    	movq   QWORD PTR [rsp+0x8],xmm4
  011d5:    	mov    rdx,QWORD PTR [rbp-0x30]
  011d9:    	mov    rcx,QWORD PTR [rbp-0x40]
  011dd:    	mov    r8,QWORD PTR [rbp-0x48]
  011e1:    	mov    rdi,rbx
  011e4:    	mov    rsi,r12
  011e7: 34 	movabs rax,0x563437f474a0
  011f1:    	call   rax
  011f3:    	movq   xmm3,QWORD PTR [rsp]
  011f8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011fe:    	add    rsp,0x10
  01202: 34 	movabs r13,0x563439872a00
  0120c:    	test   rax,rax
  0120f:    	je     0xfffd4007
:00097 %3 = 0: i32
  01215: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  0121d: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  01225:    	sub    rsp,0x10
  01229:    	movq   QWORD PTR [rsp],xmm3
  0122e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01234:    	mov    rdx,QWORD PTR [rbp-0x30]
  01238:    	mov    rcx,QWORD PTR [rbp-0x50]
  0123c:    	mov    rdi,rbx
  0123f:    	mov    rsi,r12
  01242: 34 	movabs r8,0x563439872a28
  0124c: 34 	movabs rax,0x563437f47370
  01256:    	call   rax
  01258:    	movq   xmm3,QWORD PTR [rsp]
  0125d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01263:    	add    rsp,0x10
  01267: 34 	movabs r13,0x563439872a30
  01271:    	test   rax,rax
  01274:    	je     0xfffd4007
  0127a:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  0127e:    	mov    rdi,QWORD PTR [rbp-0x50]
  01282: 00 	test   rdi,0x7
  01289:    	jne    0x2d9c8
  0128f:    	cmp    DWORD PTR [rdi+0x4],0x28
  01293:    	jne    0x2d9c8
  01299: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5925],0x26        # 0xfffd6bc5
  012a0:    	jne    0x2d9c8
  012a6:    	sub    rsp,0x10
  012aa:    	movq   QWORD PTR [rsp],xmm3
  012af:    	movq   QWORD PTR [rsp+0x8],xmm4
  012b5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012be:    	mov    QWORD PTR [rsp-0x38],rcx
  012c3:    	mov    rax,QWORD PTR [rbx]
  012c6:    	lea    rdi,[rsp-0x18]
  012cb:    	mov    QWORD PTR [rdi],rax
  012ce:    	mov    QWORD PTR [rbx],rdi
  012d1:    	mov    rax,QWORD PTR [rbp-0x50]
  012d5:    	mov    QWORD PTR [rsp-0x38],rax
  012da: 00 	mov    rdi,0x0
  012e1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012ea: 07 	movabs rax,0x1000700000044
  012f4:    	mov    QWORD PTR [rsp-0x28],rax
  012f9: 34 	movabs r13,0x5634398639e0
  01303:    	call   0xfffd74fe
  01308:    	lea    rdi,[rbp-0x8]
  0130c:    	mov    QWORD PTR [rbx],rdi
  0130f:    	movq   xmm3,QWORD PTR [rsp]
  01314:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0131a:    	add    rsp,0x10
  0131e: 34 	movabs r13,0x563439872a50
  01328:    	test   rax,rax
  0132b:    	je     0xfffd4007
  01331:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  01335:    	sub    rsp,0x10
  01339:    	movq   QWORD PTR [rsp],xmm3
  0133e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01344:    	mov    rdx,QWORD PTR [rbp-0x30]
  01348:    	mov    rcx,QWORD PTR [rbp-0x40]
  0134c:    	mov    r8,QWORD PTR [rbp-0x48]
  01350:    	mov    rdi,rbx
  01353:    	mov    rsi,r12
  01356: 34 	movabs rax,0x563437f474a0
  01360:    	call   rax
  01362:    	movq   xmm3,QWORD PTR [rsp]
  01367:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0136d:    	add    rsp,0x10
  01371: 34 	movabs r13,0x563439872a70
  0137b:    	test   rax,rax
  0137e:    	je     0xfffd4007
:00104 %3 = 1: i32
  01384: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  0138c: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01394:    	sub    rsp,0x10
  01398:    	movq   QWORD PTR [rsp],xmm3
  0139d:    	movq   QWORD PTR [rsp+0x8],xmm4
  013a3:    	mov    rdx,QWORD PTR [rbp-0x30]
  013a7:    	mov    rcx,QWORD PTR [rbp-0x50]
  013ab:    	mov    rdi,rbx
  013ae:    	mov    rsi,r12
  013b1: 34 	movabs r8,0x563439872a98
  013bb: 34 	movabs rax,0x563437f47370
  013c5:    	call   rax
  013c7:    	movq   xmm3,QWORD PTR [rsp]
  013cc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013d2:    	add    rsp,0x10
  013d6: 34 	movabs r13,0x563439872aa0
  013e0:    	test   rax,rax
  013e3:    	je     0xfffd4007
  013e9:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  013ed: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  013f5:    	sub    rsp,0x10
  013f9:    	movq   QWORD PTR [rsp],xmm3
  013fe:    	movq   QWORD PTR [rsp+0x8],xmm4
  01404:    	mov    rdx,QWORD PTR [rbp-0x30]
  01408:    	mov    rcx,QWORD PTR [rbp-0x58]
  0140c:    	mov    rdi,rbx
  0140f:    	mov    rsi,r12
  01412: 34 	movabs r8,0x563439872ab8
  0141c: 34 	movabs rax,0x563437f47370
  01426:    	call   rax
  01428:    	movq   xmm3,QWORD PTR [rsp]
  0142d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01433:    	add    rsp,0x10
  01437: 34 	movabs r13,0x563439872ac0
  01441:    	test   rax,rax
  01444:    	je     0xfffd4007
  0144a:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  0144e:    	mov    rdi,QWORD PTR [rbp-0x50]
  01452: 00 	test   rdi,0x7
  01459:    	jne    0x2d9d7
  0145f:    	cmp    DWORD PTR [rdi+0x4],0x28
  01463:    	jne    0x2d9d7
  01469: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5755],0x26        # 0xfffd6bc5
  01470:    	jne    0x2d9d7
  01476:    	sub    rsp,0x10
  0147a:    	movq   QWORD PTR [rsp],xmm3
  0147f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01485: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0148e:    	mov    QWORD PTR [rsp-0x38],rcx
  01493:    	mov    rax,QWORD PTR [rbx]
  01496:    	lea    rdi,[rsp-0x18]
  0149b:    	mov    QWORD PTR [rdi],rax
  0149e:    	mov    QWORD PTR [rbx],rdi
  014a1:    	mov    rax,QWORD PTR [rbp-0x50]
  014a5:    	mov    QWORD PTR [rsp-0x38],rax
  014aa: 00 	mov    rdi,0x1
  014b1:    	mov    rax,QWORD PTR [rbp-0x58]
  014b5:    	mov    QWORD PTR [rsp-0x40],rax
  014ba: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014c3: 09 	movabs rax,0x900000041
  014cd:    	mov    QWORD PTR [rsp-0x28],rax
  014d2: 34 	movabs r13,0x563439838e30
  014dc:    	call   0xfffe0a71
  014e1:    	lea    rdi,[rbp-0x8]
  014e5:    	mov    QWORD PTR [rbx],rdi
  014e8:    	movq   xmm3,QWORD PTR [rsp]
  014ed:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014f3:    	add    rsp,0x10
  014f7: 34 	movabs r13,0x563439872ae0
  01501:    	test   rax,rax
  01504:    	je     0xfffd4007
  0150a:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  0150e:    	sub    rsp,0x10
  01512:    	movq   QWORD PTR [rsp],xmm3
  01517:    	movq   QWORD PTR [rsp+0x8],xmm4
  0151d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01521:    	mov    rcx,QWORD PTR [rbp-0x40]
  01525:    	mov    r8,QWORD PTR [rbp-0x48]
  01529:    	mov    rdi,rbx
  0152c:    	mov    rsi,r12
  0152f: 34 	movabs rax,0x563437f474a0
  01539:    	call   rax
  0153b:    	movq   xmm3,QWORD PTR [rsp]
  01540:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01546:    	add    rsp,0x10
  0154a: 34 	movabs r13,0x563439872b00
  01554:    	test   rax,rax
  01557:    	je     0xfffd4007
:00113 %3 = 1: i32
  0155d: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01565: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  0156d:    	sub    rsp,0x10
  01571:    	movq   QWORD PTR [rsp],xmm3
  01576:    	movq   QWORD PTR [rsp+0x8],xmm4
  0157c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01580:    	mov    rcx,QWORD PTR [rbp-0x50]
  01584:    	mov    rdi,rbx
  01587:    	mov    rsi,r12
  0158a: 34 	movabs r8,0x563439872b28
  01594: 34 	movabs rax,0x563437f47370
  0159e:    	call   rax
  015a0:    	movq   xmm3,QWORD PTR [rsp]
  015a5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015ab:    	add    rsp,0x10
  015af: 34 	movabs r13,0x563439872b30
  015b9:    	test   rax,rax
  015bc:    	je     0xfffd4007
  015c2:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  015c6:    	mov    rdi,QWORD PTR [rbp-0x50]
  015ca: 00 	test   rdi,0x7
  015d1:    	jne    0x2d9e6
  015d7:    	cmp    DWORD PTR [rdi+0x4],0x28
  015db:    	jne    0x2d9e6
  015e1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd55dd],0x26        # 0xfffd6bc5
  015e8:    	jne    0x2d9e6
  015ee:    	sub    rsp,0x10
  015f2:    	movq   QWORD PTR [rsp],xmm3
  015f7:    	movq   QWORD PTR [rsp+0x8],xmm4
  015fd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01606:    	mov    QWORD PTR [rsp-0x38],rcx
  0160b:    	mov    rax,QWORD PTR [rbx]
  0160e:    	lea    rdi,[rsp-0x18]
  01613:    	mov    QWORD PTR [rdi],rax
  01616:    	mov    QWORD PTR [rbx],rdi
  01619:    	mov    rax,QWORD PTR [rbp-0x50]
  0161d:    	mov    QWORD PTR [rsp-0x38],rax
  01622: 00 	mov    rdi,0x0
  01629: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01632: 07 	movabs rax,0x1000700000044
  0163c:    	mov    QWORD PTR [rsp-0x28],rax
  01641: 34 	movabs r13,0x5634398639e0
  0164b:    	call   0xfffd74fe
  01650:    	lea    rdi,[rbp-0x8]
  01654:    	mov    QWORD PTR [rbx],rdi
  01657:    	movq   xmm3,QWORD PTR [rsp]
  0165c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01662:    	add    rsp,0x10
  01666: 34 	movabs r13,0x563439872b50
  01670:    	test   rax,rax
  01673:    	je     0xfffd4007
  01679:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  0167d:    	sub    rsp,0x10
  01681:    	movq   QWORD PTR [rsp],xmm3
  01686:    	movq   QWORD PTR [rsp+0x8],xmm4
  0168c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01690:    	mov    rcx,QWORD PTR [rbp-0x40]
  01694:    	mov    r8,QWORD PTR [rbp-0x48]
  01698:    	mov    rdi,rbx
  0169b:    	mov    rsi,r12
  0169e: 34 	movabs rax,0x563437f474a0
  016a8:    	call   rax
  016aa:    	movq   xmm3,QWORD PTR [rsp]
  016af:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016b5:    	add    rsp,0x10
  016b9: 34 	movabs r13,0x563439872b70
  016c3:    	test   rax,rax
  016c6:    	je     0xfffd4007
:00120 %3 = %4
  016cc:    	mov    rax,QWORD PTR [rbp-0x48]
  016d0:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  016d4:    	mov    rax,QWORD PTR [rbp-0x40]
  016d8:    	leave  
  016d9:    	ret    
:00088 %3 = 0: i32
  016da: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  016e2: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  016ea:    	sub    rsp,0x20
  016ee:    	movq   QWORD PTR [rsp],xmm2
  016f3:    	movq   QWORD PTR [rsp+0x8],xmm3
  016f9:    	movq   QWORD PTR [rsp+0x10],xmm4
  016ff:    	movq   QWORD PTR [rsp+0x18],xmm5
  01705:    	mov    rdx,QWORD PTR [rbp-0x30]
  01709:    	mov    rcx,QWORD PTR [rbp-0x50]
  0170d:    	mov    rdi,rbx
  01710:    	mov    rsi,r12
  01713: 34 	movabs r8,0x563439872998
  0171d: 34 	movabs rax,0x563437f47370
  01727:    	call   rax
  01729:    	movq   xmm2,QWORD PTR [rsp]
  0172e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01734:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0173a:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01740:    	add    rsp,0x20
  01744: 34 	movabs r13,0x5634398729a0
  0174e:    	test   rax,rax
  01751:    	je     0xfffd4007
  01757:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  0175b: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  01763:    	sub    rsp,0x20
  01767:    	movq   QWORD PTR [rsp],xmm3
  0176c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01772:    	movq   QWORD PTR [rsp+0x10],xmm5
  01778:    	mov    rdx,QWORD PTR [rbp-0x30]
  0177c:    	mov    rcx,QWORD PTR [rbp-0x58]
  01780:    	mov    rdi,rbx
  01783:    	mov    rsi,r12
  01786: 34 	movabs r8,0x5634398729b8
  01790: 34 	movabs rax,0x563437f47370
  0179a:    	call   rax
  0179c:    	movq   xmm3,QWORD PTR [rsp]
  017a1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017a7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017ad:    	add    rsp,0x20
  017b1: 34 	movabs r13,0x5634398729c0
  017bb:    	test   rax,rax
  017be:    	je     0xfffd4007
  017c4:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  017c8:    	mov    rdi,QWORD PTR [rbp-0x50]
  017cc: 00 	test   rdi,0x7
  017d3:    	jne    0x2da40
  017d9:    	cmp    DWORD PTR [rdi+0x4],0x28
  017dd:    	jne    0x2da40
  017e3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd53db],0x26        # 0xfffd6bc5
  017ea:    	jne    0x2da40
  017f0:    	sub    rsp,0x10
  017f4:    	movq   QWORD PTR [rsp],xmm3
  017f9:    	movq   QWORD PTR [rsp+0x8],xmm4
  017ff: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01808:    	mov    QWORD PTR [rsp-0x38],rcx
  0180d:    	mov    rax,QWORD PTR [rbx]
  01810:    	lea    rdi,[rsp-0x18]
  01815:    	mov    QWORD PTR [rdi],rax
  01818:    	mov    QWORD PTR [rbx],rdi
  0181b:    	mov    rax,QWORD PTR [rbp-0x50]
  0181f:    	mov    QWORD PTR [rsp-0x38],rax
  01824: 00 	mov    rdi,0x1
  0182b:    	mov    rax,QWORD PTR [rbp-0x58]
  0182f:    	mov    QWORD PTR [rsp-0x40],rax
  01834: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0183d: 09 	movabs rax,0x900000041
  01847:    	mov    QWORD PTR [rsp-0x28],rax
  0184c: 34 	movabs r13,0x563439838e30
  01856:    	call   0xfffe0a71
  0185b:    	lea    rdi,[rbp-0x8]
  0185f:    	mov    QWORD PTR [rbx],rdi
  01862:    	movq   xmm3,QWORD PTR [rsp]
  01867:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0186d:    	add    rsp,0x10
  01871: 34 	movabs r13,0x5634398729e0
  0187b:    	test   rax,rax
  0187e:    	je     0xfffd4007
  01884:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  01888:    	sub    rsp,0x10
  0188c:    	movq   QWORD PTR [rsp],xmm3
  01891:    	movq   QWORD PTR [rsp+0x8],xmm4
  01897:    	mov    rdx,QWORD PTR [rbp-0x30]
  0189b:    	mov    rcx,QWORD PTR [rbp-0x40]
  0189f:    	mov    r8,QWORD PTR [rbp-0x48]
  018a3:    	mov    rdi,rbx
  018a6:    	mov    rsi,r12
  018a9: 34 	movabs rax,0x563437f474a0
  018b3:    	call   rax
  018b5:    	movq   xmm3,QWORD PTR [rsp]
  018ba:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018c0:    	add    rsp,0x10
  018c4: 34 	movabs r13,0x563439872a00
  018ce:    	test   rax,rax
  018d1:    	je     0xfffd4007
:00097 %3 = 0: i32
  018d7: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  018df: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  018e7:    	sub    rsp,0x10
  018eb:    	movq   QWORD PTR [rsp],xmm3
  018f0:    	movq   QWORD PTR [rsp+0x8],xmm4
  018f6:    	mov    rdx,QWORD PTR [rbp-0x30]
  018fa:    	mov    rcx,QWORD PTR [rbp-0x50]
  018fe:    	mov    rdi,rbx
  01901:    	mov    rsi,r12
  01904: 34 	movabs r8,0x563439872a28
  0190e: 34 	movabs rax,0x563437f47370
  01918:    	call   rax
  0191a:    	movq   xmm3,QWORD PTR [rsp]
  0191f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01925:    	add    rsp,0x10
  01929: 34 	movabs r13,0x563439872a30
  01933:    	test   rax,rax
  01936:    	je     0xfffd4007
  0193c:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  01940:    	mov    rdi,QWORD PTR [rbp-0x50]
  01944: 00 	test   rdi,0x7
  0194b:    	jne    0x2da4f
  01951:    	cmp    DWORD PTR [rdi+0x4],0x28
  01955:    	jne    0x2da4f
  0195b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5263],0x26        # 0xfffd6bc5
  01962:    	jne    0x2da4f
  01968:    	sub    rsp,0x10
  0196c:    	movq   QWORD PTR [rsp],xmm3
  01971:    	movq   QWORD PTR [rsp+0x8],xmm4
  01977: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01980:    	mov    QWORD PTR [rsp-0x38],rcx
  01985:    	mov    rax,QWORD PTR [rbx]
  01988:    	lea    rdi,[rsp-0x18]
  0198d:    	mov    QWORD PTR [rdi],rax
  01990:    	mov    QWORD PTR [rbx],rdi
  01993:    	mov    rax,QWORD PTR [rbp-0x50]
  01997:    	mov    QWORD PTR [rsp-0x38],rax
  0199c: 00 	mov    rdi,0x0
  019a3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019ac: 07 	movabs rax,0x1000700000044
  019b6:    	mov    QWORD PTR [rsp-0x28],rax
  019bb: 34 	movabs r13,0x5634398639e0
  019c5:    	call   0xfffd74fe
  019ca:    	lea    rdi,[rbp-0x8]
  019ce:    	mov    QWORD PTR [rbx],rdi
  019d1:    	movq   xmm3,QWORD PTR [rsp]
  019d6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019dc:    	add    rsp,0x10
  019e0: 34 	movabs r13,0x563439872a50
  019ea:    	test   rax,rax
  019ed:    	je     0xfffd4007
  019f3:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  019f7:    	sub    rsp,0x10
  019fb:    	movq   QWORD PTR [rsp],xmm3
  01a00:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a06:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a0a:    	mov    rcx,QWORD PTR [rbp-0x40]
  01a0e:    	mov    r8,QWORD PTR [rbp-0x48]
  01a12:    	mov    rdi,rbx
  01a15:    	mov    rsi,r12
  01a18: 34 	movabs rax,0x563437f474a0
  01a22:    	call   rax
  01a24:    	movq   xmm3,QWORD PTR [rsp]
  01a29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a2f:    	add    rsp,0x10
  01a33: 34 	movabs r13,0x563439872a70
  01a3d:    	test   rax,rax
  01a40:    	je     0xfffd4007
:00104 %3 = 1: i32
  01a46: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  01a4e: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01a56:    	sub    rsp,0x10
  01a5a:    	movq   QWORD PTR [rsp],xmm3
  01a5f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a65:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a69:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a6d:    	mov    rdi,rbx
  01a70:    	mov    rsi,r12
  01a73: 34 	movabs r8,0x563439872a98
  01a7d: 34 	movabs rax,0x563437f47370
  01a87:    	call   rax
  01a89:    	movq   xmm3,QWORD PTR [rsp]
  01a8e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a94:    	add    rsp,0x10
  01a98: 34 	movabs r13,0x563439872aa0
  01aa2:    	test   rax,rax
  01aa5:    	je     0xfffd4007
  01aab:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  01aaf: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  01ab7:    	sub    rsp,0x10
  01abb:    	movq   QWORD PTR [rsp],xmm3
  01ac0:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ac6:    	mov    rdx,QWORD PTR [rbp-0x30]
  01aca:    	mov    rcx,QWORD PTR [rbp-0x58]
  01ace:    	mov    rdi,rbx
  01ad1:    	mov    rsi,r12
  01ad4: 34 	movabs r8,0x563439872ab8
  01ade: 34 	movabs rax,0x563437f47370
  01ae8:    	call   rax
  01aea:    	movq   xmm3,QWORD PTR [rsp]
  01aef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01af5:    	add    rsp,0x10
  01af9: 34 	movabs r13,0x563439872ac0
  01b03:    	test   rax,rax
  01b06:    	je     0xfffd4007
  01b0c:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01b10:    	mov    rdi,QWORD PTR [rbp-0x50]
  01b14: 00 	test   rdi,0x7
  01b1b:    	jne    0x2da5e
  01b21:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b25:    	jne    0x2da5e
  01b2b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd5093],0x26        # 0xfffd6bc5
  01b32:    	jne    0x2da5e
  01b38:    	sub    rsp,0x10
  01b3c:    	movq   QWORD PTR [rsp],xmm3
  01b41:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b47: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b50:    	mov    QWORD PTR [rsp-0x38],rcx
  01b55:    	mov    rax,QWORD PTR [rbx]
  01b58:    	lea    rdi,[rsp-0x18]
  01b5d:    	mov    QWORD PTR [rdi],rax
  01b60:    	mov    QWORD PTR [rbx],rdi
  01b63:    	mov    rax,QWORD PTR [rbp-0x50]
  01b67:    	mov    QWORD PTR [rsp-0x38],rax
  01b6c: 00 	mov    rdi,0x1
  01b73:    	mov    rax,QWORD PTR [rbp-0x58]
  01b77:    	mov    QWORD PTR [rsp-0x40],rax
  01b7c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b85: 09 	movabs rax,0x900000041
  01b8f:    	mov    QWORD PTR [rsp-0x28],rax
  01b94: 34 	movabs r13,0x563439838e30
  01b9e:    	call   0xfffe0a71
  01ba3:    	lea    rdi,[rbp-0x8]
  01ba7:    	mov    QWORD PTR [rbx],rdi
  01baa:    	movq   xmm3,QWORD PTR [rsp]
  01baf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bb5:    	add    rsp,0x10
  01bb9: 34 	movabs r13,0x563439872ae0
  01bc3:    	test   rax,rax
  01bc6:    	je     0xfffd4007
  01bcc:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  01bd0:    	sub    rsp,0x10
  01bd4:    	movq   QWORD PTR [rsp],xmm3
  01bd9:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bdf:    	mov    rdx,QWORD PTR [rbp-0x30]
  01be3:    	mov    rcx,QWORD PTR [rbp-0x40]
  01be7:    	mov    r8,QWORD PTR [rbp-0x48]
  01beb:    	mov    rdi,rbx
  01bee:    	mov    rsi,r12
  01bf1: 34 	movabs rax,0x563437f474a0
  01bfb:    	call   rax
  01bfd:    	movq   xmm3,QWORD PTR [rsp]
  01c02:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c08:    	add    rsp,0x10
  01c0c: 34 	movabs r13,0x563439872b00
  01c16:    	test   rax,rax
  01c19:    	je     0xfffd4007
:00113 %3 = 1: i32
  01c1f: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01c27: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01c2f:    	sub    rsp,0x10
  01c33:    	movq   QWORD PTR [rsp],xmm3
  01c38:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c3e:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c42:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c46:    	mov    rdi,rbx
  01c49:    	mov    rsi,r12
  01c4c: 34 	movabs r8,0x563439872b28
  01c56: 34 	movabs rax,0x563437f47370
  01c60:    	call   rax
  01c62:    	movq   xmm3,QWORD PTR [rsp]
  01c67:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c6d:    	add    rsp,0x10
  01c71: 34 	movabs r13,0x563439872b30
  01c7b:    	test   rax,rax
  01c7e:    	je     0xfffd4007
  01c84:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  01c88:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c8c: 00 	test   rdi,0x7
  01c93:    	jne    0x2da6d
  01c99:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c9d:    	jne    0x2da6d
  01ca3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4f1b],0x26        # 0xfffd6bc5
  01caa:    	jne    0x2da6d
  01cb0:    	sub    rsp,0x10
  01cb4:    	movq   QWORD PTR [rsp],xmm3
  01cb9:    	movq   QWORD PTR [rsp+0x8],xmm4
  01cbf: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01cc8:    	mov    QWORD PTR [rsp-0x38],rcx
  01ccd:    	mov    rax,QWORD PTR [rbx]
  01cd0:    	lea    rdi,[rsp-0x18]
  01cd5:    	mov    QWORD PTR [rdi],rax
  01cd8:    	mov    QWORD PTR [rbx],rdi
  01cdb:    	mov    rax,QWORD PTR [rbp-0x50]
  01cdf:    	mov    QWORD PTR [rsp-0x38],rax
  01ce4: 00 	mov    rdi,0x0
  01ceb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01cf4: 07 	movabs rax,0x1000700000044
  01cfe:    	mov    QWORD PTR [rsp-0x28],rax
  01d03: 34 	movabs r13,0x5634398639e0
  01d0d:    	call   0xfffd74fe
  01d12:    	lea    rdi,[rbp-0x8]
  01d16:    	mov    QWORD PTR [rbx],rdi
  01d19:    	movq   xmm3,QWORD PTR [rsp]
  01d1e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d24:    	add    rsp,0x10
  01d28: 34 	movabs r13,0x563439872b50
  01d32:    	test   rax,rax
  01d35:    	je     0xfffd4007
  01d3b:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  01d3f:    	sub    rsp,0x10
  01d43:    	movq   QWORD PTR [rsp],xmm3
  01d48:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d4e:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d52:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d56:    	mov    r8,QWORD PTR [rbp-0x48]
  01d5a:    	mov    rdi,rbx
  01d5d:    	mov    rsi,r12
  01d60: 34 	movabs rax,0x563437f474a0
  01d6a:    	call   rax
  01d6c:    	movq   xmm3,QWORD PTR [rsp]
  01d71:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d77:    	add    rsp,0x10
  01d7b: 34 	movabs r13,0x563439872b70
  01d85:    	test   rax,rax
  01d88:    	je     0xfffd4007
:00120 %3 = %4
  01d8e:    	mov    rax,QWORD PTR [rbp-0x48]
  01d92:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  01d96:    	mov    rax,QWORD PTR [rbp-0x40]
  01d9a:    	leave  
  01d9b:    	ret    
==> start whole compile: otherBasis FuncId(60) self_class:Scene start:[00000] bytecode:0x5634398723f0
<== finished compile. elapsed:143.2µs
offset:Pos(188196) code: 7580 bytes  data: 340 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	je     0x4a
  00014:    	jl     0x1f
  0001a:    	jmp    0x2bb8c
  0001f:    	jmp    0x2bb8c
  00024:    	mov    eax,0x2
  00029:    	sub    eax,edx
  0002b:    	test   rax,rax
  0002e:    	je     0x4a
  00034:    	lea    rdi,[rbp-0x40]
  00038: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00040:    	sub    rax,0x1
  00044:    	jne    0x38
  0004a: 00 	mov    rax,0x4
  00051:    	mov    QWORD PTR [rbp-0x40],rax
  00055:    	mov    QWORD PTR [rbp-0x48],rax
  00059:    	mov    QWORD PTR [rbp-0x50],rax
  0005d:    	mov    QWORD PTR [rbp-0x58],rax
  00061:    	mov    QWORD PTR [rbp-0x60],rax
  00065:    	mov    QWORD PTR [rbp-0x68],rax
  00069:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2bb9b
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x32
  0007e:    	jne    0x2bb9b
:00000 init_method reg:9 arg:2 pos:2 req:2 stack_offset:7
:00001 %3 = 2: i32
  00084: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00002 %5 = const[Vec]                      [Vec]
  0008c: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd4c49]        # 0xfffd4cdc
  00093: 00 	cmp    rax,QWORD PTR [rip+0x1d12]        # 0x1dac
  0009a:    	jne    0x2bbaa
  000a0: 00 	mov    rax,QWORD PTR [rip+0x1cf5]        # 0x1d9c
  000a7:    	mov    QWORD PTR [rbp-0x50],rax
:00003 %6 = %2.call x()                     [Vec]
  000ab:    	mov    rdi,QWORD PTR [rbp-0x38]
  000af: 00 	test   rdi,0x7
  000b6:    	jne    0x2bbf0
  000bc:    	cmp    DWORD PTR [rdi+0x4],0x28
  000c0:    	jne    0x2bbf0
  000c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4c08],0x26        # 0xfffd4cd5
  000cd:    	jne    0x2bbf0
  000d3:    	mov    esi,DWORD PTR [rip+0x1cdf]        # 0x1db8
  000d9:    	cmp    esi,0xffffffff
  000dc:    	je     0x2bbff
  000e2:    	cmp    WORD PTR [rdi+0x2],0x3
  000e7:    	jne    0x100
  000ed:    	cmp    esi,0x6
  000f0:    	jge    0x100
  000f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000fb:    	jmp    0x10c
  00100: 34 	movabs rax,0x563437ed0590
  0010a:    	call   rax
  0010c:    	mov    QWORD PTR [rbp-0x58],rax
:00004 
:00006 %7 = %2.call y()                     [Vec]
  00110:    	mov    rdi,QWORD PTR [rbp-0x38]
  00114: 00 	test   rdi,0x7
  0011b:    	jne    0x2bc28
  00121:    	cmp    DWORD PTR [rdi+0x4],0x28
  00125:    	jne    0x2bc28
  0012b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4ba3],0x26        # 0xfffd4cd5
  00132:    	jne    0x2bc28
  00138:    	mov    esi,DWORD PTR [rip+0x1c82]        # 0x1dc0
  0013e:    	cmp    esi,0xffffffff
  00141:    	je     0x2bc37
  00147:    	cmp    WORD PTR [rdi+0x2],0x3
  0014c:    	jne    0x165
  00152:    	cmp    esi,0x6
  00155:    	jge    0x165
  0015b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00160:    	jmp    0x171
  00165: 34 	movabs rax,0x563437ed0590
  0016f:    	call   rax
  00171:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = %2.call z()                     [Vec]
  00175:    	mov    rdi,QWORD PTR [rbp-0x38]
  00179: 00 	test   rdi,0x7
  00180:    	jne    0x2bc60
  00186:    	cmp    DWORD PTR [rdi+0x4],0x28
  0018a:    	jne    0x2bc60
  00190: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4b3e],0x26        # 0xfffd4cd5
  00197:    	jne    0x2bc60
  0019d:    	mov    esi,DWORD PTR [rip+0x1c25]        # 0x1dc8
  001a3:    	cmp    esi,0xffffffff
  001a6:    	je     0x2bc6f
  001ac:    	cmp    WORD PTR [rdi+0x2],0x3
  001b1:    	jne    0x1ca
  001b7:    	cmp    esi,0x6
  001ba:    	jge    0x1ca
  001c0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001c5:    	jmp    0x1d6
  001ca: 34 	movabs rax,0x563437ed0590
  001d4:    	call   rax
  001d6:    	mov    QWORD PTR [rbp-0x68],rax
:00010 
:00012 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  001da:    	mov    rdi,QWORD PTR [rbp-0x50]
  001de: 00 	test   rdi,0x7
  001e5:    	jne    0x2bc98
  001eb:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ef:    	jne    0x2bc98
  001f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4ad9],0x26        # 0xfffd4cd5
  001fc:    	jne    0x2bc98
  00202: 00 	mov    r9,0x0
  00209:    	mov    rdx,rdi
  0020c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00215:    	mov    QWORD PTR [rsp-0x38],rcx
  0021a:    	mov    rax,QWORD PTR [rbx]
  0021d:    	lea    rdi,[rsp-0x18]
  00222:    	mov    QWORD PTR [rdi],rax
  00225:    	mov    QWORD PTR [rbx],rdi
  00228:    	lea    rcx,[rbp-0x58]
  0022c: 00 	mov    r8,0x3
  00233:    	call   0x2bca7
  00238:    	lea    rdi,[rbp-0x8]
  0023c:    	mov    QWORD PTR [rbx],rdi
  0023f: 34 	movabs r13,0x5634398724d0
  00249:    	test   rax,rax
  0024c:    	je     0xfffd2117
  00252:    	mov    QWORD PTR [rbp-0x48],rax
:00013 
:00015 %1:.[%3:] = %4
  00256:    	mov    rdx,QWORD PTR [rbp-0x30]
  0025a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0025e:    	mov    r8,QWORD PTR [rbp-0x48]
  00262:    	mov    rdi,rbx
  00265:    	mov    rsi,r12
  00268: 34 	movabs rax,0x563437f474a0
  00272:    	call   rax
  00274: 34 	movabs r13,0x5634398724f0
  0027e:    	test   rax,rax
  00281:    	je     0xfffd2117
:00016 %3 = 1: i32
  00287: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00017 %5 = const[Vec]                      [Vec]
  0028f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd4a46]        # 0xfffd4cdc
  00296: 00 	cmp    rax,QWORD PTR [rip+0x1b3f]        # 0x1ddc
  0029d:    	jne    0x2bcd9
  002a3: 00 	mov    rax,QWORD PTR [rip+0x1b22]        # 0x1dcc
  002aa:    	mov    QWORD PTR [rbp-0x50],rax
:00018 %6 = literal[0.0]
  002ae: 00 	movq   xmm2,QWORD PTR [rip+0x1b36]        # 0x1dec
  002b6: 00 	movabs rax,0x8000000000000002
  002c0:    	mov    QWORD PTR [rbp-0x58],rax
:00019 %7 = literal[0.0]
  002c4: 00 	movq   xmm3,QWORD PTR [rip+0x1b30]        # 0x1dfc
  002cc: 00 	movabs rax,0x8000000000000002
  002d6:    	mov    QWORD PTR [rbp-0x60],rax
:00020 %8 = literal[0.0]
  002da: 00 	movq   xmm4,QWORD PTR [rip+0x1b2a]        # 0x1e0c
  002e2: 00 	movabs rax,0x8000000000000002
  002ec:    	mov    QWORD PTR [rbp-0x68],rax
:00021 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002f0:    	mov    rdi,QWORD PTR [rbp-0x50]
  002f4: 00 	test   rdi,0x7
  002fb:    	jne    0x2bd1f
  00301:    	cmp    DWORD PTR [rdi+0x4],0x29
  00305:    	jne    0x2bd1f
  0030b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd49c3],0x26        # 0xfffd4cd5
  00312:    	jne    0x2bd1f
  00318: 00 	mov    r9,0x0
  0031f:    	sub    rsp,0x20
  00323:    	movq   QWORD PTR [rsp],xmm2
  00328:    	movq   QWORD PTR [rsp+0x8],xmm3
  0032e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00334:    	mov    rdx,rdi
  00337: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00340:    	mov    QWORD PTR [rsp-0x38],rcx
  00345:    	mov    rax,QWORD PTR [rbx]
  00348:    	lea    rdi,[rsp-0x18]
  0034d:    	mov    QWORD PTR [rdi],rax
  00350:    	mov    QWORD PTR [rbx],rdi
  00353:    	lea    rcx,[rbp-0x58]
  00357: 00 	mov    r8,0x3
  0035e:    	call   0x2bd2e
  00363:    	lea    rdi,[rbp-0x8]
  00367:    	mov    QWORD PTR [rbx],rdi
  0036a:    	movq   xmm2,QWORD PTR [rsp]
  0036f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00375:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0037b:    	add    rsp,0x20
  0037f: 34 	movabs r13,0x563439872560
  00389:    	test   rax,rax
  0038c:    	je     0xfffd2117
  00392:    	mov    QWORD PTR [rbp-0x48],rax
:00022 
:00024 %1:.[%3:] = %4
  00396:    	sub    rsp,0x20
  0039a:    	movq   QWORD PTR [rsp],xmm2
  0039f:    	movq   QWORD PTR [rsp+0x8],xmm3
  003a5:    	movq   QWORD PTR [rsp+0x10],xmm4
  003ab:    	mov    rdx,QWORD PTR [rbp-0x30]
  003af:    	mov    rcx,QWORD PTR [rbp-0x40]
  003b3:    	mov    r8,QWORD PTR [rbp-0x48]
  003b7:    	mov    rdi,rbx
  003ba:    	mov    rsi,r12
  003bd: 34 	movabs rax,0x563437f474a0
  003c7:    	call   rax
  003c9:    	movq   xmm2,QWORD PTR [rsp]
  003ce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003d4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003da:    	add    rsp,0x20
  003de: 34 	movabs r13,0x563439872580
  003e8:    	test   rax,rax
  003eb:    	je     0xfffd2117
:00025 %3 = %2.call x()                     [Vec]
  003f1:    	mov    rdi,QWORD PTR [rbp-0x38]
  003f5: 00 	test   rdi,0x7
  003fc:    	jne    0x2bd60
  00402:    	cmp    DWORD PTR [rdi+0x4],0x28
  00406:    	jne    0x2bd60
  0040c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd48c2],0x26        # 0xfffd4cd5
  00413:    	jne    0x2bd60
  00419:    	mov    esi,DWORD PTR [rip+0x19f9]        # 0x1e18
  0041f:    	cmp    esi,0xffffffff
  00422:    	je     0x2bd6f
  00428:    	cmp    WORD PTR [rdi+0x2],0x3
  0042d:    	jne    0x446
  00433:    	cmp    esi,0x6
  00436:    	jge    0x446
  0043c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00441:    	jmp    0x47c
  00446:    	sub    rsp,0x20
  0044a:    	movq   QWORD PTR [rsp],xmm2
  0044f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00455:    	movq   QWORD PTR [rsp+0x10],xmm4
  0045b: 34 	movabs rax,0x563437ed0590
  00465:    	call   rax
  00467:    	movq   xmm2,QWORD PTR [rsp]
  0046c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00472:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00478:    	add    rsp,0x20
  0047c:    	mov    QWORD PTR [rbp-0x40],rax
:00026 
:00028 %4 = literal[0.6]
  00480: 00 	movq   xmm5,QWORD PTR [rip+0x1994]        # 0x1e1c
  00488: 99 	movabs rax,0xff1999999999999a
  00492:    	mov    QWORD PTR [rbp-0x48],rax
:00029 _%3 = %3 < %4                        [Float][Float]
:00030 condnotbr _%3 =>:00044
  00496:    	mov    rdi,QWORD PTR [rbp-0x40]
  0049a: 00 	test   rdi,0x1
  004a1:    	jne    0x2bdc2
  004a7: 00 	test   rdi,0x2
  004ae:    	je     0x4ea
  004b4:    	xorps  xmm6,xmm6
  004b7: 00 	movabs rax,0x8000000000000002
  004c1:    	cmp    rdi,rax
  004c4:    	je     0x4fc
  004ca:    	mov    rax,rdi
  004cd:    	sar    rax,0x3f
  004d1:    	add    rax,0x2
  004d5:    	and    rdi,0xfffffffffffffffc
  004d9:    	or     rdi,rax
  004dc:    	rol    rdi,0x3d
  004e0:    	movq   xmm6,rdi
  004e5:    	jmp    0x4fc
  004ea:    	call   0xfffd2170
  004ef:    	test   rax,rax
  004f2:    	je     0x2bdc2
  004f8:    	movq   xmm6,xmm0
  004fc:    	ucomisd xmm6,xmm5
  00500:    	jae    0x2bec3
:00031 %3 = %2.call x()                     [Vec]
  00506:    	mov    rdi,QWORD PTR [rbp-0x38]
  0050a: 00 	test   rdi,0x7
  00511:    	jne    0x2bdd1
  00517:    	cmp    DWORD PTR [rdi+0x4],0x28
  0051b:    	jne    0x2bdd1
  00521: 26 	cmp    DWORD PTR [rip+0xfffffffffffd47ad],0x26        # 0xfffd4cd5
  00528:    	jne    0x2bdd1
  0052e:    	mov    esi,DWORD PTR [rip+0x18f4]        # 0x1e28
  00534:    	cmp    esi,0xffffffff
  00537:    	je     0x2bde0
  0053d:    	cmp    WORD PTR [rdi+0x2],0x3
  00542:    	jne    0x55b
  00548:    	cmp    esi,0x6
  0054b:    	jge    0x55b
  00551:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00556:    	jmp    0x59d
  0055b:    	sub    rsp,0x20
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576: 34 	movabs rax,0x563437ed0590
  00580:    	call   rax
  00582:    	movq   xmm2,QWORD PTR [rsp]
  00587:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0058d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00593:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00599:    	add    rsp,0x20
  0059d:    	mov    QWORD PTR [rbp-0x40],rax
:00032 
:00034 %4 = literal[-0.6]
  005a1: 00 	movq   xmm5,QWORD PTR [rip+0x1883]        # 0x1e2c
  005a9: 99 	movabs rax,0xff1999999999999e
  005b3:    	mov    QWORD PTR [rbp-0x48],rax
:00035 _%3 = %3 > %4                        [Float][Float]
:00036 condnotbr _%3 =>:00044
  005b7:    	mov    rdi,QWORD PTR [rbp-0x40]
  005bb: 00 	test   rdi,0x1
  005c2:    	jne    0x2be3f
  005c8: 00 	test   rdi,0x2
  005cf:    	je     0x60b
  005d5:    	xorps  xmm6,xmm6
  005d8: 00 	movabs rax,0x8000000000000002
  005e2:    	cmp    rdi,rax
  005e5:    	je     0x61d
  005eb:    	mov    rax,rdi
  005ee:    	sar    rax,0x3f
  005f2:    	add    rax,0x2
  005f6:    	and    rdi,0xfffffffffffffffc
  005fa:    	or     rdi,rax
  005fd:    	rol    rdi,0x3d
  00601:    	movq   xmm6,rdi
  00606:    	jmp    0x61d
  0060b:    	call   0xfffd2170
  00610:    	test   rax,rax
  00613:    	je     0x2be3f
  00619:    	movq   xmm6,xmm0
  0061d:    	ucomisd xmm6,xmm5
  00621:    	jbe    0x2bedc
:00037 %3 = 1: i32
  00627: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00038 %3 = %1.[%3]                         [Array][Integer]
  0062f:    	sub    rsp,0x20
  00633:    	movq   QWORD PTR [rsp],xmm2
  00638:    	movq   QWORD PTR [rsp+0x8],xmm3
  0063e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00644:    	movq   QWORD PTR [rsp+0x18],xmm5
  0064a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0064e:    	mov    rcx,QWORD PTR [rbp-0x40]
  00652:    	mov    rdi,rbx
  00655:    	mov    rsi,r12
  00658: 34 	movabs r8,0x563439872658
  00662: 34 	movabs rax,0x563437f47370
  0066c:    	call   rax
  0066e:    	movq   xmm2,QWORD PTR [rsp]
  00673:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00679:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0067f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00685:    	add    rsp,0x20
  00689: 34 	movabs r13,0x563439872660
  00693:    	test   rax,rax
  00696:    	je     0xfffd2117
  0069c:    	mov    QWORD PTR [rbp-0x40],rax
:00039 %4 = literal[1.0]
  006a0: 00 	movq   xmm5,QWORD PTR [rip+0x1794]        # 0x1e3c
  006a8: 00 	movabs rax,0xff80000000000002
  006b2:    	mov    QWORD PTR [rbp-0x48],rax
:00040 _ = %3.call x=(%4; 1)                [Vec]
  006b6:    	mov    rdi,QWORD PTR [rbp-0x40]
  006ba: 00 	test   rdi,0x7
  006c1:    	jne    0x2be4e
  006c7:    	cmp    DWORD PTR [rdi+0x4],0x28
  006cb:    	jne    0x2be4e
  006d1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd45fd],0x26        # 0xfffd4cd5
  006d8:    	jne    0x2be4e
  006de:    	mov    esi,DWORD PTR [rip+0x1764]        # 0x1e48
  006e4:    	cmp    esi,0xffffffff
  006e7:    	je     0x2be5d
  006ed:    	cmp    WORD PTR [rdi+0x2],0x3
  006f2:    	jne    0x70f
  006f8:    	cmp    esi,0x6
  006fb:    	jge    0x70f
  00701:    	mov    rax,QWORD PTR [rbp-0x48]
  00705:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0070a:    	jmp    0x768
  0070f:    	sub    rsp,0x20
  00713:    	movq   QWORD PTR [rsp],xmm2
  00718:    	movq   QWORD PTR [rsp+0x8],xmm3
  0071e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00724:    	movq   QWORD PTR [rsp+0x18],xmm5
  0072a:    	mov    rdx,QWORD PTR [rbp-0x48]
  0072e: 34 	movabs rax,0x563437ed0810
  00738:    	call   rax
  0073a:    	movq   xmm2,QWORD PTR [rsp]
  0073f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00745:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0074b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00751:    	add    rsp,0x20
  00755: 34 	movabs r13,0x563439872690
  0075f:    	test   rax,rax
  00762:    	je     0xfffd2117
:00041 
:00043 br =>:00088
  00768:    	jmp    0x2c3da
:00044 %3 = %2.call y()                     [Vec]
  0076d:    	mov    rdi,QWORD PTR [rbp-0x38]
  00771: 00 	test   rdi,0x7
  00778:    	jne    0x2bef5
  0077e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00782:    	jne    0x2bef5
  00788: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4546],0x26        # 0xfffd4cd5
  0078f:    	jne    0x2bef5
  00795:    	mov    esi,DWORD PTR [rip+0x16b5]        # 0x1e50
  0079b:    	cmp    esi,0xffffffff
  0079e:    	je     0x2bf04
  007a4:    	cmp    WORD PTR [rdi+0x2],0x3
  007a9:    	jne    0x7c2
  007af:    	cmp    esi,0x6
  007b2:    	jge    0x7c2
  007b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007bd:    	jmp    0x804
  007c2:    	sub    rsp,0x20
  007c6:    	movq   QWORD PTR [rsp],xmm2
  007cb:    	movq   QWORD PTR [rsp+0x8],xmm3
  007d1:    	movq   QWORD PTR [rsp+0x10],xmm4
  007d7:    	movq   QWORD PTR [rsp+0x18],xmm5
  007dd: 34 	movabs rax,0x563437ed0590
  007e7:    	call   rax
  007e9:    	movq   xmm2,QWORD PTR [rsp]
  007ee:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007f4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007fa:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00800:    	add    rsp,0x20
  00804:    	mov    QWORD PTR [rbp-0x40],rax
:00045 
:00047 %4 = literal[0.6]
  00808: 00 	movq   xmm5,QWORD PTR [rip+0x164c]        # 0x1e5c
  00810: 99 	movabs rax,0xff1999999999999a
  0081a:    	mov    QWORD PTR [rbp-0x48],rax
:00048 _%3 = %3 < %4                        [Float][Float]
:00049 condnotbr _%3 =>:00063
  0081e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00822: 00 	test   rdi,0x1
  00829:    	jne    0x2bf63
  0082f: 00 	test   rdi,0x2
  00836:    	je     0x872
  0083c:    	xorps  xmm6,xmm6
  0083f: 00 	movabs rax,0x8000000000000002
  00849:    	cmp    rdi,rax
  0084c:    	je     0x884
  00852:    	mov    rax,rdi
  00855:    	sar    rax,0x3f
  00859:    	add    rax,0x2
  0085d:    	and    rdi,0xfffffffffffffffc
  00861:    	or     rdi,rax
  00864:    	rol    rdi,0x3d
  00868:    	movq   xmm6,rdi
  0086d:    	jmp    0x884
  00872:    	call   0xfffd2170
  00877:    	test   rax,rax
  0087a:    	je     0x2bf63
  00880:    	movq   xmm6,xmm0
  00884:    	ucomisd xmm6,xmm5
  00888:    	jae    0x2c11f
:00050 %3 = %2.call y()                     [<INVALID>]
  0088e: 01 	sub    DWORD PTR [rip+0x15cf],0x1        # 0x1e64
  00895:    	je     0x2bf81
  0089b:    	sub    rsp,0x20
  0089f:    	movq   QWORD PTR [rsp],xmm2
  008a4:    	movq   QWORD PTR [rsp+0x8],xmm3
  008aa:    	movq   QWORD PTR [rsp+0x10],xmm4
  008b0:    	movq   QWORD PTR [rsp+0x18],xmm5
  008b6:    	mov    rdi,QWORD PTR [rbp-0x38]
  008ba: 34 	movabs rax,0x563437f53600
  008c4:    	call   rax
  008c6:    	mov    r15d,eax
  008c9: 00 	cmp    r15d,DWORD PTR [rip+0x159c]        # 0x1e6c
  008d0:    	jne    0x2bfa3
  008d6:    	mov    eax,DWORD PTR [rip+0xfffffffffffd43f9]        # 0xfffd4cd5
  008dc:    	cmp    DWORD PTR [rip+0x1586],eax        # 0x1e68
  008e2:    	jne    0x2bfa3
  008e8: 00 	mov    QWORD PTR [rsp-0x20],0x0
  008f1:    	mov    QWORD PTR [rsp-0x38],rcx
  008f6:    	mov    rax,QWORD PTR [rbx]
  008f9:    	lea    rdi,[rsp-0x18]
  008fe:    	mov    QWORD PTR [rdi],rax
  00901:    	mov    QWORD PTR [rbx],rdi
  00904:    	mov    rax,QWORD PTR [rbp-0x38]
  00908:    	mov    QWORD PTR [rsp-0x38],rax
  0090d: 00 	mov    rdi,0x0
  00914: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0091d: 00 	movabs rax,0x0
  00927:    	mov    QWORD PTR [rsp-0x28],rax
  0092c: 00 	movabs r13,0x0
  00936:    	call   0xfffd20dc
  0093b:    	lea    rdi,[rbp-0x8]
  0093f:    	mov    QWORD PTR [rbx],rdi
  00942:    	movq   xmm2,QWORD PTR [rsp]
  00947:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0094d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00953:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00959:    	add    rsp,0x20
  0095d:    	test   rax,rax
  00960:    	je     0x2c00f
  00966:    	mov    QWORD PTR [rbp-0x40],rax
:00051 
:00053 %4 = literal[-0.6]
  0096a: 00 	movq   xmm5,QWORD PTR [rip+0x150a]        # 0x1e7c
  00972: 99 	movabs rax,0xff1999999999999e
  0097c:    	mov    QWORD PTR [rbp-0x48],rax
:00054 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00055 condnotbr _%3 =>:00063
  00980:    	mov    rdi,QWORD PTR [rbp-0x40]
  00984:    	mov    rsi,QWORD PTR [rbp-0x48]
  00988: 00 	test   rdi,0x1
  0098f:    	je     0x2c01e
  00995: 00 	test   rsi,0x1
  0099c:    	je     0x2c01e
  009a2:    	cmp    rdi,rsi
  009a5:    	jle    0x2c138
:00056 %3 = 1: i32
  009ab: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00057 %3 = %1.[%3]                         [Array][Integer]
  009b3:    	sub    rsp,0x20
  009b7:    	movq   QWORD PTR [rsp],xmm2
  009bc:    	movq   QWORD PTR [rsp+0x8],xmm3
  009c2:    	movq   QWORD PTR [rsp+0x10],xmm4
  009c8:    	movq   QWORD PTR [rsp+0x18],xmm5
  009ce:    	mov    rdx,QWORD PTR [rbp-0x30]
  009d2:    	mov    rcx,QWORD PTR [rbp-0x40]
  009d6:    	mov    rdi,rbx
  009d9:    	mov    rsi,r12
  009dc: 34 	movabs r8,0x563439872788
  009e6: 34 	movabs rax,0x563437f47370
  009f0:    	call   rax
  009f2:    	movq   xmm2,QWORD PTR [rsp]
  009f7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009fd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a03:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a09:    	add    rsp,0x20
  00a0d: 34 	movabs r13,0x563439872790
  00a17:    	test   rax,rax
  00a1a:    	je     0xfffd2117
  00a20:    	mov    QWORD PTR [rbp-0x40],rax
:00058 %4 = literal[1.0]
  00a24: 00 	movq   xmm5,QWORD PTR [rip+0x1460]        # 0x1e8c
  00a2c: 00 	movabs rax,0xff80000000000002
  00a36:    	mov    QWORD PTR [rbp-0x48],rax
:00059 _ = %3.call y=(%4; 1)                [<INVALID>]
  00a3a: 01 	sub    DWORD PTR [rip+0x1453],0x1        # 0x1e94
  00a41:    	je     0x2c082
  00a47:    	sub    rsp,0x20
  00a4b:    	movq   QWORD PTR [rsp],xmm2
  00a50:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a56:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a5c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a62:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a66: 34 	movabs rax,0x563437f53600
  00a70:    	call   rax
  00a72:    	mov    r15d,eax
  00a75: 00 	cmp    r15d,DWORD PTR [rip+0x1420]        # 0x1e9c
  00a7c:    	jne    0x2c0a4
  00a82:    	mov    eax,DWORD PTR [rip+0xfffffffffffd424d]        # 0xfffd4cd5
  00a88:    	cmp    DWORD PTR [rip+0x140a],eax        # 0x1e98
  00a8e:    	jne    0x2c0a4
  00a94: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00a9d:    	mov    QWORD PTR [rsp-0x38],rcx
  00aa2:    	mov    rax,QWORD PTR [rbx]
  00aa5:    	lea    rdi,[rsp-0x18]
  00aaa:    	mov    QWORD PTR [rdi],rax
  00aad:    	mov    QWORD PTR [rbx],rdi
  00ab0:    	mov    rax,QWORD PTR [rbp-0x40]
  00ab4:    	mov    QWORD PTR [rsp-0x38],rax
  00ab9: 00 	mov    rdi,0x1
  00ac0:    	mov    rax,QWORD PTR [rbp-0x48]
  00ac4:    	mov    QWORD PTR [rsp-0x40],rax
  00ac9: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00ad2: 00 	movabs rax,0x0
  00adc:    	mov    QWORD PTR [rsp-0x28],rax
  00ae1: 00 	movabs r13,0x0
  00aeb:    	call   0xfffd20dc
  00af0:    	lea    rdi,[rbp-0x8]
  00af4:    	mov    QWORD PTR [rbx],rdi
  00af7:    	movq   xmm2,QWORD PTR [rsp]
  00afc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b02:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b08:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b0e:    	add    rsp,0x20
  00b12:    	test   rax,rax
  00b15:    	je     0x2c110
:00060 
:00062 br =>:00088
  00b1b:    	jmp    0x2c3f3
:00063 %3 = %2.call z()                     [Vec]
  00b20:    	mov    rdi,QWORD PTR [rbp-0x38]
  00b24: 00 	test   rdi,0x7
  00b2b:    	jne    0x2c151
  00b31:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b35:    	jne    0x2c151
  00b3b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4193],0x26        # 0xfffd4cd5
  00b42:    	jne    0x2c151
  00b48:    	mov    esi,DWORD PTR [rip+0x1356]        # 0x1ea4
  00b4e:    	cmp    esi,0xffffffff
  00b51:    	je     0x2c160
  00b57:    	cmp    WORD PTR [rdi+0x2],0x3
  00b5c:    	jne    0xb75
  00b62:    	cmp    esi,0x6
  00b65:    	jge    0xb75
  00b6b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b70:    	jmp    0xbb7
  00b75:    	sub    rsp,0x20
  00b79:    	movq   QWORD PTR [rsp],xmm2
  00b7e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b84:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b8a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b90: 34 	movabs rax,0x563437ed0590
  00b9a:    	call   rax
  00b9c:    	movq   xmm2,QWORD PTR [rsp]
  00ba1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ba7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00bad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00bb3:    	add    rsp,0x20
  00bb7:    	mov    QWORD PTR [rbp-0x40],rax
:00064 
:00066 %4 = literal[0.6]
  00bbb: 00 	movq   xmm5,QWORD PTR [rip+0x12e9]        # 0x1eac
  00bc3: 99 	movabs rax,0xff1999999999999a
  00bcd:    	mov    QWORD PTR [rbp-0x48],rax
:00067 _%3 = %3 < %4                        [Float][Float]
:00068 condnotbr _%3 =>:00082
  00bd1:    	mov    rdi,QWORD PTR [rbp-0x40]
  00bd5: 00 	test   rdi,0x1
  00bdc:    	jne    0x2c1bf
  00be2: 00 	test   rdi,0x2
  00be9:    	je     0xc25
  00bef:    	xorps  xmm6,xmm6
  00bf2: 00 	movabs rax,0x8000000000000002
  00bfc:    	cmp    rdi,rax
  00bff:    	je     0xc37
  00c05:    	mov    rax,rdi
  00c08:    	sar    rax,0x3f
  00c0c:    	add    rax,0x2
  00c10:    	and    rdi,0xfffffffffffffffc
  00c14:    	or     rdi,rax
  00c17:    	rol    rdi,0x3d
  00c1b:    	movq   xmm6,rdi
  00c20:    	jmp    0xc37
  00c25:    	call   0xfffd2170
  00c2a:    	test   rax,rax
  00c2d:    	je     0x2c1bf
  00c33:    	movq   xmm6,xmm0
  00c37:    	ucomisd xmm6,xmm5
  00c3b:    	jae    0x2c2c0
:00069 %3 = %2.call z()                     [Vec]
  00c41:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c45: 00 	test   rdi,0x7
  00c4c:    	jne    0x2c1ce
  00c52:    	cmp    DWORD PTR [rdi+0x4],0x28
  00c56:    	jne    0x2c1ce
  00c5c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd4072],0x26        # 0xfffd4cd5
  00c63:    	jne    0x2c1ce
  00c69:    	mov    esi,DWORD PTR [rip+0x1249]        # 0x1eb8
  00c6f:    	cmp    esi,0xffffffff
  00c72:    	je     0x2c1dd
  00c78:    	cmp    WORD PTR [rdi+0x2],0x3
  00c7d:    	jne    0xc96
  00c83:    	cmp    esi,0x6
  00c86:    	jge    0xc96
  00c8c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c91:    	jmp    0xcd8
  00c96:    	sub    rsp,0x20
  00c9a:    	movq   QWORD PTR [rsp],xmm2
  00c9f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ca5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cab:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cb1: 34 	movabs rax,0x563437ed0590
  00cbb:    	call   rax
  00cbd:    	movq   xmm2,QWORD PTR [rsp]
  00cc2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cc8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cce:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00cd4:    	add    rsp,0x20
  00cd8:    	mov    QWORD PTR [rbp-0x40],rax
:00070 
:00072 %4 = literal[-0.6]
  00cdc: 00 	movq   xmm5,QWORD PTR [rip+0x11d8]        # 0x1ebc
  00ce4: 99 	movabs rax,0xff1999999999999e
  00cee:    	mov    QWORD PTR [rbp-0x48],rax
:00073 _%3 = %3 > %4                        [Float][Float]
:00074 condnotbr _%3 =>:00082
  00cf2:    	mov    rdi,QWORD PTR [rbp-0x40]
  00cf6: 00 	test   rdi,0x1
  00cfd:    	jne    0x2c23c
  00d03: 00 	test   rdi,0x2
  00d0a:    	je     0xd46
  00d10:    	xorps  xmm6,xmm6
  00d13: 00 	movabs rax,0x8000000000000002
  00d1d:    	cmp    rdi,rax
  00d20:    	je     0xd58
  00d26:    	mov    rax,rdi
  00d29:    	sar    rax,0x3f
  00d2d:    	add    rax,0x2
  00d31:    	and    rdi,0xfffffffffffffffc
  00d35:    	or     rdi,rax
  00d38:    	rol    rdi,0x3d
  00d3c:    	movq   xmm6,rdi
  00d41:    	jmp    0xd58
  00d46:    	call   0xfffd2170
  00d4b:    	test   rax,rax
  00d4e:    	je     0x2c23c
  00d54:    	movq   xmm6,xmm0
  00d58:    	ucomisd xmm6,xmm5
  00d5c:    	jbe    0x2c2d9
:00075 %3 = 1: i32
  00d62: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00076 %3 = %1.[%3]                         [Array][Integer]
  00d6a:    	sub    rsp,0x20
  00d6e:    	movq   QWORD PTR [rsp],xmm2
  00d73:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d79:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d7f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d85:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d89:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d8d:    	mov    rdi,rbx
  00d90:    	mov    rsi,r12
  00d93: 34 	movabs r8,0x5634398728b8
  00d9d: 34 	movabs rax,0x563437f47370
  00da7:    	call   rax
  00da9:    	movq   xmm2,QWORD PTR [rsp]
  00dae:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00db4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00dba:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00dc0:    	add    rsp,0x20
  00dc4: 34 	movabs r13,0x5634398728c0
  00dce:    	test   rax,rax
  00dd1:    	je     0xfffd2117
  00dd7:    	mov    QWORD PTR [rbp-0x40],rax
:00077 %4 = literal[1.0]
  00ddb: 00 	movq   xmm5,QWORD PTR [rip+0x10e9]        # 0x1ecc
  00de3: 00 	movabs rax,0xff80000000000002
  00ded:    	mov    QWORD PTR [rbp-0x48],rax
:00078 _ = %3.call z=(%4; 1)                [Vec]
  00df1:    	mov    rdi,QWORD PTR [rbp-0x40]
  00df5: 00 	test   rdi,0x7
  00dfc:    	jne    0x2c24b
  00e02:    	cmp    DWORD PTR [rdi+0x4],0x28
  00e06:    	jne    0x2c24b
  00e0c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3ec2],0x26        # 0xfffd4cd5
  00e13:    	jne    0x2c24b
  00e19:    	mov    esi,DWORD PTR [rip+0x10b9]        # 0x1ed8
  00e1f:    	cmp    esi,0xffffffff
  00e22:    	je     0x2c25a
  00e28:    	cmp    WORD PTR [rdi+0x2],0x3
  00e2d:    	jne    0xe4a
  00e33:    	cmp    esi,0x6
  00e36:    	jge    0xe4a
  00e3c:    	mov    rax,QWORD PTR [rbp-0x48]
  00e40:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e45:    	jmp    0xea3
  00e4a:    	sub    rsp,0x20
  00e4e:    	movq   QWORD PTR [rsp],xmm2
  00e53:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e59:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e5f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e65:    	mov    rdx,QWORD PTR [rbp-0x48]
  00e69: 34 	movabs rax,0x563437ed0810
  00e73:    	call   rax
  00e75:    	movq   xmm2,QWORD PTR [rsp]
  00e7a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e80:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e86:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e8c:    	add    rsp,0x20
  00e90: 34 	movabs r13,0x5634398728f0
  00e9a:    	test   rax,rax
  00e9d:    	je     0xfffd2117
:00079 
:00081 br =>:00088
  00ea3:    	jmp    0x2c40c
:00082 %3 = 1: i32
  00ea8: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00083 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00eb0:    	sub    rsp,0x20
  00eb4:    	movq   QWORD PTR [rsp],xmm2
  00eb9:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ebf:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ec5:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ecb:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ecf:    	mov    rcx,QWORD PTR [rbp-0x40]
  00ed3:    	mov    rdi,rbx
  00ed6:    	mov    rsi,r12
  00ed9: 34 	movabs r8,0x563439872928
  00ee3: 34 	movabs rax,0x563437f47370
  00eed:    	call   rax
  00eef:    	movq   xmm2,QWORD PTR [rsp]
  00ef4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00efa:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f00:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f06:    	add    rsp,0x20
  00f0a: 34 	movabs r13,0x563439872930
  00f14:    	test   rax,rax
  00f17:    	je     0xfffd2117
  00f1d:    	mov    QWORD PTR [rbp-0x40],rax
:00084 %4 = literal[1.0]
  00f21: 00 	movq   xmm5,QWORD PTR [rip+0xfb3]        # 0x1edc
  00f29: 00 	movabs rax,0xff80000000000002
  00f33:    	mov    QWORD PTR [rbp-0x48],rax
:00085 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f37: 01 	sub    DWORD PTR [rip+0xfa6],0x1        # 0x1ee4
  00f3e:    	je     0x2c301
  00f44:    	sub    rsp,0x20
  00f48:    	movq   QWORD PTR [rsp],xmm2
  00f4d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f53:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f59:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f5f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f63: 34 	movabs rax,0x563437f53600
  00f6d:    	call   rax
  00f6f:    	mov    r15d,eax
  00f72: 00 	cmp    r15d,DWORD PTR [rip+0xf73]        # 0x1eec
  00f79:    	jne    0x2c323
  00f7f:    	mov    eax,DWORD PTR [rip+0xfffffffffffd3d50]        # 0xfffd4cd5
  00f85:    	cmp    DWORD PTR [rip+0xf5d],eax        # 0x1ee8
  00f8b:    	jne    0x2c323
  00f91: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f9a:    	mov    QWORD PTR [rsp-0x38],rcx
  00f9f:    	mov    rax,QWORD PTR [rbx]
  00fa2:    	lea    rdi,[rsp-0x18]
  00fa7:    	mov    QWORD PTR [rdi],rax
  00faa:    	mov    QWORD PTR [rbx],rdi
  00fad:    	mov    rax,QWORD PTR [rbp-0x40]
  00fb1:    	mov    QWORD PTR [rsp-0x38],rax
  00fb6: 00 	mov    rdi,0x1
  00fbd:    	mov    rax,QWORD PTR [rbp-0x48]
  00fc1:    	mov    QWORD PTR [rsp-0x40],rax
  00fc6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fcf: 00 	movabs rax,0x0
  00fd9:    	mov    QWORD PTR [rsp-0x28],rax
  00fde: 00 	movabs r13,0x0
  00fe8:    	call   0xfffd20dc
  00fed:    	lea    rdi,[rbp-0x8]
  00ff1:    	mov    QWORD PTR [rbx],rdi
  00ff4:    	movq   xmm2,QWORD PTR [rsp]
  00ff9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fff:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01005:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0100b:    	add    rsp,0x20
  0100f:    	test   rax,rax
  01012:    	je     0x2c38f
:00086 
:00088 %3 = 0: i32
  01018: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  01020: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  01028:    	sub    rsp,0x20
  0102c:    	movq   QWORD PTR [rsp],xmm2
  01031:    	movq   QWORD PTR [rsp+0x8],xmm3
  01037:    	movq   QWORD PTR [rsp+0x10],xmm4
  0103d:    	movq   QWORD PTR [rsp+0x18],xmm5
  01043:    	mov    rdx,QWORD PTR [rbp-0x30]
  01047:    	mov    rcx,QWORD PTR [rbp-0x50]
  0104b:    	mov    rdi,rbx
  0104e:    	mov    rsi,r12
  01051: 34 	movabs r8,0x563439872998
  0105b: 34 	movabs rax,0x563437f47370
  01065:    	call   rax
  01067:    	movq   xmm2,QWORD PTR [rsp]
  0106c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01072:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01078:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0107e:    	add    rsp,0x20
  01082: 34 	movabs r13,0x5634398729a0
  0108c:    	test   rax,rax
  0108f:    	je     0xfffd2117
  01095:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  01099: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  010a1:    	sub    rsp,0x20
  010a5:    	movq   QWORD PTR [rsp],xmm3
  010aa:    	movq   QWORD PTR [rsp+0x8],xmm4
  010b0:    	movq   QWORD PTR [rsp+0x10],xmm5
  010b6:    	mov    rdx,QWORD PTR [rbp-0x30]
  010ba:    	mov    rcx,QWORD PTR [rbp-0x58]
  010be:    	mov    rdi,rbx
  010c1:    	mov    rsi,r12
  010c4: 34 	movabs r8,0x5634398729b8
  010ce: 34 	movabs rax,0x563437f47370
  010d8:    	call   rax
  010da:    	movq   xmm3,QWORD PTR [rsp]
  010df:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010e5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010eb:    	add    rsp,0x20
  010ef: 34 	movabs r13,0x5634398729c0
  010f9:    	test   rax,rax
  010fc:    	je     0xfffd2117
  01102:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  01106:    	mov    rdi,QWORD PTR [rbp-0x50]
  0110a: 00 	test   rdi,0x7
  01111:    	jne    0x2c39e
  01117:    	cmp    DWORD PTR [rdi+0x4],0x28
  0111b:    	jne    0x2c39e
  01121: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3bad],0x26        # 0xfffd4cd5
  01128:    	jne    0x2c39e
  0112e:    	sub    rsp,0x10
  01132:    	movq   QWORD PTR [rsp],xmm3
  01137:    	movq   QWORD PTR [rsp+0x8],xmm4
  0113d: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01146:    	mov    QWORD PTR [rsp-0x38],rcx
  0114b:    	mov    rax,QWORD PTR [rbx]
  0114e:    	lea    rdi,[rsp-0x18]
  01153:    	mov    QWORD PTR [rdi],rax
  01156:    	mov    QWORD PTR [rbx],rdi
  01159:    	mov    rax,QWORD PTR [rbp-0x50]
  0115d:    	mov    QWORD PTR [rsp-0x38],rax
  01162: 00 	mov    rdi,0x1
  01169:    	mov    rax,QWORD PTR [rbp-0x58]
  0116d:    	mov    QWORD PTR [rsp-0x40],rax
  01172: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0117b: 09 	movabs rax,0x900000041
  01185:    	mov    QWORD PTR [rsp-0x28],rax
  0118a: 34 	movabs r13,0x563439838e30
  01194:    	call   0xfffdeb81
  01199:    	lea    rdi,[rbp-0x8]
  0119d:    	mov    QWORD PTR [rbx],rdi
  011a0:    	movq   xmm3,QWORD PTR [rsp]
  011a5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011ab:    	add    rsp,0x10
  011af: 34 	movabs r13,0x5634398729e0
  011b9:    	test   rax,rax
  011bc:    	je     0xfffd2117
  011c2:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  011c6:    	sub    rsp,0x10
  011ca:    	movq   QWORD PTR [rsp],xmm3
  011cf:    	movq   QWORD PTR [rsp+0x8],xmm4
  011d5:    	mov    rdx,QWORD PTR [rbp-0x30]
  011d9:    	mov    rcx,QWORD PTR [rbp-0x40]
  011dd:    	mov    r8,QWORD PTR [rbp-0x48]
  011e1:    	mov    rdi,rbx
  011e4:    	mov    rsi,r12
  011e7: 34 	movabs rax,0x563437f474a0
  011f1:    	call   rax
  011f3:    	movq   xmm3,QWORD PTR [rsp]
  011f8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011fe:    	add    rsp,0x10
  01202: 34 	movabs r13,0x563439872a00
  0120c:    	test   rax,rax
  0120f:    	je     0xfffd2117
:00097 %3 = 0: i32
  01215: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  0121d: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  01225:    	sub    rsp,0x10
  01229:    	movq   QWORD PTR [rsp],xmm3
  0122e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01234:    	mov    rdx,QWORD PTR [rbp-0x30]
  01238:    	mov    rcx,QWORD PTR [rbp-0x50]
  0123c:    	mov    rdi,rbx
  0123f:    	mov    rsi,r12
  01242: 34 	movabs r8,0x563439872a28
  0124c: 34 	movabs rax,0x563437f47370
  01256:    	call   rax
  01258:    	movq   xmm3,QWORD PTR [rsp]
  0125d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01263:    	add    rsp,0x10
  01267: 34 	movabs r13,0x563439872a30
  01271:    	test   rax,rax
  01274:    	je     0xfffd2117
  0127a:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  0127e:    	mov    rdi,QWORD PTR [rbp-0x50]
  01282: 00 	test   rdi,0x7
  01289:    	jne    0x2c3ad
  0128f:    	cmp    DWORD PTR [rdi+0x4],0x28
  01293:    	jne    0x2c3ad
  01299: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3a35],0x26        # 0xfffd4cd5
  012a0:    	jne    0x2c3ad
  012a6:    	sub    rsp,0x10
  012aa:    	movq   QWORD PTR [rsp],xmm3
  012af:    	movq   QWORD PTR [rsp+0x8],xmm4
  012b5: 00 	mov    QWORD PTR [rsp-0x20],0x0
  012be:    	mov    QWORD PTR [rsp-0x38],rcx
  012c3:    	mov    rax,QWORD PTR [rbx]
  012c6:    	lea    rdi,[rsp-0x18]
  012cb:    	mov    QWORD PTR [rdi],rax
  012ce:    	mov    QWORD PTR [rbx],rdi
  012d1:    	mov    rax,QWORD PTR [rbp-0x50]
  012d5:    	mov    QWORD PTR [rsp-0x38],rax
  012da: 00 	mov    rdi,0x0
  012e1: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012ea: 07 	movabs rax,0x1000700000044
  012f4:    	mov    QWORD PTR [rsp-0x28],rax
  012f9: 34 	movabs r13,0x5634398639e0
  01303:    	call   0xfffd560e
  01308:    	lea    rdi,[rbp-0x8]
  0130c:    	mov    QWORD PTR [rbx],rdi
  0130f:    	movq   xmm3,QWORD PTR [rsp]
  01314:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0131a:    	add    rsp,0x10
  0131e: 34 	movabs r13,0x563439872a50
  01328:    	test   rax,rax
  0132b:    	je     0xfffd2117
  01331:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  01335:    	sub    rsp,0x10
  01339:    	movq   QWORD PTR [rsp],xmm3
  0133e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01344:    	mov    rdx,QWORD PTR [rbp-0x30]
  01348:    	mov    rcx,QWORD PTR [rbp-0x40]
  0134c:    	mov    r8,QWORD PTR [rbp-0x48]
  01350:    	mov    rdi,rbx
  01353:    	mov    rsi,r12
  01356: 34 	movabs rax,0x563437f474a0
  01360:    	call   rax
  01362:    	movq   xmm3,QWORD PTR [rsp]
  01367:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0136d:    	add    rsp,0x10
  01371: 34 	movabs r13,0x563439872a70
  0137b:    	test   rax,rax
  0137e:    	je     0xfffd2117
:00104 %3 = 1: i32
  01384: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  0138c: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01394:    	sub    rsp,0x10
  01398:    	movq   QWORD PTR [rsp],xmm3
  0139d:    	movq   QWORD PTR [rsp+0x8],xmm4
  013a3:    	mov    rdx,QWORD PTR [rbp-0x30]
  013a7:    	mov    rcx,QWORD PTR [rbp-0x50]
  013ab:    	mov    rdi,rbx
  013ae:    	mov    rsi,r12
  013b1: 34 	movabs r8,0x563439872a98
  013bb: 34 	movabs rax,0x563437f47370
  013c5:    	call   rax
  013c7:    	movq   xmm3,QWORD PTR [rsp]
  013cc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013d2:    	add    rsp,0x10
  013d6: 34 	movabs r13,0x563439872aa0
  013e0:    	test   rax,rax
  013e3:    	je     0xfffd2117
  013e9:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  013ed: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  013f5:    	sub    rsp,0x10
  013f9:    	movq   QWORD PTR [rsp],xmm3
  013fe:    	movq   QWORD PTR [rsp+0x8],xmm4
  01404:    	mov    rdx,QWORD PTR [rbp-0x30]
  01408:    	mov    rcx,QWORD PTR [rbp-0x58]
  0140c:    	mov    rdi,rbx
  0140f:    	mov    rsi,r12
  01412: 34 	movabs r8,0x563439872ab8
  0141c: 34 	movabs rax,0x563437f47370
  01426:    	call   rax
  01428:    	movq   xmm3,QWORD PTR [rsp]
  0142d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01433:    	add    rsp,0x10
  01437: 34 	movabs r13,0x563439872ac0
  01441:    	test   rax,rax
  01444:    	je     0xfffd2117
  0144a:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  0144e:    	mov    rdi,QWORD PTR [rbp-0x50]
  01452: 00 	test   rdi,0x7
  01459:    	jne    0x2c3bc
  0145f:    	cmp    DWORD PTR [rdi+0x4],0x28
  01463:    	jne    0x2c3bc
  01469: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3865],0x26        # 0xfffd4cd5
  01470:    	jne    0x2c3bc
  01476:    	sub    rsp,0x10
  0147a:    	movq   QWORD PTR [rsp],xmm3
  0147f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01485: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0148e:    	mov    QWORD PTR [rsp-0x38],rcx
  01493:    	mov    rax,QWORD PTR [rbx]
  01496:    	lea    rdi,[rsp-0x18]
  0149b:    	mov    QWORD PTR [rdi],rax
  0149e:    	mov    QWORD PTR [rbx],rdi
  014a1:    	mov    rax,QWORD PTR [rbp-0x50]
  014a5:    	mov    QWORD PTR [rsp-0x38],rax
  014aa: 00 	mov    rdi,0x1
  014b1:    	mov    rax,QWORD PTR [rbp-0x58]
  014b5:    	mov    QWORD PTR [rsp-0x40],rax
  014ba: 00 	mov    QWORD PTR [rsp-0x30],0x0
  014c3: 09 	movabs rax,0x900000041
  014cd:    	mov    QWORD PTR [rsp-0x28],rax
  014d2: 34 	movabs r13,0x563439838e30
  014dc:    	call   0xfffdeb81
  014e1:    	lea    rdi,[rbp-0x8]
  014e5:    	mov    QWORD PTR [rbx],rdi
  014e8:    	movq   xmm3,QWORD PTR [rsp]
  014ed:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014f3:    	add    rsp,0x10
  014f7: 34 	movabs r13,0x563439872ae0
  01501:    	test   rax,rax
  01504:    	je     0xfffd2117
  0150a:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  0150e:    	sub    rsp,0x10
  01512:    	movq   QWORD PTR [rsp],xmm3
  01517:    	movq   QWORD PTR [rsp+0x8],xmm4
  0151d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01521:    	mov    rcx,QWORD PTR [rbp-0x40]
  01525:    	mov    r8,QWORD PTR [rbp-0x48]
  01529:    	mov    rdi,rbx
  0152c:    	mov    rsi,r12
  0152f: 34 	movabs rax,0x563437f474a0
  01539:    	call   rax
  0153b:    	movq   xmm3,QWORD PTR [rsp]
  01540:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01546:    	add    rsp,0x10
  0154a: 34 	movabs r13,0x563439872b00
  01554:    	test   rax,rax
  01557:    	je     0xfffd2117
:00113 %3 = 1: i32
  0155d: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01565: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  0156d:    	sub    rsp,0x10
  01571:    	movq   QWORD PTR [rsp],xmm3
  01576:    	movq   QWORD PTR [rsp+0x8],xmm4
  0157c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01580:    	mov    rcx,QWORD PTR [rbp-0x50]
  01584:    	mov    rdi,rbx
  01587:    	mov    rsi,r12
  0158a: 34 	movabs r8,0x563439872b28
  01594: 34 	movabs rax,0x563437f47370
  0159e:    	call   rax
  015a0:    	movq   xmm3,QWORD PTR [rsp]
  015a5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015ab:    	add    rsp,0x10
  015af: 34 	movabs r13,0x563439872b30
  015b9:    	test   rax,rax
  015bc:    	je     0xfffd2117
  015c2:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  015c6:    	mov    rdi,QWORD PTR [rbp-0x50]
  015ca: 00 	test   rdi,0x7
  015d1:    	jne    0x2c3cb
  015d7:    	cmp    DWORD PTR [rdi+0x4],0x28
  015db:    	jne    0x2c3cb
  015e1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd36ed],0x26        # 0xfffd4cd5
  015e8:    	jne    0x2c3cb
  015ee:    	sub    rsp,0x10
  015f2:    	movq   QWORD PTR [rsp],xmm3
  015f7:    	movq   QWORD PTR [rsp+0x8],xmm4
  015fd: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01606:    	mov    QWORD PTR [rsp-0x38],rcx
  0160b:    	mov    rax,QWORD PTR [rbx]
  0160e:    	lea    rdi,[rsp-0x18]
  01613:    	mov    QWORD PTR [rdi],rax
  01616:    	mov    QWORD PTR [rbx],rdi
  01619:    	mov    rax,QWORD PTR [rbp-0x50]
  0161d:    	mov    QWORD PTR [rsp-0x38],rax
  01622: 00 	mov    rdi,0x0
  01629: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01632: 07 	movabs rax,0x1000700000044
  0163c:    	mov    QWORD PTR [rsp-0x28],rax
  01641: 34 	movabs r13,0x5634398639e0
  0164b:    	call   0xfffd560e
  01650:    	lea    rdi,[rbp-0x8]
  01654:    	mov    QWORD PTR [rbx],rdi
  01657:    	movq   xmm3,QWORD PTR [rsp]
  0165c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01662:    	add    rsp,0x10
  01666: 34 	movabs r13,0x563439872b50
  01670:    	test   rax,rax
  01673:    	je     0xfffd2117
  01679:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  0167d:    	sub    rsp,0x10
  01681:    	movq   QWORD PTR [rsp],xmm3
  01686:    	movq   QWORD PTR [rsp+0x8],xmm4
  0168c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01690:    	mov    rcx,QWORD PTR [rbp-0x40]
  01694:    	mov    r8,QWORD PTR [rbp-0x48]
  01698:    	mov    rdi,rbx
  0169b:    	mov    rsi,r12
  0169e: 34 	movabs rax,0x563437f474a0
  016a8:    	call   rax
  016aa:    	movq   xmm3,QWORD PTR [rsp]
  016af:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016b5:    	add    rsp,0x10
  016b9: 34 	movabs r13,0x563439872b70
  016c3:    	test   rax,rax
  016c6:    	je     0xfffd2117
:00120 %3 = %4
  016cc:    	mov    rax,QWORD PTR [rbp-0x48]
  016d0:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  016d4:    	mov    rax,QWORD PTR [rbp-0x40]
  016d8:    	leave  
  016d9:    	ret    
:00088 %3 = 0: i32
  016da: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  016e2: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  016ea:    	sub    rsp,0x20
  016ee:    	movq   QWORD PTR [rsp],xmm2
  016f3:    	movq   QWORD PTR [rsp+0x8],xmm3
  016f9:    	movq   QWORD PTR [rsp+0x10],xmm4
  016ff:    	movq   QWORD PTR [rsp+0x18],xmm5
  01705:    	mov    rdx,QWORD PTR [rbp-0x30]
  01709:    	mov    rcx,QWORD PTR [rbp-0x50]
  0170d:    	mov    rdi,rbx
  01710:    	mov    rsi,r12
  01713: 34 	movabs r8,0x563439872998
  0171d: 34 	movabs rax,0x563437f47370
  01727:    	call   rax
  01729:    	movq   xmm2,QWORD PTR [rsp]
  0172e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01734:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0173a:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01740:    	add    rsp,0x20
  01744: 34 	movabs r13,0x5634398729a0
  0174e:    	test   rax,rax
  01751:    	je     0xfffd2117
  01757:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  0175b: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  01763:    	sub    rsp,0x20
  01767:    	movq   QWORD PTR [rsp],xmm3
  0176c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01772:    	movq   QWORD PTR [rsp+0x10],xmm5
  01778:    	mov    rdx,QWORD PTR [rbp-0x30]
  0177c:    	mov    rcx,QWORD PTR [rbp-0x58]
  01780:    	mov    rdi,rbx
  01783:    	mov    rsi,r12
  01786: 34 	movabs r8,0x5634398729b8
  01790: 34 	movabs rax,0x563437f47370
  0179a:    	call   rax
  0179c:    	movq   xmm3,QWORD PTR [rsp]
  017a1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017a7:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017ad:    	add    rsp,0x20
  017b1: 34 	movabs r13,0x5634398729c0
  017bb:    	test   rax,rax
  017be:    	je     0xfffd2117
  017c4:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  017c8:    	mov    rdi,QWORD PTR [rbp-0x50]
  017cc: 00 	test   rdi,0x7
  017d3:    	jne    0x2c425
  017d9:    	cmp    DWORD PTR [rdi+0x4],0x28
  017dd:    	jne    0x2c425
  017e3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd34eb],0x26        # 0xfffd4cd5
  017ea:    	jne    0x2c425
  017f0:    	sub    rsp,0x10
  017f4:    	movq   QWORD PTR [rsp],xmm3
  017f9:    	movq   QWORD PTR [rsp+0x8],xmm4
  017ff: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01808:    	mov    QWORD PTR [rsp-0x38],rcx
  0180d:    	mov    rax,QWORD PTR [rbx]
  01810:    	lea    rdi,[rsp-0x18]
  01815:    	mov    QWORD PTR [rdi],rax
  01818:    	mov    QWORD PTR [rbx],rdi
  0181b:    	mov    rax,QWORD PTR [rbp-0x50]
  0181f:    	mov    QWORD PTR [rsp-0x38],rax
  01824: 00 	mov    rdi,0x1
  0182b:    	mov    rax,QWORD PTR [rbp-0x58]
  0182f:    	mov    QWORD PTR [rsp-0x40],rax
  01834: 00 	mov    QWORD PTR [rsp-0x30],0x0
  0183d: 09 	movabs rax,0x900000041
  01847:    	mov    QWORD PTR [rsp-0x28],rax
  0184c: 34 	movabs r13,0x563439838e30
  01856:    	call   0xfffdeb81
  0185b:    	lea    rdi,[rbp-0x8]
  0185f:    	mov    QWORD PTR [rbx],rdi
  01862:    	movq   xmm3,QWORD PTR [rsp]
  01867:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0186d:    	add    rsp,0x10
  01871: 34 	movabs r13,0x5634398729e0
  0187b:    	test   rax,rax
  0187e:    	je     0xfffd2117
  01884:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  01888:    	sub    rsp,0x10
  0188c:    	movq   QWORD PTR [rsp],xmm3
  01891:    	movq   QWORD PTR [rsp+0x8],xmm4
  01897:    	mov    rdx,QWORD PTR [rbp-0x30]
  0189b:    	mov    rcx,QWORD PTR [rbp-0x40]
  0189f:    	mov    r8,QWORD PTR [rbp-0x48]
  018a3:    	mov    rdi,rbx
  018a6:    	mov    rsi,r12
  018a9: 34 	movabs rax,0x563437f474a0
  018b3:    	call   rax
  018b5:    	movq   xmm3,QWORD PTR [rsp]
  018ba:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018c0:    	add    rsp,0x10
  018c4: 34 	movabs r13,0x563439872a00
  018ce:    	test   rax,rax
  018d1:    	je     0xfffd2117
:00097 %3 = 0: i32
  018d7: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  018df: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  018e7:    	sub    rsp,0x10
  018eb:    	movq   QWORD PTR [rsp],xmm3
  018f0:    	movq   QWORD PTR [rsp+0x8],xmm4
  018f6:    	mov    rdx,QWORD PTR [rbp-0x30]
  018fa:    	mov    rcx,QWORD PTR [rbp-0x50]
  018fe:    	mov    rdi,rbx
  01901:    	mov    rsi,r12
  01904: 34 	movabs r8,0x563439872a28
  0190e: 34 	movabs rax,0x563437f47370
  01918:    	call   rax
  0191a:    	movq   xmm3,QWORD PTR [rsp]
  0191f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01925:    	add    rsp,0x10
  01929: 34 	movabs r13,0x563439872a30
  01933:    	test   rax,rax
  01936:    	je     0xfffd2117
  0193c:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  01940:    	mov    rdi,QWORD PTR [rbp-0x50]
  01944: 00 	test   rdi,0x7
  0194b:    	jne    0x2c434
  01951:    	cmp    DWORD PTR [rdi+0x4],0x28
  01955:    	jne    0x2c434
  0195b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd3373],0x26        # 0xfffd4cd5
  01962:    	jne    0x2c434
  01968:    	sub    rsp,0x10
  0196c:    	movq   QWORD PTR [rsp],xmm3
  01971:    	movq   QWORD PTR [rsp+0x8],xmm4
  01977: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01980:    	mov    QWORD PTR [rsp-0x38],rcx
  01985:    	mov    rax,QWORD PTR [rbx]
  01988:    	lea    rdi,[rsp-0x18]
  0198d:    	mov    QWORD PTR [rdi],rax
  01990:    	mov    QWORD PTR [rbx],rdi
  01993:    	mov    rax,QWORD PTR [rbp-0x50]
  01997:    	mov    QWORD PTR [rsp-0x38],rax
  0199c: 00 	mov    rdi,0x0
  019a3: 00 	mov    QWORD PTR [rsp-0x30],0x0
  019ac: 07 	movabs rax,0x1000700000044
  019b6:    	mov    QWORD PTR [rsp-0x28],rax
  019bb: 34 	movabs r13,0x5634398639e0
  019c5:    	call   0xfffd560e
  019ca:    	lea    rdi,[rbp-0x8]
  019ce:    	mov    QWORD PTR [rbx],rdi
  019d1:    	movq   xmm3,QWORD PTR [rsp]
  019d6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019dc:    	add    rsp,0x10
  019e0: 34 	movabs r13,0x563439872a50
  019ea:    	test   rax,rax
  019ed:    	je     0xfffd2117
  019f3:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  019f7:    	sub    rsp,0x10
  019fb:    	movq   QWORD PTR [rsp],xmm3
  01a00:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a06:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a0a:    	mov    rcx,QWORD PTR [rbp-0x40]
  01a0e:    	mov    r8,QWORD PTR [rbp-0x48]
  01a12:    	mov    rdi,rbx
  01a15:    	mov    rsi,r12
  01a18: 34 	movabs rax,0x563437f474a0
  01a22:    	call   rax
  01a24:    	movq   xmm3,QWORD PTR [rsp]
  01a29:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a2f:    	add    rsp,0x10
  01a33: 34 	movabs r13,0x563439872a70
  01a3d:    	test   rax,rax
  01a40:    	je     0xfffd2117
:00104 %3 = 1: i32
  01a46: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  01a4e: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01a56:    	sub    rsp,0x10
  01a5a:    	movq   QWORD PTR [rsp],xmm3
  01a5f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a65:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a69:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a6d:    	mov    rdi,rbx
  01a70:    	mov    rsi,r12
  01a73: 34 	movabs r8,0x563439872a98
  01a7d: 34 	movabs rax,0x563437f47370
  01a87:    	call   rax
  01a89:    	movq   xmm3,QWORD PTR [rsp]
  01a8e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a94:    	add    rsp,0x10
  01a98: 34 	movabs r13,0x563439872aa0
  01aa2:    	test   rax,rax
  01aa5:    	je     0xfffd2117
  01aab:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  01aaf: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  01ab7:    	sub    rsp,0x10
  01abb:    	movq   QWORD PTR [rsp],xmm3
  01ac0:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ac6:    	mov    rdx,QWORD PTR [rbp-0x30]
  01aca:    	mov    rcx,QWORD PTR [rbp-0x58]
  01ace:    	mov    rdi,rbx
  01ad1:    	mov    rsi,r12
  01ad4: 34 	movabs r8,0x563439872ab8
  01ade: 34 	movabs rax,0x563437f47370
  01ae8:    	call   rax
  01aea:    	movq   xmm3,QWORD PTR [rsp]
  01aef:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01af5:    	add    rsp,0x10
  01af9: 34 	movabs r13,0x563439872ac0
  01b03:    	test   rax,rax
  01b06:    	je     0xfffd2117
  01b0c:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01b10:    	mov    rdi,QWORD PTR [rbp-0x50]
  01b14: 00 	test   rdi,0x7
  01b1b:    	jne    0x2c443
  01b21:    	cmp    DWORD PTR [rdi+0x4],0x28
  01b25:    	jne    0x2c443
  01b2b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd31a3],0x26        # 0xfffd4cd5
  01b32:    	jne    0x2c443
  01b38:    	sub    rsp,0x10
  01b3c:    	movq   QWORD PTR [rsp],xmm3
  01b41:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b47: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b50:    	mov    QWORD PTR [rsp-0x38],rcx
  01b55:    	mov    rax,QWORD PTR [rbx]
  01b58:    	lea    rdi,[rsp-0x18]
  01b5d:    	mov    QWORD PTR [rdi],rax
  01b60:    	mov    QWORD PTR [rbx],rdi
  01b63:    	mov    rax,QWORD PTR [rbp-0x50]
  01b67:    	mov    QWORD PTR [rsp-0x38],rax
  01b6c: 00 	mov    rdi,0x1
  01b73:    	mov    rax,QWORD PTR [rbp-0x58]
  01b77:    	mov    QWORD PTR [rsp-0x40],rax
  01b7c: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b85: 09 	movabs rax,0x900000041
  01b8f:    	mov    QWORD PTR [rsp-0x28],rax
  01b94: 34 	movabs r13,0x563439838e30
  01b9e:    	call   0xfffdeb81
  01ba3:    	lea    rdi,[rbp-0x8]
  01ba7:    	mov    QWORD PTR [rbx],rdi
  01baa:    	movq   xmm3,QWORD PTR [rsp]
  01baf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bb5:    	add    rsp,0x10
  01bb9: 34 	movabs r13,0x563439872ae0
  01bc3:    	test   rax,rax
  01bc6:    	je     0xfffd2117
  01bcc:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  01bd0:    	sub    rsp,0x10
  01bd4:    	movq   QWORD PTR [rsp],xmm3
  01bd9:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bdf:    	mov    rdx,QWORD PTR [rbp-0x30]
  01be3:    	mov    rcx,QWORD PTR [rbp-0x40]
  01be7:    	mov    r8,QWORD PTR [rbp-0x48]
  01beb:    	mov    rdi,rbx
  01bee:    	mov    rsi,r12
  01bf1: 34 	movabs rax,0x563437f474a0
  01bfb:    	call   rax
  01bfd:    	movq   xmm3,QWORD PTR [rsp]
  01c02:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c08:    	add    rsp,0x10
  01c0c: 34 	movabs r13,0x563439872b00
  01c16:    	test   rax,rax
  01c19:    	je     0xfffd2117
:00113 %3 = 1: i32
  01c1f: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01c27: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01c2f:    	sub    rsp,0x10
  01c33:    	movq   QWORD PTR [rsp],xmm3
  01c38:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c3e:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c42:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c46:    	mov    rdi,rbx
  01c49:    	mov    rsi,r12
  01c4c: 34 	movabs r8,0x563439872b28
  01c56: 34 	movabs rax,0x563437f47370
  01c60:    	call   rax
  01c62:    	movq   xmm3,QWORD PTR [rsp]
  01c67:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c6d:    	add    rsp,0x10
  01c71: 34 	movabs r13,0x563439872b30
  01c7b:    	test   rax,rax
  01c7e:    	je     0xfffd2117
  01c84:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  01c88:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c8c: 00 	test   rdi,0x7
  01c93:    	jne    0x2c452
  01c99:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c9d:    	jne    0x2c452
  01ca3: 26 	cmp    DWORD PTR [rip+0xfffffffffffd302b],0x26        # 0xfffd4cd5
  01caa:    	jne    0x2c452
  01cb0:    	sub    rsp,0x10
  01cb4:    	movq   QWORD PTR [rsp],xmm3
  01cb9:    	movq   QWORD PTR [rsp+0x8],xmm4
  01cbf: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01cc8:    	mov    QWORD PTR [rsp-0x38],rcx
  01ccd:    	mov    rax,QWORD PTR [rbx]
  01cd0:    	lea    rdi,[rsp-0x18]
  01cd5:    	mov    QWORD PTR [rdi],rax
  01cd8:    	mov    QWORD PTR [rbx],rdi
  01cdb:    	mov    rax,QWORD PTR [rbp-0x50]
  01cdf:    	mov    QWORD PTR [rsp-0x38],rax
  01ce4: 00 	mov    rdi,0x0
  01ceb: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01cf4: 07 	movabs rax,0x1000700000044
  01cfe:    	mov    QWORD PTR [rsp-0x28],rax
  01d03: 34 	movabs r13,0x5634398639e0
  01d0d:    	call   0xfffd560e
  01d12:    	lea    rdi,[rbp-0x8]
  01d16:    	mov    QWORD PTR [rbx],rdi
  01d19:    	movq   xmm3,QWORD PTR [rsp]
  01d1e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d24:    	add    rsp,0x10
  01d28: 34 	movabs r13,0x563439872b50
  01d32:    	test   rax,rax
  01d35:    	je     0xfffd2117
  01d3b:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  01d3f:    	sub    rsp,0x10
  01d43:    	movq   QWORD PTR [rsp],xmm3
  01d48:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d4e:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d52:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d56:    	mov    r8,QWORD PTR [rbp-0x48]
  01d5a:    	mov    rdi,rbx
  01d5d:    	mov    rsi,r12
  01d60: 34 	movabs rax,0x563437f474a0
  01d6a:    	call   rax
  01d6c:    	movq   xmm3,QWORD PTR [rsp]
  01d71:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d77:    	add    rsp,0x10
  01d7b: 34 	movabs r13,0x563439872b70
  01d85:    	test   rax,rax
  01d88:    	je     0xfffd2117
:00120 %3 = %4
  01d8e:    	mov    rax,QWORD PTR [rbp-0x48]
  01d92:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  01d96:    	mov    rax,QWORD PTR [rbp-0x40]
  01d9a:    	leave  
  01d9b:    	ret    
==> start whole compile: otherBasis FuncId(60) self_class:Scene start:[00000] bytecode:0x5634398723f0
<== finished compile. elapsed:139µs
offset:Pos(196116) code: 7537 bytes  data: 335 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	je     0x4a
  00014:    	jl     0x1f
  0001a:    	jmp    0x2a571
  0001f:    	jmp    0x2a571
  00024:    	mov    eax,0x2
  00029:    	sub    eax,edx
  0002b:    	test   rax,rax
  0002e:    	je     0x4a
  00034:    	lea    rdi,[rbp-0x40]
  00038: 00 	mov    QWORD PTR [rdi+rax*8],0x0
  00040:    	sub    rax,0x1
  00044:    	jne    0x38
  0004a: 00 	mov    rax,0x4
  00051:    	mov    QWORD PTR [rbp-0x40],rax
  00055:    	mov    QWORD PTR [rbp-0x48],rax
  00059:    	mov    QWORD PTR [rbp-0x50],rax
  0005d:    	mov    QWORD PTR [rbp-0x58],rax
  00061:    	mov    QWORD PTR [rbp-0x60],rax
  00065:    	mov    QWORD PTR [rbp-0x68],rax
  00069:    	mov    rdi,QWORD PTR [rbp-0x28]
  0006d: 00 	test   rdi,0x7
  00074:    	jne    0x2a580
  0007a:    	cmp    DWORD PTR [rdi+0x4],0x32
  0007e:    	jne    0x2a580
:00000 init_method reg:9 arg:2 pos:2 req:2 stack_offset:7
:00001 %3 = 2: i32
  00084: 00 	mov    QWORD PTR [rbp-0x40],0x5
:00002 %5 = const[Vec]                      [Vec]
  0008c: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd2d59]        # 0xfffd2dec
  00093: 00 	cmp    rax,QWORD PTR [rip+0x1cf2]        # 0x1d8c
  0009a:    	jne    0x2a58f
  000a0: 00 	mov    rax,QWORD PTR [rip+0x1cd5]        # 0x1d7c
  000a7:    	mov    QWORD PTR [rbp-0x50],rax
:00003 %6 = %2.call x()                     [Vec]
  000ab:    	mov    rdi,QWORD PTR [rbp-0x38]
  000af: 00 	test   rdi,0x7
  000b6:    	jne    0x2a5d5
  000bc:    	cmp    DWORD PTR [rdi+0x4],0x28
  000c0:    	jne    0x2a5d5
  000c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2d18],0x26        # 0xfffd2de5
  000cd:    	jne    0x2a5d5
  000d3:    	mov    esi,DWORD PTR [rip+0x1cbf]        # 0x1d98
  000d9:    	cmp    esi,0xffffffff
  000dc:    	je     0x2a5e4
  000e2:    	cmp    WORD PTR [rdi+0x2],0x3
  000e7:    	jne    0x100
  000ed:    	cmp    esi,0x6
  000f0:    	jge    0x100
  000f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000fb:    	jmp    0x10c
  00100: 34 	movabs rax,0x563437ed0590
  0010a:    	call   rax
  0010c:    	mov    QWORD PTR [rbp-0x58],rax
:00004 
:00006 %7 = %2.call y()                     [Vec]
  00110:    	mov    rdi,QWORD PTR [rbp-0x38]
  00114: 00 	test   rdi,0x7
  0011b:    	jne    0x2a60d
  00121:    	cmp    DWORD PTR [rdi+0x4],0x28
  00125:    	jne    0x2a60d
  0012b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2cb3],0x26        # 0xfffd2de5
  00132:    	jne    0x2a60d
  00138:    	mov    esi,DWORD PTR [rip+0x1c62]        # 0x1da0
  0013e:    	cmp    esi,0xffffffff
  00141:    	je     0x2a61c
  00147:    	cmp    WORD PTR [rdi+0x2],0x3
  0014c:    	jne    0x165
  00152:    	cmp    esi,0x6
  00155:    	jge    0x165
  0015b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00160:    	jmp    0x171
  00165: 34 	movabs rax,0x563437ed0590
  0016f:    	call   rax
  00171:    	mov    QWORD PTR [rbp-0x60],rax
:00007 
:00009 %8 = %2.call z()                     [Vec]
  00175:    	mov    rdi,QWORD PTR [rbp-0x38]
  00179: 00 	test   rdi,0x7
  00180:    	jne    0x2a645
  00186:    	cmp    DWORD PTR [rdi+0x4],0x28
  0018a:    	jne    0x2a645
  00190: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2c4e],0x26        # 0xfffd2de5
  00197:    	jne    0x2a645
  0019d:    	mov    esi,DWORD PTR [rip+0x1c05]        # 0x1da8
  001a3:    	cmp    esi,0xffffffff
  001a6:    	je     0x2a654
  001ac:    	cmp    WORD PTR [rdi+0x2],0x3
  001b1:    	jne    0x1ca
  001b7:    	cmp    esi,0x6
  001ba:    	jge    0x1ca
  001c0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001c5:    	jmp    0x1d6
  001ca: 34 	movabs rax,0x563437ed0590
  001d4:    	call   rax
  001d6:    	mov    QWORD PTR [rbp-0x68],rax
:00010 
:00012 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  001da:    	mov    rdi,QWORD PTR [rbp-0x50]
  001de: 00 	test   rdi,0x7
  001e5:    	jne    0x2a67d
  001eb:    	cmp    DWORD PTR [rdi+0x4],0x29
  001ef:    	jne    0x2a67d
  001f5: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2be9],0x26        # 0xfffd2de5
  001fc:    	jne    0x2a67d
  00202: 00 	mov    r9,0x0
  00209:    	mov    rdx,rdi
  0020c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00215:    	mov    QWORD PTR [rsp-0x38],rcx
  0021a:    	mov    rax,QWORD PTR [rbx]
  0021d:    	lea    rdi,[rsp-0x18]
  00222:    	mov    QWORD PTR [rdi],rax
  00225:    	mov    QWORD PTR [rbx],rdi
  00228:    	lea    rcx,[rbp-0x58]
  0022c: 00 	mov    r8,0x3
  00233:    	call   0x2a68c
  00238:    	lea    rdi,[rbp-0x8]
  0023c:    	mov    QWORD PTR [rbx],rdi
  0023f: 34 	movabs r13,0x5634398724d0
  00249:    	test   rax,rax
  0024c:    	je     0xfffd0227
  00252:    	mov    QWORD PTR [rbp-0x48],rax
:00013 
:00015 %1:.[%3:] = %4
  00256:    	mov    rdx,QWORD PTR [rbp-0x30]
  0025a:    	mov    rcx,QWORD PTR [rbp-0x40]
  0025e:    	mov    r8,QWORD PTR [rbp-0x48]
  00262:    	mov    rdi,rbx
  00265:    	mov    rsi,r12
  00268: 34 	movabs rax,0x563437f474a0
  00272:    	call   rax
  00274: 34 	movabs r13,0x5634398724f0
  0027e:    	test   rax,rax
  00281:    	je     0xfffd0227
:00016 %3 = 1: i32
  00287: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00017 %5 = const[Vec]                      [Vec]
  0028f: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffd2b56]        # 0xfffd2dec
  00296: 00 	cmp    rax,QWORD PTR [rip+0x1b1f]        # 0x1dbc
  0029d:    	jne    0x2a6be
  002a3: 00 	mov    rax,QWORD PTR [rip+0x1b02]        # 0x1dac
  002aa:    	mov    QWORD PTR [rbp-0x50],rax
:00018 %6 = literal[0.0]
  002ae: 00 	movq   xmm2,QWORD PTR [rip+0x1b16]        # 0x1dcc
  002b6: 00 	movabs rax,0x8000000000000002
  002c0:    	mov    QWORD PTR [rbp-0x58],rax
:00019 %7 = literal[0.0]
  002c4: 00 	movq   xmm3,QWORD PTR [rip+0x1b10]        # 0x1ddc
  002cc: 00 	movabs rax,0x8000000000000002
  002d6:    	mov    QWORD PTR [rbp-0x60],rax
:00020 %8 = literal[0.0]
  002da: 00 	movq   xmm4,QWORD PTR [rip+0x1b0a]        # 0x1dec
  002e2: 00 	movabs rax,0x8000000000000002
  002ec:    	mov    QWORD PTR [rbp-0x68],rax
:00021 %4 = %5.call new(%6; 3)              [#<Class:Vec>]
  002f0:    	mov    rdi,QWORD PTR [rbp-0x50]
  002f4: 00 	test   rdi,0x7
  002fb:    	jne    0x2a704
  00301:    	cmp    DWORD PTR [rdi+0x4],0x29
  00305:    	jne    0x2a704
  0030b: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2ad3],0x26        # 0xfffd2de5
  00312:    	jne    0x2a704
  00318: 00 	mov    r9,0x0
  0031f:    	sub    rsp,0x20
  00323:    	movq   QWORD PTR [rsp],xmm2
  00328:    	movq   QWORD PTR [rsp+0x8],xmm3
  0032e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00334:    	mov    rdx,rdi
  00337: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00340:    	mov    QWORD PTR [rsp-0x38],rcx
  00345:    	mov    rax,QWORD PTR [rbx]
  00348:    	lea    rdi,[rsp-0x18]
  0034d:    	mov    QWORD PTR [rdi],rax
  00350:    	mov    QWORD PTR [rbx],rdi
  00353:    	lea    rcx,[rbp-0x58]
  00357: 00 	mov    r8,0x3
  0035e:    	call   0x2a713
  00363:    	lea    rdi,[rbp-0x8]
  00367:    	mov    QWORD PTR [rbx],rdi
  0036a:    	movq   xmm2,QWORD PTR [rsp]
  0036f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00375:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0037b:    	add    rsp,0x20
  0037f: 34 	movabs r13,0x563439872560
  00389:    	test   rax,rax
  0038c:    	je     0xfffd0227
  00392:    	mov    QWORD PTR [rbp-0x48],rax
:00022 
:00024 %1:.[%3:] = %4
  00396:    	sub    rsp,0x20
  0039a:    	movq   QWORD PTR [rsp],xmm2
  0039f:    	movq   QWORD PTR [rsp+0x8],xmm3
  003a5:    	movq   QWORD PTR [rsp+0x10],xmm4
  003ab:    	mov    rdx,QWORD PTR [rbp-0x30]
  003af:    	mov    rcx,QWORD PTR [rbp-0x40]
  003b3:    	mov    r8,QWORD PTR [rbp-0x48]
  003b7:    	mov    rdi,rbx
  003ba:    	mov    rsi,r12
  003bd: 34 	movabs rax,0x563437f474a0
  003c7:    	call   rax
  003c9:    	movq   xmm2,QWORD PTR [rsp]
  003ce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003d4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003da:    	add    rsp,0x20
  003de: 34 	movabs r13,0x563439872580
  003e8:    	test   rax,rax
  003eb:    	je     0xfffd0227
:00025 %3 = %2.call x()                     [Vec]
  003f1:    	mov    rdi,QWORD PTR [rbp-0x38]
  003f5: 00 	test   rdi,0x7
  003fc:    	jne    0x2a745
  00402:    	cmp    DWORD PTR [rdi+0x4],0x28
  00406:    	jne    0x2a745
  0040c: 26 	cmp    DWORD PTR [rip+0xfffffffffffd29d2],0x26        # 0xfffd2de5
  00413:    	jne    0x2a745
  00419:    	mov    esi,DWORD PTR [rip+0x19d9]        # 0x1df8
  0041f:    	cmp    esi,0xffffffff
  00422:    	je     0x2a754
  00428:    	cmp    WORD PTR [rdi+0x2],0x3
  0042d:    	jne    0x446
  00433:    	cmp    esi,0x6
  00436:    	jge    0x446
  0043c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00441:    	jmp    0x47c
  00446:    	sub    rsp,0x20
  0044a:    	movq   QWORD PTR [rsp],xmm2
  0044f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00455:    	movq   QWORD PTR [rsp+0x10],xmm4
  0045b: 34 	movabs rax,0x563437ed0590
  00465:    	call   rax
  00467:    	movq   xmm2,QWORD PTR [rsp]
  0046c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00472:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00478:    	add    rsp,0x20
  0047c:    	mov    QWORD PTR [rbp-0x40],rax
:00026 
:00028 %4 = literal[0.6]
  00480: 00 	movq   xmm5,QWORD PTR [rip+0x1974]        # 0x1dfc
  00488: 99 	movabs rax,0xff1999999999999a
  00492:    	mov    QWORD PTR [rbp-0x48],rax
:00029 _%3 = %3 < %4                        [Float][Float]
:00030 condnotbr _%3 =>:00044
  00496:    	mov    rdi,QWORD PTR [rbp-0x40]
  0049a: 00 	test   rdi,0x1
  004a1:    	jne    0x2a7a7
  004a7: 00 	test   rdi,0x2
  004ae:    	je     0x4ea
  004b4:    	xorps  xmm6,xmm6
  004b7: 00 	movabs rax,0x8000000000000002
  004c1:    	cmp    rdi,rax
  004c4:    	je     0x4fc
  004ca:    	mov    rax,rdi
  004cd:    	sar    rax,0x3f
  004d1:    	add    rax,0x2
  004d5:    	and    rdi,0xfffffffffffffffc
  004d9:    	or     rdi,rax
  004dc:    	rol    rdi,0x3d
  004e0:    	movq   xmm6,rdi
  004e5:    	jmp    0x4fc
  004ea:    	call   0xfffd0280
  004ef:    	test   rax,rax
  004f2:    	je     0x2a7a7
  004f8:    	movq   xmm6,xmm0
  004fc:    	ucomisd xmm6,xmm5
  00500:    	jae    0x2a8a8
:00031 %3 = %2.call x()                     [Vec]
  00506:    	mov    rdi,QWORD PTR [rbp-0x38]
  0050a: 00 	test   rdi,0x7
  00511:    	jne    0x2a7b6
  00517:    	cmp    DWORD PTR [rdi+0x4],0x28
  0051b:    	jne    0x2a7b6
  00521: 26 	cmp    DWORD PTR [rip+0xfffffffffffd28bd],0x26        # 0xfffd2de5
  00528:    	jne    0x2a7b6
  0052e:    	mov    esi,DWORD PTR [rip+0x18d4]        # 0x1e08
  00534:    	cmp    esi,0xffffffff
  00537:    	je     0x2a7c5
  0053d:    	cmp    WORD PTR [rdi+0x2],0x3
  00542:    	jne    0x55b
  00548:    	cmp    esi,0x6
  0054b:    	jge    0x55b
  00551:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00556:    	jmp    0x59d
  0055b:    	sub    rsp,0x20
  0055f:    	movq   QWORD PTR [rsp],xmm2
  00564:    	movq   QWORD PTR [rsp+0x8],xmm3
  0056a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00570:    	movq   QWORD PTR [rsp+0x18],xmm5
  00576: 34 	movabs rax,0x563437ed0590
  00580:    	call   rax
  00582:    	movq   xmm2,QWORD PTR [rsp]
  00587:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0058d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00593:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00599:    	add    rsp,0x20
  0059d:    	mov    QWORD PTR [rbp-0x40],rax
:00032 
:00034 %4 = literal[-0.6]
  005a1: 00 	movq   xmm5,QWORD PTR [rip+0x1863]        # 0x1e0c
  005a9: 99 	movabs rax,0xff1999999999999e
  005b3:    	mov    QWORD PTR [rbp-0x48],rax
:00035 _%3 = %3 > %4                        [Float][Float]
:00036 condnotbr _%3 =>:00044
  005b7:    	mov    rdi,QWORD PTR [rbp-0x40]
  005bb: 00 	test   rdi,0x1
  005c2:    	jne    0x2a824
  005c8: 00 	test   rdi,0x2
  005cf:    	je     0x60b
  005d5:    	xorps  xmm6,xmm6
  005d8: 00 	movabs rax,0x8000000000000002
  005e2:    	cmp    rdi,rax
  005e5:    	je     0x61d
  005eb:    	mov    rax,rdi
  005ee:    	sar    rax,0x3f
  005f2:    	add    rax,0x2
  005f6:    	and    rdi,0xfffffffffffffffc
  005fa:    	or     rdi,rax
  005fd:    	rol    rdi,0x3d
  00601:    	movq   xmm6,rdi
  00606:    	jmp    0x61d
  0060b:    	call   0xfffd0280
  00610:    	test   rax,rax
  00613:    	je     0x2a824
  00619:    	movq   xmm6,xmm0
  0061d:    	ucomisd xmm6,xmm5
  00621:    	jbe    0x2a8c1
:00037 %3 = 1: i32
  00627: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00038 %3 = %1.[%3]                         [Array][Integer]
  0062f:    	sub    rsp,0x20
  00633:    	movq   QWORD PTR [rsp],xmm2
  00638:    	movq   QWORD PTR [rsp+0x8],xmm3
  0063e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00644:    	movq   QWORD PTR [rsp+0x18],xmm5
  0064a:    	mov    rdx,QWORD PTR [rbp-0x30]
  0064e:    	mov    rcx,QWORD PTR [rbp-0x40]
  00652:    	mov    rdi,rbx
  00655:    	mov    rsi,r12
  00658: 34 	movabs r8,0x563439872658
  00662: 34 	movabs rax,0x563437f47370
  0066c:    	call   rax
  0066e:    	movq   xmm2,QWORD PTR [rsp]
  00673:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00679:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0067f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00685:    	add    rsp,0x20
  00689: 34 	movabs r13,0x563439872660
  00693:    	test   rax,rax
  00696:    	je     0xfffd0227
  0069c:    	mov    QWORD PTR [rbp-0x40],rax
:00039 %4 = literal[1.0]
  006a0: 00 	movq   xmm5,QWORD PTR [rip+0x1774]        # 0x1e1c
  006a8: 00 	movabs rax,0xff80000000000002
  006b2:    	mov    QWORD PTR [rbp-0x48],rax
:00040 _ = %3.call x=(%4; 1)                [Vec]
  006b6:    	mov    rdi,QWORD PTR [rbp-0x40]
  006ba: 00 	test   rdi,0x7
  006c1:    	jne    0x2a833
  006c7:    	cmp    DWORD PTR [rdi+0x4],0x28
  006cb:    	jne    0x2a833
  006d1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd270d],0x26        # 0xfffd2de5
  006d8:    	jne    0x2a833
  006de:    	mov    esi,DWORD PTR [rip+0x1744]        # 0x1e28
  006e4:    	cmp    esi,0xffffffff
  006e7:    	je     0x2a842
  006ed:    	cmp    WORD PTR [rdi+0x2],0x3
  006f2:    	jne    0x70f
  006f8:    	cmp    esi,0x6
  006fb:    	jge    0x70f
  00701:    	mov    rax,QWORD PTR [rbp-0x48]
  00705:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0070a:    	jmp    0x768
  0070f:    	sub    rsp,0x20
  00713:    	movq   QWORD PTR [rsp],xmm2
  00718:    	movq   QWORD PTR [rsp+0x8],xmm3
  0071e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00724:    	movq   QWORD PTR [rsp+0x18],xmm5
  0072a:    	mov    rdx,QWORD PTR [rbp-0x48]
  0072e: 34 	movabs rax,0x563437ed0810
  00738:    	call   rax
  0073a:    	movq   xmm2,QWORD PTR [rsp]
  0073f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00745:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0074b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00751:    	add    rsp,0x20
  00755: 34 	movabs r13,0x563439872690
  0075f:    	test   rax,rax
  00762:    	je     0xfffd0227
:00041 
:00043 br =>:00088
  00768:    	jmp    0x2ad04
:00044 %3 = %2.call y()                     [Vec]
  0076d:    	mov    rdi,QWORD PTR [rbp-0x38]
  00771: 00 	test   rdi,0x7
  00778:    	jne    0x2a8da
  0077e:    	cmp    DWORD PTR [rdi+0x4],0x28
  00782:    	jne    0x2a8da
  00788: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2656],0x26        # 0xfffd2de5
  0078f:    	jne    0x2a8da
  00795:    	mov    esi,DWORD PTR [rip+0x1695]        # 0x1e30
  0079b:    	cmp    esi,0xffffffff
  0079e:    	je     0x2a8e9
  007a4:    	cmp    WORD PTR [rdi+0x2],0x3
  007a9:    	jne    0x7c2
  007af:    	cmp    esi,0x6
  007b2:    	jge    0x7c2
  007b8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007bd:    	jmp    0x804
  007c2:    	sub    rsp,0x20
  007c6:    	movq   QWORD PTR [rsp],xmm2
  007cb:    	movq   QWORD PTR [rsp+0x8],xmm3
  007d1:    	movq   QWORD PTR [rsp+0x10],xmm4
  007d7:    	movq   QWORD PTR [rsp+0x18],xmm5
  007dd: 34 	movabs rax,0x563437ed0590
  007e7:    	call   rax
  007e9:    	movq   xmm2,QWORD PTR [rsp]
  007ee:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007f4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007fa:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00800:    	add    rsp,0x20
  00804:    	mov    QWORD PTR [rbp-0x40],rax
:00045 
:00047 %4 = literal[0.6]
  00808: 00 	movq   xmm5,QWORD PTR [rip+0x162c]        # 0x1e3c
  00810: 99 	movabs rax,0xff1999999999999a
  0081a:    	mov    QWORD PTR [rbp-0x48],rax
:00048 _%3 = %3 < %4                        [Float][Float]
:00049 condnotbr _%3 =>:00063
  0081e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00822: 00 	test   rdi,0x1
  00829:    	jne    0x2a948
  0082f: 00 	test   rdi,0x2
  00836:    	je     0x872
  0083c:    	xorps  xmm6,xmm6
  0083f: 00 	movabs rax,0x8000000000000002
  00849:    	cmp    rdi,rax
  0084c:    	je     0x884
  00852:    	mov    rax,rdi
  00855:    	sar    rax,0x3f
  00859:    	add    rax,0x2
  0085d:    	and    rdi,0xfffffffffffffffc
  00861:    	or     rdi,rax
  00864:    	rol    rdi,0x3d
  00868:    	movq   xmm6,rdi
  0086d:    	jmp    0x884
  00872:    	call   0xfffd0280
  00877:    	test   rax,rax
  0087a:    	je     0x2a948
  00880:    	movq   xmm6,xmm0
  00884:    	ucomisd xmm6,xmm5
  00888:    	jae    0x2aa49
:00050 %3 = %2.call y()                     [Vec]
  0088e:    	mov    rdi,QWORD PTR [rbp-0x38]
  00892: 00 	test   rdi,0x7
  00899:    	jne    0x2a957
  0089f:    	cmp    DWORD PTR [rdi+0x4],0x28
  008a3:    	jne    0x2a957
  008a9: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2535],0x26        # 0xfffd2de5
  008b0:    	jne    0x2a957
  008b6:    	mov    esi,DWORD PTR [rip+0x158c]        # 0x1e48
  008bc:    	cmp    esi,0xffffffff
  008bf:    	je     0x2a966
  008c5:    	cmp    WORD PTR [rdi+0x2],0x3
  008ca:    	jne    0x8e3
  008d0:    	cmp    esi,0x6
  008d3:    	jge    0x8e3
  008d9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  008de:    	jmp    0x925
  008e3:    	sub    rsp,0x20
  008e7:    	movq   QWORD PTR [rsp],xmm2
  008ec:    	movq   QWORD PTR [rsp+0x8],xmm3
  008f2:    	movq   QWORD PTR [rsp+0x10],xmm4
  008f8:    	movq   QWORD PTR [rsp+0x18],xmm5
  008fe: 34 	movabs rax,0x563437ed0590
  00908:    	call   rax
  0090a:    	movq   xmm2,QWORD PTR [rsp]
  0090f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00915:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0091b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00921:    	add    rsp,0x20
  00925:    	mov    QWORD PTR [rbp-0x40],rax
:00051 
:00053 %4 = literal[-0.6]
  00929: 00 	movq   xmm5,QWORD PTR [rip+0x151b]        # 0x1e4c
  00931: 99 	movabs rax,0xff1999999999999e
  0093b:    	mov    QWORD PTR [rbp-0x48],rax
:00054 _%3 = %3 > %4                        [Float][Float]
:00055 condnotbr _%3 =>:00063
  0093f:    	mov    rdi,QWORD PTR [rbp-0x40]
  00943: 00 	test   rdi,0x1
  0094a:    	jne    0x2a9c5
  00950: 00 	test   rdi,0x2
  00957:    	je     0x993
  0095d:    	xorps  xmm6,xmm6
  00960: 00 	movabs rax,0x8000000000000002
  0096a:    	cmp    rdi,rax
  0096d:    	je     0x9a5
  00973:    	mov    rax,rdi
  00976:    	sar    rax,0x3f
  0097a:    	add    rax,0x2
  0097e:    	and    rdi,0xfffffffffffffffc
  00982:    	or     rdi,rax
  00985:    	rol    rdi,0x3d
  00989:    	movq   xmm6,rdi
  0098e:    	jmp    0x9a5
  00993:    	call   0xfffd0280
  00998:    	test   rax,rax
  0099b:    	je     0x2a9c5
  009a1:    	movq   xmm6,xmm0
  009a5:    	ucomisd xmm6,xmm5
  009a9:    	jbe    0x2aa62
:00056 %3 = 1: i32
  009af: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00057 %3 = %1.[%3]                         [Array][Integer]
  009b7:    	sub    rsp,0x20
  009bb:    	movq   QWORD PTR [rsp],xmm2
  009c0:    	movq   QWORD PTR [rsp+0x8],xmm3
  009c6:    	movq   QWORD PTR [rsp+0x10],xmm4
  009cc:    	movq   QWORD PTR [rsp+0x18],xmm5
  009d2:    	mov    rdx,QWORD PTR [rbp-0x30]
  009d6:    	mov    rcx,QWORD PTR [rbp-0x40]
  009da:    	mov    rdi,rbx
  009dd:    	mov    rsi,r12
  009e0: 34 	movabs r8,0x563439872788
  009ea: 34 	movabs rax,0x563437f47370
  009f4:    	call   rax
  009f6:    	movq   xmm2,QWORD PTR [rsp]
  009fb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a01:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a07:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a0d:    	add    rsp,0x20
  00a11: 34 	movabs r13,0x563439872790
  00a1b:    	test   rax,rax
  00a1e:    	je     0xfffd0227
  00a24:    	mov    QWORD PTR [rbp-0x40],rax
:00058 %4 = literal[1.0]
  00a28: 00 	movq   xmm5,QWORD PTR [rip+0x142c]        # 0x1e5c
  00a30: 00 	movabs rax,0xff80000000000002
  00a3a:    	mov    QWORD PTR [rbp-0x48],rax
:00059 _ = %3.call y=(%4; 1)                [Vec]
  00a3e:    	mov    rdi,QWORD PTR [rbp-0x40]
  00a42: 00 	test   rdi,0x7
  00a49:    	jne    0x2a9d4
  00a4f:    	cmp    DWORD PTR [rdi+0x4],0x28
  00a53:    	jne    0x2a9d4
  00a59: 26 	cmp    DWORD PTR [rip+0xfffffffffffd2385],0x26        # 0xfffd2de5
  00a60:    	jne    0x2a9d4
  00a66:    	mov    esi,DWORD PTR [rip+0x13fc]        # 0x1e68
  00a6c:    	cmp    esi,0xffffffff
  00a6f:    	je     0x2a9e3
  00a75:    	cmp    WORD PTR [rdi+0x2],0x3
  00a7a:    	jne    0xa97
  00a80:    	cmp    esi,0x6
  00a83:    	jge    0xa97
  00a89:    	mov    rax,QWORD PTR [rbp-0x48]
  00a8d:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00a92:    	jmp    0xaf0
  00a97:    	sub    rsp,0x20
  00a9b:    	movq   QWORD PTR [rsp],xmm2
  00aa0:    	movq   QWORD PTR [rsp+0x8],xmm3
  00aa6:    	movq   QWORD PTR [rsp+0x10],xmm4
  00aac:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ab2:    	mov    rdx,QWORD PTR [rbp-0x48]
  00ab6: 34 	movabs rax,0x563437ed0810
  00ac0:    	call   rax
  00ac2:    	movq   xmm2,QWORD PTR [rsp]
  00ac7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00acd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ad3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ad9:    	add    rsp,0x20
  00add: 34 	movabs r13,0x5634398727c0
  00ae7:    	test   rax,rax
  00aea:    	je     0xfffd0227
:00060 
:00062 br =>:00088
  00af0:    	jmp    0x2ad1d
:00063 %3 = %2.call z()                     [Vec]
  00af5:    	mov    rdi,QWORD PTR [rbp-0x38]
  00af9: 00 	test   rdi,0x7
  00b00:    	jne    0x2aa7b
  00b06:    	cmp    DWORD PTR [rdi+0x4],0x28
  00b0a:    	jne    0x2aa7b
  00b10: 26 	cmp    DWORD PTR [rip+0xfffffffffffd22ce],0x26        # 0xfffd2de5
  00b17:    	jne    0x2aa7b
  00b1d:    	mov    esi,DWORD PTR [rip+0x134d]        # 0x1e70
  00b23:    	cmp    esi,0xffffffff
  00b26:    	je     0x2aa8a
  00b2c:    	cmp    WORD PTR [rdi+0x2],0x3
  00b31:    	jne    0xb4a
  00b37:    	cmp    esi,0x6
  00b3a:    	jge    0xb4a
  00b40:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b45:    	jmp    0xb8c
  00b4a:    	sub    rsp,0x20
  00b4e:    	movq   QWORD PTR [rsp],xmm2
  00b53:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b59:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b5f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b65: 34 	movabs rax,0x563437ed0590
  00b6f:    	call   rax
  00b71:    	movq   xmm2,QWORD PTR [rsp]
  00b76:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b7c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b82:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b88:    	add    rsp,0x20
  00b8c:    	mov    QWORD PTR [rbp-0x40],rax
:00064 
:00066 %4 = literal[0.6]
  00b90: 00 	movq   xmm5,QWORD PTR [rip+0x12e4]        # 0x1e7c
  00b98: 99 	movabs rax,0xff1999999999999a
  00ba2:    	mov    QWORD PTR [rbp-0x48],rax
:00067 _%3 = %3 < %4                        [Float][Float]
:00068 condnotbr _%3 =>:00082
  00ba6:    	mov    rdi,QWORD PTR [rbp-0x40]
  00baa: 00 	test   rdi,0x1
  00bb1:    	jne    0x2aae9
  00bb7: 00 	test   rdi,0x2
  00bbe:    	je     0xbfa
  00bc4:    	xorps  xmm6,xmm6
  00bc7: 00 	movabs rax,0x8000000000000002
  00bd1:    	cmp    rdi,rax
  00bd4:    	je     0xc0c
  00bda:    	mov    rax,rdi
  00bdd:    	sar    rax,0x3f
  00be1:    	add    rax,0x2
  00be5:    	and    rdi,0xfffffffffffffffc
  00be9:    	or     rdi,rax
  00bec:    	rol    rdi,0x3d
  00bf0:    	movq   xmm6,rdi
  00bf5:    	jmp    0xc0c
  00bfa:    	call   0xfffd0280
  00bff:    	test   rax,rax
  00c02:    	je     0x2aae9
  00c08:    	movq   xmm6,xmm0
  00c0c:    	ucomisd xmm6,xmm5
  00c10:    	jae    0x2abea
:00069 %3 = %2.call z()                     [Vec]
  00c16:    	mov    rdi,QWORD PTR [rbp-0x38]
  00c1a: 00 	test   rdi,0x7
  00c21:    	jne    0x2aaf8
  00c27:    	cmp    DWORD PTR [rdi+0x4],0x28
  00c2b:    	jne    0x2aaf8
  00c31: 26 	cmp    DWORD PTR [rip+0xfffffffffffd21ad],0x26        # 0xfffd2de5
  00c38:    	jne    0x2aaf8
  00c3e:    	mov    esi,DWORD PTR [rip+0x1244]        # 0x1e88
  00c44:    	cmp    esi,0xffffffff
  00c47:    	je     0x2ab07
  00c4d:    	cmp    WORD PTR [rdi+0x2],0x3
  00c52:    	jne    0xc6b
  00c58:    	cmp    esi,0x6
  00c5b:    	jge    0xc6b
  00c61:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c66:    	jmp    0xcad
  00c6b:    	sub    rsp,0x20
  00c6f:    	movq   QWORD PTR [rsp],xmm2
  00c74:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c7a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c80:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c86: 34 	movabs rax,0x563437ed0590
  00c90:    	call   rax
  00c92:    	movq   xmm2,QWORD PTR [rsp]
  00c97:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c9d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ca3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ca9:    	add    rsp,0x20
  00cad:    	mov    QWORD PTR [rbp-0x40],rax
:00070 
:00072 %4 = literal[-0.6]
  00cb1: 00 	movq   xmm5,QWORD PTR [rip+0x11d3]        # 0x1e8c
  00cb9: 99 	movabs rax,0xff1999999999999e
  00cc3:    	mov    QWORD PTR [rbp-0x48],rax
:00073 _%3 = %3 > %4                        [Float][Float]
:00074 condnotbr _%3 =>:00082
  00cc7:    	mov    rdi,QWORD PTR [rbp-0x40]
  00ccb: 00 	test   rdi,0x1
  00cd2:    	jne    0x2ab66
  00cd8: 00 	test   rdi,0x2
  00cdf:    	je     0xd1b
  00ce5:    	xorps  xmm6,xmm6
  00ce8: 00 	movabs rax,0x8000000000000002
  00cf2:    	cmp    rdi,rax
  00cf5:    	je     0xd2d
  00cfb:    	mov    rax,rdi
  00cfe:    	sar    rax,0x3f
  00d02:    	add    rax,0x2
  00d06:    	and    rdi,0xfffffffffffffffc
  00d0a:    	or     rdi,rax
  00d0d:    	rol    rdi,0x3d
  00d11:    	movq   xmm6,rdi
  00d16:    	jmp    0xd2d
  00d1b:    	call   0xfffd0280
  00d20:    	test   rax,rax
  00d23:    	je     0x2ab66
  00d29:    	movq   xmm6,xmm0
  00d2d:    	ucomisd xmm6,xmm5
  00d31:    	jbe    0x2ac03
:00075 %3 = 1: i32
  00d37: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00076 %3 = %1.[%3]                         [Array][Integer]
  00d3f:    	sub    rsp,0x20
  00d43:    	movq   QWORD PTR [rsp],xmm2
  00d48:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d4e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d54:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d5a:    	mov    rdx,QWORD PTR [rbp-0x30]
  00d5e:    	mov    rcx,QWORD PTR [rbp-0x40]
  00d62:    	mov    rdi,rbx
  00d65:    	mov    rsi,r12
  00d68: 34 	movabs r8,0x5634398728b8
  00d72: 34 	movabs rax,0x563437f47370
  00d7c:    	call   rax
  00d7e:    	movq   xmm2,QWORD PTR [rsp]
  00d83:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d89:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d8f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d95:    	add    rsp,0x20
  00d99: 34 	movabs r13,0x5634398728c0
  00da3:    	test   rax,rax
  00da6:    	je     0xfffd0227
  00dac:    	mov    QWORD PTR [rbp-0x40],rax
:00077 %4 = literal[1.0]
  00db0: 00 	movq   xmm5,QWORD PTR [rip+0x10e4]        # 0x1e9c
  00db8: 00 	movabs rax,0xff80000000000002
  00dc2:    	mov    QWORD PTR [rbp-0x48],rax
:00078 _ = %3.call z=(%4; 1)                [Vec]
  00dc6:    	mov    rdi,QWORD PTR [rbp-0x40]
  00dca: 00 	test   rdi,0x7
  00dd1:    	jne    0x2ab75
  00dd7:    	cmp    DWORD PTR [rdi+0x4],0x28
  00ddb:    	jne    0x2ab75
  00de1: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1ffd],0x26        # 0xfffd2de5
  00de8:    	jne    0x2ab75
  00dee:    	mov    esi,DWORD PTR [rip+0x10b4]        # 0x1ea8
  00df4:    	cmp    esi,0xffffffff
  00df7:    	je     0x2ab84
  00dfd:    	cmp    WORD PTR [rdi+0x2],0x3
  00e02:    	jne    0xe1f
  00e08:    	cmp    esi,0x6
  00e0b:    	jge    0xe1f
  00e11:    	mov    rax,QWORD PTR [rbp-0x48]
  00e15:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e1a:    	jmp    0xe78
  00e1f:    	sub    rsp,0x20
  00e23:    	movq   QWORD PTR [rsp],xmm2
  00e28:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e2e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e34:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e3a:    	mov    rdx,QWORD PTR [rbp-0x48]
  00e3e: 34 	movabs rax,0x563437ed0810
  00e48:    	call   rax
  00e4a:    	movq   xmm2,QWORD PTR [rsp]
  00e4f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e55:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e5b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e61:    	add    rsp,0x20
  00e65: 34 	movabs r13,0x5634398728f0
  00e6f:    	test   rax,rax
  00e72:    	je     0xfffd0227
:00079 
:00081 br =>:00088
  00e78:    	jmp    0x2ad36
:00082 %3 = 1: i32
  00e7d: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00083 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00e85:    	sub    rsp,0x20
  00e89:    	movq   QWORD PTR [rsp],xmm2
  00e8e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e94:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e9a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ea0:    	mov    rdx,QWORD PTR [rbp-0x30]
  00ea4:    	mov    rcx,QWORD PTR [rbp-0x40]
  00ea8:    	mov    rdi,rbx
  00eab:    	mov    rsi,r12
  00eae: 34 	movabs r8,0x563439872928
  00eb8: 34 	movabs rax,0x563437f47370
  00ec2:    	call   rax
  00ec4:    	movq   xmm2,QWORD PTR [rsp]
  00ec9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ecf:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ed5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00edb:    	add    rsp,0x20
  00edf: 34 	movabs r13,0x563439872930
  00ee9:    	test   rax,rax
  00eec:    	je     0xfffd0227
  00ef2:    	mov    QWORD PTR [rbp-0x40],rax
:00084 %4 = literal[1.0]
  00ef6: 00 	movq   xmm5,QWORD PTR [rip+0xfae]        # 0x1eac
  00efe: 00 	movabs rax,0xff80000000000002
  00f08:    	mov    QWORD PTR [rbp-0x48],rax
:00085 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f0c: 01 	sub    DWORD PTR [rip+0xfa1],0x1        # 0x1eb4
  00f13:    	je     0x2ac2b
  00f19:    	sub    rsp,0x20
  00f1d:    	movq   QWORD PTR [rsp],xmm2
  00f22:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f28:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f2e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f34:    	mov    rdi,QWORD PTR [rbp-0x40]
  00f38: 34 	movabs rax,0x563437f53600
  00f42:    	call   rax
  00f44:    	mov    r15d,eax
  00f47: 00 	cmp    r15d,DWORD PTR [rip+0xf6e]        # 0x1ebc
  00f4e:    	jne    0x2ac4d
  00f54:    	mov    eax,DWORD PTR [rip+0xfffffffffffd1e8b]        # 0xfffd2de5
  00f5a:    	cmp    DWORD PTR [rip+0xf58],eax        # 0x1eb8
  00f60:    	jne    0x2ac4d
  00f66: 00 	mov    QWORD PTR [rsp-0x20],0x0
  00f6f:    	mov    QWORD PTR [rsp-0x38],rcx
  00f74:    	mov    rax,QWORD PTR [rbx]
  00f77:    	lea    rdi,[rsp-0x18]
  00f7c:    	mov    QWORD PTR [rdi],rax
  00f7f:    	mov    QWORD PTR [rbx],rdi
  00f82:    	mov    rax,QWORD PTR [rbp-0x40]
  00f86:    	mov    QWORD PTR [rsp-0x38],rax
  00f8b: 00 	mov    rdi,0x1
  00f92:    	mov    rax,QWORD PTR [rbp-0x48]
  00f96:    	mov    QWORD PTR [rsp-0x40],rax
  00f9b: 00 	mov    QWORD PTR [rsp-0x30],0x0
  00fa4: 00 	movabs rax,0x0
  00fae:    	mov    QWORD PTR [rsp-0x28],rax
  00fb3: 00 	movabs r13,0x0
  00fbd:    	call   0xfffd01ec
  00fc2:    	lea    rdi,[rbp-0x8]
  00fc6:    	mov    QWORD PTR [rbx],rdi
  00fc9:    	movq   xmm2,QWORD PTR [rsp]
  00fce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fd4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fda:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fe0:    	add    rsp,0x20
  00fe4:    	test   rax,rax
  00fe7:    	je     0x2acb9
:00086 
:00088 %3 = 0: i32
  00fed: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  00ff5: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  00ffd:    	sub    rsp,0x20
  01001:    	movq   QWORD PTR [rsp],xmm2
  01006:    	movq   QWORD PTR [rsp+0x8],xmm3
  0100c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01012:    	movq   QWORD PTR [rsp+0x18],xmm5
  01018:    	mov    rdx,QWORD PTR [rbp-0x30]
  0101c:    	mov    rcx,QWORD PTR [rbp-0x50]
  01020:    	mov    rdi,rbx
  01023:    	mov    rsi,r12
  01026: 34 	movabs r8,0x563439872998
  01030: 34 	movabs rax,0x563437f47370
  0103a:    	call   rax
  0103c:    	movq   xmm2,QWORD PTR [rsp]
  01041:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01047:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0104d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01053:    	add    rsp,0x20
  01057: 34 	movabs r13,0x5634398729a0
  01061:    	test   rax,rax
  01064:    	je     0xfffd0227
  0106a:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  0106e: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  01076:    	sub    rsp,0x20
  0107a:    	movq   QWORD PTR [rsp],xmm3
  0107f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01085:    	movq   QWORD PTR [rsp+0x10],xmm5
  0108b:    	mov    rdx,QWORD PTR [rbp-0x30]
  0108f:    	mov    rcx,QWORD PTR [rbp-0x58]
  01093:    	mov    rdi,rbx
  01096:    	mov    rsi,r12
  01099: 34 	movabs r8,0x5634398729b8
  010a3: 34 	movabs rax,0x563437f47370
  010ad:    	call   rax
  010af:    	movq   xmm3,QWORD PTR [rsp]
  010b4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  010ba:    	movq   xmm5,QWORD PTR [rsp+0x10]
  010c0:    	add    rsp,0x20
  010c4: 34 	movabs r13,0x5634398729c0
  010ce:    	test   rax,rax
  010d1:    	je     0xfffd0227
  010d7:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  010db:    	mov    rdi,QWORD PTR [rbp-0x50]
  010df: 00 	test   rdi,0x7
  010e6:    	jne    0x2acc8
  010ec:    	cmp    DWORD PTR [rdi+0x4],0x28
  010f0:    	jne    0x2acc8
  010f6: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1ce8],0x26        # 0xfffd2de5
  010fd:    	jne    0x2acc8
  01103:    	sub    rsp,0x10
  01107:    	movq   QWORD PTR [rsp],xmm3
  0110c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01112: 00 	mov    QWORD PTR [rsp-0x20],0x0
  0111b:    	mov    QWORD PTR [rsp-0x38],rcx
  01120:    	mov    rax,QWORD PTR [rbx]
  01123:    	lea    rdi,[rsp-0x18]
  01128:    	mov    QWORD PTR [rdi],rax
  0112b:    	mov    QWORD PTR [rbx],rdi
  0112e:    	mov    rax,QWORD PTR [rbp-0x50]
  01132:    	mov    QWORD PTR [rsp-0x38],rax
  01137: 00 	mov    rdi,0x1
  0113e:    	mov    rax,QWORD PTR [rbp-0x58]
  01142:    	mov    QWORD PTR [rsp-0x40],rax
  01147: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01150: 09 	movabs rax,0x900000041
  0115a:    	mov    QWORD PTR [rsp-0x28],rax
  0115f: 34 	movabs r13,0x563439838e30
  01169:    	call   0xfffdcc91
  0116e:    	lea    rdi,[rbp-0x8]
  01172:    	mov    QWORD PTR [rbx],rdi
  01175:    	movq   xmm3,QWORD PTR [rsp]
  0117a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01180:    	add    rsp,0x10
  01184: 34 	movabs r13,0x5634398729e0
  0118e:    	test   rax,rax
  01191:    	je     0xfffd0227
  01197:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  0119b:    	sub    rsp,0x10
  0119f:    	movq   QWORD PTR [rsp],xmm3
  011a4:    	movq   QWORD PTR [rsp+0x8],xmm4
  011aa:    	mov    rdx,QWORD PTR [rbp-0x30]
  011ae:    	mov    rcx,QWORD PTR [rbp-0x40]
  011b2:    	mov    r8,QWORD PTR [rbp-0x48]
  011b6:    	mov    rdi,rbx
  011b9:    	mov    rsi,r12
  011bc: 34 	movabs rax,0x563437f474a0
  011c6:    	call   rax
  011c8:    	movq   xmm3,QWORD PTR [rsp]
  011cd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011d3:    	add    rsp,0x10
  011d7: 34 	movabs r13,0x563439872a00
  011e1:    	test   rax,rax
  011e4:    	je     0xfffd0227
:00097 %3 = 0: i32
  011ea: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  011f2: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  011fa:    	sub    rsp,0x10
  011fe:    	movq   QWORD PTR [rsp],xmm3
  01203:    	movq   QWORD PTR [rsp+0x8],xmm4
  01209:    	mov    rdx,QWORD PTR [rbp-0x30]
  0120d:    	mov    rcx,QWORD PTR [rbp-0x50]
  01211:    	mov    rdi,rbx
  01214:    	mov    rsi,r12
  01217: 34 	movabs r8,0x563439872a28
  01221: 34 	movabs rax,0x563437f47370
  0122b:    	call   rax
  0122d:    	movq   xmm3,QWORD PTR [rsp]
  01232:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01238:    	add    rsp,0x10
  0123c: 34 	movabs r13,0x563439872a30
  01246:    	test   rax,rax
  01249:    	je     0xfffd0227
  0124f:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  01253:    	mov    rdi,QWORD PTR [rbp-0x50]
  01257: 00 	test   rdi,0x7
  0125e:    	jne    0x2acd7
  01264:    	cmp    DWORD PTR [rdi+0x4],0x28
  01268:    	jne    0x2acd7
  0126e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1b70],0x26        # 0xfffd2de5
  01275:    	jne    0x2acd7
  0127b:    	sub    rsp,0x10
  0127f:    	movq   QWORD PTR [rsp],xmm3
  01284:    	movq   QWORD PTR [rsp+0x8],xmm4
  0128a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01293:    	mov    QWORD PTR [rsp-0x38],rcx
  01298:    	mov    rax,QWORD PTR [rbx]
  0129b:    	lea    rdi,[rsp-0x18]
  012a0:    	mov    QWORD PTR [rdi],rax
  012a3:    	mov    QWORD PTR [rbx],rdi
  012a6:    	mov    rax,QWORD PTR [rbp-0x50]
  012aa:    	mov    QWORD PTR [rsp-0x38],rax
  012af: 00 	mov    rdi,0x0
  012b6: 00 	mov    QWORD PTR [rsp-0x30],0x0
  012bf: 07 	movabs rax,0x1000700000044
  012c9:    	mov    QWORD PTR [rsp-0x28],rax
  012ce: 34 	movabs r13,0x5634398639e0
  012d8:    	call   0xfffd371e
  012dd:    	lea    rdi,[rbp-0x8]
  012e1:    	mov    QWORD PTR [rbx],rdi
  012e4:    	movq   xmm3,QWORD PTR [rsp]
  012e9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012ef:    	add    rsp,0x10
  012f3: 34 	movabs r13,0x563439872a50
  012fd:    	test   rax,rax
  01300:    	je     0xfffd0227
  01306:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  0130a:    	sub    rsp,0x10
  0130e:    	movq   QWORD PTR [rsp],xmm3
  01313:    	movq   QWORD PTR [rsp+0x8],xmm4
  01319:    	mov    rdx,QWORD PTR [rbp-0x30]
  0131d:    	mov    rcx,QWORD PTR [rbp-0x40]
  01321:    	mov    r8,QWORD PTR [rbp-0x48]
  01325:    	mov    rdi,rbx
  01328:    	mov    rsi,r12
  0132b: 34 	movabs rax,0x563437f474a0
  01335:    	call   rax
  01337:    	movq   xmm3,QWORD PTR [rsp]
  0133c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01342:    	add    rsp,0x10
  01346: 34 	movabs r13,0x563439872a70
  01350:    	test   rax,rax
  01353:    	je     0xfffd0227
:00104 %3 = 1: i32
  01359: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  01361: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01369:    	sub    rsp,0x10
  0136d:    	movq   QWORD PTR [rsp],xmm3
  01372:    	movq   QWORD PTR [rsp+0x8],xmm4
  01378:    	mov    rdx,QWORD PTR [rbp-0x30]
  0137c:    	mov    rcx,QWORD PTR [rbp-0x50]
  01380:    	mov    rdi,rbx
  01383:    	mov    rsi,r12
  01386: 34 	movabs r8,0x563439872a98
  01390: 34 	movabs rax,0x563437f47370
  0139a:    	call   rax
  0139c:    	movq   xmm3,QWORD PTR [rsp]
  013a1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013a7:    	add    rsp,0x10
  013ab: 34 	movabs r13,0x563439872aa0
  013b5:    	test   rax,rax
  013b8:    	je     0xfffd0227
  013be:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  013c2: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  013ca:    	sub    rsp,0x10
  013ce:    	movq   QWORD PTR [rsp],xmm3
  013d3:    	movq   QWORD PTR [rsp+0x8],xmm4
  013d9:    	mov    rdx,QWORD PTR [rbp-0x30]
  013dd:    	mov    rcx,QWORD PTR [rbp-0x58]
  013e1:    	mov    rdi,rbx
  013e4:    	mov    rsi,r12
  013e7: 34 	movabs r8,0x563439872ab8
  013f1: 34 	movabs rax,0x563437f47370
  013fb:    	call   rax
  013fd:    	movq   xmm3,QWORD PTR [rsp]
  01402:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01408:    	add    rsp,0x10
  0140c: 34 	movabs r13,0x563439872ac0
  01416:    	test   rax,rax
  01419:    	je     0xfffd0227
  0141f:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01423:    	mov    rdi,QWORD PTR [rbp-0x50]
  01427: 00 	test   rdi,0x7
  0142e:    	jne    0x2ace6
  01434:    	cmp    DWORD PTR [rdi+0x4],0x28
  01438:    	jne    0x2ace6
  0143e: 26 	cmp    DWORD PTR [rip+0xfffffffffffd19a0],0x26        # 0xfffd2de5
  01445:    	jne    0x2ace6
  0144b:    	sub    rsp,0x10
  0144f:    	movq   QWORD PTR [rsp],xmm3
  01454:    	movq   QWORD PTR [rsp+0x8],xmm4
  0145a: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01463:    	mov    QWORD PTR [rsp-0x38],rcx
  01468:    	mov    rax,QWORD PTR [rbx]
  0146b:    	lea    rdi,[rsp-0x18]
  01470:    	mov    QWORD PTR [rdi],rax
  01473:    	mov    QWORD PTR [rbx],rdi
  01476:    	mov    rax,QWORD PTR [rbp-0x50]
  0147a:    	mov    QWORD PTR [rsp-0x38],rax
  0147f: 00 	mov    rdi,0x1
  01486:    	mov    rax,QWORD PTR [rbp-0x58]
  0148a:    	mov    QWORD PTR [rsp-0x40],rax
  0148f: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01498: 09 	movabs rax,0x900000041
  014a2:    	mov    QWORD PTR [rsp-0x28],rax
  014a7: 34 	movabs r13,0x563439838e30
  014b1:    	call   0xfffdcc91
  014b6:    	lea    rdi,[rbp-0x8]
  014ba:    	mov    QWORD PTR [rbx],rdi
  014bd:    	movq   xmm3,QWORD PTR [rsp]
  014c2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014c8:    	add    rsp,0x10
  014cc: 34 	movabs r13,0x563439872ae0
  014d6:    	test   rax,rax
  014d9:    	je     0xfffd0227
  014df:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  014e3:    	sub    rsp,0x10
  014e7:    	movq   QWORD PTR [rsp],xmm3
  014ec:    	movq   QWORD PTR [rsp+0x8],xmm4
  014f2:    	mov    rdx,QWORD PTR [rbp-0x30]
  014f6:    	mov    rcx,QWORD PTR [rbp-0x40]
  014fa:    	mov    r8,QWORD PTR [rbp-0x48]
  014fe:    	mov    rdi,rbx
  01501:    	mov    rsi,r12
  01504: 34 	movabs rax,0x563437f474a0
  0150e:    	call   rax
  01510:    	movq   xmm3,QWORD PTR [rsp]
  01515:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0151b:    	add    rsp,0x10
  0151f: 34 	movabs r13,0x563439872b00
  01529:    	test   rax,rax
  0152c:    	je     0xfffd0227
:00113 %3 = 1: i32
  01532: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  0153a: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01542:    	sub    rsp,0x10
  01546:    	movq   QWORD PTR [rsp],xmm3
  0154b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01551:    	mov    rdx,QWORD PTR [rbp-0x30]
  01555:    	mov    rcx,QWORD PTR [rbp-0x50]
  01559:    	mov    rdi,rbx
  0155c:    	mov    rsi,r12
  0155f: 34 	movabs r8,0x563439872b28
  01569: 34 	movabs rax,0x563437f47370
  01573:    	call   rax
  01575:    	movq   xmm3,QWORD PTR [rsp]
  0157a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01580:    	add    rsp,0x10
  01584: 34 	movabs r13,0x563439872b30
  0158e:    	test   rax,rax
  01591:    	je     0xfffd0227
  01597:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  0159b:    	mov    rdi,QWORD PTR [rbp-0x50]
  0159f: 00 	test   rdi,0x7
  015a6:    	jne    0x2acf5
  015ac:    	cmp    DWORD PTR [rdi+0x4],0x28
  015b0:    	jne    0x2acf5
  015b6: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1828],0x26        # 0xfffd2de5
  015bd:    	jne    0x2acf5
  015c3:    	sub    rsp,0x10
  015c7:    	movq   QWORD PTR [rsp],xmm3
  015cc:    	movq   QWORD PTR [rsp+0x8],xmm4
  015d2: 00 	mov    QWORD PTR [rsp-0x20],0x0
  015db:    	mov    QWORD PTR [rsp-0x38],rcx
  015e0:    	mov    rax,QWORD PTR [rbx]
  015e3:    	lea    rdi,[rsp-0x18]
  015e8:    	mov    QWORD PTR [rdi],rax
  015eb:    	mov    QWORD PTR [rbx],rdi
  015ee:    	mov    rax,QWORD PTR [rbp-0x50]
  015f2:    	mov    QWORD PTR [rsp-0x38],rax
  015f7: 00 	mov    rdi,0x0
  015fe: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01607: 07 	movabs rax,0x1000700000044
  01611:    	mov    QWORD PTR [rsp-0x28],rax
  01616: 34 	movabs r13,0x5634398639e0
  01620:    	call   0xfffd371e
  01625:    	lea    rdi,[rbp-0x8]
  01629:    	mov    QWORD PTR [rbx],rdi
  0162c:    	movq   xmm3,QWORD PTR [rsp]
  01631:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01637:    	add    rsp,0x10
  0163b: 34 	movabs r13,0x563439872b50
  01645:    	test   rax,rax
  01648:    	je     0xfffd0227
  0164e:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  01652:    	sub    rsp,0x10
  01656:    	movq   QWORD PTR [rsp],xmm3
  0165b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01661:    	mov    rdx,QWORD PTR [rbp-0x30]
  01665:    	mov    rcx,QWORD PTR [rbp-0x40]
  01669:    	mov    r8,QWORD PTR [rbp-0x48]
  0166d:    	mov    rdi,rbx
  01670:    	mov    rsi,r12
  01673: 34 	movabs rax,0x563437f474a0
  0167d:    	call   rax
  0167f:    	movq   xmm3,QWORD PTR [rsp]
  01684:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0168a:    	add    rsp,0x10
  0168e: 34 	movabs r13,0x563439872b70
  01698:    	test   rax,rax
  0169b:    	je     0xfffd0227
:00120 %3 = %4
  016a1:    	mov    rax,QWORD PTR [rbp-0x48]
  016a5:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  016a9:    	mov    rax,QWORD PTR [rbp-0x40]
  016ad:    	leave  
  016ae:    	ret    
:00088 %3 = 0: i32
  016af: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00089 %5 = 1: i32
  016b7: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00090 %5 = %1.[%5]                         [Array][Integer]
  016bf:    	sub    rsp,0x20
  016c3:    	movq   QWORD PTR [rsp],xmm2
  016c8:    	movq   QWORD PTR [rsp+0x8],xmm3
  016ce:    	movq   QWORD PTR [rsp+0x10],xmm4
  016d4:    	movq   QWORD PTR [rsp+0x18],xmm5
  016da:    	mov    rdx,QWORD PTR [rbp-0x30]
  016de:    	mov    rcx,QWORD PTR [rbp-0x50]
  016e2:    	mov    rdi,rbx
  016e5:    	mov    rsi,r12
  016e8: 34 	movabs r8,0x563439872998
  016f2: 34 	movabs rax,0x563437f47370
  016fc:    	call   rax
  016fe:    	movq   xmm2,QWORD PTR [rsp]
  01703:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01709:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0170f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01715:    	add    rsp,0x20
  01719: 34 	movabs r13,0x5634398729a0
  01723:    	test   rax,rax
  01726:    	je     0xfffd0227
  0172c:    	mov    QWORD PTR [rbp-0x50],rax
:00091 %6 = 2: i32
  01730: 00 	mov    QWORD PTR [rbp-0x58],0x5
:00092 %6 = %1.[%6]                         [Array][Integer]
  01738:    	sub    rsp,0x20
  0173c:    	movq   QWORD PTR [rsp],xmm3
  01741:    	movq   QWORD PTR [rsp+0x8],xmm4
  01747:    	movq   QWORD PTR [rsp+0x10],xmm5
  0174d:    	mov    rdx,QWORD PTR [rbp-0x30]
  01751:    	mov    rcx,QWORD PTR [rbp-0x58]
  01755:    	mov    rdi,rbx
  01758:    	mov    rsi,r12
  0175b: 34 	movabs r8,0x5634398729b8
  01765: 34 	movabs rax,0x563437f47370
  0176f:    	call   rax
  01771:    	movq   xmm3,QWORD PTR [rsp]
  01776:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0177c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01782:    	add    rsp,0x20
  01786: 34 	movabs r13,0x5634398729c0
  01790:    	test   rax,rax
  01793:    	je     0xfffd0227
  01799:    	mov    QWORD PTR [rbp-0x58],rax
:00093 %4 = %5.call vcross(%6; 1)           [Vec]
  0179d:    	mov    rdi,QWORD PTR [rbp-0x50]
  017a1: 00 	test   rdi,0x7
  017a8:    	jne    0x2ad4f
  017ae:    	cmp    DWORD PTR [rdi+0x4],0x28
  017b2:    	jne    0x2ad4f
  017b8: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1626],0x26        # 0xfffd2de5
  017bf:    	jne    0x2ad4f
  017c5:    	sub    rsp,0x10
  017c9:    	movq   QWORD PTR [rsp],xmm3
  017ce:    	movq   QWORD PTR [rsp+0x8],xmm4
  017d4: 00 	mov    QWORD PTR [rsp-0x20],0x0
  017dd:    	mov    QWORD PTR [rsp-0x38],rcx
  017e2:    	mov    rax,QWORD PTR [rbx]
  017e5:    	lea    rdi,[rsp-0x18]
  017ea:    	mov    QWORD PTR [rdi],rax
  017ed:    	mov    QWORD PTR [rbx],rdi
  017f0:    	mov    rax,QWORD PTR [rbp-0x50]
  017f4:    	mov    QWORD PTR [rsp-0x38],rax
  017f9: 00 	mov    rdi,0x1
  01800:    	mov    rax,QWORD PTR [rbp-0x58]
  01804:    	mov    QWORD PTR [rsp-0x40],rax
  01809: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01812: 09 	movabs rax,0x900000041
  0181c:    	mov    QWORD PTR [rsp-0x28],rax
  01821: 34 	movabs r13,0x563439838e30
  0182b:    	call   0xfffdcc91
  01830:    	lea    rdi,[rbp-0x8]
  01834:    	mov    QWORD PTR [rbx],rdi
  01837:    	movq   xmm3,QWORD PTR [rsp]
  0183c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01842:    	add    rsp,0x10
  01846: 34 	movabs r13,0x5634398729e0
  01850:    	test   rax,rax
  01853:    	je     0xfffd0227
  01859:    	mov    QWORD PTR [rbp-0x48],rax
:00094 
:00096 %1:.[%3:] = %4
  0185d:    	sub    rsp,0x10
  01861:    	movq   QWORD PTR [rsp],xmm3
  01866:    	movq   QWORD PTR [rsp+0x8],xmm4
  0186c:    	mov    rdx,QWORD PTR [rbp-0x30]
  01870:    	mov    rcx,QWORD PTR [rbp-0x40]
  01874:    	mov    r8,QWORD PTR [rbp-0x48]
  01878:    	mov    rdi,rbx
  0187b:    	mov    rsi,r12
  0187e: 34 	movabs rax,0x563437f474a0
  01888:    	call   rax
  0188a:    	movq   xmm3,QWORD PTR [rsp]
  0188f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01895:    	add    rsp,0x10
  01899: 34 	movabs r13,0x563439872a00
  018a3:    	test   rax,rax
  018a6:    	je     0xfffd0227
:00097 %3 = 0: i32
  018ac: 00 	mov    QWORD PTR [rbp-0x40],0x1
:00098 %5 = 0: i32
  018b4: 00 	mov    QWORD PTR [rbp-0x50],0x1
:00099 %5 = %1.[%5]                         [Array][Integer]
  018bc:    	sub    rsp,0x10
  018c0:    	movq   QWORD PTR [rsp],xmm3
  018c5:    	movq   QWORD PTR [rsp+0x8],xmm4
  018cb:    	mov    rdx,QWORD PTR [rbp-0x30]
  018cf:    	mov    rcx,QWORD PTR [rbp-0x50]
  018d3:    	mov    rdi,rbx
  018d6:    	mov    rsi,r12
  018d9: 34 	movabs r8,0x563439872a28
  018e3: 34 	movabs rax,0x563437f47370
  018ed:    	call   rax
  018ef:    	movq   xmm3,QWORD PTR [rsp]
  018f4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018fa:    	add    rsp,0x10
  018fe: 34 	movabs r13,0x563439872a30
  01908:    	test   rax,rax
  0190b:    	je     0xfffd0227
  01911:    	mov    QWORD PTR [rbp-0x50],rax
:00100 %4 = %5.call vnormalize()            [Vec]
  01915:    	mov    rdi,QWORD PTR [rbp-0x50]
  01919: 00 	test   rdi,0x7
  01920:    	jne    0x2ad5e
  01926:    	cmp    DWORD PTR [rdi+0x4],0x28
  0192a:    	jne    0x2ad5e
  01930: 26 	cmp    DWORD PTR [rip+0xfffffffffffd14ae],0x26        # 0xfffd2de5
  01937:    	jne    0x2ad5e
  0193d:    	sub    rsp,0x10
  01941:    	movq   QWORD PTR [rsp],xmm3
  01946:    	movq   QWORD PTR [rsp+0x8],xmm4
  0194c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01955:    	mov    QWORD PTR [rsp-0x38],rcx
  0195a:    	mov    rax,QWORD PTR [rbx]
  0195d:    	lea    rdi,[rsp-0x18]
  01962:    	mov    QWORD PTR [rdi],rax
  01965:    	mov    QWORD PTR [rbx],rdi
  01968:    	mov    rax,QWORD PTR [rbp-0x50]
  0196c:    	mov    QWORD PTR [rsp-0x38],rax
  01971: 00 	mov    rdi,0x0
  01978: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01981: 07 	movabs rax,0x1000700000044
  0198b:    	mov    QWORD PTR [rsp-0x28],rax
  01990: 34 	movabs r13,0x5634398639e0
  0199a:    	call   0xfffd371e
  0199f:    	lea    rdi,[rbp-0x8]
  019a3:    	mov    QWORD PTR [rbx],rdi
  019a6:    	movq   xmm3,QWORD PTR [rsp]
  019ab:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019b1:    	add    rsp,0x10
  019b5: 34 	movabs r13,0x563439872a50
  019bf:    	test   rax,rax
  019c2:    	je     0xfffd0227
  019c8:    	mov    QWORD PTR [rbp-0x48],rax
:00101 
:00103 %1:.[%3:] = %4
  019cc:    	sub    rsp,0x10
  019d0:    	movq   QWORD PTR [rsp],xmm3
  019d5:    	movq   QWORD PTR [rsp+0x8],xmm4
  019db:    	mov    rdx,QWORD PTR [rbp-0x30]
  019df:    	mov    rcx,QWORD PTR [rbp-0x40]
  019e3:    	mov    r8,QWORD PTR [rbp-0x48]
  019e7:    	mov    rdi,rbx
  019ea:    	mov    rsi,r12
  019ed: 34 	movabs rax,0x563437f474a0
  019f7:    	call   rax
  019f9:    	movq   xmm3,QWORD PTR [rsp]
  019fe:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a04:    	add    rsp,0x10
  01a08: 34 	movabs r13,0x563439872a70
  01a12:    	test   rax,rax
  01a15:    	je     0xfffd0227
:00104 %3 = 1: i32
  01a1b: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00105 %5 = 2: i32
  01a23: 00 	mov    QWORD PTR [rbp-0x50],0x5
:00106 %5 = %1.[%5]                         [Array][Integer]
  01a2b:    	sub    rsp,0x10
  01a2f:    	movq   QWORD PTR [rsp],xmm3
  01a34:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a3a:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a3e:    	mov    rcx,QWORD PTR [rbp-0x50]
  01a42:    	mov    rdi,rbx
  01a45:    	mov    rsi,r12
  01a48: 34 	movabs r8,0x563439872a98
  01a52: 34 	movabs rax,0x563437f47370
  01a5c:    	call   rax
  01a5e:    	movq   xmm3,QWORD PTR [rsp]
  01a63:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a69:    	add    rsp,0x10
  01a6d: 34 	movabs r13,0x563439872aa0
  01a77:    	test   rax,rax
  01a7a:    	je     0xfffd0227
  01a80:    	mov    QWORD PTR [rbp-0x50],rax
:00107 %6 = 0: i32
  01a84: 00 	mov    QWORD PTR [rbp-0x58],0x1
:00108 %6 = %1.[%6]                         [Array][Integer]
  01a8c:    	sub    rsp,0x10
  01a90:    	movq   QWORD PTR [rsp],xmm3
  01a95:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a9b:    	mov    rdx,QWORD PTR [rbp-0x30]
  01a9f:    	mov    rcx,QWORD PTR [rbp-0x58]
  01aa3:    	mov    rdi,rbx
  01aa6:    	mov    rsi,r12
  01aa9: 34 	movabs r8,0x563439872ab8
  01ab3: 34 	movabs rax,0x563437f47370
  01abd:    	call   rax
  01abf:    	movq   xmm3,QWORD PTR [rsp]
  01ac4:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01aca:    	add    rsp,0x10
  01ace: 34 	movabs r13,0x563439872ac0
  01ad8:    	test   rax,rax
  01adb:    	je     0xfffd0227
  01ae1:    	mov    QWORD PTR [rbp-0x58],rax
:00109 %4 = %5.call vcross(%6; 1)           [Vec]
  01ae5:    	mov    rdi,QWORD PTR [rbp-0x50]
  01ae9: 00 	test   rdi,0x7
  01af0:    	jne    0x2ad6d
  01af6:    	cmp    DWORD PTR [rdi+0x4],0x28
  01afa:    	jne    0x2ad6d
  01b00: 26 	cmp    DWORD PTR [rip+0xfffffffffffd12de],0x26        # 0xfffd2de5
  01b07:    	jne    0x2ad6d
  01b0d:    	sub    rsp,0x10
  01b11:    	movq   QWORD PTR [rsp],xmm3
  01b16:    	movq   QWORD PTR [rsp+0x8],xmm4
  01b1c: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01b25:    	mov    QWORD PTR [rsp-0x38],rcx
  01b2a:    	mov    rax,QWORD PTR [rbx]
  01b2d:    	lea    rdi,[rsp-0x18]
  01b32:    	mov    QWORD PTR [rdi],rax
  01b35:    	mov    QWORD PTR [rbx],rdi
  01b38:    	mov    rax,QWORD PTR [rbp-0x50]
  01b3c:    	mov    QWORD PTR [rsp-0x38],rax
  01b41: 00 	mov    rdi,0x1
  01b48:    	mov    rax,QWORD PTR [rbp-0x58]
  01b4c:    	mov    QWORD PTR [rsp-0x40],rax
  01b51: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01b5a: 09 	movabs rax,0x900000041
  01b64:    	mov    QWORD PTR [rsp-0x28],rax
  01b69: 34 	movabs r13,0x563439838e30
  01b73:    	call   0xfffdcc91
  01b78:    	lea    rdi,[rbp-0x8]
  01b7c:    	mov    QWORD PTR [rbx],rdi
  01b7f:    	movq   xmm3,QWORD PTR [rsp]
  01b84:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b8a:    	add    rsp,0x10
  01b8e: 34 	movabs r13,0x563439872ae0
  01b98:    	test   rax,rax
  01b9b:    	je     0xfffd0227
  01ba1:    	mov    QWORD PTR [rbp-0x48],rax
:00110 
:00112 %1:.[%3:] = %4
  01ba5:    	sub    rsp,0x10
  01ba9:    	movq   QWORD PTR [rsp],xmm3
  01bae:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bb4:    	mov    rdx,QWORD PTR [rbp-0x30]
  01bb8:    	mov    rcx,QWORD PTR [rbp-0x40]
  01bbc:    	mov    r8,QWORD PTR [rbp-0x48]
  01bc0:    	mov    rdi,rbx
  01bc3:    	mov    rsi,r12
  01bc6: 34 	movabs rax,0x563437f474a0
  01bd0:    	call   rax
  01bd2:    	movq   xmm3,QWORD PTR [rsp]
  01bd7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bdd:    	add    rsp,0x10
  01be1: 34 	movabs r13,0x563439872b00
  01beb:    	test   rax,rax
  01bee:    	je     0xfffd0227
:00113 %3 = 1: i32
  01bf4: 00 	mov    QWORD PTR [rbp-0x40],0x3
:00114 %5 = 1: i32
  01bfc: 00 	mov    QWORD PTR [rbp-0x50],0x3
:00115 %5 = %1.[%5]                         [Array][Integer]
  01c04:    	sub    rsp,0x10
  01c08:    	movq   QWORD PTR [rsp],xmm3
  01c0d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c13:    	mov    rdx,QWORD PTR [rbp-0x30]
  01c17:    	mov    rcx,QWORD PTR [rbp-0x50]
  01c1b:    	mov    rdi,rbx
  01c1e:    	mov    rsi,r12
  01c21: 34 	movabs r8,0x563439872b28
  01c2b: 34 	movabs rax,0x563437f47370
  01c35:    	call   rax
  01c37:    	movq   xmm3,QWORD PTR [rsp]
  01c3c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01c42:    	add    rsp,0x10
  01c46: 34 	movabs r13,0x563439872b30
  01c50:    	test   rax,rax
  01c53:    	je     0xfffd0227
  01c59:    	mov    QWORD PTR [rbp-0x50],rax
:00116 %4 = %5.call vnormalize()            [Vec]
  01c5d:    	mov    rdi,QWORD PTR [rbp-0x50]
  01c61: 00 	test   rdi,0x7
  01c68:    	jne    0x2ad7c
  01c6e:    	cmp    DWORD PTR [rdi+0x4],0x28
  01c72:    	jne    0x2ad7c
  01c78: 26 	cmp    DWORD PTR [rip+0xfffffffffffd1166],0x26        # 0xfffd2de5
  01c7f:    	jne    0x2ad7c
  01c85:    	sub    rsp,0x10
  01c89:    	movq   QWORD PTR [rsp],xmm3
  01c8e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c94: 00 	mov    QWORD PTR [rsp-0x20],0x0
  01c9d:    	mov    QWORD PTR [rsp-0x38],rcx
  01ca2:    	mov    rax,QWORD PTR [rbx]
  01ca5:    	lea    rdi,[rsp-0x18]
  01caa:    	mov    QWORD PTR [rdi],rax
  01cad:    	mov    QWORD PTR [rbx],rdi
  01cb0:    	mov    rax,QWORD PTR [rbp-0x50]
  01cb4:    	mov    QWORD PTR [rsp-0x38],rax
  01cb9: 00 	mov    rdi,0x0
  01cc0: 00 	mov    QWORD PTR [rsp-0x30],0x0
  01cc9: 07 	movabs rax,0x1000700000044
  01cd3:    	mov    QWORD PTR [rsp-0x28],rax
  01cd8: 34 	movabs r13,0x5634398639e0
  01ce2:    	call   0xfffd371e
  01ce7:    	lea    rdi,[rbp-0x8]
  01ceb:    	mov    QWORD PTR [rbx],rdi
  01cee:    	movq   xmm3,QWORD PTR [rsp]
  01cf3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01cf9:    	add    rsp,0x10
  01cfd: 34 	movabs r13,0x563439872b50
  01d07:    	test   rax,rax
  01d0a:    	je     0xfffd0227
  01d10:    	mov    QWORD PTR [rbp-0x48],rax
:00117 
:00119 %1:.[%3:] = %4
  01d14:    	sub    rsp,0x10
  01d18:    	movq   QWORD PTR [rsp],xmm3
  01d1d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01d23:    	mov    rdx,QWORD PTR [rbp-0x30]
  01d27:    	mov    rcx,QWORD PTR [rbp-0x40]
  01d2b:    	mov    r8,QWORD PTR [rbp-0x48]
  01d2f:    	mov    rdi,rbx
  01d32:    	mov    rsi,r12
  01d35: 34 	movabs rax,0x563437f474a0
  01d3f:    	call   rax
  01d41:    	movq   xmm3,QWORD PTR [rsp]
  01d46:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d4c:    	add    rsp,0x10
  01d50: 34 	movabs r13,0x563439872b70
  01d5a:    	test   rax,rax
  01d5d:    	je     0xfffd0227
:00120 %3 = %4
  01d63:    	mov    rax,QWORD PTR [rbp-0x48]
  01d67:    	mov    QWORD PTR [rbp-0x40],rax
:00121 ret %3
  01d6b:    	mov    rax,QWORD PTR [rbp-0x40]
  01d6f:    	leave  
  01d70:    	ret    
