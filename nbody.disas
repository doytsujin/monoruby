   Compiling monoruby v0.1.0 (/home/monochrome/monoruby)
    Finished release [optimized] target(s) in 6.21s
     Running `target/release/monoruby benchmark/so_nbody.rb`
--> start whole compile: initialize FuncId(45) start:[00000] bytecode:0x5594d52e5bf0
offset:Pos(10660) code: 1147 bytes  data: 185 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x80
  0000b: mov    rax,0x4
  00012: mov    QWORD PTR [rbp-0x60],rax
  00016: mov    QWORD PTR [rbp-0x68],rax
  0001a: mov    QWORD PTR [rbp-0x70],rax
:00000 %8 = %1
  0001e: mov    rax,QWORD PTR [rbp-0x28]
  00022: mov    QWORD PTR [rbp-0x60],rax
:00001 %9 = %2
  00026: mov    rax,QWORD PTR [rbp-0x30]
  0002a: mov    QWORD PTR [rbp-0x68],rax
:00002 %10 = %3
  0002e: mov    rax,QWORD PTR [rbp-0x38]
  00032: mov    QWORD PTR [rbp-0x70],rax
:00003 @x: Planet[IvarId(0)] = %8
  00036: mov    rdi,QWORD PTR [rbp-0x20]
  0003a: test   rdi,0x7
  00041: jne    0x3dbe2
  00047: cmp    DWORD PTR [rdi+0x4],0x25
  0004b: jne    0x3dbe2
  00051: xor    rax,rax
  00054: mov    ax,WORD PTR [rdi+0x2]
  00058: cmp    rax,0x3
  0005c: jne    0x3dbc8
  00062: mov    rax,QWORD PTR [rbp-0x60]
  00066: mov    QWORD PTR [rdi+0x10],rax
:00004 @y: Planet[IvarId(1)] = %9
  0006a: mov    rdi,QWORD PTR [rbp-0x20]
  0006e: test   rdi,0x7
  00075: jne    0x3dc31
  0007b: cmp    DWORD PTR [rdi+0x4],0x25
  0007f: jne    0x3dc31
  00085: xor    rax,rax
  00088: mov    ax,WORD PTR [rdi+0x2]
  0008c: cmp    rax,0x3
  00090: jne    0x3dc17
  00096: mov    rax,QWORD PTR [rbp-0x68]
  0009a: mov    QWORD PTR [rdi+0x18],rax
:00005 @z: Planet[IvarId(2)] = %10
  0009e: mov    rdi,QWORD PTR [rbp-0x20]
  000a2: test   rdi,0x7
  000a9: jne    0x3dc80
  000af: cmp    DWORD PTR [rdi+0x4],0x25
  000b3: jne    0x3dc80
  000b9: xor    rax,rax
  000bc: mov    ax,WORD PTR [rdi+0x2]
  000c0: cmp    rax,0x3
  000c4: jne    0x3dc66
  000ca: mov    rax,QWORD PTR [rbp-0x70]
  000ce: mov    QWORD PTR [rdi+0x20],rax
:00006 %8 = const[DAYS_PER_YEAR]            [365.24]
  000d2: mov    rax,QWORD PTR [rip+0xfffffffffffffda3]        # 0xfffffe7c
  000d9: cmp    rax,QWORD PTR [rip+0x3ac]        # 0x48c
  000e0: jne    0x3dcc4
  000e6: movq   xmm2,QWORD PTR [rip+0x3ae]        # 0x49c
  000ee: mov    rax,QWORD PTR [rip+0x387]        # 0x47c
  000f5: mov    QWORD PTR [rbp-0x60],rax
:00007 %8 = %4 * %8                         [Float][Float]
  000f9: mov    rdi,QWORD PTR [rbp-0x40]
  000fd: test   rdi,0x1
  00104: jne    0x3dd89
  0010a: test   rdi,0x2
  00111: je     0x14d
  00117: xorps  xmm3,xmm3
  0011a: movabs rax,0x8000000000000002
  00124: cmp    rdi,rax
  00127: je     0x15f
  0012d: mov    rax,rdi
  00130: sar    rax,0x3f
  00134: add    rax,0x2
  00138: and    rdi,0xfffffffffffffffc
  0013c: or     rdi,rax
  0013f: rol    rdi,0x3d
  00143: movq   xmm3,rdi
  00148: jmp    0x15f
  0014d: call   0xffffd6d0
  00152: test   rax,rax
  00155: je     0x3dd89
  0015b: movq   xmm3,xmm0
  0015f: mulsd  xmm2,xmm3
:00008 %9 = const[DAYS_PER_YEAR]            [365.24]
  00163: mov    rax,QWORD PTR [rip+0xfffffffffffffd12]        # 0xfffffe7c
  0016a: cmp    rax,QWORD PTR [rip+0x34b]        # 0x4bc
  00171: jne    0x3ddb4
  00177: movq   xmm4,QWORD PTR [rip+0x34d]        # 0x4cc
  0017f: mov    rax,QWORD PTR [rip+0x326]        # 0x4ac
  00186: mov    QWORD PTR [rbp-0x68],rax
:00009 %9 = %5 * %9                         [Float][Float]
  0018a: mov    rdi,QWORD PTR [rbp-0x48]
  0018e: test   rdi,0x1
  00195: jne    0x3de91
  0019b: test   rdi,0x2
  001a2: je     0x1de
  001a8: xorps  xmm5,xmm5
  001ab: movabs rax,0x8000000000000002
  001b5: cmp    rdi,rax
  001b8: je     0x1f0
  001be: mov    rax,rdi
  001c1: sar    rax,0x3f
  001c5: add    rax,0x2
  001c9: and    rdi,0xfffffffffffffffc
  001cd: or     rdi,rax
  001d0: rol    rdi,0x3d
  001d4: movq   xmm5,rdi
  001d9: jmp    0x1f0
  001de: call   0xffffd6d0
  001e3: test   rax,rax
  001e6: je     0x3de91
  001ec: movq   xmm5,xmm0
  001f0: mulsd  xmm4,xmm5
:00010 %10 = const[DAYS_PER_YEAR]           [365.24]
  001f4: mov    rax,QWORD PTR [rip+0xfffffffffffffc81]        # 0xfffffe7c
  001fb: cmp    rax,QWORD PTR [rip+0x2ea]        # 0x4ec
  00202: jne    0x3ded6
  00208: movq   xmm6,QWORD PTR [rip+0x2ec]        # 0x4fc
  00210: mov    rax,QWORD PTR [rip+0x2c5]        # 0x4dc
  00217: mov    QWORD PTR [rbp-0x70],rax
:00011 %10 = %6 * %10                       [Float][Float]
  0021b: mov    rdi,QWORD PTR [rbp-0x50]
  0021f: test   rdi,0x1
  00226: jne    0x3dfcb
  0022c: test   rdi,0x2
  00233: je     0x26f
  00239: xorps  xmm7,xmm7
  0023c: movabs rax,0x8000000000000002
  00246: cmp    rdi,rax
  00249: je     0x281
  0024f: mov    rax,rdi
  00252: sar    rax,0x3f
  00256: add    rax,0x2
  0025a: and    rdi,0xfffffffffffffffc
  0025e: or     rdi,rax
  00261: rol    rdi,0x3d
  00265: movq   xmm7,rdi
  0026a: jmp    0x281
  0026f: call   0xffffd6d0
  00274: test   rax,rax
  00277: je     0x3dfcb
  0027d: movq   xmm7,xmm0
  00281: mulsd  xmm6,xmm7
:00012 @vx: Planet[IvarId(3)] = %8
  00285: movq   xmm0,xmm2
  00289: call   0xffffd907
  0028e: mov    QWORD PTR [rbp-0x60],rax
  00292: mov    rdi,QWORD PTR [rbp-0x20]
  00296: test   rdi,0x7
  0029d: jne    0x3e05c
  002a3: cmp    DWORD PTR [rdi+0x4],0x25
  002a7: jne    0x3e05c
  002ad: xor    rax,rax
  002b0: mov    ax,WORD PTR [rdi+0x2]
  002b4: cmp    rax,0x3
  002b8: jne    0x3dff4
  002be: mov    rax,QWORD PTR [rbp-0x60]
  002c2: mov    QWORD PTR [rdi+0x28],rax
:00013 @vy: Planet[IvarId(4)] = %9
  002c6: movq   xmm0,xmm4
  002ca: call   0xffffd907
  002cf: mov    QWORD PTR [rbp-0x68],rax
  002d3: mov    rdi,QWORD PTR [rbp-0x20]
  002d7: test   rdi,0x7
  002de: jne    0x3e147
  002e4: cmp    DWORD PTR [rdi+0x4],0x25
  002e8: jne    0x3e147
  002ee: xor    rax,rax
  002f1: mov    ax,WORD PTR [rdi+0x2]
  002f5: cmp    rax,0x3
  002f9: jne    0x3e0df
  002ff: mov    rax,QWORD PTR [rbp-0x68]
  00303: mov    QWORD PTR [rdi+0x30],rax
:00014 @vz: Planet[IvarId(5)] = %10
  00307: movq   xmm0,xmm6
  0030b: call   0xffffd907
  00310: mov    QWORD PTR [rbp-0x70],rax
  00314: mov    rdi,QWORD PTR [rbp-0x20]
  00318: test   rdi,0x7
  0031f: jne    0x3e232
  00325: cmp    DWORD PTR [rdi+0x4],0x25
  00329: jne    0x3e232
  0032f: xor    rax,rax
  00332: mov    ax,WORD PTR [rdi+0x2]
  00336: cmp    rax,0x3
  0033a: jne    0x3e1ca
  00340: mov    rax,QWORD PTR [rbp-0x70]
  00344: mov    QWORD PTR [rdi+0x38],rax
:00015 %8 = const[SOLAR_MASS]               [39.47841760435743]
  00348: mov    rax,QWORD PTR [rip+0xfffffffffffffb2d]        # 0xfffffe7c
  0034f: cmp    rax,QWORD PTR [rip+0x1c6]        # 0x51c
  00356: jne    0x3e2c4
  0035c: movq   xmm2,QWORD PTR [rip+0x1c8]        # 0x52c
  00364: mov    rax,QWORD PTR [rip+0x1a1]        # 0x50c
  0036b: mov    QWORD PTR [rbp-0x60],rax
:00016 %8 = %7 * %8                         [Float][Float]
  0036f: mov    rdi,QWORD PTR [rbp-0x58]
  00373: test   rdi,0x1
  0037a: jne    0x3e3c5
  00380: test   rdi,0x2
  00387: je     0x3c4
  0038d: xorps  xmm8,xmm8
  00391: movabs rax,0x8000000000000002
  0039b: cmp    rdi,rax
  0039e: je     0x3d7
  003a4: mov    rax,rdi
  003a7: sar    rax,0x3f
  003ab: add    rax,0x2
  003af: and    rdi,0xfffffffffffffffc
  003b3: or     rdi,rax
  003b6: rol    rdi,0x3d
  003ba: movq   xmm8,rdi
  003bf: jmp    0x3d7
  003c4: call   0xffffd6d0
  003c9: test   rax,rax
  003cc: je     0x3e3c5
  003d2: movq   xmm8,xmm0
  003d7: mulsd  xmm2,xmm8
:00017 @mass: Planet[IvarId(6)] = %8
  003dc: movq   xmm0,xmm2
  003e0: call   0xffffd907
  003e5: mov    QWORD PTR [rbp-0x60],rax
  003e9: mov    rdi,QWORD PTR [rbp-0x20]
  003ed: test   rdi,0x7
  003f4: jne    0x3e3d4
  003fa: cmp    DWORD PTR [rdi+0x4],0x25
  003fe: jne    0x3e3d4
  00404: sub    rsp,0x40
  00408: movq   QWORD PTR [rsp],xmm2
  0040d: movq   QWORD PTR [rsp+0x8],xmm3
  00413: movq   QWORD PTR [rsp+0x10],xmm4
  00419: movq   QWORD PTR [rsp+0x18],xmm5
  0041f: movq   QWORD PTR [rsp+0x20],xmm6
  00425: movq   QWORD PTR [rsp+0x28],xmm7
  0042b: movq   QWORD PTR [rsp+0x30],xmm8
  00432: mov    esi,0x6
  00437: mov    rdx,QWORD PTR [rbp-0x60]
  0043b: movabs rax,0x5594d4e95fe0
  00445: call   rax
  00447: movq   xmm2,QWORD PTR [rsp]
  0044c: movq   xmm3,QWORD PTR [rsp+0x8]
  00452: movq   xmm4,QWORD PTR [rsp+0x10]
  00458: movq   xmm5,QWORD PTR [rsp+0x18]
  0045e: movq   xmm6,QWORD PTR [rsp+0x20]
  00464: movq   xmm7,QWORD PTR [rsp+0x28]
  0046a: movq   xmm8,QWORD PTR [rsp+0x30]
  00471: add    rsp,0x40
:00018 ret %8
  00475: mov    rax,QWORD PTR [rbp-0x60]
  00479: leave  
  0047a: ret    
    finished compile. elapsed:43.7Âµs
--> start partial compile: offset_momentum FuncId(43) start:[00011] bytecode:0x5594d52e8490
<-- compile finished. end:[00039]
offset:Pos(12432) code: 1423 bytes  data: 32 bytes
:00011 loop_start counter=5 jit-addr=0000000000000000
:00012 _%9 = %5 >= %8                       [Integer][Integer]
:00013 condbr _%9 =>:00039
  00000: mov    rdi,QWORD PTR [rbp-0x48]
  00004: mov    rsi,QWORD PTR [rbp-0x60]
  00008: test   rdi,0x1
  0000f: je     0x3dd92
  00015: test   rsi,0x1
  0001c: je     0x3dd92
  00022: cmp    rdi,rsi
  00025: jge    0x58a
:00014 %6 = %1.[%5]
  0002b: mov    rdx,QWORD PTR [rbp-0x28]
  0002f: mov    rcx,QWORD PTR [rbp-0x48]
  00033: mov    rdi,rbx
  00036: mov    rsi,r12
  00039: movabs rax,0x5594d4eeecb0
  00043: call   rax
  00045: movabs r13,0x5594d52e8580
  0004f: test   rax,rax
  00052: je     0xffffcfab
  00058: mov    QWORD PTR [rbp-0x50],rax
:00015 %9 = %6
  0005c: mov    rax,QWORD PTR [rbp-0x50]
  00060: mov    QWORD PTR [rbp-0x68],rax
:00016 %7 = %9.call mass()                  [Planet]
:00017 
  00064: mov    rdi,QWORD PTR [rbp-0x68]
  00068: test   rdi,0x7
  0006f: jne    0x3ddb1
  00075: cmp    DWORD PTR [rdi+0x4],0x25
  00079: jne    0x3ddb1
  0007f: cmp    DWORD PTR [rip+0xfffffffffffff6fe],0x12        # 0xfffff784
  00086: jne    0x3ddb1
  0008c: mov    esi,DWORD PTR [rip+0x501]        # 0x593
  00092: cmp    esi,0xffffffff
  00095: je     0x3ddc0
  0009b: cmp    esi,0x6
  0009e: jge    0xbf
  000a4: xor    rax,rax
  000a7: mov    ax,WORD PTR [rdi+0x2]
  000ab: cmp    rax,0x3
  000af: jne    0xbf
  000b5: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000ba: jmp    0xd0
  000bf: movabs rax,0x5594d4e95d70
  000c9: call   rax
  000cb: jmp    0xd0
  000d0: mov    QWORD PTR [rbp-0x58],rax
:00019 %10 = %6
  000d4: mov    rax,QWORD PTR [rbp-0x50]
  000d8: mov    QWORD PTR [rbp-0x70],rax
:00020 %9 = %10.call vx()                   [Planet]
:00021 
  000dc: mov    rdi,QWORD PTR [rbp-0x70]
  000e0: test   rdi,0x7
  000e7: jne    0x3dde9
  000ed: cmp    DWORD PTR [rdi+0x4],0x25
  000f1: jne    0x3dde9
  000f7: cmp    DWORD PTR [rip+0xfffffffffffff686],0x12        # 0xfffff784
  000fe: jne    0x3dde9
  00104: mov    esi,DWORD PTR [rip+0x491]        # 0x59b
  0010a: cmp    esi,0xffffffff
  0010d: je     0x3ddf8
  00113: cmp    esi,0x6
  00116: jge    0x137
  0011c: xor    rax,rax
  0011f: mov    ax,WORD PTR [rdi+0x2]
  00123: cmp    rax,0x3
  00127: jne    0x137
  0012d: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00132: jmp    0x148
  00137: movabs rax,0x5594d4e95d70
  00141: call   rax
  00143: jmp    0x148
  00148: mov    QWORD PTR [rbp-0x68],rax
:00023 %9 = %9 * %7                         [Float][Float]
  0014c: mov    rdi,QWORD PTR [rbp-0x68]
  00150: test   rdi,0x1
  00157: jne    0x3de21
  0015d: test   rdi,0x2
  00164: je     0x1a0
  0016a: xorps  xmm2,xmm2
  0016d: movabs rax,0x8000000000000002
  00177: cmp    rdi,rax
  0017a: je     0x1b2
  00180: mov    rax,rdi
  00183: sar    rax,0x3f
  00187: add    rax,0x2
  0018b: and    rdi,0xfffffffffffffffc
  0018f: or     rdi,rax
  00192: rol    rdi,0x3d
  00196: movq   xmm2,rdi
  0019b: jmp    0x1b2
  001a0: call   0xffffcfe4
  001a5: test   rax,rax
  001a8: je     0x3de21
  001ae: movq   xmm2,xmm0
  001b2: mov    rdi,QWORD PTR [rbp-0x58]
  001b6: test   rdi,0x1
  001bd: jne    0x3de30
  001c3: test   rdi,0x2
  001ca: je     0x206
  001d0: xorps  xmm3,xmm3
  001d3: movabs rax,0x8000000000000002
  001dd: cmp    rdi,rax
  001e0: je     0x218
  001e6: mov    rax,rdi
  001e9: sar    rax,0x3f
  001ed: add    rax,0x2
  001f1: and    rdi,0xfffffffffffffffc
  001f5: or     rdi,rax
  001f8: rol    rdi,0x3d
  001fc: movq   xmm3,rdi
  00201: jmp    0x218
  00206: call   0xffffcfe4
  0020b: test   rax,rax
  0020e: je     0x3de30
  00214: movq   xmm3,xmm0
  00218: mulsd  xmm2,xmm3
:00024 %2 = %2 + %9                         [Float][Float]
  0021c: mov    rdi,QWORD PTR [rbp-0x30]
  00220: test   rdi,0x1
  00227: jne    0x3de3f
  0022d: test   rdi,0x2
  00234: je     0x270
  0023a: xorps  xmm4,xmm4
  0023d: movabs rax,0x8000000000000002
  00247: cmp    rdi,rax
  0024a: je     0x282
  00250: mov    rax,rdi
  00253: sar    rax,0x3f
  00257: add    rax,0x2
  0025b: and    rdi,0xfffffffffffffffc
  0025f: or     rdi,rax
  00262: rol    rdi,0x3d
  00266: movq   xmm4,rdi
  0026b: jmp    0x282
  00270: call   0xffffcfe4
  00275: test   rax,rax
  00278: je     0x3de3f
  0027e: movq   xmm4,xmm0
  00282: addsd  xmm4,xmm2
:00025 %10 = %6
  00286: mov    rax,QWORD PTR [rbp-0x50]
  0028a: mov    QWORD PTR [rbp-0x70],rax
:00026 %9 = %10.call vy()                   [Planet]
:00027 
  0028e: mov    rdi,QWORD PTR [rbp-0x70]
  00292: test   rdi,0x7
  00299: jne    0x3de5b
  0029f: cmp    DWORD PTR [rdi+0x4],0x25
  002a3: jne    0x3de5b
  002a9: cmp    DWORD PTR [rip+0xfffffffffffff4d4],0x12        # 0xfffff784
  002b0: jne    0x3de5b
  002b6: mov    esi,DWORD PTR [rip+0x2e7]        # 0x5a3
  002bc: cmp    esi,0xffffffff
  002bf: je     0x3de77
  002c5: cmp    esi,0x6
  002c8: jge    0x2e9
  002ce: xor    rax,rax
  002d1: mov    ax,WORD PTR [rdi+0x2]
  002d5: cmp    rax,0x3
  002d9: jne    0x2e9
  002df: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  002e4: jmp    0x318
  002e9: sub    rsp,0x10
  002ed: movq   QWORD PTR [rsp],xmm3
  002f2: movq   QWORD PTR [rsp+0x8],xmm4
  002f8: movabs rax,0x5594d4e95d70
  00302: call   rax
  00304: movq   xmm3,QWORD PTR [rsp]
  00309: movq   xmm4,QWORD PTR [rsp+0x8]
  0030f: add    rsp,0x10
  00313: jmp    0x318
  00318: mov    QWORD PTR [rbp-0x68],rax
:00029 %9 = %9 * %7                         [Float][Float]
  0031c: mov    rdi,QWORD PTR [rbp-0x68]
  00320: test   rdi,0x1
  00327: jne    0x3debe
  0032d: test   rdi,0x2
  00334: je     0x370
  0033a: xorps  xmm2,xmm2
  0033d: movabs rax,0x8000000000000002
  00347: cmp    rdi,rax
  0034a: je     0x382
  00350: mov    rax,rdi
  00353: sar    rax,0x3f
  00357: add    rax,0x2
  0035b: and    rdi,0xfffffffffffffffc
  0035f: or     rdi,rax
  00362: rol    rdi,0x3d
  00366: movq   xmm2,rdi
  0036b: jmp    0x382
  00370: call   0xffffcfe4
  00375: test   rax,rax
  00378: je     0x3debe
  0037e: movq   xmm2,xmm0
  00382: mulsd  xmm2,xmm3
:00030 %3 = %3 + %9                         [Float][Float]
  00386: mov    rdi,QWORD PTR [rbp-0x38]
  0038a: test   rdi,0x1
  00391: jne    0x3deda
  00397: test   rdi,0x2
  0039e: je     0x3da
  003a4: xorps  xmm5,xmm5
  003a7: movabs rax,0x8000000000000002
  003b1: cmp    rdi,rax
  003b4: je     0x3ec
  003ba: mov    rax,rdi
  003bd: sar    rax,0x3f
  003c1: add    rax,0x2
  003c5: and    rdi,0xfffffffffffffffc
  003c9: or     rdi,rax
  003cc: rol    rdi,0x3d
  003d0: movq   xmm5,rdi
  003d5: jmp    0x3ec
  003da: call   0xffffcfe4
  003df: test   rax,rax
  003e2: je     0x3deda
  003e8: movq   xmm5,xmm0
  003ec: addsd  xmm5,xmm2
:00031 %10 = %6
  003f0: mov    rax,QWORD PTR [rbp-0x50]
  003f4: mov    QWORD PTR [rbp-0x70],rax
:00032 %9 = %10.call vz()                   [Planet]
:00033 
  003f8: mov    rdi,QWORD PTR [rbp-0x70]
  003fc: test   rdi,0x7
  00403: jne    0x3df03
  00409: cmp    DWORD PTR [rdi+0x4],0x25
  0040d: jne    0x3df03
  00413: cmp    DWORD PTR [rip+0xfffffffffffff36a],0x12        # 0xfffff784
  0041a: jne    0x3df03
  00420: mov    esi,DWORD PTR [rip+0x185]        # 0x5ab
  00426: cmp    esi,0xffffffff
  00429: je     0x3df2c
  0042f: cmp    esi,0x6
  00432: jge    0x453
  00438: xor    rax,rax
  0043b: mov    ax,WORD PTR [rdi+0x2]
  0043f: cmp    rax,0x3
  00443: jne    0x453
  00449: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0044e: jmp    0x48e
  00453: sub    rsp,0x20
  00457: movq   QWORD PTR [rsp],xmm3
  0045c: movq   QWORD PTR [rsp+0x8],xmm4
  00462: movq   QWORD PTR [rsp+0x10],xmm5
  00468: movabs rax,0x5594d4e95d70
  00472: call   rax
  00474: movq   xmm3,QWORD PTR [rsp]
  00479: movq   xmm4,QWORD PTR [rsp+0x8]
  0047f: movq   xmm5,QWORD PTR [rsp+0x10]
  00485: add    rsp,0x20
  00489: jmp    0x48e
  0048e: mov    QWORD PTR [rbp-0x68],rax
:00035 %9 = %9 * %7                         [Float][Float]
  00492: mov    rdi,QWORD PTR [rbp-0x68]
  00496: test   rdi,0x1
  0049d: jne    0x3df7f
  004a3: test   rdi,0x2
  004aa: je     0x4e6
  004b0: xorps  xmm2,xmm2
  004b3: movabs rax,0x8000000000000002
  004bd: cmp    rdi,rax
  004c0: je     0x4f8
  004c6: mov    rax,rdi
  004c9: sar    rax,0x3f
  004cd: add    rax,0x2
  004d1: and    rdi,0xfffffffffffffffc
  004d5: or     rdi,rax
  004d8: rol    rdi,0x3d
  004dc: movq   xmm2,rdi
  004e1: jmp    0x4f8
  004e6: call   0xffffcfe4
  004eb: test   rax,rax
  004ee: je     0x3df7f
  004f4: movq   xmm2,xmm0
  004f8: mulsd  xmm2,xmm3
:00036 %4 = %4 + %9                         [Float][Float]
  004fc: mov    rdi,QWORD PTR [rbp-0x40]
  00500: test   rdi,0x1
  00507: jne    0x3dfa8
  0050d: test   rdi,0x2
  00514: je     0x550
  0051a: xorps  xmm6,xmm6
  0051d: movabs rax,0x8000000000000002
  00527: cmp    rdi,rax
  0052a: je     0x562
  00530: mov    rax,rdi
  00533: sar    rax,0x3f
  00537: add    rax,0x2
  0053b: and    rdi,0xfffffffffffffffc
  0053f: or     rdi,rax
  00542: rol    rdi,0x3d
  00546: movq   xmm6,rdi
  0054b: jmp    0x562
  00550: call   0xffffcfe4
  00555: test   rax,rax
  00558: je     0x3dfa8
  0055e: movq   xmm6,xmm0
  00562: addsd  xmm6,xmm2
:00037 %5 = %5 + 1: i16                     [Integer][Integer]
  00566: mov    rdi,QWORD PTR [rbp-0x48]
  0056a: test   rdi,0x1
  00571: je     0x3dfde
  00577: add    rdi,0x2
  0057b: jo     0x3dfde
  00581: mov    QWORD PTR [rbp-0x48],rdi
:00038 br =>:00011
  00585: jmp    0x3e030
:00039 loop_end
  0058a: jmp    0x3e021
    finished compile. elapsed:57.2Âµs
--> start partial compile: energy FuncId(42) start:[00050] bytecode:0x5594d52c8a40
<-- compile finished. end:[00103]
offset:Pos(14397) code: 2640 bytes  data: 91 bytes
:00050 loop_start counter=5 jit-addr=0000000000000000
:00051 _%14 = %6 >= %13                     [Integer][Integer]
:00052 condbr _%14 =>:00103
  00000: mov    rdi,QWORD PTR [rbp-0x50]
  00004: mov    rsi,QWORD PTR [rbp-0x88]
  0000b: test   rdi,0x1
  00012: je     0x3d8dc
  00018: test   rsi,0x1
  0001f: je     0x3d8dc
  00025: cmp    rdi,rsi
  00028: jge    0xa4b
:00053 %7 = %1.[%6]
  0002e: mov    rdx,QWORD PTR [rbp-0x28]
  00032: mov    rcx,QWORD PTR [rbp-0x50]
  00036: mov    rdi,rbx
  00039: mov    rsi,r12
  0003c: movabs rax,0x5594d4eeecb0
  00046: call   rax
  00048: movabs r13,0x5594d52c8da0
  00052: test   rax,rax
  00055: je     0xffffc7fe
  0005b: mov    QWORD PTR [rbp-0x58],rax
:00054 %15 = %5
  0005f: mov    rax,QWORD PTR [rbp-0x48]
  00063: mov    QWORD PTR [rbp-0x98],rax
:00055 %14 = %15.call x()                   [Planet]
:00056 
  0006a: mov    rdi,QWORD PTR [rbp-0x98]
  00071: test   rdi,0x7
  00078: jne    0x3d8fb
  0007e: cmp    DWORD PTR [rdi+0x4],0x25
  00082: jne    0x3d8fb
  00088: cmp    DWORD PTR [rip+0xffffffffffffef48],0x12        # 0xffffefd7
  0008f: jne    0x3d8fb
  00095: mov    esi,DWORD PTR [rip+0x9b9]        # 0xa54
  0009b: cmp    esi,0xffffffff
  0009e: je     0x3d90a
  000a4: cmp    esi,0x6
  000a7: jge    0xc8
  000ad: xor    rax,rax
  000b0: mov    ax,WORD PTR [rdi+0x2]
  000b4: cmp    rax,0x3
  000b8: jne    0xc8
  000be: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c3: jmp    0xd9
  000c8: movabs rax,0x5594d4e95d70
  000d2: call   rax
  000d4: jmp    0xd9
  000d9: mov    QWORD PTR [rbp-0x90],rax
:00058 %16 = %7
  000e0: mov    rax,QWORD PTR [rbp-0x58]
  000e4: mov    QWORD PTR [rbp-0xa0],rax
:00059 %15 = %16.call x()                   [Planet]
:00060 
  000eb: mov    rdi,QWORD PTR [rbp-0xa0]
  000f2: test   rdi,0x7
  000f9: jne    0x3d933
  000ff: cmp    DWORD PTR [rdi+0x4],0x25
  00103: jne    0x3d933
  00109: cmp    DWORD PTR [rip+0xffffffffffffeec7],0x12        # 0xffffefd7
  00110: jne    0x3d933
  00116: mov    esi,DWORD PTR [rip+0x940]        # 0xa5c
  0011c: cmp    esi,0xffffffff
  0011f: je     0x3d942
  00125: cmp    esi,0x6
  00128: jge    0x149
  0012e: xor    rax,rax
  00131: mov    ax,WORD PTR [rdi+0x2]
  00135: cmp    rax,0x3
  00139: jne    0x149
  0013f: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00144: jmp    0x15a
  00149: movabs rax,0x5594d4e95d70
  00153: call   rax
  00155: jmp    0x15a
  0015a: mov    QWORD PTR [rbp-0x98],rax
:00062 %8 = %14 - %15                       [Float][Float]
  00161: mov    rdi,QWORD PTR [rbp-0x90]
  00168: test   rdi,0x1
  0016f: jne    0x3d96b
  00175: test   rdi,0x2
  0017c: je     0x1b8
  00182: xorps  xmm2,xmm2
  00185: movabs rax,0x8000000000000002
  0018f: cmp    rdi,rax
  00192: je     0x1ca
  00198: mov    rax,rdi
  0019b: sar    rax,0x3f
  0019f: add    rax,0x2
  001a3: and    rdi,0xfffffffffffffffc
  001a7: or     rdi,rax
  001aa: rol    rdi,0x3d
  001ae: movq   xmm2,rdi
  001b3: jmp    0x1ca
  001b8: call   0xffffc837
  001bd: test   rax,rax
  001c0: je     0x3d96b
  001c6: movq   xmm2,xmm0
  001ca: mov    rdi,QWORD PTR [rbp-0x98]
  001d1: test   rdi,0x1
  001d8: jne    0x3d97a
  001de: test   rdi,0x2
  001e5: je     0x221
  001eb: xorps  xmm3,xmm3
  001ee: movabs rax,0x8000000000000002
  001f8: cmp    rdi,rax
  001fb: je     0x233
  00201: mov    rax,rdi
  00204: sar    rax,0x3f
  00208: add    rax,0x2
  0020c: and    rdi,0xfffffffffffffffc
  00210: or     rdi,rax
  00213: rol    rdi,0x3d
  00217: movq   xmm3,rdi
  0021c: jmp    0x233
  00221: call   0xffffc837
  00226: test   rax,rax
  00229: je     0x3d97a
  0022f: movq   xmm3,xmm0
  00233: movq   xmm4,xmm2
  00237: subsd  xmm4,xmm3
:00063 %15 = %5
  0023b: mov    rax,QWORD PTR [rbp-0x48]
  0023f: mov    QWORD PTR [rbp-0x98],rax
:00064 %14 = %15.call y()                   [Planet]
:00065 
  00246: mov    rdi,QWORD PTR [rbp-0x98]
  0024d: test   rdi,0x7
  00254: jne    0x3d989
  0025a: cmp    DWORD PTR [rdi+0x4],0x25
  0025e: jne    0x3d989
  00264: cmp    DWORD PTR [rip+0xffffffffffffed6c],0x12        # 0xffffefd7
  0026b: jne    0x3d989
  00271: mov    esi,DWORD PTR [rip+0x7ed]        # 0xa64
  00277: cmp    esi,0xffffffff
  0027a: je     0x3d9a5
  00280: cmp    esi,0x6
  00283: jge    0x2a4
  00289: xor    rax,rax
  0028c: mov    ax,WORD PTR [rdi+0x2]
  00290: cmp    rax,0x3
  00294: jne    0x2a4
  0029a: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0029f: jmp    0x2c7
  002a4: sub    rsp,0x10
  002a8: movq   QWORD PTR [rsp],xmm4
  002ad: movabs rax,0x5594d4e95d70
  002b7: call   rax
  002b9: movq   xmm4,QWORD PTR [rsp]
  002be: add    rsp,0x10
  002c2: jmp    0x2c7
  002c7: mov    QWORD PTR [rbp-0x90],rax
:00067 %16 = %7
  002ce: mov    rax,QWORD PTR [rbp-0x58]
  002d2: mov    QWORD PTR [rbp-0xa0],rax
:00068 %15 = %16.call y()                   [Planet]
:00069 
  002d9: mov    rdi,QWORD PTR [rbp-0xa0]
  002e0: test   rdi,0x7
  002e7: jne    0x3d9e0
  002ed: cmp    DWORD PTR [rdi+0x4],0x25
  002f1: jne    0x3d9e0
  002f7: cmp    DWORD PTR [rip+0xffffffffffffecd9],0x12        # 0xffffefd7
  002fe: jne    0x3d9e0
  00304: mov    esi,DWORD PTR [rip+0x762]        # 0xa6c
  0030a: cmp    esi,0xffffffff
  0030d: je     0x3d9fc
  00313: cmp    esi,0x6
  00316: jge    0x337
  0031c: xor    rax,rax
  0031f: mov    ax,WORD PTR [rdi+0x2]
  00323: cmp    rax,0x3
  00327: jne    0x337
  0032d: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00332: jmp    0x35a
  00337: sub    rsp,0x10
  0033b: movq   QWORD PTR [rsp],xmm4
  00340: movabs rax,0x5594d4e95d70
  0034a: call   rax
  0034c: movq   xmm4,QWORD PTR [rsp]
  00351: add    rsp,0x10
  00355: jmp    0x35a
  0035a: mov    QWORD PTR [rbp-0x98],rax
:00071 %9 = %14 - %15                       [Float][Float]
  00361: mov    rdi,QWORD PTR [rbp-0x90]
  00368: test   rdi,0x1
  0036f: jne    0x3da37
  00375: test   rdi,0x2
  0037c: je     0x3b8
  00382: xorps  xmm2,xmm2
  00385: movabs rax,0x8000000000000002
  0038f: cmp    rdi,rax
  00392: je     0x3ca
  00398: mov    rax,rdi
  0039b: sar    rax,0x3f
  0039f: add    rax,0x2
  003a3: and    rdi,0xfffffffffffffffc
  003a7: or     rdi,rax
  003aa: rol    rdi,0x3d
  003ae: movq   xmm2,rdi
  003b3: jmp    0x3ca
  003b8: call   0xffffc837
  003bd: test   rax,rax
  003c0: je     0x3da37
  003c6: movq   xmm2,xmm0
  003ca: mov    rdi,QWORD PTR [rbp-0x98]
  003d1: test   rdi,0x1
  003d8: jne    0x3da53
  003de: test   rdi,0x2
  003e5: je     0x421
  003eb: xorps  xmm3,xmm3
  003ee: movabs rax,0x8000000000000002
  003f8: cmp    rdi,rax
  003fb: je     0x433
  00401: mov    rax,rdi
  00404: sar    rax,0x3f
  00408: add    rax,0x2
  0040c: and    rdi,0xfffffffffffffffc
  00410: or     rdi,rax
  00413: rol    rdi,0x3d
  00417: movq   xmm3,rdi
  0041c: jmp    0x433
  00421: call   0xffffc837
  00426: test   rax,rax
  00429: je     0x3da53
  0042f: movq   xmm3,xmm0
  00433: movq   xmm5,xmm2
  00437: subsd  xmm5,xmm3
:00072 %15 = %5
  0043b: mov    rax,QWORD PTR [rbp-0x48]
  0043f: mov    QWORD PTR [rbp-0x98],rax
:00073 %14 = %15.call z()                   [Planet]
:00074 
  00446: mov    rdi,QWORD PTR [rbp-0x98]
  0044d: test   rdi,0x7
  00454: jne    0x3da6f
  0045a: cmp    DWORD PTR [rdi+0x4],0x25
  0045e: jne    0x3da6f
  00464: cmp    DWORD PTR [rip+0xffffffffffffeb6c],0x12        # 0xffffefd7
  0046b: jne    0x3da6f
  00471: mov    esi,DWORD PTR [rip+0x5fd]        # 0xa74
  00477: cmp    esi,0xffffffff
  0047a: je     0x3da98
  00480: cmp    esi,0x6
  00483: jge    0x4a4
  00489: xor    rax,rax
  0048c: mov    ax,WORD PTR [rdi+0x2]
  00490: cmp    rax,0x3
  00494: jne    0x4a4
  0049a: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0049f: jmp    0x4d3
  004a4: sub    rsp,0x10
  004a8: movq   QWORD PTR [rsp],xmm4
  004ad: movq   QWORD PTR [rsp+0x8],xmm5
  004b3: movabs rax,0x5594d4e95d70
  004bd: call   rax
  004bf: movq   xmm4,QWORD PTR [rsp]
  004c4: movq   xmm5,QWORD PTR [rsp+0x8]
  004ca: add    rsp,0x10
  004ce: jmp    0x4d3
  004d3: mov    QWORD PTR [rbp-0x90],rax
:00076 %16 = %7
  004da: mov    rax,QWORD PTR [rbp-0x58]
  004de: mov    QWORD PTR [rbp-0xa0],rax
:00077 %15 = %16.call z()                   [Planet]
:00078 
  004e5: mov    rdi,QWORD PTR [rbp-0xa0]
  004ec: test   rdi,0x7
  004f3: jne    0x3dadf
  004f9: cmp    DWORD PTR [rdi+0x4],0x25
  004fd: jne    0x3dadf
  00503: cmp    DWORD PTR [rip+0xffffffffffffeacd],0x12        # 0xffffefd7
  0050a: jne    0x3dadf
  00510: mov    esi,DWORD PTR [rip+0x566]        # 0xa7c
  00516: cmp    esi,0xffffffff
  00519: je     0x3db08
  0051f: cmp    esi,0x6
  00522: jge    0x543
  00528: xor    rax,rax
  0052b: mov    ax,WORD PTR [rdi+0x2]
  0052f: cmp    rax,0x3
  00533: jne    0x543
  00539: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0053e: jmp    0x572
  00543: sub    rsp,0x10
  00547: movq   QWORD PTR [rsp],xmm4
  0054c: movq   QWORD PTR [rsp+0x8],xmm5
  00552: movabs rax,0x5594d4e95d70
  0055c: call   rax
  0055e: movq   xmm4,QWORD PTR [rsp]
  00563: movq   xmm5,QWORD PTR [rsp+0x8]
  00569: add    rsp,0x10
  0056d: jmp    0x572
  00572: mov    QWORD PTR [rbp-0x98],rax
:00080 %10 = %14 - %15                      [Float][Float]
  00579: mov    rdi,QWORD PTR [rbp-0x90]
  00580: test   rdi,0x1
  00587: jne    0x3db4f
  0058d: test   rdi,0x2
  00594: je     0x5d0
  0059a: xorps  xmm2,xmm2
  0059d: movabs rax,0x8000000000000002
  005a7: cmp    rdi,rax
  005aa: je     0x5e2
  005b0: mov    rax,rdi
  005b3: sar    rax,0x3f
  005b7: add    rax,0x2
  005bb: and    rdi,0xfffffffffffffffc
  005bf: or     rdi,rax
  005c2: rol    rdi,0x3d
  005c6: movq   xmm2,rdi
  005cb: jmp    0x5e2
  005d0: call   0xffffc837
  005d5: test   rax,rax
  005d8: je     0x3db4f
  005de: movq   xmm2,xmm0
  005e2: mov    rdi,QWORD PTR [rbp-0x98]
  005e9: test   rdi,0x1
  005f0: jne    0x3db78
  005f6: test   rdi,0x2
  005fd: je     0x639
  00603: xorps  xmm3,xmm3
  00606: movabs rax,0x8000000000000002
  00610: cmp    rdi,rax
  00613: je     0x64b
  00619: mov    rax,rdi
  0061c: sar    rax,0x3f
  00620: add    rax,0x2
  00624: and    rdi,0xfffffffffffffffc
  00628: or     rdi,rax
  0062b: rol    rdi,0x3d
  0062f: movq   xmm3,rdi
  00634: jmp    0x64b
  00639: call   0xffffc837
  0063e: test   rax,rax
  00641: je     0x3db78
  00647: movq   xmm3,xmm0
  0064b: movq   xmm6,xmm2
  0064f: subsd  xmm6,xmm3
:00081 %14 = const[Math]                    [Math]
  00653: mov    rax,QWORD PTR [rip+0xffffffffffffe989]        # 0xffffefe3
  0065a: cmp    rax,QWORD PTR [rip+0x432]        # 0xa93
  00661: jne    0x3dba1
  00667: mov    rax,QWORD PTR [rip+0x415]        # 0xa83
  0066e: mov    QWORD PTR [rbp-0x90],rax
:00082 %15 = %8 * %8                        [Float][Float]
  00675: movq   xmm2,xmm4
  00679: mulsd  xmm2,xmm4
:00083 %16 = %9 * %9                        [Float][Float]
  0067d: movq   xmm3,xmm5
  00681: mulsd  xmm3,xmm5
:00084 %15 = %15 + %16                      [Float][Float]
  00685: addsd  xmm2,xmm3
:00085 %16 = %10 * %10                      [Float][Float]
  00689: movq   xmm3,xmm6
  0068d: mulsd  xmm3,xmm6
:00086 %15 = %15 + %16                      [Float][Float]
  00691: addsd  xmm2,xmm3
:00087 %11 = %14.call sqrt(%15; 1)          [#<Class:Math>]
:00088 
  00695: movq   xmm0,xmm2
  00699: call   0xffffca6e
  0069e: mov    QWORD PTR [rbp-0x98],rax
  006a5: mov    rdi,QWORD PTR [rbp-0x90]
  006ac: test   rdi,0x7
  006b3: jne    0x3dc1d
  006b9: cmp    DWORD PTR [rdi+0x4],0x20
  006bd: jne    0x3dc1d
  006c3: cmp    DWORD PTR [rip+0xffffffffffffe90d],0x12        # 0xffffefd7
  006ca: jne    0x3dc1d
  006d0: mov    r9,0x0
  006d7: mov    rdx,rdi
  006da: mov    rdi,rbx
  006dd: mov    rsi,r12
  006e0: lea    rcx,[rbp-0x98]
  006e7: mov    r8,0x1
  006ee: call   0x3dc63
  006f3: movabs r13,0x5594d52c8fd0
  006fd: test   rax,rax
  00700: je     0xffffc7fe
  00706: mov    QWORD PTR [rbp-0x78],rax
:00090 %15 = %5
  0070a: mov    rax,QWORD PTR [rbp-0x48]
  0070e: mov    QWORD PTR [rbp-0x98],rax
:00091 %14 = %15.call mass()                [Planet]
:00092 
  00715: mov    rdi,QWORD PTR [rbp-0x98]
  0071c: test   rdi,0x7
  00723: jne    0x3dcd5
  00729: cmp    DWORD PTR [rdi+0x4],0x25
  0072d: jne    0x3dcd5
  00733: cmp    DWORD PTR [rip+0xffffffffffffe89d],0x12        # 0xffffefd7
  0073a: jne    0x3dcd5
  00740: mov    esi,DWORD PTR [rip+0x359]        # 0xa9f
  00746: cmp    esi,0xffffffff
  00749: je     0x3dd1b
  0074f: cmp    esi,0x6
  00752: jge    0x773
  00758: xor    rax,rax
  0075b: mov    ax,WORD PTR [rdi+0x2]
  0075f: cmp    rax,0x3
  00763: jne    0x773
  00769: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0076e: jmp    0x7ba
  00773: sub    rsp,0x20
  00777: movq   QWORD PTR [rsp],xmm3
  0077c: movq   QWORD PTR [rsp+0x8],xmm4
  00782: movq   QWORD PTR [rsp+0x10],xmm5
  00788: movq   QWORD PTR [rsp+0x18],xmm6
  0078e: movabs rax,0x5594d4e95d70
  00798: call   rax
  0079a: movq   xmm3,QWORD PTR [rsp]
  0079f: movq   xmm4,QWORD PTR [rsp+0x8]
  007a5: movq   xmm5,QWORD PTR [rsp+0x10]
  007ab: movq   xmm6,QWORD PTR [rsp+0x18]
  007b1: add    rsp,0x20
  007b5: jmp    0x7ba
  007ba: mov    QWORD PTR [rbp-0x90],rax
:00094 %16 = %7
  007c1: mov    rax,QWORD PTR [rbp-0x58]
  007c5: mov    QWORD PTR [rbp-0xa0],rax
:00095 %15 = %16.call mass()                [Planet]
:00096 
  007cc: mov    rdi,QWORD PTR [rbp-0xa0]
  007d3: test   rdi,0x7
  007da: jne    0x3dd7a
  007e0: cmp    DWORD PTR [rdi+0x4],0x25
  007e4: jne    0x3dd7a
  007ea: cmp    DWORD PTR [rip+0xffffffffffffe7e6],0x12        # 0xffffefd7
  007f1: jne    0x3dd7a
  007f7: mov    esi,DWORD PTR [rip+0x2aa]        # 0xaa7
  007fd: cmp    esi,0xffffffff
  00800: je     0x3ddb0
  00806: cmp    esi,0x6
  00809: jge    0x82a
  0080f: xor    rax,rax
  00812: mov    ax,WORD PTR [rdi+0x2]
  00816: cmp    rax,0x3
  0081a: jne    0x82a
  00820: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00825: jmp    0x865
  0082a: sub    rsp,0x20
  0082e: movq   QWORD PTR [rsp],xmm4
  00833: movq   QWORD PTR [rsp+0x8],xmm5
  00839: movq   QWORD PTR [rsp+0x10],xmm6
  0083f: movabs rax,0x5594d4e95d70
  00849: call   rax
  0084b: movq   xmm4,QWORD PTR [rsp]
  00850: movq   xmm5,QWORD PTR [rsp+0x8]
  00856: movq   xmm6,QWORD PTR [rsp+0x10]
  0085c: add    rsp,0x20
  00860: jmp    0x865
  00865: mov    QWORD PTR [rbp-0x98],rax
:00098 %14 = %14 * %15                      [Float][Float]
  0086c: mov    rdi,QWORD PTR [rbp-0x90]
  00873: test   rdi,0x1
  0087a: jne    0x3de03
  00880: test   rdi,0x2
  00887: je     0x8c3
  0088d: xorps  xmm2,xmm2
  00890: movabs rax,0x8000000000000002
  0089a: cmp    rdi,rax
  0089d: je     0x8d5
  008a3: mov    rax,rdi
  008a6: sar    rax,0x3f
  008aa: add    rax,0x2
  008ae: and    rdi,0xfffffffffffffffc
  008b2: or     rdi,rax
  008b5: rol    rdi,0x3d
  008b9: movq   xmm2,rdi
  008be: jmp    0x8d5
  008c3: call   0xffffc837
  008c8: test   rax,rax
  008cb: je     0x3de03
  008d1: movq   xmm2,xmm0
  008d5: mov    rdi,QWORD PTR [rbp-0x98]
  008dc: test   rdi,0x1
  008e3: jne    0x3de39
  008e9: test   rdi,0x2
  008f0: je     0x92c
  008f6: xorps  xmm3,xmm3
  008f9: movabs rax,0x8000000000000002
  00903: cmp    rdi,rax
  00906: je     0x93e
  0090c: mov    rax,rdi
  0090f: sar    rax,0x3f
  00913: add    rax,0x2
  00917: and    rdi,0xfffffffffffffffc
  0091b: or     rdi,rax
  0091e: rol    rdi,0x3d
  00922: movq   xmm3,rdi
  00927: jmp    0x93e
  0092c: call   0xffffc837
  00931: test   rax,rax
  00934: je     0x3de39
  0093a: movq   xmm3,xmm0
  0093e: mulsd  xmm2,xmm3
:00099 %14 = %14 / %11                      [Float][Float]
  00942: mov    rdi,QWORD PTR [rbp-0x78]
  00946: test   rdi,0x1
  0094d: jne    0x3de6f
  00953: test   rdi,0x2
  0095a: je     0x996
  00960: xorps  xmm7,xmm7
  00963: movabs rax,0x8000000000000002
  0096d: cmp    rdi,rax
  00970: je     0x9a8
  00976: mov    rax,rdi
  00979: sar    rax,0x3f
  0097d: add    rax,0x2
  00981: and    rdi,0xfffffffffffffffc
  00985: or     rdi,rax
  00988: rol    rdi,0x3d
  0098c: movq   xmm7,rdi
  00991: jmp    0x9a8
  00996: call   0xffffc837
  0099b: test   rax,rax
  0099e: je     0x3de6f
  009a4: movq   xmm7,xmm0
  009a8: movq   rax,xmm7
  009ad: test   rax,rax
  009b0: je     0xffffc823
  009b6: divsd  xmm2,xmm7
:00100 %2 = %2 - %14                        [Float][Float]
  009ba: mov    rdi,QWORD PTR [rbp-0x30]
  009be: test   rdi,0x1
  009c5: jne    0x3deb5
  009cb: test   rdi,0x2
  009d2: je     0xa0f
  009d8: xorps  xmm8,xmm8
  009dc: movabs rax,0x8000000000000002
  009e6: cmp    rdi,rax
  009e9: je     0xa22
  009ef: mov    rax,rdi
  009f2: sar    rax,0x3f
  009f6: add    rax,0x2
  009fa: and    rdi,0xfffffffffffffffc
  009fe: or     rdi,rax
  00a01: rol    rdi,0x3d
  00a05: movq   xmm8,rdi
  00a0a: jmp    0xa22
  00a0f: call   0xffffc837
  00a14: test   rax,rax
  00a17: je     0x3deb5
  00a1d: movq   xmm8,xmm0
  00a22: subsd  xmm8,xmm2
:00101 %6 = %6 + 1: i16                     [Integer][Integer]
  00a27: mov    rdi,QWORD PTR [rbp-0x50]
  00a2b: test   rdi,0x1
  00a32: je     0x3defb
  00a38: add    rdi,0x2
  00a3c: jo     0x3defb
  00a42: mov    QWORD PTR [rbp-0x50],rdi
:00102 br =>:00050
  00a46: jmp    0x3df5e
:00103 loop_end
  00a4b: jmp    0x3df4f
    finished compile. elapsed:91.3Âµs
--> start partial compile: energy FuncId(42) start:[00007] bytecode:0x5594d52c8a40
<-- compile finished. end:[00106]
offset:Pos(17128) code: 4793 bytes  data: 167 bytes
:00007 loop_start counter=5 jit-addr=0000000000000000
:00008 _%13 = %4 >= %12                     [Integer][Integer]
:00009 condbr _%13 =>:00106
  00000:    	mov    rdi,QWORD PTR [rbp-0x40]
  00004:    	mov    rsi,QWORD PTR [rbp-0x80]
  00008: 00 	test   rdi,0x1
  0000f:    	je     0x3d51a
  00015: 00 	test   rsi,0x1
  0001c:    	je     0x3d51a
  00022:    	cmp    rdi,rsi
  00025:    	jge    0x12b4
:00010 %5 = %1.[%4]
  0002b:    	mov    rdx,QWORD PTR [rbp-0x28]
  0002f:    	mov    rcx,QWORD PTR [rbp-0x40]
  00033:    	mov    rdi,rbx
  00036:    	mov    rsi,r12
  00039: 94 	movabs rax,0x5594d4eeecb0
  00043:    	call   rax
  00045: 94 	movabs r13,0x5594d52c8af0
  0004f:    	test   rax,rax
  00052:    	je     0xffffbd53
  00058:    	mov    QWORD PTR [rbp-0x48],rax
:00011 %13 = literal[0.5]
  0005c: 00 	movq   xmm2,QWORD PTR [rip+0x1264]        # 0x12c8
:00012 %15 = %5
  00064:    	mov    rax,QWORD PTR [rbp-0x48]
  00068: ff 	mov    QWORD PTR [rbp-0x98],rax
:00013 %14 = %15.call mass()                [Planet]
:00014 
  0006f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00076: 00 	test   rdi,0x7
  0007d:    	jne    0x3d539
  00083:    	cmp    DWORD PTR [rdi+0x4],0x25
  00087:    	jne    0x3d539
  0008d: 12 	cmp    DWORD PTR [rip+0xffffffffffffe498],0x12        # 0xffffe52c
  00094:    	jne    0x3d539
  0009a:    	mov    esi,DWORD PTR [rip+0x1234]        # 0x12d4
  000a0:    	cmp    esi,0xffffffff
  000a3:    	je     0x3d558
  000a9:    	cmp    esi,0x6
  000ac:    	jge    0xcd
  000b2:    	xor    rax,rax
  000b5:    	mov    ax,WORD PTR [rdi+0x2]
  000b9:    	cmp    rax,0x3
  000bd:    	jne    0xcd
  000c3:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c8:    	jmp    0xf0
  000cd:    	sub    rsp,0x10
  000d1:    	movq   QWORD PTR [rsp],xmm2
  000d6: 94 	movabs rax,0x5594d4e95d70
  000e0:    	call   rax
  000e2:    	movq   xmm2,QWORD PTR [rsp]
  000e7:    	add    rsp,0x10
  000eb:    	jmp    0xf0
  000f0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00016 %13 = %13 * %14                      [Float][Float]
  000f7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  000fe: 00 	test   rdi,0x1
  00105:    	jne    0x3d593
  0010b: 00 	test   rdi,0x2
  00112:    	je     0x14e
  00118:    	xorps  xmm3,xmm3
  0011b: 00 	movabs rax,0x8000000000000002
  00125:    	cmp    rdi,rax
  00128:    	je     0x160
  0012e:    	mov    rax,rdi
  00131:    	sar    rax,0x3f
  00135:    	add    rax,0x2
  00139:    	and    rdi,0xfffffffffffffffc
  0013d:    	or     rdi,rax
  00140:    	rol    rdi,0x3d
  00144:    	movq   xmm3,rdi
  00149:    	jmp    0x160
  0014e:    	call   0xffffbd8c
  00153:    	test   rax,rax
  00156:    	je     0x3d593
  0015c:    	movq   xmm3,xmm0
  00160:    	mulsd  xmm2,xmm3
:00017 %15 = %5
  00164:    	mov    rax,QWORD PTR [rbp-0x48]
  00168: ff 	mov    QWORD PTR [rbp-0x98],rax
:00018 %14 = %15.call vx()                  [Planet]
:00019 
  0016f: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00176: 00 	test   rdi,0x7
  0017d:    	jne    0x3d5b2
  00183:    	cmp    DWORD PTR [rdi+0x4],0x25
  00187:    	jne    0x3d5b2
  0018d: 12 	cmp    DWORD PTR [rip+0xffffffffffffe398],0x12        # 0xffffe52c
  00194:    	jne    0x3d5b2
  0019a:    	mov    esi,DWORD PTR [rip+0x113c]        # 0x12dc
  001a0:    	cmp    esi,0xffffffff
  001a3:    	je     0x3d5d1
  001a9:    	cmp    esi,0x6
  001ac:    	jge    0x1cd
  001b2:    	xor    rax,rax
  001b5:    	mov    ax,WORD PTR [rdi+0x2]
  001b9:    	cmp    rax,0x3
  001bd:    	jne    0x1cd
  001c3:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001c8:    	jmp    0x1f0
  001cd:    	sub    rsp,0x10
  001d1:    	movq   QWORD PTR [rsp],xmm2
  001d6: 94 	movabs rax,0x5594d4e95d70
  001e0:    	call   rax
  001e2:    	movq   xmm2,QWORD PTR [rsp]
  001e7:    	add    rsp,0x10
  001eb:    	jmp    0x1f0
  001f0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00021 %16 = %5
  001f7:    	mov    rax,QWORD PTR [rbp-0x48]
  001fb: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00022 %15 = %16.call vx()                  [Planet]
:00023 
  00202: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00209: 00 	test   rdi,0x7
  00210:    	jne    0x3d60c
  00216:    	cmp    DWORD PTR [rdi+0x4],0x25
  0021a:    	jne    0x3d60c
  00220: 12 	cmp    DWORD PTR [rip+0xffffffffffffe305],0x12        # 0xffffe52c
  00227:    	jne    0x3d60c
  0022d:    	mov    esi,DWORD PTR [rip+0x10b1]        # 0x12e4
  00233:    	cmp    esi,0xffffffff
  00236:    	je     0x3d62b
  0023c:    	cmp    esi,0x6
  0023f:    	jge    0x260
  00245:    	xor    rax,rax
  00248:    	mov    ax,WORD PTR [rdi+0x2]
  0024c:    	cmp    rax,0x3
  00250:    	jne    0x260
  00256:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0025b:    	jmp    0x283
  00260:    	sub    rsp,0x10
  00264:    	movq   QWORD PTR [rsp],xmm2
  00269: 94 	movabs rax,0x5594d4e95d70
  00273:    	call   rax
  00275:    	movq   xmm2,QWORD PTR [rsp]
  0027a:    	add    rsp,0x10
  0027e:    	jmp    0x283
  00283: ff 	mov    QWORD PTR [rbp-0x98],rax
:00025 %14 = %14 * %15                      [Float][Float]
  0028a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00291: 00 	test   rdi,0x1
  00298:    	jne    0x3d666
  0029e: 00 	test   rdi,0x2
  002a5:    	je     0x2e1
  002ab:    	xorps  xmm3,xmm3
  002ae: 00 	movabs rax,0x8000000000000002
  002b8:    	cmp    rdi,rax
  002bb:    	je     0x2f3
  002c1:    	mov    rax,rdi
  002c4:    	sar    rax,0x3f
  002c8:    	add    rax,0x2
  002cc:    	and    rdi,0xfffffffffffffffc
  002d0:    	or     rdi,rax
  002d3:    	rol    rdi,0x3d
  002d7:    	movq   xmm3,rdi
  002dc:    	jmp    0x2f3
  002e1:    	call   0xffffbd8c
  002e6:    	test   rax,rax
  002e9:    	je     0x3d666
  002ef:    	movq   xmm3,xmm0
  002f3: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  002fa: 00 	test   rdi,0x1
  00301:    	jne    0x3d685
  00307: 00 	test   rdi,0x2
  0030e:    	je     0x34a
  00314:    	xorps  xmm4,xmm4
  00317: 00 	movabs rax,0x8000000000000002
  00321:    	cmp    rdi,rax
  00324:    	je     0x35c
  0032a:    	mov    rax,rdi
  0032d:    	sar    rax,0x3f
  00331:    	add    rax,0x2
  00335:    	and    rdi,0xfffffffffffffffc
  00339:    	or     rdi,rax
  0033c:    	rol    rdi,0x3d
  00340:    	movq   xmm4,rdi
  00345:    	jmp    0x35c
  0034a:    	call   0xffffbd8c
  0034f:    	test   rax,rax
  00352:    	je     0x3d685
  00358:    	movq   xmm4,xmm0
  0035c:    	mulsd  xmm3,xmm4
:00026 %16 = %5
  00360:    	mov    rax,QWORD PTR [rbp-0x48]
  00364: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00027 %15 = %16.call vy()                  [Planet]
:00028 
  0036b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00372: 00 	test   rdi,0x7
  00379:    	jne    0x3d6a4
  0037f:    	cmp    DWORD PTR [rdi+0x4],0x25
  00383:    	jne    0x3d6a4
  00389: 12 	cmp    DWORD PTR [rip+0xffffffffffffe19c],0x12        # 0xffffe52c
  00390:    	jne    0x3d6a4
  00396:    	mov    esi,DWORD PTR [rip+0xf50]        # 0x12ec
  0039c:    	cmp    esi,0xffffffff
  0039f:    	je     0x3d6d3
  003a5:    	cmp    esi,0x6
  003a8:    	jge    0x3c9
  003ae:    	xor    rax,rax
  003b1:    	mov    ax,WORD PTR [rdi+0x2]
  003b5:    	cmp    rax,0x3
  003b9:    	jne    0x3c9
  003bf:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  003c4:    	jmp    0x3f8
  003c9:    	sub    rsp,0x10
  003cd:    	movq   QWORD PTR [rsp],xmm2
  003d2:    	movq   QWORD PTR [rsp+0x8],xmm3
  003d8: 94 	movabs rax,0x5594d4e95d70
  003e2:    	call   rax
  003e4:    	movq   xmm2,QWORD PTR [rsp]
  003e9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003ef:    	add    rsp,0x10
  003f3:    	jmp    0x3f8
  003f8: ff 	mov    QWORD PTR [rbp-0x98],rax
:00030 %17 = %5
  003ff:    	mov    rax,QWORD PTR [rbp-0x48]
  00403: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00031 %16 = %17.call vy()                  [Planet]
:00032 
  0040a: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  00411: 00 	test   rdi,0x7
  00418:    	jne    0x3d71a
  0041e:    	cmp    DWORD PTR [rdi+0x4],0x25
  00422:    	jne    0x3d71a
  00428: 12 	cmp    DWORD PTR [rip+0xffffffffffffe0fd],0x12        # 0xffffe52c
  0042f:    	jne    0x3d71a
  00435:    	mov    esi,DWORD PTR [rip+0xeb9]        # 0x12f4
  0043b:    	cmp    esi,0xffffffff
  0043e:    	je     0x3d749
  00444:    	cmp    esi,0x6
  00447:    	jge    0x468
  0044d:    	xor    rax,rax
  00450:    	mov    ax,WORD PTR [rdi+0x2]
  00454:    	cmp    rax,0x3
  00458:    	jne    0x468
  0045e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00463:    	jmp    0x497
  00468:    	sub    rsp,0x10
  0046c:    	movq   QWORD PTR [rsp],xmm2
  00471:    	movq   QWORD PTR [rsp+0x8],xmm3
  00477: 94 	movabs rax,0x5594d4e95d70
  00481:    	call   rax
  00483:    	movq   xmm2,QWORD PTR [rsp]
  00488:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0048e:    	add    rsp,0x10
  00492:    	jmp    0x497
  00497: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00034 %15 = %15 * %16                      [Float][Float]
  0049e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  004a5: 00 	test   rdi,0x1
  004ac:    	jne    0x3d790
  004b2: 00 	test   rdi,0x2
  004b9:    	je     0x4f5
  004bf:    	xorps  xmm4,xmm4
  004c2: 00 	movabs rax,0x8000000000000002
  004cc:    	cmp    rdi,rax
  004cf:    	je     0x507
  004d5:    	mov    rax,rdi
  004d8:    	sar    rax,0x3f
  004dc:    	add    rax,0x2
  004e0:    	and    rdi,0xfffffffffffffffc
  004e4:    	or     rdi,rax
  004e7:    	rol    rdi,0x3d
  004eb:    	movq   xmm4,rdi
  004f0:    	jmp    0x507
  004f5:    	call   0xffffbd8c
  004fa:    	test   rax,rax
  004fd:    	je     0x3d790
  00503:    	movq   xmm4,xmm0
  00507: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0050e: 00 	test   rdi,0x1
  00515:    	jne    0x3d7bf
  0051b: 00 	test   rdi,0x2
  00522:    	je     0x55e
  00528:    	xorps  xmm5,xmm5
  0052b: 00 	movabs rax,0x8000000000000002
  00535:    	cmp    rdi,rax
  00538:    	je     0x570
  0053e:    	mov    rax,rdi
  00541:    	sar    rax,0x3f
  00545:    	add    rax,0x2
  00549:    	and    rdi,0xfffffffffffffffc
  0054d:    	or     rdi,rax
  00550:    	rol    rdi,0x3d
  00554:    	movq   xmm5,rdi
  00559:    	jmp    0x570
  0055e:    	call   0xffffbd8c
  00563:    	test   rax,rax
  00566:    	je     0x3d7bf
  0056c:    	movq   xmm5,xmm0
  00570:    	mulsd  xmm4,xmm5
:00035 %14 = %14 + %15                      [Float][Float]
  00574:    	addsd  xmm3,xmm4
:00036 %16 = %5
  00578:    	mov    rax,QWORD PTR [rbp-0x48]
  0057c: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00037 %15 = %16.call vz()                  [Planet]
:00038 
  00583: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  0058a: 00 	test   rdi,0x7
  00591:    	jne    0x3d7ee
  00597:    	cmp    DWORD PTR [rdi+0x4],0x25
  0059b:    	jne    0x3d7ee
  005a1: 12 	cmp    DWORD PTR [rip+0xffffffffffffdf84],0x12        # 0xffffe52c
  005a8:    	jne    0x3d7ee
  005ae:    	mov    esi,DWORD PTR [rip+0xd48]        # 0x12fc
  005b4:    	cmp    esi,0xffffffff
  005b7:    	je     0x3d81d
  005bd:    	cmp    esi,0x6
  005c0:    	jge    0x5e1
  005c6:    	xor    rax,rax
  005c9:    	mov    ax,WORD PTR [rdi+0x2]
  005cd:    	cmp    rax,0x3
  005d1:    	jne    0x5e1
  005d7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005dc:    	jmp    0x610
  005e1:    	sub    rsp,0x10
  005e5:    	movq   QWORD PTR [rsp],xmm2
  005ea:    	movq   QWORD PTR [rsp+0x8],xmm3
  005f0: 94 	movabs rax,0x5594d4e95d70
  005fa:    	call   rax
  005fc:    	movq   xmm2,QWORD PTR [rsp]
  00601:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00607:    	add    rsp,0x10
  0060b:    	jmp    0x610
  00610: ff 	mov    QWORD PTR [rbp-0x98],rax
:00040 %17 = %5
  00617:    	mov    rax,QWORD PTR [rbp-0x48]
  0061b: ff 	mov    QWORD PTR [rbp-0xa8],rax
:00041 %16 = %17.call vz()                  [Planet]
:00042 
  00622: ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  00629: 00 	test   rdi,0x7
  00630:    	jne    0x3d864
  00636:    	cmp    DWORD PTR [rdi+0x4],0x25
  0063a:    	jne    0x3d864
  00640: 12 	cmp    DWORD PTR [rip+0xffffffffffffdee5],0x12        # 0xffffe52c
  00647:    	jne    0x3d864
  0064d:    	mov    esi,DWORD PTR [rip+0xcb1]        # 0x1304
  00653:    	cmp    esi,0xffffffff
  00656:    	je     0x3d893
  0065c:    	cmp    esi,0x6
  0065f:    	jge    0x680
  00665:    	xor    rax,rax
  00668:    	mov    ax,WORD PTR [rdi+0x2]
  0066c:    	cmp    rax,0x3
  00670:    	jne    0x680
  00676:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0067b:    	jmp    0x6af
  00680:    	sub    rsp,0x10
  00684:    	movq   QWORD PTR [rsp],xmm2
  00689:    	movq   QWORD PTR [rsp+0x8],xmm3
  0068f: 94 	movabs rax,0x5594d4e95d70
  00699:    	call   rax
  0069b:    	movq   xmm2,QWORD PTR [rsp]
  006a0:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006a6:    	add    rsp,0x10
  006aa:    	jmp    0x6af
  006af: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00044 %15 = %15 * %16                      [Float][Float]
  006b6: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  006bd: 00 	test   rdi,0x1
  006c4:    	jne    0x3d8da
  006ca: 00 	test   rdi,0x2
  006d1:    	je     0x70d
  006d7:    	xorps  xmm4,xmm4
  006da: 00 	movabs rax,0x8000000000000002
  006e4:    	cmp    rdi,rax
  006e7:    	je     0x71f
  006ed:    	mov    rax,rdi
  006f0:    	sar    rax,0x3f
  006f4:    	add    rax,0x2
  006f8:    	and    rdi,0xfffffffffffffffc
  006fc:    	or     rdi,rax
  006ff:    	rol    rdi,0x3d
  00703:    	movq   xmm4,rdi
  00708:    	jmp    0x71f
  0070d:    	call   0xffffbd8c
  00712:    	test   rax,rax
  00715:    	je     0x3d8da
  0071b:    	movq   xmm4,xmm0
  0071f: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00726: 00 	test   rdi,0x1
  0072d:    	jne    0x3d909
  00733: 00 	test   rdi,0x2
  0073a:    	je     0x776
  00740:    	xorps  xmm5,xmm5
  00743: 00 	movabs rax,0x8000000000000002
  0074d:    	cmp    rdi,rax
  00750:    	je     0x788
  00756:    	mov    rax,rdi
  00759:    	sar    rax,0x3f
  0075d:    	add    rax,0x2
  00761:    	and    rdi,0xfffffffffffffffc
  00765:    	or     rdi,rax
  00768:    	rol    rdi,0x3d
  0076c:    	movq   xmm5,rdi
  00771:    	jmp    0x788
  00776:    	call   0xffffbd8c
  0077b:    	test   rax,rax
  0077e:    	je     0x3d909
  00784:    	movq   xmm5,xmm0
  00788:    	mulsd  xmm4,xmm5
:00045 %14 = %14 + %15                      [Float][Float]
  0078c:    	addsd  xmm3,xmm4
:00046 %13 = %13 * %14                      [Float][Float]
  00790:    	mulsd  xmm2,xmm3
:00047 %2 = %2 + %13                        [Float][Float]
  00794:    	mov    rdi,QWORD PTR [rbp-0x30]
  00798: 00 	test   rdi,0x1
  0079f:    	jne    0x3d938
  007a5: 00 	test   rdi,0x2
  007ac:    	je     0x7e8
  007b2:    	xorps  xmm6,xmm6
  007b5: 00 	movabs rax,0x8000000000000002
  007bf:    	cmp    rdi,rax
  007c2:    	je     0x7fa
  007c8:    	mov    rax,rdi
  007cb:    	sar    rax,0x3f
  007cf:    	add    rax,0x2
  007d3:    	and    rdi,0xfffffffffffffffc
  007d7:    	or     rdi,rax
  007da:    	rol    rdi,0x3d
  007de:    	movq   xmm6,rdi
  007e3:    	jmp    0x7fa
  007e8:    	call   0xffffbd8c
  007ed:    	test   rax,rax
  007f0:    	je     0x3d938
  007f6:    	movq   xmm6,xmm0
  007fa:    	addsd  xmm6,xmm2
:00048 %6 = %4 + 1: i16                     [Integer][Integer]
  007fe:    	mov    rdi,QWORD PTR [rbp-0x40]
  00802: 00 	test   rdi,0x1
  00809:    	je     0x3d977
  0080f:    	add    rdi,0x2
  00813:    	jo     0x3d977
  00819:    	mov    QWORD PTR [rbp-0x50],rdi
:00049 %13 = %3
  0081d:    	mov    rax,QWORD PTR [rbp-0x38]
  00821: ff 	mov    QWORD PTR [rbp-0x88],rax
  00828:    	jmp    0x3d9c3
:00050 loop_start counter=5 jit-addr=00007f5507e0383d
:00051 _%14 = %6 >= %13                     [Integer][Integer]
:00052 condbr _%14 =>:00103
  0082d:    	mov    rdi,QWORD PTR [rbp-0x50]
  00831: ff 	mov    rsi,QWORD PTR [rbp-0x88]
  00838: 00 	test   rdi,0x1
  0083f:    	je     0x3d9fd
  00845: 00 	test   rsi,0x1
  0084c:    	je     0x3d9fd
  00852:    	cmp    rdi,rsi
  00855:    	jge    0x1290
:00053 %7 = %1.[%6]
  0085b:    	sub    rsp,0x10
  0085f:    	movq   QWORD PTR [rsp],xmm2
  00864:    	mov    rdx,QWORD PTR [rbp-0x28]
  00868:    	mov    rcx,QWORD PTR [rbp-0x50]
  0086c:    	mov    rdi,rbx
  0086f:    	mov    rsi,r12
  00872: 94 	movabs rax,0x5594d4eeecb0
  0087c:    	call   rax
  0087e:    	movq   xmm2,QWORD PTR [rsp]
  00883:    	add    rsp,0x10
  00887: 94 	movabs r13,0x5594d52c8da0
  00891:    	test   rax,rax
  00894:    	je     0xffffbd53
  0089a:    	mov    QWORD PTR [rbp-0x58],rax
:00054 %15 = %5
  0089e:    	mov    rax,QWORD PTR [rbp-0x48]
  008a2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00055 %14 = %15.call x()                   [Planet]
:00056 
  008a9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  008b0: 00 	test   rdi,0x7
  008b7:    	jne    0x3da2e
  008bd:    	cmp    DWORD PTR [rdi+0x4],0x25
  008c1:    	jne    0x3da2e
  008c7: 12 	cmp    DWORD PTR [rip+0xffffffffffffdc5e],0x12        # 0xffffe52c
  008ce:    	jne    0x3da2e
  008d4:    	mov    esi,DWORD PTR [rip+0xa32]        # 0x130c
  008da:    	cmp    esi,0xffffffff
  008dd:    	je     0x3da4a
  008e3:    	cmp    esi,0x6
  008e6:    	jge    0x907
  008ec:    	xor    rax,rax
  008ef:    	mov    ax,WORD PTR [rdi+0x2]
  008f3:    	cmp    rax,0x3
  008f7:    	jne    0x907
  008fd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00902:    	jmp    0x92a
  00907:    	sub    rsp,0x10
  0090b:    	movq   QWORD PTR [rsp],xmm2
  00910: 94 	movabs rax,0x5594d4e95d70
  0091a:    	call   rax
  0091c:    	movq   xmm2,QWORD PTR [rsp]
  00921:    	add    rsp,0x10
  00925:    	jmp    0x92a
  0092a: ff 	mov    QWORD PTR [rbp-0x90],rax
:00058 %16 = %7
  00931:    	mov    rax,QWORD PTR [rbp-0x58]
  00935: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00059 %15 = %16.call x()                   [Planet]
:00060 
  0093c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00943: 00 	test   rdi,0x7
  0094a:    	jne    0x3da85
  00950:    	cmp    DWORD PTR [rdi+0x4],0x25
  00954:    	jne    0x3da85
  0095a: 12 	cmp    DWORD PTR [rip+0xffffffffffffdbcb],0x12        # 0xffffe52c
  00961:    	jne    0x3da85
  00967:    	mov    esi,DWORD PTR [rip+0x9a7]        # 0x1314
  0096d:    	cmp    esi,0xffffffff
  00970:    	je     0x3daa1
  00976:    	cmp    esi,0x6
  00979:    	jge    0x99a
  0097f:    	xor    rax,rax
  00982:    	mov    ax,WORD PTR [rdi+0x2]
  00986:    	cmp    rax,0x3
  0098a:    	jne    0x99a
  00990:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00995:    	jmp    0x9bd
  0099a:    	sub    rsp,0x10
  0099e:    	movq   QWORD PTR [rsp],xmm2
  009a3: 94 	movabs rax,0x5594d4e95d70
  009ad:    	call   rax
  009af:    	movq   xmm2,QWORD PTR [rsp]
  009b4:    	add    rsp,0x10
  009b8:    	jmp    0x9bd
  009bd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00062 %8 = %14 - %15                       [Float][Float]
  009c4: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  009cb: 00 	test   rdi,0x1
  009d2:    	jne    0x3dadc
  009d8: 00 	test   rdi,0x2
  009df:    	je     0xa1b
  009e5:    	xorps  xmm3,xmm3
  009e8: 00 	movabs rax,0x8000000000000002
  009f2:    	cmp    rdi,rax
  009f5:    	je     0xa2d
  009fb:    	mov    rax,rdi
  009fe:    	sar    rax,0x3f
  00a02:    	add    rax,0x2
  00a06:    	and    rdi,0xfffffffffffffffc
  00a0a:    	or     rdi,rax
  00a0d:    	rol    rdi,0x3d
  00a11:    	movq   xmm3,rdi
  00a16:    	jmp    0xa2d
  00a1b:    	call   0xffffbd8c
  00a20:    	test   rax,rax
  00a23:    	je     0x3dadc
  00a29:    	movq   xmm3,xmm0
  00a2d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00a34: 00 	test   rdi,0x1
  00a3b:    	jne    0x3daf8
  00a41: 00 	test   rdi,0x2
  00a48:    	je     0xa84
  00a4e:    	xorps  xmm4,xmm4
  00a51: 00 	movabs rax,0x8000000000000002
  00a5b:    	cmp    rdi,rax
  00a5e:    	je     0xa96
  00a64:    	mov    rax,rdi
  00a67:    	sar    rax,0x3f
  00a6b:    	add    rax,0x2
  00a6f:    	and    rdi,0xfffffffffffffffc
  00a73:    	or     rdi,rax
  00a76:    	rol    rdi,0x3d
  00a7a:    	movq   xmm4,rdi
  00a7f:    	jmp    0xa96
  00a84:    	call   0xffffbd8c
  00a89:    	test   rax,rax
  00a8c:    	je     0x3daf8
  00a92:    	movq   xmm4,xmm0
  00a96:    	movq   xmm5,xmm3
  00a9a:    	subsd  xmm5,xmm4
:00063 %15 = %5
  00a9e:    	mov    rax,QWORD PTR [rbp-0x48]
  00aa2: ff 	mov    QWORD PTR [rbp-0x98],rax
:00064 %14 = %15.call y()                   [Planet]
:00065 
  00aa9: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00ab0: 00 	test   rdi,0x7
  00ab7:    	jne    0x3db14
  00abd:    	cmp    DWORD PTR [rdi+0x4],0x25
  00ac1:    	jne    0x3db14
  00ac7: 12 	cmp    DWORD PTR [rip+0xffffffffffffda5e],0x12        # 0xffffe52c
  00ace:    	jne    0x3db14
  00ad4:    	mov    esi,DWORD PTR [rip+0x842]        # 0x131c
  00ada:    	cmp    esi,0xffffffff
  00add:    	je     0x3db3d
  00ae3:    	cmp    esi,0x6
  00ae6:    	jge    0xb07
  00aec:    	xor    rax,rax
  00aef:    	mov    ax,WORD PTR [rdi+0x2]
  00af3:    	cmp    rax,0x3
  00af7:    	jne    0xb07
  00afd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b02:    	jmp    0xb36
  00b07:    	sub    rsp,0x10
  00b0b:    	movq   QWORD PTR [rsp],xmm2
  00b10:    	movq   QWORD PTR [rsp+0x8],xmm5
  00b16: 94 	movabs rax,0x5594d4e95d70
  00b20:    	call   rax
  00b22:    	movq   xmm2,QWORD PTR [rsp]
  00b27:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b2d:    	add    rsp,0x10
  00b31:    	jmp    0xb36
  00b36: ff 	mov    QWORD PTR [rbp-0x90],rax
:00067 %16 = %7
  00b3d:    	mov    rax,QWORD PTR [rbp-0x58]
  00b41: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00068 %15 = %16.call y()                   [Planet]
:00069 
  00b48: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00b4f: 00 	test   rdi,0x7
  00b56:    	jne    0x3db84
  00b5c:    	cmp    DWORD PTR [rdi+0x4],0x25
  00b60:    	jne    0x3db84
  00b66: 12 	cmp    DWORD PTR [rip+0xffffffffffffd9bf],0x12        # 0xffffe52c
  00b6d:    	jne    0x3db84
  00b73:    	mov    esi,DWORD PTR [rip+0x7ab]        # 0x1324
  00b79:    	cmp    esi,0xffffffff
  00b7c:    	je     0x3dbad
  00b82:    	cmp    esi,0x6
  00b85:    	jge    0xba6
  00b8b:    	xor    rax,rax
  00b8e:    	mov    ax,WORD PTR [rdi+0x2]
  00b92:    	cmp    rax,0x3
  00b96:    	jne    0xba6
  00b9c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ba1:    	jmp    0xbd5
  00ba6:    	sub    rsp,0x10
  00baa:    	movq   QWORD PTR [rsp],xmm2
  00baf:    	movq   QWORD PTR [rsp+0x8],xmm5
  00bb5: 94 	movabs rax,0x5594d4e95d70
  00bbf:    	call   rax
  00bc1:    	movq   xmm2,QWORD PTR [rsp]
  00bc6:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00bcc:    	add    rsp,0x10
  00bd0:    	jmp    0xbd5
  00bd5: ff 	mov    QWORD PTR [rbp-0x98],rax
:00071 %9 = %14 - %15                       [Float][Float]
  00bdc: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00be3: 00 	test   rdi,0x1
  00bea:    	jne    0x3dbf4
  00bf0: 00 	test   rdi,0x2
  00bf7:    	je     0xc33
  00bfd:    	xorps  xmm3,xmm3
  00c00: 00 	movabs rax,0x8000000000000002
  00c0a:    	cmp    rdi,rax
  00c0d:    	je     0xc45
  00c13:    	mov    rax,rdi
  00c16:    	sar    rax,0x3f
  00c1a:    	add    rax,0x2
  00c1e:    	and    rdi,0xfffffffffffffffc
  00c22:    	or     rdi,rax
  00c25:    	rol    rdi,0x3d
  00c29:    	movq   xmm3,rdi
  00c2e:    	jmp    0xc45
  00c33:    	call   0xffffbd8c
  00c38:    	test   rax,rax
  00c3b:    	je     0x3dbf4
  00c41:    	movq   xmm3,xmm0
  00c45: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00c4c: 00 	test   rdi,0x1
  00c53:    	jne    0x3dc1d
  00c59: 00 	test   rdi,0x2
  00c60:    	je     0xc9c
  00c66:    	xorps  xmm4,xmm4
  00c69: 00 	movabs rax,0x8000000000000002
  00c73:    	cmp    rdi,rax
  00c76:    	je     0xcae
  00c7c:    	mov    rax,rdi
  00c7f:    	sar    rax,0x3f
  00c83:    	add    rax,0x2
  00c87:    	and    rdi,0xfffffffffffffffc
  00c8b:    	or     rdi,rax
  00c8e:    	rol    rdi,0x3d
  00c92:    	movq   xmm4,rdi
  00c97:    	jmp    0xcae
  00c9c:    	call   0xffffbd8c
  00ca1:    	test   rax,rax
  00ca4:    	je     0x3dc1d
  00caa:    	movq   xmm4,xmm0
  00cae:    	movq   xmm6,xmm3
  00cb2:    	subsd  xmm6,xmm4
:00072 %15 = %5
  00cb6:    	mov    rax,QWORD PTR [rbp-0x48]
  00cba: ff 	mov    QWORD PTR [rbp-0x98],rax
:00073 %14 = %15.call z()                   [Planet]
:00074 
  00cc1: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00cc8: 00 	test   rdi,0x7
  00ccf:    	jne    0x3dc46
  00cd5:    	cmp    DWORD PTR [rdi+0x4],0x25
  00cd9:    	jne    0x3dc46
  00cdf: 12 	cmp    DWORD PTR [rip+0xffffffffffffd846],0x12        # 0xffffe52c
  00ce6:    	jne    0x3dc46
  00cec:    	mov    esi,DWORD PTR [rip+0x63a]        # 0x132c
  00cf2:    	cmp    esi,0xffffffff
  00cf5:    	je     0x3dc7c
  00cfb:    	cmp    esi,0x6
  00cfe:    	jge    0xd1f
  00d04:    	xor    rax,rax
  00d07:    	mov    ax,WORD PTR [rdi+0x2]
  00d0b:    	cmp    rax,0x3
  00d0f:    	jne    0xd1f
  00d15:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d1a:    	jmp    0xd5a
  00d1f:    	sub    rsp,0x20
  00d23:    	movq   QWORD PTR [rsp],xmm2
  00d28:    	movq   QWORD PTR [rsp+0x8],xmm5
  00d2e:    	movq   QWORD PTR [rsp+0x10],xmm6
  00d34: 94 	movabs rax,0x5594d4e95d70
  00d3e:    	call   rax
  00d40:    	movq   xmm2,QWORD PTR [rsp]
  00d45:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00d4b:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00d51:    	add    rsp,0x20
  00d55:    	jmp    0xd5a
  00d5a: ff 	mov    QWORD PTR [rbp-0x90],rax
:00076 %16 = %7
  00d61:    	mov    rax,QWORD PTR [rbp-0x58]
  00d65: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00077 %15 = %16.call z()                   [Planet]
:00078 
  00d6c: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  00d73: 00 	test   rdi,0x7
  00d7a:    	jne    0x3dccf
  00d80:    	cmp    DWORD PTR [rdi+0x4],0x25
  00d84:    	jne    0x3dccf
  00d8a: 12 	cmp    DWORD PTR [rip+0xffffffffffffd79b],0x12        # 0xffffe52c
  00d91:    	jne    0x3dccf
  00d97:    	mov    esi,DWORD PTR [rip+0x597]        # 0x1334
  00d9d:    	cmp    esi,0xffffffff
  00da0:    	je     0x3dd05
  00da6:    	cmp    esi,0x6
  00da9:    	jge    0xdca
  00daf:    	xor    rax,rax
  00db2:    	mov    ax,WORD PTR [rdi+0x2]
  00db6:    	cmp    rax,0x3
  00dba:    	jne    0xdca
  00dc0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00dc5:    	jmp    0xe05
  00dca:    	sub    rsp,0x20
  00dce:    	movq   QWORD PTR [rsp],xmm2
  00dd3:    	movq   QWORD PTR [rsp+0x8],xmm5
  00dd9:    	movq   QWORD PTR [rsp+0x10],xmm6
  00ddf: 94 	movabs rax,0x5594d4e95d70
  00de9:    	call   rax
  00deb:    	movq   xmm2,QWORD PTR [rsp]
  00df0:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00df6:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00dfc:    	add    rsp,0x20
  00e00:    	jmp    0xe05
  00e05: ff 	mov    QWORD PTR [rbp-0x98],rax
:00080 %10 = %14 - %15                      [Float][Float]
  00e0c: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00e13: 00 	test   rdi,0x1
  00e1a:    	jne    0x3dd58
  00e20: 00 	test   rdi,0x2
  00e27:    	je     0xe63
  00e2d:    	xorps  xmm3,xmm3
  00e30: 00 	movabs rax,0x8000000000000002
  00e3a:    	cmp    rdi,rax
  00e3d:    	je     0xe75
  00e43:    	mov    rax,rdi
  00e46:    	sar    rax,0x3f
  00e4a:    	add    rax,0x2
  00e4e:    	and    rdi,0xfffffffffffffffc
  00e52:    	or     rdi,rax
  00e55:    	rol    rdi,0x3d
  00e59:    	movq   xmm3,rdi
  00e5e:    	jmp    0xe75
  00e63:    	call   0xffffbd8c
  00e68:    	test   rax,rax
  00e6b:    	je     0x3dd58
  00e71:    	movq   xmm3,xmm0
  00e75: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00e7c: 00 	test   rdi,0x1
  00e83:    	jne    0x3dd8e
  00e89: 00 	test   rdi,0x2
  00e90:    	je     0xecc
  00e96:    	xorps  xmm4,xmm4
  00e99: 00 	movabs rax,0x8000000000000002
  00ea3:    	cmp    rdi,rax
  00ea6:    	je     0xede
  00eac:    	mov    rax,rdi
  00eaf:    	sar    rax,0x3f
  00eb3:    	add    rax,0x2
  00eb7:    	and    rdi,0xfffffffffffffffc
  00ebb:    	or     rdi,rax
  00ebe:    	rol    rdi,0x3d
  00ec2:    	movq   xmm4,rdi
  00ec7:    	jmp    0xede
  00ecc:    	call   0xffffbd8c
  00ed1:    	test   rax,rax
  00ed4:    	je     0x3dd8e
  00eda:    	movq   xmm4,xmm0
  00ede:    	movq   xmm7,xmm3
  00ee2:    	subsd  xmm7,xmm4
:00081 %14 = const[Math]                    [Math]
  00ee6: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffd64b]        # 0xffffe538
  00eed: 00 	cmp    rax,QWORD PTR [rip+0x454]        # 0x1348
  00ef4:    	jne    0x3ddc4
  00efa: 00 	mov    rax,QWORD PTR [rip+0x437]        # 0x1338
  00f01: ff 	mov    QWORD PTR [rbp-0x90],rax
:00082 %15 = %8 * %8                        [Float][Float]
  00f08:    	movq   xmm3,xmm5
  00f0c:    	mulsd  xmm3,xmm5
:00083 %16 = %9 * %9                        [Float][Float]
  00f10:    	movq   xmm4,xmm6
  00f14:    	mulsd  xmm4,xmm6
:00084 %15 = %15 + %16                      [Float][Float]
  00f18:    	addsd  xmm3,xmm4
:00085 %16 = %10 * %10                      [Float][Float]
  00f1c:    	movq   xmm4,xmm7
  00f20:    	mulsd  xmm4,xmm7
:00086 %15 = %15 + %16                      [Float][Float]
  00f24:    	addsd  xmm3,xmm4
:00087 %11 = %14.call sqrt(%15; 1)          [#<Class:Math>]
:00088 
  00f28:    	movq   xmm0,xmm3
  00f2c:    	call   0xffffbfc3
  00f31: ff 	mov    QWORD PTR [rbp-0x98],rax
  00f38: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00f3f: 00 	test   rdi,0x7
  00f46:    	jne    0x3de4c
  00f4c:    	cmp    DWORD PTR [rdi+0x4],0x20
  00f50:    	jne    0x3de4c
  00f56: 12 	cmp    DWORD PTR [rip+0xffffffffffffd5cf],0x12        # 0xffffe52c
  00f5d:    	jne    0x3de4c
  00f63: 00 	mov    r9,0x0
  00f6a:    	mov    rdx,rdi
  00f6d:    	mov    rdi,rbx
  00f70:    	mov    rsi,r12
  00f73: ff 	lea    rcx,[rbp-0x98]
  00f7a: 00 	mov    r8,0x1
  00f81:    	call   0x3de9f
  00f86: 94 	movabs r13,0x5594d52c8fd0
  00f90:    	test   rax,rax
  00f93:    	je     0xffffbd53
  00f99:    	mov    QWORD PTR [rbp-0x78],rax
:00090 %15 = %5
  00f9d:    	mov    rax,QWORD PTR [rbp-0x48]
  00fa1: ff 	mov    QWORD PTR [rbp-0x98],rax
:00091 %14 = %15.call mass()                [Planet]
:00092 
  00fa8: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00faf: 00 	test   rdi,0x7
  00fb6:    	jne    0x3df1d
  00fbc:    	cmp    DWORD PTR [rdi+0x4],0x25
  00fc0:    	jne    0x3df1d
  00fc6: 12 	cmp    DWORD PTR [rip+0xffffffffffffd55f],0x12        # 0xffffe52c
  00fcd:    	jne    0x3df1d
  00fd3:    	mov    esi,DWORD PTR [rip+0x37b]        # 0x1354
  00fd9:    	cmp    esi,0xffffffff
  00fdc:    	je     0x3df70
  00fe2:    	cmp    esi,0x6
  00fe5:    	jge    0x1006
  00feb:    	xor    rax,rax
  00fee:    	mov    ax,WORD PTR [rdi+0x2]
  00ff2:    	cmp    rax,0x3
  00ff6:    	jne    0x1006
  00ffc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01001:    	jmp    0x1059
  01006:    	sub    rsp,0x30
  0100a:    	movq   QWORD PTR [rsp],xmm2
  0100f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01015:    	movq   QWORD PTR [rsp+0x10],xmm5
  0101b:    	movq   QWORD PTR [rsp+0x18],xmm6
  01021:    	movq   QWORD PTR [rsp+0x20],xmm7
  01027: 94 	movabs rax,0x5594d4e95d70
  01031:    	call   rax
  01033:    	movq   xmm2,QWORD PTR [rsp]
  01038:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0103e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01044:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0104a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01050:    	add    rsp,0x30
  01054:    	jmp    0x1059
  01059: ff 	mov    QWORD PTR [rbp-0x90],rax
:00094 %16 = %7
  01060:    	mov    rax,QWORD PTR [rbp-0x58]
  01064: ff 	mov    QWORD PTR [rbp-0xa0],rax
:00095 %15 = %16.call mass()                [Planet]
:00096 
  0106b: ff 	mov    rdi,QWORD PTR [rbp-0xa0]
  01072: 00 	test   rdi,0x7
  01079:    	jne    0x3dfdb
  0107f:    	cmp    DWORD PTR [rdi+0x4],0x25
  01083:    	jne    0x3dfdb
  01089: 12 	cmp    DWORD PTR [rip+0xffffffffffffd49c],0x12        # 0xffffe52c
  01090:    	jne    0x3dfdb
  01096:    	mov    esi,DWORD PTR [rip+0x2c0]        # 0x135c
  0109c:    	cmp    esi,0xffffffff
  0109f:    	je     0x3e01e
  010a5:    	cmp    esi,0x6
  010a8:    	jge    0x10c9
  010ae:    	xor    rax,rax
  010b1:    	mov    ax,WORD PTR [rdi+0x2]
  010b5:    	cmp    rax,0x3
  010b9:    	jne    0x10c9
  010bf:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  010c4:    	jmp    0x1110
  010c9:    	sub    rsp,0x20
  010cd:    	movq   QWORD PTR [rsp],xmm2
  010d2:    	movq   QWORD PTR [rsp+0x8],xmm5
  010d8:    	movq   QWORD PTR [rsp+0x10],xmm6
  010de:    	movq   QWORD PTR [rsp+0x18],xmm7
  010e4: 94 	movabs rax,0x5594d4e95d70
  010ee:    	call   rax
  010f0:    	movq   xmm2,QWORD PTR [rsp]
  010f5:    	movq   xmm5,QWORD PTR [rsp+0x8]
  010fb:    	movq   xmm6,QWORD PTR [rsp+0x10]
  01101:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01107:    	add    rsp,0x20
  0110b:    	jmp    0x1110
  01110: ff 	mov    QWORD PTR [rbp-0x98],rax
:00098 %14 = %14 * %15                      [Float][Float]
  01117: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0111e: 00 	test   rdi,0x1
  01125:    	jne    0x3e07d
  0112b: 00 	test   rdi,0x2
  01132:    	je     0x116e
  01138:    	xorps  xmm3,xmm3
  0113b: 00 	movabs rax,0x8000000000000002
  01145:    	cmp    rdi,rax
  01148:    	je     0x1180
  0114e:    	mov    rax,rdi
  01151:    	sar    rax,0x3f
  01155:    	add    rax,0x2
  01159:    	and    rdi,0xfffffffffffffffc
  0115d:    	or     rdi,rax
  01160:    	rol    rdi,0x3d
  01164:    	movq   xmm3,rdi
  01169:    	jmp    0x1180
  0116e:    	call   0xffffbd8c
  01173:    	test   rax,rax
  01176:    	je     0x3e07d
  0117c:    	movq   xmm3,xmm0
  01180: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  01187: 00 	test   rdi,0x1
  0118e:    	jne    0x3e0c0
  01194: 00 	test   rdi,0x2
  0119b:    	je     0x11d7
  011a1:    	xorps  xmm4,xmm4
  011a4: 00 	movabs rax,0x8000000000000002
  011ae:    	cmp    rdi,rax
  011b1:    	je     0x11e9
  011b7:    	mov    rax,rdi
  011ba:    	sar    rax,0x3f
  011be:    	add    rax,0x2
  011c2:    	and    rdi,0xfffffffffffffffc
  011c6:    	or     rdi,rax
  011c9:    	rol    rdi,0x3d
  011cd:    	movq   xmm4,rdi
  011d2:    	jmp    0x11e9
  011d7:    	call   0xffffbd8c
  011dc:    	test   rax,rax
  011df:    	je     0x3e0c0
  011e5:    	movq   xmm4,xmm0
  011e9:    	mulsd  xmm3,xmm4
:00099 %14 = %14 / %11                      [Float][Float]
  011ed:    	mov    rdi,QWORD PTR [rbp-0x78]
  011f1: 00 	test   rdi,0x1
  011f8:    	jne    0x3e103
  011fe: 00 	test   rdi,0x2
  01205:    	je     0x1242
  0120b:    	xorps  xmm8,xmm8
  0120f: 00 	movabs rax,0x8000000000000002
  01219:    	cmp    rdi,rax
  0121c:    	je     0x1255
  01222:    	mov    rax,rdi
  01225:    	sar    rax,0x3f
  01229:    	add    rax,0x2
  0122d:    	and    rdi,0xfffffffffffffffc
  01231:    	or     rdi,rax
  01234:    	rol    rdi,0x3d
  01238:    	movq   xmm8,rdi
  0123d:    	jmp    0x1255
  01242:    	call   0xffffbd8c
  01247:    	test   rax,rax
  0124a:    	je     0x3e103
  01250:    	movq   xmm8,xmm0
  01255:    	movq   rax,xmm8
  0125a:    	test   rax,rax
  0125d:    	je     0xffffbd78
  01263:    	divsd  xmm3,xmm8
:00100 %2 = %2 - %14                        [Float][Float]
  01268:    	subsd  xmm2,xmm3
:00101 %6 = %6 + 1: i16                     [Integer][Integer]
  0126c:    	mov    rdi,QWORD PTR [rbp-0x50]
  01270: 00 	test   rdi,0x1
  01277:    	je     0x3e156
  0127d:    	add    rdi,0x2
  01281:    	jo     0x3e156
  01287:    	mov    QWORD PTR [rbp-0x50],rdi
:00102 br =>:00050
  0128b:    	jmp    0x3e1d4
:00103 loop_end
:00104 %4 = %4 + 1: i16                     [Integer][Integer]
  01290:    	mov    rdi,QWORD PTR [rbp-0x40]
  01294: 00 	test   rdi,0x1
  0129b:    	je     0x3e1a9
  012a1:    	add    rdi,0x2
  012a5:    	jo     0x3e1a9
  012ab:    	mov    QWORD PTR [rbp-0x40],rdi
:00105 br =>:00007
  012af:    	jmp    0x3e221
:00106 loop_end
  012b4:    	jmp    0x3e1c5
    finished compile. elapsed:146.2Âµs
--> start partial compile: move_from_i FuncId(46) start:[00000] bytecode:0x5594d52df670
<-- compile finished. end:[00084]
offset:Pos(22443) code: 5650 bytes  data: 115 bytes
:00000 loop_start counter=5 jit-addr=0000000000000000
:00001 _%13 = %4 < %2                       [Integer][Integer]
:00002 condnotbr _%13 =>:00084
  00000:    	mov    rdi,QWORD PTR [rbp-0x40]
  00004:    	mov    rsi,QWORD PTR [rbp-0x30]
  00008: 00 	test   rdi,0x1
  0000f:    	je     0x3cd9d
  00015: 00 	test   rsi,0x1
  0001c:    	je     0x3cd9d
  00022:    	cmp    rdi,rsi
  00025:    	jge    0x160d
:00003 %5 = %1.[%4]
  0002b:    	mov    rdx,QWORD PTR [rbp-0x28]
  0002f:    	mov    rcx,QWORD PTR [rbp-0x40]
  00033:    	mov    rdi,rbx
  00036:    	mov    rsi,r12
  00039: 94 	movabs rax,0x5594d4eeecb0
  00043:    	call   rax
  00045: 94 	movabs r13,0x5594d52df6b0
  0004f:    	test   rax,rax
  00052:    	je     0xffffa890
  00058:    	mov    QWORD PTR [rbp-0x48],rax
:00004 %13 = @x: Planet[IvarId(0)]
  0005c:    	mov    rdi,QWORD PTR [rbp-0x20]
  00060: 00 	test   rdi,0x7
  00067:    	jne    0x3cdd2
  0006d:    	cmp    DWORD PTR [rdi+0x4],0x25
  00071:    	jne    0x3cdd2
  00077:    	xor    rax,rax
  0007a:    	mov    ax,WORD PTR [rdi+0x2]
  0007e:    	cmp    rax,0x3
  00082:    	jne    0x3cdbc
  00088:    	mov    rax,QWORD PTR [rdi+0x10]
  0008c: ff 	mov    QWORD PTR [rbp-0x88],rax
:00005 %15 = %5
  00093:    	mov    rax,QWORD PTR [rbp-0x48]
  00097: ff 	mov    QWORD PTR [rbp-0x98],rax
:00006 %14 = %15.call x()                   [Planet]
:00007 
  0009e: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000a5: 00 	test   rdi,0x7
  000ac:    	jne    0x3cded
  000b2:    	cmp    DWORD PTR [rdi+0x4],0x25
  000b6:    	jne    0x3cded
  000bc: 12 	cmp    DWORD PTR [rip+0xffffffffffffcfa6],0x12        # 0xffffd069
  000c3:    	jne    0x3cded
  000c9:    	mov    esi,DWORD PTR [rip+0x1547]        # 0x1616
  000cf:    	cmp    esi,0xffffffff
  000d2:    	je     0x3cdfc
  000d8:    	cmp    esi,0x6
  000db:    	jge    0xfc
  000e1:    	xor    rax,rax
  000e4:    	mov    ax,WORD PTR [rdi+0x2]
  000e8:    	cmp    rax,0x3
  000ec:    	jne    0xfc
  000f2:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000f7:    	jmp    0x10d
  000fc: 94 	movabs rax,0x5594d4e95d70
  00106:    	call   rax
  00108:    	jmp    0x10d
  0010d: ff 	mov    QWORD PTR [rbp-0x90],rax
:00009 %6 = %13 - %14                       [Float][Float]
  00114: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0011b: 00 	test   rdi,0x1
  00122:    	jne    0x3ce25
  00128: 00 	test   rdi,0x2
  0012f:    	je     0x16b
  00135:    	xorps  xmm2,xmm2
  00138: 00 	movabs rax,0x8000000000000002
  00142:    	cmp    rdi,rax
  00145:    	je     0x17d
  0014b:    	mov    rax,rdi
  0014e:    	sar    rax,0x3f
  00152:    	add    rax,0x2
  00156:    	and    rdi,0xfffffffffffffffc
  0015a:    	or     rdi,rax
  0015d:    	rol    rdi,0x3d
  00161:    	movq   xmm2,rdi
  00166:    	jmp    0x17d
  0016b:    	call   0xffffa8c9
  00170:    	test   rax,rax
  00173:    	je     0x3ce25
  00179:    	movq   xmm2,xmm0
  0017d: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00184: 00 	test   rdi,0x1
  0018b:    	jne    0x3ce34
  00191: 00 	test   rdi,0x2
  00198:    	je     0x1d4
  0019e:    	xorps  xmm3,xmm3
  001a1: 00 	movabs rax,0x8000000000000002
  001ab:    	cmp    rdi,rax
  001ae:    	je     0x1e6
  001b4:    	mov    rax,rdi
  001b7:    	sar    rax,0x3f
  001bb:    	add    rax,0x2
  001bf:    	and    rdi,0xfffffffffffffffc
  001c3:    	or     rdi,rax
  001c6:    	rol    rdi,0x3d
  001ca:    	movq   xmm3,rdi
  001cf:    	jmp    0x1e6
  001d4:    	call   0xffffa8c9
  001d9:    	test   rax,rax
  001dc:    	je     0x3ce34
  001e2:    	movq   xmm3,xmm0
  001e6:    	movq   xmm4,xmm2
  001ea:    	subsd  xmm4,xmm3
:00010 %13 = @y: Planet[IvarId(1)]
  001ee:    	mov    rdi,QWORD PTR [rbp-0x20]
  001f2: 00 	test   rdi,0x7
  001f9:    	jne    0x3ce77
  001ff:    	cmp    DWORD PTR [rdi+0x4],0x25
  00203:    	jne    0x3ce77
  00209:    	xor    rax,rax
  0020c:    	mov    ax,WORD PTR [rdi+0x2]
  00210:    	cmp    rax,0x3
  00214:    	jne    0x3ce43
  0021a:    	mov    rax,QWORD PTR [rdi+0x18]
  0021e: ff 	mov    QWORD PTR [rbp-0x88],rax
:00011 %15 = %5
  00225:    	mov    rax,QWORD PTR [rbp-0x48]
  00229: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %14 = %15.call y()                   [Planet]
:00013 
  00230: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00237: 00 	test   rdi,0x7
  0023e:    	jne    0x3ceb0
  00244:    	cmp    DWORD PTR [rdi+0x4],0x25
  00248:    	jne    0x3ceb0
  0024e: 12 	cmp    DWORD PTR [rip+0xffffffffffffce14],0x12        # 0xffffd069
  00255:    	jne    0x3ceb0
  0025b:    	mov    esi,DWORD PTR [rip+0x13bd]        # 0x161e
  00261:    	cmp    esi,0xffffffff
  00264:    	je     0x3cecc
  0026a:    	cmp    esi,0x6
  0026d:    	jge    0x28e
  00273:    	xor    rax,rax
  00276:    	mov    ax,WORD PTR [rdi+0x2]
  0027a:    	cmp    rax,0x3
  0027e:    	jne    0x28e
  00284:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00289:    	jmp    0x2b1
  0028e:    	sub    rsp,0x10
  00292:    	movq   QWORD PTR [rsp],xmm4
  00297: 94 	movabs rax,0x5594d4e95d70
  002a1:    	call   rax
  002a3:    	movq   xmm4,QWORD PTR [rsp]
  002a8:    	add    rsp,0x10
  002ac:    	jmp    0x2b1
  002b1: ff 	mov    QWORD PTR [rbp-0x90],rax
:00015 %7 = %13 - %14                       [Float][Float]
  002b8: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  002bf: 00 	test   rdi,0x1
  002c6:    	jne    0x3cf07
  002cc: 00 	test   rdi,0x2
  002d3:    	je     0x30f
  002d9:    	xorps  xmm2,xmm2
  002dc: 00 	movabs rax,0x8000000000000002
  002e6:    	cmp    rdi,rax
  002e9:    	je     0x321
  002ef:    	mov    rax,rdi
  002f2:    	sar    rax,0x3f
  002f6:    	add    rax,0x2
  002fa:    	and    rdi,0xfffffffffffffffc
  002fe:    	or     rdi,rax
  00301:    	rol    rdi,0x3d
  00305:    	movq   xmm2,rdi
  0030a:    	jmp    0x321
  0030f:    	call   0xffffa8c9
  00314:    	test   rax,rax
  00317:    	je     0x3cf07
  0031d:    	movq   xmm2,xmm0
  00321: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00328: 00 	test   rdi,0x1
  0032f:    	jne    0x3cf23
  00335: 00 	test   rdi,0x2
  0033c:    	je     0x378
  00342:    	xorps  xmm3,xmm3
  00345: 00 	movabs rax,0x8000000000000002
  0034f:    	cmp    rdi,rax
  00352:    	je     0x38a
  00358:    	mov    rax,rdi
  0035b:    	sar    rax,0x3f
  0035f:    	add    rax,0x2
  00363:    	and    rdi,0xfffffffffffffffc
  00367:    	or     rdi,rax
  0036a:    	rol    rdi,0x3d
  0036e:    	movq   xmm3,rdi
  00373:    	jmp    0x38a
  00378:    	call   0xffffa8c9
  0037d:    	test   rax,rax
  00380:    	je     0x3cf23
  00386:    	movq   xmm3,xmm0
  0038a:    	movq   xmm5,xmm2
  0038e:    	subsd  xmm5,xmm3
:00016 %13 = @z: Planet[IvarId(2)]
  00392:    	mov    rdi,QWORD PTR [rbp-0x20]
  00396: 00 	test   rdi,0x7
  0039d:    	jne    0x3cf7f
  003a3:    	cmp    DWORD PTR [rdi+0x4],0x25
  003a7:    	jne    0x3cf7f
  003ad:    	xor    rax,rax
  003b0:    	mov    ax,WORD PTR [rdi+0x2]
  003b4:    	cmp    rax,0x3
  003b8:    	jne    0x3cf3f
  003be:    	mov    rax,QWORD PTR [rdi+0x20]
  003c2: ff 	mov    QWORD PTR [rbp-0x88],rax
:00017 %15 = %5
  003c9:    	mov    rax,QWORD PTR [rbp-0x48]
  003cd: ff 	mov    QWORD PTR [rbp-0x98],rax
:00018 %14 = %15.call z()                   [Planet]
:00019 
  003d4: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  003db: 00 	test   rdi,0x7
  003e2:    	jne    0x3cfc4
  003e8:    	cmp    DWORD PTR [rdi+0x4],0x25
  003ec:    	jne    0x3cfc4
  003f2: 12 	cmp    DWORD PTR [rip+0xffffffffffffcc70],0x12        # 0xffffd069
  003f9:    	jne    0x3cfc4
  003ff:    	mov    esi,DWORD PTR [rip+0x1221]        # 0x1626
  00405:    	cmp    esi,0xffffffff
  00408:    	je     0x3cfed
  0040e:    	cmp    esi,0x6
  00411:    	jge    0x432
  00417:    	xor    rax,rax
  0041a:    	mov    ax,WORD PTR [rdi+0x2]
  0041e:    	cmp    rax,0x3
  00422:    	jne    0x432
  00428:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0042d:    	jmp    0x461
  00432:    	sub    rsp,0x10
  00436:    	movq   QWORD PTR [rsp],xmm4
  0043b:    	movq   QWORD PTR [rsp+0x8],xmm5
  00441: 94 	movabs rax,0x5594d4e95d70
  0044b:    	call   rax
  0044d:    	movq   xmm4,QWORD PTR [rsp]
  00452:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00458:    	add    rsp,0x10
  0045c:    	jmp    0x461
  00461: ff 	mov    QWORD PTR [rbp-0x90],rax
:00021 %8 = %13 - %14                       [Float][Float]
  00468: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0046f: 00 	test   rdi,0x1
  00476:    	jne    0x3d034
  0047c: 00 	test   rdi,0x2
  00483:    	je     0x4bf
  00489:    	xorps  xmm2,xmm2
  0048c: 00 	movabs rax,0x8000000000000002
  00496:    	cmp    rdi,rax
  00499:    	je     0x4d1
  0049f:    	mov    rax,rdi
  004a2:    	sar    rax,0x3f
  004a6:    	add    rax,0x2
  004aa:    	and    rdi,0xfffffffffffffffc
  004ae:    	or     rdi,rax
  004b1:    	rol    rdi,0x3d
  004b5:    	movq   xmm2,rdi
  004ba:    	jmp    0x4d1
  004bf:    	call   0xffffa8c9
  004c4:    	test   rax,rax
  004c7:    	je     0x3d034
  004cd:    	movq   xmm2,xmm0
  004d1: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  004d8: 00 	test   rdi,0x1
  004df:    	jne    0x3d05d
  004e5: 00 	test   rdi,0x2
  004ec:    	je     0x528
  004f2:    	xorps  xmm3,xmm3
  004f5: 00 	movabs rax,0x8000000000000002
  004ff:    	cmp    rdi,rax
  00502:    	je     0x53a
  00508:    	mov    rax,rdi
  0050b:    	sar    rax,0x3f
  0050f:    	add    rax,0x2
  00513:    	and    rdi,0xfffffffffffffffc
  00517:    	or     rdi,rax
  0051a:    	rol    rdi,0x3d
  0051e:    	movq   xmm3,rdi
  00523:    	jmp    0x53a
  00528:    	call   0xffffa8c9
  0052d:    	test   rax,rax
  00530:    	je     0x3d05d
  00536:    	movq   xmm3,xmm0
  0053a:    	movq   xmm6,xmm2
  0053e:    	subsd  xmm6,xmm3
:00022 %13 = const[Math]                    [Math]
  00542: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffcb2c]        # 0xffffd075
  00549: 00 	cmp    rax,QWORD PTR [rip+0x10f5]        # 0x1645
  00550:    	jne    0x3d086
  00556: 00 	mov    rax,QWORD PTR [rip+0x10d8]        # 0x1635
  0055d: ff 	mov    QWORD PTR [rbp-0x88],rax
:00023 %14 = %6 * %6                        [Float][Float]
  00564:    	movq   xmm2,xmm4
  00568:    	mulsd  xmm2,xmm4
:00024 %15 = %7 * %7                        [Float][Float]
  0056c:    	movq   xmm3,xmm5
  00570:    	mulsd  xmm3,xmm5
:00025 %14 = %14 + %15                      [Float][Float]
  00574:    	addsd  xmm2,xmm3
:00026 %15 = %8 * %8                        [Float][Float]
  00578:    	movq   xmm3,xmm6
  0057c:    	mulsd  xmm3,xmm6
:00027 %14 = %14 + %15                      [Float][Float]
  00580:    	addsd  xmm2,xmm3
:00028 %9 = %13.call sqrt(%14; 1)           [#<Class:Math>]
:00029 
  00584:    	movq   xmm0,xmm2
  00588:    	call   0xffffab00
  0058d: ff 	mov    QWORD PTR [rbp-0x90],rax
  00594: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0059b: 00 	test   rdi,0x7
  005a2:    	jne    0x3d102
  005a8:    	cmp    DWORD PTR [rdi+0x4],0x20
  005ac:    	jne    0x3d102
  005b2: 12 	cmp    DWORD PTR [rip+0xffffffffffffcab0],0x12        # 0xffffd069
  005b9:    	jne    0x3d102
  005bf: 00 	mov    r9,0x0
  005c6:    	mov    rdx,rdi
  005c9:    	mov    rdi,rbx
  005cc:    	mov    rsi,r12
  005cf: ff 	lea    rcx,[rbp-0x90]
  005d6: 00 	mov    r8,0x1
  005dd:    	call   0x3d148
  005e2: 94 	movabs r13,0x5594d52df850
  005ec:    	test   rax,rax
  005ef:    	je     0xffffa890
  005f5:    	mov    QWORD PTR [rbp-0x68],rax
:00031 %13 = %9 * %9                        [Float][Float]
  005f9:    	mov    rdi,QWORD PTR [rbp-0x68]
  005fd: 00 	test   rdi,0x1
  00604:    	jne    0x3d1ba
  0060a: 00 	test   rdi,0x2
  00611:    	je     0x64d
  00617:    	xorps  xmm7,xmm7
  0061a: 00 	movabs rax,0x8000000000000002
  00624:    	cmp    rdi,rax
  00627:    	je     0x65f
  0062d:    	mov    rax,rdi
  00630:    	sar    rax,0x3f
  00634:    	add    rax,0x2
  00638:    	and    rdi,0xfffffffffffffffc
  0063c:    	or     rdi,rax
  0063f:    	rol    rdi,0x3d
  00643:    	movq   xmm7,rdi
  00648:    	jmp    0x65f
  0064d:    	call   0xffffa8c9
  00652:    	test   rax,rax
  00655:    	je     0x3d1ba
  0065b:    	movq   xmm7,xmm0
  0065f:    	movq   xmm8,xmm7
  00664:    	mulsd  xmm8,xmm7
:00032 %13 = %13 * %9                       [Float][Float]
  00669:    	mulsd  xmm8,xmm7
:00033 %10 = %3 / %13                       [Float][Float]
  0066e:    	mov    rdi,QWORD PTR [rbp-0x38]
  00672: 00 	test   rdi,0x1
  00679:    	jne    0x3d200
  0067f: 00 	test   rdi,0x2
  00686:    	je     0x6c3
  0068c:    	xorps  xmm9,xmm9
  00690: 00 	movabs rax,0x8000000000000002
  0069a:    	cmp    rdi,rax
  0069d:    	je     0x6d6
  006a3:    	mov    rax,rdi
  006a6:    	sar    rax,0x3f
  006aa:    	add    rax,0x2
  006ae:    	and    rdi,0xfffffffffffffffc
  006b2:    	or     rdi,rax
  006b5:    	rol    rdi,0x3d
  006b9:    	movq   xmm9,rdi
  006be:    	jmp    0x6d6
  006c3:    	call   0xffffa8c9
  006c8:    	test   rax,rax
  006cb:    	je     0x3d200
  006d1:    	movq   xmm9,xmm0
  006d6:    	movq   xmm10,xmm9
  006db:    	movq   rax,xmm8
  006e0:    	test   rax,rax
  006e3:    	je     0xffffa8b5
  006e9:    	divsd  xmm10,xmm8
:00034 %13 = @mass: Planet[IvarId(6)]
  006ee:    	mov    rdi,QWORD PTR [rbp-0x20]
  006f2: 00 	test   rdi,0x7
  006f9:    	jne    0x3d257
  006ff:    	cmp    DWORD PTR [rdi+0x4],0x25
  00703:    	jne    0x3d257
  00709:    	sub    rsp,0x40
  0070d:    	movq   QWORD PTR [rsp],xmm2
  00712:    	movq   QWORD PTR [rsp+0x8],xmm3
  00718:    	movq   QWORD PTR [rsp+0x10],xmm4
  0071e:    	movq   QWORD PTR [rsp+0x18],xmm5
  00724:    	movq   QWORD PTR [rsp+0x20],xmm6
  0072a:    	movq   QWORD PTR [rsp+0x28],xmm7
  00730: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00737: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0073e:    	mov    esi,0x6
  00743: 94 	movabs rax,0x5594d4e95d70
  0074d:    	call   rax
  0074f:    	movq   xmm2,QWORD PTR [rsp]
  00754:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0075a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00760:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00766:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0076c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00772: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00779: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00780:    	add    rsp,0x40
  00784: ff 	mov    QWORD PTR [rbp-0x88],rax
:00035 %13 = %13 * %10                      [Float][Float]
  0078b: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00792: 00 	test   rdi,0x1
  00799:    	jne    0x3d2dc
  0079f: 00 	test   rdi,0x2
  007a6:    	je     0x7e3
  007ac:    	xorps  xmm8,xmm8
  007b0: 00 	movabs rax,0x8000000000000002
  007ba:    	cmp    rdi,rax
  007bd:    	je     0x7f6
  007c3:    	mov    rax,rdi
  007c6:    	sar    rax,0x3f
  007ca:    	add    rax,0x2
  007ce:    	and    rdi,0xfffffffffffffffc
  007d2:    	or     rdi,rax
  007d5:    	rol    rdi,0x3d
  007d9:    	movq   xmm8,rdi
  007de:    	jmp    0x7f6
  007e3:    	call   0xffffa8c9
  007e8:    	test   rax,rax
  007eb:    	je     0x3d2dc
  007f1:    	movq   xmm8,xmm0
  007f6:    	mulsd  xmm8,xmm10
:00036 %15 = %5
  007fb:    	mov    rax,QWORD PTR [rbp-0x48]
  007ff: ff 	mov    QWORD PTR [rbp-0x98],rax
:00037 %14 = %15.call mass()                [Planet]
:00038 
  00806: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0080d: 00 	test   rdi,0x7
  00814:    	jne    0x3d330
  0081a:    	cmp    DWORD PTR [rdi+0x4],0x25
  0081e:    	jne    0x3d330
  00824: 12 	cmp    DWORD PTR [rip+0xffffffffffffc83e],0x12        # 0xffffd069
  0082b:    	jne    0x3d330
  00831:    	mov    esi,DWORD PTR [rip+0xe1a]        # 0x1651
  00837:    	cmp    esi,0xffffffff
  0083a:    	je     0x3d385
  00840:    	cmp    esi,0x6
  00843:    	jge    0x864
  00849:    	xor    rax,rax
  0084c:    	mov    ax,WORD PTR [rdi+0x2]
  00850:    	cmp    rax,0x3
  00854:    	jne    0x864
  0085a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0085f:    	jmp    0x8d5
  00864:    	sub    rsp,0x40
  00868:    	movq   QWORD PTR [rsp],xmm4
  0086d:    	movq   QWORD PTR [rsp+0x8],xmm5
  00873:    	movq   QWORD PTR [rsp+0x10],xmm6
  00879:    	movq   QWORD PTR [rsp+0x18],xmm7
  0087f: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00886: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0088d: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  00894: 94 	movabs rax,0x5594d4e95d70
  0089e:    	call   rax
  008a0:    	movq   xmm4,QWORD PTR [rsp]
  008a5:    	movq   xmm5,QWORD PTR [rsp+0x8]
  008ab:    	movq   xmm6,QWORD PTR [rsp+0x10]
  008b1:    	movq   xmm7,QWORD PTR [rsp+0x18]
  008b7: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  008be: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  008c5: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  008cc:    	add    rsp,0x40
  008d0:    	jmp    0x8d5
  008d5: ff 	mov    QWORD PTR [rbp-0x90],rax
:00040 %14 = %14 * %10                      [Float][Float]
  008dc: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  008e3: 00 	test   rdi,0x1
  008ea:    	jne    0x3d40e
  008f0: 00 	test   rdi,0x2
  008f7:    	je     0x933
  008fd:    	xorps  xmm2,xmm2
  00900: 00 	movabs rax,0x8000000000000002
  0090a:    	cmp    rdi,rax
  0090d:    	je     0x945
  00913:    	mov    rax,rdi
  00916:    	sar    rax,0x3f
  0091a:    	add    rax,0x2
  0091e:    	and    rdi,0xfffffffffffffffc
  00922:    	or     rdi,rax
  00925:    	rol    rdi,0x3d
  00929:    	movq   xmm2,rdi
  0092e:    	jmp    0x945
  00933:    	call   0xffffa8c9
  00938:    	test   rax,rax
  0093b:    	je     0x3d40e
  00941:    	movq   xmm2,xmm0
  00945:    	mulsd  xmm2,xmm10
:00041 %11 = %13
:00042 %12 = %14
:00043 %13 = @vx: Planet[IvarId(3)]
  0094a:    	mov    rdi,QWORD PTR [rbp-0x20]
  0094e: 00 	test   rdi,0x7
  00955:    	jne    0x3d4e5
  0095b:    	cmp    DWORD PTR [rdi+0x4],0x25
  0095f:    	jne    0x3d4e5
  00965:    	xor    rax,rax
  00968:    	mov    ax,WORD PTR [rdi+0x2]
  0096c:    	cmp    rax,0x3
  00970:    	jne    0x3d463
  00976:    	mov    rax,QWORD PTR [rdi+0x28]
  0097a: ff 	mov    QWORD PTR [rbp-0x88],rax
:00044 %14 = %6 * %12                       [Float][Float]
  00981:    	movq   xmm3,xmm4
  00985:    	mulsd  xmm3,xmm2
:00045 %13 = %13 - %14                      [Float][Float]
  00989: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00990: 00 	test   rdi,0x1
  00997:    	jne    0x3d56c
  0099d: 00 	test   rdi,0x2
  009a4:    	je     0x9e1
  009aa:    	xorps  xmm11,xmm11
  009ae: 00 	movabs rax,0x8000000000000002
  009b8:    	cmp    rdi,rax
  009bb:    	je     0x9f4
  009c1:    	mov    rax,rdi
  009c4:    	sar    rax,0x3f
  009c8:    	add    rax,0x2
  009cc:    	and    rdi,0xfffffffffffffffc
  009d0:    	or     rdi,rax
  009d3:    	rol    rdi,0x3d
  009d7:    	movq   xmm11,rdi
  009dc:    	jmp    0x9f4
  009e1:    	call   0xffffa8c9
  009e6:    	test   rax,rax
  009e9:    	je     0x3d56c
  009ef:    	movq   xmm11,xmm0
  009f4:    	subsd  xmm11,xmm3
:00046 @vx: Planet[IvarId(3)] = %13
  009f9:    	movq   xmm0,xmm11
  009fe:    	call   0xffffab00
  00a03: ff 	mov    QWORD PTR [rbp-0x88],rax
  00a0a:    	mov    rdi,QWORD PTR [rbp-0x20]
  00a0e: 00 	test   rdi,0x7
  00a15:    	jne    0x3d67e
  00a1b:    	cmp    DWORD PTR [rdi+0x4],0x25
  00a1f:    	jne    0x3d67e
  00a25:    	xor    rax,rax
  00a28:    	mov    ax,WORD PTR [rdi+0x2]
  00a2c:    	cmp    rax,0x3
  00a30:    	jne    0x3d5db
  00a36: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00a3d:    	mov    QWORD PTR [rdi+0x28],rax
:00047 %13 = @vy: Planet[IvarId(4)]
  00a41:    	mov    rdi,QWORD PTR [rbp-0x20]
  00a45: 00 	test   rdi,0x7
  00a4c:    	jne    0x3d7ca
  00a52:    	cmp    DWORD PTR [rdi+0x4],0x25
  00a56:    	jne    0x3d7ca
  00a5c:    	xor    rax,rax
  00a5f:    	mov    ax,WORD PTR [rdi+0x2]
  00a63:    	cmp    rax,0x3
  00a67:    	jne    0x3d73c
  00a6d:    	mov    rax,QWORD PTR [rdi+0x30]
  00a71: ff 	mov    QWORD PTR [rbp-0x88],rax
:00048 %14 = %7 * %12                       [Float][Float]
  00a78:    	movq   xmm3,xmm5
  00a7c:    	mulsd  xmm3,xmm2
:00049 %13 = %13 - %14                      [Float][Float]
  00a80: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00a87: 00 	test   rdi,0x1
  00a8e:    	jne    0x3d85d
  00a94: 00 	test   rdi,0x2
  00a9b:    	je     0xad8
  00aa1:    	xorps  xmm11,xmm11
  00aa5: 00 	movabs rax,0x8000000000000002
  00aaf:    	cmp    rdi,rax
  00ab2:    	je     0xaeb
  00ab8:    	mov    rax,rdi
  00abb:    	sar    rax,0x3f
  00abf:    	add    rax,0x2
  00ac3:    	and    rdi,0xfffffffffffffffc
  00ac7:    	or     rdi,rax
  00aca:    	rol    rdi,0x3d
  00ace:    	movq   xmm11,rdi
  00ad3:    	jmp    0xaeb
  00ad8:    	call   0xffffa8c9
  00add:    	test   rax,rax
  00ae0:    	je     0x3d85d
  00ae6:    	movq   xmm11,xmm0
  00aeb:    	subsd  xmm11,xmm3
:00050 @vy: Planet[IvarId(4)] = %13
  00af0:    	movq   xmm0,xmm11
  00af5:    	call   0xffffab00
  00afa: ff 	mov    QWORD PTR [rbp-0x88],rax
  00b01:    	mov    rdi,QWORD PTR [rbp-0x20]
  00b05: 00 	test   rdi,0x7
  00b0c:    	jne    0x3d96f
  00b12:    	cmp    DWORD PTR [rdi+0x4],0x25
  00b16:    	jne    0x3d96f
  00b1c:    	xor    rax,rax
  00b1f:    	mov    ax,WORD PTR [rdi+0x2]
  00b23:    	cmp    rax,0x3
  00b27:    	jne    0x3d8cc
  00b2d: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00b34:    	mov    QWORD PTR [rdi+0x30],rax
:00051 %13 = @vz: Planet[IvarId(5)]
  00b38:    	mov    rdi,QWORD PTR [rbp-0x20]
  00b3c: 00 	test   rdi,0x7
  00b43:    	jne    0x3dabb
  00b49:    	cmp    DWORD PTR [rdi+0x4],0x25
  00b4d:    	jne    0x3dabb
  00b53:    	xor    rax,rax
  00b56:    	mov    ax,WORD PTR [rdi+0x2]
  00b5a:    	cmp    rax,0x3
  00b5e:    	jne    0x3da2d
  00b64:    	mov    rax,QWORD PTR [rdi+0x38]
  00b68: ff 	mov    QWORD PTR [rbp-0x88],rax
:00052 %14 = %8 * %12                       [Float][Float]
  00b6f:    	movq   xmm3,xmm6
  00b73:    	mulsd  xmm3,xmm2
:00053 %13 = %13 - %14                      [Float][Float]
  00b77: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00b7e: 00 	test   rdi,0x1
  00b85:    	jne    0x3db4e
  00b8b: 00 	test   rdi,0x2
  00b92:    	je     0xbcf
  00b98:    	xorps  xmm11,xmm11
  00b9c: 00 	movabs rax,0x8000000000000002
  00ba6:    	cmp    rdi,rax
  00ba9:    	je     0xbe2
  00baf:    	mov    rax,rdi
  00bb2:    	sar    rax,0x3f
  00bb6:    	add    rax,0x2
  00bba:    	and    rdi,0xfffffffffffffffc
  00bbe:    	or     rdi,rax
  00bc1:    	rol    rdi,0x3d
  00bc5:    	movq   xmm11,rdi
  00bca:    	jmp    0xbe2
  00bcf:    	call   0xffffa8c9
  00bd4:    	test   rax,rax
  00bd7:    	je     0x3db4e
  00bdd:    	movq   xmm11,xmm0
  00be2:    	subsd  xmm11,xmm3
:00054 @vz: Planet[IvarId(5)] = %13
  00be7:    	movq   xmm0,xmm11
  00bec:    	call   0xffffab00
  00bf1: ff 	mov    QWORD PTR [rbp-0x88],rax
  00bf8:    	mov    rdi,QWORD PTR [rbp-0x20]
  00bfc: 00 	test   rdi,0x7
  00c03:    	jne    0x3dc60
  00c09:    	cmp    DWORD PTR [rdi+0x4],0x25
  00c0d:    	jne    0x3dc60
  00c13:    	xor    rax,rax
  00c16:    	mov    ax,WORD PTR [rdi+0x2]
  00c1a:    	cmp    rax,0x3
  00c1e:    	jne    0x3dbbd
  00c24: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c2b:    	mov    QWORD PTR [rdi+0x38],rax
:00055 %14 = %5
  00c2f:    	mov    rax,QWORD PTR [rbp-0x48]
  00c33: ff 	mov    QWORD PTR [rbp-0x90],rax
:00056 %13 = %14.call vx()                  [Planet]
:00057 
  00c3a: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00c41: 00 	test   rdi,0x7
  00c48:    	jne    0x3dd1e
  00c4e:    	cmp    DWORD PTR [rdi+0x4],0x25
  00c52:    	jne    0x3dd1e
  00c58: 12 	cmp    DWORD PTR [rip+0xffffffffffffc40a],0x12        # 0xffffd069
  00c5f:    	jne    0x3dd1e
  00c65:    	mov    esi,DWORD PTR [rip+0x9ee]        # 0x1659
  00c6b:    	cmp    esi,0xffffffff
  00c6e:    	je     0x3dd7d
  00c74:    	cmp    esi,0x6
  00c77:    	jge    0xc98
  00c7d:    	xor    rax,rax
  00c80:    	mov    ax,WORD PTR [rdi+0x2]
  00c84:    	cmp    rax,0x3
  00c88:    	jne    0xc98
  00c8e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c93:    	jmp    0xd15
  00c98:    	sub    rsp,0x40
  00c9c:    	movq   QWORD PTR [rsp],xmm2
  00ca1:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ca7:    	movq   QWORD PTR [rsp+0x10],xmm5
  00cad:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cb3:    	movq   QWORD PTR [rsp+0x20],xmm7
  00cb9: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00cc0: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00cc7: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00cce: 94 	movabs rax,0x5594d4e95d70
  00cd8:    	call   rax
  00cda:    	movq   xmm2,QWORD PTR [rsp]
  00cdf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ce5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ceb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00cf1:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00cf7: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00cfe: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d05: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00d0c:    	add    rsp,0x40
  00d10:    	jmp    0xd15
  00d15: ff 	mov    QWORD PTR [rbp-0x88],rax
:00059 %14 = %6 * %11                       [Float][Float]
  00d1c:    	movq   xmm3,xmm4
  00d20:    	mulsd  xmm3,xmm8
:00060 %13 = %13 + %14                      [Float][Float]
  00d25: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00d2c: 00 	test   rdi,0x1
  00d33:    	jne    0x3de12
  00d39: 00 	test   rdi,0x2
  00d40:    	je     0xd7d
  00d46:    	xorps  xmm11,xmm11
  00d4a: 00 	movabs rax,0x8000000000000002
  00d54:    	cmp    rdi,rax
  00d57:    	je     0xd90
  00d5d:    	mov    rax,rdi
  00d60:    	sar    rax,0x3f
  00d64:    	add    rax,0x2
  00d68:    	and    rdi,0xfffffffffffffffc
  00d6c:    	or     rdi,rax
  00d6f:    	rol    rdi,0x3d
  00d73:    	movq   xmm11,rdi
  00d78:    	jmp    0xd90
  00d7d:    	call   0xffffa8c9
  00d82:    	test   rax,rax
  00d85:    	je     0x3de12
  00d8b:    	movq   xmm11,xmm0
  00d90:    	addsd  xmm11,xmm3
:00061 _ = %5.call vx=(%13; 1)              [Planet]
:00062 
  00d95:    	movq   xmm0,xmm11
  00d9a:    	call   0xffffab00
  00d9f: ff 	mov    QWORD PTR [rbp-0x88],rax
  00da6:    	mov    rdi,QWORD PTR [rbp-0x48]
  00daa: 00 	test   rdi,0x7
  00db1:    	jne    0x3de81
  00db7:    	cmp    DWORD PTR [rdi+0x4],0x25
  00dbb:    	jne    0x3de81
  00dc1: 12 	cmp    DWORD PTR [rip+0xffffffffffffc2a1],0x12        # 0xffffd069
  00dc8:    	jne    0x3de81
  00dce:    	mov    esi,DWORD PTR [rip+0x88d]        # 0x1661
  00dd4:    	cmp    esi,0xffffffff
  00dd7:    	je     0xea6
  00ddd:    	cmp    esi,0x6
  00de0:    	jge    0xe08
  00de6:    	xor    rax,rax
  00de9:    	mov    ax,WORD PTR [rdi+0x2]
  00ded:    	cmp    rax,0x3
  00df1:    	jne    0xe08
  00df7: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00dfe:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e03:    	jmp    0xf6d
  00e08:    	sub    rsp,0x50
  00e0c:    	movq   QWORD PTR [rsp],xmm2
  00e11:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e17:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e1d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e23:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e29:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e2f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e36: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e3d: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00e44: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00e4b: ff 	mov    rdx,QWORD PTR [rbp-0x88]
  00e52: 94 	movabs rax,0x5594d4e95fe0
  00e5c:    	call   rax
  00e5e:    	movq   xmm2,QWORD PTR [rsp]
  00e63:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e69:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e6f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e75:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e7b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e81: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e88: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00e8f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00e96: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00e9d:    	add    rsp,0x50
  00ea1:    	jmp    0xf6d
  00ea6:    	sub    rsp,0x50
  00eaa:    	movq   QWORD PTR [rsp],xmm2
  00eaf:    	movq   QWORD PTR [rsp+0x8],xmm3
  00eb5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ebb:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ec1:    	movq   QWORD PTR [rsp+0x20],xmm6
  00ec7:    	movq   QWORD PTR [rsp+0x28],xmm7
  00ecd: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ed4: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00edb: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00ee2: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00ee9:    	mov    rsi,rdi
  00eec: 00 	mov    rdx,0x64
  00ef3: ff 	mov    rcx,QWORD PTR [rbp-0x88]
  00efa:    	mov    rdi,r12
  00efd: 00 	lea    r8,[rip+0x759]        # 0x165d
  00f04: 00 	lea    r9,[rip+0x756]        # 0x1661
  00f0b: 94 	movabs rax,0x5594d4efce60
  00f15:    	call   rax
  00f17:    	movq   xmm2,QWORD PTR [rsp]
  00f1c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f22:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f28:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f2e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f34:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f3a: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f41: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f48: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00f4f: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00f56:    	add    rsp,0x50
  00f5a: 94 	movabs r13,0x5594d52dfa60
  00f64:    	test   rax,rax
  00f67:    	je     0xffffa890
:00064 %14 = %5
  00f6d:    	mov    rax,QWORD PTR [rbp-0x48]
  00f71: ff 	mov    QWORD PTR [rbp-0x90],rax
:00065 %13 = %14.call vy()                  [Planet]
:00066 
  00f78: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00f7f: 00 	test   rdi,0x7
  00f86:    	jne    0x3def0
  00f8c:    	cmp    DWORD PTR [rdi+0x4],0x25
  00f90:    	jne    0x3def0
  00f96: 12 	cmp    DWORD PTR [rip+0xffffffffffffc0cc],0x12        # 0xffffd069
  00f9d:    	jne    0x3def0
  00fa3:    	mov    esi,DWORD PTR [rip+0x6c0]        # 0x1669
  00fa9:    	cmp    esi,0xffffffff
  00fac:    	je     0x3df4f
  00fb2:    	cmp    esi,0x6
  00fb5:    	jge    0xfd6
  00fbb:    	xor    rax,rax
  00fbe:    	mov    ax,WORD PTR [rdi+0x2]
  00fc2:    	cmp    rax,0x3
  00fc6:    	jne    0xfd6
  00fcc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00fd1:    	jmp    0x1053
  00fd6:    	sub    rsp,0x40
  00fda:    	movq   QWORD PTR [rsp],xmm2
  00fdf:    	movq   QWORD PTR [rsp+0x8],xmm4
  00fe5:    	movq   QWORD PTR [rsp+0x10],xmm5
  00feb:    	movq   QWORD PTR [rsp+0x18],xmm6
  00ff1:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ff7: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00ffe: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01005: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0100c: 94 	movabs rax,0x5594d4e95d70
  01016:    	call   rax
  01018:    	movq   xmm2,QWORD PTR [rsp]
  0101d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01023:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01029:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0102f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01035: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0103c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01043: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0104a:    	add    rsp,0x40
  0104e:    	jmp    0x1053
  01053: ff 	mov    QWORD PTR [rbp-0x88],rax
:00068 %14 = %7 * %11                       [Float][Float]
  0105a:    	movq   xmm3,xmm5
  0105e:    	mulsd  xmm3,xmm8
:00069 %13 = %13 + %14                      [Float][Float]
  01063: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0106a: 00 	test   rdi,0x1
  01071:    	jne    0x3dfe4
  01077: 00 	test   rdi,0x2
  0107e:    	je     0x10bb
  01084:    	xorps  xmm11,xmm11
  01088: 00 	movabs rax,0x8000000000000002
  01092:    	cmp    rdi,rax
  01095:    	je     0x10ce
  0109b:    	mov    rax,rdi
  0109e:    	sar    rax,0x3f
  010a2:    	add    rax,0x2
  010a6:    	and    rdi,0xfffffffffffffffc
  010aa:    	or     rdi,rax
  010ad:    	rol    rdi,0x3d
  010b1:    	movq   xmm11,rdi
  010b6:    	jmp    0x10ce
  010bb:    	call   0xffffa8c9
  010c0:    	test   rax,rax
  010c3:    	je     0x3dfe4
  010c9:    	movq   xmm11,xmm0
  010ce:    	addsd  xmm11,xmm3
:00070 _ = %5.call vy=(%13; 1)              [Planet]
:00071 
  010d3:    	movq   xmm0,xmm11
  010d8:    	call   0xffffab00
  010dd: ff 	mov    QWORD PTR [rbp-0x88],rax
  010e4:    	mov    rdi,QWORD PTR [rbp-0x48]
  010e8: 00 	test   rdi,0x7
  010ef:    	jne    0x3e053
  010f5:    	cmp    DWORD PTR [rdi+0x4],0x25
  010f9:    	jne    0x3e053
  010ff: 12 	cmp    DWORD PTR [rip+0xffffffffffffbf63],0x12        # 0xffffd069
  01106:    	jne    0x3e053
  0110c:    	mov    esi,DWORD PTR [rip+0x55f]        # 0x1671
  01112:    	cmp    esi,0xffffffff
  01115:    	je     0x11e4
  0111b:    	cmp    esi,0x6
  0111e:    	jge    0x1146
  01124:    	xor    rax,rax
  01127:    	mov    ax,WORD PTR [rdi+0x2]
  0112b:    	cmp    rax,0x3
  0112f:    	jne    0x1146
  01135: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0113c:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01141:    	jmp    0x12ab
  01146:    	sub    rsp,0x50
  0114a:    	movq   QWORD PTR [rsp],xmm2
  0114f:    	movq   QWORD PTR [rsp+0x8],xmm3
  01155:    	movq   QWORD PTR [rsp+0x10],xmm4
  0115b:    	movq   QWORD PTR [rsp+0x18],xmm5
  01161:    	movq   QWORD PTR [rsp+0x20],xmm6
  01167:    	movq   QWORD PTR [rsp+0x28],xmm7
  0116d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01174: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0117b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01182: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01189: ff 	mov    rdx,QWORD PTR [rbp-0x88]
  01190: 94 	movabs rax,0x5594d4e95fe0
  0119a:    	call   rax
  0119c:    	movq   xmm2,QWORD PTR [rsp]
  011a1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  011a7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  011ad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  011b3:    	movq   xmm6,QWORD PTR [rsp+0x20]
  011b9:    	movq   xmm7,QWORD PTR [rsp+0x28]
  011bf: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  011c6: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  011cd: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  011d4: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  011db:    	add    rsp,0x50
  011df:    	jmp    0x12ab
  011e4:    	sub    rsp,0x50
  011e8:    	movq   QWORD PTR [rsp],xmm2
  011ed:    	movq   QWORD PTR [rsp+0x8],xmm3
  011f3:    	movq   QWORD PTR [rsp+0x10],xmm4
  011f9:    	movq   QWORD PTR [rsp+0x18],xmm5
  011ff:    	movq   QWORD PTR [rsp+0x20],xmm6
  01205:    	movq   QWORD PTR [rsp+0x28],xmm7
  0120b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01212: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01219: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01220: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01227:    	mov    rsi,rdi
  0122a: 00 	mov    rdx,0x65
  01231: ff 	mov    rcx,QWORD PTR [rbp-0x88]
  01238:    	mov    rdi,r12
  0123b: 00 	lea    r8,[rip+0x42b]        # 0x166d
  01242: 00 	lea    r9,[rip+0x428]        # 0x1671
  01249: 94 	movabs rax,0x5594d4efce60
  01253:    	call   rax
  01255:    	movq   xmm2,QWORD PTR [rsp]
  0125a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01260:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01266:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0126c:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01272:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01278: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0127f: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01286: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0128d: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01294:    	add    rsp,0x50
  01298: 94 	movabs r13,0x5594d52dfaf0
  012a2:    	test   rax,rax
  012a5:    	je     0xffffa890
:00073 %14 = %5
  012ab:    	mov    rax,QWORD PTR [rbp-0x48]
  012af: ff 	mov    QWORD PTR [rbp-0x90],rax
:00074 %13 = %14.call vz()                  [Planet]
:00075 
  012b6: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  012bd: 00 	test   rdi,0x7
  012c4:    	jne    0x3e0c2
  012ca:    	cmp    DWORD PTR [rdi+0x4],0x25
  012ce:    	jne    0x3e0c2
  012d4: 12 	cmp    DWORD PTR [rip+0xffffffffffffbd8e],0x12        # 0xffffd069
  012db:    	jne    0x3e0c2
  012e1:    	mov    esi,DWORD PTR [rip+0x392]        # 0x1679
  012e7:    	cmp    esi,0xffffffff
  012ea:    	je     0x3e121
  012f0:    	cmp    esi,0x6
  012f3:    	jge    0x1314
  012f9:    	xor    rax,rax
  012fc:    	mov    ax,WORD PTR [rdi+0x2]
  01300:    	cmp    rax,0x3
  01304:    	jne    0x1314
  0130a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0130f:    	jmp    0x1391
  01314:    	sub    rsp,0x40
  01318:    	movq   QWORD PTR [rsp],xmm2
  0131d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01323:    	movq   QWORD PTR [rsp+0x10],xmm5
  01329:    	movq   QWORD PTR [rsp+0x18],xmm6
  0132f:    	movq   QWORD PTR [rsp+0x20],xmm7
  01335: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0133c: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01343: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0134a: 94 	movabs rax,0x5594d4e95d70
  01354:    	call   rax
  01356:    	movq   xmm2,QWORD PTR [rsp]
  0135b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01361:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01367:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0136d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01373: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0137a: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01381: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01388:    	add    rsp,0x40
  0138c:    	jmp    0x1391
  01391: ff 	mov    QWORD PTR [rbp-0x88],rax
:00077 %14 = %8 * %11                       [Float][Float]
  01398:    	movq   xmm3,xmm6
  0139c:    	mulsd  xmm3,xmm8
:00078 %13 = %13 + %14                      [Float][Float]
  013a1: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  013a8: 00 	test   rdi,0x1
  013af:    	jne    0x3e1b6
  013b5: 00 	test   rdi,0x2
  013bc:    	je     0x13f9
  013c2:    	xorps  xmm11,xmm11
  013c6: 00 	movabs rax,0x8000000000000002
  013d0:    	cmp    rdi,rax
  013d3:    	je     0x140c
  013d9:    	mov    rax,rdi
  013dc:    	sar    rax,0x3f
  013e0:    	add    rax,0x2
  013e4:    	and    rdi,0xfffffffffffffffc
  013e8:    	or     rdi,rax
  013eb:    	rol    rdi,0x3d
  013ef:    	movq   xmm11,rdi
  013f4:    	jmp    0x140c
  013f9:    	call   0xffffa8c9
  013fe:    	test   rax,rax
  01401:    	je     0x3e1b6
  01407:    	movq   xmm11,xmm0
  0140c:    	addsd  xmm11,xmm3
:00079 _ = %5.call vz=(%13; 1)              [Planet]
:00080 
  01411:    	movq   xmm0,xmm11
  01416:    	call   0xffffab00
  0141b: ff 	mov    QWORD PTR [rbp-0x88],rax
  01422:    	mov    rdi,QWORD PTR [rbp-0x48]
  01426: 00 	test   rdi,0x7
  0142d:    	jne    0x3e225
  01433:    	cmp    DWORD PTR [rdi+0x4],0x25
  01437:    	jne    0x3e225
  0143d: 12 	cmp    DWORD PTR [rip+0xffffffffffffbc25],0x12        # 0xffffd069
  01444:    	jne    0x3e225
  0144a:    	mov    esi,DWORD PTR [rip+0x231]        # 0x1681
  01450:    	cmp    esi,0xffffffff
  01453:    	je     0x1522
  01459:    	cmp    esi,0x6
  0145c:    	jge    0x1484
  01462:    	xor    rax,rax
  01465:    	mov    ax,WORD PTR [rdi+0x2]
  01469:    	cmp    rax,0x3
  0146d:    	jne    0x1484
  01473: ff 	mov    rax,QWORD PTR [rbp-0x88]
  0147a:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0147f:    	jmp    0x15e9
  01484:    	sub    rsp,0x50
  01488:    	movq   QWORD PTR [rsp],xmm2
  0148d:    	movq   QWORD PTR [rsp+0x8],xmm3
  01493:    	movq   QWORD PTR [rsp+0x10],xmm4
  01499:    	movq   QWORD PTR [rsp+0x18],xmm5
  0149f:    	movq   QWORD PTR [rsp+0x20],xmm6
  014a5:    	movq   QWORD PTR [rsp+0x28],xmm7
  014ab: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014b2: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014b9: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  014c0: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  014c7: ff 	mov    rdx,QWORD PTR [rbp-0x88]
  014ce: 94 	movabs rax,0x5594d4e95fe0
  014d8:    	call   rax
  014da:    	movq   xmm2,QWORD PTR [rsp]
  014df:    	movq   xmm3,QWORD PTR [rsp+0x8]
  014e5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  014eb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  014f1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014f7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014fd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01504: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0150b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01512: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01519:    	add    rsp,0x50
  0151d:    	jmp    0x15e9
  01522:    	sub    rsp,0x50
  01526:    	movq   QWORD PTR [rsp],xmm2
  0152b:    	movq   QWORD PTR [rsp+0x8],xmm3
  01531:    	movq   QWORD PTR [rsp+0x10],xmm4
  01537:    	movq   QWORD PTR [rsp+0x18],xmm5
  0153d:    	movq   QWORD PTR [rsp+0x20],xmm6
  01543:    	movq   QWORD PTR [rsp+0x28],xmm7
  01549: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01550: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01557: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  0155e: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01565:    	mov    rsi,rdi
  01568: 00 	mov    rdx,0x66
  0156f: ff 	mov    rcx,QWORD PTR [rbp-0x88]
  01576:    	mov    rdi,r12
  01579: 00 	lea    r8,[rip+0xfd]        # 0x167d
  01580: 00 	lea    r9,[rip+0xfa]        # 0x1681
  01587: 94 	movabs rax,0x5594d4efce60
  01591:    	call   rax
  01593:    	movq   xmm2,QWORD PTR [rsp]
  01598:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0159e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015a4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015aa:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015b0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015b6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  015bd: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  015c4: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  015cb: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  015d2:    	add    rsp,0x50
  015d6: 94 	movabs r13,0x5594d52dfb80
  015e0:    	test   rax,rax
  015e3:    	je     0xffffa890
:00082 %4 = %4 + 1: i16                     [Integer][Integer]
  015e9:    	mov    rdi,QWORD PTR [rbp-0x40]
  015ed: 00 	test   rdi,0x1
  015f4:    	je     0x3e294
  015fa:    	add    rdi,0x2
  015fe:    	jo     0x3e294
  01604:    	mov    QWORD PTR [rbp-0x40],rdi
:00083 br =>:00000
  01608:    	jmp    0x3e312
:00084 loop_end
  0160d:    	jmp    0x3e303
    finished compile. elapsed:146.4Âµs
--> start partial compile: <unnamed> FuncId(44) start:[00001] bytecode:0x5594d52e2730
<-- compile finished. end:[00018]
offset:Pos(28208) code: 449 bytes  data: 71 bytes
:00001 loop_start counter=5 jit-addr=0000000000000000
:00002 %3 = dynvar(1, [%3])
  00000: mov    rax,QWORD PTR [rbp-0x8]
  00004: lea    rax,[rax+0x8]
  00008: mov    rax,QWORD PTR [rax-0x38]
  0000c: mov    QWORD PTR [rbp-0x38],rax
:00003 _%3 = %1 < %3                        [Integer][Integer]
:00004 condnotbr _%3 =>:00017
  00010: mov    rdi,QWORD PTR [rbp-0x28]
  00014: mov    rsi,QWORD PTR [rbp-0x38]
  00018: test   rdi,0x1
  0001f: je     0x3cd1f
  00025: test   rsi,0x1
  0002c: je     0x3cd1f
  00032: cmp    rdi,rsi
  00035: jge    0x1b4
:00005 %3 = const[BODIES]                   [[#<Planet:0x00007f5508000940 @vy=-0.0032783778168630668 @y=-0.00003278377816863067 @mass=39.47841760435743 @vx=-0.0003716796098974283 @x=-0.000003716796098974283 @vz=0.000023562722481366959 @z=2.3562722481366959e-7>, #<Planet:0x00007f5508000980 @vy=2.8156988981387065 @y=-1.1321630550460414 @mass=0.03769367487038949 @vx=0.5908488391821772 @x=4.847339930856543 @vz=-0.02488719128116714 @z=-0.10387091638393478>, #<Planet:0x00007f55080009c0 @vy=1.8236404735352375 @y=4.1430349688596579 @mass=0.011286326131968767 @vx=-1.0148533649892929 @x=8.333218184594687 @vz=0.00861323535682711 @z=-0.40343728476075316>, #<Planet:0x00007f5508000a00 @vy=0.8694752833109706 @y=-15.102456648865522 @mass=0.0017237240570597112 @vx=1.0821409847561863 @x=12.905190971986693 @vz=-0.010821379117708814 @z=-0.22341579268383283>, #<Planet:0x00007f5508000a40 @vy=0.5950734810190818 @y=-25.919314609987965 @mass=0.0020336868699246306 @vx=0.9788686976130451 @x=15.379697114850917 @vz=-0.034758553169444577 @z=0.17925877295037119>]]
  0003b: mov    rax,QWORD PTR [rip+0xffffffffffffb9ae]        # 0xffffb9f0
  00042: cmp    rax,QWORD PTR [rip+0x197]        # 0x1e0
  00049: jne    0x3cd3e
  0004f: mov    rax,QWORD PTR [rip+0x17a]        # 0x1d0
  00056: mov    QWORD PTR [rbp-0x38],rax
:00006 %2 = %3.[%1]
  0005a: mov    rdx,QWORD PTR [rbp-0x38]
  0005e: mov    rcx,QWORD PTR [rbp-0x28]
  00062: mov    rdi,rbx
  00065: mov    rsi,r12
  00068: movabs rax,0x5594d4eeecb0
  00072: call   rax
  00074: movabs r13,0x5594d52e27a0
  0007e: test   rax,rax
  00081: je     0xffff920b
  00087: mov    QWORD PTR [rbp-0x30],rax
:00007 %3 = %2
  0008b: mov    rax,QWORD PTR [rbp-0x30]
  0008f: mov    QWORD PTR [rbp-0x38],rax
:00008 %4 = const[BODIES]                   [[#<Planet:0x00007f5508000940 @vy=-0.0032783778168630668 @y=-0.00003278377816863067 @mass=39.47841760435743 @vx=-0.0003716796098974283 @x=-0.000003716796098974283 @vz=0.000023562722481366959 @z=2.3562722481366959e-7>, #<Planet:0x00007f5508000980 @vy=2.8156988981387065 @y=-1.1321630550460414 @mass=0.03769367487038949 @vx=0.5908488391821772 @x=4.847339930856543 @vz=-0.02488719128116714 @z=-0.10387091638393478>, #<Planet:0x00007f55080009c0 @vy=1.8236404735352375 @y=4.1430349688596579 @mass=0.011286326131968767 @vx=-1.0148533649892929 @x=8.333218184594687 @vz=0.00861323535682711 @z=-0.40343728476075316>, #<Planet:0x00007f5508000a00 @vy=0.8694752833109706 @y=-15.102456648865522 @mass=0.0017237240570597112 @vx=1.0821409847561863 @x=12.905190971986693 @vz=-0.010821379117708814 @z=-0.22341579268383283>, #<Planet:0x00007f5508000a40 @vy=0.5950734810190818 @y=-25.919314609987965 @mass=0.0020336868699246306 @vx=0.9788686976130451 @x=15.379697114850917 @vz=-0.034758553169444577 @z=0.17925877295037119>]]
  00093: mov    rax,QWORD PTR [rip+0xffffffffffffb956]        # 0xffffb9f0
  0009a: cmp    rax,QWORD PTR [rip+0x15f]        # 0x200
  000a1: jne    0x3cd84
  000a7: mov    rax,QWORD PTR [rip+0x142]        # 0x1f0
  000ae: mov    QWORD PTR [rbp-0x40],rax
:00009 %5 = dynvar(1, [%3])
  000b2: mov    rax,QWORD PTR [rbp-0x8]
  000b6: lea    rax,[rax+0x8]
  000ba: mov    rax,QWORD PTR [rax-0x38]
  000be: mov    QWORD PTR [rbp-0x48],rax
:00010 %6 = dynvar(1, [%4])
  000c2: mov    rax,QWORD PTR [rbp-0x8]
  000c6: lea    rax,[rax+0x8]
  000ca: mov    rax,QWORD PTR [rax-0x40]
  000ce: mov    QWORD PTR [rbp-0x50],rax
:00011 %7 = %1 + 1: i16                     [Integer][Integer]
  000d2: mov    rdi,QWORD PTR [rbp-0x28]
  000d6: test   rdi,0x1
  000dd: je     0x3cdca
  000e3: add    rdi,0x2
  000e7: jo     0x3cdca
  000ed: mov    QWORD PTR [rbp-0x58],rdi
:00012 _ = %3.call move_from_i(%4; 4)       [Planet]
:00013 
  000f1: mov    rdi,QWORD PTR [rbp-0x38]
  000f5: test   rdi,0x7
  000fc: jne    0x3cdd9
  00102: cmp    DWORD PTR [rdi+0x4],0x25
  00106: jne    0x3cdd9
  0010c: cmp    DWORD PTR [rip+0xffffffffffffb8d1],0x12        # 0xffffb9e4
  00113: jne    0x3cdd9
  00119: mov    rax,QWORD PTR [rbp-0x38]
  0011d: mov    QWORD PTR [rsp-0x30],rax
  00122: mov    QWORD PTR [rsp-0x18],0x0
  0012b: mov    rax,QWORD PTR [rbp-0x40]
  0012f: mov    QWORD PTR [rsp-0x38],rax
  00134: mov    rax,QWORD PTR [rbp-0x48]
  00138: mov    QWORD PTR [rsp-0x40],rax
  0013d: mov    rax,QWORD PTR [rbp-0x50]
  00141: mov    QWORD PTR [rsp-0x48],rax
  00146: mov    rax,QWORD PTR [rbp-0x58]
  0014a: mov    QWORD PTR [rsp-0x50],rax
  0014f: mov    QWORD PTR [rsp-0x28],0x0
  00158: movabs rax,0x100000002e
  00162: mov    QWORD PTR [rsp-0x20],rax
  00167: movabs r13,0x5594d52df670
  00171: mov    rdi,0x4
  00178: call   0xffffe925
  0017d: movabs r13,0x5594d52e2810
  00187: test   rax,rax
  0018a: je     0xffff920b
:00015 %1 = %1 + 1: i16                     [Integer][Integer]
  00190: mov    rdi,QWORD PTR [rbp-0x28]
  00194: test   rdi,0x1
  0019b: je     0x3cde8
  001a1: add    rdi,0x2
  001a5: jo     0x3cde8
  001ab: mov    QWORD PTR [rbp-0x28],rdi
:00016 br =>:00001
  001af: jmp    0x3ce06
:00017 %3 = nil
  001b4: mov    QWORD PTR [rbp-0x38],0x4
:00018 loop_end
  001bc: jmp    0x3cdf7
    finished compile. elapsed:78.6Âµs
--> start whole compile: move_from_i FuncId(46) start:[00000] bytecode:0x5594d52df670
offset:Pos(28728) code: 7024 bytes  data: 104 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004: 00 	sub    rsp,0xa0
  0000b: 00 	mov    rax,0x4
  00012:    	mov    QWORD PTR [rbp-0x48],rax
  00016:    	mov    QWORD PTR [rbp-0x50],rax
  0001a:    	mov    QWORD PTR [rbp-0x58],rax
  0001e:    	mov    QWORD PTR [rbp-0x60],rax
  00022:    	mov    QWORD PTR [rbp-0x68],rax
  00026:    	mov    QWORD PTR [rbp-0x70],rax
  0002a:    	mov    QWORD PTR [rbp-0x78],rax
  0002e:    	mov    QWORD PTR [rbp-0x80],rax
  00032: ff 	mov    QWORD PTR [rbp-0x88],rax
  00039: ff 	mov    QWORD PTR [rbp-0x90],rax
  00040: ff 	mov    QWORD PTR [rbp-0x98],rax
:00000 loop_start counter=5 jit-addr=00007f5507e057ab
:00001 _%13 = %4 < %2                       [Integer][Integer]
:00002 condnotbr _%13 =>:00084
  00047:    	mov    rdi,QWORD PTR [rbp-0x40]
  0004b:    	mov    rsi,QWORD PTR [rbp-0x30]
  0004f: 00 	test   rdi,0x1
  00056:    	je     0x3cc30
  0005c: 00 	test   rsi,0x1
  00063:    	je     0x3cc30
  00069:    	cmp    rdi,rsi
  0006c:    	jge    0x1654
:00003 %5 = %1.[%4]
  00072:    	mov    rdx,QWORD PTR [rbp-0x28]
  00076:    	mov    rcx,QWORD PTR [rbp-0x40]
  0007a:    	mov    rdi,rbx
  0007d:    	mov    rsi,r12
  00080: 94 	movabs rax,0x5594d4eeecb0
  0008a:    	call   rax
  0008c: 94 	movabs r13,0x5594d52df6b0
  00096:    	test   rax,rax
  00099:    	je     0xffff9003
  0009f:    	mov    QWORD PTR [rbp-0x48],rax
:00004 %13 = @x: Planet[IvarId(0)]
  000a3:    	mov    rdi,QWORD PTR [rbp-0x20]
  000a7: 00 	test   rdi,0x7
  000ae:    	jne    0x3cc65
  000b4:    	cmp    DWORD PTR [rdi+0x4],0x25
  000b8:    	jne    0x3cc65
  000be:    	xor    rax,rax
  000c1:    	mov    ax,WORD PTR [rdi+0x2]
  000c5:    	cmp    rax,0x3
  000c9:    	jne    0x3cc4f
  000cf:    	mov    rax,QWORD PTR [rdi+0x10]
  000d3: ff 	mov    QWORD PTR [rbp-0x88],rax
:00005 %15 = %5
  000da:    	mov    rax,QWORD PTR [rbp-0x48]
  000de: ff 	mov    QWORD PTR [rbp-0x98],rax
:00006 %14 = %15.call x()                   [Planet]
:00007 
  000e5: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  000ec: 00 	test   rdi,0x7
  000f3:    	jne    0x3cc80
  000f9:    	cmp    DWORD PTR [rdi+0x4],0x25
  000fd:    	jne    0x3cc80
  00103: 12 	cmp    DWORD PTR [rip+0xffffffffffffb6d2],0x12        # 0xffffb7dc
  0010a:    	jne    0x3cc80
  00110:    	mov    esi,DWORD PTR [rip+0x1a5e]        # 0x1b74
  00116:    	cmp    esi,0xffffffff
  00119:    	je     0x3cc8f
  0011f:    	cmp    esi,0x6
  00122:    	jge    0x143
  00128:    	xor    rax,rax
  0012b:    	mov    ax,WORD PTR [rdi+0x2]
  0012f:    	cmp    rax,0x3
  00133:    	jne    0x143
  00139:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0013e:    	jmp    0x154
  00143: 94 	movabs rax,0x5594d4e95d70
  0014d:    	call   rax
  0014f:    	jmp    0x154
  00154: ff 	mov    QWORD PTR [rbp-0x90],rax
:00009 %6 = %13 - %14                       [Float][Float]
  0015b: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00162: 00 	test   rdi,0x1
  00169:    	jne    0x3ccb8
  0016f: 00 	test   rdi,0x2
  00176:    	je     0x1b2
  0017c:    	xorps  xmm2,xmm2
  0017f: 00 	movabs rax,0x8000000000000002
  00189:    	cmp    rdi,rax
  0018c:    	je     0x1c4
  00192:    	mov    rax,rdi
  00195:    	sar    rax,0x3f
  00199:    	add    rax,0x2
  0019d:    	and    rdi,0xfffffffffffffffc
  001a1:    	or     rdi,rax
  001a4:    	rol    rdi,0x3d
  001a8:    	movq   xmm2,rdi
  001ad:    	jmp    0x1c4
  001b2:    	call   0xffff903c
  001b7:    	test   rax,rax
  001ba:    	je     0x3ccb8
  001c0:    	movq   xmm2,xmm0
  001c4: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  001cb: 00 	test   rdi,0x1
  001d2:    	jne    0x3ccc7
  001d8: 00 	test   rdi,0x2
  001df:    	je     0x21b
  001e5:    	xorps  xmm3,xmm3
  001e8: 00 	movabs rax,0x8000000000000002
  001f2:    	cmp    rdi,rax
  001f5:    	je     0x22d
  001fb:    	mov    rax,rdi
  001fe:    	sar    rax,0x3f
  00202:    	add    rax,0x2
  00206:    	and    rdi,0xfffffffffffffffc
  0020a:    	or     rdi,rax
  0020d:    	rol    rdi,0x3d
  00211:    	movq   xmm3,rdi
  00216:    	jmp    0x22d
  0021b:    	call   0xffff903c
  00220:    	test   rax,rax
  00223:    	je     0x3ccc7
  00229:    	movq   xmm3,xmm0
  0022d:    	movq   xmm4,xmm2
  00231:    	subsd  xmm4,xmm3
:00010 %13 = @y: Planet[IvarId(1)]
  00235:    	mov    rdi,QWORD PTR [rbp-0x20]
  00239: 00 	test   rdi,0x7
  00240:    	jne    0x3cd0a
  00246:    	cmp    DWORD PTR [rdi+0x4],0x25
  0024a:    	jne    0x3cd0a
  00250:    	xor    rax,rax
  00253:    	mov    ax,WORD PTR [rdi+0x2]
  00257:    	cmp    rax,0x3
  0025b:    	jne    0x3ccd6
  00261:    	mov    rax,QWORD PTR [rdi+0x18]
  00265: ff 	mov    QWORD PTR [rbp-0x88],rax
:00011 %15 = %5
  0026c:    	mov    rax,QWORD PTR [rbp-0x48]
  00270: ff 	mov    QWORD PTR [rbp-0x98],rax
:00012 %14 = %15.call y()                   [Planet]
:00013 
  00277: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  0027e: 00 	test   rdi,0x7
  00285:    	jne    0x3cd43
  0028b:    	cmp    DWORD PTR [rdi+0x4],0x25
  0028f:    	jne    0x3cd43
  00295: 12 	cmp    DWORD PTR [rip+0xffffffffffffb540],0x12        # 0xffffb7dc
  0029c:    	jne    0x3cd43
  002a2:    	mov    esi,DWORD PTR [rip+0x18d4]        # 0x1b7c
  002a8:    	cmp    esi,0xffffffff
  002ab:    	je     0x3cd5f
  002b1:    	cmp    esi,0x6
  002b4:    	jge    0x2d5
  002ba:    	xor    rax,rax
  002bd:    	mov    ax,WORD PTR [rdi+0x2]
  002c1:    	cmp    rax,0x3
  002c5:    	jne    0x2d5
  002cb:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  002d0:    	jmp    0x2f8
  002d5:    	sub    rsp,0x10
  002d9:    	movq   QWORD PTR [rsp],xmm4
  002de: 94 	movabs rax,0x5594d4e95d70
  002e8:    	call   rax
  002ea:    	movq   xmm4,QWORD PTR [rsp]
  002ef:    	add    rsp,0x10
  002f3:    	jmp    0x2f8
  002f8: ff 	mov    QWORD PTR [rbp-0x90],rax
:00015 %7 = %13 - %14                       [Float][Float]
  002ff: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00306: 00 	test   rdi,0x1
  0030d:    	jne    0x3cd9a
  00313: 00 	test   rdi,0x2
  0031a:    	je     0x356
  00320:    	xorps  xmm2,xmm2
  00323: 00 	movabs rax,0x8000000000000002
  0032d:    	cmp    rdi,rax
  00330:    	je     0x368
  00336:    	mov    rax,rdi
  00339:    	sar    rax,0x3f
  0033d:    	add    rax,0x2
  00341:    	and    rdi,0xfffffffffffffffc
  00345:    	or     rdi,rax
  00348:    	rol    rdi,0x3d
  0034c:    	movq   xmm2,rdi
  00351:    	jmp    0x368
  00356:    	call   0xffff903c
  0035b:    	test   rax,rax
  0035e:    	je     0x3cd9a
  00364:    	movq   xmm2,xmm0
  00368: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0036f: 00 	test   rdi,0x1
  00376:    	jne    0x3cdb6
  0037c: 00 	test   rdi,0x2
  00383:    	je     0x3bf
  00389:    	xorps  xmm3,xmm3
  0038c: 00 	movabs rax,0x8000000000000002
  00396:    	cmp    rdi,rax
  00399:    	je     0x3d1
  0039f:    	mov    rax,rdi
  003a2:    	sar    rax,0x3f
  003a6:    	add    rax,0x2
  003aa:    	and    rdi,0xfffffffffffffffc
  003ae:    	or     rdi,rax
  003b1:    	rol    rdi,0x3d
  003b5:    	movq   xmm3,rdi
  003ba:    	jmp    0x3d1
  003bf:    	call   0xffff903c
  003c4:    	test   rax,rax
  003c7:    	je     0x3cdb6
  003cd:    	movq   xmm3,xmm0
  003d1:    	movq   xmm5,xmm2
  003d5:    	subsd  xmm5,xmm3
:00016 %13 = @z: Planet[IvarId(2)]
  003d9:    	mov    rdi,QWORD PTR [rbp-0x20]
  003dd: 00 	test   rdi,0x7
  003e4:    	jne    0x3ce12
  003ea:    	cmp    DWORD PTR [rdi+0x4],0x25
  003ee:    	jne    0x3ce12
  003f4:    	xor    rax,rax
  003f7:    	mov    ax,WORD PTR [rdi+0x2]
  003fb:    	cmp    rax,0x3
  003ff:    	jne    0x3cdd2
  00405:    	mov    rax,QWORD PTR [rdi+0x20]
  00409: ff 	mov    QWORD PTR [rbp-0x88],rax
:00017 %15 = %5
  00410:    	mov    rax,QWORD PTR [rbp-0x48]
  00414: ff 	mov    QWORD PTR [rbp-0x98],rax
:00018 %14 = %15.call z()                   [Planet]
:00019 
  0041b: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00422: 00 	test   rdi,0x7
  00429:    	jne    0x3ce57
  0042f:    	cmp    DWORD PTR [rdi+0x4],0x25
  00433:    	jne    0x3ce57
  00439: 12 	cmp    DWORD PTR [rip+0xffffffffffffb39c],0x12        # 0xffffb7dc
  00440:    	jne    0x3ce57
  00446:    	mov    esi,DWORD PTR [rip+0x1738]        # 0x1b84
  0044c:    	cmp    esi,0xffffffff
  0044f:    	je     0x3ce80
  00455:    	cmp    esi,0x6
  00458:    	jge    0x479
  0045e:    	xor    rax,rax
  00461:    	mov    ax,WORD PTR [rdi+0x2]
  00465:    	cmp    rax,0x3
  00469:    	jne    0x479
  0046f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00474:    	jmp    0x4a8
  00479:    	sub    rsp,0x10
  0047d:    	movq   QWORD PTR [rsp],xmm4
  00482:    	movq   QWORD PTR [rsp+0x8],xmm5
  00488: 94 	movabs rax,0x5594d4e95d70
  00492:    	call   rax
  00494:    	movq   xmm4,QWORD PTR [rsp]
  00499:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0049f:    	add    rsp,0x10
  004a3:    	jmp    0x4a8
  004a8: ff 	mov    QWORD PTR [rbp-0x90],rax
:00021 %8 = %13 - %14                       [Float][Float]
  004af: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  004b6: 00 	test   rdi,0x1
  004bd:    	jne    0x3cec7
  004c3: 00 	test   rdi,0x2
  004ca:    	je     0x506
  004d0:    	xorps  xmm2,xmm2
  004d3: 00 	movabs rax,0x8000000000000002
  004dd:    	cmp    rdi,rax
  004e0:    	je     0x518
  004e6:    	mov    rax,rdi
  004e9:    	sar    rax,0x3f
  004ed:    	add    rax,0x2
  004f1:    	and    rdi,0xfffffffffffffffc
  004f5:    	or     rdi,rax
  004f8:    	rol    rdi,0x3d
  004fc:    	movq   xmm2,rdi
  00501:    	jmp    0x518
  00506:    	call   0xffff903c
  0050b:    	test   rax,rax
  0050e:    	je     0x3cec7
  00514:    	movq   xmm2,xmm0
  00518: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0051f: 00 	test   rdi,0x1
  00526:    	jne    0x3cef0
  0052c: 00 	test   rdi,0x2
  00533:    	je     0x56f
  00539:    	xorps  xmm3,xmm3
  0053c: 00 	movabs rax,0x8000000000000002
  00546:    	cmp    rdi,rax
  00549:    	je     0x581
  0054f:    	mov    rax,rdi
  00552:    	sar    rax,0x3f
  00556:    	add    rax,0x2
  0055a:    	and    rdi,0xfffffffffffffffc
  0055e:    	or     rdi,rax
  00561:    	rol    rdi,0x3d
  00565:    	movq   xmm3,rdi
  0056a:    	jmp    0x581
  0056f:    	call   0xffff903c
  00574:    	test   rax,rax
  00577:    	je     0x3cef0
  0057d:    	movq   xmm3,xmm0
  00581:    	movq   xmm6,xmm2
  00585:    	subsd  xmm6,xmm3
:00022 %13 = const[Math]                    [Math]
  00589: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffb258]        # 0xffffb7e8
  00590: 00 	cmp    rax,QWORD PTR [rip+0x1601]        # 0x1b98
  00597:    	jne    0x3cf19
  0059d: 00 	mov    rax,QWORD PTR [rip+0x15e4]        # 0x1b88
  005a4: ff 	mov    QWORD PTR [rbp-0x88],rax
:00023 %14 = %6 * %6                        [Float][Float]
  005ab:    	movq   xmm2,xmm4
  005af:    	mulsd  xmm2,xmm4
:00024 %15 = %7 * %7                        [Float][Float]
  005b3:    	movq   xmm3,xmm5
  005b7:    	mulsd  xmm3,xmm5
:00025 %14 = %14 + %15                      [Float][Float]
  005bb:    	addsd  xmm2,xmm3
:00026 %15 = %8 * %8                        [Float][Float]
  005bf:    	movq   xmm3,xmm6
  005c3:    	mulsd  xmm3,xmm6
:00027 %14 = %14 + %15                      [Float][Float]
  005c7:    	addsd  xmm2,xmm3
:00028 %9 = %13.call sqrt(%14; 1)           [#<Class:Math>]
:00029 
  005cb:    	movq   xmm0,xmm2
  005cf:    	call   0xffff9273
  005d4: ff 	mov    QWORD PTR [rbp-0x90],rax
  005db: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  005e2: 00 	test   rdi,0x7
  005e9:    	jne    0x3cf95
  005ef:    	cmp    DWORD PTR [rdi+0x4],0x20
  005f3:    	jne    0x3cf95
  005f9: 12 	cmp    DWORD PTR [rip+0xffffffffffffb1dc],0x12        # 0xffffb7dc
  00600:    	jne    0x3cf95
  00606: 00 	mov    r9,0x0
  0060d:    	mov    rdx,rdi
  00610:    	mov    rdi,rbx
  00613:    	mov    rsi,r12
  00616: ff 	lea    rcx,[rbp-0x90]
  0061d: 00 	mov    r8,0x1
  00624:    	call   0x3cfdb
  00629: 94 	movabs r13,0x5594d52df850
  00633:    	test   rax,rax
  00636:    	je     0xffff9003
  0063c:    	mov    QWORD PTR [rbp-0x68],rax
:00031 %13 = %9 * %9                        [Float][Float]
  00640:    	mov    rdi,QWORD PTR [rbp-0x68]
  00644: 00 	test   rdi,0x1
  0064b:    	jne    0x3d04d
  00651: 00 	test   rdi,0x2
  00658:    	je     0x694
  0065e:    	xorps  xmm7,xmm7
  00661: 00 	movabs rax,0x8000000000000002
  0066b:    	cmp    rdi,rax
  0066e:    	je     0x6a6
  00674:    	mov    rax,rdi
  00677:    	sar    rax,0x3f
  0067b:    	add    rax,0x2
  0067f:    	and    rdi,0xfffffffffffffffc
  00683:    	or     rdi,rax
  00686:    	rol    rdi,0x3d
  0068a:    	movq   xmm7,rdi
  0068f:    	jmp    0x6a6
  00694:    	call   0xffff903c
  00699:    	test   rax,rax
  0069c:    	je     0x3d04d
  006a2:    	movq   xmm7,xmm0
  006a6:    	movq   xmm8,xmm7
  006ab:    	mulsd  xmm8,xmm7
:00032 %13 = %13 * %9                       [Float][Float]
  006b0:    	mulsd  xmm8,xmm7
:00033 %10 = %3 / %13                       [Float][Float]
  006b5:    	mov    rdi,QWORD PTR [rbp-0x38]
  006b9: 00 	test   rdi,0x1
  006c0:    	jne    0x3d093
  006c6: 00 	test   rdi,0x2
  006cd:    	je     0x70a
  006d3:    	xorps  xmm9,xmm9
  006d7: 00 	movabs rax,0x8000000000000002
  006e1:    	cmp    rdi,rax
  006e4:    	je     0x71d
  006ea:    	mov    rax,rdi
  006ed:    	sar    rax,0x3f
  006f1:    	add    rax,0x2
  006f5:    	and    rdi,0xfffffffffffffffc
  006f9:    	or     rdi,rax
  006fc:    	rol    rdi,0x3d
  00700:    	movq   xmm9,rdi
  00705:    	jmp    0x71d
  0070a:    	call   0xffff903c
  0070f:    	test   rax,rax
  00712:    	je     0x3d093
  00718:    	movq   xmm9,xmm0
  0071d:    	movq   xmm10,xmm9
  00722:    	movq   rax,xmm8
  00727:    	test   rax,rax
  0072a:    	je     0xffff9028
  00730:    	divsd  xmm10,xmm8
:00034 %13 = @mass: Planet[IvarId(6)]
  00735:    	mov    rdi,QWORD PTR [rbp-0x20]
  00739: 00 	test   rdi,0x7
  00740:    	jne    0x3d0ea
  00746:    	cmp    DWORD PTR [rdi+0x4],0x25
  0074a:    	jne    0x3d0ea
  00750:    	sub    rsp,0x40
  00754:    	movq   QWORD PTR [rsp],xmm2
  00759:    	movq   QWORD PTR [rsp+0x8],xmm3
  0075f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00765:    	movq   QWORD PTR [rsp+0x18],xmm5
  0076b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00771:    	movq   QWORD PTR [rsp+0x28],xmm7
  00777: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0077e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00785:    	mov    esi,0x6
  0078a: 94 	movabs rax,0x5594d4e95d70
  00794:    	call   rax
  00796:    	movq   xmm2,QWORD PTR [rsp]
  0079b:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007a1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007a7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007ad:    	movq   xmm6,QWORD PTR [rsp+0x20]
  007b3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  007b9: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  007c0: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  007c7:    	add    rsp,0x40
  007cb: ff 	mov    QWORD PTR [rbp-0x88],rax
:00035 %13 = %13 * %10                      [Float][Float]
  007d2: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  007d9: 00 	test   rdi,0x1
  007e0:    	jne    0x3d16f
  007e6: 00 	test   rdi,0x2
  007ed:    	je     0x82a
  007f3:    	xorps  xmm8,xmm8
  007f7: 00 	movabs rax,0x8000000000000002
  00801:    	cmp    rdi,rax
  00804:    	je     0x83d
  0080a:    	mov    rax,rdi
  0080d:    	sar    rax,0x3f
  00811:    	add    rax,0x2
  00815:    	and    rdi,0xfffffffffffffffc
  00819:    	or     rdi,rax
  0081c:    	rol    rdi,0x3d
  00820:    	movq   xmm8,rdi
  00825:    	jmp    0x83d
  0082a:    	call   0xffff903c
  0082f:    	test   rax,rax
  00832:    	je     0x3d16f
  00838:    	movq   xmm8,xmm0
  0083d:    	mulsd  xmm8,xmm10
:00036 %15 = %5
  00842:    	mov    rax,QWORD PTR [rbp-0x48]
  00846: ff 	mov    QWORD PTR [rbp-0x98],rax
:00037 %14 = %15.call mass()                [Planet]
:00038 
  0084d: ff 	mov    rdi,QWORD PTR [rbp-0x98]
  00854: 00 	test   rdi,0x7
  0085b:    	jne    0x3d1c3
  00861:    	cmp    DWORD PTR [rdi+0x4],0x25
  00865:    	jne    0x3d1c3
  0086b: 12 	cmp    DWORD PTR [rip+0xffffffffffffaf6a],0x12        # 0xffffb7dc
  00872:    	jne    0x3d1c3
  00878:    	mov    esi,DWORD PTR [rip+0x1326]        # 0x1ba4
  0087e:    	cmp    esi,0xffffffff
  00881:    	je     0x3d218
  00887:    	cmp    esi,0x6
  0088a:    	jge    0x8ab
  00890:    	xor    rax,rax
  00893:    	mov    ax,WORD PTR [rdi+0x2]
  00897:    	cmp    rax,0x3
  0089b:    	jne    0x8ab
  008a1:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  008a6:    	jmp    0x91c
  008ab:    	sub    rsp,0x40
  008af:    	movq   QWORD PTR [rsp],xmm4
  008b4:    	movq   QWORD PTR [rsp+0x8],xmm5
  008ba:    	movq   QWORD PTR [rsp+0x10],xmm6
  008c0:    	movq   QWORD PTR [rsp+0x18],xmm7
  008c6: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  008cd: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  008d4: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  008db: 94 	movabs rax,0x5594d4e95d70
  008e5:    	call   rax
  008e7:    	movq   xmm4,QWORD PTR [rsp]
  008ec:    	movq   xmm5,QWORD PTR [rsp+0x8]
  008f2:    	movq   xmm6,QWORD PTR [rsp+0x10]
  008f8:    	movq   xmm7,QWORD PTR [rsp+0x18]
  008fe: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00905: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0090c: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  00913:    	add    rsp,0x40
  00917:    	jmp    0x91c
  0091c: ff 	mov    QWORD PTR [rbp-0x90],rax
:00040 %14 = %14 * %10                      [Float][Float]
  00923: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0092a: 00 	test   rdi,0x1
  00931:    	jne    0x3d2a1
  00937: 00 	test   rdi,0x2
  0093e:    	je     0x97a
  00944:    	xorps  xmm2,xmm2
  00947: 00 	movabs rax,0x8000000000000002
  00951:    	cmp    rdi,rax
  00954:    	je     0x98c
  0095a:    	mov    rax,rdi
  0095d:    	sar    rax,0x3f
  00961:    	add    rax,0x2
  00965:    	and    rdi,0xfffffffffffffffc
  00969:    	or     rdi,rax
  0096c:    	rol    rdi,0x3d
  00970:    	movq   xmm2,rdi
  00975:    	jmp    0x98c
  0097a:    	call   0xffff903c
  0097f:    	test   rax,rax
  00982:    	je     0x3d2a1
  00988:    	movq   xmm2,xmm0
  0098c:    	mulsd  xmm2,xmm10
:00041 %11 = %13
:00042 %12 = %14
:00043 %13 = @vx: Planet[IvarId(3)]
  00991:    	mov    rdi,QWORD PTR [rbp-0x20]
  00995: 00 	test   rdi,0x7
  0099c:    	jne    0x3d378
  009a2:    	cmp    DWORD PTR [rdi+0x4],0x25
  009a6:    	jne    0x3d378
  009ac:    	xor    rax,rax
  009af:    	mov    ax,WORD PTR [rdi+0x2]
  009b3:    	cmp    rax,0x3
  009b7:    	jne    0x3d2f6
  009bd:    	mov    rax,QWORD PTR [rdi+0x28]
  009c1: ff 	mov    QWORD PTR [rbp-0x88],rax
:00044 %14 = %6 * %12                       [Float][Float]
  009c8:    	movq   xmm3,xmm4
  009cc:    	mulsd  xmm3,xmm2
:00045 %13 = %13 - %14                      [Float][Float]
  009d0: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  009d7: 00 	test   rdi,0x1
  009de:    	jne    0x3d3ff
  009e4: 00 	test   rdi,0x2
  009eb:    	je     0xa28
  009f1:    	xorps  xmm11,xmm11
  009f5: 00 	movabs rax,0x8000000000000002
  009ff:    	cmp    rdi,rax
  00a02:    	je     0xa3b
  00a08:    	mov    rax,rdi
  00a0b:    	sar    rax,0x3f
  00a0f:    	add    rax,0x2
  00a13:    	and    rdi,0xfffffffffffffffc
  00a17:    	or     rdi,rax
  00a1a:    	rol    rdi,0x3d
  00a1e:    	movq   xmm11,rdi
  00a23:    	jmp    0xa3b
  00a28:    	call   0xffff903c
  00a2d:    	test   rax,rax
  00a30:    	je     0x3d3ff
  00a36:    	movq   xmm11,xmm0
  00a3b:    	subsd  xmm11,xmm3
:00046 @vx: Planet[IvarId(3)] = %13
  00a40:    	movq   xmm0,xmm11
  00a45:    	call   0xffff9273
  00a4a: ff 	mov    QWORD PTR [rbp-0x88],rax
  00a51:    	mov    rdi,QWORD PTR [rbp-0x20]
  00a55: 00 	test   rdi,0x7
  00a5c:    	jne    0x3d511
  00a62:    	cmp    DWORD PTR [rdi+0x4],0x25
  00a66:    	jne    0x3d511
  00a6c:    	xor    rax,rax
  00a6f:    	mov    ax,WORD PTR [rdi+0x2]
  00a73:    	cmp    rax,0x3
  00a77:    	jne    0x3d46e
  00a7d: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00a84:    	mov    QWORD PTR [rdi+0x28],rax
:00047 %13 = @vy: Planet[IvarId(4)]
  00a88:    	mov    rdi,QWORD PTR [rbp-0x20]
  00a8c: 00 	test   rdi,0x7
  00a93:    	jne    0x3d65d
  00a99:    	cmp    DWORD PTR [rdi+0x4],0x25
  00a9d:    	jne    0x3d65d
  00aa3:    	xor    rax,rax
  00aa6:    	mov    ax,WORD PTR [rdi+0x2]
  00aaa:    	cmp    rax,0x3
  00aae:    	jne    0x3d5cf
  00ab4:    	mov    rax,QWORD PTR [rdi+0x30]
  00ab8: ff 	mov    QWORD PTR [rbp-0x88],rax
:00048 %14 = %7 * %12                       [Float][Float]
  00abf:    	movq   xmm3,xmm5
  00ac3:    	mulsd  xmm3,xmm2
:00049 %13 = %13 - %14                      [Float][Float]
  00ac7: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00ace: 00 	test   rdi,0x1
  00ad5:    	jne    0x3d6f0
  00adb: 00 	test   rdi,0x2
  00ae2:    	je     0xb1f
  00ae8:    	xorps  xmm11,xmm11
  00aec: 00 	movabs rax,0x8000000000000002
  00af6:    	cmp    rdi,rax
  00af9:    	je     0xb32
  00aff:    	mov    rax,rdi
  00b02:    	sar    rax,0x3f
  00b06:    	add    rax,0x2
  00b0a:    	and    rdi,0xfffffffffffffffc
  00b0e:    	or     rdi,rax
  00b11:    	rol    rdi,0x3d
  00b15:    	movq   xmm11,rdi
  00b1a:    	jmp    0xb32
  00b1f:    	call   0xffff903c
  00b24:    	test   rax,rax
  00b27:    	je     0x3d6f0
  00b2d:    	movq   xmm11,xmm0
  00b32:    	subsd  xmm11,xmm3
:00050 @vy: Planet[IvarId(4)] = %13
  00b37:    	movq   xmm0,xmm11
  00b3c:    	call   0xffff9273
  00b41: ff 	mov    QWORD PTR [rbp-0x88],rax
  00b48:    	mov    rdi,QWORD PTR [rbp-0x20]
  00b4c: 00 	test   rdi,0x7
  00b53:    	jne    0x3d802
  00b59:    	cmp    DWORD PTR [rdi+0x4],0x25
  00b5d:    	jne    0x3d802
  00b63:    	xor    rax,rax
  00b66:    	mov    ax,WORD PTR [rdi+0x2]
  00b6a:    	cmp    rax,0x3
  00b6e:    	jne    0x3d75f
  00b74: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00b7b:    	mov    QWORD PTR [rdi+0x30],rax
:00051 %13 = @vz: Planet[IvarId(5)]
  00b7f:    	mov    rdi,QWORD PTR [rbp-0x20]
  00b83: 00 	test   rdi,0x7
  00b8a:    	jne    0x3d94e
  00b90:    	cmp    DWORD PTR [rdi+0x4],0x25
  00b94:    	jne    0x3d94e
  00b9a:    	xor    rax,rax
  00b9d:    	mov    ax,WORD PTR [rdi+0x2]
  00ba1:    	cmp    rax,0x3
  00ba5:    	jne    0x3d8c0
  00bab:    	mov    rax,QWORD PTR [rdi+0x38]
  00baf: ff 	mov    QWORD PTR [rbp-0x88],rax
:00052 %14 = %8 * %12                       [Float][Float]
  00bb6:    	movq   xmm3,xmm6
  00bba:    	mulsd  xmm3,xmm2
:00053 %13 = %13 - %14                      [Float][Float]
  00bbe: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00bc5: 00 	test   rdi,0x1
  00bcc:    	jne    0x3d9e1
  00bd2: 00 	test   rdi,0x2
  00bd9:    	je     0xc16
  00bdf:    	xorps  xmm11,xmm11
  00be3: 00 	movabs rax,0x8000000000000002
  00bed:    	cmp    rdi,rax
  00bf0:    	je     0xc29
  00bf6:    	mov    rax,rdi
  00bf9:    	sar    rax,0x3f
  00bfd:    	add    rax,0x2
  00c01:    	and    rdi,0xfffffffffffffffc
  00c05:    	or     rdi,rax
  00c08:    	rol    rdi,0x3d
  00c0c:    	movq   xmm11,rdi
  00c11:    	jmp    0xc29
  00c16:    	call   0xffff903c
  00c1b:    	test   rax,rax
  00c1e:    	je     0x3d9e1
  00c24:    	movq   xmm11,xmm0
  00c29:    	subsd  xmm11,xmm3
:00054 @vz: Planet[IvarId(5)] = %13
  00c2e:    	movq   xmm0,xmm11
  00c33:    	call   0xffff9273
  00c38: ff 	mov    QWORD PTR [rbp-0x88],rax
  00c3f:    	mov    rdi,QWORD PTR [rbp-0x20]
  00c43: 00 	test   rdi,0x7
  00c4a:    	jne    0x3daf3
  00c50:    	cmp    DWORD PTR [rdi+0x4],0x25
  00c54:    	jne    0x3daf3
  00c5a:    	xor    rax,rax
  00c5d:    	mov    ax,WORD PTR [rdi+0x2]
  00c61:    	cmp    rax,0x3
  00c65:    	jne    0x3da50
  00c6b: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00c72:    	mov    QWORD PTR [rdi+0x38],rax
:00055 %14 = %5
  00c76:    	mov    rax,QWORD PTR [rbp-0x48]
  00c7a: ff 	mov    QWORD PTR [rbp-0x90],rax
:00056 %13 = %14.call vx()                  [Planet]
:00057 
  00c81: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00c88: 00 	test   rdi,0x7
  00c8f:    	jne    0x3dbb1
  00c95:    	cmp    DWORD PTR [rdi+0x4],0x25
  00c99:    	jne    0x3dbb1
  00c9f: 12 	cmp    DWORD PTR [rip+0xffffffffffffab36],0x12        # 0xffffb7dc
  00ca6:    	jne    0x3dbb1
  00cac:    	mov    esi,DWORD PTR [rip+0xefa]        # 0x1bac
  00cb2:    	cmp    esi,0xffffffff
  00cb5:    	je     0x3dc10
  00cbb:    	cmp    esi,0x6
  00cbe:    	jge    0xcdf
  00cc4:    	xor    rax,rax
  00cc7:    	mov    ax,WORD PTR [rdi+0x2]
  00ccb:    	cmp    rax,0x3
  00ccf:    	jne    0xcdf
  00cd5:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00cda:    	jmp    0xd5c
  00cdf:    	sub    rsp,0x40
  00ce3:    	movq   QWORD PTR [rsp],xmm2
  00ce8:    	movq   QWORD PTR [rsp+0x8],xmm4
  00cee:    	movq   QWORD PTR [rsp+0x10],xmm5
  00cf4:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cfa:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d00: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d07: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d0e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00d15: 94 	movabs rax,0x5594d4e95d70
  00d1f:    	call   rax
  00d21:    	movq   xmm2,QWORD PTR [rsp]
  00d26:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d2c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d32:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d38:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d3e: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00d45: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00d4c: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00d53:    	add    rsp,0x40
  00d57:    	jmp    0xd5c
  00d5c: ff 	mov    QWORD PTR [rbp-0x88],rax
:00059 %14 = %6 * %11                       [Float][Float]
  00d63:    	movq   xmm3,xmm4
  00d67:    	mulsd  xmm3,xmm8
:00060 %13 = %13 + %14                      [Float][Float]
  00d6c: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  00d73: 00 	test   rdi,0x1
  00d7a:    	jne    0x3dca5
  00d80: 00 	test   rdi,0x2
  00d87:    	je     0xdc4
  00d8d:    	xorps  xmm11,xmm11
  00d91: 00 	movabs rax,0x8000000000000002
  00d9b:    	cmp    rdi,rax
  00d9e:    	je     0xdd7
  00da4:    	mov    rax,rdi
  00da7:    	sar    rax,0x3f
  00dab:    	add    rax,0x2
  00daf:    	and    rdi,0xfffffffffffffffc
  00db3:    	or     rdi,rax
  00db6:    	rol    rdi,0x3d
  00dba:    	movq   xmm11,rdi
  00dbf:    	jmp    0xdd7
  00dc4:    	call   0xffff903c
  00dc9:    	test   rax,rax
  00dcc:    	je     0x3dca5
  00dd2:    	movq   xmm11,xmm0
  00dd7:    	addsd  xmm11,xmm3
:00061 _ = %5.call vx=(%13; 1)              [Planet]
:00062 
  00ddc:    	movq   xmm0,xmm11
  00de1:    	call   0xffff9273
  00de6: ff 	mov    QWORD PTR [rbp-0x88],rax
  00ded:    	mov    rdi,QWORD PTR [rbp-0x48]
  00df1: 00 	test   rdi,0x7
  00df8:    	jne    0x3dd14
  00dfe:    	cmp    DWORD PTR [rdi+0x4],0x25
  00e02:    	jne    0x3dd14
  00e08: 12 	cmp    DWORD PTR [rip+0xffffffffffffa9cd],0x12        # 0xffffb7dc
  00e0f:    	jne    0x3dd14
  00e15:    	mov    esi,DWORD PTR [rip+0xd99]        # 0x1bb4
  00e1b:    	cmp    esi,0xffffffff
  00e1e:    	je     0xeed
  00e24:    	cmp    esi,0x6
  00e27:    	jge    0xe4f
  00e2d:    	xor    rax,rax
  00e30:    	mov    ax,WORD PTR [rdi+0x2]
  00e34:    	cmp    rax,0x3
  00e38:    	jne    0xe4f
  00e3e: ff 	mov    rax,QWORD PTR [rbp-0x88]
  00e45:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e4a:    	jmp    0xfb4
  00e4f:    	sub    rsp,0x50
  00e53:    	movq   QWORD PTR [rsp],xmm2
  00e58:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e5e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e64:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e6a:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e70:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e76: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e7d: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00e84: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00e8b: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00e92: ff 	mov    rdx,QWORD PTR [rbp-0x88]
  00e99: 94 	movabs rax,0x5594d4e95fe0
  00ea3:    	call   rax
  00ea5:    	movq   xmm2,QWORD PTR [rsp]
  00eaa:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00eb0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00eb6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ebc:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00ec2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00ec8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00ecf: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00ed6: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00edd: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00ee4:    	add    rsp,0x50
  00ee8:    	jmp    0xfb4
  00eed:    	sub    rsp,0x50
  00ef1:    	movq   QWORD PTR [rsp],xmm2
  00ef6:    	movq   QWORD PTR [rsp+0x8],xmm3
  00efc:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f02:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f08:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f0e:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f14: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f1b: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  00f22: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00f29: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  00f30:    	mov    rsi,rdi
  00f33: 00 	mov    rdx,0x64
  00f3a: ff 	mov    rcx,QWORD PTR [rbp-0x88]
  00f41:    	mov    rdi,r12
  00f44: 00 	lea    r8,[rip+0xc65]        # 0x1bb0
  00f4b: 00 	lea    r9,[rip+0xc62]        # 0x1bb4
  00f52: 94 	movabs rax,0x5594d4efce60
  00f5c:    	call   rax
  00f5e:    	movq   xmm2,QWORD PTR [rsp]
  00f63:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f69:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f6f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f75:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00f7b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00f81: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00f88: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  00f8f: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  00f96: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  00f9d:    	add    rsp,0x50
  00fa1: 94 	movabs r13,0x5594d52dfa60
  00fab:    	test   rax,rax
  00fae:    	je     0xffff9003
:00064 %14 = %5
  00fb4:    	mov    rax,QWORD PTR [rbp-0x48]
  00fb8: ff 	mov    QWORD PTR [rbp-0x90],rax
:00065 %13 = %14.call vy()                  [Planet]
:00066 
  00fbf: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  00fc6: 00 	test   rdi,0x7
  00fcd:    	jne    0x3dd83
  00fd3:    	cmp    DWORD PTR [rdi+0x4],0x25
  00fd7:    	jne    0x3dd83
  00fdd: 12 	cmp    DWORD PTR [rip+0xffffffffffffa7f8],0x12        # 0xffffb7dc
  00fe4:    	jne    0x3dd83
  00fea:    	mov    esi,DWORD PTR [rip+0xbcc]        # 0x1bbc
  00ff0:    	cmp    esi,0xffffffff
  00ff3:    	je     0x3dde2
  00ff9:    	cmp    esi,0x6
  00ffc:    	jge    0x101d
  01002:    	xor    rax,rax
  01005:    	mov    ax,WORD PTR [rdi+0x2]
  01009:    	cmp    rax,0x3
  0100d:    	jne    0x101d
  01013:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01018:    	jmp    0x109a
  0101d:    	sub    rsp,0x40
  01021:    	movq   QWORD PTR [rsp],xmm2
  01026:    	movq   QWORD PTR [rsp+0x8],xmm4
  0102c:    	movq   QWORD PTR [rsp+0x10],xmm5
  01032:    	movq   QWORD PTR [rsp+0x18],xmm6
  01038:    	movq   QWORD PTR [rsp+0x20],xmm7
  0103e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01045: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0104c: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01053: 94 	movabs rax,0x5594d4e95d70
  0105d:    	call   rax
  0105f:    	movq   xmm2,QWORD PTR [rsp]
  01064:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0106a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01070:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01076:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0107c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01083: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0108a: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01091:    	add    rsp,0x40
  01095:    	jmp    0x109a
  0109a: ff 	mov    QWORD PTR [rbp-0x88],rax
:00068 %14 = %7 * %11                       [Float][Float]
  010a1:    	movq   xmm3,xmm5
  010a5:    	mulsd  xmm3,xmm8
:00069 %13 = %13 + %14                      [Float][Float]
  010aa: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  010b1: 00 	test   rdi,0x1
  010b8:    	jne    0x3de77
  010be: 00 	test   rdi,0x2
  010c5:    	je     0x1102
  010cb:    	xorps  xmm11,xmm11
  010cf: 00 	movabs rax,0x8000000000000002
  010d9:    	cmp    rdi,rax
  010dc:    	je     0x1115
  010e2:    	mov    rax,rdi
  010e5:    	sar    rax,0x3f
  010e9:    	add    rax,0x2
  010ed:    	and    rdi,0xfffffffffffffffc
  010f1:    	or     rdi,rax
  010f4:    	rol    rdi,0x3d
  010f8:    	movq   xmm11,rdi
  010fd:    	jmp    0x1115
  01102:    	call   0xffff903c
  01107:    	test   rax,rax
  0110a:    	je     0x3de77
  01110:    	movq   xmm11,xmm0
  01115:    	addsd  xmm11,xmm3
:00070 _ = %5.call vy=(%13; 1)              [Planet]
:00071 
  0111a:    	movq   xmm0,xmm11
  0111f:    	call   0xffff9273
  01124: ff 	mov    QWORD PTR [rbp-0x88],rax
  0112b:    	mov    rdi,QWORD PTR [rbp-0x48]
  0112f: 00 	test   rdi,0x7
  01136:    	jne    0x3dee6
  0113c:    	cmp    DWORD PTR [rdi+0x4],0x25
  01140:    	jne    0x3dee6
  01146: 12 	cmp    DWORD PTR [rip+0xffffffffffffa68f],0x12        # 0xffffb7dc
  0114d:    	jne    0x3dee6
  01153:    	mov    esi,DWORD PTR [rip+0xa6b]        # 0x1bc4
  01159:    	cmp    esi,0xffffffff
  0115c:    	je     0x122b
  01162:    	cmp    esi,0x6
  01165:    	jge    0x118d
  0116b:    	xor    rax,rax
  0116e:    	mov    ax,WORD PTR [rdi+0x2]
  01172:    	cmp    rax,0x3
  01176:    	jne    0x118d
  0117c: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01183:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01188:    	jmp    0x12f2
  0118d:    	sub    rsp,0x50
  01191:    	movq   QWORD PTR [rsp],xmm2
  01196:    	movq   QWORD PTR [rsp+0x8],xmm3
  0119c:    	movq   QWORD PTR [rsp+0x10],xmm4
  011a2:    	movq   QWORD PTR [rsp+0x18],xmm5
  011a8:    	movq   QWORD PTR [rsp+0x20],xmm6
  011ae:    	movq   QWORD PTR [rsp+0x28],xmm7
  011b4: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  011bb: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  011c2: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  011c9: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  011d0: ff 	mov    rdx,QWORD PTR [rbp-0x88]
  011d7: 94 	movabs rax,0x5594d4e95fe0
  011e1:    	call   rax
  011e3:    	movq   xmm2,QWORD PTR [rsp]
  011e8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  011ee:    	movq   xmm4,QWORD PTR [rsp+0x10]
  011f4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  011fa:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01200:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01206: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0120d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01214: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  0121b: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01222:    	add    rsp,0x50
  01226:    	jmp    0x12f2
  0122b:    	sub    rsp,0x50
  0122f:    	movq   QWORD PTR [rsp],xmm2
  01234:    	movq   QWORD PTR [rsp+0x8],xmm3
  0123a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01240:    	movq   QWORD PTR [rsp+0x18],xmm5
  01246:    	movq   QWORD PTR [rsp+0x20],xmm6
  0124c:    	movq   QWORD PTR [rsp+0x28],xmm7
  01252: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01259: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01260: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01267: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0126e:    	mov    rsi,rdi
  01271: 00 	mov    rdx,0x65
  01278: ff 	mov    rcx,QWORD PTR [rbp-0x88]
  0127f:    	mov    rdi,r12
  01282: 00 	lea    r8,[rip+0x937]        # 0x1bc0
  01289: 00 	lea    r9,[rip+0x934]        # 0x1bc4
  01290: 94 	movabs rax,0x5594d4efce60
  0129a:    	call   rax
  0129c:    	movq   xmm2,QWORD PTR [rsp]
  012a1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  012a7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  012ad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  012b3:    	movq   xmm6,QWORD PTR [rsp+0x20]
  012b9:    	movq   xmm7,QWORD PTR [rsp+0x28]
  012bf: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  012c6: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  012cd: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  012d4: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  012db:    	add    rsp,0x50
  012df: 94 	movabs r13,0x5594d52dfaf0
  012e9:    	test   rax,rax
  012ec:    	je     0xffff9003
:00073 %14 = %5
  012f2:    	mov    rax,QWORD PTR [rbp-0x48]
  012f6: ff 	mov    QWORD PTR [rbp-0x90],rax
:00074 %13 = %14.call vz()                  [Planet]
:00075 
  012fd: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01304: 00 	test   rdi,0x7
  0130b:    	jne    0x3df55
  01311:    	cmp    DWORD PTR [rdi+0x4],0x25
  01315:    	jne    0x3df55
  0131b: 12 	cmp    DWORD PTR [rip+0xffffffffffffa4ba],0x12        # 0xffffb7dc
  01322:    	jne    0x3df55
  01328:    	mov    esi,DWORD PTR [rip+0x89e]        # 0x1bcc
  0132e:    	cmp    esi,0xffffffff
  01331:    	je     0x3dfb4
  01337:    	cmp    esi,0x6
  0133a:    	jge    0x135b
  01340:    	xor    rax,rax
  01343:    	mov    ax,WORD PTR [rdi+0x2]
  01347:    	cmp    rax,0x3
  0134b:    	jne    0x135b
  01351:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01356:    	jmp    0x13d8
  0135b:    	sub    rsp,0x40
  0135f:    	movq   QWORD PTR [rsp],xmm2
  01364:    	movq   QWORD PTR [rsp+0x8],xmm4
  0136a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01370:    	movq   QWORD PTR [rsp+0x18],xmm6
  01376:    	movq   QWORD PTR [rsp+0x20],xmm7
  0137c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01383: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0138a: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01391: 94 	movabs rax,0x5594d4e95d70
  0139b:    	call   rax
  0139d:    	movq   xmm2,QWORD PTR [rsp]
  013a2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013a8:    	movq   xmm5,QWORD PTR [rsp+0x10]
  013ae:    	movq   xmm6,QWORD PTR [rsp+0x18]
  013b4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  013ba: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  013c1: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  013c8: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  013cf:    	add    rsp,0x40
  013d3:    	jmp    0x13d8
  013d8: ff 	mov    QWORD PTR [rbp-0x88],rax
:00077 %14 = %8 * %11                       [Float][Float]
  013df:    	movq   xmm3,xmm6
  013e3:    	mulsd  xmm3,xmm8
:00078 %13 = %13 + %14                      [Float][Float]
  013e8: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  013ef: 00 	test   rdi,0x1
  013f6:    	jne    0x3e049
  013fc: 00 	test   rdi,0x2
  01403:    	je     0x1440
  01409:    	xorps  xmm11,xmm11
  0140d: 00 	movabs rax,0x8000000000000002
  01417:    	cmp    rdi,rax
  0141a:    	je     0x1453
  01420:    	mov    rax,rdi
  01423:    	sar    rax,0x3f
  01427:    	add    rax,0x2
  0142b:    	and    rdi,0xfffffffffffffffc
  0142f:    	or     rdi,rax
  01432:    	rol    rdi,0x3d
  01436:    	movq   xmm11,rdi
  0143b:    	jmp    0x1453
  01440:    	call   0xffff903c
  01445:    	test   rax,rax
  01448:    	je     0x3e049
  0144e:    	movq   xmm11,xmm0
  01453:    	addsd  xmm11,xmm3
:00079 _ = %5.call vz=(%13; 1)              [Planet]
:00080 
  01458:    	movq   xmm0,xmm11
  0145d:    	call   0xffff9273
  01462: ff 	mov    QWORD PTR [rbp-0x88],rax
  01469:    	mov    rdi,QWORD PTR [rbp-0x48]
  0146d: 00 	test   rdi,0x7
  01474:    	jne    0x3e0b8
  0147a:    	cmp    DWORD PTR [rdi+0x4],0x25
  0147e:    	jne    0x3e0b8
  01484: 12 	cmp    DWORD PTR [rip+0xffffffffffffa351],0x12        # 0xffffb7dc
  0148b:    	jne    0x3e0b8
  01491:    	mov    esi,DWORD PTR [rip+0x73d]        # 0x1bd4
  01497:    	cmp    esi,0xffffffff
  0149a:    	je     0x1569
  014a0:    	cmp    esi,0x6
  014a3:    	jge    0x14cb
  014a9:    	xor    rax,rax
  014ac:    	mov    ax,WORD PTR [rdi+0x2]
  014b0:    	cmp    rax,0x3
  014b4:    	jne    0x14cb
  014ba: ff 	mov    rax,QWORD PTR [rbp-0x88]
  014c1:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  014c6:    	jmp    0x1630
  014cb:    	sub    rsp,0x50
  014cf:    	movq   QWORD PTR [rsp],xmm2
  014d4:    	movq   QWORD PTR [rsp+0x8],xmm3
  014da:    	movq   QWORD PTR [rsp+0x10],xmm4
  014e0:    	movq   QWORD PTR [rsp+0x18],xmm5
  014e6:    	movq   QWORD PTR [rsp+0x20],xmm6
  014ec:    	movq   QWORD PTR [rsp+0x28],xmm7
  014f2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014f9: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01500: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01507: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0150e: ff 	mov    rdx,QWORD PTR [rbp-0x88]
  01515: 94 	movabs rax,0x5594d4e95fe0
  0151f:    	call   rax
  01521:    	movq   xmm2,QWORD PTR [rsp]
  01526:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0152c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01532:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01538:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0153e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01544: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0154b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01552: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01559: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01560:    	add    rsp,0x50
  01564:    	jmp    0x1630
  01569:    	sub    rsp,0x50
  0156d:    	movq   QWORD PTR [rsp],xmm2
  01572:    	movq   QWORD PTR [rsp+0x8],xmm3
  01578:    	movq   QWORD PTR [rsp+0x10],xmm4
  0157e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01584:    	movq   QWORD PTR [rsp+0x20],xmm6
  0158a:    	movq   QWORD PTR [rsp+0x28],xmm7
  01590: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01597: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0159e: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  015a5: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  015ac:    	mov    rsi,rdi
  015af: 00 	mov    rdx,0x66
  015b6: ff 	mov    rcx,QWORD PTR [rbp-0x88]
  015bd:    	mov    rdi,r12
  015c0: 00 	lea    r8,[rip+0x609]        # 0x1bd0
  015c7: 00 	lea    r9,[rip+0x606]        # 0x1bd4
  015ce: 94 	movabs rax,0x5594d4efce60
  015d8:    	call   rax
  015da:    	movq   xmm2,QWORD PTR [rsp]
  015df:    	movq   xmm3,QWORD PTR [rsp+0x8]
  015e5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  015eb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  015f1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  015f7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  015fd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01604: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0160b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01612: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01619:    	add    rsp,0x50
  0161d: 94 	movabs r13,0x5594d52dfb80
  01627:    	test   rax,rax
  0162a:    	je     0xffff9003
:00082 %4 = %4 + 1: i16                     [Integer][Integer]
  01630:    	mov    rdi,QWORD PTR [rbp-0x40]
  01634: 00 	test   rdi,0x1
  0163b:    	je     0x3e127
  01641:    	add    rdi,0x2
  01645:    	jo     0x3e127
  0164b:    	mov    QWORD PTR [rbp-0x40],rdi
:00083 br =>:00000
  0164f:    	jmp    0x3e610
:00084 loop_end
:00085 %13 = @x: Planet[IvarId(0)]
  01654:    	mov    rdi,QWORD PTR [rbp-0x20]
  01658: 00 	test   rdi,0x7
  0165f:    	jne    0x3e1ac
  01665:    	cmp    DWORD PTR [rdi+0x4],0x25
  01669:    	jne    0x3e1ac
  0166f:    	xor    rax,rax
  01672:    	mov    ax,WORD PTR [rdi+0x2]
  01676:    	cmp    rax,0x3
  0167a:    	jne    0x3e196
  01680:    	mov    rax,QWORD PTR [rdi+0x10]
  01684: ff 	mov    QWORD PTR [rbp-0x88],rax
:00086 %14 = @vx: Planet[IvarId(3)]
  0168b:    	mov    rdi,QWORD PTR [rbp-0x20]
  0168f: 00 	test   rdi,0x7
  01696:    	jne    0x3e1dd
  0169c:    	cmp    DWORD PTR [rdi+0x4],0x25
  016a0:    	jne    0x3e1dd
  016a6:    	xor    rax,rax
  016a9:    	mov    ax,WORD PTR [rdi+0x2]
  016ad:    	cmp    rax,0x3
  016b1:    	jne    0x3e1c7
  016b7:    	mov    rax,QWORD PTR [rdi+0x28]
  016bb: ff 	mov    QWORD PTR [rbp-0x90],rax
:00087 %14 = %3 * %14                       [Float][Float]
  016c2:    	mov    rdi,QWORD PTR [rbp-0x38]
  016c6: 00 	test   rdi,0x1
  016cd:    	jne    0x3e1f8
  016d3: 00 	test   rdi,0x2
  016da:    	je     0x1716
  016e0:    	xorps  xmm2,xmm2
  016e3: 00 	movabs rax,0x8000000000000002
  016ed:    	cmp    rdi,rax
  016f0:    	je     0x1728
  016f6:    	mov    rax,rdi
  016f9:    	sar    rax,0x3f
  016fd:    	add    rax,0x2
  01701:    	and    rdi,0xfffffffffffffffc
  01705:    	or     rdi,rax
  01708:    	rol    rdi,0x3d
  0170c:    	movq   xmm2,rdi
  01711:    	jmp    0x1728
  01716:    	call   0xffff903c
  0171b:    	test   rax,rax
  0171e:    	je     0x3e1f8
  01724:    	movq   xmm2,xmm0
  01728: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  0172f: 00 	test   rdi,0x1
  01736:    	jne    0x3e207
  0173c: 00 	test   rdi,0x2
  01743:    	je     0x177f
  01749:    	xorps  xmm3,xmm3
  0174c: 00 	movabs rax,0x8000000000000002
  01756:    	cmp    rdi,rax
  01759:    	je     0x1791
  0175f:    	mov    rax,rdi
  01762:    	sar    rax,0x3f
  01766:    	add    rax,0x2
  0176a:    	and    rdi,0xfffffffffffffffc
  0176e:    	or     rdi,rax
  01771:    	rol    rdi,0x3d
  01775:    	movq   xmm3,rdi
  0177a:    	jmp    0x1791
  0177f:    	call   0xffff903c
  01784:    	test   rax,rax
  01787:    	je     0x3e207
  0178d:    	movq   xmm3,xmm0
  01791:    	mulsd  xmm3,xmm2
:00088 %13 = %13 + %14                      [Float][Float]
  01795: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0179c: 00 	test   rdi,0x1
  017a3:    	jne    0x3e216
  017a9: 00 	test   rdi,0x2
  017b0:    	je     0x17ec
  017b6:    	xorps  xmm4,xmm4
  017b9: 00 	movabs rax,0x8000000000000002
  017c3:    	cmp    rdi,rax
  017c6:    	je     0x17fe
  017cc:    	mov    rax,rdi
  017cf:    	sar    rax,0x3f
  017d3:    	add    rax,0x2
  017d7:    	and    rdi,0xfffffffffffffffc
  017db:    	or     rdi,rax
  017de:    	rol    rdi,0x3d
  017e2:    	movq   xmm4,rdi
  017e7:    	jmp    0x17fe
  017ec:    	call   0xffff903c
  017f1:    	test   rax,rax
  017f4:    	je     0x3e216
  017fa:    	movq   xmm4,xmm0
  017fe:    	addsd  xmm4,xmm3
:00089 @x: Planet[IvarId(0)] = %13
  01802:    	movq   xmm0,xmm4
  01806:    	call   0xffff9273
  0180b: ff 	mov    QWORD PTR [rbp-0x88],rax
  01812:    	mov    rdi,QWORD PTR [rbp-0x20]
  01816: 00 	test   rdi,0x7
  0181d:    	jne    0x3e27c
  01823:    	cmp    DWORD PTR [rdi+0x4],0x25
  01827:    	jne    0x3e27c
  0182d:    	xor    rax,rax
  01830:    	mov    ax,WORD PTR [rdi+0x2]
  01834:    	cmp    rax,0x3
  01838:    	jne    0x3e235
  0183e: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01845:    	mov    QWORD PTR [rdi+0x10],rax
:00090 %13 = @y: Planet[IvarId(1)]
  01849:    	mov    rdi,QWORD PTR [rbp-0x20]
  0184d: 00 	test   rdi,0x7
  01854:    	jne    0x3e312
  0185a:    	cmp    DWORD PTR [rdi+0x4],0x25
  0185e:    	jne    0x3e312
  01864:    	xor    rax,rax
  01867:    	mov    ax,WORD PTR [rdi+0x2]
  0186b:    	cmp    rax,0x3
  0186f:    	jne    0x3e2de
  01875:    	mov    rax,QWORD PTR [rdi+0x18]
  01879: ff 	mov    QWORD PTR [rbp-0x88],rax
:00091 %14 = @vy: Planet[IvarId(4)]
  01880:    	mov    rdi,QWORD PTR [rbp-0x20]
  01884: 00 	test   rdi,0x7
  0188b:    	jne    0x3e373
  01891:    	cmp    DWORD PTR [rdi+0x4],0x25
  01895:    	jne    0x3e373
  0189b:    	xor    rax,rax
  0189e:    	mov    ax,WORD PTR [rdi+0x2]
  018a2:    	cmp    rax,0x3
  018a6:    	jne    0x3e34b
  018ac:    	mov    rax,QWORD PTR [rdi+0x30]
  018b0: ff 	mov    QWORD PTR [rbp-0x90],rax
:00092 %14 = %3 * %14                       [Float][Float]
  018b7: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  018be: 00 	test   rdi,0x1
  018c5:    	jne    0x3e3a0
  018cb: 00 	test   rdi,0x2
  018d2:    	je     0x190e
  018d8:    	xorps  xmm3,xmm3
  018db: 00 	movabs rax,0x8000000000000002
  018e5:    	cmp    rdi,rax
  018e8:    	je     0x1920
  018ee:    	mov    rax,rdi
  018f1:    	sar    rax,0x3f
  018f5:    	add    rax,0x2
  018f9:    	and    rdi,0xfffffffffffffffc
  018fd:    	or     rdi,rax
  01900:    	rol    rdi,0x3d
  01904:    	movq   xmm3,rdi
  01909:    	jmp    0x1920
  0190e:    	call   0xffff903c
  01913:    	test   rax,rax
  01916:    	je     0x3e3a0
  0191c:    	movq   xmm3,xmm0
  01920:    	mulsd  xmm3,xmm2
:00093 %13 = %13 + %14                      [Float][Float]
  01924: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  0192b: 00 	test   rdi,0x1
  01932:    	jne    0x3e3af
  01938: 00 	test   rdi,0x2
  0193f:    	je     0x197b
  01945:    	xorps  xmm4,xmm4
  01948: 00 	movabs rax,0x8000000000000002
  01952:    	cmp    rdi,rax
  01955:    	je     0x198d
  0195b:    	mov    rax,rdi
  0195e:    	sar    rax,0x3f
  01962:    	add    rax,0x2
  01966:    	and    rdi,0xfffffffffffffffc
  0196a:    	or     rdi,rax
  0196d:    	rol    rdi,0x3d
  01971:    	movq   xmm4,rdi
  01976:    	jmp    0x198d
  0197b:    	call   0xffff903c
  01980:    	test   rax,rax
  01983:    	je     0x3e3af
  01989:    	movq   xmm4,xmm0
  0198d:    	addsd  xmm4,xmm3
:00094 @y: Planet[IvarId(1)] = %13
  01991:    	movq   xmm0,xmm4
  01995:    	call   0xffff9273
  0199a: ff 	mov    QWORD PTR [rbp-0x88],rax
  019a1:    	mov    rdi,QWORD PTR [rbp-0x20]
  019a5: 00 	test   rdi,0x7
  019ac:    	jne    0x3e415
  019b2:    	cmp    DWORD PTR [rdi+0x4],0x25
  019b6:    	jne    0x3e415
  019bc:    	xor    rax,rax
  019bf:    	mov    ax,WORD PTR [rdi+0x2]
  019c3:    	cmp    rax,0x3
  019c7:    	jne    0x3e3ce
  019cd: ff 	mov    rax,QWORD PTR [rbp-0x88]
  019d4:    	mov    QWORD PTR [rdi+0x18],rax
:00095 %13 = @z: Planet[IvarId(2)]
  019d8:    	mov    rdi,QWORD PTR [rbp-0x20]
  019dc: 00 	test   rdi,0x7
  019e3:    	jne    0x3e4ab
  019e9:    	cmp    DWORD PTR [rdi+0x4],0x25
  019ed:    	jne    0x3e4ab
  019f3:    	xor    rax,rax
  019f6:    	mov    ax,WORD PTR [rdi+0x2]
  019fa:    	cmp    rax,0x3
  019fe:    	jne    0x3e477
  01a04:    	mov    rax,QWORD PTR [rdi+0x20]
  01a08: ff 	mov    QWORD PTR [rbp-0x88],rax
:00096 %14 = @vz: Planet[IvarId(5)]
  01a0f:    	mov    rdi,QWORD PTR [rbp-0x20]
  01a13: 00 	test   rdi,0x7
  01a1a:    	jne    0x3e50c
  01a20:    	cmp    DWORD PTR [rdi+0x4],0x25
  01a24:    	jne    0x3e50c
  01a2a:    	xor    rax,rax
  01a2d:    	mov    ax,WORD PTR [rdi+0x2]
  01a31:    	cmp    rax,0x3
  01a35:    	jne    0x3e4e4
  01a3b:    	mov    rax,QWORD PTR [rdi+0x38]
  01a3f: ff 	mov    QWORD PTR [rbp-0x90],rax
:00097 %14 = %3 * %14                       [Float][Float]
  01a46: ff 	mov    rdi,QWORD PTR [rbp-0x90]
  01a4d: 00 	test   rdi,0x1
  01a54:    	jne    0x3e539
  01a5a: 00 	test   rdi,0x2
  01a61:    	je     0x1a9d
  01a67:    	xorps  xmm3,xmm3
  01a6a: 00 	movabs rax,0x8000000000000002
  01a74:    	cmp    rdi,rax
  01a77:    	je     0x1aaf
  01a7d:    	mov    rax,rdi
  01a80:    	sar    rax,0x3f
  01a84:    	add    rax,0x2
  01a88:    	and    rdi,0xfffffffffffffffc
  01a8c:    	or     rdi,rax
  01a8f:    	rol    rdi,0x3d
  01a93:    	movq   xmm3,rdi
  01a98:    	jmp    0x1aaf
  01a9d:    	call   0xffff903c
  01aa2:    	test   rax,rax
  01aa5:    	je     0x3e539
  01aab:    	movq   xmm3,xmm0
  01aaf:    	mulsd  xmm3,xmm2
:00098 %13 = %13 + %14                      [Float][Float]
  01ab3: ff 	mov    rdi,QWORD PTR [rbp-0x88]
  01aba: 00 	test   rdi,0x1
  01ac1:    	jne    0x3e548
  01ac7: 00 	test   rdi,0x2
  01ace:    	je     0x1b0a
  01ad4:    	xorps  xmm4,xmm4
  01ad7: 00 	movabs rax,0x8000000000000002
  01ae1:    	cmp    rdi,rax
  01ae4:    	je     0x1b1c
  01aea:    	mov    rax,rdi
  01aed:    	sar    rax,0x3f
  01af1:    	add    rax,0x2
  01af5:    	and    rdi,0xfffffffffffffffc
  01af9:    	or     rdi,rax
  01afc:    	rol    rdi,0x3d
  01b00:    	movq   xmm4,rdi
  01b05:    	jmp    0x1b1c
  01b0a:    	call   0xffff903c
  01b0f:    	test   rax,rax
  01b12:    	je     0x3e548
  01b18:    	movq   xmm4,xmm0
  01b1c:    	addsd  xmm4,xmm3
:00099 @z: Planet[IvarId(2)] = %13
  01b20:    	movq   xmm0,xmm4
  01b24:    	call   0xffff9273
  01b29: ff 	mov    QWORD PTR [rbp-0x88],rax
  01b30:    	mov    rdi,QWORD PTR [rbp-0x20]
  01b34: 00 	test   rdi,0x7
  01b3b:    	jne    0x3e5ae
  01b41:    	cmp    DWORD PTR [rdi+0x4],0x25
  01b45:    	jne    0x3e5ae
  01b4b:    	xor    rax,rax
  01b4e:    	mov    ax,WORD PTR [rdi+0x2]
  01b52:    	cmp    rax,0x3
  01b56:    	jne    0x3e567
  01b5c: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b63:    	mov    QWORD PTR [rdi+0x20],rax
:00100 ret %13
  01b67: ff 	mov    rax,QWORD PTR [rbp-0x88]
  01b6e:    	leave  
  01b6f:    	ret    
    finished compile. elapsed:134.8Âµs
--> start whole compile: <unnamed> FuncId(44) start:[00000] bytecode:0x5594d52e2730
offset:Pos(35856) code: 506 bytes  data: 62 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: sub    rsp,0x60
  00008: mov    rax,0x4
  0000f: mov    QWORD PTR [rbp-0x28],rax
  00013: mov    QWORD PTR [rbp-0x30],rax
  00017: mov    QWORD PTR [rbp-0x38],rax
  0001b: mov    QWORD PTR [rbp-0x40],rax
  0001f: mov    QWORD PTR [rbp-0x48],rax
  00023: mov    QWORD PTR [rbp-0x50],rax
  00027: mov    QWORD PTR [rbp-0x58],rax
:00000 %1 = 0: i32
  0002b: mov    QWORD PTR [rbp-0x28],0x1
  00033: jmp    0x3cab1
:00001 loop_start counter=5 jit-addr=00007f5507e06e30
:00002 %3 = dynvar(1, [%3])
  00038: mov    rax,QWORD PTR [rbp-0x8]
  0003c: lea    rax,[rax+0x8]
  00040: mov    rax,QWORD PTR [rax-0x38]
  00044: mov    QWORD PTR [rbp-0x38],rax
:00003 _%3 = %1 < %3                        [Integer][Integer]
:00004 condnotbr _%3 =>:00017
  00048: mov    rdi,QWORD PTR [rbp-0x28]
  0004c: mov    rsi,QWORD PTR [rbp-0x38]
  00050: test   rdi,0x1
  00057: je     0x3caca
  0005d: test   rsi,0x1
  00064: je     0x3caca
  0006a: cmp    rdi,rsi
  0006d: jge    0x1ec
:00005 %3 = const[BODIES]                   [[#<Planet:0x00007f5508000940 @vy=-0.0032869096389184198 @y=-0.00013130750079933367 @mass=39.47841760435743 @vx=-0.00032358898800056995 @x=-0.000013905827292376442 @vz=0.000022438292876768927 @z=9.200381049357173e-7>, #<Planet:0x00007f5508000980 @vy=2.8263031174640096 @y=-1.0474782271091317 @mass=0.03769367487038949 @vx=0.5442639457561657 @x=4.864134196541908 @vz=-0.023888073199784714 @z=-0.10459756826191563>, #<Planet:0x00007f55080009c0 @vy=1.8175171646613027 @y=4.1976219088660529 @mass=0.011286326131968767 @vx=-1.0270683968950188 @x=8.302528209195116 @vz=0.00920579215740602 @z=-0.4031670369967676>, #<Planet:0x00007f5508000a00 @vy=0.8717591506248125 @y=-15.076326703254687 @mass=0.0017237240570597112 @vx=1.0801878941891925 @x=12.937616149797283 @vz=-0.01078757583888223 @z=-0.22373975808645739>, #<Planet:0x00007f5508000a40 @vy=0.596196437795191 @y=-25.895489209976284 @mass=0.0020336868699246306 @vx=0.9782017294335872 @x=15.418838526272373 @vz=-0.03476631613823631 @z=0.17786827546411813>]]
  00073: mov    rax,QWORD PTR [rip+0xffffffffffff9b96]        # 0xffff9c10
  0007a: cmp    rax,QWORD PTR [rip+0x18f]        # 0x210
  00081: jne    0x3cae9
  00087: mov    rax,QWORD PTR [rip+0x172]        # 0x200
  0008e: mov    QWORD PTR [rbp-0x38],rax
:00006 %2 = %3.[%1]
  00092: mov    rdx,QWORD PTR [rbp-0x38]
  00096: mov    rcx,QWORD PTR [rbp-0x28]
  0009a: mov    rdi,rbx
  0009d: mov    rsi,r12
  000a0: movabs rax,0x5594d4eeecb0
  000aa: call   rax
  000ac: movabs r13,0x5594d52e27a0
  000b6: test   rax,rax
  000b9: je     0xffff742b
  000bf: mov    QWORD PTR [rbp-0x30],rax
:00007 %3 = %2
  000c3: mov    rax,QWORD PTR [rbp-0x30]
  000c7: mov    QWORD PTR [rbp-0x38],rax
:00008 %4 = const[BODIES]                   [[#<Planet:0x00007f5508000940 @vy=-0.0032869096389184198 @y=-0.00013130750079933367 @mass=39.47841760435743 @vx=-0.00032358898800056995 @x=-0.000013905827292376442 @vz=0.000022438292876768927 @z=9.200381049357173e-7>, #<Planet:0x00007f5508000980 @vy=2.8263031174640096 @y=-1.0474782271091317 @mass=0.03769367487038949 @vx=0.5442639457561657 @x=4.864134196541908 @vz=-0.023888073199784714 @z=-0.10459756826191563>, #<Planet:0x00007f55080009c0 @vy=1.8175171646613027 @y=4.1976219088660529 @mass=0.011286326131968767 @vx=-1.0270683968950188 @x=8.302528209195116 @vz=0.00920579215740602 @z=-0.4031670369967676>, #<Planet:0x00007f5508000a00 @vy=0.8717591506248125 @y=-15.076326703254687 @mass=0.0017237240570597112 @vx=1.0801878941891925 @x=12.937616149797283 @vz=-0.01078757583888223 @z=-0.22373975808645739>, #<Planet:0x00007f5508000a40 @vy=0.596196437795191 @y=-25.895489209976284 @mass=0.0020336868699246306 @vx=0.9782017294335872 @x=15.418838526272373 @vz=-0.03476631613823631 @z=0.17786827546411813>]]
  000cb: mov    rax,QWORD PTR [rip+0xffffffffffff9b3e]        # 0xffff9c10
  000d2: cmp    rax,QWORD PTR [rip+0x157]        # 0x230
  000d9: jne    0x3cb2f
  000df: mov    rax,QWORD PTR [rip+0x13a]        # 0x220
  000e6: mov    QWORD PTR [rbp-0x40],rax
:00009 %5 = dynvar(1, [%3])
  000ea: mov    rax,QWORD PTR [rbp-0x8]
  000ee: lea    rax,[rax+0x8]
  000f2: mov    rax,QWORD PTR [rax-0x38]
  000f6: mov    QWORD PTR [rbp-0x48],rax
:00010 %6 = dynvar(1, [%4])
  000fa: mov    rax,QWORD PTR [rbp-0x8]
  000fe: lea    rax,[rax+0x8]
  00102: mov    rax,QWORD PTR [rax-0x40]
  00106: mov    QWORD PTR [rbp-0x50],rax
:00011 %7 = %1 + 1: i16                     [Integer][Integer]
  0010a: mov    rdi,QWORD PTR [rbp-0x28]
  0010e: test   rdi,0x1
  00115: je     0x3cb75
  0011b: add    rdi,0x2
  0011f: jo     0x3cb75
  00125: mov    QWORD PTR [rbp-0x58],rdi
:00012 _ = %3.call move_from_i(%4; 4)       [Planet]
:00013 
  00129: mov    rdi,QWORD PTR [rbp-0x38]
  0012d: test   rdi,0x7
  00134: jne    0x3cb84
  0013a: cmp    DWORD PTR [rdi+0x4],0x25
  0013e: jne    0x3cb84
  00144: cmp    DWORD PTR [rip+0xffffffffffff9ab9],0x12        # 0xffff9c04
  0014b: jne    0x3cb84
  00151: mov    rax,QWORD PTR [rbp-0x38]
  00155: mov    QWORD PTR [rsp-0x30],rax
  0015a: mov    QWORD PTR [rsp-0x18],0x0
  00163: mov    rax,QWORD PTR [rbp-0x40]
  00167: mov    QWORD PTR [rsp-0x38],rax
  0016c: mov    rax,QWORD PTR [rbp-0x48]
  00170: mov    QWORD PTR [rsp-0x40],rax
  00175: mov    rax,QWORD PTR [rbp-0x50]
  00179: mov    QWORD PTR [rsp-0x48],rax
  0017e: mov    rax,QWORD PTR [rbp-0x58]
  00182: mov    QWORD PTR [rsp-0x50],rax
  00187: mov    QWORD PTR [rsp-0x28],0x0
  00190: movabs rax,0x100000002e
  0019a: mov    QWORD PTR [rsp-0x20],rax
  0019f: movabs r13,0x5594d52df670
  001a9: mov    rdi,0x4
  001b0: call   0xffffcb45
  001b5: movabs r13,0x5594d52e2810
  001bf: test   rax,rax
  001c2: je     0xffff742b
:00015 %1 = %1 + 1: i16                     [Integer][Integer]
  001c8: mov    rdi,QWORD PTR [rbp-0x28]
  001cc: test   rdi,0x1
  001d3: je     0x3cb93
  001d9: add    rdi,0x2
  001dd: jo     0x3cb93
  001e3: mov    QWORD PTR [rbp-0x28],rdi
:00016 br =>:00001
  001e7: jmp    0x3cba2
:00017 %3 = nil
  001ec: mov    QWORD PTR [rbp-0x38],0x4
:00018 loop_end
:00019 ret %3
  001f4: mov    rax,QWORD PTR [rbp-0x38]
  001f8: leave  
  001f9: ret    
    finished compile. elapsed:35Âµs
